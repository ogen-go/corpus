{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CheckPointSW/reputation-service-api"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/swagger.yaml",
			"byteSize": 9495,
			"content": "openapi: 3.0.1\ninfo:\n  title: Check Point Reputation Service API\n  description: |\n    ## Introduction\n    Leverage the Check Pointâ€™s threat intelligence to enrich your SIEM and SOAR solutions and to secure your business applications and websites by using simple RESTful APIs.  \n\n    | **Input** | **Output** |\n    |-------|--------|\n    | **URL, IP, File digest (md5/sha1/sha256)**   | classification and risk     |\n\n    ## Getting Started with the Reputation Service API  \n    ### 1. Get your API Key \n    [Contact us](mailto:TCAPI_SUPPORT@checkpoint.com) to get an API key\n    ### 2. Request a session token\n    The session token is valid for 30min.  \n    \n    Request example:  \n    ```linux\n    curl -X GET \"https://rep.checkpoint.com/rep-auth/service/v1.0/request\" -H \"Client-Key: XXXXXXXXXXXXX\"\n    ```\n\n    Response example:\n    ```\n    exp=XXXXXXX~acl=XXXX/*~hmac=XXXXXXXXX\n    ```\n    ### 3. Use your API Key and your session token for a Reputation Service Query\n    Note: you have to provide the resource to be queried both in the **message body** and in the **URL request**.  \n\n    Request example:  \n    ```linux\n    curl -X POST \"https://rep.checkpoint.com/url-rep/service/v2.0/query?resource=ynet.co.il\" -H \"accept: application/json\" -H \"Client-Key: XXXXXXX\" -H \"token: exp=XXXXX~acl=XXXXX\" -H \"Content-Type: application/json\" -d \"{\\\"request\\\":[{\\\"resource\\\":\\\"ynet.co.il\\\"}]}\"\n    ```\n\n    Response example:\n    ```json\n    {\n      \"response\": [\n        {\n          \"status\": {\n            \"code\": 2001,\n            \"label\": \"SUCCESS\",\n            \"message\": \"Succeeded to generate reputation\"\n          },\n          \"resource\": \"ynet.co.il\",\n          \"reputation\": {\n            \"classification\": \"Benign\",\n            \"severity\": \"N/A\",\n            \"confidence\": \"High\"\n          },\n          \"risk\": 0,\n          \"context\": {\n            \"categories\": [\n              {\n                \"id\": 24,\n                \"name\": \"News / Media\"\n              }\n            ],\n            \"indications\": [\n              \"The domain is popular among websites with good reputation\",\n              \"The domain has good reputation\",\n              \"The domain is popular in the world\",\n              \"Check Point's URL Filtering category is News / Media\",\n              \"VirusTotal vendors detected benign URLs of the domain\",\n              \"The IP address is involved with benign activity\"\n            ],\n            \"vt_positives\": 0,\n            \"safe\": true,\n            \"creation_date\": \"2001:01:07 00:00:00\",\n            \"related_ips\": [\n              {\n                \"ip\": \"104.123.201.212\",\n                \"classification\": \"Benign\",\n                \"confidence\": \"Low\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n    ```\n  version: 1.0.0\nservers:\n  - url: 'https://rep.checkpoint.com'\npaths:\n  /rep-auth/service/v1.0/request:\n    get:\n      summary: Request a session token\n      tags:\n        - Authentication\n      parameters:\n        - name: Client-Key\n          in: header\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: The token to use in reputation\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  '/{service}-rep/service/v2.0/query':\n    post:\n      summary: Query your resource\n      tags:\n        - Query\n      parameters:\n        - name: Client-Key\n          in: header\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: token\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: service\n          in: path\n          description: The service you want to query\n          required: true\n          schema:\n            type: string\n            enum:\n              - url\n              - ip\n              - file\n        - name: resource\n          in: query\n          description: The resource you want to query\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReputationRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReputationResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\ncomponents:\n  responses:\n    Unauthorized:\n      description: Invalid Client-Key header\n    BadRequest:\n      description: Bad Request - Check your resource\n    Forbidden:\n      description: Invalid token header\n    TooManyRequests:\n      description: Quota exceeded\n  schemas:\n    ReputationSingleRequest:\n      properties:\n        resource:\n          type: string\n    ReputationRequest:\n      properties:\n        request:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReputationSingleRequest'\n      required:\n        - request\n    ReputationResponse:\n      properties:\n        risk:\n          type: number\n          example: 0\n        resource:\n          type: string\n          example: 'http://google.com'\n        reputation:\n          $ref: '#/components/schemas/ReputationClassification'\n        status:\n          $ref: '#/components/schemas/ReputationStatus'\n        context:\n          $ref: '#/components/schemas/ReputationResponseContext'\n    ReputationClassification:\n      properties:\n        classification:\n          type: string\n          example: Benign\n        severity:\n          type: string\n          enum:\n            - N/A\n            - Low\n            - Medium\n            - High\n            - Critical\n        Confidence:\n          type: string\n          enum:\n            - Low\n            - Medium\n            - High\n    ReputationStatus:\n      properties:\n        code:\n          type: integer\n          enum:\n            - 2001\n            - 2002\n            - 2003\n        label:\n          type: string\n          enum:\n            - SUCCESS\n            - PARTIAL_SUCCESS\n            - FAILED\n        message:\n          type: string\n          enum:\n            - Succeeded to generate reputation\n            - Some vendors are unavailable\n            - Failed to process\n    ReputationResponseContext:\n      description: 'In parentheses, the service returning the field'\n      type: object\n      properties:\n        asn:\n          type: number\n          description: ASN of the IP (IP)\n        as_owner:\n          type: string\n          description: ASN owner of the IP (IP)\n        safe:\n          type: boolean\n          description: exists and true if certified safe (URL)\n        malware_family:\n          type: string\n          description: the malware family associated with the resource  (URL/FILE/IP)\n        protection_name:\n          type: string\n          description: \u003e-\n            The protection name returned from Malware Service / AntiVirus\n            (URL/FILE)\n        redirections:\n          type: array\n          description: The redirections of the resource (URL)\n          items:\n            type: string\n        malware_types:\n          type: array\n          description: The malware types based on VT scans (FILE)\n          items:\n            type: string\n        categories:\n          type: array\n          description: URLF categories (URL)\n          items:\n            type: string\n        google_safe_browsing_categories:\n          type: array\n          description: Google safe browsing categories (URL)\n          items:\n            type: string\n        location:\n          type: object\n          description: geo location information  (IP)\n          properties:\n            region:\n              type: string\n            city:\n              type: string\n            postalCode:\n              type: string\n            latitude:\n              type: number\n            longitude:\n              type: number\n            dma_code:\n              type: integer\n            area_code:\n              type: integer\n            metro_code:\n              type: integer\n        related_resources:\n          type: object\n          description: (FILE)\n          properties:\n            similar_files_found:\n              description: How many similar files found\n              type: number\n            similar_files_details:\n              description: Information about the similar file\n              type: object\n              properties:\n                md5:\n                  type: string\n                ssdeep:\n                  type: string\n                ssdeep_similarity:\n                  type: string\n                file_type:\n                  type: string\n                classification:\n                  type: string\n                malware_family:\n                  type: string\n                confidence:\n                  type: string\n        phishing:\n          type: object\n          description: (URL)\n          properties:\n            brand:\n              description: brand of the phishing resource\n              type: string\n            type:\n              description: type of brand\n              type: string\n            domain:\n              description: the primary domain\n              type: string",
			"canonicalURL": "/github.com/CheckPointSW/reputation-service-api@3970a44bd15c9afca585b6d71c73fbf7b995df01/-/blob/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CheckPointSW/reputation-service-api/blob/3970a44bd15c9afca585b6d71c73fbf7b995df01/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}