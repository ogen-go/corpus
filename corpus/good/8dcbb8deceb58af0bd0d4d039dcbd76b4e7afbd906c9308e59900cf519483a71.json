{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/obono.at/1.4.0.0/openapi.yaml",
			"byteSize": 28463,
			"content": "openapi: 3.0.0\nservers:\n  - url: /api/v1\ninfo:\n  contact:\n    email: info@obono.at\n    name: CodeWerkstatt OG\n    url: https://obono.at\n    x-twitter: obono_at\n  description: |\n    Provides a RESTful API for interacting with virtual cash registers and creating receipts that are conform with the Registrierkassensicherheitsverordnung (RKSV).\n\n    You may find our [automatically generated clients](./clients) for various programming languages and environments helpful...\n  license:\n    name: Creative Commons Attribution NonCommercial 4.0 (CC-BY-NC)\n    url: https://creativecommons.org/licenses/by-nc/4.0/legalcode\n  title: obono RKSV API\n  version: 1.4.0.0\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://twitter.com/obono_at/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://app.obono.at/api/docs/api.yml\n      version: \"3.0\"\n  x-providerName: obono.at\nsecurity:\n  - jwt: []\ntags:\n  - description: resources concerning a \"Registrierkasse\"\n    name: registrierkasse\n  - description: resources concerning a \"Beleg\"\n    name: beleg\n  - description: authentication and authorization\n    name: auth\npaths:\n  /auth:\n    get:\n      description: Request a JWT access token using your obono username and password.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthResult\"\n          description: The JWT `accessToken` to use for accessing secured resourced as well as the `registrierkassenUuid` of the corresponding \"Registrierkasse\".\n      security:\n        - basicAuth: []\n      tags:\n        - auth\n  \"/belege/{belegUuid}\":\n    get:\n      description: Retrieves a particular `Beleg` from the \"Datenerfassungsprotokoll\".\n      parameters:\n        - description: The `_uuid` of the `Beleg` to fetch.\n          in: path\n          name: belegUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Beleg\"\n          description: The requested `Beleg` resource.\n        \"404\":\n          description: The requested `Beleg` resource does not exist.\n      security: []\n      tags:\n        - beleg\n  \"/export/csv/registrierkassen/{registrierkasseUuid}/belege\":\n    get:\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to export.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: Only return results that were saved before the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: before\n          schema:\n            type: string\n        - description: Only return results that were saved after the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: after\n          schema:\n            type: string\n        - description: Export `Posten` instead of `Belegdaten`.\n          in: query\n          name: posten\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: The exported data of a particular `Registrierkasse` in its CSV representation.\n      tags:\n        - export\n  \"/export/dep131/registrierkassen/{registrierkasseUuid}/belege\":\n    get:\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to export.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: Only return results that were saved before the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: before\n          schema:\n            type: string\n        - description: Only return results that were saved after the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: after\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The exported data of a particular `Registrierkasse` in its DEP131 / CSV representation.\n      tags:\n        - export\n  \"/export/dep7/registrierkassen/{registrierkasseUuid}/belege\":\n    get:\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to export.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: Only return results that were saved before the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: before\n          schema:\n            type: string\n        - description: Only return results that were saved after the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: after\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The exported data of a particular `Registrierkasse` in its DEP7 representation.\n      tags:\n        - export\n  \"/export/gobd/registrierkassen/{registrierkasseUuid}\":\n    get:\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to export.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: Only return results that were saved before the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: before\n          schema:\n            type: string\n        - description: Only return results that were saved after the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: after\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The exported data of a particular `Registrierkasse` in its GoBD representation.\n      tags:\n        - export\n  \"/export/html/belege/{belegUuid}\":\n    get:\n      parameters:\n        - description: The `_uuid` of a particular `Beleg` to export.\n          in: path\n          name: belegUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A particular `Beleg` in its HTML representation.\n      security: []\n      tags:\n        - export\n  \"/export/pdf/belege/{belegUuid}\":\n    get:\n      parameters:\n        - description: The `_uuid` of a particular `Beleg` to export.\n          in: path\n          name: belegUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A particular `Beleg` in its PDF representation.\n      security: []\n      tags:\n        - export\n  \"/export/qr/belege/{belegUuid}\":\n    get:\n      parameters:\n        - description: The `_uuid` of a particular `Beleg` to export.\n          in: path\n          name: belegUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The RKSV QR-Code as PNG file.\n      security: []\n      tags:\n        - export\n  \"/export/thermal-print/belege/{belegUuid}\":\n    get:\n      parameters:\n        - description: The `_uuid` of a particular `Beleg` to export.\n          in: path\n          name: belegUuid\n          required: true\n          schema:\n            type: string\n        - description: Should the RKSV QR code should be rendered?\n          in: query\n          name: qr\n          schema:\n            default: true\n            type: boolean\n        - description: Number of characters per line.\n          in: query\n          name: width\n          schema:\n            default: 42\n            type: integer\n        - description: The thermal printer dialect.\n          in: query\n          name: dialect\n          schema:\n            default: escpos\n            enum:\n              - escpos\n              - escposlite\n              - star\n              - text\n            type: string\n        - description: The encoding of the binary data.\n          in: query\n          name: encoding\n          schema:\n            default: raw\n            enum:\n              - raw\n              - base64\n            type: string\n      responses:\n        \"200\":\n          description: A particular `Beleg` in its ESC/POS or STAR representation.\n      security: []\n      tags:\n        - export\n  \"/export/xls/registrierkassen/{registrierkasseUuid}/belege\":\n    get:\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to export.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: Only return results that were saved before the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: before\n          schema:\n            type: string\n        - description: Only return results that were saved after the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: after\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The exported data of a particular `Registrierkasse` in its Microsoft Excel representation.\n      tags:\n        - export\n  \"/registrierkassen/{registrierkasseUuid}\":\n    get:\n      description: Returns information about a particular `Registrierkasse`.\n      operationId: getRegistrierkasse\n      parameters:\n        - description: The `_uuid` of a particular `Registrierkasse` to fetch.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Registrierkasse\"\n          description: Information about a particular `Registrierkasse`.\n        \"404\":\n          description: This particular `Registrierkasse` does not exist.\n      tags:\n        - registrierkasse\n  \"/registrierkassen/{registrierkasseUuid}/abschluss\":\n    post:\n      description: Generates an `Abschlussbeleg`.\n      operationId: createAbschluss\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to retrieve the `Beleg` collection.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Abschlussbelegdaten\"\n        description: An object that contains all data for a particular `Abschlussbeleg`.\n        required: true\n      responses:\n        \"201\":\n          description: The `Abschlussbeleg` has been created, signed and added to the \"Datenerfassungsprotokoll\".\n          headers:\n            Location:\n              description: The URL (`_href`) of the newly created `Beleg` resource.\n              schema:\n                format: url\n                type: string\n      tags:\n        - beleg\n  \"/registrierkassen/{registrierkasseUuid}/belege\":\n    get:\n      description: Retrieves the `Beleg` collection from the \"Datenerfassungsprotokoll\".\n      operationId: getBelege\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to retrieve the `Beleg` collection.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: Determines the format of the `Beleg` collection.\n          in: query\n          name: format\n          required: true\n          schema:\n            default: export\n            enum:\n              - export\n              - beleg\n              - uuidlist\n            type: string\n        - description: Determines the sorting order.\n          in: query\n          name: order\n          schema:\n            default: asc\n            enum:\n              - asc\n              - desc\n            type: string\n        - description: Limits the number of returned results.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Skips the specified number of results from the result set.\n          in: query\n          name: offset\n          schema:\n            default: 0\n            type: integer\n        - description: Only return results that where saved before the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: before\n          schema:\n            type: string\n        - description: Only return results that where saved after the specified date-time string (i.e., anything that `Date.parse()` can parse).\n          in: query\n          name: after\n          schema:\n            type: string\n        - description: Only return results that have at least a particular `Belegnummer`.\n          in: query\n          name: gte\n          schema:\n            type: integer\n        - description: Only return results that have at most a particular `Belegnummer`.\n          in: query\n          name: lte\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Belege\"\n          description: The `Beleg` collection from the \"Datenerfassungsprotokoll\".\n      tags:\n        - beleg\n  \"/registrierkassen/{registrierkasseUuid}/belege/{belegUuid}\":\n    get:\n      description: Retrieves a particular `Beleg` from the \"Datenerfassungsprotokoll\".\n      operationId: getBeleg\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` that contains the requested `Beleg`.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: The `_uuid` of the `Beleg` to fetch.\n          in: path\n          name: belegUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Beleg\"\n          description: The requested `Beleg` resource.\n        \"404\":\n          description: The requested `Beleg` resource does not exist.\n      tags:\n        - beleg\n    put:\n      description: Signs a receipt and stores it in the \"Datenerfassungsprotokoll\".\n      operationId: addBeleg\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to use for signing data.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - description: The `_uuid` of the `Beleg` to store.\n          in: path\n          name: belegUuid\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Belegdaten\"\n        description: An object that contains all data for a particular `Beleg` and is formatted according to RKSV \"Signaturformat\".\n        required: true\n      responses:\n        \"201\":\n          description: The `Beleg` has been signed and added to the \"Datenerfassungsprotokoll\".\n          headers:\n            Location:\n              description: The URL (`_href`) of the newly created `Beleg` resource.\n              schema:\n                format: url\n                type: string\n        \"400\":\n          description: The provided request payload is invalid i.e. not conform the the JSON schema.\n        \"403\":\n          description: Access token is either missing or invalid. Be sure to include the Authorization HTTP header.\n        \"409\":\n          description: A `Beleg` with this particular `belegUuid` already exists.\n        \"415\":\n          description: The provided request payload is not JSON encoded.\n        \"429\":\n          description: Request limit exceeded.\n        \"500\":\n          description: The receipt could not be signed either because the HSM delivered invalid data or the request signing request timed out (currently after 10 seconds).\n      tags:\n        - beleg\n  \"/registrierkassen/{registrierkasseUuid}/dep\":\n    get:\n      description: Generates a DEP file.\n      operationId: getDEP\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse` to retrieve the DEP file.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The DEP file.\n      tags:\n        - registrierkasse\n  \"/registrierkassen/{registrierkasseUuid}/monatsbelege\":\n    get:\n      description: Returns a list of `Monatsbelege`.\n      operationId: getMonatsbelege\n      parameters:\n        - description: The `_uuid` of the `Registrierkasse`.\n          in: path\n          name: registrierkasseUuid\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: year\n          schema:\n            type: integer\n        - in: query\n          name: month\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Monatsbeleg\"\n                type: array\n          description: Information about `Monatsbelege`.\n      tags:\n        - monatsbelege\ncomponents:\n  schemas:\n    Abschlussbelegdaten:\n      properties:\n        Abschluss-Beginn-Datum-Uhrzeit:\n          format: iso8601-date-time\n          type: string\n        Abschluss-Ende-Datum-Uhrzeit:\n          format: iso8601-date-time\n          type: string\n      required:\n        - Abschluss-Beginn-Datum-Uhrzeit\n        - Abschluss-Ende-Datum-Uhrzeit\n      type: object\n    AuthResult:\n      properties:\n        accessToken:\n          type: string\n        registrierkasseUuid:\n          format: uuid\n          type: string\n      type: object\n    Beleg:\n      properties:\n        Beleg-Codes:\n          items:\n            type: string\n          type: array\n        Beleg-Typen:\n          items:\n            enum:\n              - Belegkreisinitialisierung\n              - Kassenbericht\n              - Monatsabschluss\n              - Startbeleg\n              - Storno\n              - Systembeleg\n              - Training\n            type: string\n          type: array\n        Belegdaten:\n          $ref: \"#/components/schemas/SignierteBelegdaten\"\n        JWS:\n          description: The signed `Beleg` as a JWS signature token.\n          format: jws\n          type: string\n        QR:\n          description: The portion of the `JWS` token to be used for generating QR codes.\n          type: string\n        QR-Link:\n          description: A hyperlink that retrieves the `QR` data.\n          format: url\n          type: string\n        Registrierkasse-UUID:\n          description: The `_uuid` of the `Registrierkasse` that has issued this `Beleg`.\n          format: uuid\n          type: string\n        Signaturerstellungseinheit-UUID:\n          description: The `_uuid` of the `Signaturerstellungseinheit` that has signed this `Beleg`.\n          format: uuid\n          type: string\n        _href:\n          description: URL of the particular `Beleg` instance.\n          format: url\n          type: string\n        _uuid:\n          description: Unique ID of the particular `Beleg` instance.\n          type: string\n      type: object\n    Belegdaten:\n      description: The `Beleg` to be signed by the \"Signaturerstellungseinheit\" and stored in the \"Datenerfassungsprotokoll\".\n      properties:\n        Externer-Beleg-Belegkreis:\n          type: string\n        Externer-Beleg-Bezeichnung:\n          type: string\n        Externer-Beleg-Referenz:\n          type: string\n        Kunde:\n          type: string\n        Notizen:\n          items:\n            type: string\n          type: array\n        Posten:\n          items:\n            $ref: \"#/components/schemas/Posten\"\n          type: array\n        Rabatte:\n          items:\n            $ref: \"#/components/schemas/Rabatt\"\n          type: array\n        Storno:\n          description: Storno?\n          type: boolean\n        Storno-Beleg-UUID:\n          description: The `Beleg-UUID` property of the `Beleg` to be cancelled\n          format: uuid\n          type: string\n        Storno-Text:\n          type: string\n        Training:\n          description: Training?\n          type: boolean\n        Unternehmen-Adresse1:\n          type: string\n        Unternehmen-Adresse2:\n          type: string\n        Unternehmen-Fusszeile:\n          type: string\n        Unternehmen-ID:\n          type: string\n        Unternehmen-ID-Typ:\n          enum:\n            - steuernummer\n            - uid\n            - gln\n          type: string\n        Unternehmen-Kopfzeile:\n          type: string\n        Unternehmen-Name:\n          type: string\n        Unternehmen-Ort:\n          type: string\n        Unternehmen-PLZ:\n          type: string\n        Zahlungen:\n          items:\n            $ref: \"#/components/schemas/Zahlung\"\n          type: array\n      type: object\n    Belege:\n      allOf:\n        - $ref: \"#/components/schemas/Belegformat\"\n        - $ref: \"#/components/schemas/Exportformat\"\n      type: object\n    Belegformat:\n      properties:\n        Belege:\n          items:\n            $ref: \"#/components/schemas/Beleg\"\n          type: array\n      type: object\n    Exportformat:\n      properties:\n        Belege-Gruppe:\n          items:\n            properties:\n              Belege-kompakt:\n                items:\n                  format: base64\n                  type: string\n                minItems: 1\n                type: array\n              Signaturzertifikat:\n                format: base64\n                type: string\n              Zertifizierungsstellen:\n                items:\n                  format: base64\n                  type: string\n                minItems: 1\n                type: array\n            required:\n              - Signaturzertifikat\n              - Zertifizierungsstellen\n              - Belege-kompakt\n            type: object\n          minItems: 1\n          type: array\n      type: object\n    Monatsbeleg:\n      properties:\n        Beleg-UUID:\n          format: uuid\n          type: string\n        FON-Geprueft-Datum-Uhrzeit:\n          format: iso8601-date-time\n          type: string\n        FON-Geprueft-Erfolgreich:\n          type: boolean\n        Jahr:\n          type: integer\n        Monat:\n          type: integer\n      type: object\n    Posten:\n      properties:\n        Bezeichnung:\n          type: string\n        BruttoBetrag:\n          description: The amount in cents\n          type: integer\n        Externer-Beleg-Belegkreis:\n          type: string\n        Externer-Beleg-Bezeichnung:\n          type: string\n        Externer-Beleg-Referenz:\n          type: string\n        Menge:\n          type: integer\n        NettoBetrag:\n          description: The amount in cents\n          type: integer\n        Satz:\n          enum:\n            - NORMAL\n            - ERMAESSIGT1\n            - ERMAESSIGT2\n            - BESONDERS\n            - \"NULL\"\n          type: string\n      required:\n        - Bezeichnung\n        - Satz\n        - Menge\n        - NettoBetrag\n        - BruttoBetrag\n      type: object\n    Rabatt:\n      properties:\n        Betrag-Brutto:\n          description: The amount in cents\n          type: integer\n        Betrag-Netto:\n          description: The amount in cents\n          type: integer\n        Bezeichnung:\n          type: string\n        Satz:\n          enum:\n            - NORMAL\n            - ERMAESSIGT1\n            - ERMAESSIGT2\n            - BESONDERS\n            - \"NULL\"\n          type: string\n      required:\n        - Bezeichnung\n        - Betrag-Netto\n        - Betrag-Brutto\n      type: object\n    Registrierkasse:\n      properties:\n        Benutzerschluessel:\n          description: The base64 encoded AES 256 key used for encrypting the \"Umsatzzaehler\".\n          format: base64\n          type: string\n        Kassen-ID:\n          description: The (RKSV) \"Kassenidentifikationsnummer\" of this particular `Registrierkasse`.\n          type: string\n        Signaturerstellungseinheit-UUID:\n          description: The `_uuid` of the paired \"Signaturerstellungseinheit\".\n          format: uuid\n          type: string\n        _href:\n          description: URL of the particular `Registrierkasse` instance.\n          format: url\n          type: string\n        _uuid:\n          description: Unique ID of the particular `Registrierkasse` instance.\n          type: string\n      type: object\n    SignierteBelegdaten:\n      description: The complete `Beleg` that has been signed by the \"Signaturerstellungseinheit\" and stored in the \"Datenerfassungsprotokoll\".\n      properties:\n        Beleg-Datum-Uhrzeit:\n          type: string\n        Belegnummer:\n          type: string\n        Betrag-Brutto:\n          type: integer\n        Betrag-Netto:\n          type: integer\n        Betrag-Satz-Besonders-Brutto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Besonders-Netto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Ermaessigt-1-Brutto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Ermaessigt-1-Netto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Ermaessigt-2-Brutto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Ermaessigt-2-Netto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Normal-Brutto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Normal-Netto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Null-Brutto:\n          description: The total amount in cents\n          type: integer\n        Betrag-Satz-Null-Netto:\n          description: The total amount in cents\n          type: integer\n        Externer-Beleg-Belegkreis:\n          type: string\n        Externer-Beleg-Bezeichnung:\n          type: string\n        Externer-Beleg-Referenz:\n          type: string\n        Kassen-ID:\n          type: string\n        Kunde:\n          type: string\n        Notizen:\n          items:\n            type: string\n          type: array\n        Posten:\n          items:\n            $ref: \"#/components/schemas/Posten\"\n          type: array\n        Rabatte:\n          items:\n            $ref: \"#/components/schemas/Rabatt\"\n          type: array\n        Storno:\n          description: Storno?\n          type: boolean\n        Storno-Beleg-UUID:\n          description: The `Beleg-UUID` property of the `Beleg` to be cancelled\n          format: uuid\n          type: string\n        Storno-Text:\n          type: string\n        Training:\n          description: Training?\n          type: boolean\n        Unternehmen-Adresse1:\n          type: string\n        Unternehmen-Adresse2:\n          type: string\n        Unternehmen-Fusszeile:\n          type: string\n        Unternehmen-ID:\n          type: string\n        Unternehmen-ID-Typ:\n          enum:\n            - steuernummer\n            - uid\n            - gln\n          type: string\n        Unternehmen-Kopfzeile:\n          type: string\n        Unternehmen-Name:\n          type: string\n        Unternehmen-Ort:\n          type: string\n        Unternehmen-PLZ:\n          type: string\n        Zahlungen:\n          items:\n            $ref: \"#/components/schemas/Zahlung\"\n          type: array\n        Zertifikat-Seriennummer:\n          type: string\n      type: object\n    Zahlung:\n      properties:\n        Betrag:\n          description: The amount in cents\n          type: integer\n        Bezeichnung:\n          type: string\n        Referenz:\n          type: string\n      required:\n        - Bezeichnung\n        - Betrag\n      type: object\n  securitySchemes:\n    basicAuth:\n      description: HTTP Basic Authentication.\n      scheme: basic\n      type: http\n    jwt:\n      description: A JSON Web Token (JWT) used for access control and authorization.\n      in: header\n      name: Authorization\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/obono.at/1.4.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/obono.at/1.4.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}