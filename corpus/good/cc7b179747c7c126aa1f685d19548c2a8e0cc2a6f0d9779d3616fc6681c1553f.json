{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fredlcore/BSB-LAN"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 33575,
			"content": "openapi: 3.0.2\ninfo:\n  title: BSB-LAN API\n  version: '2.0.1'\n  description: BSB-LAN Json API Specification\n  termsOfService: ''\n  contact:\n    name: BSB-LAN\n    url: 'https://github.com/fredlcore/BSB-LAN'\nservers:\n  - url: http://bsb-lan\ntags:\n  - name: 'General'\n  - name: 'Parameter'\n  - name: 'Category'\n  - name: 'Configuration'\npaths:\n  /JC:\n    post:\n      summary: List parameter definitions\n      description: ''\n      operationId: listParameterDefinitionsUsingPOST\n      tags:\n        - 'Parameter'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParameterFilterList'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterDefinitionMap'\n\n  /JC={parameterIds}:\n    get:\n      summary: 'List parameter definitions'\n      description: ''\n      operationId: listParameterDefinitionsUsingGET\n      tags:\n        - 'Parameter'\n      parameters:\n        - name: parameterIds\n          in: path\n          required: true\n          description: One or more comma separated parameter ids\n          schema:\n            type: string\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterDefinitionMap'\n\n  /JI:\n    get:\n      summary: 'Query configuration of BSB-LAN'\n      description: ''\n      operationId: getInfo\n      tags:\n        - 'General'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralInfo'\n\n  /JK={categoryId}:\n    get:\n      summary: 'Query a specific category'\n      description: ''\n      operationId: getCategory\n      tags:\n        - 'Category'\n      parameters:\n        - name: categoryId\n          in: path\n          required: true\n          description: 'ID of category'\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '401':\n          description: 'Unauthorized'\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterDefinitionMap'\n\n  /JK=ALL:\n    get:\n      summary: 'Get all categories'\n      description: ''\n      operationId: getCategories\n      tags:\n        - 'Category'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryMap'\n\n  /JL:\n    get:\n      summary: 'Get all BSB-LAN configuration values'\n      description: 'For the usage of this function the module \"JSONCONFIG\" (see file BSB_lan_config.h) has to be compiled!'\n      operationId: getConfiguration\n      tags:\n        - 'Configuration'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationList'\n\n  /JQ:\n    post:\n      summary: List parameters\n      description: ''\n      operationId: listParametersPost\n      tags:\n        - 'Parameter'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParameterFilterList'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterMap'\n\n  /JQ={parameterIds}:\n    get:\n      summary: List parameters\n      description: ''\n      operationId: listParameters\n      tags:\n        - 'Parameter'\n      parameters:\n        - name: parameterIds\n          in: path\n          required: true\n          description: One or more comma separated parameter ids\n          schema:\n            type: string\n          example:\n            700,710\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterMap'\n\n  /JR:\n    post:\n      summary: 'Queries the reset/default-value of parameter'\n      description: 'Within the integrated operational unit of the heating system there arereset options available for some parameters. A reset is done by asking the system for the reset value and setting it afterwards (JSON: via/JS).'\n      operationId: getResetValuePost\n      tags:\n        - 'Parameter'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetValueFilterList'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetValueMap'\n\n  /JR={parameterIds}:\n    get:\n      summary: 'Queries the reset/default-value of parameter'\n      description: 'Within the integrated operational unit of the heating system there arereset options available for some parameters. A reset is done by asking the system for the reset value and setting it afterwards (JSON: via/JS).'\n      operationId: getResetValue\n      tags:\n        - 'Parameter'\n      parameters:\n        - name: parameterIds\n          in: path\n          required: true\n          description: One or more comma separated parameter ids\n          schema:\n            type: string\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetValueMap'\n\n  /JS:\n    post:\n      summary: 'Write parameter value'\n      description: ''\n      operationId: writeParameter\n      tags:\n        - 'Parameter'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParameterWrite'\n\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterWriteResult'\n\n  /JV:\n    get:\n      summary: Queries the JSON-API version\n      description: ''\n      operationId: getApiVersion\n      tags:\n        - 'General'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiVersion'\n\n  /JW:\n    post:\n      summary: 'Write new BSB-LAN configuration values'\n      description: 'For the usage of this function the module \"JSONCONFIG\" (see file BSB_lan_config.h) has to be compiled!'\n      operationId: writeConfiguration\n      tags:\n        - 'Configuration'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigurationWriteList'\n      responses:\n        '401':\n          description: Unauthorized\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationWriteResultMap'\n\ncomponents:\n  schemas:\n    ApiVersion:\n      title: ApiVersion\n      description: 'Object containing API Version'\n      type: object\n      properties:\n        api_version:\n          type: string\n      example:\n        api_version: '2.0'\n\n    Average:\n      title: Average\n      description: 'For this object 24h average values will be gathered'\n      type: object\n      properties:\n        parameter:\n          type: integer\n          format: int32\n      example:\n        parameter: 700\n\n    AverageList:\n      title: AverageList\n      description: 'List of average configurations'\n      type: array\n      items:\n        $ref: '#/components/schemas/Average'\n      example:\n        [parameter: 700, parameter: 701]\n\n    Category:\n      title: Category\n      description: 'Category definition'\n      type: object\n      properties:\n        name:\n          description: Name of category\n          type: string\n        min:\n          format: int32\n          description: Min parameter ID for category\n          type: integer\n        max:\n          format: int32\n          description: Max parameter ID for category\n          type: integer\n      example:\n        name: 'Uhrzeit und Datum'\n        min: 0\n        max: 6\n\n    CategoryMap:\n      title: Categories\n      description: 'HashMap of multiple categories with category ID as key'\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Category'\n      example:\n        '0':\n          name: 'Uhrzeit und Datum'\n          min: 0\n          max: 6\n        '1':\n          name: 'Bedieneinheit'\n          min: 20\n          max: 70\n\n    Configuration:\n      title: Configuration\n      description: 'Details of a BSB-LAN configuration object'\n      type: object\n      properties:\n        parameter:\n          description: 'Configuration ID'\n          type: string\n        type:\n          description: |\n            Data type\n\n            0 - CDT_VOID // byte array (for internal using. Never sent through JSON)\n\n            1 - CDT_BYTE //unsigned byte. can be various format (text, switch, dropdown)\n\n            2 - CDT_UINT16 //CPI_TEXT field with format for unsigned integer\n\n            3 - CDT_UINT32 //CPI_TEXT field with format for unsigned long integer\n\n            4 - CDT_STRING //CPI_TEXT field\n\n            5 - CDT_MAC //CPI_TEXT field with format for MAC input/output\n\n            6 - CDT_IPV4 //CPI_TEXT field with format for IPv4 input/output\n\n            7 - CDT_PROGNRLIST //CPI_TEXT field with format for programs list input/output\n\n            8 - CDT_MAXDEVICELIST //CPI_TEXT field with format for MAX! devices list input/output\n\n            9 - CDT_DHTBUS //CPI_TEXT field with format for DHT bus\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 9\n        format:\n          description: |\n            HTML Input type\n\n            0 - none\n\n            1 - text field\n\n            2 - switch\n\n            3 - dropdown\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 3\n        category:\n          description: 'Category of configuration object'\n          type: string\n        name:\n          description: 'Name of configuration object'\n          type: string\n        value:\n          description: 'Value of configuration object'\n          type: string\n        possibleValues:\n          $ref: '#/components/schemas/PossibleValueList'\n      example:\n        parameter: '0'\n        type: 1\n        format: 2\n        category: 'CAT_GENERAL_TEXT'\n        name: 'CF_USEEEPROM_TEXT'\n        value: '150'\n        possibleValues: [\n          {\n            enumValue: '105',\n            desc: 'MENU_TEXT_OFF'\n          },\n          {\n            enumValue: '150',\n            desc: 'MENU_TEXT_ON'\n          }\n        ]\n\n    ConfigurationList:\n      title: ConfigurationList\n      description: 'List of multiple BSB-LAN configuration objects'\n      type: array\n      items:\n        $ref: '#/components/schemas/Configuration'\n      example:\n        [\n          {\n            parameter: '0',\n            type: 1,\n            format: 2,\n            category: 'CAT_GENERAL_TEXT',\n            name: 'CF_USEEEPROM_TEXT',\n            value: '150',\n            possibleValues: [\n              {\n                enumValue: '105',\n                desc: 'MENU_TEXT_OFF'\n              },\n              {\n                enumValue: '150',\n                desc: 'MENU_TEXT_ON'\n              }\n            ]\n          },\n          {\n            parameter: '6',\n            type: 1,\n            format: 3,\n            category: 'CAT_GENERAL_TEXT',\n            name: 'CF_BUSTYPE_TEXT',\n            value: '0',\n            possibleValues: [\n              {\n                enumValue: '0',\n                desc: 'BSB'\n              },\n              {\n                enumValue: '1',\n                desc: 'LPB'\n              },\n              {\n                enumValue: '2',\n                desc: 'PPS'\n              }\n            ]\n          },\n        ]\n\n    ConfigurationWriteResult:\n      title: ConfigurationWriteResult\n      description: 'Write result of BSB-LAN configuration object'\n      type: object\n      properties:\n        status:\n          description: |\n            Write status\n\n            1 - OK\n\n            2 - Not found\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 2\n      example:\n        status: 1\n\n    ConfigurationWriteResultMap:\n      title: ConfigurationWriteResultMap\n      description: 'Multiple write results of BSB-LAN configurations as hash map with parameter ID as key'\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ConfigurationWriteResult'\n      example:\n        - '0': {status: 1}\n        - '6': {status: 0}\n\n    ConfigurationWrite:\n      title: ConfigurationWrite\n      description: 'Write BSB-LAN configuration object'\n      type: object\n      properties:\n        parameter:\n          description: 'Parameter ID'\n          type: integer\n          format: int32\n        value:\n          description: 'New value of configuration parameter'\n          type: string\n      required:\n        - parameter\n        - value\n      example:\n        parameter: 0\n        value: '150'\n\n    ConfigurationWriteList:\n      title: ConfigurationWriteList\n      description: 'Write multiple BSB-LAN configuration objects'\n      type: array\n      items:\n        $ref:  '#/components/schemas/ConfigurationWrite'\n      example:\n        [{parameter: 0, value: '150'}, {parameter: 6, value: \"0\"}]\n\n    DataTypeFamily:\n      title: DataTypeFamily\n      description: 'Data type group, 1:1 mapping to dataType number'\n      type: string\n      enum:\n        - VALS\n        - ENUM\n        - BITS\n        - WDAY\n        - HHMM\n        - DTTM\n        - DDMM\n        - STRN\n        - DWHM\n        - TMPR\n\n    DataTypeName:\n      title: DataTypeName\n      description: 'Concrete type of value'\n      type: string\n      enum:\n        - BIT\n        - BYTE\n        - BYTE10\n        - CLOSEDOPEN\n        - DAYS\n        - GRADIENT_SHORT\n        - HOURS_SHORT\n        - LPBADDR\n        - MINUTES_SHORT\n        - MONTHS\n        - ONOFF\n        - PERCENT\n        - PERCENT5\n        - PRESSURE\n        - PRESSURE50\n        - SECONDS_SHORT\n        - SECONDS_SHORT4\n        - SECONDS_SHORT5\n        - TEMP_SHORT\n        - TEMP_SHORT_US\n        - TEMP_SHORT5\n        - TEMP_SHORT5_US\n        - TEMP_SHORT64\n        - TEMP_PER_MIN\n        - VOLTAGE\n        - VOLTAGEONOFF\n        - WEEKDAY\n        - YESNO\n        - SPF\n        - CURRENT\n        - CURRENT1000\n        - DAYS_WORD\n        - ERRORCODE\n        - FP1\n        - FP02\n        - GRADIENT\n        - INTEGRAL\n        - MONTHS_WORD\n        - HOUR_MINUTES\n        - HOURS_WORD\n        - MINUTES_WORD\n        - MINUTES_WORD10\n        - PERCENT_WORD1\n        - PERCENT_WORD\n        - PERCENT_100\n        - POWER_WORD\n        - POWER_WORD100\n        - ENERGY_WORD\n        - ENERGY_CONTENT\n        - PRESSURE_WORD\n        - PRESSURE_1000\n        - PROPVAL\n        - SECONDS_WORD\n        - SECONDS_WORD5\n        - SPEED\n        - SPEED2\n        - TEMP\n        - TEMP_WORD\n        - TEMP_WORD60\n        - TEMP_WORD5_US\n        - VOLTAGE_WORD\n        - CELMIN\n        - LITERPERHOUR\n        - LITERPERMIN\n        - UINT\n        - UINT5\n        - UINT10\n        - SINT\n        - SINT1000\n        - PPS_TIME\n        - DWORD\n        - HOURS\n        - MINUTES\n        - SECONDS_DWORD\n        - POWER\n        - POWER100\n        - ENERGY10\n        - ENERGY\n        - UINT100\n        - DATETIME\n        - SUMMERPERIOD\n        - VACATIONPROG\n        - TIMEPROG\n        - STRING\n        - CUSTOM_ENUM\n        - CUSTOM_BYTE\n        - CUSTOM_BIT\n        - GR_PER_CUBM\n        - FLOAT\n        - LONG\n        - ATM_PRESSURE\n        - ALTITUDE\n        - UNKNOWN\n\n    GeneralInfo:\n      title: GeneralInfo\n      description: 'Basic information about BSB-LAN device'\n      type: object\n      properties:\n        name:\n          description: 'Name of device'\n          type: string\n        version:\n          description: 'Firmware version'\n          type: string\n        freeram:\n          description: 'Free RAM in bytes'\n          type: integer\n          format: int32\n        uptime:\n          description: 'Device uptime in ms'\n          type: integer\n          format: int32\n        MAC:\n          description: 'MAC address of device'\n          type: string\n          pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'\n        freespace:\n          description: 'Free ROM space'\n          type: integer\n          format: int32\n        bus:\n          description: 'Configured Bus type'\n          type: string\n        buswritable:\n          description: 'Can data be written on the bus'\n          type: integer\n          format: int32\n        busaddr:\n          description: 'Bus address'\n          type: integer\n          format: int32\n        busdest:\n          description: 'Bus destination'\n          type: integer\n          format: int32\n        monitor:\n          description: ''\n          type: integer\n          format: int32\n        verbose:\n          description: ''\n          type: integer\n          format: int32\n        protectedGPIO:\n          $ref: '#/components/schemas/ProtectedGPIOList'\n        averages:\n          $ref: '#/components/schemas/AverageList'\n        logvalues:\n          description: ''\n          type: integer\n          format: int32\n        loginterval:\n          description: 'Log interval'\n          type: integer\n          format: int32\n        logged:\n          $ref: '#/components/schemas/LoggedList'\n      example:\n        name: 'BSB-LAN'\n        version: '1.1.21-20200904085757'\n        freeram: 2659\n        uptime: 276959150\n        MAC: 'DE:AD:BE:EF::CA:FE'\n        freespace: 0\n        bus: 'BSB'\n        buswritable: 1\n        busaddr: 66\n        busdest: 0\n        monitor: 0\n        verbose: 1\n        protectedGPIO: [pin: 10, pin: 11, pin: 12]\n        averages: [parameter: 700, parameter: 701]\n        logvalues: 0\n        loginterval: 3600\n        logged: [parameter: 8700, parameter: 8743, parameter: 8314]\n\n    Logged:\n      title: Logged\n      description: ''\n      type: object\n      properties:\n        parameter:\n          description: 'Id of parameter'\n          type: integer\n          format: int32\n      example:\n        parameter: 8700\n\n    LoggedList:\n      title: LoggedList\n      description: 'List of logged parameters'\n      type: array\n      items:\n        $ref: '#/components/schemas/Logged'\n      example:\n        [parameter: 700, parameter: 800]\n\n    Parameter:\n      title: Parameter\n      description: 'Contains the value of a parameter and some more details'\n      type: object\n      properties:\n        name:\n          description: 'Name of the parameter'\n          type: string\n        dataType_name:\n          $ref: '#/components/schemas/DataTypeName'\n        dataType_family:\n          $ref: '#/components/schemas/DataTypeFamily'\n        error:\n          $ref: '#/components/schemas/Error'\n        value:\n          description: 'Value of the parameter'\n          type: string\n        desc:\n          description: 'Description of the value'\n          type: string\n        precision:\n          description: 'Precision of data type 0/VALS'\n          type: number\n        dataType:\n          $ref: '#/components/schemas/ParameterType'\n        readonly:\n          $ref: '#/components/schemas/IsReadOnly'\n        unit:\n          description: 'Unit of the parameter'\n          type: string\n      example:\n        name: 'Betriebsart'\n        dataType_name: ENUM\n        dataType_family: ENUM\n        error: 0\n        value: '1'\n        desc: 'Automatik'\n        dataType: 1\n        readonly: 0\n        unit: ''\n\n    ParameterMap:\n      title: ParameterMap\n      description: 'HashMap of parameters as with parameter ID as key'\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Parameter'\n      example:\n        '0':\n          name: 'Datum/Zeit'\n          dataType_name: DATETIME\n          dataType_family: DTTM\n          error: 0\n          value: '25.03.2021 23:24:52'\n          desc: ''\n          dataType: 5\n          readonly: 0\n          unit: ''\n        '5':\n          name: 'Sommerzeitbeginn Tag/Monat'\n          dataType_name: SUMMERPERIOD\n          dataType_family: DDMM\n          error: 0\n          value: \"25.03.\"\n          desc: ''\n          dataType: 6\n          readonly: 0\n          unit: ''\n        '502':\n          name: 'Mi'\n          dataType_name: TIMEPROG\n          dataType_family: TMPR\n          error: 0\n          value: \"1. 04:10 - 21:00 2. --:-- - --:-- 3. --:-- - --:--\"\n          desc: ''\n          dataType: 9\n          readonly: 0\n          unit: ''\n        '700':\n          name: 'Betriebsart'\n          dataType_name: ENUM\n          dataType_family: ENUM\n          error: 0\n          value: '1'\n          desc: 'Automatic'\n          dataType: 1\n          readonly: 0\n          unit: ''\n        '710':\n          name: 'Komfortsollwert'\n          dataType_name: TEMP\n          dataType_family: VALS\n          error: 0\n          value: \"20.2\"\n          desc: ''\n          precision: 0.1\n          dataType: 0\n          readonly: 0\n          unit: '\u0026deg;C'\n        '1602':\n          name: 'TWW Status'\n          dataType_name: BIT\n          dataType_family: BITS\n          error: 0\n          value: '01000101'\n          desc: ''\n          dataType: 2\n          readonly: 0\n          unit: ''\n        '1620':\n          name: 'TWW Freigabe'\n          dataType_name: ENUM\n          dataType_family: ENUM\n          error: 0\n          value: '2'\n          desc: 'Zeitprogramm 4/TWW'\n          dataType: 1\n          readonly: 0\n          unit: ''\n        '3832':\n          name: 'Kollektorstartfunktion ein'\n          dataType_name: HOUR_MINUTES\n          dataType_family: HHMM\n          error: 0\n          value: '07:00'\n          desc: ''\n          dataType: 4\n          readonly: 1\n          unit: ''\n        '7170':\n          name: 'Telefon Kundendienst'\n          dataType_name: STRING\n          dataType_family: STRN\n          error: 0\n          value: '0'\n          desc: ''\n          dataType: 7\n          readonly: 0\n          unit: ''\n\n    ParameterDefinition:\n      title: ParameterDefinition\n      description: 'Object containing parameter definition'\n      type: object\n      properties:\n        name:\n          description: 'Name of the parameter'\n          type: string\n        dataType_name:\n          $ref: '#/components/schemas/DataTypeName'\n        dataType_family:\n          $ref: '#/components/schemas/DataTypeFamily'\n        possibleValues:\n          $ref: '#/components/schemas/PossibleValueList'\n        isswitch:\n          description: |\n            Parameter is a switch\n\n            0 - No\n\n            1 = Yes, VT_ONOFF or VT_YESNO\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 1\n        precision:\n          description: 'Precision of data type 0/VALS'\n          type: number\n        dataType:\n          $ref: '#/components/schemas/ParameterType'\n        readonly:\n          $ref: '#/components/schemas/IsReadOnly'\n        unit:\n          description: 'Unit of the parameter'\n          type: string\n      example:\n        name: 'Betriebsart'\n        dataType_name: ENUM\n        dataType_family: ENUM\n        possibleValues: [{enumValue: 0, desc: 'Schutzbetrieb'}, {enumValue: 1, desc: 'Automatik'}]\n        isswitch: 0\n        dataType: 1\n        readonly: 0\n        unit: ''\n\n    ParameterDefinitionMap:\n      title: ParameterDefinitionMap\n      description: 'HashMap of parameter definition with parameter ID as key'\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ParameterDefinition'\n      example:\n        '0':\n          name: 'Datum/Zeit'\n          dataType_name: DATETIME\n          dataType_family: DTTM\n          possibleValues: []\n          isswitch: 0\n          dataType: 5\n          readonly: 0\n          unit: ''\n        '5':\n          name: 'Sommerzeitbeginn Tag/Monat'\n          dataType_name: SUMMERPERIOD\n          dataType_family: DDMM\n          possibleValues: []\n          isswitch: 0\n          dataType: 6\n          readonly: 0\n          unit: ''\n        '502':\n          name: 'Mi'\n          dataType_name: TIMEPROG\n          dataType_family: TMPR\n          possibleValues: []\n          isswitch: 0\n          dataType: 9\n          readonly: 0\n          unit: ''\n        '700':\n          name: 'Betriebsart'\n          dataType_name: ENUM\n          dataType_family: ENUM\n          possibleValues: [{enumValue: 0, desc: 'Schutzbetrieb'}, {enumValue: 1, desc: 'Automatik'}]\n          isswitch: 0\n          dataType: 1\n          readonly: 0\n          unit: ''\n        '710':\n          name: 'Komfortsollwert'\n          dataType_name: TEMP\n          dataType_family: VALS\n          possibleValues: []\n          precision: 0.1\n          dataType: 0\n          readonly: 0\n          unit: '\u0026deg;C'\n        '1602':\n          name: 'TWW Status'\n          dataType_name: BIT\n          dataType_family: BITS\n          possibleValues: [{enumValue: 2, desc: 'TWW-Push nicht aktiv'}, {enumValue: 514, desc: 'TWW-Push aktiv'}]\n          isswitch: 0\n          dataType: 2\n          readonly: 0\n          unit: ''\n        '1620':\n          name: 'TWW Freigabe'\n          dataType_name: ENUM\n          dataType_family: ENUM\n          possibleValues: [{enumValue: 65535, desc: '---'}, {enumValue: 0, desc: '24h/Tag'}]\n          isswitch: 0\n          dataType: 1\n          readonly: 0\n          unit: ''\n        '3832':\n          name: 'Kollektorstartfunktion ein'\n          dataType_name: HOUR_MINUTES\n          dataType_family: HHMM\n          possibleValues: []\n          isswitch: 0\n          dataType: 4\n          readonly: 1\n          unit: ''\n        '7170':\n          name: 'Telefon Kundendienst'\n          dataType_name: STRING\n          dataType_family: STRN\n          possibleValues: []\n          isswitch: 0\n          dataType: 7\n          readonly: 0\n          unit: ''\n\n    ParameterFilter:\n      title: ParameterFilter\n      description: 'Filter for requesting parameter'\n      type: object\n      properties:\n        parameter:\n          type: string\n        destination:\n          type: integer\n          format: int32\n      required:\n        - parameter\n      example:\n        parameter: '700'\n\n    ParameterFilterList:\n      title: ParameterFilterList\n      description: 'List of filters to request multiple parameters'\n      type: array\n      items:\n        $ref: '#/components/schemas/ParameterFilter'\n      example:\n        [parameter: '700', parameter: '701']\n\n    ParameterWrite:\n      title: ParameterWrite\n      description: 'Object for updating parameter value'\n      type: object\n      properties:\n        parameter:\n          description: 'Id of parameter'\n          type: string\n        value:\n          description: 'New parameter value'\n          type: string\n        type:\n          description: |\n            Write type\n\n            0 - INF\n\n            1 - SET\n          type: string\n        destination:\n          description: 'Destination of parameter'\n          type: integer\n          format: int32\n      required:\n        - Parameter\n        - Value\n        - Type\n      example:\n        Parameter: '700'\n        Value: '1'\n        Type: '1'\n\n    ParameterWriteResult:\n      title: ParameterWriteResult\n      description: 'Conains result of write request'\n      type: object\n      properties:\n        parameter:\n          description: 'Id of parameter'\n          type: string\n        status:\n          description: |\n            Status of write request\n\n            0 - Error\n\n            1 - OK\n\n            2 - parameter read-only\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 2\n      example:\n        Parameter: \"700\"\n        Status: 1\n\n    PossibleValue:\n      title: PossibleValue\n      description: 'Contains possible Enum Values'\n      type: object\n      properties:\n        enumValue:\n          description: Enum Value\n          type: integer\n          format: int32\n        desc:\n          description: Description of Enum Value\n          type: string\n      example:\n        enumValue: 1\n        desc: 'Automatik'\n\n    PossibleValueList:\n      title: PossibleValueList\n      description: 'List of possible values'\n      type: array\n      items:\n        $ref: '#/components/schemas/PossibleValue'\n      example:\n        [{enumvalue: 0, desc: 'Schutzbetrieb'}, {enumvalue: 1, desc: 'Automatik'}]\n\n    ProtectedGPIO:\n      title: ProtectedGPIO\n      description: ''\n      type: object\n      properties:\n        pin:\n          type: integer\n          format: int32\n      example:\n        pin: 10\n\n    ProtectedGPIOList:\n      title: ProtectedGPIOList\n      description: ''\n      type: array\n      items:\n        $ref: '#/components/schemas/ProtectedGPIO'\n      example:\n        [pin: 10, pin: 11]\n\n    ResetValue:\n      title: ResetValue\n      description: 'Reset value of parameter'\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/Error'\n        value:\n          description: 'Reset value'\n          type: string\n      example:\n        error: 0\n        value: '3'\n\n    ResetValueMap:\n      title: ResetValueMap\n      description: 'HashMap of reset values with parameter ID as key'\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ResetValue'\n      example:\n        '700':\n          error: 0\n          value: \"3\"\n\n    ResetValueFilter:\n      title: ResetValueFilter\n      description: 'Filter for query reset value of parameter'\n      type: object\n      properties:\n        parameter:\n          description: 'Id of the parameter'\n          type: string\n        destination:\n          description: ''\n          type: integer\n          format: int32\n      required:\n        - parameter\n      example:\n        parameter: '700'\n        Destination: 0\n\n    ResetValueFilterList:\n      title: ResetValueFilterList\n      description: 'List of filters to query reset values for multiple parameters'\n      type: array\n      items:\n        $ref: '#/components/schemas/ResetValueFilter'\n      example:\n        [parameter: '700', parameter: '701']\n\n    Error:\n      title: Error\n      description: |\n        Current state of parameter value\n\n        0 - ok\n\n        7 - parameter not supported\n\n        1..255 - LPB/BSB bus errors\n\n        256 - decoding error\n\n        257 - unknown command\n\n        258 - not found\n\n        259 - no enum str\n\n        260 - unknown type\n\n        261 - query failed\n      type: integer\n      format: int32\n      minimum: 0\n      maximum: 261\n\n    IsReadOnly:\n      title: IsReadOnly\n      description: |\n        Parameter is readonly\n\n        0 - read/write\n\n        1 - readonly\n      type: integer\n      minimum: 0\n      maximum: 1\n      format: int32\n\n    ParameterType:\n      title: ParameterType\n      description: |\n        Data type of parameter\n\n        0 - Number VALS (\"1\", \"20.5\", \"---\" for value not available)\n\n        1 - ENUM ENUM(Integer value of Enum \"2\")\n\n        2 - Bit value BITS (\"01000101\")\n\n        3 - Weekday (currently not used)\n\n        4 - Hour:Minute HHMM\n\n            Format:\n              \"\u003chh:mm\u003e\"\n\n            Example:\n              \"09:10\"\n\n            Write format:\n              \"\u003chh.mm\u003e\"\n              \"09.10\"\n\n        5 - Date and time DTTM\n\n            Format:\n              \"\u003cdd.mm.yyyy hh:mm:ss\u003e\"\n\n            Example:\n              \"09.01.2021 12:42:02\"\n\n            Write format:\n              \"\u003cdd.mm.yyyy_hh:mm:ss\u003e\"\n              \"09.01.2021_12:42:02\"\n\n        6 - Day and month DDMM\n\n            Format:\n              \"\u003cdd.mm.\u003e\"\n\n            Example:\n              \"25.10.\"\n\n            Write format:\n              same as read format\n\n        7 - String STRN\n\n        8 - PPS time (day of week, hour:minute)\n\n        9 - Time program: TMPR Type to define 3 timeslots per day with hh:mm.\n\n            Format:\n              1.   on    -   off   2.   on    -   off   3.   on    -   off\n              1. \u003chh:mm\u003e - \u003chh:mm\u003e 2. \u003chh:mm\u003e - \u003chh:mm\u003e 3. \u003chh:mm\u003e - \u003chh:mm\u003e\n\n            Example:\n              \"1. 04:00 - 21:00 2. --:-- - --:-- 3. --:-- - --:--\"\n\n            Write format: (single minutes can not be configured, 10min steps is minimum)\n              \"\u003chh:mm\u003e-\u003chh:mm\u003e_\u003chh:mm\u003e-\u003chh:mm\u003e_\u003chh:mm\u003e-\u003chh:mm\u003e\"\n              '--' must be replaced by 'x'\n              \"04:00-21:00_xx:xx-xx:xx_xx:xx-xx:xx\"\n\n      type: integer\n      format: int32\n      minimum: 0\n      maximum: 8\n\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\nsecurity:\n  - basicAuth: []",
			"canonicalURL": "/github.com/fredlcore/BSB-LAN@feabad69aea06d50b479671e52b2898ea9530d5d/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fredlcore/BSB-LAN/blob/feabad69aea06d50b479671e52b2898ea9530d5d/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}