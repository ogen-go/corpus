{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rockset/rockset-go-client"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/api/openapi.yaml",
			"byteSize": 577569,
			"content": "openapi: 3.0.1\ninfo:\n  description: |-\n    Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.\n\n    All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey \u003capi_key\u003e` in the `Authorization` request header. For example:\n    ```\n    Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT\n    ```\n\n    All endpoints are only accessible via https.\n\n    Build something awesome!\n  title: REST API\n  version: v1\nservers:\n- url: https://api.rs2.usw2.rockset.com/\ntags:\n- name: API Keys\n- name: Aliases\n- name: Collections\n- name: Custom Roles\n- name: Documents\n- name: Integrations\n- name: Organizations\n- name: Queries\n- name: Query Lambdas\n- name: Users\n- name: Views\n- name: Virtual Instances\n- name: Workspaces\npaths:\n  /v1/orgs/self:\n    get:\n      description: Retrieve information about current organization.\n      operationId: getOrganization\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationResponse'\n          description: organization retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Get Organization\n      tags:\n      - Organizations\n  /v1/orgs/self/aliases:\n    get:\n      description: Retrieve all aliases in an organization\n      operationId: listAliases\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAliasesResponse'\n          description: aliases retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Aliases\n      tags:\n      - Aliases\n  /v1/orgs/self/collections:\n    get:\n      description: Retrieve all collections in an organization.\n      operationId: listCollections\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCollectionsResponse'\n          description: collections retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Collections\n      tags:\n      - Collections\n  /v1/orgs/self/integrations:\n    get:\n      description: List all integrations in an organization.\n      operationId: listIntegrations\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIntegrationsResponse'\n          description: integrations retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Integrations\n      tags:\n      - Integrations\n    post:\n      description: Create a new integration.\n      operationId: createIntegration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateIntegrationRequest'\n        description: integration credentials\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateIntegrationResponse'\n          description: integration created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create Integration\n      tags:\n      - Integrations\n      x-codegen-request-body-name: body\n  /v1/orgs/self/integrations/{integration}:\n    delete:\n      description: Remove an integration.\n      operationId: deleteIntegration\n      parameters:\n      - description: name of the integration\n        in: path\n        name: integration\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteIntegrationResponse'\n          description: integration deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete Integration\n      tags:\n      - Integrations\n    get:\n      description: Retrieve information about a single integration.\n      operationId: getIntegration\n      parameters:\n      - description: name of the integration\n        in: path\n        name: integration\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetIntegrationResponse'\n          description: integration retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Integration\n      tags:\n      - Integrations\n  /v1/orgs/self/lambdas:\n    get:\n      description: List all Query Lambdas in an organization.\n      operationId: listAllQueryLambdas\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListQueryLambdasResponse'\n          description: Query Lambdas listed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Query Lambdas\n      tags:\n      - Query Lambdas\n  /v1/orgs/self/queries:\n    post:\n      description: Make a SQL query to Rockset.\n      operationId: query\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n          description: query executed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Query\n      tags:\n      - Queries\n      x-codegen-request-body-name: body\n  /v1/orgs/self/queries/validations:\n    post:\n      description: Validate a SQL query with Rockset's parser and planner.\n      operationId: validate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateQueryResponse'\n          description: query validated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Validate Query\n      tags:\n      - Queries\n      x-codegen-request-body-name: body\n  /v1/orgs/self/roles:\n    get:\n      description: List all roles for your organization.\n      operationId: listRoles\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRolesResponse'\n          description: roles retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Roles\n      tags:\n      - Custom Roles\n    post:\n      description: Create a role for your organization.\n      operationId: createRole\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRoleRequest'\n        description: JSON Object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n          description: role created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create a Role\n      tags:\n      - Custom Roles\n      x-codegen-request-body-name: body\n  /v1/orgs/self/roles/{roleName}:\n    delete:\n      description: Delete a role for your organization.\n      operationId: deleteRole\n      parameters:\n      - in: path\n        name: roleName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n          description: role deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete a Role\n      tags:\n      - Custom Roles\n    get:\n      description: Retrieve a role by name for your organization.\n      operationId: getRole\n      parameters:\n      - in: path\n        name: roleName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n          description: role retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve role\n      tags:\n      - Custom Roles\n    post:\n      description: Update a role for your organization.\n      operationId: updateRole\n      parameters:\n      - in: path\n        name: roleName\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRoleRequest'\n        description: JSON Object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n          description: role updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Update a Role\n      tags:\n      - Custom Roles\n      x-codegen-request-body-name: body\n  /v1/orgs/self/users:\n    get:\n      description: Retrieve all users for an organization.\n      operationId: listUsers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUsersResponse'\n          description: users retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Users\n      tags:\n      - Users\n    post:\n      description: Create a new user for an organization.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUserResponse'\n          description: user created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create User\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /v1/orgs/self/users/self:\n    get:\n      description: Retrieve currently authenticated user.\n      operationId: getCurrentUser\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: user retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Current User\n      tags:\n      - Users\n  /v1/orgs/self/users/self/apikeys:\n    post:\n      description: Create a new API key for the authenticated user.\n      operationId: createApiKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateApiKeyRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateApiKeyResponse'\n          description: API key created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create API Key\n      tags:\n      - API Keys\n      x-codegen-request-body-name: body\n  /v1/orgs/self/users/self/preferences:\n    get:\n      description: Get all notification preferences.\n      operationId: listUnsubscribePreferences\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUnsubscribePreferencesResponse'\n          description: Notification preferences retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Notification Preferences\n      tags:\n      - Users\n    post:\n      description: Update notification preference.\n      operationId: updateUnsubscribePreferences\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUnsubscribePreferencesRequest'\n        description: JSON Object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateUnsubscribePreferencesResponse'\n          description: Notification preference created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Update Notification Preferences\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /v1/orgs/self/users/{user}:\n    delete:\n      description: Delete a user from an organization.\n      operationId: deleteUser\n      parameters:\n      - description: user email\n        in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteUserResponse'\n          description: user deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete User\n      tags:\n      - Users\n    get:\n      description: Retrieve user by email.\n      operationId: getUser\n      parameters:\n      - description: user email\n        in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: user found\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve User\n      tags:\n      - Users\n  /v1/orgs/self/users/{user}/apikeys:\n    get:\n      description: List API key metadata for any user in your organization.\n      operationId: listApiKeys\n      parameters:\n      - description: Email of the API key owner. Use `self` to specify the currently\n          authenticated user.\n        example: admin@me.com\n        in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApiKeysResponse'\n          description: API keys retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List API Keys\n      tags:\n      - API Keys\n  /v1/orgs/self/users/{user}/apikeys/{name}:\n    delete:\n      description: Delete an API key for any user in your organization.\n      operationId: deleteApiKey\n      parameters:\n      - description: Name of the API key.\n        example: my-key\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Email of the API key owner. Use `self` to specify the currently\n          authenticated user.\n        example: admin@me.com\n        in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteApiKeyResponse'\n          description: API key deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete API Key\n      tags:\n      - API Keys\n    get:\n      description: Retrieve a particular API key for any user in your organization.\n      operationId: getApiKey\n      parameters:\n      - description: Email of the API key owner. Use `self` to specify the currently\n          authenticated user.\n        example: admin@me.com\n        in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      - description: Name of the API key.\n        example: my-key\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetApiKeyResponse'\n          description: API key retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve API Key\n      tags:\n      - API Keys\n    post:\n      description: Update the state of an API key for any user in your organization.\n      operationId: updateApiKey\n      parameters:\n      - description: Name of the API key.\n        example: my-key\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Email of the API key owner. Use `self` to specify the currently\n          authenticated user.\n        example: admin@me.com\n        in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateApiKeyRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateApiKeyResponse'\n          description: API key successfully updated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Update API Key State\n      tags:\n      - API Keys\n      x-codegen-request-body-name: body\n  /v1/orgs/self/views:\n    get:\n      description: Retrieve all views in an organization\n      operationId: listViews\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListViewsResponse'\n          description: views retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Views\n      tags:\n      - Views\n  /v1/orgs/self/virtualinstances:\n    get:\n      description: Retrieve all virtual instances in an organization.\n      operationId: listVirtualInstances\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListVirtualInstancesResponse'\n          description: virtual instances retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Virtual Instances\n      tags:\n      - Virtual Instances\n  /v1/orgs/self/virtualinstances/{virtualInstanceId}:\n    get:\n      description: Get details about a virtual instance.\n      operationId: getVirtualInstance\n      parameters:\n      - description: uuid of the virtual instance\n        in: path\n        name: virtualInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetVirtualInstanceResponse'\n          description: virtual instance retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Virtual Instance\n      tags:\n      - Virtual Instances\n    post:\n      description: Update the properties of a virtual instance.\n      operationId: setVirtualInstance\n      parameters:\n      - description: uuid of the virtual instance\n        in: path\n        name: virtualInstanceId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateVirtualInstanceRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateVirtualInstanceResponse'\n          description: virtual instance updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Update Virtual Instance\n      tags:\n      - Virtual Instances\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws:\n    get:\n      description: List all workspaces in an organization.\n      operationId: listWorkspaces\n      parameters:\n      - in: query\n        name: fetch_across_regions\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWorkspacesResponse'\n          description: workspaces retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Workspaces\n      tags:\n      - Workspaces\n    post:\n      description: Create a new workspace.\n      operationId: createWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWorkspaceRequest'\n        description: workspace details\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateWorkspaceResponse'\n          description: workspace created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create Workspace\n      tags:\n      - Workspaces\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}:\n    delete:\n      description: Remove a workspace.\n      operationId: deleteWorkspace\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteWorkspaceResponse'\n          description: workspace deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete Workspace\n      tags:\n      - Workspaces\n    get:\n      description: Get information about a single workspace.\n      operationId: getWorkspace\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWorkspaceResponse'\n          description: workspace retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Workspace\n      tags:\n      - Workspaces\n  /v1/orgs/self/ws/{workspace}/aliases:\n    get:\n      description: Retrieve all aliases in a workspace.\n      operationId: workspaceAliases\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAliasesResponse'\n          description: aliases retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Aliases in Workspace\n      tags:\n      - Aliases\n    post:\n      description: Create new alias in a workspace.\n      operationId: createAlias\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAliasRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAliasResponse'\n          description: alias created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create Alias\n      tags:\n      - Aliases\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/aliases/{alias}:\n    delete:\n      description: Delete an alias.\n      operationId: deleteAlias\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the alias\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAliasResponse'\n          description: alias deleted successfully\n      summary: Delete Alias\n      tags:\n      - Aliases\n    get:\n      description: Get details about an alias\n      operationId: getAlias\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the alias\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAliasResponse'\n          description: alias retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Alias\n      tags:\n      - Aliases\n    post:\n      description: Update alias in a workspace.\n      operationId: updateAlias\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the alias\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAliasRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAliasResponse'\n          description: alias updated successfully\n      summary: Update Alias\n      tags:\n      - Aliases\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/collections:\n    get:\n      description: Retrieve all collections in a workspace.\n      operationId: workspaceCollections\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCollectionsResponse'\n          description: collections retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Collections in Workspace\n      tags:\n      - Collections\n    post:\n      description: Create new collection in a workspace.\n      operationId: createCollection\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCollectionRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateCollectionResponse'\n          description: collection created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create Collection\n      tags:\n      - Collections\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/collections/{collection}:\n    delete:\n      description: Delete a collection and all its documents from Rockset.\n      operationId: deleteCollection\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the collection\n        in: path\n        name: collection\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteCollectionResponse'\n          description: collection deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete Collection\n      tags:\n      - Collections\n    get:\n      description: Get details about a collection.\n      operationId: getCollection\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the collection\n        in: path\n        name: collection\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetCollectionResponse'\n          description: collection retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Collection\n      tags:\n      - Collections\n  /v1/orgs/self/ws/{workspace}/collections/{collection}/docs:\n    delete:\n      description: Delete documents from a collection.\n      operationId: deleteDocuments\n      parameters:\n      - description: Name of the workspace.\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: Name of the collection.\n        in: path\n        name: collection\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDocumentsRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDocumentsResponse'\n          description: documents deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete Documents\n      tags:\n      - Documents\n      x-codegen-request-body-name: body\n    patch:\n      description: Update existing documents in a collection.\n      operationId: patchDocuments\n      parameters:\n      - description: Name of the workspace.\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: Name of the collection.\n        in: path\n        name: collection\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchDocumentsRequest'\n        description: JSON Patch objects\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatchDocumentsResponse'\n          description: Documents patched successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Patch Documents\n      tags:\n      - Documents\n      x-codegen-request-body-name: body\n    post:\n      description: Add documents to a collection.\n      operationId: addDocuments\n      parameters:\n      - description: Name of the workspace.\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: Name of the collection.\n        in: path\n        name: collection\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddDocumentsRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddDocumentsResponse'\n          description: documents added successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Add Documents\n      tags:\n      - Documents\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/lambdas:\n    get:\n      description: List all Query Lambdas under given workspace.\n      operationId: listQueryLambdasInWorkspace\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListQueryLambdasResponse'\n          description: Query Lambdas listed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Query Lambdas in Workspace\n      tags:\n      - Query Lambdas\n    post:\n      description: Create a Query Lambda in given workspace.\n      operationId: createQueryLambda\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateQueryLambdaRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryLambdaVersionResponse'\n          description: Query Lambda created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create Query Lambda\n      tags:\n      - Query Lambdas\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/lambdas/{queryLambda}:\n    delete:\n      description: Delete a Query Lambda.\n      operationId: deleteQueryLambda\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteQueryLambdaResponse'\n          description: Query Lambda deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete Query Lambda\n      tags:\n      - Query Lambdas\n  /v1/orgs/self/ws/{workspace}/lambdas/{queryLambda}/tags:\n    get:\n      description: List all tags associated with a Query Lambda\n      operationId: listQueryLambdaTags\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListQueryLambdaTagsResponse'\n          description: tags listed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Query Lambda Tags\n      tags:\n      - Query Lambdas\n    post:\n      description: Create a tag for a specific Query Lambda version, or update that\n        tag if it already exists.\n      operationId: createQueryLambdaTag\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateQueryLambdaTagRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryLambdaTagResponse'\n          description: tag created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Create Query Lambda Tag\n      tags:\n      - Query Lambdas\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/lambdas/{queryLambda}/tags/{tag}:\n    delete:\n      description: Delete a tag for a specific Query Lambda\n      operationId: deleteQueryLambdaTag\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      - description: name of the tag\n        in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryLambdaTagResponse'\n          description: tag deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete Query Lambda Tag Version\n      tags:\n      - Query Lambdas\n    get:\n      description: Retrieve the Query Lambda version associated with a given tag.\n      operationId: getQueryLambdaTagVersion\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      - description: name of the tag\n        in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryLambdaTagResponse'\n          description: version retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Query Lambda Tag\n      tags:\n      - Query Lambdas\n    post:\n      description: Execute the Query Lambda version associated with a given tag.\n      operationId: executeQueryLambdaByTag\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      - description: tag\n        in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteQueryLambdaRequest'\n        description: JSON object\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n          description: Query Lambda executed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Execute Query Lambda By Tag\n      tags:\n      - Query Lambdas\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/lambdas/{queryLambda}/version/{version}:\n    delete:\n      description: Delete a Query Lambda version.\n      operationId: deleteQueryLambdaVersion\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      - description: version\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryLambdaVersionResponse'\n          description: Query Lambda version deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Delete Query Lambda Version\n      tags:\n      - Query Lambdas\n  /v1/orgs/self/ws/{workspace}/lambdas/{queryLambda}/versions:\n    get:\n      description: List all versions of a Query Lambda.\n      operationId: listQueryLambdaVersions\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListQueryLambdaVersionsResponse'\n          description: versions listed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Query Lambda Versions\n      tags:\n      - Query Lambdas\n    post:\n      description: Create a new version of a Query Lambda in given workspace.\n      operationId: updateQueryLambda\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: create\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateQueryLambdaRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryLambdaVersionResponse'\n          description: Query Lambda updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Update Query Lambda\n      tags:\n      - Query Lambdas\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/lambdas/{queryLambda}/versions/{version}:\n    get:\n      description: Retrieve details for a specified version of a Query Lambda.\n      operationId: getQueryLambdaVersion\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      - description: version\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryLambdaVersionResponse'\n          description: Query Lambda retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve Query Lambda Version\n      tags:\n      - Query Lambdas\n    post:\n      description: Execute a particular version of a Query Lambda.\n      operationId: executeQueryLambda\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the Query Lambda\n        in: path\n        name: queryLambda\n        required: true\n        schema:\n          type: string\n      - description: version\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteQueryLambdaRequest'\n        description: JSON object\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n          description: Query Lambda executed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Execute Query Lambda By Version\n      tags:\n      - Query Lambdas\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/views:\n    get:\n      description: Retrieve all views in a workspace.\n      operationId: workspaceViews\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListViewsResponse'\n          description: views retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: List Views in Workspace\n      tags:\n      - Views\n    post:\n      description: Create a view\n      operationId: createView\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateViewRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateViewResponse'\n          description: view created successfully\n      summary: Create View\n      tags:\n      - Views\n      x-codegen-request-body-name: body\n  /v1/orgs/self/ws/{workspace}/views/{view}:\n    delete:\n      description: Delete a view\n      operationId: deleteView\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the view\n        in: path\n        name: view\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteViewResponse'\n          description: view deleted successfully\n      summary: Delete View\n      tags:\n      - Views\n    get:\n      description: Get details about a view\n      operationId: getView\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the view\n        in: path\n        name: view\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetViewResponse'\n          description: view retrieved successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not found\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not allowed\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not acceptable\n        \"408\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: request timeout\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not supported\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: resource exceeded\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: internal error\n        \"501\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not implemented\n        \"502\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: bad gateway\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorModel'\n          description: not ready\n      summary: Retrieve View\n      tags:\n      - Views\n    post:\n      description: Update a view\n      operationId: updateView\n      parameters:\n      - description: name of the workspace\n        in: path\n        name: workspace\n        required: true\n        schema:\n          default: commons\n          type: string\n      - description: name of the view\n        in: path\n        name: view\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateViewRequest'\n        description: JSON object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateViewResponse'\n          description: view updated successfully\n      summary: Update View\n      tags:\n      - Views\n      x-codegen-request-body-name: body\ncomponents:\n  schemas:\n    AddDocumentsRequest:\n      example:\n        data: '[{ \"field\": \"value\" }]'\n      properties:\n        data:\n          description: Array of documents to be added to the collection.\n          example: '[{ \"field\": \"value\" }]'\n          items:\n            properties: {}\n            type: object\n          type: array\n      required:\n      - data\n      type: object\n    AddDocumentsResponse:\n      example:\n        data:\n        - patch_id: 486gsg8\n          _collection: customers\n          _id: 2cd61e3b\n          error:\n            trace_id: trace_id\n            query_id: query_id\n            error_id: error_id\n            line: 0\n            column: 6\n            message: collection not found\n            type: InvalidInput\n          status: ADDED\n        - patch_id: 486gsg8\n          _collection: customers\n          _id: 2cd61e3b\n          error:\n            trace_id: trace_id\n            query_id: query_id\n            error_id: error_id\n            line: 0\n            column: 6\n            message: collection not found\n            type: InvalidInput\n          status: ADDED\n      properties:\n        data:\n          description: information about the added documents\n          items:\n            $ref: '#/components/schemas/DocumentStatus'\n          type: array\n      type: object\n    Alias:\n      example:\n        workspace: commons\n        collections: '[\"commons.foo\", \"prod.demo\"]'\n        creator_email: xyz@rockset.com\n        name: demo\n        description: alias referencing collection in workspace\n        created_at: 2001-08-28T00:23:41Z\n        state: CREATED\n        modified_at: 2001-08-28T00:23:42Z\n      properties:\n        name:\n          description: name of the alias\n          example: demo\n          type: string\n        description:\n          description: alias description\n          example: alias referencing collection in workspace\n          type: string\n        workspace:\n          description: name of the workspace\n          example: commons\n          type: string\n        creator_email:\n          description: email of the creator\n          example: xyz@rockset.com\n          type: string\n        collections:\n          description: list of fully qualified collection names referenced by alias\n          example: '[\"commons.foo\", \"prod.demo\"]'\n          items:\n            type: string\n          type: array\n        state:\n          description: state of the alias\n          enum:\n          - CREATED\n          - DELETED\n          example: CREATED\n          type: string\n        created_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:41Z\n          type: string\n        modified_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:42Z\n          type: string\n      type: object\n    ApiKey:\n      description: API keys are used to authenticate requests to Rockset's API. An\n        API key is tied to the user who creates it.\n      example:\n        role: read-only\n        name: my-key\n        created_at: 2001-08-28T00:23:41Z\n        state: ACTIVE\n        created_by: test@example.com\n        key: aB35kDjg*******************************\n        last_access_time: 2001-08-28T00:23:41Z\n      properties:\n        created_at:\n          description: Date that API key was created (ISO-8601 format).\n          example: 2001-08-28T00:23:41Z\n          type: string\n        name:\n          description: Name of the API key.\n          example: my-key\n          type: string\n        key:\n          description: API key string of 64 alphanumeric characters.\n          example: aB35kDjg*******************************\n          type: string\n        last_access_time:\n          description: Date that API key was most recently used (ISO-8601 format).\n          example: 2001-08-28T00:23:41Z\n          type: string\n        role:\n          description: Role specifying access control. If not specified, API key will\n            have access to all of the associated user's roles.\n          example: read-only\n          type: string\n        created_by:\n          description: Email of API key owner.\n          example: test@example.com\n          type: string\n        state:\n          description: current state of this key\n          enum:\n          - ACTIVE\n          - SUSPENDED\n          example: ACTIVE\n          type: string\n      required:\n      - key\n      - name\n      type: object\n    AwsAccessKey:\n      example:\n        aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n        aws_secret_access_key: wJal....\n      properties:\n        aws_access_key_id:\n          description: AWS access key ID\n          example: AKIAIOSFODNN7EXAMPLE\n          type: string\n        aws_secret_access_key:\n          description: AWS secret access key\n          example: wJal....\n          type: string\n      required:\n      - aws_access_key_id\n      - aws_secret_access_key\n      type: object\n    AwsRole:\n      example:\n        aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n      properties:\n        aws_role_arn:\n          description: ARN of rockset-role created in your account\n          example: arn:aws:iam::2378964092:role/rockset-role\n          type: string\n      required:\n      - aws_role_arn\n      type: object\n    AzureBlobStorageIntegration:\n      example:\n        connection_string: connection_string\n      properties:\n        connection_string:\n          description: credentials for Azure Blob Storage\n          type: string\n      required:\n      - connection_string\n      type: object\n    AzureEventHubsIntegration:\n      example:\n        connection_string: connection_string\n      properties:\n        connection_string:\n          description: azure event hubs connection string\n          readOnly: true\n          type: string\n      type: object\n    AzureServiceBusIntegration:\n      example:\n        connection_string: connection_string\n      properties:\n        connection_string:\n          description: credentials for the Azure Service Bus\n          type: string\n      required:\n      - connection_string\n      type: object\n    Cluster:\n      properties:\n        id:\n          description: unique identifier for the cluster\n          example: asdf98-as9df8adf-adsf9asfd\n          type: string\n        cluster_type:\n          description: cluster type\n          enum:\n          - PUBLIC\n          - PRIVATE\n          example: PRIVATE\n          type: string\n        aws_region:\n          description: aws region\n          example: us-west-2\n          type: string\n        domain:\n          description: domain of org using cluster\n          example: rockset\n          type: string\n        top_level_domain:\n          description: top level domain of org using cluster\n          example: .com\n          type: string\n        apiserver_url:\n          description: api server url for cluster\n          example: api.rockset.us-west-2.rockset.com\n          type: string\n      type: object\n    Collection:\n      example:\n        field_mapping_query:\n          sql: sql\n        workspace: commons\n        aliases:\n        - workspace: commons\n          collections: '[\"commons.foo\", \"prod.demo\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: alias referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n        - workspace: commons\n          collections: '[\"commons.foo\", \"prod.demo\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: alias referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n        sources:\n        - s3:\n            bucket: s3://customer-account-info\n            object_count_downloaded: 0\n            prefixes: '[\"/transactions\", \"/stores\"]'\n            object_count_total: 6\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 1\n            region: us-west-2\n          format_params:\n            xml:\n              attribute_prefix: _attr\n              doc_tag: row\n              encoding: UTF-8\n              value_tag: value\n              root_tag: root\n            csv:\n              quoteChar: '\"'\n              escapeChar: \\\n              columnNames: '[\"c1\", \"c2\", \"c3\"]'\n              columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n              firstLineAsColumnNames: true\n              encoding: UTF-8\n              separator: ','\n            postgres_dms: true\n            json: true\n            mssql_dms: true\n            oracle_dms: true\n            mysql_dms: true\n          azure_blob_storage:\n            container: server-logs\n            prefix: prefix/to/blobs\n            pattern: prefix/to/**/keys/*.format\n            blob_count_total: 9\n            blob_bytes_total: 3\n            blob_count_downloaded: 7\n          file_upload:\n            file_name: file1.json\n            file_size: 12345\n            file_upload_time: 2019-01-15T21:48:23Z\n          kinesis:\n            offset_reset_policy: EARLIEST\n            aws_region: us-east-2\n            stream_name: click_stream\n            dms_primary_key:\n            - dms_primary_key\n            - dms_primary_key\n          dynamodb:\n            aws_region: us-east-2\n            rcu: 1000\n            current_status:\n              initial_dump_completion_percentage: 0.73\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              state: PROCESSING_STREAM\n            use_scan_api: true\n            table_name: dynamodb_table_name\n            status:\n              scan_total_records: 2000\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              scan_start_time: 2001-08-28T00:23:41Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          integration_name: aws-integration\n          azure_event_hubs:\n            offset_reset_policy: EARLIEST\n            hub_id: event-hub-1\n            status:\n              partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              state: ACTIVE\n          gcs:\n            bucket: server-logs\n            object_count_downloaded: 5\n            object_count_total: 5\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 2\n          kafka:\n            offset_reset_policy: LATEST\n            kafka_topic_name: example-topic\n            status:\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              kafka_partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              state: ACTIVE\n            use_v3: true\n          azure_service_bus:\n            topic: rockset-topic\n            subscription: rockset-subscription\n            status:\n              sessions:\n                key:\n                  sequence_number: 323862\n                  last_processed: 2022-08-23T00:13:41Z\n              first_processed_at: 2021-08-28T00:23:41Z\n              records_processed: 1000\n          mongodb:\n            database_name: my_database\n            collection_name: my_collection\n            status:\n              scan_total_records: 2000\n              stream_records_deleted: 100\n              stream_records_inserted: 10000\n              stream_records_updated: 1000\n              scan_start_time: 2001-08-28T00:23:41Z\n              stream_last_update_processed_at: 2019-01-15T21:48:23Z\n              stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          status:\n            last_processed_item: /path/to/some/object\n            last_processed_at: 2019-01-15T21:48:23Z\n            total_processed_items: 32849023\n            state: INITIALIZING\n            message: error 403 forbidden\n        - s3:\n            bucket: s3://customer-account-info\n            object_count_downloaded: 0\n            prefixes: '[\"/transactions\", \"/stores\"]'\n            object_count_total: 6\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 1\n            region: us-west-2\n          format_params:\n            xml:\n              attribute_prefix: _attr\n              doc_tag: row\n              encoding: UTF-8\n              value_tag: value\n              root_tag: root\n            csv:\n              quoteChar: '\"'\n              escapeChar: \\\n              columnNames: '[\"c1\", \"c2\", \"c3\"]'\n              columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n              firstLineAsColumnNames: true\n              encoding: UTF-8\n              separator: ','\n            postgres_dms: true\n            json: true\n            mssql_dms: true\n            oracle_dms: true\n            mysql_dms: true\n          azure_blob_storage:\n            container: server-logs\n            prefix: prefix/to/blobs\n            pattern: prefix/to/**/keys/*.format\n            blob_count_total: 9\n            blob_bytes_total: 3\n            blob_count_downloaded: 7\n          file_upload:\n            file_name: file1.json\n            file_size: 12345\n            file_upload_time: 2019-01-15T21:48:23Z\n          kinesis:\n            offset_reset_policy: EARLIEST\n            aws_region: us-east-2\n            stream_name: click_stream\n            dms_primary_key:\n            - dms_primary_key\n            - dms_primary_key\n          dynamodb:\n            aws_region: us-east-2\n            rcu: 1000\n            current_status:\n              initial_dump_completion_percentage: 0.73\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              state: PROCESSING_STREAM\n            use_scan_api: true\n            table_name: dynamodb_table_name\n            status:\n              scan_total_records: 2000\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              scan_start_time: 2001-08-28T00:23:41Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          integration_name: aws-integration\n          azure_event_hubs:\n            offset_reset_policy: EARLIEST\n            hub_id: event-hub-1\n            status:\n              partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              state: ACTIVE\n          gcs:\n            bucket: server-logs\n            object_count_downloaded: 5\n            object_count_total: 5\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 2\n          kafka:\n            offset_reset_policy: LATEST\n            kafka_topic_name: example-topic\n            status:\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              kafka_partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              state: ACTIVE\n            use_v3: true\n          azure_service_bus:\n            topic: rockset-topic\n            subscription: rockset-subscription\n            status:\n              sessions:\n                key:\n                  sequence_number: 323862\n                  last_processed: 2022-08-23T00:13:41Z\n              first_processed_at: 2021-08-28T00:23:41Z\n              records_processed: 1000\n          mongodb:\n            database_name: my_database\n            collection_name: my_collection\n            status:\n              scan_total_records: 2000\n              stream_records_deleted: 100\n              stream_records_inserted: 10000\n              stream_records_updated: 1000\n              scan_start_time: 2001-08-28T00:23:41Z\n              stream_last_update_processed_at: 2019-01-15T21:48:23Z\n              stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          status:\n            last_processed_item: /path/to/some/object\n            last_processed_at: 2019-01-15T21:48:23Z\n            total_processed_items: 32849023\n            state: INITIALIZING\n            message: error 403 forbidden\n        insert_only: true\n        created_at: 2001-08-28T00:23:41Z\n        description: transactions from stores worldwide\n        clustering_key:\n        - keys: '[\"value1\", \"value2\"]'\n          type: AUTO\n          field_name: address.city.zipcode\n        - keys: '[\"value1\", \"value2\"]'\n          type: AUTO\n          field_name: address.city.zipcode\n        created_by: hello@rockset.com\n        field_mappings:\n        - output_field:\n            on_error: SKIP\n            value:\n              sql: SHA256()\n            field_name: zip_hash\n          name: myTestMapping\n          input_fields:\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          is_drop_all_fields: true\n        - output_field:\n            on_error: SKIP\n            value:\n              sql: SHA256()\n            field_name: zip_hash\n          name: myTestMapping\n          input_fields:\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          is_drop_all_fields: true\n        stats:\n          doc_count: 2145\n          inverted_index_size: 123456\n          last_updated_ms: 1535101094433\n          total_size: 123456\n          purged_doc_count: 2145\n          range_index_size: 123456\n          purged_doc_size: 123456\n          bulk_bytes_inserted: 2\n          fill_progress: 0.6\n          bytes_overwritten: 123456\n          bytes_inserted: 123456\n          total_index_size: 123456\n          column_index_size: 123456\n          last_queried_ms: 1535101119334\n          row_index_size: 123456\n          bulk_bytes_overwritten: 4\n        retention_secs: 2592000\n        name: global-transactions\n        status: READY\n      properties:\n        created_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:41Z\n          type: string\n        created_by:\n          description: email of user who created the collection\n          example: hello@rockset.com\n          type: string\n        name:\n          description: unique identifer for collection, can contain alphanumeric or\n            dash characters\n          example: global-transactions\n          pattern: ^[A-Za-z0-9_\\-.]+$\n          type: string\n        description:\n          description: text describing the collection\n          example: transactions from stores worldwide\n          type: string\n        workspace:\n          description: name of the workspace that the collection is in\n          example: commons\n          type: string\n        status:\n          description: 'current status of collection, one of: CREATED, READY, DELETED'\n          enum:\n          - INITIALIZED\n          - CREATED\n          - READY\n          - PAUSED\n          - DELETED\n          - PAUSING\n          - RESUMING\n          - PREPARING_BULK\n          - BULK_INGEST_MODE\n          - EXITING_BULK_INGEST_MODE\n          - UNKNOWN\n          example: READY\n          type: string\n        sources:\n          description: list of sources from which collection ingests\n          items:\n            $ref: '#/components/schemas/Source'\n          type: array\n        stats:\n          $ref: '#/components/schemas/CollectionStats'\n        retention_secs:\n          description: number of seconds after which data is purged based on event\n            time\n          example: 2592000\n          format: int64\n          type: integer\n        field_mappings:\n          description: list of mappings applied on all documents in a collection\n          items:\n            $ref: '#/components/schemas/FieldMappingV2'\n          type: array\n        field_mapping_query:\n          $ref: '#/components/schemas/FieldMappingQuery'\n        clustering_key:\n          description: list of clustering fields for a collection\n          items:\n            $ref: '#/components/schemas/FieldPartition'\n          type: array\n        aliases:\n          description: list of aliases for a collection\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n        insert_only:\n          description: Whether the collection is insert only or not\n          type: boolean\n      type: object\n    CollectionStats:\n      example:\n        doc_count: 2145\n        inverted_index_size: 123456\n        last_updated_ms: 1535101094433\n        total_size: 123456\n        purged_doc_count: 2145\n        range_index_size: 123456\n        purged_doc_size: 123456\n        bulk_bytes_inserted: 2\n        fill_progress: 0.6\n        bytes_overwritten: 123456\n        bytes_inserted: 123456\n        total_index_size: 123456\n        column_index_size: 123456\n        last_queried_ms: 1535101119334\n        row_index_size: 123456\n        bulk_bytes_overwritten: 4\n      properties:\n        doc_count:\n          description: number of documents in the collection\n          example: 2145\n          format: int64\n          type: integer\n        purged_doc_count:\n          description: number of documents purged from the collection\n          example: 2145\n          format: int64\n          type: integer\n        fill_progress:\n          description: number between 0 and 1 that indicates progress of collection\n            creation\n          example: 0.6\n          format: double\n          type: number\n        last_queried_ms:\n          description: milliseconds since Unix epoch Jan 1, 1970\n          example: 1535101119334\n          format: int64\n          type: integer\n        last_updated_ms:\n          description: milliseconds since Unix epoch Jan 1, 1970\n          example: 1535101094433\n          format: int64\n          type: integer\n        total_size:\n          description: total collection size in bytes\n          example: 123456\n          format: int64\n          type: integer\n        total_index_size:\n          description: total collection index size in bytes\n          example: 123456\n          format: int64\n          type: integer\n        row_index_size:\n          description: total collection row index size in bytes\n          example: 123456\n          format: int64\n          type: integer\n        column_index_size:\n          description: total collection column index size in bytes\n          example: 123456\n          format: int64\n          type: integer\n        inverted_index_size:\n          description: total collection inverted index size in bytes\n          example: 123456\n          format: int64\n          type: integer\n        range_index_size:\n          description: total collection range index size in bytes\n          example: 123456\n          format: int64\n          type: integer\n        purged_doc_size:\n          description: total size of bytes purged in bytes\n          example: 123456\n          format: int64\n          type: integer\n        bytes_inserted:\n          description: total number of bytes inserted into the collection\n          example: 123456\n          format: int64\n          type: integer\n        bytes_overwritten:\n          description: total number of bytes overwritten in writing into the collection\n          example: 123456\n          format: int64\n          type: integer\n        bulk_bytes_inserted:\n          description: total number of bytes inserted into the collection during bulk\n          format: int64\n          type: integer\n        bulk_bytes_overwritten:\n          description: total number of bytes overwritten in writing into the collection\n            during bulk\n          format: int64\n          type: integer\n      type: object\n    CreateAliasRequest:\n      example:\n        collections: '[\"commons.foo\", \"prod.demo\"]'\n        name: aliasName\n        description: version alias\n      properties:\n        name:\n          description: Alias name\n          example: aliasName\n          type: string\n        description:\n          description: optional description\n          example: version alias\n          type: string\n        collections:\n          description: list of fully qualified collection names referenced by alias\n          example: '[\"commons.foo\", \"prod.demo\"]'\n          items:\n            type: string\n          type: array\n      required:\n      - collections\n      - name\n      type: object\n    CreateAliasResponse:\n      example:\n        data:\n          workspace: commons\n          collections: '[\"commons.foo\", \"prod.demo\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: alias referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          $ref: '#/components/schemas/Alias'\n      type: object\n    CreateApiKeyRequest:\n      example:\n        role: role\n        name: my-app\n      properties:\n        name:\n          description: Name for this API key.\n          example: my-app\n          type: string\n        role:\n          type: string\n      required:\n      - name\n      type: object\n    CreateApiKeyResponse:\n      example:\n        data:\n          role: read-only\n          name: my-key\n          created_at: 2001-08-28T00:23:41Z\n          state: ACTIVE\n          created_by: test@example.com\n          key: aB35kDjg*******************************\n          last_access_time: 2001-08-28T00:23:41Z\n      properties:\n        data:\n          $ref: '#/components/schemas/ApiKey'\n      type: object\n    CreateCollectionRequest:\n      example:\n        field_mappings:\n        - output_field:\n            on_error: SKIP\n            value:\n              sql: SHA256()\n            field_name: zip_hash\n          name: myTestMapping\n          input_fields:\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          is_drop_all_fields: true\n        - output_field:\n            on_error: SKIP\n            value:\n              sql: SHA256()\n            field_name: zip_hash\n          name: myTestMapping\n          input_fields:\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          - is_drop: true\n            if_missing: SKIP\n            param: zip\n            field_name: address.city.zipcode\n          is_drop_all_fields: true\n        field_mapping_query:\n          sql: sql\n        sources:\n        - s3:\n            bucket: s3://customer-account-info\n            object_count_downloaded: 0\n            prefixes: '[\"/transactions\", \"/stores\"]'\n            object_count_total: 6\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 1\n            region: us-west-2\n          format_params:\n            xml:\n              attribute_prefix: _attr\n              doc_tag: row\n              encoding: UTF-8\n              value_tag: value\n              root_tag: root\n            csv:\n              quoteChar: '\"'\n              escapeChar: \\\n              columnNames: '[\"c1\", \"c2\", \"c3\"]'\n              columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n              firstLineAsColumnNames: true\n              encoding: UTF-8\n              separator: ','\n            postgres_dms: true\n            json: true\n            mssql_dms: true\n            oracle_dms: true\n            mysql_dms: true\n          azure_blob_storage:\n            container: server-logs\n            prefix: prefix/to/blobs\n            pattern: prefix/to/**/keys/*.format\n            blob_count_total: 9\n            blob_bytes_total: 3\n            blob_count_downloaded: 7\n          file_upload:\n            file_name: file1.json\n            file_size: 12345\n            file_upload_time: 2019-01-15T21:48:23Z\n          kinesis:\n            offset_reset_policy: EARLIEST\n            aws_region: us-east-2\n            stream_name: click_stream\n            dms_primary_key:\n            - dms_primary_key\n            - dms_primary_key\n          dynamodb:\n            aws_region: us-east-2\n            rcu: 1000\n            current_status:\n              initial_dump_completion_percentage: 0.73\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              state: PROCESSING_STREAM\n            use_scan_api: true\n            table_name: dynamodb_table_name\n            status:\n              scan_total_records: 2000\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              scan_start_time: 2001-08-28T00:23:41Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          integration_name: aws-integration\n          azure_event_hubs:\n            offset_reset_policy: EARLIEST\n            hub_id: event-hub-1\n            status:\n              partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              state: ACTIVE\n          gcs:\n            bucket: server-logs\n            object_count_downloaded: 5\n            object_count_total: 5\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 2\n          kafka:\n            offset_reset_policy: LATEST\n            kafka_topic_name: example-topic\n            status:\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              kafka_partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              state: ACTIVE\n            use_v3: true\n          azure_service_bus:\n            topic: rockset-topic\n            subscription: rockset-subscription\n            status:\n              sessions:\n                key:\n                  sequence_number: 323862\n                  last_processed: 2022-08-23T00:13:41Z\n              first_processed_at: 2021-08-28T00:23:41Z\n              records_processed: 1000\n          mongodb:\n            database_name: my_database\n            collection_name: my_collection\n            status:\n              scan_total_records: 2000\n              stream_records_deleted: 100\n              stream_records_inserted: 10000\n              stream_records_updated: 1000\n              scan_start_time: 2001-08-28T00:23:41Z\n              stream_last_update_processed_at: 2019-01-15T21:48:23Z\n              stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          status:\n            last_processed_item: /path/to/some/object\n            last_processed_at: 2019-01-15T21:48:23Z\n            total_processed_items: 32849023\n            state: INITIALIZING\n            message: error 403 forbidden\n        - s3:\n            bucket: s3://customer-account-info\n            object_count_downloaded: 0\n            prefixes: '[\"/transactions\", \"/stores\"]'\n            object_count_total: 6\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 1\n            region: us-west-2\n          format_params:\n            xml:\n              attribute_prefix: _attr\n              doc_tag: row\n              encoding: UTF-8\n              value_tag: value\n              root_tag: root\n            csv:\n              quoteChar: '\"'\n              escapeChar: \\\n              columnNames: '[\"c1\", \"c2\", \"c3\"]'\n              columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n              firstLineAsColumnNames: true\n              encoding: UTF-8\n              separator: ','\n            postgres_dms: true\n            json: true\n            mssql_dms: true\n            oracle_dms: true\n            mysql_dms: true\n          azure_blob_storage:\n            container: server-logs\n            prefix: prefix/to/blobs\n            pattern: prefix/to/**/keys/*.format\n            blob_count_total: 9\n            blob_bytes_total: 3\n            blob_count_downloaded: 7\n          file_upload:\n            file_name: file1.json\n            file_size: 12345\n            file_upload_time: 2019-01-15T21:48:23Z\n          kinesis:\n            offset_reset_policy: EARLIEST\n            aws_region: us-east-2\n            stream_name: click_stream\n            dms_primary_key:\n            - dms_primary_key\n            - dms_primary_key\n          dynamodb:\n            aws_region: us-east-2\n            rcu: 1000\n            current_status:\n              initial_dump_completion_percentage: 0.73\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              state: PROCESSING_STREAM\n            use_scan_api: true\n            table_name: dynamodb_table_name\n            status:\n              scan_total_records: 2000\n              stream_last_processed_at: 2019-01-15T21:48:23Z\n              scan_start_time: 2001-08-28T00:23:41Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          integration_name: aws-integration\n          azure_event_hubs:\n            offset_reset_policy: EARLIEST\n            hub_id: event-hub-1\n            status:\n              partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              state: ACTIVE\n          gcs:\n            bucket: server-logs\n            object_count_downloaded: 5\n            object_count_total: 5\n            prefix: prefix/to/keys\n            pattern: prefix/to/**/keys/*.format\n            object_bytes_total: 2\n          kafka:\n            offset_reset_policy: LATEST\n            kafka_topic_name: example-topic\n            status:\n              num_documents_processed: 1337\n              last_consumed_time: 2001-08-28T00:23:41Z\n              kafka_partitions:\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              - partition_offset: 100\n                partition_number: 123\n                offset_lag: 10\n              state: ACTIVE\n            use_v3: true\n          azure_service_bus:\n            topic: rockset-topic\n            subscription: rockset-subscription\n            status:\n              sessions:\n                key:\n                  sequence_number: 323862\n                  last_processed: 2022-08-23T00:13:41Z\n              first_processed_at: 2021-08-28T00:23:41Z\n              records_processed: 1000\n          mongodb:\n            database_name: my_database\n            collection_name: my_collection\n            status:\n              scan_total_records: 2000\n              stream_records_deleted: 100\n              stream_records_inserted: 10000\n              stream_records_updated: 1000\n              scan_start_time: 2001-08-28T00:23:41Z\n              stream_last_update_processed_at: 2019-01-15T21:48:23Z\n              stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n              scan_end_time: 2001-08-28T00:23:41Z\n              stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n              scan_records_processed: 1000\n              state: SCANNING_TABLE\n          status:\n            last_processed_item: /path/to/some/object\n            last_processed_at: 2019-01-15T21:48:23Z\n            total_processed_items: 32849023\n            state: INITIALIZING\n            message: error 403 forbidden\n        insert_only: true\n        event_time_info:\n          field: timestamp\n          format: seconds_since_epoch\n          time_zone: UTC\n        retention_secs: 1000000\n        name: global-transactions\n        description: transactions from stores worldwide\n        clustering_key:\n        - keys: '[\"value1\", \"value2\"]'\n          type: AUTO\n          field_name: address.city.zipcode\n        - keys: '[\"value1\", \"value2\"]'\n          type: AUTO\n          field_name: address.city.zipcode\n      properties:\n        name:\n          description: unique identifier for collection, can contain alphanumeric\n            or dash characters\n          example: global-transactions\n          type: string\n        description:\n          description: text describing the collection\n          example: transactions from stores worldwide\n          type: string\n        sources:\n          description: list of sources from which to ingest data\n          items:\n            $ref: '#/components/schemas/Source'\n          type: array\n        retention_secs:\n          description: number of seconds after which data is purged, based on event\n            time\n          example: 1000000\n          format: int64\n          type: integer\n        insert_only:\n          description: If true disallows updates and deletes, but makes indexing more\n            efficient\n          type: boolean\n        event_time_info:\n          $ref: '#/components/schemas/EventTimeInfo'\n        field_mappings:\n          description: list of mappings\n          items:\n            $ref: '#/components/schemas/FieldMappingV2'\n          type: array\n        field_mapping_query:\n          $ref: '#/components/schemas/FieldMappingQuery'\n        clustering_key:\n          description: list of clustering fields\n          items:\n            $ref: '#/components/schemas/FieldPartition'\n          type: array\n      required:\n      - name\n      type: object\n    CreateCollectionResponse:\n      example:\n        data:\n          field_mapping_query:\n            sql: sql\n          workspace: commons\n          aliases:\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          sources:\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          insert_only: true\n          created_at: 2001-08-28T00:23:41Z\n          description: transactions from stores worldwide\n          clustering_key:\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          created_by: hello@rockset.com\n          field_mappings:\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          stats:\n            doc_count: 2145\n            inverted_index_size: 123456\n            last_updated_ms: 1535101094433\n            total_size: 123456\n            purged_doc_count: 2145\n            range_index_size: 123456\n            purged_doc_size: 123456\n            bulk_bytes_inserted: 2\n            fill_progress: 0.6\n            bytes_overwritten: 123456\n            bytes_inserted: 123456\n            total_index_size: 123456\n            column_index_size: 123456\n            last_queried_ms: 1535101119334\n            row_index_size: 123456\n            bulk_bytes_overwritten: 4\n          retention_secs: 2592000\n          name: global-transactions\n          status: READY\n      properties:\n        data:\n          $ref: '#/components/schemas/Collection'\n      type: object\n    CreateIntegrationRequest:\n      example:\n        s3:\n          aws_access_key:\n            aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n            aws_secret_access_key: wJal....\n          aws_role:\n            aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n        azure_event_hubs:\n          connection_string: connection_string\n        gcs:\n          gcp_service_account:\n            service_account_key_file_json: service_account_key_file_json\n        segment:\n          connection_string: connection_string\n        kafka:\n          source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n          kafka_topic_names:\n          - kafka_topic_names\n          - kafka_topic_names\n          security_config:\n            api_key: api_key\n            secret: secret\n          kafka_data_format: json\n          bootstrap_servers: bootstrap_servers\n          connection_string: connection_string\n          use_v3: true\n        name: event-logs\n        azure_blob_storage:\n          connection_string: connection_string\n        description: AWS account with event data for the data science team.\n        kinesis:\n          aws_access_key:\n            aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n            aws_secret_access_key: wJal....\n          aws_role:\n            aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n        mongodb:\n          connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n        dynamodb:\n          s3_export_bucket_name: s3_export_bucket_name\n          aws_access_key:\n            aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n            aws_secret_access_key: wJal....\n          aws_role:\n            aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n      properties:\n        name:\n          description: descriptive label\n          example: event-logs\n          type: string\n        description:\n          description: longer explanation for the integration\n          example: AWS account with event data for the data science team.\n          type: string\n        s3:\n          $ref: '#/components/schemas/S3Integration'\n        kinesis:\n          $ref: '#/components/schemas/KinesisIntegration'\n        dynamodb:\n          $ref: '#/components/schemas/DynamodbIntegration'\n        gcs:\n          $ref: '#/components/schemas/GcsIntegration'\n        azure_blob_storage:\n          $ref: '#/components/schemas/AzureBlobStorageIntegration'\n        azure_event_hubs:\n          $ref: '#/components/schemas/AzureEventHubsIntegration'\n        segment:\n          $ref: '#/components/schemas/SegmentIntegration'\n        kafka:\n          $ref: '#/components/schemas/KafkaIntegration'\n        mongodb:\n          $ref: '#/components/schemas/MongoDbIntegration'\n      required:\n      - name\n      type: object\n    CreateIntegrationResponse:\n      example:\n        data:\n          s3:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_blob_storage:\n            connection_string: connection_string\n          description: AWS account with event data for the data science team.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n          kinesis:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          dynamodb:\n            s3_export_bucket_name: s3_export_bucket_name\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_event_hubs:\n            connection_string: connection_string\n          collections:\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          gcs:\n            gcp_service_account:\n              service_account_key_file_json: service_account_key_file_json\n          segment:\n            connection_string: connection_string\n          kafka:\n            source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n            kafka_topic_names:\n            - kafka_topic_names\n            - kafka_topic_names\n            security_config:\n              api_key: api_key\n              secret: secret\n            kafka_data_format: json\n            bootstrap_servers: bootstrap_servers\n            connection_string: connection_string\n            use_v3: true\n          name: event-logs\n          azure_service_bus:\n            connection_string: connection_string\n          mongodb:\n            connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n      properties:\n        data:\n          $ref: '#/components/schemas/Integration'\n      type: object\n    CreateQueryLambdaRequest:\n      example:\n        name: myQueryLambda\n        description: production version foo\n        sql:\n          default_parameters:\n          - name: _id\n            type: string\n            value: 85beb391\n          - name: _id\n            type: string\n            value: 85beb391\n          query: SELECT 'Foo'\n      properties:\n        name:\n          description: Query Lambda name\n          example: myQueryLambda\n          type: string\n        description:\n          description: optional description\n          example: production version foo\n          type: string\n        sql:\n          $ref: '#/components/schemas/QueryLambdaSql'\n      required:\n      - name\n      - sql\n      type: object\n    CreateQueryLambdaTagRequest:\n      example:\n        tag_name: production\n        version: 123ABC\n      properties:\n        tag_name:\n          description: name of Query Lambda tag\n          example: production\n          type: string\n        version:\n          description: hash identifying a Query Lambda tag\n          example: 123ABC\n          type: string\n      required:\n      - tag_name\n      - version\n      type: object\n    CreateRoleRequest:\n      example:\n        role_name: read_write\n        privileges:\n        - cluster: '*ALL*'\n          action: Create collection\n          resource_name: commons\n        - cluster: '*ALL*'\n          action: Create collection\n          resource_name: commons\n        description: Role with read and write privileges to all collections.\n      properties:\n        role_name:\n          description: Unique identifier for the role.\n          example: read_write\n          type: string\n        description:\n          description: Description for the role.\n          example: Role with read and write privileges to all collections.\n          type: string\n        privileges:\n          description: List of privileges that will be associated with the role.\n          items:\n            $ref: '#/components/schemas/Privilege'\n          type: array\n      type: object\n    CreateUserRequest:\n      example:\n        roles: '[\"admin\", \"member\", \"read-only\"]'\n        email: hello@rockset.com\n      properties:\n        email:\n          description: user email, must be unique\n          example: hello@rockset.com\n          type: string\n        roles:\n          description: List of roles for a given user\n          example: '[\"admin\", \"member\", \"read-only\"]'\n          items:\n            type: string\n          type: array\n      required:\n      - email\n      - roles\n      type: object\n    CreateUserResponse:\n      example:\n        data:\n          roles: '[\"admin\", \"member\", \"read-only\"]'\n          created_at: 2001-08-28T00:23:41Z\n          last_name: Doe\n          state: ACTIVE\n          first_name: John\n          email: hello@rockset.com\n      properties:\n        data:\n          $ref: '#/components/schemas/User'\n      type: object\n    CreateViewRequest:\n      example:\n        query: SELECT * FROM foo\n        name: myAwesomeView\n        description: view of awesome collection\n      properties:\n        name:\n          description: View name\n          example: myAwesomeView\n          type: string\n        description:\n          description: optional description\n          example: view of awesome collection\n          type: string\n        query:\n          description: SQL for this view\n          example: SELECT * FROM foo\n          type: string\n      required:\n      - name\n      - query\n      type: object\n    CreateViewResponse:\n      example:\n        data:\n          owner_email: abc@rockset.com\n          path: path\n          workspace: commons\n          query_sql: SELECT * FROM commons.foo\n          entities: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: view referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          $ref: '#/components/schemas/View'\n      type: object\n    CreateWorkspaceRequest:\n      example:\n        name: event_logs\n        description: Datasets of system logs for the ops team.\n      properties:\n        name:\n          description: descriptive label and unique identifier\n          example: event_logs\n          type: string\n        description:\n          description: longer explanation for the workspace\n          example: Datasets of system logs for the ops team.\n          type: string\n      required:\n      - name\n      type: object\n    CreateWorkspaceResponse:\n      example:\n        data:\n          name: event_logs\n          created_at: 2001-08-28T00:23:41Z\n          description: Datasets of system logs for the ops team.\n          collection_count: 3\n          created_by: hello@rockset.com\n      properties:\n        data:\n          $ref: '#/components/schemas/Workspace'\n      type: object\n    CsvParams:\n      example:\n        quoteChar: '\"'\n        escapeChar: \\\n        columnNames: '[\"c1\", \"c2\", \"c3\"]'\n        columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n        firstLineAsColumnNames: true\n        encoding: UTF-8\n        separator: ','\n      properties:\n        firstLineAsColumnNames:\n          description: If the first line in every object specifies the column names\n          example: true\n          type: boolean\n        separator:\n          description: a single character that is the column separator\n          example: ','\n          type: string\n        encoding:\n          description: 'can be one of: UTF-8, ISO_8859_1, UTF-16'\n          example: UTF-8\n          type: string\n        columnNames:\n          description: names of columns\n          example: '[\"c1\", \"c2\", \"c3\"]'\n          items:\n            type: string\n          type: array\n        columnTypes:\n          description: names of columns\n          example: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n          items:\n            enum:\n            - UNKNOWN\n            - BOOLEAN\n            - BOOL\n            - INTEGER\n            - INT\n            - FLOAT\n            - TIME\n            - DATE\n            - DATETIME\n            - TIMESTAMP\n            - STRING\n            type: string\n          type: array\n        quoteChar:\n          description: character within which a cell value is enclosed,null character\n            if no such character, default is '\"'\n          example: '\"'\n          type: string\n        escapeChar:\n          description: escape character removes any special meaning from the following\n            character,default is '\\'\n          example: \\\n          type: string\n      type: object\n    DeleteAliasResponse:\n      example:\n        data:\n          workspace: commons\n          collections: '[\"commons.foo\", \"prod.demo\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: alias referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          $ref: '#/components/schemas/Alias'\n      type: object\n    DeleteApiKeyResponse:\n      example:\n        data:\n          role: read-only\n          name: my-key\n          created_at: 2001-08-28T00:23:41Z\n          state: ACTIVE\n          created_by: test@example.com\n          key: aB35kDjg*******************************\n          last_access_time: 2001-08-28T00:23:41Z\n      properties:\n        data:\n          $ref: '#/components/schemas/ApiKey'\n      type: object\n    DeleteCollectionResponse:\n      example:\n        data:\n          field_mapping_query:\n            sql: sql\n          workspace: commons\n          aliases:\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          sources:\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          insert_only: true\n          created_at: 2001-08-28T00:23:41Z\n          description: transactions from stores worldwide\n          clustering_key:\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          created_by: hello@rockset.com\n          field_mappings:\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          stats:\n            doc_count: 2145\n            inverted_index_size: 123456\n            last_updated_ms: 1535101094433\n            total_size: 123456\n            purged_doc_count: 2145\n            range_index_size: 123456\n            purged_doc_size: 123456\n            bulk_bytes_inserted: 2\n            fill_progress: 0.6\n            bytes_overwritten: 123456\n            bytes_inserted: 123456\n            total_index_size: 123456\n            column_index_size: 123456\n            last_queried_ms: 1535101119334\n            row_index_size: 123456\n            bulk_bytes_overwritten: 4\n          retention_secs: 2592000\n          name: global-transactions\n          status: READY\n      properties:\n        data:\n          $ref: '#/components/schemas/Collection'\n      type: object\n    DeleteDocumentsRequest:\n      example:\n        data:\n        - _id: 2cd61e3b\n        - _id: 2cd61e3b\n      properties:\n        data:\n          description: Array of IDs of documents to be deleted\n          items:\n            $ref: '#/components/schemas/DeleteDocumentsRequestData'\n          type: array\n      required:\n      - data\n      type: object\n    DeleteDocumentsRequestData:\n      example:\n        _id: 2cd61e3b\n      properties:\n        _id:\n          description: unique document ID\n          example: 2cd61e3b\n          type: string\n      required:\n      - _id\n      type: object\n    DeleteDocumentsResponse:\n      example:\n        data:\n        - patch_id: 486gsg8\n          _collection: customers\n          _id: 2cd61e3b\n          error:\n            trace_id: trace_id\n            query_id: query_id\n            error_id: error_id\n            line: 0\n            column: 6\n            message: collection not found\n            type: InvalidInput\n          status: ADDED\n        - patch_id: 486gsg8\n          _collection: customers\n          _id: 2cd61e3b\n          error:\n            trace_id: trace_id\n            query_id: query_id\n            error_id: error_id\n            line: 0\n            column: 6\n            message: collection not found\n            type: InvalidInput\n          status: ADDED\n      properties:\n        data:\n          description: information about deleted documents\n          items:\n            $ref: '#/components/schemas/DocumentStatus'\n          type: array\n      type: object\n    DeleteIntegrationResponse:\n      example:\n        data:\n          s3:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_blob_storage:\n            connection_string: connection_string\n          description: AWS account with event data for the data science team.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n          kinesis:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          dynamodb:\n            s3_export_bucket_name: s3_export_bucket_name\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_event_hubs:\n            connection_string: connection_string\n          collections:\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          gcs:\n            gcp_service_account:\n              service_account_key_file_json: service_account_key_file_json\n          segment:\n            connection_string: connection_string\n          kafka:\n            source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n            kafka_topic_names:\n            - kafka_topic_names\n            - kafka_topic_names\n            security_config:\n              api_key: api_key\n              secret: secret\n            kafka_data_format: json\n            bootstrap_servers: bootstrap_servers\n            connection_string: connection_string\n            use_v3: true\n          name: event-logs\n          azure_service_bus:\n            connection_string: connection_string\n          mongodb:\n            connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n      properties:\n        data:\n          $ref: '#/components/schemas/Integration'\n      type: object\n    DeleteQueryLambdaResponse:\n      example:\n        data:\n          workspace: commons\n          last_updated_by: ..@rockset.com\n          last_updated: 2001-08-28T00:23:41Z\n          latest_version:\n            workspace: commons\n            collections:\n            - collections\n            - collections\n            stats:\n              last_executed_by: '...@rockset.com'\n              last_execution_error_message: '[error message]'\n              last_execution_error: 2001-08-28T00:23:41Z\n              last_executed: 2001-08-28T00:23:41Z\n            name: myQuery\n            created_at: 2001-08-28T00:23:41Z\n            description: production version foo\n            state: ACTIVE\n            created_by: ..@rockset.com\n            version: acb99feg92bcaf\n            sql:\n              default_parameters:\n              - name: _id\n                type: string\n                value: 85beb391\n              - name: _id\n                type: string\n                value: 85beb391\n              query: SELECT 'Foo'\n          collections:\n          - collections\n          - collections\n          name: myQuery\n          version_count: 1\n      properties:\n        data:\n          $ref: '#/components/schemas/QueryLambda'\n      type: object\n    DeleteUserResponse:\n      example:\n        data:\n          roles: '[\"admin\", \"member\", \"read-only\"]'\n          created_at: 2001-08-28T00:23:41Z\n          last_name: Doe\n          state: ACTIVE\n          first_name: John\n          email: hello@rockset.com\n      properties:\n        data:\n          $ref: '#/components/schemas/User'\n      type: object\n    DeleteViewResponse:\n      example:\n        data:\n          owner_email: abc@rockset.com\n          path: path\n          workspace: commons\n          query_sql: SELECT * FROM commons.foo\n          entities: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: view referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          $ref: '#/components/schemas/View'\n      type: object\n    DeleteWorkspaceResponse:\n      example:\n        data:\n          name: event_logs\n          created_at: 2001-08-28T00:23:41Z\n          description: Datasets of system logs for the ops team.\n          collection_count: 3\n          created_by: hello@rockset.com\n      properties:\n        data:\n          $ref: '#/components/schemas/Workspace'\n      type: object\n    DocumentStatus:\n      example:\n        patch_id: 486gsg8\n        _collection: customers\n        _id: 2cd61e3b\n        error:\n          trace_id: trace_id\n          query_id: query_id\n          error_id: error_id\n          line: 0\n          column: 6\n          message: collection not found\n          type: InvalidInput\n        status: ADDED\n      properties:\n        _collection:\n          description: collection name\n          example: customers\n          type: string\n        error:\n          $ref: '#/components/schemas/ErrorModel'\n        _id:\n          description: unique document ID\n          example: 2cd61e3b\n          type: string\n        status:\n          description: status of the document\n          enum:\n          - ADDED\n          - REPLACED\n          - DELETED\n          - PATCHED\n          - ERROR\n          example: ADDED\n          type: string\n        patch_id:\n          description: unique id used to represent each patch request\n          example: 486gsg8\n          type: string\n      type: object\n    DynamodbIntegration:\n      example:\n        s3_export_bucket_name: s3_export_bucket_name\n        aws_access_key:\n          aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n          aws_secret_access_key: wJal....\n        aws_role:\n          aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n      properties:\n        aws_access_key:\n          $ref: '#/components/schemas/AwsAccessKey'\n        aws_role:\n          $ref: '#/components/schemas/AwsRole'\n        s3_export_bucket_name:\n          type: string\n      type: object\n    ErrorModel:\n      description: Describes details about an error\n      example:\n        trace_id: trace_id\n        query_id: query_id\n        error_id: error_id\n        line: 0\n        column: 6\n        message: collection not found\n        type: InvalidInput\n      properties:\n        message:\n          description: descriptive message about the error\n          example: collection not found\n          type: string\n        type:\n          description: category of the error\n          enum:\n          - AUTHEXCEPTION\n          - VERSIONEXCEPTION\n          - INTERNALERROR\n          - INVALIDINPUT\n          - NOTIMPLEMENTEDYET\n          - RESOURCEEXCEEDED\n          - ALREADYEXISTS\n          - NOTALLOWED\n          - NOTACCEPTABLE\n          - NOTSUPPORTED\n          - NOTFOUND\n          - DEPENDENTRESOURCES\n          - QUERY_ERROR\n          - NOT_READY\n          - FORBIDDEN\n          - QUERY_TIMEOUT\n          - ROLE_NOT_FOUND\n          - CONNECTION_ERROR\n          - CREATING\n          - BADREQUEST\n          - SERVICEUNAVAILABLE\n          - RATELIMITEXCEEDED\n          - QUERY_CANCELLED\n          - CLIENT_CONNECTION_ERROR\n          example: InvalidInput\n          type: string\n        line:\n          description: Line where the error happened (if applicable)\n          format: int32\n          type: integer\n        column:\n          description: Column where the error happened (if applicable)\n          format: int32\n          type: integer\n        trace_id:\n          description: Internal trace ID to help with debugging\n          type: string\n        error_id:\n          description: ID of the error\n          type: string\n        query_id:\n          description: ID of the query (if applicable)\n          type: string\n      type: object\n    EventTimeInfo:\n      example:\n        field: timestamp\n        format: seconds_since_epoch\n        time_zone: UTC\n      properties:\n        field:\n          description: name of the field containing event time\n          example: timestamp\n          type: string\n        format:\n          description: 'format of time field, can be one of: milliseconds_since_epoch,\n            seconds_since_epoch'\n          example: seconds_since_epoch\n          type: string\n        time_zone:\n          description: default time zone, in standard IANA format\n          example: UTC\n          type: string\n      required:\n      - field\n      type: object\n    ExecuteQueryLambdaRequest:\n      example:\n        generate_warnings: true\n        initial_paginate_response_doc_count: 6\n        paginate: true\n        default_row_limit: 0\n        parameters:\n        - name: _id\n          type: string\n          value: 85beb391\n        - name: _id\n          type: string\n          value: 85beb391\n      properties:\n        parameters:\n          description: list of named parameters\n          items:\n            $ref: '#/components/schemas/QueryParameter'\n          type: array\n        default_row_limit:\n          description: Row limit to use if no limit specified in the SQL query text\n          format: int32\n          type: integer\n        generate_warnings:\n          description: Whether to generate warnings\n          type: boolean\n        paginate:\n          description: Flag to paginate and store the results of this query for later\n            / sequential retrieval.\n          type: boolean\n        initial_paginate_response_doc_count:\n          description: Number of documents to return in addition to paginating for\n            this query call. Only relevant if `paginate` flag is also set.\n          format: int32\n          type: integer\n      type: object\n    FieldMapping:\n      type: object\n    FieldMappingQuery:\n      example:\n        sql: sql\n      properties:\n        sql:\n          description: SELECT * EXCEPT (name), SHA256(name) AS name_anon FROM _input\n          example: sql\n          type: string\n      type: object\n    FieldMappingV2:\n      example:\n        output_field:\n          on_error: SKIP\n          value:\n            sql: SHA256()\n          field_name: zip_hash\n        name: myTestMapping\n        input_fields:\n        - is_drop: true\n          if_missing: SKIP\n          param: zip\n          field_name: address.city.zipcode\n        - is_drop: true\n          if_missing: SKIP\n          param: zip\n          field_name: address.city.zipcode\n        is_drop_all_fields: true\n      properties:\n        name:\n          description: A user specified string that is a name for this mapping\n          example: myTestMapping\n          type: string\n        is_drop_all_fields:\n          description: A boolean that determines whether to drop all fields in this\n            document. If set, input and output fields should not be set\n          example: true\n          type: boolean\n        input_fields:\n          description: A List of InputField for this mapping\n          items:\n            $ref: '#/components/schemas/InputField'\n          type: array\n        output_field:\n          $ref: '#/components/schemas/OutputField'\n      type: object\n    FieldPartition:\n      example:\n        keys: '[\"value1\", \"value2\"]'\n        type: AUTO\n        field_name: address.city.zipcode\n      properties:\n        field_name:\n          description: The name of a field, parsed as a SQL qualified name\n          example: address.city.zipcode\n          type: string\n        type:\n          description: The type of partitions on a field\n          enum:\n          - AUTO\n          example: AUTO\n          type: string\n        keys:\n          description: The values for partitioning of a field. Unneeded if the partition\n            type is AUTO.\n          example: '[\"value1\", \"value2\"]'\n          items:\n            type: string\n          type: array\n      type: object\n    FormatParams:\n      example:\n        xml:\n          attribute_prefix: _attr\n          doc_tag: row\n          encoding: UTF-8\n          value_tag: value\n          root_tag: root\n        csv:\n          quoteChar: '\"'\n          escapeChar: \\\n          columnNames: '[\"c1\", \"c2\", \"c3\"]'\n          columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n          firstLineAsColumnNames: true\n          encoding: UTF-8\n          separator: ','\n        postgres_dms: true\n        json: true\n        mssql_dms: true\n        oracle_dms: true\n        mysql_dms: true\n      properties:\n        json:\n          description: source data is in json format\n          example: true\n          type: boolean\n        csv:\n          $ref: '#/components/schemas/CsvParams'\n        xml:\n          $ref: '#/components/schemas/XmlParams'\n        mysql_dms:\n          type: boolean\n        postgres_dms:\n          type: boolean\n        mssql_dms:\n          type: boolean\n        oracle_dms:\n          type: boolean\n      type: object\n    GcpServiceAccount:\n      example:\n        service_account_key_file_json: service_account_key_file_json\n      properties:\n        service_account_key_file_json:\n          description: Contents of JSON Service Account key file\n          type: string\n      required:\n      - service_account_key_file_json\n      type: object\n    GcsIntegration:\n      example:\n        gcp_service_account:\n          service_account_key_file_json: service_account_key_file_json\n      properties:\n        gcp_service_account:\n          $ref: '#/components/schemas/GcpServiceAccount'\n      type: object\n    GetAliasResponse:\n      example:\n        data:\n          workspace: commons\n          collections: '[\"commons.foo\", \"prod.demo\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: alias referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          $ref: '#/components/schemas/Alias'\n      type: object\n    GetApiKeyResponse:\n      example:\n        data:\n          role: read-only\n          name: my-key\n          created_at: 2001-08-28T00:23:41Z\n          state: ACTIVE\n          created_by: test@example.com\n          key: aB35kDjg*******************************\n          last_access_time: 2001-08-28T00:23:41Z\n      properties:\n        data:\n          $ref: '#/components/schemas/ApiKey'\n      type: object\n    GetCollectionResponse:\n      example:\n        data:\n          field_mapping_query:\n            sql: sql\n          workspace: commons\n          aliases:\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          sources:\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          insert_only: true\n          created_at: 2001-08-28T00:23:41Z\n          description: transactions from stores worldwide\n          clustering_key:\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          created_by: hello@rockset.com\n          field_mappings:\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          stats:\n            doc_count: 2145\n            inverted_index_size: 123456\n            last_updated_ms: 1535101094433\n            total_size: 123456\n            purged_doc_count: 2145\n            range_index_size: 123456\n            purged_doc_size: 123456\n            bulk_bytes_inserted: 2\n            fill_progress: 0.6\n            bytes_overwritten: 123456\n            bytes_inserted: 123456\n            total_index_size: 123456\n            column_index_size: 123456\n            last_queried_ms: 1535101119334\n            row_index_size: 123456\n            bulk_bytes_overwritten: 4\n          retention_secs: 2592000\n          name: global-transactions\n          status: READY\n      properties:\n        data:\n          $ref: '#/components/schemas/Collection'\n      type: object\n    GetIntegrationResponse:\n      example:\n        data:\n          s3:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_blob_storage:\n            connection_string: connection_string\n          description: AWS account with event data for the data science team.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n          kinesis:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          dynamodb:\n            s3_export_bucket_name: s3_export_bucket_name\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_event_hubs:\n            connection_string: connection_string\n          collections:\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          gcs:\n            gcp_service_account:\n              service_account_key_file_json: service_account_key_file_json\n          segment:\n            connection_string: connection_string\n          kafka:\n            source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n            kafka_topic_names:\n            - kafka_topic_names\n            - kafka_topic_names\n            security_config:\n              api_key: api_key\n              secret: secret\n            kafka_data_format: json\n            bootstrap_servers: bootstrap_servers\n            connection_string: connection_string\n            use_v3: true\n          name: event-logs\n          azure_service_bus:\n            connection_string: connection_string\n          mongodb:\n            connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n      properties:\n        data:\n          $ref: '#/components/schemas/Integration'\n      type: object\n    GetViewResponse:\n      example:\n        data:\n          owner_email: abc@rockset.com\n          path: path\n          workspace: commons\n          query_sql: SELECT * FROM commons.foo\n          entities: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: view referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          $ref: '#/components/schemas/View'\n      type: object\n    GetVirtualInstanceResponse:\n      example:\n        data:\n          desired_type: FREE\n          last_updated: 2001-08-28T00:23:41Z\n          estimated_switch_duration_minutes: 20\n          scaled_pod_count: 6\n          monitoring_enabled: true\n          desired_size: MEDIUM\n          current_size: MEDIUM\n          state: ACTIVE\n          id: 123e4567-e89b-12d3-a456-556642440000\n          current_type: FREE\n          default_pod_count: 0\n      properties:\n        data:\n          $ref: '#/components/schemas/VirtualInstance'\n      type: object\n    GetWorkspaceResponse:\n      example:\n        data:\n          name: event_logs\n          created_at: 2001-08-28T00:23:41Z\n          description: Datasets of system logs for the ops team.\n          collection_count: 3\n          created_by: hello@rockset.com\n      properties:\n        data:\n          $ref: '#/components/schemas/Workspace'\n      type: object\n    InputField:\n      example:\n        is_drop: true\n        if_missing: SKIP\n        param: zip\n        field_name: address.city.zipcode\n      properties:\n        field_name:\n          description: The name of a field, parsed as a SQL qualified name\n          example: address.city.zipcode\n          type: string\n        if_missing:\n          description: Define the behaviour if fieldName is missing or is null\n          enum:\n          - SKIP\n          - PASS\n          example: SKIP\n          type: string\n        is_drop:\n          description: If true, then drop fieldName from the document\n          example: true\n          type: boolean\n        param:\n          description: Sql parameter name\n          example: zip\n          type: string\n      type: object\n    Integration:\n      description: Integrations that can be associated with data sources to create\n        collections. Only one type of integration may be specified.\n      example:\n        s3:\n          aws_access_key:\n            aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n            aws_secret_access_key: wJal....\n          aws_role:\n            aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n        azure_blob_storage:\n          connection_string: connection_string\n        description: AWS account with event data for the data science team.\n        created_at: 2001-08-28T00:23:41Z\n        created_by: hello@rockset.com\n        kinesis:\n          aws_access_key:\n            aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n            aws_secret_access_key: wJal....\n          aws_role:\n            aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n        dynamodb:\n          s3_export_bucket_name: s3_export_bucket_name\n          aws_access_key:\n            aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n            aws_secret_access_key: wJal....\n          aws_role:\n            aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n        azure_event_hubs:\n          connection_string: connection_string\n        collections:\n        - field_mapping_query:\n            sql: sql\n          workspace: commons\n          aliases:\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          sources:\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          insert_only: true\n          created_at: 2001-08-28T00:23:41Z\n          description: transactions from stores worldwide\n          clustering_key:\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          created_by: hello@rockset.com\n          field_mappings:\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          stats:\n            doc_count: 2145\n            inverted_index_size: 123456\n            last_updated_ms: 1535101094433\n            total_size: 123456\n            purged_doc_count: 2145\n            range_index_size: 123456\n            purged_doc_size: 123456\n            bulk_bytes_inserted: 2\n            fill_progress: 0.6\n            bytes_overwritten: 123456\n            bytes_inserted: 123456\n            total_index_size: 123456\n            column_index_size: 123456\n            last_queried_ms: 1535101119334\n            row_index_size: 123456\n            bulk_bytes_overwritten: 4\n          retention_secs: 2592000\n          name: global-transactions\n          status: READY\n        - field_mapping_query:\n            sql: sql\n          workspace: commons\n          aliases:\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          sources:\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          insert_only: true\n          created_at: 2001-08-28T00:23:41Z\n          description: transactions from stores worldwide\n          clustering_key:\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          created_by: hello@rockset.com\n          field_mappings:\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          stats:\n            doc_count: 2145\n            inverted_index_size: 123456\n            last_updated_ms: 1535101094433\n            total_size: 123456\n            purged_doc_count: 2145\n            range_index_size: 123456\n            purged_doc_size: 123456\n            bulk_bytes_inserted: 2\n            fill_progress: 0.6\n            bytes_overwritten: 123456\n            bytes_inserted: 123456\n            total_index_size: 123456\n            column_index_size: 123456\n            last_queried_ms: 1535101119334\n            row_index_size: 123456\n            bulk_bytes_overwritten: 4\n          retention_secs: 2592000\n          name: global-transactions\n          status: READY\n        gcs:\n          gcp_service_account:\n            service_account_key_file_json: service_account_key_file_json\n        segment:\n          connection_string: connection_string\n        kafka:\n          source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n          kafka_topic_names:\n          - kafka_topic_names\n          - kafka_topic_names\n          security_config:\n            api_key: api_key\n            secret: secret\n          kafka_data_format: json\n          bootstrap_servers: bootstrap_servers\n          connection_string: connection_string\n          use_v3: true\n        name: event-logs\n        azure_service_bus:\n          connection_string: connection_string\n        mongodb:\n          connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n      properties:\n        name:\n          description: descriptive label and unique identifier\n          example: event-logs\n          type: string\n        description:\n          description: longer explanation for the integration\n          example: AWS account with event data for the data science team.\n          type: string\n        collections:\n          description: list of collections that use the integration\n          items:\n            $ref: '#/components/schemas/Collection'\n          type: array\n        created_by:\n          description: email of user who created the integration\n          example: hello@rockset.com\n          type: string\n        created_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:41Z\n          type: string\n        s3:\n          $ref: '#/components/schemas/S3Integration'\n        kinesis:\n          $ref: '#/components/schemas/KinesisIntegration'\n        dynamodb:\n          $ref: '#/components/schemas/DynamodbIntegration'\n        gcs:\n          $ref: '#/components/schemas/GcsIntegration'\n        azure_blob_storage:\n          $ref: '#/components/schemas/AzureBlobStorageIntegration'\n        azure_service_bus:\n          $ref: '#/components/schemas/AzureServiceBusIntegration'\n        azure_event_hubs:\n          $ref: '#/components/schemas/AzureEventHubsIntegration'\n        segment:\n          $ref: '#/components/schemas/SegmentIntegration'\n        kafka:\n          $ref: '#/components/schemas/KafkaIntegration'\n        mongodb:\n          $ref: '#/components/schemas/MongoDbIntegration'\n      required:\n      - created_by\n      - name\n      type: object\n    KafkaIntegration:\n      example:\n        source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n        kafka_topic_names:\n        - kafka_topic_names\n        - kafka_topic_names\n        security_config:\n          api_key: api_key\n          secret: secret\n        kafka_data_format: json\n        bootstrap_servers: bootstrap_servers\n        connection_string: connection_string\n        use_v3: true\n      properties:\n        kafka_topic_names:\n          description: Kafka topics to tail\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        source_status_by_topic:\n          additionalProperties:\n            $ref: '#/components/schemas/StatusKafka'\n          description: The status of the Kafka source by topic\n          example: '{\"topic-a\": \"DORMANT\"}'\n          readOnly: true\n          type: object\n        kafka_data_format:\n          description: The format of the Kafka topics being tailed\n          enum:\n          - JSON\n          - AVRO\n          example: json\n          type: string\n        connection_string:\n          description: kafka connection string\n          readOnly: true\n          type: string\n        use_v3:\n          type: boolean\n        bootstrap_servers:\n          type: string\n        security_config:\n          $ref: '#/components/schemas/KafkaV3SecurityConfig'\n      type: object\n    KafkaV3SecurityConfig:\n      example:\n        api_key: api_key\n        secret: secret\n      properties:\n        api_key:\n          type: string\n        secret:\n          type: string\n      type: object\n    KinesisIntegration:\n      example:\n        aws_access_key:\n          aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n          aws_secret_access_key: wJal....\n        aws_role:\n          aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n      properties:\n        aws_access_key:\n          $ref: '#/components/schemas/AwsAccessKey'\n        aws_role:\n          $ref: '#/components/schemas/AwsRole'\n      type: object\n    ListAliasesResponse:\n      example:\n        data:\n        - workspace: commons\n          collections: '[\"commons.foo\", \"prod.demo\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: alias referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n        - workspace: commons\n          collections: '[\"commons.foo\", \"prod.demo\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: alias referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          description: list of all aliases\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n      type: object\n    ListApiKeysResponse:\n      example:\n        data:\n        - role: read-only\n          name: my-key\n          created_at: 2001-08-28T00:23:41Z\n          state: ACTIVE\n          created_by: test@example.com\n          key: aB35kDjg*******************************\n          last_access_time: 2001-08-28T00:23:41Z\n        - role: read-only\n          name: my-key\n          created_at: 2001-08-28T00:23:41Z\n          state: ACTIVE\n          created_by: test@example.com\n          key: aB35kDjg*******************************\n          last_access_time: 2001-08-28T00:23:41Z\n      properties:\n        data:\n          description: List of API key objects.\n          items:\n            $ref: '#/components/schemas/ApiKey'\n          type: array\n      type: object\n    ListCollectionsResponse:\n      example:\n        data:\n        - field_mapping_query:\n            sql: sql\n          workspace: commons\n          aliases:\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          sources:\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          insert_only: true\n          created_at: 2001-08-28T00:23:41Z\n          description: transactions from stores worldwide\n          clustering_key:\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          created_by: hello@rockset.com\n          field_mappings:\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          stats:\n            doc_count: 2145\n            inverted_index_size: 123456\n            last_updated_ms: 1535101094433\n            total_size: 123456\n            purged_doc_count: 2145\n            range_index_size: 123456\n            purged_doc_size: 123456\n            bulk_bytes_inserted: 2\n            fill_progress: 0.6\n            bytes_overwritten: 123456\n            bytes_inserted: 123456\n            total_index_size: 123456\n            column_index_size: 123456\n            last_queried_ms: 1535101119334\n            row_index_size: 123456\n            bulk_bytes_overwritten: 4\n          retention_secs: 2592000\n          name: global-transactions\n          status: READY\n        - field_mapping_query:\n            sql: sql\n          workspace: commons\n          aliases:\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          - workspace: commons\n            collections: '[\"commons.foo\", \"prod.demo\"]'\n            creator_email: xyz@rockset.com\n            name: demo\n            description: alias referencing collection in workspace\n            created_at: 2001-08-28T00:23:41Z\n            state: CREATED\n            modified_at: 2001-08-28T00:23:42Z\n          sources:\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          - s3:\n              bucket: s3://customer-account-info\n              object_count_downloaded: 0\n              prefixes: '[\"/transactions\", \"/stores\"]'\n              object_count_total: 6\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 1\n              region: us-west-2\n            format_params:\n              xml:\n                attribute_prefix: _attr\n                doc_tag: row\n                encoding: UTF-8\n                value_tag: value\n                root_tag: root\n              csv:\n                quoteChar: '\"'\n                escapeChar: \\\n                columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                firstLineAsColumnNames: true\n                encoding: UTF-8\n                separator: ','\n              postgres_dms: true\n              json: true\n              mssql_dms: true\n              oracle_dms: true\n              mysql_dms: true\n            azure_blob_storage:\n              container: server-logs\n              prefix: prefix/to/blobs\n              pattern: prefix/to/**/keys/*.format\n              blob_count_total: 9\n              blob_bytes_total: 3\n              blob_count_downloaded: 7\n            file_upload:\n              file_name: file1.json\n              file_size: 12345\n              file_upload_time: 2019-01-15T21:48:23Z\n            kinesis:\n              offset_reset_policy: EARLIEST\n              aws_region: us-east-2\n              stream_name: click_stream\n              dms_primary_key:\n              - dms_primary_key\n              - dms_primary_key\n            dynamodb:\n              aws_region: us-east-2\n              rcu: 1000\n              current_status:\n                initial_dump_completion_percentage: 0.73\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                state: PROCESSING_STREAM\n              use_scan_api: true\n              table_name: dynamodb_table_name\n              status:\n                scan_total_records: 2000\n                stream_last_processed_at: 2019-01-15T21:48:23Z\n                scan_start_time: 2001-08-28T00:23:41Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            integration_name: aws-integration\n            azure_event_hubs:\n              offset_reset_policy: EARLIEST\n              hub_id: event-hub-1\n              status:\n                partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                state: ACTIVE\n            gcs:\n              bucket: server-logs\n              object_count_downloaded: 5\n              object_count_total: 5\n              prefix: prefix/to/keys\n              pattern: prefix/to/**/keys/*.format\n              object_bytes_total: 2\n            kafka:\n              offset_reset_policy: LATEST\n              kafka_topic_name: example-topic\n              status:\n                num_documents_processed: 1337\n                last_consumed_time: 2001-08-28T00:23:41Z\n                kafka_partitions:\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                - partition_offset: 100\n                  partition_number: 123\n                  offset_lag: 10\n                state: ACTIVE\n              use_v3: true\n            azure_service_bus:\n              topic: rockset-topic\n              subscription: rockset-subscription\n              status:\n                sessions:\n                  key:\n                    sequence_number: 323862\n                    last_processed: 2022-08-23T00:13:41Z\n                first_processed_at: 2021-08-28T00:23:41Z\n                records_processed: 1000\n            mongodb:\n              database_name: my_database\n              collection_name: my_collection\n              status:\n                scan_total_records: 2000\n                stream_records_deleted: 100\n                stream_records_inserted: 10000\n                stream_records_updated: 1000\n                scan_start_time: 2001-08-28T00:23:41Z\n                stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                scan_end_time: 2001-08-28T00:23:41Z\n                stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                scan_records_processed: 1000\n                state: SCANNING_TABLE\n            status:\n              last_processed_item: /path/to/some/object\n              last_processed_at: 2019-01-15T21:48:23Z\n              total_processed_items: 32849023\n              state: INITIALIZING\n              message: error 403 forbidden\n          insert_only: true\n          created_at: 2001-08-28T00:23:41Z\n          description: transactions from stores worldwide\n          clustering_key:\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          - keys: '[\"value1\", \"value2\"]'\n            type: AUTO\n            field_name: address.city.zipcode\n          created_by: hello@rockset.com\n          field_mappings:\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          - output_field:\n              on_error: SKIP\n              value:\n                sql: SHA256()\n              field_name: zip_hash\n            name: myTestMapping\n            input_fields:\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            - is_drop: true\n              if_missing: SKIP\n              param: zip\n              field_name: address.city.zipcode\n            is_drop_all_fields: true\n          stats:\n            doc_count: 2145\n            inverted_index_size: 123456\n            last_updated_ms: 1535101094433\n            total_size: 123456\n            purged_doc_count: 2145\n            range_index_size: 123456\n            purged_doc_size: 123456\n            bulk_bytes_inserted: 2\n            fill_progress: 0.6\n            bytes_overwritten: 123456\n            bytes_inserted: 123456\n            total_index_size: 123456\n            column_index_size: 123456\n            last_queried_ms: 1535101119334\n            row_index_size: 123456\n            bulk_bytes_overwritten: 4\n          retention_secs: 2592000\n          name: global-transactions\n          status: READY\n      properties:\n        data:\n          description: list of all collections\n          items:\n            $ref: '#/components/schemas/Collection'\n          type: array\n      type: object\n    ListIntegrationsResponse:\n      example:\n        data:\n        - s3:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_blob_storage:\n            connection_string: connection_string\n          description: AWS account with event data for the data science team.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n          kinesis:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          dynamodb:\n            s3_export_bucket_name: s3_export_bucket_name\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_event_hubs:\n            connection_string: connection_string\n          collections:\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          gcs:\n            gcp_service_account:\n              service_account_key_file_json: service_account_key_file_json\n          segment:\n            connection_string: connection_string\n          kafka:\n            source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n            kafka_topic_names:\n            - kafka_topic_names\n            - kafka_topic_names\n            security_config:\n              api_key: api_key\n              secret: secret\n            kafka_data_format: json\n            bootstrap_servers: bootstrap_servers\n            connection_string: connection_string\n            use_v3: true\n          name: event-logs\n          azure_service_bus:\n            connection_string: connection_string\n          mongodb:\n            connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n        - s3:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_blob_storage:\n            connection_string: connection_string\n          description: AWS account with event data for the data science team.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n          kinesis:\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          dynamodb:\n            s3_export_bucket_name: s3_export_bucket_name\n            aws_access_key:\n              aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n              aws_secret_access_key: wJal....\n            aws_role:\n              aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n          azure_event_hubs:\n            connection_string: connection_string\n          collections:\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          - field_mapping_query:\n              sql: sql\n            workspace: commons\n            aliases:\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            - workspace: commons\n              collections: '[\"commons.foo\", \"prod.demo\"]'\n              creator_email: xyz@rockset.com\n              name: demo\n              description: alias referencing collection in workspace\n              created_at: 2001-08-28T00:23:41Z\n              state: CREATED\n              modified_at: 2001-08-28T00:23:42Z\n            sources:\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            - s3:\n                bucket: s3://customer-account-info\n                object_count_downloaded: 0\n                prefixes: '[\"/transactions\", \"/stores\"]'\n                object_count_total: 6\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 1\n                region: us-west-2\n              format_params:\n                xml:\n                  attribute_prefix: _attr\n                  doc_tag: row\n                  encoding: UTF-8\n                  value_tag: value\n                  root_tag: root\n                csv:\n                  quoteChar: '\"'\n                  escapeChar: \\\n                  columnNames: '[\"c1\", \"c2\", \"c3\"]'\n                  columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n                  firstLineAsColumnNames: true\n                  encoding: UTF-8\n                  separator: ','\n                postgres_dms: true\n                json: true\n                mssql_dms: true\n                oracle_dms: true\n                mysql_dms: true\n              azure_blob_storage:\n                container: server-logs\n                prefix: prefix/to/blobs\n                pattern: prefix/to/**/keys/*.format\n                blob_count_total: 9\n                blob_bytes_total: 3\n                blob_count_downloaded: 7\n              file_upload:\n                file_name: file1.json\n                file_size: 12345\n                file_upload_time: 2019-01-15T21:48:23Z\n              kinesis:\n                offset_reset_policy: EARLIEST\n                aws_region: us-east-2\n                stream_name: click_stream\n                dms_primary_key:\n                - dms_primary_key\n                - dms_primary_key\n              dynamodb:\n                aws_region: us-east-2\n                rcu: 1000\n                current_status:\n                  initial_dump_completion_percentage: 0.73\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  state: PROCESSING_STREAM\n                use_scan_api: true\n                table_name: dynamodb_table_name\n                status:\n                  scan_total_records: 2000\n                  stream_last_processed_at: 2019-01-15T21:48:23Z\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              integration_name: aws-integration\n              azure_event_hubs:\n                offset_reset_policy: EARLIEST\n                hub_id: event-hub-1\n                status:\n                  partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  state: ACTIVE\n              gcs:\n                bucket: server-logs\n                object_count_downloaded: 5\n                object_count_total: 5\n                prefix: prefix/to/keys\n                pattern: prefix/to/**/keys/*.format\n                object_bytes_total: 2\n              kafka:\n                offset_reset_policy: LATEST\n                kafka_topic_name: example-topic\n                status:\n                  num_documents_processed: 1337\n                  last_consumed_time: 2001-08-28T00:23:41Z\n                  kafka_partitions:\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  - partition_offset: 100\n                    partition_number: 123\n                    offset_lag: 10\n                  state: ACTIVE\n                use_v3: true\n              azure_service_bus:\n                topic: rockset-topic\n                subscription: rockset-subscription\n                status:\n                  sessions:\n                    key:\n                      sequence_number: 323862\n                      last_processed: 2022-08-23T00:13:41Z\n                  first_processed_at: 2021-08-28T00:23:41Z\n                  records_processed: 1000\n              mongodb:\n                database_name: my_database\n                collection_name: my_collection\n                status:\n                  scan_total_records: 2000\n                  stream_records_deleted: 100\n                  stream_records_inserted: 10000\n                  stream_records_updated: 1000\n                  scan_start_time: 2001-08-28T00:23:41Z\n                  stream_last_update_processed_at: 2019-01-15T21:48:23Z\n                  stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n                  scan_end_time: 2001-08-28T00:23:41Z\n                  stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n                  scan_records_processed: 1000\n                  state: SCANNING_TABLE\n              status:\n                last_processed_item: /path/to/some/object\n                last_processed_at: 2019-01-15T21:48:23Z\n                total_processed_items: 32849023\n                state: INITIALIZING\n                message: error 403 forbidden\n            insert_only: true\n            created_at: 2001-08-28T00:23:41Z\n            description: transactions from stores worldwide\n            clustering_key:\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            - keys: '[\"value1\", \"value2\"]'\n              type: AUTO\n              field_name: address.city.zipcode\n            created_by: hello@rockset.com\n            field_mappings:\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            - output_field:\n                on_error: SKIP\n                value:\n                  sql: SHA256()\n                field_name: zip_hash\n              name: myTestMapping\n              input_fields:\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              - is_drop: true\n                if_missing: SKIP\n                param: zip\n                field_name: address.city.zipcode\n              is_drop_all_fields: true\n            stats:\n              doc_count: 2145\n              inverted_index_size: 123456\n              last_updated_ms: 1535101094433\n              total_size: 123456\n              purged_doc_count: 2145\n              range_index_size: 123456\n              purged_doc_size: 123456\n              bulk_bytes_inserted: 2\n              fill_progress: 0.6\n              bytes_overwritten: 123456\n              bytes_inserted: 123456\n              total_index_size: 123456\n              column_index_size: 123456\n              last_queried_ms: 1535101119334\n              row_index_size: 123456\n              bulk_bytes_overwritten: 4\n            retention_secs: 2592000\n            name: global-transactions\n            status: READY\n          gcs:\n            gcp_service_account:\n              service_account_key_file_json: service_account_key_file_json\n          segment:\n            connection_string: connection_string\n          kafka:\n            source_status_by_topic: '{\"topic-a\": \"DORMANT\"}'\n            kafka_topic_names:\n            - kafka_topic_names\n            - kafka_topic_names\n            security_config:\n              api_key: api_key\n              secret: secret\n            kafka_data_format: json\n            bootstrap_servers: bootstrap_servers\n            connection_string: connection_string\n            use_v3: true\n          name: event-logs\n          azure_service_bus:\n            connection_string: connection_string\n          mongodb:\n            connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n      properties:\n        data:\n          description: list of integration objects\n          items:\n            $ref: '#/components/schemas/Integration'\n          type: array\n      type: object\n    ListQueryLambdaTagsResponse:\n      example:\n        data:\n        - tag_name: production\n          version:\n            workspace: commons\n            collections:\n            - collections\n            - collections\n            stats:\n              last_executed_by: '...@rockset.com'\n              last_execution_error_message: '[error message]'\n              last_execution_error: 2001-08-28T00:23:41Z\n              last_executed: 2001-08-28T00:23:41Z\n            name: myQuery\n            created_at: 2001-08-28T00:23:41Z\n            description: production version foo\n            state: ACTIVE\n            created_by: ..@rockset.com\n            version: acb99feg92bcaf\n            sql:\n              default_parameters:\n              - name: _id\n                type: string\n                value: 85beb391\n              - name: _id\n                type: string\n                value: 85beb391\n              query: SELECT 'Foo'\n        - tag_name: production\n          version:\n            workspace: commons\n            collections:\n            - collections\n            - collections\n            stats:\n              last_executed_by: '...@rockset.com'\n              last_execution_error_message: '[error message]'\n              last_execution_error: 2001-08-28T00:23:41Z\n              last_executed: 2001-08-28T00:23:41Z\n            name: myQuery\n            created_at: 2001-08-28T00:23:41Z\n            description: production version foo\n            state: ACTIVE\n            created_by: ..@rockset.com\n            version: acb99feg92bcaf\n            sql:\n              default_parameters:\n              - name: _id\n                type: string\n                value: 85beb391\n              - name: _id\n                type: string\n                value: 85beb391\n              query: SELECT 'Foo'\n      properties:\n        data:\n          description: list of all tags associated with a Query Lambda\n          items:\n            $ref: '#/components/schemas/QueryLambdaTag'\n          type: array\n      type: object\n    ListQueryLambdaVersionsResponse:\n      example:\n        data:\n        - workspace: commons\n          collections:\n          - collections\n          - collections\n          stats:\n            last_executed_by: '...@rockset.com'\n            last_execution_error_message: '[error message]'\n            last_execution_error: 2001-08-28T00:23:41Z\n            last_executed: 2001-08-28T00:23:41Z\n          name: myQuery\n          created_at: 2001-08-28T00:23:41Z\n          description: production version foo\n          state: ACTIVE\n          created_by: ..@rockset.com\n          version: acb99feg92bcaf\n          sql:\n            default_parameters:\n            - name: _id\n              type: string\n              value: 85beb391\n            - name: _id\n              type: string\n              value: 85beb391\n            query: SELECT 'Foo'\n        - workspace: commons\n          collections:\n          - collections\n          - collections\n          stats:\n            last_executed_by: '...@rockset.com'\n            last_execution_error_message: '[error message]'\n            last_execution_error: 2001-08-28T00:23:41Z\n            last_executed: 2001-08-28T00:23:41Z\n          name: myQuery\n          created_at: 2001-08-28T00:23:41Z\n          description: production version foo\n          state: ACTIVE\n          created_by: ..@rockset.com\n          version: acb99feg92bcaf\n          sql:\n            default_parameters:\n            - name: _id\n              type: string\n              value: 85beb391\n            - name: _id\n              type: string\n              value: 85beb391\n            query: SELECT 'Foo'\n      properties:\n        data:\n          description: list of all versions for a particular Query Lambda\n          items:\n            $ref: '#/components/schemas/QueryLambdaVersion'\n          type: array\n      type: object\n    ListQueryLambdasResponse:\n      example:\n        data:\n        - workspace: commons\n          last_updated_by: ..@rockset.com\n          last_updated: 2001-08-28T00:23:41Z\n          latest_version:\n            workspace: commons\n            collections:\n            - collections\n            - collections\n            stats:\n              last_executed_by: '...@rockset.com'\n              last_execution_error_message: '[error message]'\n              last_execution_error: 2001-08-28T00:23:41Z\n              last_executed: 2001-08-28T00:23:41Z\n            name: myQuery\n            created_at: 2001-08-28T00:23:41Z\n            description: production version foo\n            state: ACTIVE\n            created_by: ..@rockset.com\n            version: acb99feg92bcaf\n            sql:\n              default_parameters:\n              - name: _id\n                type: string\n                value: 85beb391\n              - name: _id\n                type: string\n                value: 85beb391\n              query: SELECT 'Foo'\n          collections:\n          - collections\n          - collections\n          name: myQuery\n          version_count: 1\n        - workspace: commons\n          last_updated_by: ..@rockset.com\n          last_updated: 2001-08-28T00:23:41Z\n          latest_version:\n            workspace: commons\n            collections:\n            - collections\n            - collections\n            stats:\n              last_executed_by: '...@rockset.com'\n              last_execution_error_message: '[error message]'\n              last_execution_error: 2001-08-28T00:23:41Z\n              last_executed: 2001-08-28T00:23:41Z\n            name: myQuery\n            created_at: 2001-08-28T00:23:41Z\n            description: production version foo\n            state: ACTIVE\n            created_by: ..@rockset.com\n            version: acb99feg92bcaf\n            sql:\n              default_parameters:\n              - name: _id\n                type: string\n                value: 85beb391\n              - name: _id\n                type: string\n                value: 85beb391\n              query: SELECT 'Foo'\n          collections:\n          - collections\n          - collections\n          name: myQuery\n          version_count: 1\n      properties:\n        data:\n          description: list of all Query Lambdas\n          items:\n            $ref: '#/components/schemas/QueryLambda'\n          type: array\n      type: object\n    ListRolesResponse:\n      example:\n        data:\n        - role_name: read_write\n          owner_email: hello@rockset.com\n          privileges:\n          - cluster: '*ALL*'\n            action: Create collection\n            resource_name: commons\n          - cluster: '*ALL*'\n            action: Create collection\n            resource_name: commons\n          description: Role with read and write privileges to all collections.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n        - role_name: read_write\n          owner_email: hello@rockset.com\n          privileges:\n          - cluster: '*ALL*'\n            action: Create collection\n            resource_name: commons\n          - cluster: '*ALL*'\n            action: Create collection\n            resource_name: commons\n          description: Role with read and write privileges to all collections.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n      properties:\n        data:\n          description: List of all roles.\n          items:\n            $ref: '#/components/schemas/Role'\n          type: array\n      type: object\n    ListUnsubscribePreferencesResponse:\n      example:\n        data:\n        - notificationType: create_apikey\n        - notificationType: create_apikey\n      properties:\n        data:\n          description: List of notification preferences\n          items:\n            $ref: '#/components/schemas/UnsubscribePreference'\n          type: array\n      type: object\n    ListUsersResponse:\n      example:\n        data:\n        - roles: '[\"admin\", \"member\", \"read-only\"]'\n          created_at: 2001-08-28T00:23:41Z\n          last_name: Doe\n          state: ACTIVE\n          first_name: John\n          email: hello@rockset.com\n        - roles: '[\"admin\", \"member\", \"read-only\"]'\n          created_at: 2001-08-28T00:23:41Z\n          last_name: Doe\n          state: ACTIVE\n          first_name: John\n          email: hello@rockset.com\n      properties:\n        data:\n          description: list of users\n          items:\n            $ref: '#/components/schemas/User'\n          type: array\n      type: object\n    ListViewsResponse:\n      example:\n        data:\n        - owner_email: abc@rockset.com\n          path: path\n          workspace: commons\n          query_sql: SELECT * FROM commons.foo\n          entities: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: view referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n        - owner_email: abc@rockset.com\n          path: path\n          workspace: commons\n          query_sql: SELECT * FROM commons.foo\n          entities: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: view referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          description: list of all views\n          items:\n            $ref: '#/components/schemas/View'\n          type: array\n      type: object\n    ListVirtualInstancesResponse:\n      example:\n        data:\n        - desired_type: FREE\n          last_updated: 2001-08-28T00:23:41Z\n          estimated_switch_duration_minutes: 20\n          scaled_pod_count: 6\n          monitoring_enabled: true\n          desired_size: MEDIUM\n          current_size: MEDIUM\n          state: ACTIVE\n          id: 123e4567-e89b-12d3-a456-556642440000\n          current_type: FREE\n          default_pod_count: 0\n        - desired_type: FREE\n          last_updated: 2001-08-28T00:23:41Z\n          estimated_switch_duration_minutes: 20\n          scaled_pod_count: 6\n          monitoring_enabled: true\n          desired_size: MEDIUM\n          current_size: MEDIUM\n          state: ACTIVE\n          id: 123e4567-e89b-12d3-a456-556642440000\n          current_type: FREE\n          default_pod_count: 0\n      properties:\n        data:\n          description: list of all virtual instances\n          items:\n            $ref: '#/components/schemas/VirtualInstance'\n          type: array\n      type: object\n    ListWorkspacesResponse:\n      example:\n        data:\n        - name: event_logs\n          created_at: 2001-08-28T00:23:41Z\n          description: Datasets of system logs for the ops team.\n          collection_count: 3\n          created_by: hello@rockset.com\n        - name: event_logs\n          created_at: 2001-08-28T00:23:41Z\n          description: Datasets of system logs for the ops team.\n          collection_count: 3\n          created_by: hello@rockset.com\n      properties:\n        data:\n          description: list of workspaces\n          items:\n            $ref: '#/components/schemas/Workspace'\n          type: array\n      type: object\n    MongoDbIntegration:\n      example:\n        connection_uri: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n      properties:\n        connection_uri:\n          description: MongoDB connection URI string\n          example: mongodb+srv://\u003cusername\u003e:\u003cpassword\u003e@server.example.com/\n          type: string\n      required:\n      - connection_uri\n      type: object\n    Organization:\n      description: An organization in Rockset is a container for users and collections.\n      example:\n        deletionScheduledAt: deletionScheduledAt\n        created_at: 2001-08-28T00:23:41Z\n        external_id: \u003chash\u003e\n        rockset_user: \u003cid\u003e\n        id: rockset\n        display_name: Rockset, Inc\n        clusters: '[{ ... }]'\n      properties:\n        deletionScheduledAt:\n          type: string\n        rockset_user:\n          description: Rockset's global AWS user\n          example: \u003cid\u003e\n          type: string\n        external_id:\n          description: organization's unique external ID within Rockset\n          example: \u003chash\u003e\n          type: string\n        clusters:\n          description: list of clusters associated with this org\n          example: '[{ ... }]'\n          items:\n            $ref: '#/components/schemas/Cluster'\n          type: array\n        id:\n          description: unique identifier for the organization\n          example: rockset\n          type: string\n        created_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:41Z\n          type: string\n        display_name:\n          description: name of the organization\n          example: Rockset, Inc\n          type: string\n      type: object\n    OrganizationResponse:\n      example:\n        data:\n          deletionScheduledAt: deletionScheduledAt\n          created_at: 2001-08-28T00:23:41Z\n          external_id: \u003chash\u003e\n          rockset_user: \u003cid\u003e\n          id: rockset\n          display_name: Rockset, Inc\n          clusters: '[{ ... }]'\n      properties:\n        data:\n          $ref: '#/components/schemas/Organization'\n      type: object\n    OutputField:\n      example:\n        on_error: SKIP\n        value:\n          sql: SHA256()\n        field_name: zip_hash\n      properties:\n        field_name:\n          description: 'The name of a field, parsed as a SQL qualified name '\n          example: zip_hash\n          type: string\n        value:\n          $ref: '#/components/schemas/SqlExpression'\n        on_error:\n          description: 'Error in Mapping execution: ''skip'' or ''fail'' '\n          enum:\n          - SKIP\n          - FAIL\n          example: SKIP\n          type: string\n      type: object\n    PaginationInfo:\n      example:\n        current_page_doc_count: 1000\n        next_cursor: testnextcursor\n        next_cursor_offset: 2000\n        start_cursor: startcursor\n      properties:\n        current_page_doc_count:\n          description: Number of documents returned in this result set\n          example: 1000\n          format: int64\n          type: integer\n        next_cursor_offset:\n          description: The doc offset that next_cursor starts at.\n          example: 2000\n          format: int64\n          type: integer\n        start_cursor:\n          description: Cursor used to retrieve the first set of documents.\n          example: startcursor\n          type: string\n        next_cursor:\n          description: Cursor to use to get the list of documents\n          example: testnextcursor\n          type: string\n      type: object\n    PatchDocument:\n      example:\n        patch:\n        - op: ADD\n          path: /foo/bar\n          from: from\n          value: baz\n        - op: ADD\n          path: /foo/bar\n          from: from\n          value: baz\n        _id: ca2d6832-1bfd-f88f-0620-d2aa27a5d86c\n      properties:\n        _id:\n          description: Unique ID of the document to be patched.\n          example: ca2d6832-1bfd-f88f-0620-d2aa27a5d86c\n          type: string\n        patch:\n          description: List of patch operations.\n          items:\n            $ref: '#/components/schemas/PatchOperation'\n          type: array\n      required:\n      - _id\n      - patch\n      type: object\n    PatchDocumentsRequest:\n      example:\n        data:\n        - patch:\n          - op: ADD\n            path: /foo/bar\n            from: from\n            value: baz\n          - op: ADD\n            path: /foo/bar\n            from: from\n            value: baz\n          _id: ca2d6832-1bfd-f88f-0620-d2aa27a5d86c\n        - patch:\n          - op: ADD\n            path: /foo/bar\n            from: from\n            value: baz\n          - op: ADD\n            path: /foo/bar\n            from: from\n            value: baz\n          _id: ca2d6832-1bfd-f88f-0620-d2aa27a5d86c\n      properties:\n        data:\n          description: List of patches to be applied.\n          items:\n            $ref: '#/components/schemas/PatchDocument'\n          type: array\n      required:\n      - data\n      type: object\n    PatchDocumentsResponse:\n      example:\n        data:\n        - patch_id: 486gsg8\n          _collection: customers\n          _id: 2cd61e3b\n          error:\n            trace_id: trace_id\n            query_id: query_id\n            error_id: error_id\n            line: 0\n            column: 6\n            message: collection not found\n            type: InvalidInput\n          status: ADDED\n        - patch_id: 486gsg8\n          _collection: customers\n          _id: 2cd61e3b\n          error:\n            trace_id: trace_id\n            query_id: query_id\n            error_id: error_id\n            line: 0\n            column: 6\n            message: collection not found\n            type: InvalidInput\n          status: ADDED\n      properties:\n        data:\n          items:\n            $ref: '#/components/schemas/DocumentStatus'\n          type: array\n      required:\n      - data\n      type: object\n    PatchOperation:\n      example:\n        op: ADD\n        path: /foo/bar\n        from: from\n        value: baz\n      properties:\n        op:\n          description: '[JSON Patch operation](https://datatracker.ietf.org/doc/html/rfc6902#page-4)\n            to be performed in this patch. Case insensitive.'\n          enum:\n          - ADD\n          - REPLACE\n          - REMOVE\n          - COPY\n          - MOVE\n          - TEST\n          - INCREMENT\n          example: ADD\n          type: string\n        path:\n          description: '[JSON Pointer](https://datatracker.ietf.org/doc/html/rfc6901)\n            referencing a location in the target document where the operation is performed'\n          example: /foo/bar\n          type: string\n        value:\n          description: Value used in the patch operation. Required for `ADD`, `REPLACE`,\n            `TEST`, and `INCREMENT` operations.\n          example: baz\n          properties: {}\n          type: object\n        from:\n          description: '[JSON Pointer](https://datatracker.ietf.org/doc/html/rfc6901)\n            referencing a location in the target document. Required for `COPY` and\n            `MOVE` operations.'\n          type: string\n      required:\n      - op\n      - path\n      type: object\n    Privilege:\n      example:\n        cluster: '*ALL*'\n        action: Create collection\n        resource_name: commons\n      properties:\n        action:\n          description: The action allowed by this privilege.\n          enum:\n          - ALL_GLOBAL_ACTIONS\n          - GET_ORG_GLOBAL\n          - GET_CURRENT_USER_GLOBAL\n          - INVITE_USER_GLOBAL\n          - DELETE_USER_GLOBAL\n          - LIST_USERS_GLOBAL\n          - GET_BILLING_GLOBAL\n          - UPDATE_BILLING_GLOBAL\n          - UPDATE_SETTINGS_GLOBAL\n          - GET_METRICS_GLOBAL\n          - UPDATE_VI_GLOBAL\n          - LIST_VI_GLOBAL\n          - CREATE_WS_GLOBAL\n          - LIST_WS_GLOBAL\n          - CREATE_INTEGRATION_GLOBAL\n          - DELETE_INTEGRATION_GLOBAL\n          - LIST_INTEGRATIONS_GLOBAL\n          - UPDATE_RESOURCE_OWNER_GLOBAL\n          - CREATE_API_KEY_GLOBAL\n          - CREATE_ROLE_GLOBAL\n          - UPDATE_ROLE_GLOBAL\n          - DELETE_ROLE_GLOBAL\n          - LIST_ROLES_GLOBAL\n          - GRANT_REVOKE_ROLE_GLOBAL\n          - ALL_INTEGRATION_ACTIONS\n          - CREATE_COLLECTION_INTEGRATION\n          - ALL_WORKSPACE_ACTIONS\n          - DELETE_WS\n          - QUERY_DATA_WS\n          - WRITE_DATA_WS\n          - CREATE_COLLECTION_WS\n          - DELETE_COLLECTION_WS\n          - CREATE_ALIAS_WS\n          - DELETE_ALIAS_WS\n          - LIST_RESOURCES_WS\n          - CREATE_QUERY_LAMBDA_WS\n          - DELETE_QUERY_LAMBDA_WS\n          - EXECUTE_QUERY_LAMBDA_WS\n          - CREATE_VIEW_WS\n          - DELETE_VIEW_WS\n          example: Create collection\n          type: string\n        resource_name:\n          description: The resources on which the action is allowed. Defaults to '*All*'\n            if not specified.\n          example: commons\n          type: string\n        cluster:\n          description: Cluster ID (`rs2` for us-west-2, `use1a1` for us-east-1) for\n            which the action is allowed. Defaults to '*All*' if not specified.\n          example: '*ALL*'\n          type: string\n      type: object\n    QueryError:\n      example:\n        status_code: 429\n        type: ResourceExceeded\n        message: Too many rows\n      properties:\n        type:\n          description: The type of error\n          example: ResourceExceeded\n          type: string\n        message:\n          description: A message associated with the error, containing more information\n            about it\n          example: Too many rows\n          type: string\n        status_code:\n          description: The HTTP status code associated with this error, had it been\n            sent as the response status code\n          example: 429\n          format: int32\n          type: integer\n      type: object\n    QueryFieldType:\n      example:\n        name: _id\n        type: string\n      properties:\n        name:\n          description: name of the field\n          example: _id\n          type: string\n        type:\n          description: data type of the field\n          example: string\n          type: string\n      required:\n      - name\n      - type\n      type: object\n    QueryLambda:\n      example:\n        workspace: commons\n        last_updated_by: ..@rockset.com\n        last_updated: 2001-08-28T00:23:41Z\n        latest_version:\n          workspace: commons\n          collections:\n          - collections\n          - collections\n          stats:\n            last_executed_by: '...@rockset.com'\n            last_execution_error_message: '[error message]'\n            last_execution_error: 2001-08-28T00:23:41Z\n            last_executed: 2001-08-28T00:23:41Z\n          name: myQuery\n          created_at: 2001-08-28T00:23:41Z\n          description: production version foo\n          state: ACTIVE\n          created_by: ..@rockset.com\n          version: acb99feg92bcaf\n          sql:\n            default_parameters:\n            - name: _id\n              type: string\n              value: 85beb391\n            - name: _id\n              type: string\n              value: 85beb391\n            query: SELECT 'Foo'\n        collections:\n        - collections\n        - collections\n        name: myQuery\n        version_count: 1\n      properties:\n        workspace:\n          description: workspace of this Query Lambda\n          example: commons\n          type: string\n        last_updated_by:\n          description: user that created this Query Lambda\n          example: ..@rockset.com\n          type: string\n        last_updated:\n          description: ISO-8601 date of when Query Lambda was last updated\n          example: 2001-08-28T00:23:41Z\n          type: string\n        name:\n          description: Query Lambda name\n          example: myQuery\n          type: string\n        version_count:\n          description: number of Query Lambda versions\n          example: 1\n          format: int32\n          type: integer\n        collections:\n          description: collections/aliases queried by underlying SQL query\n          items:\n            type: string\n          type: array\n        latest_version:\n          $ref: '#/components/schemas/QueryLambdaVersion'\n      type: object\n    QueryLambdaSql:\n      example:\n        default_parameters:\n        - name: _id\n          type: string\n          value: 85beb391\n        - name: _id\n          type: string\n          value: 85beb391\n        query: SELECT 'Foo'\n      properties:\n        query:\n          description: SQL text\n          example: SELECT 'Foo'\n          type: string\n        default_parameters:\n          description: default parameters for this Query Lambda\n          items:\n            $ref: '#/components/schemas/QueryParameter'\n          type: array\n      required:\n      - query\n      type: object\n    QueryLambdaStats:\n      example:\n        last_executed_by: '...@rockset.com'\n        last_execution_error_message: '[error message]'\n        last_execution_error: 2001-08-28T00:23:41Z\n        last_executed: 2001-08-28T00:23:41Z\n      properties:\n        last_executed:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:41Z\n          type: string\n        last_executed_by:\n          description: user who last executed Query Lambda\n          example: '...@rockset.com'\n          type: string\n        last_execution_error:\n          description: ISO-8601 date of last execution failure\n          example: 2001-08-28T00:23:41Z\n          type: string\n        last_execution_error_message:\n          description: error message associated with last failed execution\n          example: '[error message]'\n          type: string\n      type: object\n    QueryLambdaTag:\n      example:\n        tag_name: production\n        version:\n          workspace: commons\n          collections:\n          - collections\n          - collections\n          stats:\n            last_executed_by: '...@rockset.com'\n            last_execution_error_message: '[error message]'\n            last_execution_error: 2001-08-28T00:23:41Z\n            last_executed: 2001-08-28T00:23:41Z\n          name: myQuery\n          created_at: 2001-08-28T00:23:41Z\n          description: production version foo\n          state: ACTIVE\n          created_by: ..@rockset.com\n          version: acb99feg92bcaf\n          sql:\n            default_parameters:\n            - name: _id\n              type: string\n              value: 85beb391\n            - name: _id\n              type: string\n              value: 85beb391\n            query: SELECT 'Foo'\n      properties:\n        tag_name:\n          description: name of Query Lambda tag\n          example: production\n          type: string\n        version:\n          $ref: '#/components/schemas/QueryLambdaVersion'\n      type: object\n    QueryLambdaTagResponse:\n      example:\n        data:\n          tag_name: production\n          version:\n            workspace: commons\n            collections:\n            - collections\n            - collections\n            stats:\n              last_executed_by: '...@rockset.com'\n              last_execution_error_message: '[error message]'\n              last_execution_error: 2001-08-28T00:23:41Z\n              last_executed: 2001-08-28T00:23:41Z\n            name: myQuery\n            created_at: 2001-08-28T00:23:41Z\n            description: production version foo\n            state: ACTIVE\n            created_by: ..@rockset.com\n            version: acb99feg92bcaf\n            sql:\n              default_parameters:\n              - name: _id\n                type: string\n                value: 85beb391\n              - name: _id\n                type: string\n                value: 85beb391\n              query: SELECT 'Foo'\n      properties:\n        data:\n          $ref: '#/components/schemas/QueryLambdaTag'\n      type: object\n    QueryLambdaVersion:\n      example:\n        workspace: commons\n        collections:\n        - collections\n        - collections\n        stats:\n          last_executed_by: '...@rockset.com'\n          last_execution_error_message: '[error message]'\n          last_execution_error: 2001-08-28T00:23:41Z\n          last_executed: 2001-08-28T00:23:41Z\n        name: myQuery\n        created_at: 2001-08-28T00:23:41Z\n        description: production version foo\n        state: ACTIVE\n        created_by: ..@rockset.com\n        version: acb99feg92bcaf\n        sql:\n          default_parameters:\n          - name: _id\n            type: string\n            value: 85beb391\n          - name: _id\n            type: string\n            value: 85beb391\n          query: SELECT 'Foo'\n      properties:\n        workspace:\n          description: workspace of this Query Lambda\n          example: commons\n          type: string\n        created_by:\n          description: user that created this Query Lambda\n          example: ..@rockset.com\n          type: string\n        created_at:\n          description: ISO-8601 date of when Query Lambda was created\n          example: 2001-08-28T00:23:41Z\n          type: string\n        name:\n          description: Query Lambda name\n          example: myQuery\n          type: string\n        version:\n          description: Query Lambda version\n          example: acb99feg92bcaf\n          type: string\n        description:\n          description: optional description\n          example: production version foo\n          type: string\n        sql:\n          $ref: '#/components/schemas/QueryLambdaSql'\n        collections:\n          description: collections queried by underlying SQL query\n          items:\n            type: string\n          type: array\n        state:\n          description: status of this Query Lambda\n          enum:\n          - ACTIVE\n          - INVALID_SQL\n          example: ACTIVE\n          type: string\n        stats:\n          $ref: '#/components/schemas/QueryLambdaStats'\n      type: object\n    QueryLambdaVersionResponse:\n      example:\n        data:\n          workspace: commons\n          collections:\n          - collections\n          - collections\n          stats:\n            last_executed_by: '...@rockset.com'\n            last_execution_error_message: '[error message]'\n            last_execution_error: 2001-08-28T00:23:41Z\n            last_executed: 2001-08-28T00:23:41Z\n          name: myQuery\n          created_at: 2001-08-28T00:23:41Z\n          description: production version foo\n          state: ACTIVE\n          created_by: ..@rockset.com\n          version: acb99feg92bcaf\n          sql:\n            default_parameters:\n            - name: _id\n              type: string\n              value: 85beb391\n            - name: _id\n              type: string\n              value: 85beb391\n            query: SELECT 'Foo'\n      properties:\n        data:\n          $ref: '#/components/schemas/QueryLambdaVersion'\n      type: object\n    QueryParameter:\n      example:\n        name: _id\n        type: string\n        value: 85beb391\n      properties:\n        name:\n          description: name of the field\n          example: _id\n          type: string\n        type:\n          description: data type of the field\n          example: string\n          type: string\n        value:\n          description: literal value of the field\n          example: 85beb391\n          type: string\n      required:\n      - name\n      - type\n      - value\n      type: object\n    QueryRequest:\n      example:\n        sql:\n          generate_warnings: true\n          query: SELECT * FROM foo where _id = :_id\n          initial_paginate_response_doc_count: 6\n          paginate: true\n          default_row_limit: 0\n          parameters:\n          - name: _id\n            type: string\n            value: 85beb391\n          - name: _id\n            type: string\n            value: 85beb391\n      properties:\n        sql:\n          $ref: '#/components/schemas/QueryRequestSql'\n      required:\n      - sql\n      type: object\n    QueryRequestSql:\n      example:\n        generate_warnings: true\n        query: SELECT * FROM foo where _id = :_id\n        initial_paginate_response_doc_count: 6\n        paginate: true\n        default_row_limit: 0\n        parameters:\n        - name: _id\n          type: string\n          value: 85beb391\n        - name: _id\n          type: string\n          value: 85beb391\n      properties:\n        query:\n          description: SQL query string.\n          example: SELECT * FROM foo where _id = :_id\n          type: string\n        generate_warnings:\n          description: Flag to enable warnings. Warnings can help debug query issues\n            but negatively affect performance.\n          type: boolean\n        parameters:\n          description: List of named parameters.\n          items:\n            $ref: '#/components/schemas/QueryParameter'\n          type: array\n        default_row_limit:\n          description: Row limit to use. Limits specified in the query text will override\n            this default.\n          format: int32\n          type: integer\n        paginate:\n          description: Flag to paginate and store the results of this query for later\n            / sequential retrieval.\n          type: boolean\n        initial_paginate_response_doc_count:\n          description: Number of documents to return in addition to paginating for\n            this query call. Only relevant if `paginate` flag is also set.\n          format: int32\n          type: integer\n      required:\n      - query\n      type: object\n    QueryResponse:\n      example:\n        last_offset: last_offset\n        pagination:\n          current_page_doc_count: 1000\n          next_cursor: testnextcursor\n          next_cursor_offset: 2000\n          start_cursor: startcursor\n        query_id: query_id\n        query_errors:\n        - status_code: 429\n          type: ResourceExceeded\n          message: Too many rows\n        - status_code: 429\n          type: ResourceExceeded\n          message: Too many rows\n        collections:\n        - collections\n        - collections\n        stats:\n          throttled_time_micros: 126\n          elapsed_time_ms: 126\n        warnings:\n        - warnings\n        - warnings\n        query_lambda_path: query_lambda_path\n        results_total_doc_count: 0\n        column_fields:\n        - name: _id\n          type: string\n        - name: _id\n          type: string\n        results:\n        - '{}'\n        - '{}'\n      properties:\n        query_id:\n          description: Unique ID for this query.\n          type: string\n        collections:\n          description: List of collections referenced in the query.\n          items:\n            type: string\n          type: array\n        results:\n          description: Results from the query.\n          items:\n            properties: {}\n            type: object\n          type: array\n        stats:\n          $ref: '#/components/schemas/QueryResponseStats'\n        warnings:\n          description: Warnings generated by the query. Only populated if `generate_warnings`\n            is specified in the query request.\n          items:\n            type: string\n          type: array\n        query_lambda_path:\n          description: The full path of the executed query lambda. Includes version\n            information.\n          type: string\n        query_errors:\n          description: Errors encountered while executing the query.\n          items:\n            $ref: '#/components/schemas/QueryError'\n          type: array\n        column_fields:\n          description: Meta information about each column in the result set. Not populated\n            in `SELECT *` queries.\n          items:\n            $ref: '#/components/schemas/QueryFieldType'\n          type: array\n        results_total_doc_count:\n          description: Number of results generated by the query\n          format: int64\n          type: integer\n        pagination:\n          $ref: '#/components/schemas/PaginationInfo'\n        last_offset:\n          description: If this was a write query, this is the log offset the query\n            was written to\n          type: string\n      type: object\n    QueryResponseStats:\n      example:\n        throttled_time_micros: 126\n        elapsed_time_ms: 126\n      properties:\n        elapsed_time_ms:\n          description: query time in milliseconds\n          example: 126\n          format: int64\n          type: integer\n        throttled_time_micros:\n          description: time query was throttled by admission control\n          example: 126\n          format: int64\n          type: integer\n      type: object\n    Role:\n      example:\n        role_name: read_write\n        owner_email: hello@rockset.com\n        privileges:\n        - cluster: '*ALL*'\n          action: Create collection\n          resource_name: commons\n        - cluster: '*ALL*'\n          action: Create collection\n          resource_name: commons\n        description: Role with read and write privileges to all collections.\n        created_at: 2001-08-28T00:23:41Z\n        created_by: hello@rockset.com\n      properties:\n        role_name:\n          description: Unique identifier for the role.\n          example: read_write\n          type: string\n        description:\n          description: Description for the role.\n          example: Role with read and write privileges to all collections.\n          type: string\n        owner_email:\n          description: Email of the user who currently owns the role.\n          example: hello@rockset.com\n          type: string\n        created_by:\n          description: Email of the user who created the role.\n          example: hello@rockset.com\n          type: string\n        privileges:\n          description: List of privileges associated with the role.\n          items:\n            $ref: '#/components/schemas/Privilege'\n          type: array\n        created_at:\n          description: ISO-8601 date of when the role was created.\n          example: 2001-08-28T00:23:41Z\n          type: string\n      type: object\n    RoleResponse:\n      example:\n        data:\n          role_name: read_write\n          owner_email: hello@rockset.com\n          privileges:\n          - cluster: '*ALL*'\n            action: Create collection\n            resource_name: commons\n          - cluster: '*ALL*'\n            action: Create collection\n            resource_name: commons\n          description: Role with read and write privileges to all collections.\n          created_at: 2001-08-28T00:23:41Z\n          created_by: hello@rockset.com\n      properties:\n        data:\n          $ref: '#/components/schemas/Role'\n      type: object\n    S3Integration:\n      example:\n        aws_access_key:\n          aws_access_key_id: AKIAIOSFODNN7EXAMPLE\n          aws_secret_access_key: wJal....\n        aws_role:\n          aws_role_arn: arn:aws:iam::2378964092:role/rockset-role\n      properties:\n        aws_access_key:\n          $ref: '#/components/schemas/AwsAccessKey'\n        aws_role:\n          $ref: '#/components/schemas/AwsRole'\n      type: object\n    SegmentIntegration:\n      example:\n        connection_string: connection_string\n      properties:\n        connection_string:\n          description: segment connection string\n          readOnly: true\n          type: string\n      type: object\n    Source:\n      description: 'Details about the data source for the given collection. Only one\n        of the following fields are allowed to be defined. Only collections can act\n        as data sources for views. '\n      example:\n        s3:\n          bucket: s3://customer-account-info\n          object_count_downloaded: 0\n          prefixes: '[\"/transactions\", \"/stores\"]'\n          object_count_total: 6\n          prefix: prefix/to/keys\n          pattern: prefix/to/**/keys/*.format\n          object_bytes_total: 1\n          region: us-west-2\n        format_params:\n          xml:\n            attribute_prefix: _attr\n            doc_tag: row\n            encoding: UTF-8\n            value_tag: value\n            root_tag: root\n          csv:\n            quoteChar: '\"'\n            escapeChar: \\\n            columnNames: '[\"c1\", \"c2\", \"c3\"]'\n            columnTypes: '[\"BOOLEAN\", \"INTEGER\", \"FLOAT\", \"STRING\"]'\n            firstLineAsColumnNames: true\n            encoding: UTF-8\n            separator: ','\n          postgres_dms: true\n          json: true\n          mssql_dms: true\n          oracle_dms: true\n          mysql_dms: true\n        azure_blob_storage:\n          container: server-logs\n          prefix: prefix/to/blobs\n          pattern: prefix/to/**/keys/*.format\n          blob_count_total: 9\n          blob_bytes_total: 3\n          blob_count_downloaded: 7\n        file_upload:\n          file_name: file1.json\n          file_size: 12345\n          file_upload_time: 2019-01-15T21:48:23Z\n        kinesis:\n          offset_reset_policy: EARLIEST\n          aws_region: us-east-2\n          stream_name: click_stream\n          dms_primary_key:\n          - dms_primary_key\n          - dms_primary_key\n        dynamodb:\n          aws_region: us-east-2\n          rcu: 1000\n          current_status:\n            initial_dump_completion_percentage: 0.73\n            stream_last_processed_at: 2019-01-15T21:48:23Z\n            state: PROCESSING_STREAM\n          use_scan_api: true\n          table_name: dynamodb_table_name\n          status:\n            scan_total_records: 2000\n            stream_last_processed_at: 2019-01-15T21:48:23Z\n            scan_start_time: 2001-08-28T00:23:41Z\n            scan_end_time: 2001-08-28T00:23:41Z\n            scan_records_processed: 1000\n            state: SCANNING_TABLE\n        integration_name: aws-integration\n        azure_event_hubs:\n          offset_reset_policy: EARLIEST\n          hub_id: event-hub-1\n          status:\n            partitions:\n            - partition_offset: 100\n              partition_number: 123\n              offset_lag: 10\n            - partition_offset: 100\n              partition_number: 123\n              offset_lag: 10\n            num_documents_processed: 1337\n            last_consumed_time: 2001-08-28T00:23:41Z\n            state: ACTIVE\n        gcs:\n          bucket: server-logs\n          object_count_downloaded: 5\n          object_count_total: 5\n          prefix: prefix/to/keys\n          pattern: prefix/to/**/keys/*.format\n          object_bytes_total: 2\n        kafka:\n          offset_reset_policy: LATEST\n          kafka_topic_name: example-topic\n          status:\n            num_documents_processed: 1337\n            last_consumed_time: 2001-08-28T00:23:41Z\n            kafka_partitions:\n            - partition_offset: 100\n              partition_number: 123\n              offset_lag: 10\n            - partition_offset: 100\n              partition_number: 123\n              offset_lag: 10\n            state: ACTIVE\n          use_v3: true\n        azure_service_bus:\n          topic: rockset-topic\n          subscription: rockset-subscription\n          status:\n            sessions:\n              key:\n                sequence_number: 323862\n                last_processed: 2022-08-23T00:13:41Z\n            first_processed_at: 2021-08-28T00:23:41Z\n            records_processed: 1000\n        mongodb:\n          database_name: my_database\n          collection_name: my_collection\n          status:\n            scan_total_records: 2000\n            stream_records_deleted: 100\n            stream_records_inserted: 10000\n            stream_records_updated: 1000\n            scan_start_time: 2001-08-28T00:23:41Z\n            stream_last_update_processed_at: 2019-01-15T21:48:23Z\n            stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n            scan_end_time: 2001-08-28T00:23:41Z\n            stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n            scan_records_processed: 1000\n            state: SCANNING_TABLE\n        status:\n          last_processed_item: /path/to/some/object\n          last_processed_at: 2019-01-15T21:48:23Z\n          total_processed_items: 32849023\n          state: INITIALIZING\n          message: error 403 forbidden\n      properties:\n        integration_name:\n          description: name of integration to use\n          example: aws-integration\n          type: string\n        s3:\n          $ref: '#/components/schemas/SourceS3'\n        kinesis:\n          $ref: '#/components/schemas/SourceKinesis'\n        gcs:\n          $ref: '#/components/schemas/SourceGcs'\n        azure_blob_storage:\n          $ref: '#/components/schemas/SourceAzureBlobStorage'\n        azure_service_bus:\n          $ref: '#/components/schemas/SourceAzureServiceBus'\n        azure_event_hubs:\n          $ref: '#/components/schemas/SourceAzureEventHubs'\n        dynamodb:\n          $ref: '#/components/schemas/SourceDynamoDb'\n        file_upload:\n          $ref: '#/components/schemas/SourceFileUpload'\n        kafka:\n          $ref: '#/components/schemas/SourceKafka'\n        mongodb:\n          $ref: '#/components/schemas/SourceMongoDb'\n        status:\n          $ref: '#/components/schemas/Status'\n        format_params:\n          $ref: '#/components/schemas/FormatParams'\n      required:\n      - integration_name\n      type: object\n    SourceAzureBlobStorage:\n      example:\n        container: server-logs\n        prefix: prefix/to/blobs\n        pattern: prefix/to/**/keys/*.format\n        blob_count_total: 9\n        blob_bytes_total: 3\n        blob_count_downloaded: 7\n      properties:\n        container:\n          description: name of Azure blob Storage container you want to ingest from\n          example: server-logs\n          type: string\n        prefix:\n          description: Prefix that selects blobs to ingest.\n          example: prefix/to/blobs\n          type: string\n        pattern:\n          description: Glob-style pattern that selects keys to ingest. Only either\n            prefix or pattern can be specified.\n          example: prefix/to/**/keys/*.format\n          type: string\n        blob_count_downloaded:\n          format: int64\n          readOnly: true\n          type: integer\n        blob_count_total:\n          format: int64\n          readOnly: true\n          type: integer\n        blob_bytes_total:\n          format: int64\n          readOnly: true\n          type: integer\n      type: object\n    SourceAzureEventHubs:\n      example:\n        offset_reset_policy: EARLIEST\n        hub_id: event-hub-1\n        status:\n          partitions:\n          - partition_offset: 100\n            partition_number: 123\n            offset_lag: 10\n          - partition_offset: 100\n            partition_number: 123\n            offset_lag: 10\n          num_documents_processed: 1337\n          last_consumed_time: 2001-08-28T00:23:41Z\n          state: ACTIVE\n      properties:\n        hub_id:\n          description: name of the hub which rockset should ingest from\n          example: event-hub-1\n          type: string\n        offset_reset_policy:\n          description: The offset reset policy.\n          enum:\n          - LATEST\n          - EARLIEST\n          example: EARLIEST\n          type: string\n        status:\n          $ref: '#/components/schemas/StatusAzureEventHubs'\n      type: object\n    SourceAzureServiceBus:\n      example:\n        topic: rockset-topic\n        subscription: rockset-subscription\n        status:\n          sessions:\n            key:\n              sequence_number: 323862\n              last_processed: 2022-08-23T00:13:41Z\n          first_processed_at: 2021-08-28T00:23:41Z\n          records_processed: 1000\n      properties:\n        topic:\n          description: name of the topic which rockset should ingest from\n          example: rockset-topic\n          type: string\n        subscription:\n          description: the subscription to read from the topic\n          example: rockset-subscription\n          type: string\n        status:\n          $ref: '#/components/schemas/StatusAzureServiceBus'\n      type: object\n    SourceDynamoDb:\n      example:\n        aws_region: us-east-2\n        rcu: 1000\n        current_status:\n          initial_dump_completion_percentage: 0.73\n          stream_last_processed_at: 2019-01-15T21:48:23Z\n          state: PROCESSING_STREAM\n        use_scan_api: true\n        table_name: dynamodb_table_name\n        status:\n          scan_total_records: 2000\n          stream_last_processed_at: 2019-01-15T21:48:23Z\n          scan_start_time: 2001-08-28T00:23:41Z\n          scan_end_time: 2001-08-28T00:23:41Z\n          scan_records_processed: 1000\n          state: SCANNING_TABLE\n      properties:\n        aws_region:\n          description: AWS region name of DynamoDB table, by default us-west-2 is\n            used\n          example: us-east-2\n          type: string\n        table_name:\n          description: name of DynamoDB table containing data\n          example: dynamodb_table_name\n          type: string\n        current_status:\n          $ref: '#/components/schemas/StatusDynamoDbV2'\n        rcu:\n          description: Max RCU usage for scan\n          example: 1000\n          format: int64\n          type: integer\n        status:\n          $ref: '#/components/schemas/StatusDynamoDb'\n        use_scan_api:\n          description: Whether to use DynamoDB Scan API for the initial scan\n          type: boolean\n      required:\n      - table_name\n      type: object\n    SourceFileUpload:\n      example:\n        file_name: file1.json\n        file_size: 12345\n        file_upload_time: 2019-01-15T21:48:23Z\n      properties:\n        file_name:\n          description: name of the file\n          example: file1.json\n          type: string\n        file_size:\n          description: size of the file in bytes\n          example: 12345\n          format: int64\n          type: integer\n        file_upload_time:\n          description: time of file upload\n          example: 2019-01-15T21:48:23Z\n          type: string\n      required:\n      - file_name\n      - file_size\n      - file_upload_time\n      type: object\n    SourceGcs:\n      example:\n        bucket: server-logs\n        object_count_downloaded: 5\n        object_count_total: 5\n        prefix: prefix/to/keys\n        pattern: prefix/to/**/keys/*.format\n        object_bytes_total: 2\n      properties:\n        bucket:\n          description: name of GCS bucket you want to ingest from\n          example: server-logs\n          type: string\n        prefix:\n          description: Prefix that selects keys to ingest.\n          example: prefix/to/keys\n          type: string\n        pattern:\n          description: Glob-style pattern that selects keys to ingest. Only either\n            prefix or pattern can be specified.\n          example: prefix/to/**/keys/*.format\n          type: string\n        object_count_downloaded:\n          format: int64\n          readOnly: true\n          type: integer\n        object_count_total:\n          format: int64\n          readOnly: true\n          type: integer\n        object_bytes_total:\n          format: int64\n          readOnly: true\n          type: integer\n      type: object\n    SourceKafka:\n      example:\n        offset_reset_policy: LATEST\n        kafka_topic_name: example-topic\n        status:\n          num_documents_processed: 1337\n          last_consumed_time: 2001-08-28T00:23:41Z\n          kafka_partitions:\n          - partition_offset: 100\n            partition_number: 123\n            offset_lag: 10\n          - partition_offset: 100\n            partition_number: 123\n            offset_lag: 10\n          state: ACTIVE\n        use_v3: true\n      properties:\n        kafka_topic_name:\n          description: The Kafka topic to be tailed\n          example: example-topic\n          type: string\n        status:\n          $ref: '#/components/schemas/StatusKafka'\n        use_v3:\n          type: boolean\n        offset_reset_policy:\n          enum:\n          - LATEST\n          - EARLIEST\n          type: string\n      required:\n      - kafka_topic_name\n      type: object\n    SourceKinesis:\n      example:\n        offset_reset_policy: EARLIEST\n        aws_region: us-east-2\n        stream_name: click_stream\n        dms_primary_key:\n        - dms_primary_key\n        - dms_primary_key\n      properties:\n        aws_region:\n          description: AWS region name of Kinesis stream, by default us-west-2 is\n            used\n          example: us-east-2\n          type: string\n        stream_name:\n          description: name of kinesis stream\n          example: click_stream\n          type: string\n        dms_primary_key:\n          description: set of fields that correspond to a DMS primary key\n          items:\n            type: string\n          type: array\n        offset_reset_policy:\n          description: For non-DMS streams, Rockset can tail from the earliest end\n            or latest end of kinesis source.\n          enum:\n          - LATEST\n          - EARLIEST\n          example: EARLIEST\n          type: string\n      required:\n      - stream_name\n      type: object\n    SourceMongoDb:\n      example:\n        database_name: my_database\n        collection_name: my_collection\n        status:\n          scan_total_records: 2000\n          stream_records_deleted: 100\n          stream_records_inserted: 10000\n          stream_records_updated: 1000\n          scan_start_time: 2001-08-28T00:23:41Z\n          stream_last_update_processed_at: 2019-01-15T21:48:23Z\n          stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n          scan_end_time: 2001-08-28T00:23:41Z\n          stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n          scan_records_processed: 1000\n          state: SCANNING_TABLE\n      properties:\n        database_name:\n          description: MongoDB database name containing this collection\n          example: my_database\n          type: string\n        collection_name:\n          description: MongoDB collection name\n          example: my_collection\n          type: string\n        status:\n          $ref: '#/components/schemas/StatusMongoDb'\n      required:\n      - collection_name\n      - database_name\n      type: object\n    SourceS3:\n      example:\n        bucket: s3://customer-account-info\n        object_count_downloaded: 0\n        prefixes: '[\"/transactions\", \"/stores\"]'\n        object_count_total: 6\n        prefix: prefix/to/keys\n        pattern: prefix/to/**/keys/*.format\n        object_bytes_total: 1\n        region: us-west-2\n      properties:\n        prefix:\n          description: Prefix that selects keys to ingest.\n          example: prefix/to/keys\n          type: string\n        pattern:\n          description: Glob-style pattern that selects keys to ingest. Only either\n            prefix or pattern can be specified.\n          example: prefix/to/**/keys/*.format\n          type: string\n        region:\n          description: AWS region containing source bucket\n          example: us-west-2\n          type: string\n        bucket:\n          description: address of S3 bucket containing data\n          example: s3://customer-account-info\n          type: string\n        prefixes:\n          description: list of prefixes to paths from which data should be ingested\n          example: '[\"/transactions\", \"/stores\"]'\n          items:\n            type: string\n          readOnly: true\n          type: array\n        object_count_downloaded:\n          format: int64\n          readOnly: true\n          type: integer\n        object_count_total:\n          format: int64\n          readOnly: true\n          type: integer\n        object_bytes_total:\n          format: int64\n          readOnly: true\n          type: integer\n      required:\n      - bucket\n      - prefixes\n      type: object\n    SqlExpression:\n      example:\n        sql: SHA256()\n      properties:\n        sql:\n          description: The name of a sql function\n          example: SHA256()\n          type: string\n      type: object\n    Status:\n      example:\n        last_processed_item: /path/to/some/object\n        last_processed_at: 2019-01-15T21:48:23Z\n        total_processed_items: 32849023\n        state: INITIALIZING\n        message: error 403 forbidden\n      properties:\n        state:\n          description: 'Status of the Source''s ingestion, one of: INITIALIZING, WATCHING,\n            PROCESSING, COMPLETED, ERROR'\n          enum:\n          - INITIALIZING\n          - WATCHING\n          - PROCESSING\n          - COMPLETED\n          - ERROR\n          example: INITIALIZING\n          type: string\n        message:\n          description: state message\n          example: error 403 forbidden\n          type: string\n        last_processed_at:\n          description: ISO-8601 date when source was last processed\n          example: 2019-01-15T21:48:23Z\n          type: string\n        last_processed_item:\n          description: last source item processed by ingester\n          example: /path/to/some/object\n          type: string\n        total_processed_items:\n          description: Total items processed of source\n          example: 32849023\n          format: int64\n          type: integer\n      type: object\n    StatusAzureEventHubs:\n      example:\n        partitions:\n        - partition_offset: 100\n          partition_number: 123\n          offset_lag: 10\n        - partition_offset: 100\n          partition_number: 123\n          offset_lag: 10\n        num_documents_processed: 1337\n        last_consumed_time: 2001-08-28T00:23:41Z\n        state: ACTIVE\n      properties:\n        state:\n          description: State of the source\n          enum:\n          - NO_DOCS_YET\n          - ACTIVE\n          - DORMANT\n          example: ACTIVE\n          type: string\n        last_consumed_time:\n          description: Time at which the last document was consumed\n          example: 2001-08-28T00:23:41Z\n          type: string\n        num_documents_processed:\n          description: Number of documents consumed\n          example: 1337\n          format: int64\n          type: integer\n        partitions:\n          description: Status info per partition\n          items:\n            $ref: '#/components/schemas/StatusAzureEventHubsPartition'\n          type: array\n      type: object\n    StatusAzureEventHubsPartition:\n      example:\n        partition_offset: 100\n        partition_number: 123\n        offset_lag: 10\n      properties:\n        partition_number:\n          description: The number of this partition\n          example: 123\n          format: int32\n          type: integer\n        partition_offset:\n          description: Latest offset of partition\n          example: 100\n          format: int64\n          type: integer\n        offset_lag:\n          description: Per partition lag for offset\n          example: 10\n          format: int64\n          type: integer\n      type: object\n    StatusAzureServiceBus:\n      example:\n        sessions:\n          key:\n            sequence_number: 323862\n            last_processed: 2022-08-23T00:13:41Z\n        first_processed_at: 2021-08-28T00:23:41Z\n        records_processed: 1000\n      properties:\n        first_processed_at:\n          description: Service Bus first message processed time in ISO-8601 format\n          example: 2021-08-28T00:23:41Z\n          format: date-time\n          type: string\n        records_processed:\n          description: Number of records processed\n          example: 1000\n          format: int64\n          type: integer\n        sessions:\n          additionalProperties:\n            $ref: '#/components/schemas/StatusAzureServiceBusSession'\n          description: Sessions processed\n          type: object\n      type: object\n    StatusAzureServiceBusSession:\n      example:\n        sequence_number: 323862\n        last_processed: 2022-08-23T00:13:41Z\n      properties:\n        sequence_number:\n          description: The last processed sequence number within this session\n          example: 323862\n          format: int64\n          type: integer\n        last_processed:\n          description: Most recent ISO-8601 date when a message from this session\n            was processed\n          example: 2022-08-23T00:13:41Z\n          format: date-time\n          type: string\n      type: object\n    StatusDynamoDb:\n      example:\n        scan_total_records: 2000\n        stream_last_processed_at: 2019-01-15T21:48:23Z\n        scan_start_time: 2001-08-28T00:23:41Z\n        scan_end_time: 2001-08-28T00:23:41Z\n        scan_records_processed: 1000\n        state: SCANNING_TABLE\n      properties:\n        scan_start_time:\n          description: DynamoDB scan start time\n          example: 2001-08-28T00:23:41Z\n          type: string\n        scan_end_time:\n          description: DynamoDb scan end time\n          example: 2001-08-28T00:23:41Z\n          type: string\n        scan_records_processed:\n          description: Number of records inserted using scan\n          example: 1000\n          format: int64\n          type: integer\n        scan_total_records:\n          description: Number of records in DynamoDB table at time of scan\n          example: 2000\n          format: int64\n          type: integer\n        state:\n          description: state of current ingest for this table\n          enum:\n          - INITIALIZING\n          - SCANNING_TABLE\n          - PROCESSING_STREAM\n          example: SCANNING_TABLE\n          type: string\n        stream_last_processed_at:\n          description: ISO-8601 date when source was last processed\n          example: 2019-01-15T21:48:23Z\n          type: string\n      type: object\n    StatusDynamoDbV2:\n      example:\n        initial_dump_completion_percentage: 0.73\n        stream_last_processed_at: 2019-01-15T21:48:23Z\n        state: PROCESSING_STREAM\n      properties:\n        initial_dump_completion_percentage:\n          example: 0.73\n          format: double\n          type: number\n        state:\n          description: state of current ingest for this table\n          enum:\n          - INITIALIZING\n          - SCANNING\n          - EXPORTING_TO_S3\n          - DOWNLOADING_FROM_S3\n          - PROCESSING_STREAM\n          example: PROCESSING_STREAM\n          type: string\n        stream_last_processed_at:\n          description: ISO-8601 date when source was last processed\n          example: 2019-01-15T21:48:23Z\n          type: string\n      type: object\n    StatusKafka:\n      example:\n        num_documents_processed: 1337\n        last_consumed_time: 2001-08-28T00:23:41Z\n        kafka_partitions:\n        - partition_offset: 100\n          partition_number: 123\n          offset_lag: 10\n        - partition_offset: 100\n          partition_number: 123\n          offset_lag: 10\n        state: ACTIVE\n      properties:\n        state:\n          description: State of the Kafka source\n          enum:\n          - NO_DOCS_YET\n          - ACTIVE\n          - DORMANT\n          example: ACTIVE\n          type: string\n        last_consumed_time:\n          description: Time at which the last document was consumed from Kafka\n          example: 2001-08-28T00:23:41Z\n          type: string\n        num_documents_processed:\n          description: Number of documents consumed by this Kafka topic\n          example: 1337\n          format: int64\n          type: integer\n        kafka_partitions:\n          description: Status info per partition\n          items:\n            $ref: '#/components/schemas/StatusKafkaPartition'\n          type: array\n      type: object\n    StatusKafkaPartition:\n      example:\n        partition_offset: 100\n        partition_number: 123\n        offset_lag: 10\n      properties:\n        partition_number:\n          description: The number of this partition\n          example: 123\n          format: int32\n          type: integer\n        partition_offset:\n          description: Latest offset of partition\n          example: 100\n          format: int64\n          type: integer\n        offset_lag:\n          description: Per partition lag for offset\n          example: 10\n          format: int64\n          type: integer\n      type: object\n    StatusMongoDb:\n      example:\n        scan_total_records: 2000\n        stream_records_deleted: 100\n        stream_records_inserted: 10000\n        stream_records_updated: 1000\n        scan_start_time: 2001-08-28T00:23:41Z\n        stream_last_update_processed_at: 2019-01-15T21:48:23Z\n        stream_last_delete_processed_at: 2019-01-15T21:48:23Z\n        scan_end_time: 2001-08-28T00:23:41Z\n        stream_last_insert_processed_at: 2019-01-15T21:48:23Z\n        scan_records_processed: 1000\n        state: SCANNING_TABLE\n      properties:\n        scan_start_time:\n          description: MongoDB scan start time\n          example: 2001-08-28T00:23:41Z\n          type: string\n        scan_end_time:\n          description: MongoDB scan end time\n          example: 2001-08-28T00:23:41Z\n          type: string\n        scan_records_processed:\n          description: Number of records inserted using scan\n          example: 1000\n          format: int64\n          type: integer\n        scan_total_records:\n          description: Number of records in MongoDB table at time of scan\n          example: 2000\n          format: int64\n          type: integer\n        state:\n          description: state of current ingest for this table\n          enum:\n          - INITIALIZING\n          - SCANNING_TABLE\n          - PROCESSING_STREAM\n          example: SCANNING_TABLE\n          type: string\n        stream_last_insert_processed_at:\n          description: ISO-8601 date when new insert from source was last processed\n          example: 2019-01-15T21:48:23Z\n          type: string\n        stream_last_update_processed_at:\n          description: ISO-8601 date when update from source was last processed\n          example: 2019-01-15T21:48:23Z\n          type: string\n        stream_last_delete_processed_at:\n          description: ISO-8601 date when delete from source was last processed\n          example: 2019-01-15T21:48:23Z\n          type: string\n        stream_records_inserted:\n          description: Number of new records inserted using stream\n          example: 10000\n          format: int64\n          type: integer\n        stream_records_updated:\n          description: Number of new records updated using stream\n          example: 1000\n          format: int64\n          type: integer\n        stream_records_deleted:\n          description: Number of new records deleted using stream\n          example: 100\n          format: int64\n          type: integer\n      type: object\n    UnsubscribePreference:\n      description: Notification preferences for the user.\n      example:\n        notificationType: create_apikey\n      properties:\n        notificationType:\n          description: The type of notification to be unsubscribed from.\n          example: create_apikey\n          type: string\n      required:\n      - notificationType\n      type: object\n    UpdateAliasRequest:\n      example:\n        collections: '[\"commons.foo\", \"prod.demo\"]'\n        description: version alias\n      properties:\n        description:\n          description: optional description\n          example: version alias\n          type: string\n        collections:\n          description: list of fully qualified collection names referenced by alias\n          example: '[\"commons.foo\", \"prod.demo\"]'\n          items:\n            type: string\n          type: array\n      required:\n      - collections\n      type: object\n    UpdateApiKeyRequest:\n      example:\n        state: ACTIVE\n      properties:\n        state:\n          description: State that the api key should be set to.\n          enum:\n          - ACTIVE\n          - SUSPENDED\n          example: ACTIVE\n          type: string\n      type: object\n    UpdateApiKeyResponse:\n      example:\n        data:\n          role: read-only\n          name: my-key\n          created_at: 2001-08-28T00:23:41Z\n          state: ACTIVE\n          created_by: test@example.com\n          key: aB35kDjg*******************************\n          last_access_time: 2001-08-28T00:23:41Z\n      properties:\n        data:\n          $ref: '#/components/schemas/ApiKey'\n      type: object\n    UpdateQueryLambdaRequest:\n      example:\n        description: production version foo\n        sql:\n          default_parameters:\n          - name: _id\n            type: string\n            value: 85beb391\n          - name: _id\n            type: string\n            value: 85beb391\n          query: SELECT 'Foo'\n      properties:\n        description:\n          description: optional description\n          example: production version foo\n          type: string\n        sql:\n          $ref: '#/components/schemas/QueryLambdaSql'\n      type: object\n    UpdateRoleRequest:\n      example:\n        privileges:\n        - cluster: '*ALL*'\n          action: Create collection\n          resource_name: commons\n        - cluster: '*ALL*'\n          action: Create collection\n          resource_name: commons\n        description: Role with read and write privileges to all collections.\n      properties:\n        description:\n          description: Description for the role.\n          example: Role with read and write privileges to all collections.\n          type: string\n        privileges:\n          description: List of privileges that will be associated with the role.\n          items:\n            $ref: '#/components/schemas/Privilege'\n          type: array\n      type: object\n    UpdateUnsubscribePreferencesRequest:\n      example:\n        data:\n        - notificationType: create_apikey\n        - notificationType: create_apikey\n      properties:\n        data:\n          description: List of notification preferences\n          items:\n            $ref: '#/components/schemas/UnsubscribePreference'\n          type: array\n      type: object\n    UpdateUnsubscribePreferencesResponse:\n      example:\n        data:\n        - notificationType: create_apikey\n        - notificationType: create_apikey\n      properties:\n        data:\n          description: List of notification preferences\n          items:\n            $ref: '#/components/schemas/UnsubscribePreference'\n          type: array\n      type: object\n    UpdateViewRequest:\n      example:\n        query: SELECT * FROM foo\n        description: view of awesome collection\n      properties:\n        description:\n          description: optional description\n          example: view of awesome collection\n          type: string\n        query:\n          description: SQL for this view\n          example: SELECT * FROM foo\n          type: string\n      required:\n      - query\n      type: object\n    UpdateViewResponse:\n      example:\n        data:\n          owner_email: abc@rockset.com\n          path: path\n          workspace: commons\n          query_sql: SELECT * FROM commons.foo\n          entities: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n          creator_email: xyz@rockset.com\n          name: demo\n          description: view referencing collection in workspace\n          created_at: 2001-08-28T00:23:41Z\n          state: CREATED\n          modified_at: 2001-08-28T00:23:42Z\n      properties:\n        data:\n          $ref: '#/components/schemas/View'\n      type: object\n    UpdateVirtualInstanceRequest:\n      example:\n        new_type: FREE\n        monitoring_enabled: true\n        new_size: LARGE\n      properties:\n        new_size:\n          description: requested virtual instance size\n          enum:\n          - FREE\n          - SHARED\n          - SMALL\n          - MEDIUM\n          - LARGE\n          - XLARGE\n          - XLARGE2\n          - XLARGE4\n          - XLARGE8\n          - XLARGE16\n          example: LARGE\n          type: string\n        new_type:\n          enum:\n          - FREE\n          - SHARED\n          - SMALL\n          - MEDIUM\n          - LARGE\n          - XLARGE\n          - XLARGE2\n          - XLARGE4\n          - XLARGE8\n          - XLARGE16\n          type: string\n        monitoring_enabled:\n          type: boolean\n      type: object\n    UpdateVirtualInstanceResponse:\n      example:\n        data:\n          desired_type: FREE\n          last_updated: 2001-08-28T00:23:41Z\n          estimated_switch_duration_minutes: 20\n          scaled_pod_count: 6\n          monitoring_enabled: true\n          desired_size: MEDIUM\n          current_size: MEDIUM\n          state: ACTIVE\n          id: 123e4567-e89b-12d3-a456-556642440000\n          current_type: FREE\n          default_pod_count: 0\n      properties:\n        data:\n          $ref: '#/components/schemas/VirtualInstance'\n      type: object\n    User:\n      example:\n        roles: '[\"admin\", \"member\", \"read-only\"]'\n        created_at: 2001-08-28T00:23:41Z\n        last_name: Doe\n        state: ACTIVE\n        first_name: John\n        email: hello@rockset.com\n      properties:\n        created_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:41Z\n          type: string\n        email:\n          description: user email\n          example: hello@rockset.com\n          type: string\n        first_name:\n          description: user first name\n          example: John\n          type: string\n        last_name:\n          description: user last name\n          example: Doe\n          type: string\n        roles:\n          description: List of roles for a given user\n          example: '[\"admin\", \"member\", \"read-only\"]'\n          items:\n            type: string\n          type: array\n        state:\n          description: state of user - NEW / ACTIVE\n          example: ACTIVE\n          type: string\n      required:\n      - email\n      type: object\n    ValidateQueryResponse:\n      example:\n        collections: '[\"commons.foo\"]'\n        parameters: '[\"foo\"]'\n      properties:\n        collections:\n          description: list of collections specified in query\n          example: '[\"commons.foo\"]'\n          items:\n            type: string\n          type: array\n        parameters:\n          description: list of parameters specified in query\n          example: '[\"foo\"]'\n          items:\n            type: string\n          type: array\n      required:\n      - collections\n      - parameters\n      type: object\n    View:\n      example:\n        owner_email: abc@rockset.com\n        path: path\n        workspace: commons\n        query_sql: SELECT * FROM commons.foo\n        entities: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n        creator_email: xyz@rockset.com\n        name: demo\n        description: view referencing collection in workspace\n        created_at: 2001-08-28T00:23:41Z\n        state: CREATED\n        modified_at: 2001-08-28T00:23:42Z\n      properties:\n        path:\n          type: string\n        name:\n          description: name of the view\n          example: demo\n          type: string\n        description:\n          description: view description\n          example: view referencing collection in workspace\n          type: string\n        workspace:\n          description: name of the workspace\n          example: commons\n          type: string\n        creator_email:\n          description: email of the creator\n          example: xyz@rockset.com\n          type: string\n        owner_email:\n          description: email of the owner\n          example: abc@rockset.com\n          type: string\n        query_sql:\n          description: SQL query of the view\n          example: SELECT * FROM commons.foo\n          type: string\n        entities:\n          description: list of entities referenced by view. An entity can be a view,\n            alias or collection\n          example: '[\"common.foo_view\", \"prod.demo_alias\", \"dev.user_collection\"]'\n          items:\n            type: string\n          type: array\n        state:\n          description: state of the view\n          enum:\n          - CREATED\n          - SYNCING\n          - DELETED\n          example: CREATED\n          type: string\n        created_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:41Z\n          type: string\n        modified_at:\n          description: ISO-8601 date\n          example: 2001-08-28T00:23:42Z\n          type: string\n      type: object\n    VirtualInstance:\n      example:\n        desired_type: FREE\n        last_updated: 2001-08-28T00:23:41Z\n        estimated_switch_duration_minutes: 20\n        scaled_pod_count: 6\n        monitoring_enabled: true\n        desired_size: MEDIUM\n        current_size: MEDIUM\n        state: ACTIVE\n        id: 123e4567-e89b-12d3-a456-556642440000\n        current_type: FREE\n        default_pod_count: 0\n      properties:\n        state:\n          description: virtual instance state\n          enum:\n          - PROVISIONING_RESOURCES\n          - REBALANCING_COLLECTIONS\n          - ACTIVE\n          - DELETED\n          example: ACTIVE\n          type: string\n        current_type:\n          enum:\n          - FREE\n          - SHARED\n          - SMALL\n          - MEDIUM\n          - LARGE\n          - XLARGE\n          - XLARGE2\n          - XLARGE4\n          - XLARGE8\n          - XLARGE16\n          type: string\n        desired_type:\n          enum:\n          - FREE\n          - SHARED\n          - SMALL\n          - MEDIUM\n          - LARGE\n          - XLARGE\n          - XLARGE2\n          - XLARGE4\n          - XLARGE8\n          - XLARGE16\n          type: string\n        current_size:\n          description: virtual instance current size\n          enum:\n          - FREE\n          - SHARED\n          - SMALL\n          - MEDIUM\n          - LARGE\n          - XLARGE\n          - XLARGE2\n          - XLARGE4\n          - XLARGE8\n          - XLARGE16\n          example: MEDIUM\n          readOnly: true\n          type: string\n        desired_size:\n          description: virtual instance desired size\n          enum:\n          - FREE\n          - SHARED\n          - SMALL\n          - MEDIUM\n          - LARGE\n          - XLARGE\n          - XLARGE2\n          - XLARGE4\n          - XLARGE8\n          - XLARGE16\n          example: MEDIUM\n          readOnly: true\n          type: string\n        last_updated:\n          description: ISO-8601 date of when virtual instance size was last updated\n          example: 2001-08-28T00:23:41Z\n          type: string\n        estimated_switch_duration_minutes:\n          description: estimated duration in minutes of last virtual instance size\n            update\n          example: 20\n          format: int64\n          type: integer\n        monitoring_enabled:\n          type: boolean\n        default_pod_count:\n          format: int32\n          type: integer\n        scaled_pod_count:\n          format: int32\n          type: integer\n        id:\n          description: unique identifier for virtual instance\n          example: 123e4567-e89b-12d3-a456-556642440000\n          type: string\n      type: object\n    Workspace:\n      description: Workspaces are organizational containers for collections.\n      example:\n        name: event_logs\n        created_at: 2001-08-28T00:23:41Z\n        description: Datasets of system logs for the ops team.\n        collection_count: 3\n        created_by: hello@rockset.com\n      properties:\n        created_at:\n          description: ISO-8601 date of when workspace was created\n          example: 2001-08-28T00:23:41Z\n          type: string\n        created_by:\n          description: email of user who created the workspace\n          example: hello@rockset.com\n          type: string\n        name:\n          description: descriptive label and unique identifier\n          example: event_logs\n          type: string\n        description:\n          description: longer explanation for the workspace\n          example: Datasets of system logs for the ops team.\n          type: string\n        collection_count:\n          description: number of collections that are immediate children of workspace\n          example: 3\n          format: int64\n          type: integer\n      type: object\n    XmlParams:\n      example:\n        attribute_prefix: _attr\n        doc_tag: row\n        encoding: UTF-8\n        value_tag: value\n        root_tag: root\n      properties:\n        root_tag:\n          description: tag until which xml is ignored\n          example: root\n          type: string\n        encoding:\n          description: encoding in which data source is encoded\n          example: UTF-8\n          type: string\n        doc_tag:\n          description: tags with which documents are identified\n          example: row\n          type: string\n        value_tag:\n          description: tag used for the value when there are attributes in the element\n            having no child\n          example: value\n          type: string\n        attribute_prefix:\n          description: tag to differentiate between attributes and elements\n          example: _attr\n          type: string\n      type: object\nx-original-swagger-version: \"2.0\"\n",
			"canonicalURL": "/github.com/rockset/rockset-go-client@eb67fa0fb39585296c257d73f2cb4353018afe7e/-/blob/openapi/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rockset/rockset-go-client/blob/eb67fa0fb39585296c257d73f2cb4353018afe7e/openapi/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}