{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger/cactus"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "packages/cactus-core-api/src/main/json/openapi.json",
			"byteSize": 37202,
			"content": "{\n    \"openapi\": \"3.0.3\",\n    \"info\": {\n        \"title\": \"Hyperledger Core API\",\n        \"description\": \"Contains/describes the core API types for Cactus. Does not describe actual endpoints on its own as this is left to the implementing plugins who can import and re-use commonly needed type definitions from this specification. One example of said commonly used type definitions would be the types related to consortium management, cactus nodes, ledgers, etc..\",\n        \"version\": \"0.2.0\",\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"Constants\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"/api/v1/async/socket-io/connect\"\n                ],\n                \"x-enum-varnames\": [\n                    \"SocketIoConnectionPathV1\"\n                ]\n            },\n            \"PluginImport\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"packageName\",\n                    \"type\",\n                    \"action\"\n                ],\n                \"properties\": {\n                    \"packageName\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    },\n                    \"type\": {\n                        \"nullable\": false,\n                        \"description\": \"\",\n                        \"$ref\": \"#/components/schemas/PluginImportType\"\n                    },\n                    \"action\": {\n                        \"nullable\": false,\n                        \"description\": \"\",\n                        \"$ref\": \"#/components/schemas/PluginImportAction\"\n                    },\n                    \"options\": {}\n                }\n            },\n            \"PluginImportType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"org.hyperledger.cactus.plugin_import_type.LOCAL\",\n                    \"org.hyperledger.cactus.plugin_import_type.REMOTE\"\n                ]\n            },\n            \"PluginImportAction\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"org.hyperledger.cactus.plugin_import_action.INSTANTIATE\",\n                    \"org.hyperledger.cactus.plugin_import_action.INSTALL\"\n                ]\n            },\n            \"ConsensusAlgorithmFamily\": {\n                \"type\": \"string\",\n                \"description\": \"Enumerates a list of consensus algorithm families in existence. Does not intend to be an exhaustive list, just a practical one, meaning that we only include items here that are relevant to Hyperledger Cactus in fulfilling its own duties. This can be extended later as more sophisticated features of Cactus get implemented. This enum is meant to be first and foremost a useful abstraction for achieving practical tasks, not an encyclopedia and therefore we ask of everyone that this to be extended only in ways that serve a practical purpose for the runtime behavior of Cactus or Cactus plugins in general. The bottom line is that we can accept this enum being not 100% accurate as long as it 100% satisfies what it was designed to do.\",\n                \"enum\": [\n                    \"org.hyperledger.cactus.consensusalgorithm.PROOF_OF_AUTHORITY\",\n                    \"org.hyperledger.cactus.consensusalgorithm.PROOF_OF_STAKE\",\n                    \"org.hyperledger.cactus.consensusalgorithm.PROOF_OF_WORK\"\n                ]\n            },\n            \"ConsensusAlgorithmFamiliesWithTxFinality\": {\n                \"type\": \"string\",\n                \"description\": \"Enumerates a list of consensus algorithm families that provide immediate finality\",\n                \"enum\": [\n                    \"org.hyperledger.cactus.consensusalgorithm.PROOF_OF_AUTHORITY\",\n                    \"org.hyperledger.cactus.consensusalgorithm.PROOF_OF_STAKE\"\n                ]\n            },\n            \"ConsensusAlgorithmFamiliesWithOutTxFinality\": {\n                \"description\": \"Enumerates a list of consensus algorithm families that do not provide immediate finality\",\n                \"type\": \"string\",\n                \"enum\": [\n                    \"org.hyperledger.cactus.consensusalgorithm.PROOF_OF_WORK\"\n                ],\n                \"x-enum-varnames\": [\n                    \"WORK\"\n                ]\n            },\n            \"PrimaryKey\": {\n                \"type\": \"string\",\n                \"minLength\": 1,\n                \"maxLength\": 128,\n                \"nullable\": false\n            },\n            \"ConsortiumMemberId\": {\n                \"$ref\": \"#/components/schemas/PrimaryKey\",\n                \"description\": \"ID of Consortium member who operates the ledger (if any). Defined as an optional property in case the ledger is a permissionless and/or public one such as the Bitcoin or Ethereum mainnets.\"\n            },\n            \"CactusNodeId\": {\n                \"$ref\": \"#/components/schemas/PrimaryKey\",\n                \"description\": \"ID of a Cactus node that must uniquely distinguish it from all other Cactus nodes within a Consortium. Note that API server instances do not have their own identity the way a node does.\"\n            },\n            \"ConsortiumId\": {\n                \"$ref\": \"#/components/schemas/PrimaryKey\"\n            },\n            \"LedgerId\": {\n                \"description\": \"String that uniquely identifies a ledger within a Cactus consortium so that transactions can be routed to the correct ledger.\",\n                \"$ref\": \"#/components/schemas/PrimaryKey\"\n            },\n            \"PluginInstanceId\": {\n                \"description\": \"String that uniquely identifies a plugin instance within a Cactus consortium so that requests can be addressed/routed  directly to individual plugins when necessary.\",\n                \"$ref\": \"#/components/schemas/PrimaryKey\"\n            },\n            \"ConsortiumDatabase\": {\n                \"required\": [\n                    \"consortium\",\n                    \"ledger\",\n                    \"consortiumMember\",\n                    \"cactusNode\",\n                    \"pluginInstance\"\n                ],\n                \"properties\": {\n                    \"consortium\": {\n                        \"description\": \"A collection of Consortium entities. In practice this should only ever contain a single consortium, but we defined it as an array to keep the convention up with the rest of the collections defined in the Consortium data in general. Also, if we ever decide to somehow have some sort of consortium to consortium integration (which does not make much sense in the current frame of mind of the author in the year 2020) then having this as an array will have proven itself to be an excellent long term compatibility/extensibility decision indeed.\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Consortium\"\n                        },\n                        \"default\": [],\n                        \"minItems\": 0,\n                        \"maxItems\": 2048\n                    },\n                    \"ledger\": {\n                        \"description\": \"The complete collection of all ledger entities in existence within the consortium.\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Ledger\"\n                        },\n                        \"default\": [],\n                        \"minItems\": 0,\n                        \"maxItems\": 2048\n                    },\n                    \"consortiumMember\": {\n                        \"description\": \"The complete collection of all consortium member entities in existence within the consortium.\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ConsortiumMember\"\n                        },\n                        \"default\": [],\n                        \"minItems\": 0,\n                        \"maxItems\": 2048\n                    },\n                    \"cactusNode\": {\n                        \"description\": \"The complete collection of all cactus nodes entities in existence within the consortium.\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CactusNode\"\n                        },\n                        \"default\": [],\n                        \"minItems\": 0,\n                        \"maxItems\": 2048\n                    },\n                    \"pluginInstance\": {\n                        \"description\": \"The complete collection of all plugin instance entities in existence within the consortium.\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PluginInstance\"\n                        },\n                        \"default\": [],\n                        \"minItems\": 0,\n                        \"maxItems\": 2048\n                    }\n                }\n            },\n            \"Ledger\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"ledgerType\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"$ref\": \"#/components/schemas/LedgerId\"\n                    },\n                    \"ledgerType\": {\n                        \"$ref\": \"#/components/schemas/LedgerType\",\n                        \"nullable\": false\n                    },\n                    \"consortiumMemberId\": {\n                        \"$ref\": \"#/components/schemas/ConsortiumMemberId\"\n                    }\n                }\n            },\n            \"LedgerType\": {\n                \"description\": \"Enumerates the different ledger vendors and their major versions encoded within the name of the LedgerType. For example \\\"BESU_1X\\\" involves all of the [1.0.0;2.0.0) where 1.0.0 is included and anything up until, but not 2.0.0. See: https://stackoverflow.com/a/4396303/698470 for further explanation.\",\n                \"type\": \"string\",\n                \"enum\": [\n                    \"BESU_1X\",\n                    \"BESU_2X\",\n                    \"BURROW_0X\",\n                    \"CORDA_4X\",\n                    \"FABRIC_14X\",\n                    \"FABRIC_2\",\n                    \"QUORUM_2X\",\n                    \"SAWTOOTH_1X\"\n                ]\n            },\n            \"Consortium\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"mainApiHost\",\n                    \"memberIds\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"$ref\": \"#/components/schemas/ConsortiumId\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"mainApiHost\": {\n                        \"type\": \"string\"\n                    },\n                    \"memberIds\": {\n                        \"description\": \"The collection (array) of primary keys of consortium member entities that belong to this Consortium.\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ConsortiumMemberId\"\n                        },\n                        \"default\": [],\n                        \"minItems\": 1,\n                        \"maxItems\": 2048,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"ConsortiumMember\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"nodeIds\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"$ref\": \"#/components/schemas/ConsortiumMemberId\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The human readable name a Consortium member can be referred to while making it easy for humans to distinguish this particular consortium member entity from any other ones.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    },\n                    \"nodeIds\": {\n                        \"type\": \"array\",\n                        \"default\": [],\n                        \"nullable\": false,\n                        \"minItems\": 1,\n                        \"maxItems\": 2048,\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CactusNodeId\"\n                        }\n                    }\n                }\n            },\n            \"CactusNodeMeta\": {\n                \"description\": \"A Cactus node meta information\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"nodeApiHost\",\n                    \"publicKeyPem\"\n                ],\n                \"properties\": {\n                    \"nodeApiHost\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    },\n                    \"publicKeyPem\": {\n                        \"description\": \"The PEM encoded public key that was used to generate the JWS included in the response (the jws property)\",\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 65535,\n                        \"nullable\": false,\n                        \"format\": \"Must only contain the public key, never include here  the PEM that also contains a private key. See PEM format: https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail\"\n                    }\n                }\n            },\n            \"CactusNode\": {\n                \"description\": \"A Cactus node can be a single server, or a set of servers behind a load balancer acting as one.\",\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/CactusNodeMeta\"\n                    },\n                    {\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"id\",\n                            \"consortiumId\",\n                            \"nodeApiHost\",\n                            \"memberId\",\n                            \"publicKeyPem\",\n                            \"pluginInstanceIds\",\n                            \"ledgerIds\"\n                        ],\n                        \"properties\": {\n                            \"id\": {\n                                \"$ref\": \"#/components/schemas/CactusNodeId\",\n                                \"example\": \"809a76ba-cfb8-4045-a5c6-ed70a7314c25\"\n                            },\n                            \"consortiumId\": {\n                                \"$ref\": \"#/components/schemas/ConsortiumId\",\n                                \"description\": \"ID of the Cactus Consortium this node is in.\",\n                                \"example\": \"3e2670d9-2d14-45bd-96f5-33e2c4b4e3fb\"\n                            },\n                            \"memberId\": {\n                                \"$ref\": \"#/components/schemas/ConsortiumMemberId\",\n                                \"example\": \"b3674a28-e442-4feb-b1f3-8cbe46c20e5e\"\n                            },\n                            \"ledgerIds\": {\n                                \"description\": \"Stores an array of Ledger entity IDs that are reachable (routable) via this Cactus Node. This information is used by the client side SDK API client to figure out at runtime where to send API requests that are specific to a certain ledger such as requests to execute transactions.\",\n                                \"type\": \"array\",\n                                \"nullable\": false,\n                                \"minItems\": 0,\n                                \"maxItems\": 2048,\n                                \"default\": [],\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/LedgerId\"\n                                }\n                            },\n                            \"pluginInstanceIds\": {\n                                \"type\": \"array\",\n                                \"nullable\": false,\n                                \"minItems\": 0,\n                                \"maxItems\": 2048,\n                                \"default\": [],\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/PluginInstanceId\"\n                                }\n                            }\n                        }\n                    }\n                ]\n            },\n            \"PluginInstance\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"packageName\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"$ref\": \"#/components/schemas/PluginInstanceId\"\n                    },\n                    \"packageName\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 4096,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"JWSCompact\": {\n                \"description\": \"A JSON Web Signature. See: https://tools.ietf.org/html/rfc7515 for info about standard.\",\n                \"type\": \"string\",\n                \"minLength\": 5,\n                \"maxLength\": 65535,\n                \"pattern\": \"/^[a-zA-Z0-9-_]+?.[a-zA-Z0-9-_]+?.([a-zA-Z0-9-_]+)?$/\",\n                \"example\": \"eyJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiSm9obiBEb2UiLCJpYXQiOjE1MTYyMzkwMjJ9.DOCNCqEMN7CQ_z-RMndiyldljXOk6WFIZxRzNF5Ylg4\"\n            },\n            \"JWSRecipient\": {\n                \"description\": \"A JSON Web Signature. See: https://tools.ietf.org/html/rfc7515 for info about standard.\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"signature\"\n                ],\n                \"properties\": {\n                    \"signature\": {\n                        \"type\": \"string\"\n                    },\n                    \"protected\": {\n                        \"type\": \"string\"\n                    },\n                    \"header\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                    }\n                }\n            },\n            \"JWSGeneral\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"payload\",\n                    \"signatures\"\n                ],\n                \"properties\": {\n                    \"payload\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 65535\n                    },\n                    \"signatures\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/JWSRecipient\"\n                        }\n                    }\n                }\n            },\n            \"GetObjectRequestV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key for the entry to get from the object store.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"GetObjectResponseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\",\n                    \"value\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key that was used to retrieve the value from the object store.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    },\n                    \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value associated with the requested key in the object store as a string.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 10485760,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"HasObjectRequestV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key to check for presence in the object store.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"HasObjectResponseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\",\n                    \"isPresent\",\n                    \"checkedAt\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key that was used to check the presence of the value in the object store.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    },\n                    \"checkedAt\": {\n                        \"type\": \"string\",\n                        \"description\": \"Date and time encoded as JSON when the presence check was performed by the plugin backend.\",\n                        \"nullable\": false\n                    },\n                    \"isPresent\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"The boolean true or false indicating the presence or absence of an object under 'key'.\",\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"SetObjectRequestV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\",\n                    \"value\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key for the entry to set in the object store.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    },\n                    \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value that will be associated with the key in the object store.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 10485760,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"SetObjectResponseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key that was used to set the value in the object store.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"GetKeychainEntryRequestV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key for the entry to get from the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"GetKeychainEntryResponseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\",\n                    \"value\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key that was used to retrieve the value from the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    },\n                    \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value associated with the requested key on the keychain.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 10485760,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"SetKeychainEntryRequestV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\",\n                    \"value\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key for the entry to set on the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    },\n                    \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value that will be associated with the key on the keychain.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 10485760,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"SetKeychainEntryResponseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key that was used to set the value on the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"DeleteKeychainEntryRequestV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key for the entry to check the presence of on the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"DeleteKeychainEntryResponseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key that was deleted from the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"HasKeychainEntryRequestV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"key\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key to check for presence in the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"HasKeychainEntryResponseV1\": {\n              \"type\": \"object\",\n              \"required\": [\"key\", \"isPresent\", \"checkedAt\"],\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"description\": \"The key that was used to check the presence of the value in the entry store.\",\n                  \"minLength\": 1,\n                  \"maxLength\": 1024,\n                  \"nullable\": false\n                },\n                \"checkedAt\": {\n                  \"type\": \"string\",\n                  \"description\": \"Date and time encoded as JSON when the presence check was performed by the plugin backend.\",\n                  \"nullable\": false\n                },\n                \"isPresent\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"The boolean true or false indicating the presence or absence of an entry under 'key'.\",\n                  \"nullable\": false\n                }\n              }\n            }\n        },\n        \"requestBodies\": {\n            \"object_store_get_object_v1_request_body\": {\n                \"description\": \"Request body to obtain an object via its key.\",\n                \"required\": true,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/GetObjectRequestV1\"\n                        }\n                    }\n                }\n            },\n            \"object_store_set_object_v1_request_body\": {\n                \"description\": \"Request body to set an object under a key.\",\n                \"required\": true,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SetObjectRequestV1\"\n                        }\n                    }\n                }\n            },\n            \"object_store_has_object_v1_request_body\": {\n                \"description\": \"Request body to check presence of an object under a key.\",\n                \"required\": true,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/HasObjectRequestV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_get_entry_request_body\": {\n                \"description\": \"Request body to obtain a keychain entry via its key\",\n                \"required\": true,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/GetKeychainEntryRequestV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_set_entry_request_body\": {\n                \"description\": \"Request body to write/update a keychain entry via its key\",\n                \"required\": true,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SetKeychainEntryRequestV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_has_entry_request_body\": {\n                \"description\": \"Request body for checking a keychain entry via its key\",\n                \"required\": true,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/HasKeychainEntryRequestV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_delete_entry_request_body\": {\n                \"description\": \"Request body to delete a keychain entry via its key\",\n                \"required\": true,\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/DeleteKeychainEntryRequestV1\"\n                        }\n                    }\n                }\n            }\n        },\n        \"responses\": {\n            \"object_store_get_object_v1_response_body\": {\n                \"description\": \"OK\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/GetObjectResponseV1\"\n                        }\n                    }\n                }\n            },\n            \"object_store_set_object_v1_response_body\": {\n                \"description\": \"OK\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SetObjectResponseV1\"\n                        }\n                    }\n                }\n            },\n            \"object_store_has_object_v1_response_body\": {\n                \"description\": \"OK\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/HasObjectResponseV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_get_entry_200\": {\n                \"description\": \"OK\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/GetKeychainEntryResponseV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_get_entry_400\": {\n                \"description\": \"Bad request. Key must be a string and longer than 0, shorter than 1024 characters.\"\n            },\n            \"keychain_get_entry_401\": {\n                \"description\": \"Authorization information is missing or invalid.\"\n            },\n            \"keychain_get_entry_404\": {\n                \"description\": \"A keychain item with the specified key was not found.\"\n            },\n            \"keychain_get_entry_500\": {\n                \"description\": \"Unexpected error.\"\n            },\n            \"keychain_set_entry_200\": {\n                \"description\": \"OK\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SetKeychainEntryResponseV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_set_entry_400\": {\n                \"description\": \"Bad request. Key must be a string and longer than 0, shorter than 1024 characters.\"\n            },\n            \"keychain_set_entry_401\": {\n                \"description\": \"Authorization information is missing or invalid.\"\n            },\n            \"keychain_set_entry_500\": {\n                \"description\": \"Unexpected error.\"\n            },\n            \"keychain_has_entry_200\": {\n                \"description\": \"OK\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/HasKeychainEntryResponseV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_has_entry_400\": {\n                \"description\": \"Bad request. Key must be a string and longer than 0, shorter than 1024 characters.\"\n            },\n            \"keychain_has_entry_401\": {\n                \"description\": \"Authorization information is missing or invalid.\"\n            },\n            \"keychain_has_entry_500\": {\n                \"description\": \"Unexpected error.\"\n            },\n            \"keychain_delete_entry_200\": {\n                \"description\": \"OK\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/DeleteKeychainEntryResponseV1\"\n                        }\n                    }\n                }\n            },\n            \"keychain_delete_entry_400\": {\n                \"description\": \"Bad request. Key must be a string and longer than 0, shorter than 1024 characters.\"\n            },\n            \"keychain_delete_entry_401\": {\n                \"description\": \"Authorization information is missing or invalid.\"\n            },\n            \"keychain_delete_entry_500\": {\n                \"description\": \"Unexpected error.\"\n            }\n        }\n    },\n    \"paths\": {}\n}",
			"canonicalURL": "/github.com/hyperledger/cactus@a69a9578c4e8f1334758690f77c35ee75ccc0884/-/blob/packages/cactus-core-api/src/main/json/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger/cactus/blob/a69a9578c4e8f1334758690f77c35ee75ccc0884/packages/cactus-core-api/src/main/json/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}