{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/disit/snap4city"
		},
		"file": {
			"name": "dws_api.yaml",
			"size": 0,
			"path": "PersonalDataManager/src/main/resources/static/grp/swagger/dws_api.yaml",
			"byteSize": 3679,
			"content": "openapi: 3.0.1\ninfo:\n  title: DWS API\n  description: This API supports the addition of sensors to groups of objects, and the validation of added sensors over the time, through the provisioning of listing of sensors from the Dashboard Wizard, each with its owner associated. Full-text searches and searches by id are allowed. Privacy is ensured.\n  version: '1.0'\nservers:\n  - url: http://192.168.0.47/dashboardSmartCity/api/\n    description: Internal testing\n  - url: https://www.snap4city.org/dashboardSmartCity/api/\n    description: Production usage\npaths:\n  /sensors.php:\n    get:\n      tags:\n        - Sensors\n      summary: It provides back listings of sensors enforcing ownership.\n      parameters:\n        - name: accessToken\n          in: query\n          description: The user's access token.\n          required: true\n          schema:\n            type: string\n        - name: pageNum\n          in: query\n          description: Page number, to be used for paged listings.\n          required: false\n          schema:\n            type: string\n        - name: pageSize\n          in: query\n          description: The maximum size of each page, to be used for paged listings.\n          required: false\n          schema:\n            type: string  \n        - name: search\n          in: query\n          description: For full-text search in sensors. Search is performed in device type, device name, and sensor name, respectively corresponding to sub_nature, unique_name_id, low_level_type fields of the _DashboardWizard_ table.\n          required: false\n          schema:\n            type: string  \n        - name: id\n          in: query\n          description: A comma-separated list of sensors, each identified through its _id_ in the _DashboardWizard_ table. If provided, the API will return at most the specified sensors. The full-text search is also operated if the _search_ parameter is provided. Ownership always is enforced (privacy of data is granted).\n          required: false\n          schema:\n            type: string                 \n      responses:\n        '200':\n          description: A JSON array that contains sensors that are visible to the token's owner.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                      description: The _id_ of the sensor in the _DashboardWizard_ table.\n                      example: 588\n                    deviceType:\n                      type: string\n                      description: The type of the device where the sensor locates.\n                      example: Air_quality_monitoring_station\n                    deviceName:\n                      type: string\n                      description: The name of the device where the sensor locates.\n                      example: 373773207E330100\n                    deviceId:\n                      type: string\n                      description: The unique identifier of the device where the sensor locates, expressed in the form of a URI.\n                      example: http://www.disit.org/km4city/resource/iot/orionFinland/Helsinki/373773207E330100\n                    deviceOwner:\n                      type: string\n                      description: The owner of the device (and therefore of sensors located in it), retrieved through a call to the Ownership API. It is _null_ for public devices.\n                    valueName:\n                      type: string\n                      description: The name of the sensor.\n                      example: airQualityPM10",
			"canonicalURL": "/github.com/disit/snap4city@523488172f08a8e700ea3a777117724aac25eb65/-/blob/PersonalDataManager/src/main/resources/static/grp/swagger/dws_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/disit/snap4city/blob/523488172f08a8e700ea3a777117724aac25eb65/PersonalDataManager/src/main/resources/static/grp/swagger/dws_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}