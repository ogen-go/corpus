{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alphagov/pay-publicauth"
		},
		"file": {
			"name": "publicauth_spec.yaml",
			"size": 0,
			"path": "openapi/publicauth_spec.yaml",
			"byteSize": 6813,
			"content": "openapi: 3.0.1\ninfo:\n  description: Publicauth API\n  title: Publicauth API\n  version: v1.0.0\npaths:\n  /healthcheck:\n    get:\n      operationId: healthCheck\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n                example:\n                  postgres:\n                    healthy: true\n                    message: Healthy\n                  deadlocks:\n                    healthy: true\n                    message: Healthy\n          description: OK\n        \"503\":\n          description: Service unavailable. If any healthchecks fail\n      summary: \"Healthcheck endpoint for webhooks. Check database, and deadlocks\"\n      tags:\n      - Other\n  /v1/api/auth:\n    get:\n      operationId: authenticate\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n          description: OK\n        \"401\":\n          description: Unauthorized\n      security:\n      - BearerAuth: []\n      summary: Look up the account ID for a token.\n      tags:\n      - Auth\n  /v1/frontend/auth:\n    post:\n      operationId: createTokenForAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTokenRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n                example:\n                  token: api_live_6vra8l8mdtsikncr00etcg4ks3lktu88r8fa7k2re3f211cj8t3m1aeug5\n          description: OK\n        \"422\":\n          description: Invalid or missing required parameters\n      summary: Generate and return a new token for the given gateway account ID.\n      tags:\n      - Auth\n    put:\n      operationId: updateTokenDescription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                token_link: 550e8400-e29b-41d4-a716-446655440000\n                description: Description of the token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n          description: OK\n        \"404\":\n          description: Token not found\n        \"422\":\n          description: Invalid or missing missing parameters\n      summary: Updates the description of an existing dev token.\n      tags:\n      - Auth\n  /v1/frontend/auth/{accountId}:\n    delete:\n      operationId: revokeSingleToken\n      parameters:\n      - example: 1\n        in: path\n        name: accountId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example:\n                token_link: 74813ca7-1829-4cad-bc0e-684a0288a308\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n                example:\n                  revoked: 4 Apr 2022\n          description: OK\n        \"404\":\n          description: Token not found\n      summary: Revokes the supplied token for this account\n      tags:\n      - Auth\n    get:\n      operationId: getIssuedTokensForAccount\n      parameters:\n      - example: 1\n        in: path\n        name: accountId\n        required: true\n        schema:\n          type: string\n      - example: REVOKED\n        in: query\n        name: state\n        schema:\n          type: string\n          enum:\n          - REVOKED\n          - ACTIVE\n      - example: API\n        in: query\n        name: type\n        schema:\n          type: string\n          enum:\n          - API\n          - PRODUCTS\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tokens:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TokenResponse'\n          description: OK\n        \"422\":\n          description: Invalid or missing required parameters\n      summary: Retrieves generated tokens for gateway account.\n      tags:\n      - Auth\ncomponents:\n  schemas:\n    AuthResponse:\n      type: object\n      properties:\n        account_id:\n          type: string\n          example: \"1234\"\n        token_link:\n          type: string\n          example: 550e8400-e29b-41d4-a716-446655440000\n        token_type:\n          type: string\n          enum:\n          - CARD\n          - DIRECT_DEBIT\n          example: CARD\n    CreateTokenRequest:\n      type: object\n      properties:\n        account_id:\n          type: string\n          description: Gateway account to associate the new token to\n          example: \"1\"\n          writeOnly: true\n        created_by:\n          type: string\n          example: test@example.org\n          writeOnly: true\n        description:\n          type: string\n          description: Description of the new token\n          example: Token description\n        token_account_type:\n          type: string\n          default: LIVE\n          enum:\n          - LIVE\n          - TEST\n          example: LIVE\n          writeOnly: true\n        token_type:\n          type: string\n          default: CARD\n          enum:\n          - CARD\n          - DIRECT_DEBIT\n          example: CARD\n          writeOnly: true\n        type:\n          type: string\n          default: API\n          enum:\n          - API\n          - PRODUCTS\n          example: API\n          writeOnly: true\n      required:\n      - account_id\n      - created_by\n      - description\n    JsonNode:\n      type: object\n    TokenResponse:\n      type: object\n      properties:\n        created_by:\n          type: string\n          example: test@example.org\n        description:\n          type: string\n          example: Description of the token\n        issued_date:\n          type: string\n          example: 04 Apr 2022 - 19:02\n        last_used:\n          type: string\n          example: 05 Apr 2022 - 19:02\n        revoked:\n          type: string\n          example: 05 Apr 2022 - 20:02\n        token_link:\n          type: string\n          example: 550e8400-e29b-41d4-a716-446655440000\n        token_type:\n          type: string\n          enum:\n          - CARD\n          - DIRECT_DEBIT\n          example: CARD\n        type:\n          type: string\n          enum:\n          - API\n          - PRODUCTS\n          example: API\n  securitySchemes:\n    BearerAuth:\n      description: \"The Authorisation token needs to be specified in the 'Authorization'\\\n        \\ header as `Authorization: Bearer YOUR_API_KEY_HERE`\"\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/alphagov/pay-publicauth@bc2544c92003500d735c11c648227528a098dfd6/-/blob/openapi/publicauth_spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alphagov/pay-publicauth/blob/bc2544c92003500d735c11c648227528a098dfd6/openapi/publicauth_spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}