{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/allenheltondev/aws-lambda-layer-types"
		},
		"file": {
			"name": "lambda-layer-openapi-spec.yaml",
			"size": 0,
			"path": "lambda-layer-openapi-spec.yaml",
			"byteSize": 6510,
			"content": "openapi: 3.0.0\ninfo:\n  title: Notifications\n  description: Adds, Updates, Reads, and Deletes contacts and sends text messages\n  version: 1.0.0\ntags:\n- name: Contacts\n  description: |\n    Operations to manage maintenance of contacts.\n- name: Messages\n  description: |\n    Operations to manage maintenance of messages.\nx-amazon-apigateway-cors:\n  allowOrigins:\n    - '*'\n  allowMethods:\n    - DELETE\n    - GET\n    - POST\n    - PUT\n  allowHeaders:\n    - authorization\n    - content-type\n  maxAge: 3600\n\npaths:\n  /contacts:\n    post:\n      summary: Add a new contact\n      description: Create a new contact with the phone number and name. Returns contact id.\n      tags:\n        - Contacts\n      responses:\n        201:\n          $ref: '#/components/responses/Created'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContactModel'\n\n  /contacts/{contactId}:\n    parameters:\n      - $ref: '#/components/parameters/contactId'\n    get:\n      summary: Get Contact Details\n      description: Returns the contact name and phone number for a specific id\n      tags:\n        - Contacts\n      responses:\n        200:\n          description: The request succeeded and the contact is included in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactModel'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n    put:\n      summary: Update an existing contact\n      description: Replaces the name and phone number for an existing contact with the data passed in the request body\n      tags:\n        - Contacts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContactModel'\n        required: true\n      responses:\n        204:\n          $ref: '#/components/responses/NoContentUpdate'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n    delete:\n      summary: Delete an existing contact\n      description: Deletes an existing contact and all messages sent to it from the system. This call is idempotent\n      tags:\n        - Contacts\n      responses:\n        204:\n          $ref: '#/components/responses/NoContentDelete'\n\n  /contacts/{contactId}/messages:\n    parameters:\n      - $ref: '#/components/parameters/contactId'\n    post:\n      summary: Send a message to a contact\n      description: Sends a text message to a contact. If Twilio is not configured, it just logs the message to the database.\n      tags:\n        - Messages\n      responses:\n        201:\n          $ref: '#/components/responses/Created'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MessageModel'\n\n    get:\n      summary: Get all messages sent to a contact\n      description: Returns an array of all messages sent to a contact\n      tags:\n        - Messages\n      responses:\n        200:\n          description: The request succeeded and the messages are included in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllMessagesModel'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\ncomponents:\n  parameters:\n    contactId:\n      name: contactId\n      in: path\n      description: Identifier for a contact\n      required: true\n      example: 09sl3415098gplmn\n      schema:\n        type: string\n\n  schemas:\n    ContactModel:\n      type: object\n      required:\n        - name\n        - phoneNumber\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        phoneNumber:\n          type: string\n          pattern: ^(1?(-?\\d{3})-?)?(\\d{3})(-?\\d{4})$\n          example: 1-623-555-8704\n        comment:\n          type: string\n\n    MessageModel:\n      type: object\n      required:\n        - message\n      properties:\n        id:\n          type: string\n        message:\n          type: string\n          example: Hello, this is my example text message\n        contactDate:\n          type: string\n        contactId:\n          type: string\n\n    AllMessagesModel:\n      type: array\n      items:\n        $ref: '#/components/schemas/MessageModel'\n\n\n  responses:\n    Created: #201\n      description: The request succeeded and created a new contact or message\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - id\n            properties:\n              id:\n                type: string\n    NoContentUpdate: #204\n      description: The request succeeded and updated an existing contact\n    NoContentDelete: #204\n      description: The request finished processing and the contact was removed or did not exist\n    BadRequest: #400\n      description: The request was in an invalid format\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: The request was an an invalid format\n            required:\n              - message\n    NotFound: #404\n      description: The requested contact was not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: Could not find a contact with the specified id.\n            required:\n              - message\n\n    InternalServerError: #500\n      description: The server encountered an unexpected condition which prevented it from fulfilling the request.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: An error occurred saving the item.\n            required:\n              - message",
			"canonicalURL": "/github.com/allenheltondev/aws-lambda-layer-types@d7fafeacf914c8fbd009c4d08041af3a4a8ee621/-/blob/lambda-layer-openapi-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/allenheltondev/aws-lambda-layer-types/blob/d7fafeacf914c8fbd009c4d08041af3a4a8ee621/lambda-layer-openapi-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}