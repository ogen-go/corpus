{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/collect/v1beta1/openapi.yaml",
			"byteSize": 31197,
			"content": "components:\n  parameters:\n    authorizationHeaderParam:\n      description: The access token provided by the user (obtained from a known identity provider).\n      in: header\n      name: authorization\n      required: true\n      schema:\n        pattern: ^Bearer .+\n        type: string\n    connectorID:\n      description: |\n        Specifies the connector ID used to filter jobs. A tailing wildcard is supported for the connector ID tag. If no wildcard is used then an exact match is used.\n        Examples:\n        * `my-connector:v1.0.0` selects `my-connector` connector with an exact match with tag \"v1.0.0\"\n        * `my-connector` selects `my-connector` connector with an exact match. Note as no tag is specified it actually refers to \"latest\".\n        * `my-connector:v1.*` selects all `my-connector` connectors with tags starting with \"v1.\", e.g. \"v1.0\", \"v1.1.1\", \"v1.2-alpha\", etc.\n        * `my-connector:*` selects all `my-connector` connectors with any tag.\n      in: query\n      name: connectorID\n      schema:\n        pattern: ^(?:[a-zA-Z0-9][a-zA-Z0-9._\\-]+(:\\d+/)?)[a-zA-Z0-9._\\-/]*(:[a-zA-Z0-9_.-]*\\*?)?$\n        type: string\n    executionUid:\n      description: The execution UID.\n      in: path\n      name: executionUid\n      required: true\n      schema:\n        pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'\n        type: string\n    jobIDs:\n      description: The job ID list.\n      explode: false\n      in: query\n      name: jobIDs\n      schema:\n        items:\n          type: string\n        type: array\n      style: form\n    jobId:\n      description: The job ID.\n      in: path\n      name: jobId\n      required: true\n      schema:\n        type: string\n    tenant:\n      description: The tenant.\n      in: path\n      name: tenant\n      required: true\n      schema:\n        pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'\n        type: string\n  responses:\n    \"400\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The request isn't valid.\n    \"401\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The user isn't authenticated.\n    \"403\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The operation isn't authorized.\n    \"404\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The resource wasn't found.\n    \"405\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The method is not allowed on the resource.\n    \"409\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The resource already exists.\n    \"415\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The media type isn't supported.\n    \"422\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The provided fields aren't valid.\n    \"429\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The client sent too many requests.\n    \"500\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: An internal service error occurred.\n    \"501\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The server cannot handle the request.\n    \"503\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The server cannot handle the request.\n    \"504\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: The server times out.\n    deleteJobsResponse:\n      content:\n        application/json:\n          schema:\n            description: number of jobs deleted.\n            properties:\n              count:\n                title: count\n                type: integer\n            required:\n            - count\n            title: deleteJobsResponse\n            type: object\n      description: Number of jobs deleted.\n    executionConflict:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/executionConflictError'\n      description: The execution already exists.\n    getConnectorsResponse:\n      content:\n        application/json:\n          schema:\n            description: List of connectors.\n            properties:\n              data:\n                items:\n                  $ref: '#/components/schemas/connector'\n                title: data\n                type: array\n            title: getConnectorsResponse\n            type: object\n      description: A list of connectors to be returned.\n    listJobsResponse:\n      content:\n        application/json:\n          schema:\n            description: List of job summaries i.e. scheduling informations, owner, updates, connector.\n            properties:\n              data:\n                items:\n                  $ref: '#/components/schemas/baseJob'\n                title: data\n                type: array\n            title: listJobsResponse\n            type: object\n      description: Returns a list of jobs.\n    openApi3Response:\n      content:\n        application/json:\n          schema:\n            type: string\n      description: The openAPI 3.0 spec to be returned.\n    openApiResponse:\n      content:\n        application/json:\n          schema:\n            type: string\n      description: The openAPI spec to be returned.\n    patchJobsResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              data:\n                items:\n                  properties:\n                    error:\n                      $ref: '#/components/schemas/error'\n                    id:\n                      description: The Job ID.\n                      title: id\n                      type: string\n                    updated:\n                      description: Successfully updated or not.\n                      title: updated\n                      type: boolean\n                  required:\n                  - id\n                  - updated\n                  title: patchJobResult\n                  type: object\n                type: array\n              metadata:\n                description: The metadata for the patch jobs operation.\n                properties:\n                  failures:\n                    description: The number of jobs that failed to update.\n                    format: int64\n                    title: failures\n                    type: integer\n                  totalMatchJobs:\n                    description: The number of jobs which match the query criteria.\n                    format: int64\n                    title: totalMatchJobs\n                    type: integer\n                required:\n                - totalMatchJobs\n                - failures\n                title: metadata\n                type: object\n            required:\n            - metadata\n            - data\n            title: patchJobsResponse\n            type: object\n      description: Returns a list of batch job results.\n    singleExecutionResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              data:\n                $ref: '#/components/schemas/execution'\n            required:\n            - data\n            title: singleExecutionResponse\n            type: object\n      description: Returns an execution.\n    singleJobResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              data:\n                $ref: '#/components/schemas/job'\n            required:\n            - data\n            title: singleJobResponse\n            type: object\n      description: Returns a job with all details.\n  schemas:\n    baseJob:\n      properties:\n        connectorID:\n          description: The ID of the connector used in the job.\n          title: connectorID\n          type: string\n        createUserID:\n          nullable: true\n          readOnly: true\n          title: createUserID\n          type: string\n          x-omitempty: false\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          title: id\n          type: string\n        lastModifiedAt:\n          format: date-time\n          readOnly: true\n          type: string\n        lastUpdateUserID:\n          nullable: true\n          readOnly: true\n          title: lastUpdateUserID\n          type: string\n          x-omitempty: false\n        name:\n          maxLength: 80\n          minLength: 3\n          pattern: ^[a-zA-Z][\\w-\\.]*$\n          title: name\n          type: string\n        schedule:\n          description: The cron schedule, in UTC time format.\n          title: schedule\n          type: string\n        scheduled:\n          default: true\n          description: Defines whether a job is scheduled or not\n          title: scheduled\n          type: boolean\n        tenant:\n          readOnly: true\n          title: tenant\n          type: string\n      required:\n      - name\n      - connectorID\n      - schedule\n      title: job\n      type: object\n    baseJobPatch:\n      properties:\n        connectorID:\n          description: The ID of the connector used in the job.\n          nullable: true\n          title: connectorID\n          type: string\n        name:\n          description: The job name\n          maxLength: 80\n          minLength: 3\n          nullable: true\n          pattern: ^[a-zA-Z][\\w-\\.]*$\n          title: name\n          type: string\n        parameters:\n          description: The configuration of the connector used in the job.\n          title: parameters\n          type: object\n        scalePolicy:\n          $ref: '#/components/schemas/scalePolicy'\n        schedule:\n          description: The cron schedule, in UTC time format.\n          nullable: true\n          title: schedule\n          type: string\n      title: jobPatch\n      type: object\n    connector:\n      properties:\n        description:\n          description: The description of the connector.\n          readOnly: true\n          title: description\n          type: string\n        id:\n          description: The docker image of the container without tags.\n          readOnly: true\n          title: id\n          type: string\n        name:\n          description: The connector name.\n          readOnly: true\n          title: name\n          type: string\n        panelUrl:\n          description: The JS URL of LSDC and connector panel.\n          readOnly: true\n          title: panelUrl\n          type: string\n        pipelinesFunctionName:\n          description: The unique simplified name of the connector.\n          readOnly: true\n          title: pipelinesFunctionName\n          type: string\n        tag:\n          description: The tag of the connector.\n          readOnly: true\n          title: tag\n          type: string\n      title: Connector\n      type: object\n    cpu:\n      default: \"\"\n      description: The amount of cpu specified to consume.\n      readOnly: true\n      title: cpu\n      type: string\n    error:\n      properties:\n        code:\n          title: code\n          type: string\n        details:\n          description: The optional details of the error.\n          title: details\n          type: object\n        message:\n          title: message\n          type: string\n        moreInfo:\n          description: An optional link to a web page with more information on the error.\n          title: moreInfo\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    eventExtraField:\n      properties:\n        name:\n          description: Field name\n          minLength: 1\n          pattern: ^([a-zA-Z][\\w-]*\\.)*[a-zA-Z][\\w-]*$\n          title: name\n          type: string\n        value:\n          description: Field value\n          minLength: 1\n          title: value\n          type: string\n      required:\n      - name\n      - value\n      title: eventExtraField\n      type: object\n    execution:\n      properties:\n        executionUid:\n          readOnly: true\n          title: executionUid\n          type: string\n        jobId:\n          readOnly: true\n          title: jobId\n          type: string\n        status:\n          description: The given status of the execution\n          enum:\n          - pending\n          - running\n          - completed\n          - aborted\n          - canceled\n          readOnly: true\n          title: status\n          type: string\n        tenant:\n          readOnly: true\n          title: tenant\n          type: string\n      title: execution\n      type: object\n    executionConflictError:\n      allOf:\n      - $ref: '#/components/schemas/error'\n      - properties:\n          data:\n            $ref: '#/components/schemas/execution'\n        required:\n        - data\n        type: object\n    executionPatch:\n      properties:\n        status:\n          description: The given status of the execution\n          enum:\n          - canceled\n          title: status\n          type: string\n      required:\n      - status\n      title: executionPatch\n      type: object\n    job:\n      allOf:\n      - $ref: '#/components/schemas/baseJob'\n      - properties:\n          eventExtraFields:\n            items:\n              $ref: '#/components/schemas/eventExtraField'\n            title: eventExtraFields\n            type: array\n          parameters:\n            description: The configuration of the connector used in the job.\n            title: parameters\n            type: object\n          scalePolicy:\n            $ref: '#/components/schemas/scalePolicy'\n        required:\n        - parameters\n        - scalePolicy\n        type: object\n    jobExecContext:\n      properties:\n        apiVersion:\n          description: The API version used by the connector.\n          enum:\n          - v1\n          - v2alpha1\n          title: apiVersion\n          type: string\n        connectorID:\n          description: The ID of the connector used in the execution.\n          title: connectorID\n          type: string\n        coordinatorImage:\n          description: The ID of the coordinator used in the execution.\n          readOnly: true\n          title: coordinatorImage\n          type: string\n        eventExtraFields:\n          items:\n            $ref: '#/components/schemas/eventExtraField'\n          title: eventExtraFields\n          type: array\n        jobID:\n          readOnly: true\n          title: jobID\n          type: string\n        parameters:\n          description: The configuration of the connector used in the execution.\n          readOnly: true\n          title: parameters\n          type: object\n        resourceRequirements:\n          $ref: '#/components/schemas/resourceRequirements'\n        scalePolicy:\n          $ref: '#/components/schemas/scalePolicy'\n        scheduled:\n          title: scheduled\n          type: boolean\n        tenantID:\n          readOnly: true\n          title: tenantID\n          type: string\n      title: jobExecContext\n      type: object\n    jobPatch:\n      allOf:\n      - $ref: '#/components/schemas/baseJobPatch'\n      - properties:\n          eventExtraFields:\n            items:\n              $ref: '#/components/schemas/eventExtraField'\n            title: eventExtraFields\n            type: array\n          scheduled:\n            description: Defines wheather a job is scheduled or not\n            nullable: true\n            title: scheduled\n            type: boolean\n        type: object\n    jobsPatch:\n      properties:\n        connectorID:\n          description: The ID of the connector used in the job.\n          nullable: true\n          title: connectorID\n          type: string\n        eventExtraFields:\n          items:\n            $ref: '#/components/schemas/eventExtraField'\n          title: eventExtraFields\n          type: array\n        scalePolicy:\n          $ref: '#/components/schemas/scalePolicy'\n      title: jobsPatch\n      type: object\n    limits:\n      description: The upper threshold of resources a pod can consume.\n      properties:\n        cpu:\n          $ref: '#/components/schemas/cpu'\n        memory:\n          $ref: '#/components/schemas/memory'\n      readOnly: true\n      title: limits\n      type: object\n    memory:\n      default: \"\"\n      description: The amount of memory specified to consume.\n      readOnly: true\n      title: memory\n      type: string\n    requests:\n      description: The lower threshold of resources a pod will consume.\n      properties:\n        cpu:\n          $ref: '#/components/schemas/cpu'\n        memory:\n          $ref: '#/components/schemas/memory'\n      readOnly: true\n      title: requests\n      type: object\n    requirement:\n      description: The amount of k8s resources a used to create a pod.\n      properties:\n        limits:\n          $ref: '#/components/schemas/limits'\n        requests:\n          $ref: '#/components/schemas/requests'\n      readOnly: true\n      title: requirement\n      type: object\n    resourceRequirements:\n      description: A struct that contains resource requirement specifications for different components of an execution.\n      properties:\n        connector:\n          $ref: '#/components/schemas/requirement'\n        coordinator:\n          $ref: '#/components/schemas/requirement'\n      readOnly: true\n      title: resourceRequirements\n      type: object\n    retryPolicy:\n      properties:\n        retry_max_times:\n          default: 0\n          description: The maximum number of times a connector will retry a job.\n          format: int32\n          maximum: 10\n          minimum: 0\n          title: retryMaxTimes\n          type: integer\n      title: retryPolicy\n      type: object\n    scalePolicy:\n      properties:\n        static:\n          $ref: '#/components/schemas/staticScale'\n      required:\n      - static\n      title: scalePolicy\n      type: object\n    staticScale:\n      properties:\n        workers:\n          description: The number of collect workers.\n          format: int32\n          title: workers\n          type: integer\n      required:\n      - workers\n      title: staticScale\n      type: object\ninfo:\n  description: With the Collect service in Splunk Cloud Services, you can manage how data collection jobs ingest event and metric data.\n  title: Collect Service\n  version: v1beta1.8\nopenapi: 3.0.0\npaths:\n  /{tenant}/collect/v1beta1/jobs:\n    delete:\n      operationId: deleteJobs\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/deleteJobsResponse'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Removes all jobs on a tenant.\n      x-authz-scope: collect.jobs.delete\n    get:\n      operationId: listJobs\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/connectorID'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/listJobsResponse'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Returns a list of all jobs that belong to a tenant.\n      x-authz-scope: collect.jobs.read\n    patch:\n      description: This is a non-atomic operation and the results are returned as a list with each job patch result as its element. This API returns `200 OK` regardless of how many jobs were successfully patched. You must read the response body to find out if all jobs are patched. When the API is called, the `jobIDs` or `connectorID` must be specified. Do not specify more than one of them at the same time. This API returns `403` if the number of collect workers is over a certain limit.\n      operationId: patchJobs\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/jobIDs'\n      - $ref: '#/components/parameters/connectorID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jobsPatch'\n          application/merge-patch+json:\n            schema:\n              $ref: '#/components/schemas/jobsPatch'\n        description: The API request schema for patching jobs.\n        required: true\n      responses:\n        \"200\":\n          $ref: '#/components/responses/patchJobsResponse'\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: 'The request was invalid because: * `jobIDs` nor `connectorID` were specified * `jobIDs` and `connectorID` were specified at the same time * any ID in `jobIDs` was an invalid UUID * `connectorID` was not a valid connector ID * the JSON object in request body is invalid'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"415\":\n          $ref: '#/components/responses/415'\n        \"422\":\n          $ref: '#/components/responses/422'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"501\":\n          $ref: '#/components/responses/501'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Finds all jobs that match the query and modifies the with the changes specified in the request.\n      x-authz-scope: collect.jobs.update\n    post:\n      description: This API returns `403` if the number of collect workers is over a certain limit.\n      operationId: createJob\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/job'\n        description: The API request schema for the job.\n        required: true\n      responses:\n        \"201\":\n          $ref: '#/components/responses/singleJobResponse'\n        \"400\":\n          $ref: '#/components/responses/400'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"415\":\n          $ref: '#/components/responses/415'\n        \"422\":\n          $ref: '#/components/responses/422'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Creates a job.\n      x-authz-scope: collect.jobs.create\n  /{tenant}/collect/v1beta1/jobs/{jobId}:\n    delete:\n      operationId: deleteJob\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/jobId'\n      responses:\n        \"204\":\n          description: The job was removed successfully.\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"415\":\n          $ref: '#/components/responses/415'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Removes a job based on the job ID.\n      x-authz-scope: collect.jobs.delete\n    get:\n      operationId: getJob\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/jobId'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/singleJobResponse'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Returns a job based on the job ID.\n      x-authz-scope: collect.jobs.read\n    patch:\n      description: This API returns `403` if the number of collect workers is over a certain limit.\n      operationId: patchJob\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/jobId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jobPatch'\n          application/merge-patch+json:\n            schema:\n              $ref: '#/components/schemas/jobPatch'\n        description: The API request schema for patching a job.\n        required: true\n      responses:\n        \"200\":\n          $ref: '#/components/responses/singleJobResponse'\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: 'The request was invalid because: * the JSON object in request body is invalid'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"415\":\n          $ref: '#/components/responses/415'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"501\":\n          $ref: '#/components/responses/501'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Modifies a job based on the job ID.\n      x-authz-scope: collect.jobs.update\n  /{tenant}/collect/v1beta1/jobs/{jobId}/executions:\n    post:\n      operationId: createExecution\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/jobId'\n      responses:\n        \"201\":\n          $ref: '#/components/responses/singleExecutionResponse'\n        \"400\":\n          $ref: '#/components/responses/400'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"409\":\n          $ref: '#/components/responses/executionConflict'\n        \"415\":\n          $ref: '#/components/responses/415'\n        \"422\":\n          $ref: '#/components/responses/422'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"501\":\n          $ref: '#/components/responses/501'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Creates an execution for a scheduled job based on the job ID.\n      x-authz-scope: collect.jobs.executions.create\n      x-internal: false\n  /{tenant}/collect/v1beta1/jobs/{jobId}/executions/{executionUid}:\n    get:\n      operationId: getExecution\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/jobId'\n      - $ref: '#/components/parameters/executionUid'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/singleExecutionResponse'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"501\":\n          $ref: '#/components/responses/501'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Returns the execution details based on the execution ID and job ID.\n      x-authz-scope: collect.jobs.executions.read\n      x-internal: false\n    patch:\n      operationId: patchExecution\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeaderParam'\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/jobId'\n      - $ref: '#/components/parameters/executionUid'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/executionPatch'\n          application/merge-patch+json:\n            schema:\n              $ref: '#/components/schemas/executionPatch'\n        description: The API request schema for patching an execution.\n        required: true\n      responses:\n        \"202\":\n          description: The execution was modified.\n        \"400\":\n          $ref: '#/components/responses/400'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"403\":\n          $ref: '#/components/responses/403'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"415\":\n          $ref: '#/components/responses/415'\n        \"422\":\n          $ref: '#/components/responses/422'\n        \"429\":\n          $ref: '#/components/responses/429'\n        \"501\":\n          $ref: '#/components/responses/501'\n        \"503\":\n          $ref: '#/components/responses/503'\n        \"504\":\n          $ref: '#/components/responses/504'\n        default:\n          $ref: '#/components/responses/500'\n      summary: Modifies an execution based on the job ID.\n      x-authz-scope: collect.jobs.executions.update\n      x-internal: false\n\n# Retrieved from scp-openapi commit 3e10ab186559df6d0a5211cf734514cd53d79779 path: collect/v1beta1/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/collect/v1beta1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/collect/v1beta1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}