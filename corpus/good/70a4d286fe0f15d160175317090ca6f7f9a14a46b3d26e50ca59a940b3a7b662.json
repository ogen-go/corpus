{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ethereum-mousse/mousse"
		},
		"file": {
			"name": "eth2_emulator.yaml",
			"size": 0,
			"path": "http_api/reference/eth2_emulator.yaml",
			"byteSize": 15660,
			"content": "openapi: 3.0.0\ninfo:\n  title: eth2_emulator\n  version: '0.1.0'\n  description: |-\n    API specification for the Eth2 Emulator of Mousse\n    Designed for rollups\n\n    Ref: [Phase 0 Beacon Node API](https://ethereum.github.io/eth2.0-APIs/)\n  contact:\n    name: Naoya Okanami\n    email: minaminaoy@gmail.com\n    url: 'https://twitter.com/vinami'\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\nservers:\n  - url: 'http://localhost:3030'\n    description: ''\npaths:\n  '/shards/{shard}/bid':\n    parameters:\n      - schema:\n          type: integer\n        name: shard\n        in: path\n        required: true\n        description: Shard number\n    post:\n      summary: Publish Bid\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-shards-bid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Bid'\n            examples: {}\n        description: ''\n      description: |\n        Publish a bid. \n        Assume the receiving node broadcast to the corresponding shard.\n      tags:\n        - Shards\n  '/shards/{shard}/bid_with_data':\n    parameters:\n      - schema:\n          type: integer\n        name: shard\n        in: path\n        required: true\n        description: Shard number\n    post:\n      summary: Publish Bid With Data\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-shards-bid_with_data\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BidWithData'\n            examples: {}\n        description: ''\n      description: |\n        Publish a bid with data. \n        Assume the receiving node broadcast to the corresponding shard.\n      tags:\n        - Shards\n  /config:\n    parameters: []\n    get:\n      summary: Get Config\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '404':\n          description: Not Found\n      operationId: get-config\n      description: |\n        Config for auto mode.\n      tags:\n        - Config\n    post:\n      summary: Set Config\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '404':\n          description: Not Found\n      operationId: post-config\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Config'\n            examples: {}\n        description: ''\n      description: |\n        Config for auto mode.\n      tags:\n        - Config\n  /beacon/blocks:\n    parameters: []\n    get:\n      summary: Get Beacon Blocks\n      tags:\n        - Beacon\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BeaconBlock'\n        '404':\n          description: Not Found\n      operationId: get-beacon-blocks\n      description: Get beacon blocks of beacon chain in the latest order.\n      parameters:\n        - schema:\n            type: integer\n            default: 100\n          in: query\n          name: count\n        - schema:\n            type: integer\n          in: query\n          name: page\n  /beacon/finalized_blocks:\n    parameters: []\n    get:\n      summary: Get Finalized Blocks\n      tags:\n        - Beacon\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BeaconBlock'\n        '404':\n          description: Not Found\n      operationId: get-beacon-finalized_blocks-block_id\n      description: Get finalized beacon blocks of beacon chain in the latest order.\n      parameters:\n        - schema:\n            type: integer\n            default: 100\n          in: query\n          name: count\n        - schema:\n            type: integer\n          in: query\n          name: page\n  /beacon/finalized_checkpoint:\n    get:\n      summary: Get Finalized Checkpoint\n      tags:\n        - Beacon\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Checkpoint'\n        '404':\n          description: Not Found\n      operationId: get-beacon-finalized_checkpoint\n      description: Get the finalized checkpoint\n  '/simulator/slot/process/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-slot_num\n  '/simulator/slot/process_without_shard_data_inclusion/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot Without Shard Data Inclusion\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-without-shard-data-inclusion-slot_num\n  '/simulator/slot/process_without_shard_blob_proposal/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot Without Shard Blob Proposal\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-without-shard-blob-proposal-slot_num\n  '/simulator/slot/process_without_shard_header_inclusion/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot Without Shard Header Inclusion\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-without-shard-header-inclusion-slot_num\n  '/simulator/slot/process_without_shard_header_confirmation/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot Without Shard Header Confirmation\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-without-shard-header-confirmation-slot_num\n  '/simulator/slot/process_without_beacon_chain_finality/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot Without Beacon Chain Finality\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-without-beacon-chain-finality-slot_num\n  '/simulator/slot/process_without_beacon_block_proposal/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot Without Beacon Block Proposal\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-without-beacon-block-proposal-slot_num\n  '/simulator/slot/process_random/{slot_num}':\n    parameters:\n      - schema:\n          type: string\n        name: slot_num\n        in: path\n        required: true\n    post:\n      summary: Process Slot Random Failure\n      tags:\n        - Simulator\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: post-simulator-slot-process-random-slot_num\n  /utils/data_commitment:\n    parameters: []\n    post:\n      summary: Calc Data Commitment From Base64 Encoded Text\n      operationId: post-utils-data_commitment\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataCommitment'\n        '404':\n          description: Not Found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: string\n      description: Calculate the data commitment from a base64-encoded data.\n      tags:\n        - Utils\n  /utils/request_logs:\n    get:\n      summary: Get Request Logs\n      tags:\n        - Utils\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RequestLog'\n        '404':\n          description: Not Found\n      operationId: get-utils-request_logs\n      description: Get the log of the API requests.\n  /beacon/states:\n    get:\n      summary: Get Beacon States\n      tags:\n        - Beacon\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BeaconState'\n        '404':\n          description: Not Found\n      operationId: get-beacon-states\n      description: Get beacon states of beacon chain in the latest order.\n      parameters:\n        - schema:\n            type: integer\n            default: 100\n          in: query\n          name: count\n        - schema:\n            type: integer\n          in: query\n          name: page\n  /beacon/blocks/head:\n    get:\n      summary: Get Head of Beacon Chain\n      tags:\n        - Beacon\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      operationId: get-beacon-blocks-head\n      description: Get the head of beacon chain.\n  /simulator/init:\n    post:\n      summary: Init Simulator\n      operationId: post-simulator-init\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      tags:\n        - Simulator\n      description: Initialize the simulator.\n  /utils/current_status_for_polling:\n    get:\n      summary: Get Current Status For Polling\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  slot:\n                    type: integer\n                  config:\n                    $ref: '#/components/schemas/Config'\n      operationId: get-utils-current_status_for_polling\n      description: The no logging endpoint for polling used by the dashboard.\ncomponents:\n  schemas:\n    Bid:\n      title: Bid\n      type: object\n      x-examples: {}\n      properties:\n        message:\n          type: object\n          properties:\n            shard:\n              type: integer\n            slot:\n              type: integer\n            commitment:\n              $ref: '#/components/schemas/DataCommitment'\n            fee:\n              type: integer\n        signature:\n          type: string\n    SignedShardHeader:\n      title: SignedShardHeader\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/ShardHeader'\n        signature:\n          type: string\n    ShardHeader:\n      title: ShardHeader\n      type: object\n      properties:\n        slot:\n          type: integer\n        shard:\n          type: integer\n        commitment:\n          $ref: '#/components/schemas/DataCommitment'\n        degree_proof:\n          type: string\n    DataCommitment:\n      title: DataCommitment\n      type: object\n      properties:\n        point:\n          type: integer\n        length:\n          type: integer\n    FinalizedCommitment:\n      title: FinalizedCommitment\n      type: object\n      properties:\n        commitment:\n          $ref: '#/components/schemas/DataCommitment'\n        beacon_bock_header:\n          $ref: '#/components/schemas/BeaconBlockHeader'\n    BeaconBlockHeader:\n      title: BeaconBlockHeader\n      type: object\n      properties:\n        slot:\n          type: integer\n        parent_root:\n          type: string\n        state_root:\n          type: string\n    BeaconBlock:\n      title: BeaconBlock\n      type: object\n      properties:\n        slot:\n          type: integer\n        shard_headers:\n          type: array\n          items:\n            $ref: '#/components/schemas/SignedShardHeader'\n    PendingShardHeader:\n      title: PendingShardHeader\n      type: object\n      description: Omitted the votes field.\n      properties:\n        slot:\n          type: integer\n        shard:\n          type: integer\n        commitment:\n          $ref: '#/components/schemas/DataCommitment'\n        root:\n          type: string\n        confirmed:\n          type: boolean\n    LightClientUpdate:\n      title: LightClientUpdate\n      type: object\n      description: 'https://github.com/ethereum/eth2.0-specs/blob/cc80dd758cf5120b11af3747f5826de5cdcbd87c/specs/lightclient/sync-protocol.md#lightclientstore'\n      properties:\n        header:\n          $ref: '#/components/schemas/BeaconBlockHeader'\n        finality_header:\n          $ref: '#/components/schemas/BeaconBlockHeader'\n        finality_branch:\n          type: array\n          items:\n            type: string\n    BeaconState:\n      title: BeaconState\n      type: object\n      properties:\n        previous_epoch_pending_shard_headers:\n          type: string\n        current_epoch_pending_shard_headers:\n          type: string\n        grandparent_epoch_confirmed_commitments:\n          type: string\n        shard_gasprice:\n          type: integer\n    RequestLog:\n      title: RequestLog\n      type: object\n      x-tags:\n        - Utils\n      properties:\n        log_id:\n          type: integer\n        date:\n          type: string\n        endpoint:\n          type: string\n    Checkpoint:\n      title: Checkpoint\n      type: object\n      x-tags:\n        - Beacon\n      properties:\n        epoch:\n          type: integer\n        root:\n          type: integer\n    Config:\n      title: Config\n      type: object\n      properties:\n        auto:\n          type: boolean\n        slot:\n          type: integer\n        failure_rate:\n          type: number\n    BidWithData:\n      title: BidWithData\n      type: object\n      properties:\n        bid:\n          $ref: '#/components/schemas/Bid'\n        data:\n          type: string\n          description: Base64 String\n  parameters: {}\ntags:\n  - name: Beacon\n    description: Query to a virtual beacon node.\n  - name: Shards\n    description: Query to a virtual shard node.\n  - name: Simulator\n    description: Query to a virtual eth2 simulator.\n  - name: Utils\n    description: Useful function endpoints.\n  - name: Config\n    description: Endpoints for emulator configuration.\n",
			"canonicalURL": "/github.com/ethereum-mousse/mousse@0cfd5b04e802e4a1982dc00b2a12864f8d47ec6c/-/blob/http_api/reference/eth2_emulator.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ethereum-mousse/mousse/blob/0cfd5b04e802e4a1982dc00b2a12864f8d47ec6c/http_api/reference/eth2_emulator.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}