{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/streams/v2beta1/openapi.yaml",
			"byteSize": 83542,
			"content": "components:\n  schemas:\n    ActivatePipelineRequest:\n      description: \"\"\n      properties:\n        activateLatestVersion:\n          description: Set to true to activate the latest version of the pipeline.\n            Set to false to use the previously activated version of the pipeline.\n            Defaults to true.\n          type: boolean\n        allowNonRestoredState:\n          description: Set to true to allow the pipeline to ignore any unused progress\n            states. In some cases, when a data pipeline is changed, the progress state\n            will be stored for functions that no longer exist, so this must be set\n            to activate a pipeline in this state. Defaults to false.\n          type: boolean\n        skipRestoreState:\n          description: Set to true to start reading from the latest input rather than\n            from where the pipeline's previous run left off, which can cause data\n            loss. Defaults to false.\n          type: boolean\n      type: object\n    ConnectionPatchRequest:\n      description: \"\"\n      properties:\n        data:\n          description: The key-value pairs of configurations for this connection.\n            Connectors may have some configurations that are required, which all connections\n            must provide values for. For configuration values of type BYTES, the provided\n            values must be Base64 encoded.\n          example: \"\"\n          properties: {}\n          type: object\n        description:\n          description: The description of the connection.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the connection.\n          example: \"\"\n          type: string\n      type: object\n    ConnectionPutRequest:\n      description: \"\"\n      properties:\n        data:\n          description: The key-value pairs of configurations for this connection.\n            Connectors may have some configurations that are required, which all connections\n            must provide values for. For configuration values of type BYTES, the provided\n            values must be Base64 encoded.\n          example: \"\"\n          properties: {}\n          type: object\n        description:\n          description: The description of the connection.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the connection.\n          example: \"\"\n          type: string\n      required:\n      - data\n      - description\n      - name\n      type: object\n    ConnectionRequest:\n      description: \"\"\n      properties:\n        connectorId:\n          description: The ID of the parent connector.\n          example: \"\"\n          type: string\n        data:\n          description: The key-value pairs of configurations for this connection.\n            Connectors may have some configurations that are required, which all connections\n            must provide values for. For configuration values of type BYTES, the provided\n            values must be Base64 encoded.\n          example: \"\"\n          properties: {}\n          type: object\n        description:\n          description: The description of the connection.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the connection.\n          example: \"\"\n          type: string\n      required:\n      - connectorId\n      - data\n      - description\n      - name\n      type: object\n    ConnectionResponse:\n      description: \"\"\n      properties:\n        activePipelinesUsing:\n          items:\n            $ref: '#/components/schemas/MapOfstringAndobject'\n          type: array\n        activeSourcesUsing:\n          items:\n            $ref: '#/components/schemas/Source'\n          type: array\n        connectorId:\n          type: string\n        connectorName:\n          type: string\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        id:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        versions:\n          items:\n            $ref: '#/components/schemas/ConnectionVersionResponse'\n          type: array\n      type: object\n    ConnectionSaveResponse:\n      description: \"\"\n      properties:\n        connectorId:\n          type: string\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        data:\n          $ref: '#/components/schemas/ObjectNode'\n        description:\n          type: string\n        id:\n          type: string\n        messages:\n          items:\n            type: string\n          type: array\n        name:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    ConnectionVersionResponse:\n      description: \"\"\n      properties:\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        data:\n          $ref: '#/components/schemas/ObjectNode'\n        description:\n          type: string\n        name:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    ConnectorResponse:\n      description: \"\"\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        config:\n          $ref: '#/components/schemas/ObjectNode'\n        connectorType:\n          type: string\n        description:\n          type: string\n        functions:\n          items:\n            $ref: '#/components/schemas/MapOfstringAndobject'\n          type: array\n        hidden:\n          type: boolean\n        id:\n          type: string\n        name:\n          type: string\n        panelUrl:\n          type: string\n        tag:\n          type: string\n      type: object\n    DeactivatePipelineRequest:\n      description: \"\"\n      properties:\n        skipSavepoint:\n          description: Set to true to skip saving the state of a deactivated pipeline.\n            When the pipeline is later activated, it will start with the newest data\n            and skip any data that arrived after this deactivation, which can cause\n            data loss. Defaults to false.\n          type: boolean\n      type: object\n    DslCompilationRequest:\n      description: \"\"\n      properties:\n        dsl:\n          description: The Streams DSL representation of a pipeline.\n          example: \"\"\n          type: string\n      required:\n      - dsl\n      type: object\n    GetInputSchemaRequest:\n      description: \"\"\n      properties:\n        nodeUuid:\n          description: The function ID.\n          example: \"\"\n          type: string\n        targetPortName:\n          description: The name of the input port.\n          example: \"\"\n          type: string\n        uplJson:\n          $ref: '#/components/schemas/UplPipeline'\n      required:\n      - nodeUuid\n      - targetPortName\n      - uplJson\n      type: object\n    GetOutputSchemaRequest:\n      description: \"\"\n      properties:\n        nodeUuid:\n          description: The function ID. If omitted, returns the output schema for\n            all functions.\n          example: \"\"\n          type: string\n        sourcePortName:\n          description: The name of the output port. Deprecated.\n          example: \"\"\n          type: string\n        uplJson:\n          $ref: '#/components/schemas/UplPipeline'\n      required:\n      - uplJson\n      type: object\n    GroupArgumentsNode:\n      description: \"\"\n      properties:\n        groupArg:\n          description: The argument name for your group function.\n          example: \"\"\n          type: string\n        position:\n          description: Group function argument position number.\n          format: int32\n          type: integer\n        type:\n          description: The group function's data type.\n          example: \"\"\n          type: string\n      required:\n      - groupArg\n      - position\n      - type\n      type: object\n    GroupExpandRequest:\n      description: \"\"\n      properties:\n        arguments:\n          description: Function arguments for the given id. Overrides default values.\n          example: \"\"\n          properties: {}\n          type: object\n        id:\n          description: The ID associated with your group function in the pipeline\n            Streams JSON\n          example: \"\"\n          type: string\n      required:\n      - arguments\n      - id\n      type: object\n    GroupFunctionArgsMappingNode:\n      description: \"\"\n      properties:\n        arguments:\n          description: List of mappings from group function argument to function argument.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/GroupFunctionArgsNode'\n          type: array\n        functionId:\n          description: The function id to map to a group function argument.\n          example: \"\"\n          type: string\n      required:\n      - arguments\n      - functionId\n      type: object\n    GroupFunctionArgsNode:\n      description: \"\"\n      properties:\n        functionArg:\n          description: Function argument name.\n          example: \"\"\n          type: string\n        groupArg:\n          description: The argument name for your group function.\n          example: \"\"\n          type: string\n      required:\n      - functionArg\n      - groupArg\n      type: object\n    GroupFunctionArguments:\n      description: \"\"\n      properties:\n        names:\n          items:\n            type: string\n          type: array\n        orderedNames:\n          items:\n            type: string\n          type: array\n        positions:\n          additionalProperties:\n            format: int32\n            type: integer\n          type: object\n      type: object\n    GroupFunctionMappings:\n      description: \"\"\n      properties:\n        mappings:\n          additionalProperties:\n            additionalProperties:\n              type: string\n            type: object\n          type: object\n      type: object\n    GroupPatchRequest:\n      description: \"\"\n      properties:\n        arguments:\n          description: Group function arguments list.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/GroupArgumentsNode'\n          type: array\n        ast:\n          $ref: '#/components/schemas/UplPipeline'\n        attributes:\n          description: Attributes map for function.\n          example: \"\"\n          properties: {}\n          type: object\n        categories:\n          description: Categories for this function.\n          example: \"\"\n          items:\n            format: int64\n            type: integer\n          type: array\n        groupFunctionArguments:\n          $ref: '#/components/schemas/GroupFunctionArguments'\n        groupFunctionMappings:\n          $ref: '#/components/schemas/GroupFunctionMappings'\n        mappings:\n          description: Group function mappings list.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/GroupFunctionArgsMappingNode'\n          type: array\n        name:\n          description: The name for the group function.\n          example: \"\"\n          type: string\n        outputType:\n          description: The data type of the output of your function.\n          example: \"\"\n          type: string\n        scalar:\n          type: boolean\n        variadic:\n          type: boolean\n      type: object\n    GroupPutRequest:\n      description: \"\"\n      properties:\n        arguments:\n          description: The group function arguments list.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/GroupArgumentsNode'\n          type: array\n        ast:\n          $ref: '#/components/schemas/UplPipeline'\n        attributes:\n          description: The attributes map for function.\n          example: \"\"\n          properties: {}\n          type: object\n        categories:\n          description: The categories for this function.\n          example: \"\"\n          items:\n            format: int64\n            type: integer\n          type: array\n        groupFunctionArguments:\n          $ref: '#/components/schemas/GroupFunctionArguments'\n        groupFunctionMappings:\n          $ref: '#/components/schemas/GroupFunctionMappings'\n        mappings:\n          description: The group function mappings list.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/GroupFunctionArgsMappingNode'\n          type: array\n        name:\n          description: The group function name.\n          example: \"\"\n          type: string\n        outputType:\n          description: The data type of the function's output.\n          example: \"\"\n          type: string\n        scalar:\n          type: boolean\n        variadic:\n          type: boolean\n      required:\n      - arguments\n      - ast\n      - attributes\n      - categories\n      - mappings\n      - name\n      - outputType\n      type: object\n    GroupRequest:\n      description: \"\"\n      properties:\n        arguments:\n          description: The group function arguments list.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/GroupArgumentsNode'\n          type: array\n        ast:\n          $ref: '#/components/schemas/UplPipeline'\n        attributes:\n          description: The attributes map for function.\n          example: \"\"\n          properties: {}\n          type: object\n        categories:\n          description: The categories for this function.\n          example: \"\"\n          items:\n            format: int64\n            type: integer\n          type: array\n        groupFunctionArguments:\n          $ref: '#/components/schemas/GroupFunctionArguments'\n        groupFunctionMappings:\n          $ref: '#/components/schemas/GroupFunctionMappings'\n        mappings:\n          description: The group function mappings list.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/GroupFunctionArgsMappingNode'\n          type: array\n        name:\n          description: The group function name.\n          example: \"\"\n          type: string\n        outputType:\n          description: The data type of the function's output.\n          example: \"\"\n          type: string\n        scalar:\n          type: boolean\n        variadic:\n          type: boolean\n      required:\n      - arguments\n      - ast\n      - attributes\n      - categories\n      - mappings\n      - name\n      - outputType\n      type: object\n    GroupResponse:\n      description: \"\"\n      properties:\n        arguments:\n          items:\n            $ref: '#/components/schemas/GroupArgumentsNode'\n          type: array\n        ast:\n          $ref: '#/components/schemas/UplPipeline'\n        attributes:\n          properties: {}\n          type: object\n        categories:\n          items:\n            format: int64\n            type: integer\n          type: array\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        groupId:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        mappings:\n          items:\n            $ref: '#/components/schemas/GroupFunctionArgsMappingNode'\n          type: array\n        name:\n          type: string\n        outputType:\n          type: string\n        scalar:\n          type: boolean\n        tenantId:\n          type: string\n        variadic:\n          type: boolean\n      type: object\n    MapOfstringAndobject:\n      description: \"\"\n      type: object\n    MapOfstringAndstring:\n      additionalProperties:\n        type: string\n      description: \"\"\n      type: object\n    MetricsResponse:\n      description: \"\"\n      properties:\n        nodes:\n          additionalProperties:\n            $ref: '#/components/schemas/NodeMetrics'\n          type: object\n      type: object\n    NodeMetrics:\n      description: \"\"\n      properties:\n        metrics:\n          properties: {}\n          type: object\n      type: object\n    ObjectNode:\n      description: \"\"\n      type: object\n    PaginatedResponseOfConnectionResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ConnectionResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfConnectorResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ConnectorResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfPipelineJobStatus:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/PipelineJobStatus'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfPipelineResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/PipelineResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfTemplateResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/TemplateResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    Pipeline:\n      description: \"\"\n      properties:\n        activatedDate:\n          format: int64\n          type: integer\n        activatedUserId:\n          type: string\n        activatedVersion:\n          format: int64\n          type: integer\n        complexity:\n          format: float\n          type: number\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        currentVersion:\n          format: int64\n          type: integer\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          type: string\n        flinkVersion:\n          type: string\n        id:\n          type: string\n        jobId:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        name:\n          type: string\n        status:\n          enum:\n          - CREATED\n          - ACTIVATED\n          - FAILED\n          - RESTARTING\n          - FINISHED\n          type: string\n        statusMessage:\n          type: string\n        streamingConfigurationId:\n          format: int64\n          type: integer\n        tenantId:\n          type: string\n        type:\n          enum:\n          - USER\n          - SOURCE\n          - ALL\n          type: string\n        uberJarSha256:\n          type: string\n        validationMessages:\n          items:\n            type: string\n          type: array\n        version:\n          format: int64\n          type: integer\n      type: object\n    PipelineDeleteResponse:\n      description: \"\"\n      properties:\n        couldDeactivate:\n          type: boolean\n        running:\n          type: boolean\n      type: object\n    PipelineJobStatus:\n      description: \"\"\n      properties:\n        jobId:\n          type: string\n        jobStatus:\n          type: string\n        pipelineId:\n          type: string\n      type: object\n    PipelineMigrationInfo:\n      description: \"\"\n      properties:\n        canMigrate:\n          type: boolean\n        createApiVersion:\n          format: int32\n          type: integer\n        targetApiVersion:\n          format: int32\n          type: integer\n      type: object\n    PipelinePatchRequest:\n      description: \"\"\n      properties:\n        bypassValidation:\n          description: Set to true to bypass initial pipeline validation upon creation.\n            The pipeline still needs to be validated before activation. Defaults to\n            false.\n          type: boolean\n        createUserId:\n          description: The user that created the pipeline. Deprecated.\n          example: \"\"\n          type: string\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          description: The description of the pipeline. Defaults to null.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the pipeline.\n          example: \"\"\n          type: string\n      type: object\n    PipelineReactivateResponse:\n      description: \"\"\n      properties:\n        currentlyActiveVersion:\n          format: int64\n          type: integer\n        pipelineId:\n          type: string\n        pipelineReactivationStatus:\n          enum:\n          - activated\n          - currentVersionInvalid\n          - failedToDeactivateCurrentVersion\n          - notActivated\n          - rolledBack\n          - rolledBackError\n          type: string\n        statusDescription:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    PipelineRequest:\n      description: \"\"\n      properties:\n        bypassValidation:\n          description: Set to true to bypass initial pipeline validation upon creation.\n            The pipeline still needs to be validated before activation. Defaults to\n            false.\n          type: boolean\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          description: The description of the pipeline. Defaults to null.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the pipeline.\n          example: \"\"\n          type: string\n      required:\n      - data\n      - name\n      type: object\n    PipelineResponse:\n      description: \"\"\n      properties:\n        activatedDate:\n          format: int64\n          type: integer\n        activatedUserId:\n          type: string\n        activatedVersion:\n          format: int64\n          type: integer\n        complexity:\n          format: float\n          type: number\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        currentVersion:\n          format: int64\n          type: integer\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          type: string\n        id:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        name:\n          type: string\n        status:\n          enum:\n          - CREATED\n          - ACTIVATED\n          - FAILED\n          - RESTARTING\n          - FINISHED\n          type: string\n        statusMessage:\n          type: string\n        streamingConfigurationId:\n          format: int64\n          type: integer\n        tenantId:\n          type: string\n        validationMessages:\n          items:\n            type: string\n          type: array\n        version:\n          format: int64\n          type: integer\n      type: object\n    PipelineUpgradeResponse:\n      description: \"\"\n      properties:\n        flinkVersion:\n          type: string\n        pipelineId:\n          type: string\n        pipelineUpgradeError:\n          type: string\n        pipelineUpgradeStatus:\n          enum:\n          - upgraded\n          - not upgraded, restored back on old cluster\n          - not upgraded because it's not active\n          - not upgraded, couldn't restore back on old cluster, send help\n          - already upgraded\n          - not upgraded, pipeline version is not supported\n          - Couldn't be stopped on old cluster\n          type: string\n        tenantId:\n          type: string\n      type: object\n    PipelinesMergeRequest:\n      description: \"\"\n      properties:\n        inputTree:\n          $ref: '#/components/schemas/UplPipeline'\n        mainTree:\n          $ref: '#/components/schemas/UplPipeline'\n        targetNode:\n          description: The function ID of the merge target in the main pipeline.\n          example: \"\"\n          type: string\n        targetPort:\n          description: The input port of the merge target in the main pipeline.\n          example: \"\"\n          type: string\n      required:\n      - inputTree\n      - mainTree\n      - targetNode\n      - targetPort\n      type: object\n    PreviewData:\n      description: \"\"\n      properties:\n        currentNumberOfRecords:\n          format: int32\n          type: integer\n        nodes:\n          additionalProperties:\n            $ref: '#/components/schemas/PreviewNode'\n          type: object\n        previewId:\n          type: string\n        recordsPerPipeline:\n          format: int32\n          type: integer\n        tenantId:\n          type: string\n      type: object\n    PreviewNode:\n      description: \"\"\n      properties:\n        nodeName:\n          type: string\n        records:\n          items:\n            $ref: '#/components/schemas/ObjectNode'\n          type: array\n      type: object\n    PreviewSessionStartRequest:\n      description: \"\"\n      properties:\n        recordsLimit:\n          description: The maximum number of events per function. Defaults to 100.\n          format: int32\n          type: integer\n        recordsPerPipeline:\n          description: The maximum number of events per pipeline. Defaults to 10000.\n          format: int32\n          type: integer\n        sessionLifetimeMs:\n          description: The maximum lifetime of a session, in milliseconds. Defaults\n            to 300,000.\n          format: int64\n          type: integer\n        upl:\n          $ref: '#/components/schemas/UplPipeline'\n      required:\n      - upl\n      type: object\n    PreviewStartResponse:\n      description: \"\"\n      properties:\n        previewId:\n          format: int64\n          type: integer\n      type: object\n    PreviewState:\n      description: \"\"\n      properties:\n        activatedDate:\n          format: int64\n          type: integer\n        createdDate:\n          format: int64\n          type: integer\n        currentNumberOfRecords:\n          format: int32\n          type: integer\n        jobId:\n          type: string\n        previewId:\n          format: int64\n          type: integer\n        recordsPerPipeline:\n          format: int32\n          type: integer\n      type: object\n    ReactivatePipelineRequest:\n      description: \"\"\n      properties:\n        activateLatestVersion:\n          description: Set to true to activate the latest version of the pipeline.\n            Set to false to use the previously activated version of the pipeline.\n            Defaults to true.\n          type: boolean\n        allowNonRestoredState:\n          description: Set to true to allow the pipeline to ignore any unused progress\n            states. In some cases, when a data pipeline is changed, the progress state\n            will be stored for functions that no longer exist, so this must be set\n            to reactivate a pipeline in this state. Defaults to false.\n          type: boolean\n        skipRestoreState:\n          description: Set to true to start reading from the latest input rather than\n            from where the pipeline's previous run left off, which can cause data\n            loss. Defaults to false.\n          type: boolean\n      type: object\n    Response:\n      description: \"\"\n      properties:\n        activated:\n          description: Only set for /activate endpoint\n          example: \"\"\n          type: string\n        deactivated:\n          description: Only set for /deactivate endpoint\n          example: \"\"\n          type: string\n      type: object\n    Source:\n      description: \"\"\n      properties:\n        arguments:\n          properties: {}\n          type: object\n        connectionId:\n          type: string\n        connectorId:\n          type: string\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        dataStreamId:\n          type: string\n        description:\n          type: string\n        enabled:\n          type: boolean\n        id:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        name:\n          type: string\n        parallelism:\n          format: int32\n          type: integer\n        tenantId:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    SplCompileRequest:\n      description: \"\"\n      properties:\n        spl:\n          description: The SPL2 representation of a pipeline or function parameters.\n          example: \"\"\n          type: string\n        syntax:\n          description: The parse parameters as arguments to this SPL2 command\n          enum:\n          - UPL\n          - DSL\n          - SPL\n          - EVAL\n          - WHERE\n          - TIMECHART\n          - FIELDS\n          - MVEXPAND\n          - REX\n          - BIN\n          - RENAME\n          - STATS\n          - STATS_BY\n          - SELECT\n          - EXPRESSION\n          - FUNCTION\n          - LITERAL\n          - UNKNOWN\n          example: \"\"\n          type: string\n        validate:\n          description: A boolean flag to indicate whether the pipeline should be validated.\n          type: boolean\n      required:\n      - spl\n      type: object\n    TemplatePatchRequest:\n      description: \"\"\n      properties:\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          description: Template description\n          example: \"\"\n          type: string\n        name:\n          description: Template name\n          example: \"\"\n          type: string\n      type: object\n    TemplatePutRequest:\n      description: \"\"\n      properties:\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          description: Template description\n          example: \"\"\n          type: string\n        name:\n          description: Template name\n          example: \"\"\n          type: string\n      required:\n      - data\n      - description\n      - name\n      type: object\n    TemplateRequest:\n      description: \"\"\n      properties:\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          description: Template description\n          example: \"\"\n          type: string\n        name:\n          description: Template name\n          example: \"\"\n          type: string\n      required:\n      - data\n      - description\n      - name\n      type: object\n    TemplateResponse:\n      description: \"\"\n      properties:\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        data:\n          $ref: '#/components/schemas/UplPipeline'\n        description:\n          type: string\n        name:\n          type: string\n        ownerTenantId:\n          type: string\n        templateId:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    UplArgument:\n      description: \"\"\n      properties:\n        elementType:\n          properties: {}\n        optional:\n          type: boolean\n        position:\n          format: int32\n          type: integer\n        type:\n          type: string\n      required:\n      - type\n      type: object\n    UplCategory:\n      description: \"\"\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      required:\n      - id\n      - name\n      type: object\n    UplEdge:\n      description: \"\"\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        sourceNode:\n          description: The source function's (node's) id\n          example: \"\"\n          type: string\n        sourcePort:\n          description: The source function's (node's) port\n          example: \"\"\n          type: string\n        targetNode:\n          description: The target function's (node's) id\n          example: \"\"\n          type: string\n        targetPort:\n          description: The target function's (node's) port\n          example: \"\"\n          type: string\n      required:\n      - sourceNode\n      - sourcePort\n      - targetNode\n      - targetPort\n      type: object\n    UplFunction:\n      description: \"\"\n      properties:\n        arguments:\n          additionalProperties:\n            $ref: '#/components/schemas/UplArgument'\n          type: object\n        attributes:\n          properties: {}\n          type: object\n        categories:\n          items:\n            format: int64\n            type: integer\n          type: array\n        id:\n          type: string\n        isVariadic:\n          type: boolean\n        op:\n          type: string\n        output:\n          $ref: '#/components/schemas/UplArgument'\n        resolvedId:\n          type: string\n      type: object\n    UplNode:\n      additionalProperties: true\n      description: \"\"\n      properties:\n        attributes:\n          description: Optional key-value pair for a function (node)\n          example: \"\"\n          properties: {}\n          type: object\n        id:\n          description: The function's (node's) UUID\n          example: \"\"\n          type: string\n        op:\n          description: The function's ID or its API name\n          example: \"\"\n          type: string\n        resolvedId:\n          type: string\n      required:\n      - id\n      - op\n      type: object\n    UplPipeline:\n      description: \"\"\n      properties:\n        edges:\n          description: A list of links or connections between the output of one pipeline\n            function and the input of another pipeline function\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/UplEdge'\n          type: array\n        migrationInfo:\n          $ref: '#/components/schemas/PipelineMigrationInfo'\n        nodes:\n          description: The functions (or nodes) in your entire pipeline, including\n            each function's operations, attributes, and properties\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/UplNode'\n          type: array\n        rootNode:\n          description: The UUIDs of all sink functions in a given pipeline\n          example: \"\"\n          items:\n            type: string\n          type: array\n        rootNodeFromUplPipeline:\n          items:\n            type: string\n          type: array\n      required:\n      - edges\n      - nodes\n      - rootNode\n      type: object\n    UplRegistry:\n      description: \"\"\n      properties:\n        categories:\n          items:\n            $ref: '#/components/schemas/UplCategory'\n          type: array\n        functions:\n          items:\n            $ref: '#/components/schemas/UplFunction'\n          type: array\n        types:\n          items:\n            $ref: '#/components/schemas/UplType'\n          type: array\n      type: object\n    UplType:\n      description: \"\"\n      properties:\n        fieldName:\n          type: string\n        parameters:\n          items:\n            $ref: '#/components/schemas/UplType'\n          type: array\n        type:\n          type: string\n      type: object\n    ValidateRequest:\n      description: \"\"\n      properties:\n        upl:\n          $ref: '#/components/schemas/UplPipeline'\n      required:\n      - upl\n      type: object\n    ValidateResponse:\n      description: \"\"\n      properties:\n        nodeId:\n          type: string\n        spl:\n          type: string\n        success:\n          type: boolean\n        validationMessages:\n          items:\n            type: string\n          type: array\n      type: object\ninfo:\n  description: Use the Streams service to perform create, read, update, and delete\n    (CRUD) operations on your data pipeline. The Streams service also has metrics\n    and preview session endpoints and gives you full control over your data pipeline.\n  title: Data Stream Processing REST API\n  version: v2beta1.4\nopenapi: 3.0.1\npaths:\n  /{tenantId}/streams/v2beta1/connections:\n    get:\n      deprecated: false\n      operationId: listConnections\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - explode: true\n        in: query\n        name: connectorId\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - in: query\n        name: functionId\n        schema:\n          type: string\n      - in: query\n        name: functionOp\n        schema:\n          type: string\n      - in: query\n        name: createUserId\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - in: query\n        name: sortField\n        schema:\n          type: string\n      - description: Specify either ascending ('asc') or descending ('desc') sort\n          order for a given field (sortField), which must be set for sortDir to apply.\n          Defaults to 'asc'.\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      - in: query\n        name: showSecretNames\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfConnectionResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns a list of connections (latest versions only) by tenant ID.\n      tags:\n      - apiv-2-beta-1-connector-controller\n      x-authz-scope: streams.connections.read\n    post:\n      deprecated: false\n      operationId: createConnection\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionSaveResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Create a new DSP connection.\n      tags:\n      - apiv-2-beta-1-connector-controller\n      x-authz-scope: streams.connections.create\n  /{tenantId}/streams/v2beta1/connections/{connectionId}:\n    delete:\n      deprecated: false\n      operationId: deleteConnection\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the connection\n        in: path\n        name: connectionId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Delete all versions of a connection by its id.\n      tags:\n      - apiv-2-beta-1-connector-controller\n      x-authz-scope: streams.connections.delete\n    patch:\n      deprecated: false\n      operationId: updateConnection\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the connection\n        in: path\n        name: connectionId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionPatchRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionSaveResponse'\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Partially modifies an existing DSP connection.\n      tags:\n      - apiv-2-beta-1-connector-controller\n      x-authz-scope: streams.connections.update\n    put:\n      deprecated: false\n      operationId: putConnection\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the connection\n        in: path\n        name: connectionId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionPutRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionSaveResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Modifies an existing DSP connection.\n      tags:\n      - apiv-2-beta-1-connector-controller\n      x-authz-scope: streams.connections.update\n  /{tenantId}/streams/v2beta1/connectors:\n    get:\n      deprecated: false\n      operationId: listConnectors\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfConnectorResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns a list of the available connectors.\n      tags:\n      - apiv-2-beta-1-connector-controller\n      x-authz-scope: streams.connections.read\n  /{tenantId}/streams/v2beta1/groups:\n    post:\n      deprecated: false\n      operationId: createGroup\n      parameters:\n      - description: The tenant name\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Create a new group function by combining the Streams JSON of two or\n        more functions.\n      tags:\n      - apiv-2-beta-1-group-controller\n      x-authz-scope: streams.groups.create\n  /{tenantId}/streams/v2beta1/groups/{groupId}:\n    delete:\n      deprecated: false\n      operationId: deleteGroup\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: The group function's ID from the function registry\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Removes an existing group.\n      tags:\n      - apiv-2-beta-1-group-controller\n      x-authz-scope: streams.groups.delete\n    get:\n      deprecated: false\n      operationId: getGroup\n      parameters:\n      - description: The tenant name\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: The group function's ID from the function registry\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the full Streams JSON of a group.\n      tags:\n      - apiv-2-beta-1-group-controller\n      x-authz-scope: streams.groups.read\n    patch:\n      deprecated: false\n      operationId: updateGroup\n      parameters:\n      - description: The tenant name\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: The group function's ID from the function registry\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupPatchRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResponse'\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Modify a group function by combining the Streams JSON of two or more\n        functions.\n      tags:\n      - apiv-2-beta-1-group-controller\n      x-authz-scope: streams.groups.update\n    put:\n      deprecated: false\n      operationId: putGroup\n      parameters:\n      - description: The tenant name\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: The group function's ID from the function registry\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupPutRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Update a group function combining the Streams JSON of two or more functions.\n      tags:\n      - apiv-2-beta-1-group-controller\n      x-authz-scope: streams.groups.update\n  /{tenantId}/streams/v2beta1/groups/{groupId}/expand:\n    post:\n      deprecated: false\n      operationId: expandGroup\n      parameters:\n      - description: The tenant name\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: The group function's ID from the function registry\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupExpandRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplPipeline'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Creates and returns the expanded version of a group.\n      tags:\n      - apiv-2-beta-1-group-controller\n      x-authz-scope: streams.groups.read\n  /{tenantId}/streams/v2beta1/pipelines:\n    get:\n      deprecated: false\n      operationId: listPipelines\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: offset\n        in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - description: pageSize\n        in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - description: sortField\n        in: query\n        name: sortField\n        schema:\n          type: string\n      - description: sortDir\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      - description: activated\n        in: query\n        name: activated\n        schema:\n          type: boolean\n      - description: createUserId\n        in: query\n        name: createUserId\n        schema:\n          type: string\n      - description: name\n        in: query\n        name: name\n        schema:\n          type: string\n      - description: includeData\n        in: query\n        name: includeData\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfPipelineResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns all pipelines.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.read\n    post:\n      deprecated: false\n      operationId: createPipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelineRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Creates a pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.create\n  /{tenantId}/streams/v2beta1/pipelines/{id}:\n    delete:\n      deprecated: false\n      operationId: deletePipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: id of the pipeline to delete\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineDeleteResponse'\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Removes a pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.delete\n    get:\n      deprecated: false\n      operationId: getPipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: id of the pipeline to get\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: version\n        in: query\n        name: version\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns an individual pipeline by version.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.read\n    patch:\n      deprecated: false\n      operationId: updatePipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: id of the pipeline to update\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelinePatchRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponse'\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Partially modifies an existing pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v2beta1/pipelines/{id}/activate:\n    post:\n      deprecated: false\n      operationId: activatePipeline\n      parameters:\n      - description: id of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: id of the pipeline to activate\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActivatePipelineRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Activates an existing pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.activate\n  /{tenantId}/streams/v2beta1/pipelines/{id}/deactivate:\n    post:\n      deprecated: false\n      operationId: deactivatePipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: id of the pipeline to deactivate\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeactivatePipelineRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Deactivates an existing pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.deactivate\n  /{tenantId}/streams/v2beta1/pipelines/{id}/metrics/latest:\n    get:\n      deprecated: false\n      operationId: getPipelineLatestMetrics\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the pipeline to get metrics for\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the latest metrics for a single pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v2beta1/pipelines/{id}/reactivate:\n    post:\n      deprecated: false\n      operationId: reactivatePipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline UUID to reactivate\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReactivatePipelineRequest'\n        description: Request JSON\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineReactivateResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Reactivate a pipeline\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.activate\n  /{tenantId}/streams/v2beta1/pipelines/compile-dsl:\n    post:\n      deprecated: false\n      operationId: compileDSL\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DslCompilationRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplPipeline'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Compiles the Streams DSL and returns Streams JSON.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v2beta1/pipelines/compile-spl:\n    post:\n      deprecated: false\n      operationId: compileSPL\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SplCompileRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplPipeline'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Compiles SPL2 and returns Streams JSON.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v2beta1/pipelines/expand:\n    post:\n      deprecated: false\n      operationId: expandPipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UplPipeline'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplPipeline'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the entire Streams JSON, including the expanded Streams JSON\n        of any group functions in the pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.groups.read\n  /{tenantId}/streams/v2beta1/pipelines/input-schema:\n    post:\n      deprecated: false\n      operationId: getInputSchema\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetInputSchemaRequest'\n        description: Input Schema Request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplType'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the input schema for a function in a pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v2beta1/pipelines/merge:\n    post:\n      deprecated: false\n      operationId: mergePipelines\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelinesMergeRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplPipeline'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Combines two Streams JSON programs.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v2beta1/pipelines/output-schema:\n    post:\n      deprecated: false\n      operationId: getOutputSchema\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetOutputSchemaRequest'\n        description: Output Schema Request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  $ref: '#/components/schemas/UplType'\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the output schema for a specified function in a pipeline. If\n        no function ID is  specified, the request returns the output schema for all\n        functions in a pipeline.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v2beta1/pipelines/registry:\n    get:\n      deprecated: false\n      operationId: getRegistry\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: local\n        in: query\n        name: local\n        schema:\n          default: true\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplRegistry'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns all functions in JSON format.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v2beta1/pipelines/status:\n    get:\n      deprecated: false\n      operationId: getPipelinesStatus\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: offset\n        in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - description: pageSize\n        in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - description: sortField\n        in: query\n        name: sortField\n        schema:\n          type: string\n      - description: sortDir\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      - description: activated\n        in: query\n        name: activated\n        schema:\n          type: boolean\n      - description: createUserId\n        in: query\n        name: createUserId\n        schema:\n          type: string\n      - description: name\n        in: query\n        name: name\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfPipelineJobStatus'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the status of pipelines from the underlying streaming system.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v2beta1/pipelines/validate:\n    post:\n      deprecated: false\n      operationId: validatePipeline\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateRequest'\n        description: JSON UPL to validate\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Verifies whether the Streams JSON is valid.\n      tags:\n      - apiv-2-beta-1-pipeline-controller\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v2beta1/preview-data/{previewSessionId}:\n    get:\n      deprecated: false\n      operationId: getPreviewData\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the preview session\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreviewData'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the preview data for a session.\n      tags:\n      - apiv-2-beta-1-preview-controller\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v2beta1/preview-session:\n    post:\n      deprecated: false\n      operationId: startPreview\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PreviewSessionStartRequest'\n        description: Parameters to start a new Preview session\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreviewStartResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Creates a preview session for a pipeline.\n      tags:\n      - apiv-2-beta-1-preview-controller\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v2beta1/preview-session/{previewSessionId}:\n    delete:\n      deprecated: false\n      operationId: stopPreview\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the preview session\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                type: string\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Stops a preview session.\n      tags:\n      - apiv-2-beta-1-preview-controller\n      x-authz-scope: streams.pipelines.preview\n    get:\n      deprecated: false\n      operationId: getPreviewSession\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the preview session\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/PreviewState'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns information from a preview session.\n      tags:\n      - apiv-2-beta-1-preview-controller\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v2beta1/preview-session/{previewSessionId}/metrics/latest:\n    get:\n      deprecated: false\n      operationId: getPreviewSessionLatestMetrics\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the preview session\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns the latest metrics for a preview session.\n      tags:\n      - apiv-2-beta-1-preview-controller\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v2beta1/templates:\n    get:\n      deprecated: false\n      operationId: listTemplates\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: offset\n        in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - description: pageSize\n        in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - description: sortField\n        in: query\n        name: sortField\n        schema:\n          type: string\n      - description: sortDir\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfTemplateResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns a list of all templates.\n      tags:\n      - apiv-2-beta-1-template-controller\n      x-authz-scope: streams.templates.read\n    post:\n      deprecated: false\n      operationId: createTemplate\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplateRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Creates a template for a tenant.\n      tags:\n      - apiv-2-beta-1-template-controller\n      x-authz-scope: streams.templates.create\n  /{tenantId}/streams/v2beta1/templates/{templateId}:\n    delete:\n      deprecated: false\n      operationId: deleteTemplate\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the template to delete\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Removes a template with a specific ID.\n      tags:\n      - apiv-2-beta-1-template-controller\n      x-authz-scope: streams.templates.delete\n    get:\n      deprecated: false\n      operationId: getTemplate\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the template\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      - description: version of the template\n        in: query\n        name: version\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Returns an individual template by version.\n      tags:\n      - apiv-2-beta-1-template-controller\n      x-authz-scope: streams.templates.read\n    patch:\n      deprecated: false\n      operationId: updateTemplate\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the template\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplatePatchRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Partially modifies an existing template.\n      tags:\n      - apiv-2-beta-1-template-controller\n      x-authz-scope: streams.templates.update\n    put:\n      deprecated: false\n      operationId: putTemplate\n      parameters:\n      - description: ID of the tenant\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: ID of the template\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplatePutRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Updates an existing template.\n      tags:\n      - apiv-2-beta-1-template-controller\n      x-authz-scope: streams.templates.update\nservers:\n- url: /\ntags:\n- description: Services Endpoint\n  name: apiv-2-beta-1-admin-controller\n- description: V2Beta1 Connectors and Connections Endpoints\n  name: apiv-2-beta-1-connector-controller\n- description: V2Beta1 Group API Endpoints\n  name: apiv-2-beta-1-group-controller\n- description: V2Beta1 Pipeline API Endpoints\n  name: apiv-2-beta-1-pipeline-controller\n- description: V2Beta1 Template API Endpoints\n  name: apiv-2-beta-1-template-controller\n- description: V2Beta1 Preview API Endpoints\n  name: apiv-2-beta-1-preview-controller\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: streams/v2beta1/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/streams/v2beta1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/streams/v2beta1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}