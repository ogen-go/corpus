{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/adyen.com/BinLookupService/40/openapi.yaml",
			"byteSize": 25863,
			"content": "openapi: 3.1.0\nservers:\n  - url: https://pal-test.adyen.com/pal/servlet/BinLookup/v40\ninfo:\n  contact:\n    email: developer-experience@adyen.com\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    x-twitter: Adyen\n  description: The BIN Lookup API provides endpoints for retrieving information, such as cost estimates, and 3D Secure supported version based on a given BIN.\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: Adyen BinLookup API\n  version: \"40\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/BinLookupService-v40.json\n      version: \"3.1\"\n  x-preferred: false\n  x-providerName: adyen.com\n  x-publicVersion: true\n  x-serviceName: BinLookupService\npaths:\n  /get3dsAvailability:\n    post:\n      description: |-\n        Verifies whether 3D Secure is available for the specified BIN or card brand. For 3D Secure 2, this endpoint also returns device fingerprinting keys.\n\n        For more information, refer to [3D Secure 2](https://docs.adyen.com/online-payments/3d-secure/native-3ds2).\n      operationId: post-get3dsAvailability\n      requestBody:\n        content:\n          application/json:\n            examples:\n              get3dsAvailability:\n                $ref: \"#/components/examples/post-get3dsAvailability-get3dsAvailability\"\n            schema:\n              $ref: \"#/components/schemas/ThreeDSAvailabilityRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                get3dsAvailability:\n                  $ref: \"#/components/examples/post-get3dsAvailability-get3dsAvailability-200\"\n              schema:\n                $ref: \"#/components/schemas/ThreeDSAvailabilityResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Checks 3D Secure availability.\n      tags:\n        - General\n      x-addedInVersion: \"1\"\n      x-groupName: General\n      x-sortIndex: 0\n  /getCostEstimate:\n    post:\n      description: |-\n        Use the Adyen Cost Estimation API to pre-calculate interchange and scheme fee costs. Knowing these costs prior actual payment authorisation gives you an opportunity to charge those costs to the cardholder, if necessary.\n\n        To retrieve this information, make the call to the `/getCostEstimate` endpoint. The response to this call contains the amount of the interchange and scheme fees charged by the network for this transaction, and also which surcharging policy is possible (based on current regulations).\n\n        \u003e Since not all information is known in advance (for example, if the cardholder will successfully authenticate via 3D Secure or if you also plan to provide additional Level 2/3 data), the returned amounts are based on a set of assumption criteria you define in the `assumptions` parameter.\n      operationId: post-getCostEstimate\n      requestBody:\n        content:\n          application/json:\n            examples:\n              getCostEstimate:\n                $ref: \"#/components/examples/post-getCostEstimate-getCostEstimate\"\n              getCostEstimateEncryptedCard:\n                $ref: \"#/components/examples/post-getCostEstimate-getCostEstimateEncryptedCard\"\n              getCostEstimateMinimal:\n                $ref: \"#/components/examples/post-getCostEstimate-getCostEstimateMinimal\"\n              getCostEstimateMinimal3DS:\n                $ref: \"#/components/examples/post-getCostEstimate-getCostEstimateMinimal3DS\"\n              getCostEstimateRecurringContract:\n                $ref: \"#/components/examples/post-getCostEstimate-getCostEstimateRecurringContract\"\n            schema:\n              $ref: \"#/components/schemas/CostEstimateRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                getCostEstimate:\n                  $ref: \"#/components/examples/post-getCostEstimate-getCostEstimate-200\"\n                getCostEstimateEncryptedCard:\n                  $ref: \"#/components/examples/post-getCostEstimate-getCostEstimateEncryptedCard-200\"\n                getCostEstimateMinimal:\n                  $ref: \"#/components/examples/post-getCostEstimate-getCostEstimateMinimal-200\"\n                getCostEstimateMinimal3DS:\n                  $ref: \"#/components/examples/post-getCostEstimate-getCostEstimateMinimal3DS-200\"\n              schema:\n                $ref: \"#/components/schemas/CostEstimateResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Gets a cost estimate.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 0\ncomponents:\n  examples:\n    generic-400:\n      summary: Response code 400. Bad Request.\n      value:\n        errorCode: \"702\"\n        errorType: validation\n        message: \"Unexpected input: I\"\n        status: 400\n    post-get3dsAvailability-get3dsAvailability:\n      description: Example request to check 3D Secure availability\n      summary: Get 3D Secure availability\n      value:\n        cardNumber: \"4111111111111111\"\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n    post-get3dsAvailability-get3dsAvailability-200:\n      summary: Example response for request 'get3dsAvailability'\n      value:\n        threeDS1Supported: \"true\"\n        threeDS2CardRangeDetails: []\n        threeDS2supported: \"false\"\n    post-getCostEstimate-getCostEstimate:\n      description: Example request to get the estimated cost of a transaction\n      summary: Estimate the transaction cost\n      value:\n        amount:\n          currency: EUR\n          value: 1234\n        assumptions:\n          assume3DSecureAuthenticated: true\n          assumeLevel3Data: true\n        cardNumber: \"5101180000000007\"\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n        merchantDetails:\n          countryCode: NL\n          enrolledIn3DSecure: true\n          mcc: \"7411\"\n        shopperInteraction: Ecommerce\n    post-getCostEstimate-getCostEstimate-200:\n      summary: Example response for request 'getCostEstimate'\n      value:\n        costEstimateAmount:\n          currency: EUR\n          value: 12\n        resultCode: Success\n        surchargeType: PASSTHROUGH\n    post-getCostEstimate-getCostEstimateEncryptedCard:\n      description: Example request to get the estimated cost of a transaction\n      summary: Estimate the transaction cost using an encrypted card number\n      value:\n        amount:\n          currency: EUR\n          value: 1234\n        assumptions:\n          assume3DSecureAuthenticated: true\n          assumeLevel3Data: true\n        encryptedCardNumber: test_5101180000000007\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n        merchantDetails:\n          countryCode: NL\n          enrolledIn3DSecure: true\n          mcc: \"7411\"\n        shopperInteraction: Ecommerce\n    post-getCostEstimate-getCostEstimateEncryptedCard-200:\n      summary: Example response for request 'getCostEstimateEncryptedCard'\n      value:\n        costEstimateAmount:\n          currency: EUR\n          value: 12\n        resultCode: Success\n        surchargeType: PASSTHROUGH\n    post-getCostEstimate-getCostEstimateMinimal:\n      description: Example request to get the estimated cost of a transaction with minimum details\n      summary: Estimate the transaction cost (minimal)\n      value:\n        amount:\n          currency: EUR\n          value: 1234\n        cardNumber: \"5101180000000007\"\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n    post-getCostEstimate-getCostEstimateMinimal-200:\n      summary: Example response for request 'getCostEstimateMinimal'\n      value:\n        costEstimateAmount:\n          currency: EUR\n          value: 12\n        resultCode: Success\n        surchargeType: PASSTHROUGH\n    post-getCostEstimate-getCostEstimateMinimal3DS:\n      description: Example request to get the estimated cost of a 3D Secure transaction with minimum details\n      summary: Estimate the transaction cost (minimal with 3DSecure)\n      value:\n        amount:\n          currency: EUR\n          value: 1234\n        assumptions:\n          assume3DSecureAuthenticated: true\n          assumeLevel3Data: true\n        cardNumber: \"5101180000000007\"\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n    post-getCostEstimate-getCostEstimateMinimal3DS-200:\n      summary: Example response for request 'getCostEstimateMinimal3DS'\n      value:\n        costEstimateAmount:\n          currency: EUR\n          value: 12\n        resultCode: Success\n        surchargeType: PASSTHROUGH\n    post-getCostEstimate-getCostEstimateRecurringContract:\n      description: Example request to get the estimated cost of a recurring transaction\n      summary: Estimate the transaction cost (recurring contract)\n      value:\n        amount:\n          currency: EUR\n          value: 1234\n        assumptions:\n          assume3DSecureAuthenticated: true\n          assumeLevel3Data: true\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n        merchantDetails:\n          countryCode: NL\n          enrolledIn3DSecure: true\n          mcc: \"7411\"\n        selectedRecurringDetailReference: \"1234567890123456\"\n        shopperInteraction: Ecommerce\n        shopperReference: \"123456\"\n  schemas:\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    CardBin:\n      properties:\n        bin:\n          description: The first 6 digit of the card number. Enable this field via merchant account settings.\n          type: string\n        commercial:\n          description: If true, it indicates a commercial card. Enable this field via merchant account settings.\n          type: boolean\n        fundingSource:\n          description: |-\n            The card funding source. Valid values are:\n            * CHARGE\n            * CREDIT\n            * DEBIT\n            * DEFERRED_DEBIT\n            * PREPAID\n            * PREPAID_RELOADABLE\n            * PREPAID_NONRELOADABLE\n            \u003e Enable this field via merchant account settings.\n          type: string\n        fundsAvailability:\n          description: |-\n            Indicates availability of funds.\n\n            Visa:\n            * \"I\" (fast funds are supported)\n            * \"N\" (otherwise)\n\n            Mastercard:\n            * \"I\" (product type is Prepaid or Debit, or issuing country is in CEE/HGEM list)\n            * \"N\" (otherwise)\n            \u003e Returned when you verify a card BIN or estimate costs, and only if `payoutEligible` is different from \"N\" or \"U\".\n          type: string\n        issuingBank:\n          description: The issuing bank of the card.\n          type: string\n        issuingCountry:\n          description: The country where the card was issued from.\n          type: string\n        issuingCurrency:\n          description: The currency of the card.\n          type: string\n        paymentMethod:\n          description: The payment method associated with the card (e.g. visa, mc, or amex).\n          type: string\n        payoutEligible:\n          description: |-\n            Indicates whether a payout is eligible or not for this card.\n\n            Visa:\n            * \"Y\"\n            * \"N\"\n\n            Mastercard:\n            * \"Y\" (domestic and cross-border)\n            * \"D\" (only domestic)\n            * \"N\" (no MoneySend)\n            * \"U\" (unknown)\n            \u003e Returned when you verify a card BIN or estimate costs, and only if `payoutEligible` is different from \"N\" or \"U\".\n          type: string\n        summary:\n          description: The last four digits of the card number.\n          type: string\n    CostEstimateAssumptions:\n      properties:\n        assume3DSecureAuthenticated:\n          description: If true, the cardholder is expected to successfully authorise via 3D Secure.\n          type: boolean\n        assumeLevel3Data:\n          description: If true, the transaction is expected to have valid Level 3 data.\n          type: boolean\n        installments:\n          description: If not zero, the number of installments.\n          format: int32\n          type: integer\n    CostEstimateRequest:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The transaction amount used as a base for the cost estimation.\n        assumptions:\n          $ref: \"#/components/schemas/CostEstimateAssumptions\"\n          description: Assumptions made for the expected characteristics of the transaction, for which the charges are being estimated.\n        cardNumber:\n          description: |-\n            The card number (4-19 characters) for PCI compliant use cases. Do not use any separators.\n\n            \u003e Either the `cardNumber` or `encryptedCardNumber` field must be provided in a payment request.\n          maxLength: 19\n          minLength: 4\n          type: string\n        encryptedCardNumber:\n          description: |-\n            Encrypted data that stores card information for non PCI-compliant use cases. The encrypted data must be created with the Checkout Card Component or Secured Fields Component, and must contain the `encryptedCardNumber` field.\n\n            \u003e Either the `cardNumber` or `encryptedCardNumber` field must be provided in a payment request.\n          type: string\n        merchantAccount:\n          description: The merchant account identifier you want to process the (transaction) request with.\n          type: string\n        merchantDetails:\n          $ref: \"#/components/schemas/MerchantDetails\"\n          description: Additional data for merchants who don't use Adyen as the payment authorisation gateway.\n        recurring:\n          $ref: \"#/components/schemas/Recurring\"\n          description: The recurring settings for the payment. Use this property when you want to enable [recurring payments](https://docs.adyen.com/online-payments/tokenization).\n        selectedRecurringDetailReference:\n          description: The `recurringDetailReference` you want to use for this cost estimate. The value `LATEST` can be used to select the most recently stored recurring detail.\n          type: string\n        shopperInteraction:\n          description: |-\n            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.\n            For the web service API, Adyen assumes Ecommerce shopper interaction by default.\n\n            This field has the following possible values:\n            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.\n            * `ContAuth` - Card on file and/or subscription transactions, where the card holder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).\n            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.\n            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.\n          enum:\n            - Ecommerce\n            - ContAuth\n            - Moto\n            - POS\n          type: string\n        shopperReference:\n          description: |-\n            Required for recurring payments. \n            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.\n            \u003e Your reference must not include personally identifiable information (PII), for example name or email address.\n          type: string\n      required:\n        - amount\n        - merchantAccount\n    CostEstimateResponse:\n      properties:\n        cardBin:\n          $ref: \"#/components/schemas/CardBin\"\n          description: Card BIN details.\n        costEstimateAmount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The estimated cost (scheme fee + interchange) in the settlement currency. If the settlement currency cannot be determined, the fee in EUR is returned.\n        resultCode:\n          description: The result of the cost estimation.\n          type: string\n        surchargeType:\n          description: |-\n            Indicates the way the charges can be passed on to the cardholder. The following values are possible:\n            * `ZERO` - the charges are not allowed to pass on\n            * `PASSTHROUGH` - the charges can be passed on\n            * `UNLIMITED` - there is no limit on how much surcharge is passed on\n          type: string\n    DSPublicKeyDetail:\n      properties:\n        brand:\n          description: Card brand.\n          type: string\n        directoryServerId:\n          description: Directory Server (DS) identifier.\n          type: string\n        fromSDKVersion:\n          description: The version of the mobile 3D Secure 2 SDK. For the possible values, refer to the versions in [Adyen 3DS2 Android](https://github.com/Adyen/adyen-3ds2-android/releases) and [Adyen 3DS2 iOS](https://github.com/Adyen/adyen-3ds2-ios/releases).\n          type: string\n        publicKey:\n          contentEncoding: base64\n          description: Public key. The 3D Secure 2 SDK encrypts the device information by using the DS public key.\n          type: string\n    MerchantDetails:\n      properties:\n        countryCode:\n          description: |-\n            2-letter ISO 3166 country code of the card acceptor location.\n            \u003e This parameter is required for the merchants who don't use Adyen as the payment authorisation gateway.\n          maxLength: 2\n          minLength: 2\n          type: string\n        enrolledIn3DSecure:\n          description: If true, indicates that the merchant is enrolled in 3D Secure for the card network.\n          type: boolean\n        mcc:\n          description: |-\n            The merchant category code (MCC) is a four-digit number which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.\n\n            The list of MCCs can be found [here](https://en.wikipedia.org/wiki/Merchant_category_code).\n          type: string\n    Recurring:\n      properties:\n        contract:\n          description: |-\n            The type of recurring contract to be used.\n            Possible values:\n            * `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid).\n            * `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-not-present-cnp).\n            * `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.\n            * `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/online-payments/online-payouts).\n          enum:\n            - ONECLICK\n            - RECURRING\n            - PAYOUT\n          type: string\n        recurringDetailName:\n          description: A descriptive name for this detail.\n          type: string\n        recurringExpiry:\n          description: Date after which no further authorisations shall be performed. Only for 3D Secure 2.\n          format: date-time\n          type: string\n          x-addedInVersion: \"40\"\n        recurringFrequency:\n          description: Minimum number of days between authorisations. Only for 3D Secure 2.\n          type: string\n          x-addedInVersion: \"40\"\n        tokenService:\n          description: The name of the token service.\n          enum:\n            - VISATOKENSERVICE\n            - MCTOKENSERVICE\n          type: string\n          x-addedInVersion: \"25\"\n    ServiceError:\n      properties:\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    ThreeDS2CardRangeDetail:\n      properties:\n        brandCode:\n          description: Card brand.\n          type: string\n        endRange:\n          description: BIN end range.\n          type: string\n        startRange:\n          description: BIN start range.\n          type: string\n        threeDS2Version:\n          description: 3D Secure protocol version.\n          type: string\n        threeDSMethodURL:\n          description: In a 3D Secure 2 browser-based flow, this is the URL where you should send the device fingerprint to.\n          type: string\n    ThreeDSAvailabilityRequest:\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          description: |-\n            This field contains additional data, which may be required for a particular request.\n\n            The `additionalData` object consists of entries, each of which includes the key and value.\n          type: object\n        brands:\n          description: List of brands.\n          items:\n            type: string\n          type: array\n        cardNumber:\n          description: Card number or BIN.\n          type: string\n        merchantAccount:\n          description: The merchant account identifier.\n          type: string\n        recurringDetailReference:\n          description: A recurring detail reference corresponding to a card.\n          type: string\n        shopperReference:\n          description: The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).\n          type: string\n      required:\n        - merchantAccount\n    ThreeDSAvailabilityResponse:\n      properties:\n        dsPublicKeys:\n          description: List of Directory Server (DS) public keys.\n          items:\n            $ref: \"#/components/schemas/DSPublicKeyDetail\"\n          type: array\n        threeDS1Supported:\n          description: Indicator if 3D Secure 1 is supported.\n          type: boolean\n        threeDS2CardRangeDetails:\n          description: List of brand and card range pairs.\n          items:\n            $ref: \"#/components/schemas/ThreeDS2CardRangeDetail\"\n          type: array\n        threeDS2supported:\n          description: Indicator if 3D Secure 2 is supported.\n          type: boolean\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n  - General\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/adyen.com/BinLookupService/40/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/adyen.com/BinLookupService/40/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}