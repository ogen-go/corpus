{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/servicenow/openapi.yaml",
			"byteSize": 49604,
			"content": "openapi: 3.0.0\ninfo:\n  x-ballerina-display:\n    label: ServiceNow\n    iconPath: \"icon.png\"\n  title: ServiceNow REST API\n  description: This is a generated connector for [ServiceNow REST API Quebec version]\n               (https://developer.servicenow.com/dev.do#!/reference/api/quebec/rest) OpenAPI Specification.\n\n               ServiceNow provides extensive access to instances through a set of RESTful APIs.\n  version: 1.0.0\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create a [ServiceNow instance](https://developer.servicenow.com/dev.do) and obtain tokens by following\n    [this guide](https://docs.servicenow.com/bundle/quebec-platform-administration/page/administer/security/task/t_SettingUpOAuth.html).\nsecurity:\n- Bearer: []\npaths:\n  /api/now/table/{tableName}:\n    get:\n      tags:\n        - Table API\n      summary: Retrieves multiple records for the specified table.\n      operationId: getRecordList\n      parameters:\n      - name: tableName\n        in: path\n        description: |-\n          Name of the table from which to retrieve the record.\n           \u003ci\u003eExample\u0026#58; Incident\n        required: true\n        schema:\n          type: string\n      - name: name-value pairs\n        in: query\n        description: Name-value pairs to use to filter the result set. This parameter is mutually exclusive with \n                     sysparm_query.\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields.\n        schema:\n          type: string\n      - name: sysparm_exclude_reference_link\n        in: query\n        description: Flag that indicates whether to exclude Table API links for reference fields\n        schema:\n          type: boolean\n      - name: sysparm_fields\n        in: query\n        description: Comma-separated list of fields to return in the response.\n        schema:\n          type: string\n      - name: sysparm_limit\n        in: query\n        description: Maximum number of records to return. For requests that exceed this number of records, use the \n                     sysparm_offset parameter to paginate record retrieval. \n                     Note - Unusually large sysparm_limit values can impact system performance.\n        schema:\n          type: number\n      - name: sysparm_no_count\n        in: query\n        description: Flag that indicates whether to execute a select count(*) query on the table to return the number \n                     of rows in the associated table.\n        schema:\n          type: boolean\n      - name: sysparm_offset\n        in: query\n        description: Starting record index for which to begin retrieving records. Use this value to paginate record \n                     retrieval. This functionality enables the retrieval of all records, regardless of the number of \n                     records, in small manageable chunks.\n        schema:\n          type: number\n      - name: sysparm_query\n        in: query\n        description: Encoded query used to filter the result set. Syntax - sysparm_query=\u003ccol_name\u003e\u003coperator\u003e\u003cvalue\u003e.\n        schema:\n          type: string\n      - name: sysparm_query_category\n        in: query\n        description: Name of the category to use for queries.\n        schema:\n          type: string   \n      - name: sysparm_query_no_domain\n        in: query\n        description: Flag that indicates whether to restrict the record search to\n          only the domains for which the logged in user is configured.\n        schema:\n          type: boolean\n      - name: sysparm_suppress_pagination_header\n        in: query\n        description: Flag that indicates whether to remove the Link header from the response. The Link header provides \n                various URLs to relative pages in the record set which you can use to paginate the returned record set.\n        schema:\n          type: boolean\n      - name: sysparm_view\n        in: query\n        description: UI view for which to render the data. Determines the fields returned\n          in the response.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object that includes all records of the table. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n    post:\n      tags:\n        - Table API\n      summary: Inserts one record in the specified table. Multiple record insertion is not supported by this method.\n      operationId: createRecord\n      parameters:\n      - name: tableName\n        in: path\n        description: Name of the table in which to save the record.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields.\n        schema:\n          type: string\n      - name: sysparm_exclude_reference_link\n        in: query\n        description: Flag that indicates whether to exclude Table API links for reference fields\n        schema:\n          type: boolean\n      - name: sysparm_fields\n        in: query\n        description: Comma-separated list of fields to return in the response.\n        schema:\n          type: string\n      - name: sysparm_input_display_value\n        in: query\n        description: Flag that indicates whether to set field values using the display value or the actual value.\n        schema:\n          type: boolean\n      - name: sysparm_view\n        in: query\n        description: UI view for which to render the data. Determines the fields returned\n          in the response.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: \"Data format of the request body.\\nSupported types \\n - application/json\\\n          \\ \\n - application/xml.\"\n        schema:\n          type: string\n      - name: X-no-response-body\n        in: header\n        description: By default, responses include body content detailing the new record. Set this header to true in \n                     the request to suppress the response body.\n        schema:\n          type: string\n      requestBody:\n        description: Field name and the associated value for each parameter to define in the specified record in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        201:\n          description: If successful, returns a JSON object that includes created record of the table. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/now/table/{tableName}/{sys_id}:\n    get:\n      tags:\n      - Table API\n      summary: Retrieves the record identified by the specified sys_id from the specified table.\n      operationId: getRecordById\n      parameters:\n      - name: tableName\n        in: path\n        description: |-\n          Name of the table from which to retrieve the record.\n           \u003ci\u003eExample\u0026#58; Incident\n        required: true\n        schema:\n          type: string\n      - name: sys_id\n        in: path\n        description: |-\n          Sys_id of the record to retrieve\n           \u003ci\u003eExample\u0026#58; b7a00a202f1030105b5b2b5df699b618\n        required: true\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields.\n        schema:\n          type: string\n      - name: sysparm_exclude_reference_link\n        in: query\n        description: Flag that indicates whether to exclude Table API links for reference\n          fields\n        schema:\n          type: boolean\n      - name: sysparm_fields\n        in: query\n        description: \"Comma-separated list of fields to return in the response.\\n\\\n          In the use case of __query incidents__ those fields are __number,sys_id,sys_created_on,cmdb_ci,correlation_id,state,assignment_group,short_description,description,close_code,close_notes__\\\n          \\ \\n \u003ci\u003eExample\u0026#58; number,sys_id,sys_created_on,cmdb_ci,correlation_id,state,assignment_group,short_description,description,close_code,close_notes\"\n        schema:\n          type: string\n      - name: sysparm_query_no_domain\n        in: query\n        description: Flag that indicates whether to restrict the record search to\n          only the domains for which the logged in user is configured.\n        schema:\n          type: boolean\n      - name: sysparm_view\n        in: query\n        description: UI view for which to render the data. Determines the fields returned\n          in the response.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object that includes specified record of the table. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: Not found. The requested item was not found.\n          content:\n            application/json:\n              schema:\n                type: object\n    patch:\n      tags:\n      - Table API\n      summary: Updates the specified record with the name-value pairs included in the request body.\n      operationId: patchRecordById\n      parameters:\n      - name: tableName\n        in: path\n        description: Name of the table in which to the specified record is located.\n        required: true\n        schema:\n          type: string\n      - name: sys_id\n        in: path\n        description: Sys_id of the record to update.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields.\n        schema:\n          type: string\n      - name: sysparm_fields\n        in: query\n        description: Comma-separated list of fields to return in the response.\n        schema:\n          type: string\n      - name: sysparm_input_display_value\n        in: query\n        description: Flag that indicates whether to set field values using the display value or the actual value.\n        schema:\n          type: boolean\n      - name: sysparm_query_no_domain\n        in: query\n        description: Flag that indicates whether to restrict the record search to only the domains for which the logged \n                     in user is configured.\n        schema:\n          type: boolean\n      - name: sysparm_view\n        in: query\n        description: UI view for which to render the data. Determines the fields returned\n          in the response.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: \"Data format of the request body.\\nSupported types \\n - application/json\\\n          \\ \\n - application/xml.\"\n        schema:\n          type: string\n      - name: X-no-response-body\n        in: header\n        description: By default, responses include body content detailing the new record. Set this header to true in \n                     the request to suppress the response body.\n        schema:\n          type: string          \n      requestBody:\n        description: Field name and the associated value for each parameter to define in the specified record in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        200:\n          description: If successful, returns a JSON object that includes updated record of the table. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n    put:\n      tags:\n      - Table API\n      summary: Updates the specified record with the request body.\n      operationId: updateRecord\n      parameters:\n      - name: tableName\n        in: path\n        description: Name of the table in which the record is located.\n        required: true\n        schema:\n          type: string\n      - name: sys_id\n        in: path\n        description: Unique identifier of the record to update.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields.\n        schema:\n          type: string\n      - name: sysparm_exclude_reference_link\n        in: query\n        description: Flag that indicates whether to exclude Table API links for reference\n          fields\n        schema:\n          type: boolean\n      - name: sysparm_fields\n        in: query\n        description: Comma-separated list of fields to return in the response.\n        schema:\n          type: string\n      - name: sysparm_input_display_value\n        in: query\n        description: Flag that indicates whether to set field values using the display value or the actual value.\n        schema:\n          type: boolean\n      - name: sysparm_query_no_domain\n        in: query\n        description: Flag that indicates whether to restrict the record search to only the domains for which the logged \n                     in user is configured.\n        schema:\n          type: boolean\n      - name: sysparm_view\n        in: query\n        description: UI view for which to render the data. Determines the fields returned\n          in the response.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: \"Data format of the request body.\\nSupported types \\n - application/json\\\n          \\ \\n - application/xml.\"\n        schema:\n          type: string\n      - name: X-no-response-body\n        in: header\n        description: By default, responses include body content detailing the new record. Set this header to true in \n                     the request to suppress the response body.\n        schema:\n          type: string          \n      requestBody:\n        description: Name-value pairs for the field(s) to update in the associated table in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        200:\n          description: If successful, returns a JSON object that includes updated record of the table. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n    delete:\n      tags:\n      - Table API\n      summary: Deletes the specified record from the specified table.\n      operationId: deleteRecord\n      parameters:\n      - name: tableName\n        in: path\n        description: Name of the table from which to delete the specified record, such as \"incident\" or \"asset\".\n        required: true\n        schema:\n          type: string\n      - name: sys_id\n        in: path\n        description: Sys_id of the record to delete.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_query_no_domain\n        in: query\n        description: Flag that indicates whether to restrict the record search to only the domains for which the logged \n                     in user is configured.\n        schema:\n          type: boolean\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        204:\n          description: |-\n            **HTTP Status Code:** `204`. Meeting updated.\n  /api/now/stats/{tableName}:\n    get:\n      tags:\n        - Aggregate API\n      summary: Retrieves records for the specified table and performs aggregate functions on the returned values.\n      operationId: aggregate\n      parameters:\n      - name: tableName\n        in: path\n        description: Name of the table for which to retrieve records.\n        required: true\n        schema:\n          type: string\n      - name: name-value pairs\n        in: query\n        description: An alternative to using the sysparm_query parameter. You can filter a query using key-value pairs \n                     where the key is the name of a field.\n        schema:\n          type: string\n      - name: sysparm_avg_fields\n        in: query\n        description: List of fields on which to perform avg aggregate operation. You can specify multiple fields by \n                     separating each with a comma.\n        schema:\n          type: string\n      - name: sysparm_min_fields\n        in: query\n        description: List of fields on which to perform min aggregate operation. You can specify multiple fields by \n                     separating each with a comma.\n        schema:\n          type: string\n      - name: sysparm_max_fields\n        in: query\n        description: List of fields on which to perform max aggregate operation. You can specify multiple fields by \n                     separating each with a comma.\n        schema:\n          type: string\n      - name: sysparm_sum_fields\n        in: query\n        description: List of fields on which to perform sum aggregate operation. You can specify multiple fields by \n                     separating each with a comma.\n        schema:\n          type: string\n      - name: sysparm_count\n        in: query\n        description: Flag that determines whether to return the number of records returned by the query.\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation when grouping by reference or choice fields. Based on this value, the \n                     query returns either the display value, the actual value in the database, or both.\n        schema:\n          type: string\n      - name: sysparm_group_by\n        in: query\n        description: Fields by which to group the returned data. You can specify multiple fields by separating each \n                     field with a comma, such as sysparm_group_by=priority,state.\n        schema:\n          type: string\n      - name: sysparm_having\n        in: query\n        description: Additional query that enables you to filter the data based on an aggregate operation. The value \n          for this parameter must follow the syntax aggregate^field^operator^value, such as count^priority^\u003e^3 to obtain\n         the number of records within the query results with a priority greater than 3. You can specify multiple queries\n         by separating each with a comma, such ascount^state^=^1,avg^priority^\u003e^3.\n        schema:\n          type: string\n      - name: sysparm_orderby\n        in: query\n        description: Data retrieval operation when grouping by reference or choice fields. Based on this value, the \n                     query returns either the display value, the actual value in the database, or both.\n        schema:\n          type: string\n      - name: sysparm_query\n        in: query\n        description: An encoded query. For example- \n                    (sysparm_query=active=true)(sysparm_query=caller_id=javascript:gs.getUserID()^active=true)\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object depends on specified table and specified request parameters. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal server error. An unexpected error occurred while processing the request. The response \n                       contains additional information about the error.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/now/import/{stagingTableName}/{sys_id}:\n    get:\n      tags:\n        - Import Set API\n      summary: Retrieves the specified import staging record and resulting transformation result.\n      operationId: getImportSet\n      parameters:\n      - name: stagingTableName\n        in: path\n        description: Name of the table from which to obtain the import data.\n        required: true\n        schema:\n          type: string\n      - name: sys_id\n        in: path\n        description: Sys_id of the record that contains the data.\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: Indicates the specified resource was not available.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal server error. An unexpected error occurred while processing the request. The response \n                       contains additional information about the error.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/now/import/{stagingTableName}:\n    post:\n      tags:\n        - Import Set API\n      summary: Inserts incoming data into a specified staging table and triggers transformation based on predefined\n                   transform maps in the import set table.\n      operationId: createImportSet\n      parameters:\n      - name: stagingTableName\n        in: path\n        description: Name of the table from which to import the data.\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Data format of the request body.\n        schema:\n          type: string\n      requestBody:\n        description: Name-value pairs to insert in the import fields in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal server error. An unexpected error occurred while processing the request. The response \n                       contains additional information about the error.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/now/import/{stagingTableName}/insertMultiple:\n    post:\n      tags:\n        - Import Set API\n      summary: Inserts multiple records into a specified staging table and triggers transformation based on \n                   predefined transform maps or Robust Transform Engine (RTE) configurations in a single request.\n      operationId: createMultipleImportSet\n      parameters:\n      - name: stagingTableName\n        in: path\n        description: Name of the table from which to import the data.\n        required: true\n        schema:\n          type: string\n      - name: multi_import_set_id\n        in: query\n        description: Sys_id of an entry in the Multi Import Sets [sys_multi_import_set] table. If specified, adds the \n                     current import to this multiple import set instead of adding to a new multiple import set.\n        schema:\n          type: string\n      - name: run_after\n        in: query\n        description: Sys_id of an entry in the Import Sets [sys_import_set] table. Enables running the current import \n                     set after the specified import set is complete. You can use this parameter to enforce the \n                     sequential order of imports. This parameter is only valid in asynchronous transformations.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Data format of the request body.\n        schema:\n          type: string\n      requestBody:\n        description: Name-value pairs to insert in the import fields in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal server error. An unexpected error occurred while processing the request. The response \n                       contains additional information about the error.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/sn_customerservice/case/{id}/activities:\n    get:\n      tags:\n      - Case API\n      summary: Retrieves the activity stream for a specified Customer Service Management (CSM) case.\n      operationId: getCaseById\n      parameters:\n      - name: id\n        in: path\n        description: Sys_id or case number of the case to retrieve. Located in the Case [sn_customerservice_case] table.\n                     Results will be unpredictable if a specified case number is shared by two or more cases.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_activity_type\n        in: query\n        description: Filters the type of activities to return from the activity stream. The entries.element parameter \n                     contains the activity type for each activity.\n        schema:\n          type: string\n      - name: sysparm_limit\n        in: query\n        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system \n                     performance. For requests that exceed this number of records, use the sysparm_offset parameter to \n                     paginate record retrieval.\n        schema:\n          type: number\n      - name: sysparm_offset\n        in: query\n        description: Starting record index for which to begin retrieving records. Use this value to paginate record \n                     retrieval. This functionality enables the retrieval of all records, regardless of the number of \n                     records, in small manageable chunks.\n        schema:\n          type: number\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: Not found. The requested item was not found.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/sn_customerservice/case/field_values/{field_name}:\n    get:\n      tags:\n      - Case API\n      summary: Retrieves the list of possible field values for a choice or reference field in the Case \n                   [sn_customerservice_case] table.\n      operationId: getValuesByFieldNameInCase\n      parameters:\n      - name: field_name\n        in: path\n        description: Name of a choice or reference field in the Case [sn_customerservice_case] table.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_dependent_value\n        in: query\n        description: Value to select in the Case [sn_customerservice_case] table choice field that the requested field \n                     is dependent on. Use only when requesting a choice field that is dependent on another field.\n        schema:\n          type: string\n      - name: sysparm_limit\n        in: query\n        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system \n                     performance. For requests that exceed this number of records, use the sysparm_offset parameter to \n                     paginate record retrieval.\n        schema:\n          type: number\n      - name: sysparm_offset\n        in: query\n        description: Starting record index for which to begin retrieving records. Use this value to paginate record \n                     retrieval. This functionality enables the retrieval of all records, regardless of the number of \n                     records, in small manageable chunks.\n        schema:\n          type: number\n      - name: sysparm_reference_field_columns\n        in: query\n        description: Comma-separated list of column names, from the table of the specified reference field, to return \n                     in the response.\n        schema:\n          type: string\n      - name: sysparm_query\n        in: query\n        description: Encoded query used to filter the result set. Queries defined using this parameter are appended to\n                     any encoded queries produced by reference qualifiers.\n        schema:\n          type: string\n      - name: sysparm_ref_qual_input\n        in: query\n        description: Encoded set of field values representing a current object to pass to reference qualifiers that use\n                     JavaScript functions. Use only when requesting a reference field.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Bad Request. A bad request type or malformed request was detected.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/sn_customerservice/case/{id}/field_values/{field_name}:\n    get:\n      tags:\n      - Case API\n      summary: Retrieves the list of possible field values for a choice or reference field for a specified record \n                   in the Case [sn_customerservice_case] table.\n      operationId: getValuesByCaseIdAndFieldName\n      parameters:\n      - name: field_name\n        in: path\n        description: Name of a choice or reference field in the Case [sn_customerservice_case] table.\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: Sys_id of a record. Located in the Case [sn_customerservice_case] table to use when evaluating \n                     reference qualifiers.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_dependent_value\n        in: query\n        description: Value to select in the Case [sn_customerservice_case] table choice field that the requested field \n                     is dependent on. Use only when requesting a choice field that is dependent on another field.\n        schema:\n          type: string\n      - name: sysparm_limit\n        in: query\n        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system \n                     performance. For requests that exceed this number of records, use the sysparm_offset parameter to \n                     paginate record retrieval.\n        schema:\n          type: number\n      - name: sysparm_offset\n        in: query\n        description: Starting record index for which to begin retrieving records. Use this value to paginate record \n                     retrieval. This functionality enables the retrieval of all records, regardless of the number of \n                     records, in small manageable chunks.\n        schema:\n          type: number\n      - name: sysparm_reference_field_columns\n        in: query\n        description: Comma-separated list of column names, from the table of the specified reference field, to return \n                     in the response.\n        schema:\n          type: string\n      - name: sysparm_query\n        in: query\n        description: Encoded query used to filter the result set. Queries defined using this parameter are appended to\n                     any encoded queries produced by reference qualifiers.\n        schema:\n          type: string\n      - name: sysparm_ref_qual_input\n        in: query\n        description: Encoded set of field values representing a current object to pass to reference qualifiers that use\n                     JavaScript functions. Use only when requesting a reference field.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Bad Request. A bad request type or malformed request was detected.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/sn_customerservice/case/{id}:\n    get:\n      tags:\n      - Case API\n      summary: Retrieves the specified Customer Service Management (CSM) case.\n      operationId: getCSMCaseById\n      parameters:\n      - name: id\n        in: path\n        description: Sys_id or case number for the case to retrieve. Located in the Case [sn_customerservice_case] \n                     table. Results will be unpredictable if a specified case number is shared by two or more cases.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields. Based on this value, retrieves the\n                     display value and/or the actual value from the database.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: Indicates that the request is invalid. Could be due to one of the following reasons -\n                          Requested case does not exist. User does not have access to the case.\n          content:\n            application/json:\n              schema:\n                type: object\n    put:\n      tags:\n      - Case API\n      summary: Updates the specified existing Customer Service Management (CSM) case with the passed-in parameters.\n      operationId: updateCSMCase\n      parameters:\n      - name: id\n        in: path\n        description: Sys_id of the case to update. Located in the Case [sn_customerservice_case] table.\n        required: true\n        schema:\n          type: string\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields. Based on this value, retrieves the\n                     display value and/or the actual value from the database.\n        schema:\n          type: string\n      - name: sysparm_fields\n        in: query\n        description: Comma-separated list of fields to return in the response.\n        schema:\n          type: string\n      - name: sysparm_get_case_details\n        in: query\n        description: Flag that indicates whether to return the updated case record.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Data format of the request body.\n        schema:\n          type: string\n      requestBody:\n        description: Field name and the associated value for each parameter to define in the specified record in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        201:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Bad Request. A bad request type or malformed request was detected.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/sn_customerservice/case:\n    get:\n      tags:\n      - Case API\n      summary: Retrieves a specified set of Customer Service Management (CSM) cases.\n      operationId: getCSMCaseList\n      parameters:\n      - name: sysparm_display_value\n        in: query\n        description: Data retrieval operation for reference and choice fields. Based on this value, retrieves the\n                     display value and/or the actual value from the database.\n        schema:\n          type: string\n      - name: sysparm_fields\n        in: query\n        description: Comma-separated list of fields to return in the response.\n        schema:\n          type: string\n      - name: sysparm_limit\n        in: query\n        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system \n                     performance. For requests that exceed this number of records, use the sysparm_offset parameter to \n                     paginate record retrieval.\n        schema:\n          type: number\n      - name: sysparm_offset\n        in: query\n        description: Starting record index for which to begin retrieving records. Use this value to paginate record \n                     retrieval. This functionality enables the retrieval of all records, regardless of the number of \n                     records, in small manageable chunks.\n        schema:\n          type: number\n      - name: sysparm_query\n        in: query\n        description: Encoded query used to filter the result set.\n        schema:\n          type: string\n      - name: sysparm_reference_fields\n        in: query\n        description: Whether or not to retrieve fields from reference tables such as account, contact, consumer, and\n                     sn_app_cs_social_social_profile. By default, these fields are returned if the user has read access\n                     to them, but this adds performance overhead. When retrieving a large number of case records, this\n                     overhead can be eliminated by setting sysparm_reference_fields=false.\n        schema:\n          type: boolean\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n    post:\n      tags:\n      - Case API\n      summary: Creates a new Customer Service Management (CSM) case.\n      operationId: createCSMCase\n      parameters:\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Data format of the request body.\n        schema:\n          type: string\n      requestBody:\n        description: Field name and the associated value for each parameter to define in the specified record in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        201:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/now/contact:\n    get:\n      tags:\n      - Contact API\n      summary: Retrieves a specified set of Customer Service Management (CSM) contacts.\n      operationId: getCSMContactList\n      parameters:\n      - name: sysparm_limit\n        in: query\n        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system \n                     performance. For requests that exceed this number of records, use the sysparm_offset parameter to \n                     paginate record retrieval.\n        schema:\n          type: number\n      - name: sysparm_offset\n        in: query\n        description: Starting record index for which to begin retrieving records. Use this value to paginate record \n                     retrieval. This functionality enables the retrieval of all records, regardless of the number of \n                     records, in small manageable chunks.\n        schema:\n          type: number\n      - name: sysparm_query\n        in: query\n        description: Encoded query used to filter the result set.\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n    post:\n      tags:\n      - Contact API\n      summary: Creates a new Customer Service Management (CSM) contact.\n      operationId: createCSMContact\n      parameters:\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Data format of the request body.\n        schema:\n          type: string\n      requestBody:\n        description: Field name and the associated value for each parameter to define in the specified record in JSON format.\n        content:\n          application/json:\n            schema: {}\n        required: true\n      responses:\n        201:\n          description: If successful, returns a JSON object that includes result. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Bad Request. A bad request type or malformed request was detected.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/now/contact/{id}:\n    get:\n      tags:\n      - Contact API\n      summary: Retrieves the specified Customer Service Management (CSM) contact.\n      operationId: getCSMContactById\n      parameters:\n      - name: id\n        in: path\n        description: Sys_id of the contact to retrieve. Located in the Contact [customer_contact] table.\n        schema:\n          type: string\n        required: true\n      - name: Accept\n        in: header\n        description: Data format of the response body.\n        schema:\n          type: string\n      responses:\n        200:\n          description: If successful, returns a JSON object. Otherwise returns the relevant error.\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized. The user credentials are incorrect or have not been passed.\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: Indicates that the request is invalid. Could be due to one of the following reasons- \n                       Requested case does not exist. User does not have access to the case.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          description: Internal Server Error. A logic error on the server-side code occurred.\n          content:\n            application/json:\n              schema:\n                type: object\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    Bearer:\n      type: http\n      scheme: bearer\n    bearerAuth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://example.com/oauth/authorize\n          tokenUrl: https://example.com/oauth/token\n          scopes:\n            read: Grants read access\n            write: Grants write access\n            admin: Grants read and write access to administrative information\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/servicenow/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/servicenow/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}