{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "aviationdata.systems-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/aviationdata.systems-v1-swagger.yaml",
			"byteSize": 12521,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: aviationdataSYS\n  title: AviationData.Systems Airports API V1\n  version: v1\n  x-apisguru-categories:\n    - transport\n  x-logo:\n    url: https://twitter.com/aviationdataSYS/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: http://api.aviationdata.systems//swagger/docs/v1\n      version: \"2.0\"\n  x-providerName: aviationdata.systems\npaths:\n  \"/v1/airport/autocomplete/{airport_name}\":\n    get:\n      description: \"Required parameters: airport_name, airport_service_type. Optional\n        parameter: country code (ISO 3166-1).\"\n      operationId: AutoCompleteAirportName_AirportNameSearch\n      parameters:\n        - description: \"Required: The airports name\"\n          in: path\n          name: airport_name\n          required: true\n          schema:\n            type: string\n        - description: \"Required: Needs to be: All, Scheduled or NonScheduled\"\n          in: query\n          name: airport_service_type\n          required: true\n          schema:\n            type: string\n            enum:\n              - All\n              - Scheduled\n              - NonScheduled\n        - description: \"Optional: Country code (ISO 3166-1). This can be found via\n            /countries\"\n          in: query\n          name: optional_country_code\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.AutoCompleteAir\\\n                  portNameController.Response\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.AutoCompleteAir\\\n                  portNameController.Response\"\n      summary: Autocomplete airport names. Returns a maximum of 10 airport names.\n      tags:\n        - AutoCompleteAirportName\n  \"/v1/airport/iata/{airport_iata}\":\n    get:\n      description: \"Required parameters: airport_iata\"\n      operationId: AirportIATA_AirportIATASearch\n      parameters:\n        - description: \"Required: The airports IATA code\"\n          in: path\n          name: airport_iata\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.AirportIATACont\\\n                  roller.Response\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.AirportIATACont\\\n                  roller.Response\"\n      summary: Search for airport by IATA code\n      tags:\n        - AirportIATA\n  \"/v1/airport/name/{airport_name}\":\n    get:\n      description: \"Required parameters: airport_name, api_mode\"\n      operationId: AirportDetails_AirportNameSearch\n      parameters:\n        - description: \"Required: The airports name\"\n          in: path\n          name: airport_name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.AirportDetailsC\\\n                  ontroller.Response\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.AirportDetailsC\\\n                  ontroller.Response\"\n      summary: Search for airport by name\n      tags:\n        - AirportDetails\n  \"/v1/airport/nearest/{result_count}/{latitude}/{longitude}\":\n    get:\n      description: \"Required parameters: result_count, latitude, longitude,\n        airport_service_type\"\n      operationId: NearestAirports_NearestAirportList\n      parameters:\n        - description: \"Required: Number of airports to return. Min: 1 Max: 20\"\n          in: path\n          name: result_count\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: \"Required: Latitude\"\n          in: path\n          name: latitude\n          required: true\n          schema:\n            type: number\n            format: double\n        - description: \"Required: Longitude\"\n          in: path\n          name: longitude\n          required: true\n          schema:\n            type: number\n            format: double\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.NearestAirports\\\n                  Controller.Response\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.NearestAirports\\\n                  Controller.Response\"\n      summary: Search for airports by location\n      tags:\n        - NearestAirports\n  \"/v1/country/code/{country_code}\":\n    get:\n      description: \"Required parameters: country code (ISO 3166-1), airport_service_type.\"\n      operationId: CountryAirportList_CountryAirportList\n      parameters:\n        - description: Country code (ISO 3166-1). This can be found via /countries\n          in: path\n          name: country_code\n          required: true\n          schema:\n            type: string\n        - description: \"Required: Needs to be: All, Scheduled or NonScheduled\"\n          in: query\n          name: airport_service_type\n          required: true\n          schema:\n            type: string\n            enum:\n              - All\n              - Scheduled\n              - NonScheduled\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.CountryAirportL\\\n                  istController.AirportListResponse\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.CountryAirportL\\\n                  istController.AirportListResponse\"\n      summary: Country airports. Returns a list of airports for a country code(ISO\n        3166-1 alpha-2 code)\n      tags:\n        - CountryAirportList\n  /v1/country_list:\n    get:\n      operationId: CountryList_CountryAirportList\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.CountryListCont\\\n                  roller.CountryListResponse\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AirportsAPI.Controllers.CountryListCont\\\n                  roller.CountryListResponse\"\n      summary: Country list. Returns a list of countries where airport data is available\n      tags:\n        - CountryList\nservers:\n  - url: https://api.aviationdata.systems\ncomponents:\n  securitySchemes:\n    basic:\n      description: Basic HTTP Authentication\n      type: http\n      scheme: basic\n  schemas:\n    AirportsAPI.Controllers.AirportDetailsController.Response:\n      properties:\n        airport_list:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.Airport\"\n          type: array\n        disclaimer:\n          type: string\n        message:\n          type: string\n        status_code:\n          type: string\n      type: object\n    AirportsAPI.Controllers.AirportIATAController.Response:\n      properties:\n        airport_list:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.Airport\"\n          type: array\n        disclaimer:\n          type: string\n        message:\n          type: string\n        status_code:\n          type: string\n      type: object\n    AirportsAPI.Controllers.AutoCompleteAirportNameController.Response:\n      properties:\n        airport_list:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.AirportListAutocomplete\"\n          type: array\n        disclaimer:\n          type: string\n        message:\n          type: string\n        status_code:\n          type: string\n      type: object\n    AirportsAPI.Controllers.CountryAirportListController.AirportListResponse:\n      properties:\n        airport_list:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.AirportList\"\n          type: array\n        country:\n          $ref: \"#/components/schemas/AirportsAPI.Models.Country\"\n        disclaimer:\n          type: string\n        message:\n          type: string\n        status_code:\n          type: string\n      type: object\n    AirportsAPI.Controllers.CountryListController.CountryListResponse:\n      properties:\n        country:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.Country\"\n          type: array\n        disclaimer:\n          type: string\n        message:\n          type: string\n        status_code:\n          type: string\n      type: object\n    AirportsAPI.Controllers.NearestAirportsController.Response:\n      properties:\n        airport_list:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.Airport\"\n          type: array\n        disclaimer:\n          type: string\n        message:\n          type: string\n        status_code:\n          type: string\n      type: object\n    AirportsAPI.Models.Airport:\n      properties:\n        Country:\n          $ref: \"#/components/schemas/AirportsAPI.Models.Location.Country\"\n        Frequency:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.Frequency\"\n          type: array\n        Region:\n          $ref: \"#/components/schemas/AirportsAPI.Models.Location.Region\"\n        Runway:\n          items:\n            $ref: \"#/components/schemas/AirportsAPI.Models.Runway\"\n          type: array\n        airport_name:\n          type: string\n        airport_type:\n          type: string\n        elevation_ft:\n          type: string\n        gps_code:\n          type: string\n        iata_code:\n          type: string\n        latitude:\n          type: string\n        local_code:\n          type: string\n        location:\n          type: string\n        logo_url:\n          type: string\n        longitude:\n          type: string\n        scheduled_service:\n          type: boolean\n        website:\n          type: string\n        wikipedia:\n          type: string\n      type: object\n    AirportsAPI.Models.AirportList:\n      properties:\n        airport_name:\n          type: string\n        airport_type:\n          type: string\n        iata_code:\n          type: string\n        latitude:\n          type: string\n        location:\n          type: string\n        longitude:\n          type: string\n      type: object\n    AirportsAPI.Models.AirportListAutocomplete:\n      properties:\n        label:\n          type: string\n        value:\n          type: string\n      type: object\n    AirportsAPI.Models.Country:\n      properties:\n        continent:\n          type: string\n        country_code:\n          type: string\n        flag_url:\n          type: string\n        name:\n          type: string\n      type: object\n    AirportsAPI.Models.Frequency:\n      properties:\n        desc:\n          type: string\n        frequency_mhz:\n          type: string\n        frequency_type:\n          type: string\n      type: object\n    AirportsAPI.Models.Location.Country:\n      properties:\n        country_code:\n          type: string\n        flag_url:\n          type: string\n        name:\n          type: string\n      type: object\n    AirportsAPI.Models.Location.Region:\n      properties:\n        local_code:\n          type: string\n        name:\n          type: string\n        region_code:\n          type: string\n      type: object\n    AirportsAPI.Models.Runway:\n      properties:\n        closed:\n          type: boolean\n        hE_latitude:\n          type: string\n        hE_longitude:\n          type: string\n        he_displaced_threshold_ft:\n          type: string\n        he_elevation_ft:\n          type: string\n        he_heading_deg:\n          type: string\n        le_displaced_threshold_ft:\n          type: string\n        le_elevation_ft:\n          type: string\n        le_heading_deg:\n          type: string\n        le_latitude:\n          type: string\n        le_longitude:\n          type: string\n        length_ft:\n          type: string\n        lighted:\n          type: boolean\n        surface_type:\n          type: string\n        width_ft:\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/aviationdata.systems-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/aviationdata.systems-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}