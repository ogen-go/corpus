{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eliben/code-for-blog"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "2021/go-rest-servers/swagger/swag-server/api/swagger.yaml",
			"byteSize": 4038,
			"content": "openapi: 3.0.1\ninfo:\n  title: Sample REST server\n  description: TODO\n  version: 1.0.0\nservers:\n- url: https://example.com\npaths:\n  /task:\n    get:\n      summary: Returns a list of all tasks\n      responses:\n        \"200\":\n          description: A JSON array of task IDs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n                x-content-type: application/json\n    post:\n      summary: Create a task\n      requestBody:\n        description: Task to be added to the store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/body'\n      responses:\n        \"200\":\n          description: ID of created task\n          content:\n            application/json:\n              schema:\n                type: integer\n                x-content-type: application/json\n  /task/{id}:\n    get:\n      summary: Get task with specific id\n      parameters:\n      - name: id\n        in: path\n        description: The user ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          minimum: 1\n          type: integer\n      responses:\n        \"200\":\n          description: Task with given id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n    delete:\n      summary: Delete task with specific id\n      parameters:\n      - name: id\n        in: path\n        description: The user ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          minimum: 1\n          type: integer\n      responses:\n        \"200\":\n          description: Task with given id deleted\n          content: {}\n  /tag/{tagname}:\n    get:\n      summary: Get tasks with given tag name\n      parameters:\n      - name: tagname\n        in: path\n        description: The tag name\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A JSON array of task IDs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n                x-content-type: application/json\n  /due/{year}/{month}/{day}:\n    get:\n      summary: Get tasks with given due date\n      parameters:\n      - name: year\n        in: path\n        description: The year\n        required: true\n        style: simple\n        explode: false\n        schema:\n          minimum: 1\n          type: integer\n      - name: month\n        in: path\n        description: The month\n        required: true\n        style: simple\n        explode: false\n        schema:\n          maximum: 12\n          minimum: 1\n          type: integer\n      - name: day\n        in: path\n        description: The day\n        required: true\n        style: simple\n        explode: false\n        schema:\n          maximum: 31\n          minimum: 1\n          type: integer\n      responses:\n        \"200\":\n          description: A JSON array of task IDs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n                x-content-type: application/json\ncomponents:\n  schemas:\n    Task:\n      type: object\n      properties:\n        id:\n          type: integer\n        text:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n        due:\n          type: string\n          format: date-time\n      example:\n        due: 2000-01-23T04:56:07.000+00:00\n        id: 0\n        text: text\n        tags:\n        - tags\n        - tags\n    body:\n      type: object\n      properties:\n        text:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n        due:\n          type: string\n          format: date-time\n",
			"canonicalURL": "/github.com/eliben/code-for-blog@b8487194a1843dc6f9a4171a179e1827e3507b76/-/blob/2021/go-rest-servers/swagger/swag-server/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eliben/code-for-blog/blob/b8487194a1843dc6f9a4171a179e1827e3507b76/2021/go-rest-servers/swagger/swag-server/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}