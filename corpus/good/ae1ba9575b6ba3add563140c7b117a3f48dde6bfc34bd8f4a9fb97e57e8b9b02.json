{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "fluxdocsd.yml",
			"size": 0,
			"path": "contracts/priv/fluxdocsd.yml",
			"byteSize": 4339,
			"content": "openapi: 3.0.0\ninfo:\n  title: fluxdocsd\n  version: 1.0.0\nservers:\n  - url: /api/v2private\npaths:\n  /fluxdocs:\n    get:\n      summary: get all records\n      operationId: getAllFluxdocs\n      responses:\n        '200':\n          description: all records\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FluxdocsArray'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/fluxdocs/{id}':\n    get:\n      summary: get single record by its ID\n      operationId: getFluxdoc\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: returns the record\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fluxdocs'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/fluxdocs/search/{searchTerm}':\n    get:\n      summary: get all records that contain name\n      operationId: getFluxdocsSearch\n      parameters:\n        - name: searchTerm\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: field\n          in: query\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: returns all matching records\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FluxdocsArray'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  requestBodies:\n    FluxdocsParams:\n      description: Fluxdocs record\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Fluxdocs'\n  schemas:\n    Fluxdocs:\n      required:\n        - path\n        - package\n        - name\n        - kind\n        - headline\n        - fluxType\n      properties:\n        path:\n          type: string\n        package:\n          type: string\n        name:\n          type: string\n        kind:\n          type: string\n        headline:\n          type: string\n        fluxType:\n          type: string\n        description:\n          type: string\n        fluxParameters:\n          type: array\n          items:\n            $ref: '#/components/schemas/FluxdocsParameters'\n    FluxdocsArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/Fluxdocs'\n    FluxdocsParameters:\n      required:\n        - headline\n        - name\n        - required\n      properties:\n        description:\n          type: string\n        headline:\n          type: string\n        name:\n          type: string\n        required:\n          type: boolean\n    Error:\n      properties:\n        code:\n          description: code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - unprocessable entity\n            - empty value\n            - unavailable\n            - forbidden\n            - too many requests\n            - unauthorized\n            - method not allowed\n            - request too large\n            - unsupported media type\n        message:\n          readOnly: true\n          description: Human-readable message.\n          type: string\n        op:\n          readOnly: true\n          description: Describes the logical code operation when the error occurred. Useful for debugging.\n          type: string\n        err:\n          readOnly: true\n          description: Stack of errors that occurred during processing of the request. Useful for debugging.\n          type: string\n      required:\n        - code\n  responses:\n    NoContent:\n      description: No content\n    ServerError:\n      description: Non 2XX error response from server.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/influxdata/openapi@a57b04ad0d88b646a1a04bd90a03477ca945fc3b/-/blob/contracts/priv/fluxdocsd.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/a57b04ad0d88b646a1a04bd90a03477ca945fc3b/contracts/priv/fluxdocsd.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}