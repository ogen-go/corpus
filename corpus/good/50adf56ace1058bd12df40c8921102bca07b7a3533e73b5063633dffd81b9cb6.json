{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/devtron-labs/devtron"
		},
		"file": {
			"name": "notification.yaml",
			"size": 0,
			"path": "specs/notification.yaml",
			"byteSize": 9316,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /notification:\n    get:\n      summary: Returns all notification settings\n      description: Returns all notification settings\n      operationId: findNotificationSetting\n      parameters:\n        - name: offset\n          in: query\n          description: value can be regex search string.\n          required: true\n          schema:\n            type: integer\n        - name: size\n          in: query\n          description: value can be regex search string.\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: list response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationSetting'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Creates a new NotificationSetting\n      description: create NotificationSetting api.\n      operationId: addNotificationSetting\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationSetting'\n      responses:\n        '200':\n          description: create NotificationSetting response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationSetting'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Update  NotificationSetting\n      description: Update NotificationSetting api either recipients or events(trigger/success/failed).\n      operationId: updateNotificationSetting\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationSetting'\n      responses:\n        '200':\n          description: create NotificationSetting response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationSetting'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: delete NotificationSetting\n      description: delete NotificationSetting.\n      operationId: deleteNotificationSetting\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationSetting'\n      responses:\n        '200':\n          description: create NotificationSetting response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationSetting'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /notification/recipient:\n    get:\n      summary: used to fetch providers(recipients)\n      description: recipients fetch by string search, it will return slacks providers and email ids\n      operationId: deleteGroupPolicy\n      parameters:\n        - name: value\n          in: query\n          description: value can be regex search string.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: list of recipients\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /notification/channel:\n    get:\n      summary: get all NotificationSettingConfig list\n      description: get all NotificationSettingConfig list\n      operationId: findNotificationSettingConfig\n      responses:\n        '200':\n          description: list response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationConfigResponse'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Creates a new NotificationSettingConfig\n      description: create NotificationSettingConfig, Slack or SES\n      operationId: addNotificationSettingConfig\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationConfig'\n      responses:\n        '200':\n          description: create NotificationSettingConfig response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationConfigResponse'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    NotificationSetting:\n      type: object\n      required:\n        - configName\n      properties:\n        id:\n          type: integer\n          description: Unique id\n        configName:\n          type: string\n          description: Unique name of group\n        appId:\n          type: integer\n          description: app id\n        envId:\n          type: integer\n          description: env id\n        pipelineIds:\n          type: array\n          items:\n            type: integer\n        eventTypeIds:\n          type: array\n          items:\n            type: integer\n        pipelineType:\n          type: string\n          description: pipeline type CI or CD\n        providers:\n          type: array\n          items:\n            $ref: '#/components/schemas/providers'\n          description: role filters objects\n    providers:\n      type: object\n      required:\n        - dest\n      properties:\n        dest:\n          type: string\n          description: channel destination name\n        rule:\n          type: string\n          description: rule\n        configId:\n          type: integer\n          description: config id\n\n\n    NotificationConfig:\n      type: object\n      required:\n        - channel\n      properties:\n        channel:\n          type: string\n          description: channel type\n          enum:\n            - slack\n            - ses\n        configs:\n          type: array\n          items:\n            $ref: '#/components/schemas/configs'\n          description: config holds for either slack or ses\n    NotificationConfigResponse:\n      type: object\n      properties:\n        slackConfigs:\n          type: array\n          items:\n            $ref: '#/components/schemas/configs'\n          description: config holds for either slack or ses\n        sesConfigs:\n          type: array\n          items:\n            $ref: '#/components/schemas/configs'\n          description: config holds for either slack or ses\n    configs:\n      type: object\n      required:\n        - type\n        - configName\n      properties:\n        id:\n          type: integer\n          description: unique id for config either slack or ses on response or update only\n        type:\n          type: string\n          description: channel destination type, slack or ses\n        configName:\n          type: string\n          description: configName\n        secretKey:\n          type: string\n          description: secretKey, only in case of ses\n        accessKey:\n          type: string\n          description: accessKey, only in case of ses\n        fromEmail:\n          type: string\n          description: fromEmail, only in case of ses\n        region:\n          type: string\n          description: region, only in case of ses\n        webhookUrl:\n          type: string\n          description: webhook url, only fill in case of type is slack\n        teamId:\n          type: integer\n          description: project id, only fill in case of type is slack\n        userId:\n          type: integer\n          description: project id, only fill in case of type is slack\n\n    entity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: it contains entity id\n        name:\n          type: string\n          description: it contains entity name\n\n\n\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          description: Error code\n        message:\n          type: string\n          description: Error message",
			"canonicalURL": "/github.com/devtron-labs/devtron@62f6101b37819e1ac319a744bbf3438184f0c8d5/-/blob/specs/notification.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/devtron-labs/devtron/blob/62f6101b37819e1ac319a744bbf3438184f0c8d5/specs/notification.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}