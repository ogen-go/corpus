{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rtyler/dotdotvote"
		},
		"file": {
			"name": "api-description.yml",
			"size": 0,
			"path": "api-description.yml",
			"byteSize": 5694,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  description: |\n    Dot dot vote! This OpenAPI definition may become inaccurate as the application\n    evolves. Until such a point where this spec is used for automated acceptance\n  version: \"1.0.0\"\n  title: Dot dot vote\n  contact:\n    email: \"rtyler+dotdotvote@brokenco.de\"\n  license:\n    name: \"LGPL v3.0\"\n    url: \"https://www.gnu.org/licenses/lgpl-3.0.en.html\"\nservers:\n  - url: 'https://www.dotdotvote.com/api/v1'\n    description: Production/public environment\n  - url: 'http://localhost:8000/api/v1'\n    description: Local dev server (APIv1)\n\ntags:\n- name: \"poll\"\n  description: Poll manipulation APIs\n  externalDocs:\n    description: \"Find out more\"\n    url: \"http://swagger.io\"\npaths:\n  /polls:\n    put:\n      tags:\n      - \"poll\"\n      summary: \"Create a new poll\"\n      description: \"Create a new poll\"\n      operationId: \"createPoll\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InsertablePoll'\n      responses:\n        '201':\n          description: |\n            Poll created successfully\n          content:\n            application/json:\n              schema:\n                type: 'object'\n                properties:\n                  poll:\n                    type: string\n                    description: 'A UUID for the generated poll'\n                    example: 'e2b75a74-0dd9-4324-bc7e-4b1aa720f2f1'\n        \"422\":\n          description: |\n            Invalid JSON supplied\n        '500':\n          description: |\n            Some server side error has occurred.\n  '/polls/{uuid}':\n    get:\n      tags:\n      - poll\n      summary: 'Fetch the details of the given poll'\n      description: |\n        Access the Poll details and metadata, but _not_ the results\n      parameters:\n      - in: path\n        name: uuid\n        required: true\n        description: 'The UUID for the generated poll'\n        example: 'e2b75a74-0dd9-4324-bc7e-4b1aa720f2f1'\n        schema:\n          type: string\n          format: uuid\n\n      responses:\n        200:\n          description: Poll found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PollResponse'\n        400:\n          description: |\n            Either the UUID parameter wasn't provided or it did not parse as a legitimate UUIDv4\n        404:\n          description: |\n            Poll not found\n\n  '/polls/{uuid}/vote':\n    post:\n      tags:\n      - poll\n      summary: 'Vote in the specified poll'\n      parameters:\n      - in: path\n        name: uuid\n        required: true\n        description: 'The UUID for the generated poll'\n        example: 'e2b75a74-0dd9-4324-bc7e-4b1aa720f2f1'\n        schema:\n          type: string\n          format: uuid\n      responses:\n        200:\n          description: Vote submitted\n        400:\n          description: |\n            Either the UUID parameter wasn't provided or it did not parse as a legitimate UUIDv4\n        404:\n          description: |\n            Poll not found\n\n  '/polls/{uuid}/results':\n    get:\n      tags:\n      - poll\n      summary: 'Fetch the results for the specified poll'\n      parameters:\n      - in: path\n        name: uuid\n        required: true\n        description: 'The UUID for the generated poll'\n        example: 'e2b75a74-0dd9-4324-bc7e-4b1aa720f2f1'\n        schema:\n          type: string\n          format: uuid\n          example: '8497479a-9f07-4530-9a5c-2824238d5975'\n      responses:\n        200:\n          description: Poll found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PollResults'\n        400:\n          description: |\n            Either the UUID parameter wasn't provided or it did not parse as a legitimate UUIDv4\n        404:\n          description: |\n            Poll not found\ncomponents:\n  schemas:\n    PollResponse:\n      type: object\n      properties:\n        poll:\n          $ref: '#/components/schemas/RawPoll'\n        choices:\n          type: array\n          items:\n            $ref: '#/components/schemas/RawChoice'\n    PollResults:\n      type: object\n      properties:\n        poll:\n          $ref: '#/components/schemas/RawPoll'\n        choices:\n          type: array\n          items:\n            $ref: '#/components/schemas/RawChoice'\n        votes:\n          type: array\n          items:\n            $ref: '#/components/schemas/RawVote'\n    RawPoll:\n      type: object\n      properties:\n        id:\n          type: number\n          format: int32\n        uuid:\n          type: string\n          format: uuid\n        title:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n    RawChoice:\n      type: object\n      properties:\n        id:\n          type: number\n          format: int32\n        poll_id:\n          type: number\n          format: int32\n        details:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n    RawVote:\n      type: object\n      properties:\n        id:\n          type: number\n          format: int32\n        poll_id:\n          type: number\n          format: int32\n        choice_id:\n          type: number\n          format: int32\n        dots:\n          type: number\n          format: in32\n        voter:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n    InsertablePoll:\n      type: \"object\"\n      properties:\n        title:\n          type: \"string\"\n          example: 'My amazing poll!'\n        choices:\n          type: \"array\"\n          items:\n            type: \"string\"\n            example: 'Choice 1'\n",
			"canonicalURL": "/github.com/rtyler/dotdotvote@ee6dc1552b3d252d89d74872bc02648e0c63f321/-/blob/api-description.yml",
			"externalURLs": [
				{
					"url": "https://github.com/rtyler/dotdotvote/blob/ee6dc1552b3d252d89d74872bc02648e0c63f321/api-description.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}