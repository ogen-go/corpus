{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-storage-2016-01-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-storage-2016-01-01-swagger.yaml",
			"byteSize": 30999,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Storage Management Client.\n  title: StorageManagementClient\n  version: 2016-01-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storage/resource-manager/Microsoft.Storage/stable/2016-01-01/storage.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: storage\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability\":\n    post:\n      description: Checks that the storage account name is valid and is not already in use.\n      operationId: StorageAccounts_CheckNameAvailability\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCheckNameAvailabilityParame\\\n                ters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCheckNameAvailabilityParame\\\n                ters\"\n        description: The name of the storage account within the specified resource group.\n          Storage account names must be between 3 and 24 characters in length\n          and use numbers and lower-case letters only.\n        required: true\n      responses:\n        \"200\":\n          description: OK -- Operation to check the storage account name availability was\n            successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckNameAvailabilityResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CheckNameAvailabilityResult\"\n      tags:\n        - StorageAccounts\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts\":\n    get:\n      description: Lists all the storage accounts available under the subscription. Note\n        that storage keys are not returned; use the ListKeys operation for this.\n      operationId: StorageAccounts_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK -- List of storage accounts was retrieved and returned\n            successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n      tags:\n        - StorageAccounts\n      x-ms-pageable: {}\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages\":\n    get:\n      description: Gets the current usage count and the limit for the resources under the\n        subscription.\n      operationId: Usage_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK -- current usage account and limit retrieved and returned\n            successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UsageListResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UsageListResult\"\n      tags:\n        - Usage\n      x-ms-pageable: {}\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts\":\n    get:\n      description: Lists all the storage accounts available under the given resource group.\n        Note that storage keys are not returned; use the ListKeys operation for\n        this.\n      operationId: StorageAccounts_ListByResourceGroup\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK -- List of storage accounts in the given resource group retrieved\n            and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListResult\"\n      tags:\n        - StorageAccounts\n      x-ms-pageable: {}\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\":\n    delete:\n      description: Deletes a storage account in Microsoft Azure.\n      operationId: StorageAccounts_Delete\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: The name of the storage account within the specified resource group.\n            Storage account names must be between 3 and 24 characters in length\n            and use numbers and lower-case letters only.\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n            minLength: 3\n            maxLength: 24\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK -- storage account deleted successfully.\n        \"204\":\n          description: NoContent -- account does not exist in the subscription.\n      tags:\n        - StorageAccounts\n    get:\n      description: Returns the properties for the specified storage account including but\n        not limited to name, SKU name, location, and account status. The\n        ListKeys operation should be used to retrieve storage keys.\n      operationId: StorageAccounts_GetProperties\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: \"The name of the storage account within the specified resource\n            group. Storage account names must be between 3 and 24 characters in\n            length and use numbers and lower-case letters only.  \"\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n            minLength: 3\n            maxLength: 24\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK -- properties retrieved successfully for the storage account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n      tags:\n        - StorageAccounts\n    patch:\n      description: The update operation can be used to update the SKU, encryption, access\n        tier, or tags for a storage account. It can also be used to map the\n        account to a custom domain. Only one custom domain is supported per\n        storage account; the replacement/change of custom domain is not\n        supported. In order to replace an old custom domain, the old value must\n        be cleared/unregistered before a new value can be set. The update of\n        multiple properties is supported. This call does not change the storage\n        keys for the account. If you want to change the storage account keys,\n        use the regenerate keys operation. The location and name of the storage\n        account cannot be changed after creation.\n      operationId: StorageAccounts_Update\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: The name of the storage account within the specified resource group.\n            Storage account names must be between 3 and 24 characters in length\n            and use numbers and lower-case letters only.\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n            minLength: 3\n            maxLength: 24\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountUpdateParameters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountUpdateParameters\"\n        description: The parameters to provide for the updated account.\n        required: true\n      responses:\n        \"200\":\n          description: OK -- storage account properties updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n      tags:\n        - StorageAccounts\n    put:\n      description: Asynchronously creates a new storage account with the specified\n        parameters. If an account is already created and a subsequent create\n        request is issued with different properties, the account properties will\n        be updated. If an account is already created and a subsequent create or\n        update request is issued with the exact same set of properties, the\n        request will succeed.\n      operationId: StorageAccounts_Create\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: The name of the storage account within the specified resource group.\n            Storage account names must be between 3 and 24 characters in length\n            and use numbers and lower-case letters only.\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n            minLength: 3\n            maxLength: 24\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCreateParameters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountCreateParameters\"\n        description: The parameters to provide for the created account.\n        required: true\n      responses:\n        \"200\":\n          description: OK -- returned when the storage account was already created from a\n            previous request with the same properties specified in the request\n            body.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccount\"\n        \"202\":\n          description: Accepted -- Create or update request accepted; operation will\n            complete asynchronously.\n      tags:\n        - StorageAccounts\n      x-ms-long-running-operation: true\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys\":\n    post:\n      description: Lists the access keys for the specified storage account.\n      operationId: StorageAccounts_ListKeys\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: The name of the storage account within the specified resource group.\n            Storage account names must be between 3 and 24 characters in length\n            and use numbers and lower-case letters only.\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n            minLength: 3\n            maxLength: 24\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK -- list of keys retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListKeysResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListKeysResult\"\n      tags:\n        - StorageAccounts\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey\":\n    post:\n      description: Regenerates one of the access keys for the specified storage account.\n      operationId: StorageAccounts_RegenerateKey\n      parameters:\n        - description: The name of the resource group within the user's subscription.\n          in: path\n          name: resourceGroupName\n          required: true\n          schema:\n            type: string\n        - description: The name of the storage account within the specified resource group.\n            Storage account names must be between 3 and 24 characters in length\n            and use numbers and lower-case letters only.\n          in: path\n          name: accountName\n          required: true\n          schema:\n            type: string\n            minLength: 3\n            maxLength: 24\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountRegenerateKeyParameters\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StorageAccountRegenerateKeyParameters\"\n        description: Specifies name of the key which should be regenerated -- key1 or key2.\n        required: true\n      responses:\n        \"200\":\n          description: OK -- specified key regenerated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListKeysResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StorageAccountListKeysResult\"\n      tags:\n        - StorageAccounts\nservers:\n  - url: https://management.azure.com\ncomponents:\n  parameters:\n    ApiVersionParameter:\n      description: Client Api Version.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n    SubscriptionIdParameter:\n      description: Gets subscription credentials which uniquely identify the Microsoft\n        Azure subscription. The subscription ID forms part of the URI for every\n        service call.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n  schemas:\n    CheckNameAvailabilityResult:\n      description: The CheckNameAvailability operation response.\n      properties:\n        message:\n          description: Gets an error message explaining the Reason value in more detail.\n          readOnly: true\n          type: string\n        nameAvailable:\n          description: Gets a boolean value that indicates whether the name is available\n            for you to use. If true, the name is available. If false, the name\n            has already been taken or is invalid and cannot be used.\n          readOnly: true\n          type: boolean\n        reason:\n          description: Gets the reason that a storage account name could not be used. The\n            Reason element is only returned if NameAvailable is false.\n          enum:\n            - AccountNameInvalid\n            - AlreadyExists\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: Reason\n    CustomDomain:\n      description: The custom domain assigned to this storage account. This can be set via\n        Update.\n      properties:\n        name:\n          description: Gets or sets the custom domain name assigned to the storage account.\n            Name is the CNAME source.\n          type: string\n        useSubDomainName:\n          description: Indicates whether indirect CName validation is enabled. Default\n            value is false. This should only be set on updates.\n          type: boolean\n      required:\n        - name\n    Encryption:\n      description: The encryption settings on the storage account.\n      properties:\n        keySource:\n          description: \"The encryption keySource (provider). Possible values\n            (case-insensitive):  Microsoft.Storage\"\n          enum:\n            - Microsoft.Storage\n          type: string\n        services:\n          $ref: \"#/components/schemas/EncryptionServices\"\n      required:\n        - keySource\n    EncryptionService:\n      description: A service that allows server-side encryption to be used.\n      properties:\n        enabled:\n          description: A boolean indicating whether or not the service encrypts the data as\n            it is stored.\n          type: boolean\n        lastEnabledTime:\n          description: Gets a rough estimate of the date/time when the encryption was last\n            enabled by the user. Only returned when encryption is enabled. There\n            might be some unencrypted blobs which were written after this time,\n            as it is just a rough estimate.\n          format: date-time\n          readOnly: true\n          type: string\n    EncryptionServices:\n      description: A list of services that support encryption.\n      properties:\n        blob:\n          $ref: \"#/components/schemas/EncryptionService\"\n    Endpoints:\n      description: The URIs that are used to perform a retrieval of a public blob, queue,\n        or table object.\n      properties:\n        blob:\n          description: Gets the blob endpoint.\n          readOnly: true\n          type: string\n        file:\n          description: Gets the file endpoint.\n          readOnly: true\n          type: string\n        queue:\n          description: Gets the queue endpoint.\n          readOnly: true\n          type: string\n        table:\n          description: Gets the table endpoint.\n          readOnly: true\n          type: string\n    Resource:\n      properties:\n        id:\n          description: Resource Id\n          readOnly: true\n          type: string\n        location:\n          description: Resource location\n          type: string\n        name:\n          description: Resource name\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Tags assigned to a resource; can be used for viewing and grouping a\n            resource (across resource groups).\n          type: object\n        type:\n          description: Resource type\n          readOnly: true\n          type: string\n      x-ms-azure-resource: true\n    Sku:\n      description: The SKU of the storage account.\n      properties:\n        name:\n          description: Gets or sets the sku name. Required for account creation; optional\n            for update. Note that in older versions, sku name was called\n            accountType.\n          enum:\n            - Standard_LRS\n            - Standard_GRS\n            - Standard_RAGRS\n            - Standard_ZRS\n            - Premium_LRS\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: SkuName\n        tier:\n          description: Gets the sku tier. This is based on the SKU name.\n          enum:\n            - Standard\n            - Premium\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: SkuTier\n      required:\n        - name\n    StorageAccount:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The storage account.\n      properties:\n        kind:\n          description: Gets the Kind.\n          enum:\n            - Storage\n            - BlobStorage\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: Kind\n        properties:\n          $ref: \"#/components/schemas/StorageAccountProperties\"\n        sku:\n          $ref: \"#/components/schemas/Sku\"\n    StorageAccountCheckNameAvailabilityParameters:\n      properties:\n        name:\n          type: string\n        type:\n          enum:\n            - Microsoft.Storage/storageAccounts\n          type: string\n      required:\n        - name\n        - type\n    StorageAccountCreateParameters:\n      description: The parameters used when creating a storage account.\n      properties:\n        kind:\n          description: Required. Indicates the type of storage account.\n          enum:\n            - Storage\n            - BlobStorage\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: Kind\n        location:\n          description: Required. Gets or sets the location of the resource. This will be\n            one of the supported and registered Azure Geo Regions (e.g. West US,\n            East US, Southeast Asia, etc.). The geo region of a resource cannot\n            be changed once it is created, but if an identical geo region is\n            specified on update, the request will succeed.\n          type: string\n        properties:\n          $ref: \"#/components/schemas/StorageAccountPropertiesCreateParameters\"\n        sku:\n          $ref: \"#/components/schemas/Sku\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Gets or sets a list of key value pairs that describe the resource.\n            These tags can be used for viewing and grouping this resource\n            (across resource groups). A maximum of 15 tags can be provided for a\n            resource. Each tag must have a key with a length no greater than 128\n            characters and a value with a length no greater than 256 characters.\n          type: object\n      required:\n        - sku\n        - kind\n        - location\n    StorageAccountKey:\n      description: An access key for the storage account.\n      properties:\n        keyName:\n          description: Name of the key.\n          readOnly: true\n          type: string\n        permissions:\n          description: Permissions for the key -- read-only or full permissions.\n          enum:\n            - READ\n            - FULL\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: KeyPermission\n        value:\n          description: Base 64-encoded value of the key.\n          readOnly: true\n          type: string\n    StorageAccountListKeysResult:\n      description: The response from the ListKeys operation.\n      properties:\n        keys:\n          description: Gets the list of storage account keys and their properties for the\n            specified storage account.\n          items:\n            $ref: \"#/components/schemas/StorageAccountKey\"\n          readOnly: true\n          type: array\n    StorageAccountListResult:\n      description: The response from the List Storage Accounts operation.\n      properties:\n        value:\n          description: Gets the list of storage accounts and their properties.\n          items:\n            $ref: \"#/components/schemas/StorageAccount\"\n          readOnly: true\n          type: array\n    StorageAccountProperties:\n      properties:\n        accessTier:\n          description: Required for storage accounts where kind = BlobStorage. The access\n            tier used for billing.\n          enum:\n            - Hot\n            - Cool\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccessTier\n        creationTime:\n          description: Gets the creation date and time of the storage account in UTC.\n          format: date-time\n          readOnly: true\n          type: string\n        customDomain:\n          $ref: \"#/components/schemas/CustomDomain\"\n        encryption:\n          $ref: \"#/components/schemas/Encryption\"\n        lastGeoFailoverTime:\n          description: Gets the timestamp of the most recent instance of a failover to the\n            secondary location. Only the most recent timestamp is retained. This\n            element is not returned if there has never been a failover instance.\n            Only available if the accountType is Standard_GRS or Standard_RAGRS.\n          format: date-time\n          readOnly: true\n          type: string\n        primaryEndpoints:\n          $ref: \"#/components/schemas/Endpoints\"\n        primaryLocation:\n          description: Gets the location of the primary data center for the storage account.\n          readOnly: true\n          type: string\n        provisioningState:\n          description: Gets the status of the storage account at the time the operation was\n            called.\n          enum:\n            - Creating\n            - ResolvingDNS\n            - Succeeded\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: ProvisioningState\n        secondaryEndpoints:\n          $ref: \"#/components/schemas/Endpoints\"\n        secondaryLocation:\n          description: Gets the location of the geo-replicated secondary for the storage\n            account. Only available if the accountType is Standard_GRS or\n            Standard_RAGRS.\n          readOnly: true\n          type: string\n        statusOfPrimary:\n          description: Gets the status indicating whether the primary location of the\n            storage account is available or unavailable.\n          enum:\n            - Available\n            - Unavailable\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccountStatus\n        statusOfSecondary:\n          description: Gets the status indicating whether the secondary location of the\n            storage account is available or unavailable. Only available if the\n            SKU name is Standard_GRS or Standard_RAGRS.\n          enum:\n            - Available\n            - Unavailable\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccountStatus\n    StorageAccountPropertiesCreateParameters:\n      properties:\n        accessTier:\n          description: Required for storage accounts where kind = BlobStorage. The access\n            tier used for billing.\n          enum:\n            - Hot\n            - Cool\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccessTier\n        customDomain:\n          $ref: \"#/components/schemas/CustomDomain\"\n        encryption:\n          $ref: \"#/components/schemas/Encryption\"\n    StorageAccountPropertiesUpdateParameters:\n      properties:\n        accessTier:\n          description: Required for storage accounts where kind = BlobStorage. The access\n            tier used for billing.\n          enum:\n            - Hot\n            - Cool\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: AccessTier\n        customDomain:\n          $ref: \"#/components/schemas/CustomDomain\"\n        encryption:\n          $ref: \"#/components/schemas/Encryption\"\n    StorageAccountRegenerateKeyParameters:\n      properties:\n        keyName:\n          type: string\n      required:\n        - keyName\n    StorageAccountUpdateParameters:\n      description: The parameters that can be provided when updating the storage account\n        properties.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/StorageAccountPropertiesUpdateParameters\"\n        sku:\n          $ref: \"#/components/schemas/Sku\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Gets or sets a list of key value pairs that describe the resource.\n            These tags can be used in viewing and grouping this resource (across\n            resource groups). A maximum of 15 tags can be provided for a\n            resource. Each tag must have a key no greater in length than 128\n            characters and a value no greater in length than 256 characters.\n          type: object\n    Usage:\n      description: Describes Storage Resource Usage.\n      properties:\n        currentValue:\n          description: Gets the current count of the allocated resources in the\n            subscription.\n          format: int32\n          readOnly: true\n          type: integer\n        limit:\n          description: Gets the maximum count of the resources that can be allocated in the\n            subscription.\n          format: int32\n          readOnly: true\n          type: integer\n        name:\n          $ref: \"#/components/schemas/UsageName\"\n        unit:\n          description: Gets the unit of measurement.\n          enum:\n            - Count\n            - Bytes\n            - Seconds\n            - Percent\n            - CountsPerSecond\n            - BytesPerSecond\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: UsageUnit\n    UsageListResult:\n      description: The response from the List Usages operation.\n      properties:\n        value:\n          description: Gets or sets the list of Storage Resource Usages.\n          items:\n            $ref: \"#/components/schemas/Usage\"\n          type: array\n    UsageName:\n      description: The usage names that can be used; currently limited to StorageAccount.\n      properties:\n        localizedValue:\n          description: Gets a localized string describing the resource name.\n          readOnly: true\n          type: string\n        value:\n          description: Gets a string describing the resource name.\n          readOnly: true\n          type: string\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-storage-2016-01-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-storage-2016-01-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}