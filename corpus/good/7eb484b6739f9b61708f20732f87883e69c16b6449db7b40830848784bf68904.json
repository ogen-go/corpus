{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DevbookHQ/sdk"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "shared/api/openapi.yml",
			"byteSize": 8681,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Devbook\n  description: Devbook API\n\nservers:\n  - url: https://ondevbook.com/\n    description: API endpoint\n  - url: https://{sessionID}-{clientID}.ondevbook.com/\n    description: Session endpoint without specified port\n    variables:\n      sessionID:\n        description: ID of the session\n        default: _sessionID\n      clientID:\n        description: ID of the client\n        default: _clientID\n  - url: https://{port}-{sessionID}-{clientID}.ondevbook.com/\n    description: Session endpoint with specificed port\n    variables:\n      sessionID:\n        description: ID of the session\n        default: _sessionID\n      clientID:\n        description: ID of the client\n        default: _clientID\n      port:\n        description: Port to connect to\n        default: \"8080\"\n\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      name: api_key\n      type: apiKey\n      in: query\n\n  parameters:\n    apiKeyOpt:\n      name: api_key\n      in: query\n      required: false\n      schema:\n        type: string\n    apiKeyReq:\n      name: api_key\n      in: query\n      required: false\n      schema:\n        type: string\n    codeSnippetID:\n      name: codeSnippetID\n      in: path\n      required: true\n      schema:\n        type: string\n    sessionID:\n      name: sessionID\n      in: path\n      required: true\n      schema:\n        type: string\n\n  responses:\n    400:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    401:\n      description: Authentication error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    500:\n      description: Server error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n  schemas:\n    Template:\n      type: string\n      enum:\n        - Nodejs\n        - Go\n        - Bash\n        - Python3\n        - Java\n        - Rust\n        - Perl\n        - PHP\n    EnvironmentState:\n      type: string\n      enum:\n        - Building\n        - Failed\n        - Done\n\n    NewEnvironment:\n      required:\n        - template\n        - deps\n      properties:\n        template:\n          $ref: \"#/components/schemas/Template\"\n        deps:\n          type: array\n          items:\n            type: string\n    EnvironmentStateUpdate:\n      required:\n        - state\n      properties:\n        state:\n          $ref: \"#/components/schemas/EnvironmentState\"\n\n    NewSession:\n      required:\n        - codeSnippetID\n      properties:\n        editEnabled:\n          type: boolean\n          default: false\n          description: Option determining if the session is a shared persistent edit session\n        codeSnippetID:\n          type: string\n          description: Identifier of a code snippet which which is the environment associated\n    Session:\n      required:\n        - sessionID\n        - clientID\n        - editEnabled\n        - codeSnippetID\n      properties:\n        codeSnippetID:\n          type: string\n          description: Identifier of a code snippet which which is the environment associated\n        editEnabled:\n          type: boolean\n          description: Information if the session is a shared persistent edit session\n        sessionID:\n          type: string\n          description: Identifier of the session\n        clientID:\n          type: string\n          description: Identifier of the client\n\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          description: Error code\n        message:\n          type: string\n          description: Error\n\ntags:\n  - name: sessions\n    description: Managing VM sessions\n  - name: envs\n    description: Environment for VM\n\npaths:\n  /health:\n    get:\n      description: Health check\n      responses:\n        200:\n          description: Request was successful\n        401:\n          $ref: \"#/components/responses/401\"\n\n  /sessions:\n    get:\n      description: List all sessions\n      tags: [sessions]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyReq\"\n      responses:\n        200:\n          description: Successfully returned all sessions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: \"#/components/schemas/Session\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    post:\n      description: Create a session on the server\n      tags: [sessions]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyOpt\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewSession\"\n      responses:\n        201:\n          description: Successfully created a session\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Session\"\n        401:\n          $ref: \"#/components/responses/401\"\n        400:\n          $ref: \"#/components/responses/400\"\n        500:\n          $ref: \"#/components/responses/500\"\n\n  /sessions/{sessionID}:\n    delete:\n      description: Delete a session on the server\n      tags: [sessions]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyReq\"\n        - $ref: \"#/components/parameters/sessionID\"\n      responses:\n        204:\n          description: Successfully deleted the session\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n\n  /sessions/{sessionID}/refresh:\n    post:\n      description: Refresh the session extending its time to live\n      tags: [sessions]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyOpt\"\n        - $ref: \"#/components/parameters/sessionID\"\n      responses:\n        204:\n          description: Successfully refreshed the session\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          description: Error refreshing session - session not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /envs/{codeSnippetID}:\n    post:\n      description: Create a new env for a code snippet\n      tags: [envs]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyReq\"\n        - $ref: \"#/components/parameters/codeSnippetID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewEnvironment\"\n      responses:\n        204:\n          description: Successfully created an environment\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      description: Delete the code snippet environment\n      tags: [envs]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyReq\"\n        - $ref: \"#/components/parameters/codeSnippetID\"\n      responses:\n        204:\n          description: Successfully deleted the environment\n        400:\n          description: Cannot delete the environment\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    patch:\n      description: Update the environment of the code snippet to match the edit environment\n      tags: [envs]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyReq\"\n        - $ref: \"#/components/parameters/codeSnippetID\"\n      responses:\n        204:\n          description: Updated the edit environment for code snippet\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n\n  /envs/{codeSnippetID}/state:\n    put:\n      description: Update the state of the environment\n      tags: [envs]\n      parameters:\n        - $ref: \"#/components/parameters/apiKeyReq\"\n        - $ref: \"#/components/parameters/codeSnippetID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnvironmentStateUpdate\"\n      responses:\n        204:\n          description: Publishing the edit environment for code snippet\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n",
			"canonicalURL": "/github.com/DevbookHQ/sdk@b3c9da753805eda956aa2bbae2cb0215d1ac77d1/-/blob/shared/api/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/devbookhq/sdk/blob/b3c9da753805eda956aa2bbae2cb0215d1ac77d1/shared/api/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}