{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/schetinnikov-otus/arch-labs"
		},
		"file": {
			"name": "rest-openapi.yaml",
			"size": 0,
			"path": "api-spec/restful/rest-openapi.yaml",
			"byteSize": 5269,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: schetinnikov@gmail.com\n  title: Регистрация пользователя\n  version: 0.1.0\ntags:\n  - name: user\n    description: Сервис работы с пользователем\n  - name: loyalty\n    description: Сервис лояльности\n  - name: notification\n    description: Сервис нотификаций\npaths:\n  /users/register:\n    post:\n      tags:\n        - user\n      summary: Регистрация пользователя\n      description: Регистрация пользователя. После регистрации отправляет письмо на email и выпускается карта лояльности\n      operationId: registerUser\n      requestBody:\n        $ref: '#/components/requestBodies/User'\n      responses:\n        '201':\n          description: Регистрация прошла успешно\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: Неправильный запрос\n  '/users/{userId}':\n    get:\n      tags:\n        - user\n      summary: Ресурс пользователя по ID\n      description: Вернуть данные пользователя\n      operationId: getUserById\n      parameters:\n        - name: userId\n          in: path\n          description: ID пользователя\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: Успешный запрос\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: Неправильный запрос\n        '404':\n          description: Такого пользователя нет\n  /cards:\n    post:\n      tags:\n        - loyalty\n      summary: Заведение карты лояльности\n      description: Метод для заведения и создания карты лояльности\n      operationId: createLoyaltyCard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userId: \n                  type: integer\n              required: \n                - userId\n            example: \n              userId: 42\n\n      responses:\n        '201':\n          description: Заведение карты успешно\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                  cardNumber:\n                    type: string\n                    format: \"XXXX-XXXX\"\n                  status:\n                    type: string\n              example: \n                id: 42\n                cardNumber: \"1235-6892\"\n  /send_email:\n    post:\n      tags:\n        - notification\n      summary: Отослать email на почту\n      operationId: sendEmail\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n                templateId:\n                  type: integer\n                context: \n                  type: object\n              required: \n                - email\n                - templateId\n                - context\n            example: \n              email: \"vasya@pupkin.ru\"\n              templateId: 42\n              context: \n                firstName: vasya\n                lastName: pupkin\n                loyaltyCardNumber: 1231-1231\n      responses:\n        '202':\n          description: Отсылка взята в работу\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  jobId: \n                    type: string\n              example: \n                jobId: 000123234091234\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        address:\n          type: string\n      required: \n          - username\n          - password\n          - email\n  requestBodies:\n    User:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n          examples:\n            sample-user:\n              summary: Обычный пользователь\n              value:\n                username: johndoe589\n                firstName: John\n                lastName: Doe\n                email: bestjohn@doe.com\n                phone: '+71002003040'\n                password: 'Jsd28xzd'\n                address: 'ул Большая Филевская д 16 кв 19'\n      description: User object that needs to be created\n      required: true\n",
			"canonicalURL": "/github.com/schetinnikov-otus/arch-labs@c99e95d0bb4dde338c6c62a11bf2ea14a515c21e/-/blob/api-spec/restful/rest-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/schetinnikov-otus/arch-labs/blob/c99e95d0bb4dde338c6c62a11bf2ea14a515c21e/api-spec/restful/rest-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}