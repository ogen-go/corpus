{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/isa-group/IDLReasoner"
		},
		"file": {
			"name": "OAS_test_suite_v3.yaml",
			"size": 0,
			"path": "src/test/resources/OAS_test_suite_v3.yaml",
			"byteSize": 19189,
			"content": "openapi: 3.0.1\ninfo:\n  title: Swagger Example\n  description: This is a sample server\n  version: 1.0.0\nservers:\n  - url: http://localhost:8080/api\npaths:\n  /noParams:\n    get:\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneParamBoolean:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: boolean\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneParamString:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneParamInt:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneParamEnumString:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneParamEnumInt:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneDependency:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          schema:\n            type: string\n        - name: p3\n          in: query\n          schema:\n            type: integer\n        - name: p4\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p5\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneDependencyEnumParams:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n        - name: p3\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneDependencyArithRelEnumParams:\n    get:\n      parameters:\n        - name: p3\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n        - name: p5\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n      responses:\n        default:\n          description: Default\n          content: {}\n  /oneDependencyComplexEnumParams:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n        - name: p3\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial1:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p2\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p3\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p4\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p5\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial2:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          schema:\n            type: integer\n        - name: p3\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p4\n          in: query\n          schema:\n            type: integer\n        - name: p5\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p6\n          in: query\n          schema:\n            type: boolean\n        - name: p7\n          in: query\n          schema:\n            type: integer\n        - name: p8\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p9\n          in: query\n          schema:\n            type: integer\n        - name: p10\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial3:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          schema:\n            type: string\n        - name: p3\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p4\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p5\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial4:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: integer\n        - name: p2\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 100\n              - 1000\n              - 10000\n              - 100000\n              - 1000000\n        - name: p3\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 100\n              - 1000\n              - 10000\n              - 100000\n              - 1000000\n        - name: p4\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 100\n              - 1000\n              - 10000\n              - 100000\n              - 1000000\n        - name: p5\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 100\n              - 1000\n              - 10000\n              - 100000\n              - 1000000\n        - name: p6\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p7\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p8\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p9\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p10\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial5:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p3\n          in: query\n          required: true\n          schema:\n            type: integer\n        - name: p4\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p5\n          in: query\n          required: true\n          schema:\n            type: integer\n        - name: p6\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: p7\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p8\n          in: query\n          required: true\n          schema:\n            type: integer\n        - name: p9\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p10\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial6:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p2\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p3\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p4\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p5\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial7:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p2\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p3\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p4\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p5\n          in: query\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial8:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: p3\n          in: query\n          schema:\n            type: boolean\n        - name: p4\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: p5\n          in: query\n          schema:\n            type: boolean\n        - name: p6\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p7\n          in: query\n          schema:\n            type: string\n        - name: p8\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p9\n          in: query\n          schema:\n            type: string\n        - name: p10\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial9:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          schema:\n            type: integer\n        - name: p2\n          in: query\n          required: true\n          schema:\n            type: integer\n        - name: p3\n          in: query\n          schema:\n            type: integer\n        - name: p4\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p5\n          in: query\n          schema:\n            type: string\n        - name: p6\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p7\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p8\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p9\n          in: query\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p10\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /combinatorial10:\n    get:\n      parameters:\n        - name: p1\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: p2\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p3\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - value1\n              - value2\n              - value3\n              - value4\n              - value5\n        - name: p4\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n        - name: p5\n          in: query\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n      responses:\n        default:\n          description: Default\n          content: {}\n  /conflictiveParameterNames:\n    get:\n      parameters:\n        - name: type\n          in: query\n          schema:\n            type: boolean\n        - name: constraint\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: with_underscore\n          in: query\n          schema:\n            type: boolean\n        - name: Accept-Language\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: index:set\n          in: query\n          schema:\n            type: boolean\n        - name: something[one]\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: something[two]\n          in: query\n          schema:\n            type: string\n        - name: b.b\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: p9\n          in: query\n          schema:\n            type: string\n        - name: p10\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Default\n          content: {}\n  /conflictiveParameterNames2:\n    get:\n      parameters:\n        - name: type\n          in: query\n          schema:\n            type: boolean\n        - name: constraint\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: with_underscore\n          in: query\n          schema:\n            type: boolean\n        - name: Accept-Language\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: index:set\n          in: query\n          schema:\n            type: boolean\n        - name: something[one]\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: something[two]\n          in: query\n          schema:\n            type: string\n        - name: b.b\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: c.c\n          in: query\n          schema:\n            type: string\n        - name: p10\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Default\n          content: {}\ncomponents: {}",
			"canonicalURL": "/github.com/isa-group/IDLReasoner@d5e942abc6ef91aed676e36c7d67fd179ecc2dc6/-/blob/src/test/resources/OAS_test_suite_v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/isa-group/IDLReasoner/blob/d5e942abc6ef91aed676e36c7d67fd179ecc2dc6/src/test/resources/OAS_test_suite_v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}