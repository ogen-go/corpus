{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/LINBIT/linstor-gateway"
		},
		"file": {
			"name": "rest_v2_openapi.yaml",
			"size": 0,
			"path": "docs/rest_v2_openapi.yaml",
			"byteSize": 24145,
			"content": "openapi: 3.0.2\nservers:\n  - url: 'http://localhost:8080'\n    description: Local LINSTOR Gateway server\ninfo:\n  description: |\n    LINSTOR Gateway REST API v2\n\n    The v2 REST API should stay compatible; only additions are made to the API.\n    If there are breaking changes or redesigned a new major REST API version will be issued.\n\n    By default, the server runs on port `8080`.\n\n    To change the bind address or port you can use the `--addr` option to linstor-gateway:\n    ```\n    linstor-gateway server --addr=\":8080\"\n    ```\n\n    Changelog:\n    * 2.0.0\n      - Initial REST API v2\n  version: 2.0.0\n  title: LINSTOR Gateway REST API\n  contact:\n    email: christoph.boehmwalder@linbit.com\n  license:\n    name: GPLv3\n    url: 'https://www.gnu.org/licenses/gpl-3.0.html'\npaths:\n  /api/v2/iscsi:\n    get:\n      tags:\n        - iscsi\n      summary: Lists all iSCSI targets\n      operationId: iscsiList\n      description: Returns a list of all iSCSI targets created by LINSTOR Gateway\n      responses:\n        '200':\n          description: Array of iSCSI target resource configs.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ISCSIResourceConfig'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      tags:\n        - iscsi\n      summary: Creates a new iSCSI target\n      operationId: iscsiCreate\n      description: Creates a new iSCSI target\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ISCSIResourceConfig'\n      responses:\n        '201':\n          description: The iSCSI target was successfully created. The created target is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ISCSIResourceConfig'\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The URL where the newly created target can be found\n        '400':\n          description: Invalid input parameters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/api/v2/iscsi/{iqn}':\n    parameters:\n      - $ref: '#/components/parameters/IQN'\n    get:\n      tags:\n        - iscsi\n      summary: Gets an iSCSI target\n      operationId: iscsiGet\n      description: Gets the resource config of a single iSCSI target.\n      responses:\n        '200':\n          description: A single iSCSI target resource config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ISCSIResourceConfig'\n        '400':\n          $ref: '#/components/responses/InvalidIQN'\n        '404':\n          $ref: '#/components/responses/IQNNotFound'\n    delete:\n      tags:\n        - iscsi\n      summary: Deletes an iSCSI target\n      operationId: iscsiDelete\n      description: 'Deletes an iSCSI target, along with all its LUNs'\n      responses:\n        '200':\n          description: The target was successfully deleted. The response body is empty.\n        '400':\n          $ref: '#/components/responses/InvalidIQN'\n        '404':\n          $ref: '#/components/responses/IQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/api/v2/iscsi/{iqn}/start':\n    parameters:\n      - $ref: '#/components/parameters/IQN'\n    post:\n      tags:\n        - iscsi\n      summary: Starts an iSCSI target\n      operationId: iscsiStart\n      description: Starts an iSCSI target.\n      responses:\n        '200':\n          description: The iSCSI target was successfully started\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The URL to the target that was just started\n        '400':\n          $ref: '#/components/responses/InvalidIQN'\n        '404':\n          $ref: '#/components/responses/IQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/api/v2/iscsi/{iqn}/stop':\n    parameters:\n      - $ref: '#/components/parameters/IQN'\n    post:\n      tags:\n        - iscsi\n      summary: Stops an iSCSI target\n      operationId: iscsiStop\n      description: Stops an iSCSI target.\n      responses:\n        '200':\n          description: The iSCSI target was successfully stopped\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The URL to the target that was just stopped\n        '400':\n          $ref: '#/components/responses/InvalidIQN'\n        '404':\n          $ref: '#/components/responses/IQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/api/v2/iscsi/{iqn}/{lun}':\n    parameters:\n      - $ref: '#/components/parameters/IQN'\n      - $ref: '#/components/parameters/LUN'\n    get:\n      tags:\n        - iscsi\n      summary: Gets a logical unit of an iSCSI target\n      operationId: iscsiGetLu\n      description: Gets the resource config for a single logical unit of an iSCSI target.\n      responses:\n        '200':\n          description: A single volume config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeConfig'\n              examples: { }\n        '400':\n          $ref: '#/components/responses/InvalidIQN'\n        '404':\n          $ref: '#/components/responses/IQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      tags:\n        - iscsi\n      summary: Adds a logical unit to an iSCSI target\n      operationId: iscsiAddLu\n      description: Adds a logical unit to an iSCSI target. The target must be stopped when this operation is run.\n      responses:\n        '200':\n          description: The VolumeConfig of the logical unit that was just added\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeConfig'\n        '400':\n          $ref: '#/components/responses/InvalidIQN'\n        '404':\n          $ref: '#/components/responses/IQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - iscsi\n      summary: Deletes a logical unit of an iSCSI target\n      operationId: iscsiDeleteLu\n      description: Deletes a single logical unit from an iSCSI target. The target must be stopped when this operation is run.\n      responses:\n        '200':\n          description: The logical unit was successfully deleted. The response body is empty.\n        '400':\n          $ref: '#/components/responses/InvalidIQN'\n        '404':\n          $ref: '#/components/responses/IQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /api/v2/nfs:\n    get:\n      tags:\n        - nfs\n      summary: Lists all NFS exports\n      operationId: nfsList\n      description: Lists all NFS exports created by LINSTOR Gateway\n      responses:\n        '200':\n          description: Array of NFS export resource configs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NFSResourceConfig'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      tags:\n        - nfs\n      summary: ''\n      operationId: nfsCreate\n      responses:\n        '201':\n          description: The export was successfully created\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The URL where the newly created export can be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NFSResourceConfig'\n              examples: { }\n        '400':\n          description: Invalid input parameters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      description: Creates a new NFS export\n    parameters: [ ]\n  '/api/v2/nfs/{name}':\n    parameters:\n      - schema:\n          type: string\n        name: name\n        in: path\n        required: true\n        description: Name of the NFS export\n    get:\n      summary: Gets an NFS export\n      tags:\n        - nfs\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NFSResourceConfig'\n        '404':\n          $ref: '#/components/responses/ExportNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nfsGet\n      description: Gets details and status information about an NFS export.\n    delete:\n      tags:\n        - nfs\n      summary: ''\n      operationId: nfsDelete\n      responses:\n        '200':\n          description: The export was deleted. The body is empty.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: 'Delete an NFS export, including all its volumes.'\n  '/api/v2/nfs/{name}/start':\n    parameters:\n      - schema:\n          type: string\n        name: name\n        in: path\n        required: true\n        description: Name of the NFS export\n    post:\n      summary: Starts an NFS export\n      tags:\n        - nfs\n      responses:\n        '200':\n          description: The export was successfully started. Returns the resource config of the started export.\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The URL to the NFS export\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NFSResourceConfig'\n        '404':\n          $ref: '#/components/responses/ExportNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nfsStart\n      description: 'Starts an NFS export. This is only possible if the export is currently stopped, otherwise this operation does nothing.'\n  '/api/v2/nfs/{name}/stop':\n    parameters:\n      - schema:\n          type: string\n        name: name\n        in: path\n        required: true\n        description: Name of the NFS export\n    post:\n      summary: Stops an NFS export\n      tags:\n        - nfs\n      responses:\n        '200':\n          description: The export was successfully stopped. Returns the resource config of the stopped export.\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The URL to the NFS export\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NFSResourceConfig'\n        '404':\n          $ref: '#/components/responses/ExportNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nfsStop\n      description: 'Stops an NFS export. Stopping an export makes it unavailable to its consumers while not fully deleting it. This is only possible if the export is currently started, otherwise this operation does nothing.'\n  '/api/v2/nfs/{name}/{volume}':\n    parameters:\n      - schema:\n          type: string\n        name: name\n        in: path\n        required: true\n        description: Name of the NFS export\n      - schema:\n          type: string\n        name: volume\n        in: path\n        required: true\n        description: Volume ID\n    get:\n      summary: Gets a volume of an NFS export\n      tags:\n        - nfs\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeConfig'\n        '400':\n          description: Invalid volume ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          $ref: '#/components/responses/ExportNotFound'\n      operationId: nfsGetVolume\n      description: Gets information about a single volume of an NFS export\n    delete:\n      tags:\n        - nfs\n      summary: Deletes a volume of an NFS export\n      operationId: nfsDeleteVolume\n      responses:\n        '200':\n          description: The volume was deleted. The body is empty.\n        '404':\n          $ref: '#/components/responses/ExportNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: Deletes a single volume from an NFS export. The export must be stopped before this operation can be executed.\n  /api/v2/nvme-of:\n    get:\n      summary: Lists all NVMe-oF targets\n      tags:\n        - nvme-of\n      responses:\n        '200':\n          description: List of targets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NvmeOfResourceConfig'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nvmeOfList\n      description: Lists all NVMe-oF targets created by LINSTOR Gateway\n    post:\n      tags:\n        - nvme-of\n      summary: Creates a new NVMe-oF target\n      operationId: nvmeOfCreate\n      responses:\n        '201':\n          description: Created\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The URL to the newly created target\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NvmeOfResourceConfig'\n        '400':\n          description: Invalid parameters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      description: Creates a new NVMe-oF target\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NvmeOfResourceConfig'\n  '/api/v2/nvme-of/{nqn}':\n    parameters:\n      - schema:\n          type: string\n        name: nqn\n        in: path\n        required: true\n        description: The NQN of the target\n    get:\n      summary: Get an NVMe-oF target\n      tags:\n        - nvme-of\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NvmeOfResourceConfig'\n        '400':\n          $ref: '#/components/responses/InvalidNQN'\n        '404':\n          $ref: '#/components/responses/NQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nvmeOfGet\n      description: Get information about a single NVMe-oF target\n    delete:\n      summary: Delete an NVMe-oF target\n      operationId: nvmeOfDelete\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/InvalidNQN'\n        '404':\n          $ref: '#/components/responses/NQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: 'Deletes an NVMe-oF target, along with all its volumes.'\n      tags:\n        - nvme-of\n  '/api/v2/nvme-of/{nqn}/start':\n    parameters:\n      - schema:\n          type: string\n        name: nqn\n        in: path\n        required: true\n        description: The NQN of the target\n    post:\n      summary: Starts an NVMe-oF target\n      tags:\n        - nvme-of\n      responses:\n        '200':\n          description: OK\n          headers:\n            Location:\n              schema:\n                type: string\n              description: URL to the started NVMe-oF target\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NvmeOfResourceConfig'\n        '400':\n          $ref: '#/components/responses/InvalidNQN'\n        '404':\n          $ref: '#/components/responses/NQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nvmeOfStart\n      description: 'Starts an NVMe-oF target. This is only possible if the target is currently stopped, otherwise this operation does nothing.'\n  '/api/v2/nvme-of/{nqn}/stop':\n    parameters:\n      - schema:\n          type: string\n        name: nqn\n        in: path\n        required: true\n        description: The NQN of the target\n    post:\n      summary: Stops an NVMe-oF target\n      tags:\n        - nvme-of\n      responses:\n        '200':\n          description: OK\n          headers:\n            Location:\n              schema:\n                type: string\n              description: URL to the stopped NVMe-oF target\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NvmeOfResourceConfig'\n        '400':\n          $ref: '#/components/responses/InvalidNQN'\n        '404':\n          $ref: '#/components/responses/NQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nvmeOfStop\n      description: 'Stops an NVMe-oF target. This is only possible if the target is currently started, otherwise this operation does nothing.'\n  '/api/v2/nvme-of/{nqn}/{nsid}':\n    parameters:\n      - schema:\n          type: string\n        name: nqn\n        in: path\n        required: true\n        description: The NQN of the target\n      - schema:\n          type: number\n        name: nsid\n        in: path\n        required: true\n        description: The ID of the namespace\n    get:\n      summary: Delete ad\n      tags:\n        - nvme-of\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeConfig'\n        '400':\n          $ref: '#/components/responses/InvalidNQN'\n        '404':\n          $ref: '#/components/responses/NQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: nvmeOfGetVolume\n      description: Gets a single volume from an NVMe-oF target\n    post:\n      tags:\n        - nvme-of\n      summary: Add a volume to an NVMe-oF target\n      operationId: nvmeOfAddVolume\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeConfig'\n        '400':\n          $ref: '#/components/responses/InvalidNQN'\n        '404':\n          description: Not Found\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: 'Adds a volume to an existing NVMe-oF target. The target must be stopped before executing this operation, or it will fail.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VolumeConfig'\n        description: The new volume\n    delete:\n      summary: Delete a volume from an NVMe-oF target\n      operationId: nvmeOfVolumeDelete\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/InvalidNQN'\n        '404':\n          $ref: '#/components/responses/NQNNotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      description: 'Deletes a volume from an existing NVMe-oF target. The target must be stopped before executing this operation, or it will fail.'\n      tags:\n        - nvme-of\ncomponents:\n  schemas:\n    IQN:\n      type: string\n    NQN:\n      type: string\n      title: NQN\n      x-examples: { }\n      description: ''\n    IPCidr:\n      type: string\n    ResourceState:\n      type: string\n      enum:\n        - OK\n        - Degraded\n        - Bad\n    ServiceState:\n      type: string\n      enum:\n        - Started\n        - Stopped\n    VolumeState:\n      type: object\n      properties:\n        number:\n          type: number\n        state:\n          $ref: '#/components/schemas/ResourceState'\n    ResourceStatus:\n      type: object\n      properties:\n        state:\n          $ref: '#/components/schemas/ResourceState'\n        service:\n          $ref: '#/components/schemas/ServiceState'\n        primary:\n          type: string\n        nodes:\n          type: array\n          items:\n            type: string\n        volumes:\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeState'\n    VolumeConfig:\n      type: object\n      properties:\n        number:\n          type: integer\n        size_kib:\n          type: integer\n          example: 1048576\n    ISCSIResourceConfig:\n      type: object\n      required:\n        - iqn\n        - resource_group\n        - volumes\n        - service_ips\n      properties:\n        iqn:\n          $ref: '#/components/schemas/IQN'\n        allowed_initiators:\n          type: array\n          items:\n            $ref: '#/components/schemas/IQN'\n        resource_group:\n          type: string\n        volumes:\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeConfig'\n        username:\n          type: string\n        password:\n          type: string\n        service_ips:\n          type: array\n          items:\n            $ref: '#/components/schemas/IPCidr'\n        status:\n          $ref: '#/components/schemas/ResourceStatus'\n    NFSResourceConfig:\n      type: object\n      properties:\n        name:\n          type: string\n        service_ip:\n          $ref: '#/components/schemas/IPCidr'\n        allowed_ips:\n          type: array\n          items:\n            $ref: '#/components/schemas/IPCidr'\n        resource_group:\n          type: string\n        volumes:\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeConfig'\n        status:\n          $ref: '#/components/schemas/ResourceStatus'\n    Error:\n      title: Error\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      x-examples:\n        example:\n          code: Internal Server Error\n          message: Something went wrong\n    NvmeOfResourceConfig:\n      title: NvmeOfResourceConfig\n      type: object\n      properties:\n        nqn:\n          $ref: '#/components/schemas/NQN'\n        service_ip:\n          $ref: '#/components/schemas/IPCidr'\n        resource_group:\n          type: string\n        volumes:\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeConfig'\n        status:\n          $ref: '#/components/schemas/ResourceStatus'\n  responses:\n    InvalidIQN:\n      description: The given IQN has an invalid format.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    IQNNotFound:\n      description: No iSCSI target with the given IQN can be found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalServerError:\n      description: Some error occurred\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    ExportNotFound:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NQNNotFound:\n      description: No NVMe-oF target with the given NQN can be found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidNQN:\n      description: The given NQN has an invalid format.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  parameters:\n    IQN:\n      name: iqn\n      in: path\n      required: true\n      schema:\n        type: string\n      description: IQN of the target\n      example: 'iqn.1998-06.com.linbit:vmstorage'\n    LUN:\n      name: lun\n      in: path\n      required: true\n      schema:\n        type: integer\n      description: Logical unit number\n      example: 0\ntags:\n  - name: iscsi\n  - name: nfs\n  - name: nvme-of",
			"canonicalURL": "/github.com/LINBIT/linstor-gateway@89b1c5c5cbfcafa4edef89f9bdd1203d47f7baae/-/blob/docs/rest_v2_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/LINBIT/linstor-gateway/blob/89b1c5c5cbfcafa4edef89f9bdd1203d47f7baae/docs/rest_v2_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}