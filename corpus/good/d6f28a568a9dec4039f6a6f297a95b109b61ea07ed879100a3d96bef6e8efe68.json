{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/validator-badge"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "src/main/swagger/swagger.yaml",
			"byteSize": 4688,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: Swagger Validator Badge\n  description: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition\n  version: 2.0.9-SNAPSHOT\nservers:\n- url: \"/\"\npaths:\n  \"/\":\n    get:\n      tags:\n      - Validator\n      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a valid/invalid badge\n      description: |\n        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided via `url` parameter\n        returning a valid/invalid badge\n      operationId: validateByUrl\n      parameters:\n      - name: url\n        in: query\n        description: A URL to the definition\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: result of validation as valid/invalid badge\n          content:\n            \"image/png\":\n              schema:\n                type: string\n                format: binary\n    post:\n      tags:\n      - Validator\n      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a valid/invalid badge\n      description: |\n        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided in request body\n        returning a valid/invalid badge\n      operationId: validateByContent\n      requestBody:\n        description: the specification to validate\n        content:\n          \"application/yaml\":\n            schema:\n              type: object\n          \"application/json\":\n            schema:\n              type: object\n        required: true\n      responses:\n        '200':\n          description: result of validation as valid/invalid badge\n          content:\n            \"image/png\":\n              schema:\n                type: string\n                format: binary\n  \"/debug\":\n    get:\n      tags:\n      - Validator\n      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a validation response\n      description: |\n        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided via `url` parameter\n        returning a validation response containing any found validation errors\n      operationId: reviewByUrl\n      parameters:\n      - name: url\n        in: query\n        description: A URL to the definition\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: result of validation as a validation response\n          content:\n            \"application/yaml\":\n              schema:\n                $ref: '#/components/schemas/ValidationResponse'\n            \"application/json\":\n              schema:\n                $ref: '#/components/schemas/ValidationResponse'\n    post:\n      tags:\n      - Validator\n      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a validation response\n      description: |\n        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided via request body\n        returning a validation response containing any found validation errors\n      operationId: reviewByContent\n      requestBody:\n        description: the specification to validate\n        content:\n          \"application/json\":\n            schema:\n              type: object\n          \"application/yaml\":\n            schema:\n              type: object\n        required: true\n      responses:\n        '200':\n          description: result of validation as a validation response\n          content:\n            \"application/yaml\":\n              schema:\n                $ref: '#/components/schemas/ValidationResponse'\n            \"application/json\":\n              schema:\n                $ref: '#/components/schemas/ValidationResponse'\ncomponents:\n  schemas:\n    Instance:\n      type: object\n      properties:\n        pointer:\n          type: string\n    Schema:\n      type: object\n      properties:\n        loadingURI:\n          type: string\n        pointer:\n          type: string\n    SchemaValidationError:\n      type: object\n      properties:\n        level:\n          type: string\n        domain:\n          type: string\n        keyword:\n          type: string\n        message:\n          type: string\n        schema:\n          $ref: '#/components/schemas/Schema'\n        instance:\n          $ref: '#/components/schemas/Instance'\n        required:\n          type: array\n          items:\n            type: string\n        missing:\n          type: array\n          items:\n            type: string\n    ValidationResponse:\n      type: object\n      properties:\n        messages:\n          type: array\n          items:\n            type: string\n        schemaValidationMessages:\n          type: array\n          items:\n            $ref: '#/components/schemas/SchemaValidationError'\n",
			"canonicalURL": "/github.com/swagger-api/validator-badge@3849b44117f7de2ac6a4f32cc7cfd1d0425fda22/-/blob/src/main/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/validator-badge/blob/3849b44117f7de2ac6a4f32cc7cfd1d0425fda22/src/main/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}