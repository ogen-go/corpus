{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HristoKolev/TvDbSharper"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "test/GenerateDto/swagger.yml",
			"byteSize": 102276,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api).\n    ## Authentication\n    1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call.\n    2. Executing this call will provide you with a bearer token, which is valid for 1 month.\n    3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`\n  title: TVDB API V4\n  version: 4.5.0\nsecurity:\n  - bearerAuth: []\npaths:\n  /login:\n    post:\n      summary: create an auth token. The token has one month valition length.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - apikey\n              properties:\n                apikey:\n                  type: string\n                pin:\n                  type: string\n        required: true\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      token:\n                        type: string\n                    type: object\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: invalid credentials\n      tags:\n        - Login\n  '/artwork/{id}':\n    get:\n      description: Returns a single artwork base record.\n      operationId: getArtworkBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ArtworkBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid artwork id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Artwork not found\n      tags:\n        - Artwork\n\n  '/artwork/{id}/extended':\n    get:\n      description: Returns a single artwork extended record.\n      operationId: getArtworkExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ArtworkExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid artwork id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Artwork not found\n      tags:\n        - Artwork\n\n  '/artwork/statuses':\n    get:\n      description: Returns list of artwork status records.\n      operationId: getAllArtworkStatuses\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/ArtworkStatus'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Artwork Statuses\n\n  '/artwork/types':\n    get:\n      description: Returns a list of artworkType records\n      operationId: getAllArtworkTypes\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/ArtworkType'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Artwork Types\n\n  /awards:\n    get:\n      description: Returns a list of award base records\n      operationId: getAllAwards\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/AwardBaseRecord'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Awards\n\n  '/awards/{id}':\n    get:\n      description: Returns a single award base record\n      operationId: getAward\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/AwardBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid awards id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Awards not found\n      tags:\n        - Awards\n\n  '/awards/{id}/extended':\n    get:\n      description: Returns a single award extended record\n      operationId: getAwardExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/AwardExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid awards id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Awards not found\n      tags:\n        - Awards\n\n  '/awards/categories/{id}':\n    get:\n      description: Returns a single award category base record\n      operationId: getAwardCategory\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/AwardCategoryBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid category id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Category not found\n      tags:\n        - Award Categories\n\n  '/awards/categories/{id}/extended':\n    get:\n      description: Returns a single award category extended record\n      operationId: getAwardCategoryExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/AwardCategoryExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid category id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Category not found\n      tags:\n        - Award Categories\n\n  '/characters/{id}':\n    get:\n      description: Returns character base record\n      operationId: getCharacterBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Character'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid character id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Character not found\n      tags:\n        - Characters\n  /companies:\n    get:\n      description: returns a paginated list of company records\n      operationId: getAllCompanies\n      parameters:\n        - description: name\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Company'\n                    type: array\n                  status:\n                    type: string\n                  links:\n                    $ref: '#/components/schemas/Links'\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Companies\n  '/companies/types':\n    get:\n      description: returns all company type records\n      operationId: getCompanyTypes\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CompanyType'\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Companies\n  '/companies/{id}':\n    get:\n      description: returns a company record\n      operationId: getCompany\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Company'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid company id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Company not found\n      tags:\n        - Companies\n  /content/ratings:\n    get:\n      description: returns list content rating records\n      operationId: getAllContentRatings\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/ContentRating'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Content Ratings\n  /countries:\n    get:\n      description: returns list of country records\n      operationId: getAllCountries\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Country'\n                    type: array\n                  status:\n                    type: string\n                type: object\n      tags:\n        - Countries\n  '/entities':\n    get:\n      description: returns the active entity types\n      operationId: getEntityTypes\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/EntityType'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Entity Types\n  '/episodes/{id}':\n    get:\n      description: Returns episode base record\n      operationId: getEpisodeBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/EpisodeBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid episode id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Episode not found\n      tags:\n        - Episodes\n  '/episodes/{id}/extended':\n    get:\n      description: Returns episode extended record\n      operationId: getEpisodeExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: meta\n          in: query\n          name: meta\n          required: false\n          schema:\n            type: string\n            enum: [translations]\n            example: translations\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/EpisodeExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid episode id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Episode not found\n      tags:\n        - Episodes\n  '/episodes/{id}/translations/{language}':\n    get:\n      description: Returns episode translation record\n      operationId: getEpisodeTranslation\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: language\n          in: path\n          name: language\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Translation'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid episode id. Invalid language.\n        '401':\n          description: Unauthorized\n        '404':\n          description: Episode not found\n      tags:\n        - Episodes\n\n  /genders:\n    get:\n      description: returns list of gender records\n      operationId: getAllGenders\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Gender'\n                    type: array\n                  status:\n                    type: string\n                type: object\n      tags:\n        - Genders\n\n  /genres:\n    get:\n      description: returns list of genre records\n      operationId: getAllGenres\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/GenreBaseRecord'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n\n      tags:\n        - Genres\n\n  '/genres/{id}':\n    get:\n      description: Returns genre record\n      operationId: getGenreBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/GenreBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid genre id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Genre not found\n      tags:\n        - Genres\n  /inspiration/types:\n    get:\n      description: returns list of inspiration types records\n      operationId: getAllInspirationTypes\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/InspirationType'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - InspirationTypes\n  /languages:\n    get:\n      description: returns list of language records\n      operationId: getAllLanguages\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Language'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Languages\n  /lists:\n    get:\n      description: returns list of list base records\n      operationId: getAllLists\n      parameters:\n        - description: page number\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/ListBaseRecord'\n                    type: array\n                  status:\n                    type: string\n                  links:\n                    $ref: '#/components/schemas/Links'\n        '401':\n          description: Unauthorized\n      tags:\n        - Lists\n\n  '/lists/{id}':\n    get:\n      description: returns an list base record\n      operationId: getList\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ListBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid list id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Lists not found\n      tags:\n        - Lists\n  '/lists/{id}/extended':\n    get:\n      description: returns a list extended record\n      operationId: getListExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ListExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid list id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Lists not found\n      tags:\n        - Lists\n  '/lists/{id}/translations/{language}':\n    get:\n      description: Returns list translation record\n      operationId: getListTranslation\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: language\n          in: path\n          name: language\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Translation'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid lists id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Lists not found\n      tags:\n        - Lists\n\n  /movies:\n    get:\n      description: returns list of movie base records\n      operationId: getAllMovie\n      parameters:\n        - description: page number\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/MovieBaseRecord'\n                    type: array\n                  status:\n                    type: string\n                  links:\n                    $ref: '#/components/schemas/Links'\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Movies\n  '/movies/{id}':\n    get:\n      description: Returns movie base record\n      operationId: getMovieBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/MovieBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid movie id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Movie not found\n      tags:\n        - Movies\n  '/movies/{id}/extended':\n    get:\n      description: Returns movie extended record\n      operationId: getMovieExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: meta\n          in: query\n          name: meta\n          required: false\n          schema:\n            type: string\n            enum: [translations]\n            example: translations\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/MovieExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid movie id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Movie not found\n      tags:\n        - Movies\n  '/movies/filter':\n    get:\n      description: Search movies based on filter parameters\n      operationId: getMoviesFilter\n      parameters:\n        - description: production company\n          in: query\n          name: company\n          required: false\n          schema:\n            type: number\n            example: 1\n        - description: content rating id base on a country\n          in: query\n          name: contentRating\n          required: false\n          schema:\n            type: number\n            example: 245\n        - description: country of origin\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            example: usa\n        - description: genre\n          in: query\n          name: genre\n          required: false\n          schema:\n            type: number\n            example: 3\n            enum: [ 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36 ]\n        - description: original language\n          in: query\n          name: lang\n          required: true\n          schema:\n            type: string\n            example: eng\n        - description: sort by results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum: [ score,firstAired,name ]\n        - description: status\n          in: query\n          name: status\n          required: false\n          schema:\n            type: number\n            enum: [ 1,2,3 ]\n        - description: release year\n          in: query\n          name: year\n          required: false\n          schema:\n            type: number\n            example: 2020\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/MovieBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid format parameter.\n        '401':\n          description: Unauthorized\n      tags:\n        - Movies\n  '/movies/{id}/translations/{language}':\n    get:\n      description: Returns movie translation record\n      operationId: getMovieTranslation\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: language\n          in: path\n          name: language\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Translation'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid movie id, invalid language.\n        '401':\n          description: Unauthorized\n        '404':\n          description: Movie not found\n      tags:\n        - Movies\n  /movies/statuses:\n    get:\n      description: returns list of status records\n      operationId: getAllMovieStatuses\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Status'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Movie Statuses\n\n  '/people/{id}':\n    get:\n      description: Returns people base record\n      operationId: getPeopleBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/PeopleBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid people id\n        '401':\n          description: Unauthorized\n        '404':\n          description: People not found\n      tags:\n        - People\n  '/people/{id}/extended':\n    get:\n      description: Returns people extended record\n      operationId: getPeopleExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: meta\n          in: query\n          name: meta\n          required: false\n          schema:\n            type: string\n            enum: [translations]\n            example: translations\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/PeopleExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid people id\n        '401':\n          description: Unauthorized\n        '404':\n          description: People not found\n      tags:\n        - People\n  '/people/{id}/translations/{language}':\n    get:\n      description: Returns people translation record\n      operationId: getPeopleTranslation\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: language\n          in: path\n          name: language\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Translation'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid people id, invalid language.\n        '401':\n          description: Unauthorized\n        '404':\n          description: People not found\n      tags:\n        - People\n  /people/types:\n    get:\n      description: returns list of peopleType records\n      operationId: getAllPeopleTypes\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/PeopleType'\n                    type: array\n                  status:\n                    type: string\n                type: object\n      tags:\n        - People Types\n\n  /search:\n    get:\n      description: Our search index includes series, movies, people, and companies.\n      operationId: getSearchResults\n      parameters:\n        - description: The primary search string, which can include the main title for a record including all translations and aliases.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Alias of the \"query\" parameter.  Recommend using query instead as this field will eventually be deprecated.\n          in: query\n          name: q\n          schema:\n            type: string\n        - description: Restrict results to a specific entity type.  Can be movie, series, person, or company.\n          in: query\n          name: type\n          schema:\n            type: string\n        - description: Restrict results to a specific year. Currently only used for series and movies.\n          in: query\n          name: year\n          schema:\n            type: number\n        - description: Restrict results to a specific company (original network, production company, studio, etc).  As an example, \"The Walking Dead\" would have companies of \"AMC\", \"AMC+\", and \"Disney+\".\n          in: query\n          name: company\n          schema:\n            type: string\n        - description: Restrict results to a specific country of origin. Should contain a 3 character country code. Currently only used for series and movies.\n          in: query\n          name: country\n          schema:\n            type: string\n        - description: Restrict results to a specific director.  Generally only used for movies.  Should include the full name of the director, such as \"Steven Spielberg\".\n          in: query\n          name: director\n          schema:\n            type: string\n        - description: Restrict results to a specific primary language.  Should include the 3 character language code.  Currently only used for series and movies.\n          in: query\n          name: language\n          schema:\n            type: string\n        - description: Restrict results to a specific type of company.  Should include the full name of the type of company, such as \"Production Company\".  Only used for companies.\n          in: query\n          name: primaryType\n          schema:\n            type: string\n        - description: Restrict results to a specific network.  Used for TV and TV movies, and functions the same as the company parameter with more specificity.\n          in: query\n          name: network\n          schema:\n            type: string\n\n\n        - description: Search for a specific remote id.  Allows searching for an IMDB or EIDR id, for example.\n          in: query\n          name: remote_id\n          schema:\n            type: string\n\n        - description: Offset results.\n          in: query\n          name: offset\n          schema:\n            type: number\n        - description: Limit results.\n          in: query\n          name: limit\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/SearchResult'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Search\n  /seasons:\n    get:\n      description: returns list of seasons base records\n      operationId: getAllSeasons\n      parameters:\n        - description: page number\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/SeasonBaseRecord'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Seasons\n  '/seasons/{id}':\n    get:\n      description: Returns season base record\n      operationId: getSeasonBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SeasonBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid season id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Season not found\n      tags:\n        - Seasons\n  '/seasons/{id}/extended':\n    get:\n      description: Returns season extended record\n      operationId: getSeasonExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SeasonExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid seasons id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Season not found\n      tags:\n        - Seasons\n  '/seasons/types':\n    get:\n      description: Returns season type records\n      operationId: getSeasonTypes\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/SeasonType'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Seasons\n  '/seasons/{id}/translations/{language}':\n    get:\n      description: Returns season translation record\n      operationId: getSeasonTranslation\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: language\n          in: path\n          name: language\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Translation'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid season id, language not found.\n        '401':\n          description: Unauthorized\n        '404':\n          description: Season not found\n      tags:\n        - Seasons\n  /series:\n    get:\n      description: returns list of series base records\n      operationId: getAllSeries\n      parameters:\n        - description: page number\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/SeriesBaseRecord'\n                    type: array\n                  status:\n                    type: string\n                  links:\n                    $ref: '#/components/schemas/Links'\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Series\n  '/series/{id}':\n    get:\n      description: Returns series base record\n      operationId: getSeriesBase\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SeriesBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid sereis id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Sereis not found\n      tags:\n        - Series\n  '/series/{id}/artworks':\n    get:\n      description: Returns series artworks base on language and type.\n      operationId: getSeriesArtworks\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: lang\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            example: eng, spa\n        - description: type\n          in: query\n          name: type\n          required: false\n          schema:\n            type: integer\n            example: 1\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SeriesExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid series id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Series not found\n      tags:\n        - Series\n  '/series/{id}/extended':\n    get:\n      description: Returns series extended record\n      operationId: getSeriesExtended\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: meta\n          in: query\n          name: meta\n          required: false\n          schema:\n            type: string\n            enum: [translations, episodes]\n            example: translations\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SeriesExtendedRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid series id\n        '401':\n          description: Unauthorized\n        '404':\n          description: Series not found\n      tags:\n        - Series\n  '/series/{id}/episodes/{season-type}':\n    get:\n      description: Returns series episodes from the specified season type, default returns the episodes in the series default season type\n      operationId: getSeriesEpisodes\n      parameters:\n        - in: query\n          name: page\n          required: true\n          schema:\n            type: integer\n            default: 0\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: season-type\n          in: path\n          name: season-type\n          required: true\n          schema:\n            type: string\n          examples:\n            default:\n              value: default\n            official:\n              value: official\n            dvd:\n              value: dvd\n            absolute:\n              value: absolute\n            alternate:\n              value: alternate\n            regional:\n              value: regional\n        - in: query\n          name: season\n          required: false\n          schema:\n            type: integer\n            default: 0\n        - in: query\n          name: episodeNumber\n          required: false\n          schema:\n            type: integer\n            default: 0\n        - description: airDate of the episode, format is yyyy-mm-dd\n          in: query\n          name: airDate\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      series:\n                        $ref: '#/components/schemas/SeriesBaseRecord'\n                      episodes:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/EpisodeBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid series id, episodeNumber is not null then season must be present\n        '401':\n          description: Unauthorized\n        '404':\n          description: Series not found\n      tags:\n        - Series\n  '/series/{id}/episodes/{season-type}/{lang}':\n    get:\n      description: Returns series base record with episodes from the specified season type and language. Default returns the episodes in the series default season type.\n      operationId: getSeriesSeasonEpisodesTranslated\n      parameters:\n        - in: query\n          name: page\n          required: true\n          schema:\n            type: integer\n            default: 0\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: season-type\n          in: path\n          name: season-type\n          required: true\n          schema:\n            type: string\n          examples:\n            default:\n              value: default\n            official:\n              value: official\n            dvd:\n              value: dvd\n            absolute:\n              value: absolute\n            alternate:\n              value: alternate\n            regional:\n              value: regional\n        - in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      series:\n                        $ref: '#/components/schemas/SeriesBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid series id, invalid language.\n        '401':\n          description: Unauthorized\n        '404':\n          description: Series not found\n      tags:\n        - Series\n  '/series/filter':\n    get:\n      description: Search series based on filter parameters\n      operationId: getSeriesFilter\n      parameters:\n        - description: production company\n          in: query\n          name: company\n          required: false\n          schema:\n            type: number\n            example: 1\n        - description: content rating id base on a country\n          in: query\n          name: contentRating\n          required: false\n          schema:\n            type: number\n            example: 245\n        - description: country of origin\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            example: usa\n        - description: genre\n          in: query\n          name: genre\n          required: false\n          schema:\n            type: number\n            example: 3\n            enum: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]\n        - description: original language\n          in: query\n          name: lang\n          required: true\n          schema:\n            type: string\n            example : eng\n        - description: sort by results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum: [score,firstAired,name]\n        - description: status\n          in: query\n          name: status\n          required: false\n          schema:\n            type: number\n            enum: [1,2,3]\n        - description: release year\n          in: query\n          name: year\n          required: false\n          schema:\n            type: number\n            example: 2020\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SeriesBaseRecord'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid format parameter.\n        '401':\n          description: Unauthorized\n      tags:\n        - Series\n  '/series/{id}/translations/{language}':\n    get:\n      description: Returns series translation record\n      operationId: getSeriesTranslation\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: number\n        - description: language\n          in: path\n          name: language\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Translation'\n                  status:\n                    type: string\n                type: object\n        '400':\n          description: Invalid series id, invalid language.\n        '401':\n          description: Unauthorized\n        '404':\n          description: Series not found\n      tags:\n        - Series\n  /series/statuses:\n    get:\n      description: returns list of status records\n      operationId: getAllSeriesStatuses\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Status'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Series Statuses\n  /sources/types:\n    get:\n      description: returns list of sourceType records\n      operationId: getAllSourceTypes\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/SourceType'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n      tags:\n        - Source Types\n  /updates:\n    get:\n      description: returns updated entities\n      operationId: updates\n      parameters:\n        - in: query\n          name: since\n          required: true\n          schema:\n            type: number\n        - in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum: [ artwork,award_nominees,companies,episodes,lists,people,seasons,series,seriespeople,artworktypes,award_categories,awards,company_types,content_ratings,countries,entity_types,genres,languages,movies,movie_genres,movie_status,peopletypes,seasontypes,sourcetypes,tag_options,tags,translatedcharacters,translatedcompanies,translatedepisodes,translatedlists,translatedmovies,translatedpeople,translatedseasons,translatedserierk ]\n            example: movies\n        - in: query\n          name: action\n          required: false\n          schema:\n            type: string\n            enum: [ delete, update ]\n            example: movies\n        - description: name\n          in: query\n          name: page\n          schema:\n            type: number\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/EntityUpdate'\n                    type: array\n                  status:\n                    type: string\n                  links:\n                    $ref: '#/components/schemas/Links'\n                type: object\n        '400':\n          description: Invalid since, type param.\n        '401':\n          description: Unauthorized\n\n      tags:\n        - Updates\n  /user/favorites:\n    get:\n      description: returns user favorites\n      operationId: getUserFavorites\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Favorites'\n                    type: array\n                  status:\n                    type: string\n                type: object\n        '401':\n          description: Unauthorized\n\n      tags:\n        - Favorites\n    post:\n      description: creates a new user favorite\n      operationId: createUserFavorites\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FavoriteRecord'\n      responses:\n        '200':\n          description: Ok\n        '400':\n          description: Bad format\n        '401':\n          description: Unauthorized\n\n      tags:\n        - Favorites\n\nservers:\n  - url: 'https://api4.thetvdb.com/v4'\ncomponents:\n  securitySchemes:\n    bearerAuth:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Alias:\n      description: An alias model, which can be associated with a series, season, movie, person, or list.\n      properties:\n        language:\n          type: string\n          maximum: 4\n          description: A 3-4 character string indicating the language of the alias, as defined in Language.\n        name:\n          type: string\n          maximum: 100\n          description: A string containing the alias itself.\n      type: object\n    ArtworkBaseRecord:\n      description: base artwork record\n      properties:\n        id:\n          type: integer\n        image:\n          type: string\n          x-go-name: Image\n        language:\n          type: string\n        score:\n          type: number\n        thumbnail:\n          type: string\n          x-go-name: Thumbnail\n        type:\n          format: int64\n          type: integer\n          x-go-name: Type\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    ArtworkExtendedRecord:\n      description: extended artwork record\n      properties:\n        episodeId:\n          type: integer\n        height:\n          format: int64\n          type: integer\n          x-go-name: Height\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n          x-go-name: Image\n        language:\n          type: string\n        movieId:\n          type: integer\n        networkId:\n          type: integer\n        peopleId:\n          type: integer\n        score:\n          type: number\n        seasonId:\n          type: integer\n        seriesId:\n          type: integer\n        seriesPeopleId:\n          type: integer\n        status:\n          $ref: '#/components/schemas/ArtworkStatus'\n        tagOptions:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n        thumbnail:\n          type: string\n          x-go-name: Thumbnail\n        thumbnailHeight:\n          format: int64\n          type: integer\n          x-go-name: ThumbnailHeight\n        thumbnailWidth:\n          format: int64\n          type: integer\n          x-go-name: ThumbnailWidth\n        type:\n          format: int64\n          type: integer\n          x-go-name: Type\n        updatedAt:\n          format: int64\n          type: integer\n          x-go-name: UpdatedAt\n        width:\n          format: int64\n          type: integer\n          x-go-name: Width\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    ArtworkStatus:\n      description: artwork status record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    ArtworkType:\n      description: artwork type record\n      properties:\n        height:\n          format: int64\n          type: integer\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        imageFormat:\n          type: string\n          x-go-name: ImageFormat\n        name:\n          type: string\n          x-go-name: Name\n        recordType:\n          type: string\n          x-go-name: RecordType\n        slug:\n          type: string\n          x-go-name: Slug\n        thumbHeight:\n          format: int64\n          type: integer\n          x-go-name: ThumbHeight\n        thumbWidth:\n          format: int64\n          type: integer\n          x-go-name: ThumbWidth\n        width:\n          format: int64\n          type: integer\n          x-go-name: Width\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    AwardBaseRecord:\n      description: base award record\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    AwardCategoryBaseRecord:\n      description: base award category record\n      properties:\n        allowCoNominees:\n          type: boolean\n          x-go-name: AllowCoNominees\n        award:\n          $ref: '#/components/schemas/AwardBaseRecord'\n        forMovies:\n          type: boolean\n          x-go-name: ForMovies\n        forSeries:\n          type: boolean\n          x-go-name: ForSeries\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    AwardCategoryExtendedRecord:\n      description: extended award category record\n      properties:\n        allowCoNominees:\n          type: boolean\n          x-go-name: AllowCoNominees\n        award:\n          $ref: '#/components/schemas/AwardBaseRecord'\n        forMovies:\n          type: boolean\n          x-go-name: ForMovies\n        forSeries:\n          type: boolean\n          x-go-name: ForSeries\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n        nominees:\n          items:\n            $ref: '#/components/schemas/AwardNomineeBaseRecord'\n          type: array\n          x-go-name: Nominees\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    AwardExtendedRecord:\n      description: extended award record\n      properties:\n        categories:\n          items:\n            $ref: '#/components/schemas/AwardCategoryBaseRecord'\n          type: array\n          x-go-name: Categories\n        id:\n          type: integer\n        name:\n          type: string\n        score:\n          format: int64\n          type: integer\n          x-go-name: Score\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    AwardNomineeBaseRecord:\n      description: base award nominee record\n      properties:\n        character:\n          $ref: '#/components/schemas/Character'\n        details:\n          type: string\n        episode:\n          $ref: '#/components/schemas/EpisodeBaseRecord'\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        isWinner:\n          type: boolean\n          x-go-name: IsWinner\n        movie:\n          $ref: '#/components/schemas/MovieBaseRecord'\n        series:\n          $ref: '#/components/schemas/SeriesBaseRecord'\n        year:\n          type: string\n        category:\n          type: string\n        name:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Biography:\n      description: biography record\n      properties:\n        biography:\n          type: string\n          x-go-name: Biography\n        language:\n          type: string\n          x-go-name: Language\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Character:\n      description: character record\n      properties:\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        episodeId:\n          type: integer\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n        isFeatured:\n          type: boolean\n          x-go-name: IsFeatured\n        movieId:\n          type: integer\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        peopleId:\n          type: integer\n        personImgURL:\n          type: string\n        peopleType:\n          type: string\n        seriesId:\n          type: integer\n        sort:\n          format: int64\n          type: integer\n          x-go-name: Sort\n        tagOptions:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n        type:\n          format: int64\n          type: integer\n          x-go-name: Type\n        url:\n          type: string\n          x-go-name: URL\n        personName:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Company:\n      description: A company record\n      properties:\n        activeDate:\n          type: string\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        country:\n          type: string\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        inactiveDate:\n          type: string\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        primaryCompanyType:\n          format: int64\n          type: integer\n          x-go-name: PrimaryCompanyType\n        slug:\n          type: string\n          x-go-name: Slug\n        parentCompany:\n          type: object\n          $ref: '#/components/schemas/ParentCompany'\n        tagOptions:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    ParentCompany:\n      description: A parent company record\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        relation:\n          type: object\n          $ref: '#/components/schemas/CompanyRelationShip'\n    CompanyRelationShip:\n      description: A company relationship\n      properties:\n        id:\n          type: integer\n        typeName:\n          type: string\n    CompanyType:\n      description: A company type record\n      type: object\n      properties:\n        companyTypeId:\n          type: integer\n        companyTypeName:\n          type: string\n    ContentRating:\n      description: content rating record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        description:\n          type: string\n        country:\n          type: string\n        contentType:\n          type: string\n        order:\n          type: integer\n        fullName:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Country:\n      description: country record\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        shortCode:\n          type: string\n          x-go-name: ShortCode\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Entity:\n      description: Entity record\n      properties:\n        movieId:\n          type: integer\n        order:\n          format: int64\n          type: integer\n          x-go-name: Order\n        seriesId:\n          type: integer\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    EntityType:\n      description: Entity Type record\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n          x-go-name: Order\n        hasSpecials:\n          type: boolean\n      type: object\n    EntityUpdate:\n      description: entity update record\n      properties:\n        entityType:\n          type: string\n          x-go-name: EnitityType\n        method:\n          type: string\n          x-go-name: Method\n        recordId:\n          format: int64\n          type: integer\n          x-go-name: RecordID\n        timeStamp:\n          format: int64\n          type: integer\n          x-go-name: TimeStamp\n        seriesId:\n          description: Only present for episodes records\n          format: int64\n          type: integer\n          x-go-name: RecordID\n        mergeToId:\n          format: int64\n          type: integer\n        mergeToEntityType:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    EpisodeBaseRecord:\n      description: base episode record\n      properties:\n        aired:\n          type: string\n        airsAfterSeason:\n          type: integer\n        airsBeforeEpisode:\n          type: integer\n        airsBeforeSeason:\n          type: integer\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n        imageType:\n          type: integer\n        isMovie:\n          format: int64\n          type: integer\n          x-go-name: IsMovie\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        number:\n          type: integer\n        overview:\n          type: string\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        runtime:\n          type: integer\n        seasonNumber:\n          type: integer\n        seasons:\n          items:\n            $ref: '#/components/schemas/SeasonBaseRecord'\n          type: array\n          x-go-name: Seasons\n        seriesId:\n          format: int64\n          type: integer\n          x-go-name: SeriesID\n        seasonName:\n          type: string\n        lastUpdated:\n          type: string\n        finaleType:\n          description: season, midseason, or series\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    EpisodeExtendedRecord:\n      description: extended episode record\n      properties:\n        aired:\n          type: string\n        airsAfterSeason:\n          type: integer\n        airsBeforeEpisode:\n          type: integer\n        airsBeforeSeason:\n          type: integer\n        awards:\n          items:\n            $ref: '#/components/schemas/AwardBaseRecord'\n          type: array\n          x-go-name: Awards\n        characters:\n          items:\n            $ref: '#/components/schemas/Character'\n          type: array\n          x-go-name: Characters\n        companies:\n          items:\n            $ref: '#/components/schemas/Company'\n          type: array\n        contentRatings:\n          items:\n            $ref: '#/components/schemas/ContentRating'\n          type: array\n          x-go-name: ContentRatings\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n        imageType:\n          type: integer\n        isMovie:\n          format: int64\n          type: integer\n          x-go-name: IsMovie\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        network:\n          items:\n            $ref: '#/components/schemas/Company'\n          type: array\n        nominations:\n          items:\n            $ref: '#/components/schemas/AwardNomineeBaseRecord'\n          type: array\n          x-go-name: Nominees\n        number:\n          type: integer\n        overview:\n          type: string\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        productionCode:\n          type: string\n        remoteIds:\n          items:\n            $ref: '#/components/schemas/RemoteID'\n          type: array\n          x-go-name: RemoteIDs\n        runtime:\n          type: integer\n        seasonNumber:\n          type: integer\n        seasons:\n          items:\n            $ref: '#/components/schemas/SeasonBaseRecord'\n          type: array\n          x-go-name: Seasons\n        seriesId:\n          format: int64\n          type: integer\n          x-go-name: SeriesID\n        studios:\n          items:\n            $ref: '#/components/schemas/Company'\n          type: array\n        tagOptions:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n        trailers:\n          items:\n            $ref: '#/components/schemas/Trailer'\n          type: array\n          x-go-name: Trailers\n        lastUpdated:\n          type: string\n        finaleType:\n          description: season, midseason, or series\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Favorites:\n      description: User favorites record\n      properties:\n        series:\n          items:\n            type: integer\n          type: array\n          x-go-name: series\n        movies:\n          items:\n            type: integer\n          type: array\n          x-go-name: movies\n        episodes:\n          items:\n            type: integer\n          type: array\n          x-go-name: episodes\n        artwork:\n          items:\n            type: integer\n          type: array\n          x-go-name: artwork\n        people:\n          items:\n            type: integer\n          type: array\n          x-go-name: people\n        lists:\n          items:\n            type: integer\n          type: array\n          x-go-name: list\n    FavoriteRecord:\n      description: Favorites record\n      properties:\n        series:\n          type: integer\n          x-go-name: series\n        movies:\n          type: integer\n          x-go-name: movies\n        episodes:\n          type: integer\n          x-go-name: episodes\n        artwork:\n          type: integer\n          x-go-name: artwork\n        people:\n          type: integer\n          x-go-name: people\n        list:\n          type: integer\n          x-go-name: list\n    Gender:\n      description: gender record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    GenreBaseRecord:\n      description: base genre record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        slug:\n          type: string\n          x-go-name: Slug\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Language:\n      description: language record\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        nativeName:\n          type: string\n          x-go-name: NativeName\n        shortCode:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    ListBaseRecord:\n      description: base list record\n      properties:\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n        imageIsFallback:\n          type: boolean\n        isOfficial:\n          type: boolean\n          x-go-name: IsOfficial\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        overview:\n          type: string\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        url:\n          type: string\n        score:\n          type: integer\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    ListExtendedRecord:\n      description: extended list record\n      properties:\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        entities:\n          items:\n            $ref: '#/components/schemas/Entity'\n          type: array\n          x-go-name: Entities\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n        imageIsFallback:\n          type: boolean\n        isOfficial:\n          type: boolean\n          x-go-name: IsOfficial\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        overview:\n          type: string\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        score:\n          format: int64\n          type: integer\n          x-go-name: Score\n        url:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    MovieBaseRecord:\n      description: base movie record\n      properties:\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n          x-go-name: Image\n        name:\n          type: string\n          x-go-name: Name\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        score:\n          format: double\n          type: number\n          x-go-name: Score\n        slug:\n          type: string\n          x-go-name: Slug\n        status:\n          $ref: '#/components/schemas/Status'\n        runtime:\n          type: integer\n        lastUpdated:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    MovieExtendedRecord:\n      description: extended movie record\n      properties:\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        artworks:\n          items:\n            $ref: '#/components/schemas/ArtworkBaseRecord'\n          type: array\n          x-go-name: Artworks\n        audioLanguages:\n          items:\n            type: string\n          type: array\n          x-go-name: AudioLanguages\n        awards:\n          items:\n            $ref: '#/components/schemas/AwardBaseRecord'\n          type: array\n          x-go-name: Awards\n        boxOffice:\n          type: string\n        budget:\n          type: string\n        characters:\n          items:\n            $ref: '#/components/schemas/Character'\n          type: array\n          x-go-name: Characters\n        companies:\n          type: object\n          $ref: '#/components/schemas/Companies'\n        contentRatings:\n          items:\n            $ref: '#/components/schemas/ContentRating'\n          type: array\n        first_release:\n          type: object\n          $ref: '#/components/schemas/Release'\n        genres:\n          items:\n            $ref: '#/components/schemas/GenreBaseRecord'\n          type: array\n          x-go-name: Genres\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n          x-go-name: Image\n        inspirations:\n          items:\n            $ref: '#/components/schemas/Inspiration'\n          type: array\n          x-go-name: Inspirations\n        lastUpdated:\n          type: string\n        lists:\n          items:\n            $ref: '#/components/schemas/ListBaseRecord'\n          type: array\n        name:\n          type: string\n          x-go-name: Name\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        originalCountry:\n          type: string\n        originalLanguage:\n          type: string\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        production_countries:\n          items:\n            $ref: '#/components/schemas/ProductionCountry'\n          type: array\n          x-go-name: ProductionCountries\n        releases:\n          items:\n            $ref: '#/components/schemas/Release'\n          type: array\n          x-go-name: Releases\n        remoteIds:\n          items:\n            $ref: '#/components/schemas/RemoteID'\n          type: array\n          x-go-name: RemoteIDs\n        runtime:\n          type: integer\n        score:\n          format: double\n          type: number\n          x-go-name: Score\n        slug:\n          type: string\n          x-go-name: Slug\n        spoken_languages:\n          items:\n            type: string\n          type: array\n          x-go-name: SpokenLanguages\n        status:\n          $ref: '#/components/schemas/Status'\n        studios:\n          items:\n            $ref: '#/components/schemas/StudioBaseRecord'\n          type: array\n          x-go-name: Studios\n        subtitleLanguages:\n          items:\n            type: string\n          type: array\n          x-go-name: SubtitleLanguages\n        tagOptions:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n        trailers:\n          items:\n            $ref: '#/components/schemas/Trailer'\n          type: array\n          x-go-name: Trailers\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    PeopleBaseRecord:\n      description: base people record\n      properties:\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        score:\n          format: int64\n          type: integer\n          x-go-name: Score\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    PeopleExtendedRecord:\n      description: extended people record\n      properties:\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        awards:\n          items:\n            $ref: '#/components/schemas/AwardBaseRecord'\n          type: array\n          x-go-name: Awards\n        biographies:\n          items:\n            $ref: '#/components/schemas/Biography'\n          type: array\n          x-go-name: Biographies\n        birth:\n          type: string\n        birthPlace:\n          type: string\n        characters:\n          items:\n            $ref: '#/components/schemas/Character'\n          type: array\n          x-go-name: Characters\n        death:\n          type: string\n        gender:\n          type: integer\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        image:\n          type: string\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        races:\n          items:\n            $ref: '#/components/schemas/Race'\n          type: array\n          x-go-name: Races\n        remoteIds:\n          items:\n            $ref: '#/components/schemas/RemoteID'\n          type: array\n          x-go-name: RemoteIDs\n        score:\n          format: int64\n          type: integer\n          x-go-name: Score\n        slug:\n          type: string\n        tagOptions:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    PeopleType:\n      description: people type record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Race:\n      description: race record\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Release:\n      description: release record\n      properties:\n        country:\n          type: string\n        date:\n          type: string\n        detail:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    RemoteID:\n      description: remote id record\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n        type:\n          format: int64\n          type: integer\n          x-go-name: Type\n        sourceName:\n          type: string\n          x-go-name: SourceName\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    SearchResult:\n      description: search result\n      properties:\n        aliases:\n          items:\n            type: string\n          type: array\n        companies:\n          items:\n            type: string\n          type: array\n        companyType:\n          type: string\n        country:\n          type: string\n        director:\n          type: string\n        first_air_time:\n          type: string\n        genres:\n          items:\n            type: string\n          type: array\n        id:\n          type: string\n        image_url:\n          type: string\n        name:\n          type: string\n        is_official:\n          type: boolean\n        name_translated:\n          type: string\n        network:\n          type: string\n        objectID:\n          type: string\n        officialList:\n          type: string\n        overview:\n          type: string\n        overviews:\n          items:\n            $ref: '#/components/schemas/TranslationSimple'\n          type: array\n        overview_translated:\n          items:\n            type: string\n          type: array\n        poster:\n          type: string\n        posters:\n          items:\n            type: string\n          type: array\n        primary_language:\n          type: string\n        remote_ids:\n          items:\n            $ref: '#/components/schemas/RemoteID'\n          type: array\n          x-go-name: RemoteIDs\n        status:\n          type: string\n          x-go-name: Status\n        slug:\n          type: string\n        studios:\n          items:\n            type: string\n          type: array\n        title:\n          type: string\n        thumbnail:\n          type: string\n        translations:\n          items:\n            $ref: '#/components/schemas/TranslationSimple'\n          type: array\n        translationsWithLang:\n          items:\n            type: string\n          type: array\n        tvdb_id:\n          type: string\n        type:\n          type: string\n        year:\n          type: string\n      type: object\n    SeasonBaseRecord:\n      description: season genre record\n      properties:\n        id:\n          type: integer\n        image:\n          type: string\n        imageType:\n          type: integer\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        number:\n          format: int64\n          type: integer\n          x-go-name: Number\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        companies:\n          type: object\n          $ref: '#/components/schemas/Companies'\n        seriesId:\n          format: int64\n          type: integer\n          x-go-name: SeriesID\n        type:\n          $ref: '#/components/schemas/SeasonType'\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    SeasonExtendedRecord:\n      description: extended season record\n      properties:\n        artwork:\n          items:\n            $ref: '#/components/schemas/ArtworkBaseRecord'\n          type: array\n          x-go-name: Artwork\n        companies:\n          type: object\n          $ref: '#/components/schemas/Companies'\n        episodes:\n          items:\n            $ref: '#/components/schemas/EpisodeBaseRecord'\n          type: array\n          x-go-name: Episodes\n        id:\n          type: integer\n        image:\n          type: string\n        imageType:\n          type: integer\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        number:\n          format: int64\n          type: integer\n          x-go-name: Number\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        seriesId:\n          format: int64\n          type: integer\n          x-go-name: SeriesID\n        trailers:\n          items:\n            $ref: '#/components/schemas/Trailer'\n          type: array\n          x-go-name: Trailers\n        type:\n          $ref: '#/components/schemas/SeasonType'\n        tagOptions:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n        translations:\n          items:\n            $ref: '#/components/schemas/Translation'\n          type: array\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    SeasonType:\n      description: season type record\n      properties:\n        alternateName:\n          type: string\n          x-go-name: Name\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        type:\n          type: string\n          x-go-name: Type\n\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    SeriesAirsDays:\n      description: A series airs day record\n      properties:\n        friday:\n          type: boolean\n          x-go-name: Friday\n        monday:\n          type: boolean\n          x-go-name: Monday\n        saturday:\n          type: boolean\n          x-go-name: Saturday\n        sunday:\n          type: boolean\n          x-go-name: Sunday\n        thursday:\n          type: boolean\n          x-go-name: Thursday\n        tuesday:\n          type: boolean\n          x-go-name: Tuesday\n        wednesday:\n          type: boolean\n          x-go-name: Wednesday\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    SeriesBaseRecord:\n      description: The base record for a series. All series airs time like firstAired, lastAired, nextAired, etc. are in US EST for US series, and for all non-US series, the time of the show’s country capital or most populous city. For streaming services, is the official release time. See https://support.thetvdb.com/kb/faq.php?id=29.\n      properties:\n        abbreviation:\n          type: string\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        averageRuntime:\n          type: integer\n        country:\n          type: string\n        defaultSeasonType:\n          format: int64\n          type: integer\n          x-go-name: DefaultSeasonType\n        episodes:\n          items:\n            $ref: '#/components/schemas/EpisodeBaseRecord'\n          type: array\n          x-go-name: Episodes\n        firstAired:\n          type: string\n        id:\n          type: integer\n        image:\n          type: string\n        isOrderRandomized:\n          type: boolean\n          x-go-name: IsOrderRandomized\n        lastAired:\n          type: string\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        nextAired:\n          type: string\n          x-go-name: NextAired\n        originalCountry:\n          type: string\n        originalLanguage:\n          type: string\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        score:\n          format: double\n          type: number\n          x-go-name: Score\n        slug:\n          type: string\n        status:\n          $ref: '#/components/schemas/Status'\n        lastUpdated:\n          type: string\n\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    SeriesExtendedRecord:\n      description: The extended record for a series. All series airs time like firstAired, lastAired, nextAired, etc. are in US EST for US series, and for all non-US series, the time of the show’s country capital or most populous city. For streaming services, is the official release time. See https://support.thetvdb.com/kb/faq.php?id=29.\n      properties:\n        abbreviation:\n          type: string\n        airsDays:\n          $ref: '#/components/schemas/SeriesAirsDays'\n        airsTime:\n          type: string\n        airsTimeUTC:\n          type: string\n        aliases:\n          items:\n            $ref: '#/components/schemas/Alias'\n          type: array\n          x-go-name: Aliases\n        artworks:\n          items:\n            $ref: '#/components/schemas/ArtworkExtendedRecord'\n          type: array\n          x-go-name: Artworks\n        averageRuntime:\n          type: integer\n        characters:\n          items:\n            $ref: '#/components/schemas/Character'\n          type: array\n          x-go-name: Characters\n        contentRatings:\n          items:\n            $ref: '#/components/schemas/ContentRating'\n          type: array\n        country:\n          type: string\n        defaultSeasonType:\n          format: int64\n          type: integer\n          x-go-name: DefaultSeasonType\n        firstAired:\n          type: string\n        lists:\n          items:\n            $ref: '#/components/schemas/ListBaseRecord'\n        genres:\n          items:\n            $ref: '#/components/schemas/GenreBaseRecord'\n          type: array\n          x-go-name: Genres\n        id:\n          type: integer\n        image:\n          type: string\n        isOrderRandomized:\n          type: boolean\n          x-go-name: IsOrderRandomized\n        lastAired:\n          type: string\n        lastUpdated:\n          type: string\n        name:\n          type: string\n        nameTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: NameTranslations\n        companies:\n          items:\n            $ref: '#/components/schemas/Company'\n          type: array\n        nextAired:\n          type: string\n          x-go-name: NextAired\n        originalCountry:\n          type: string\n        originalLanguage:\n          type: string\n        originalNetwork:\n          $ref: '#/components/schemas/Company'\n        overview:\n          type: string\n        latestNetwork:\n          $ref: '#/components/schemas/Company'\n        overviewTranslations:\n          items:\n            type: string\n          type: array\n          x-go-name: OverviewTranslations\n        remoteIds:\n          items:\n            $ref: '#/components/schemas/RemoteID'\n          type: array\n          x-go-name: RemoteIDs\n        score:\n          format: double\n          type: number\n          x-go-name: Score\n        seasons:\n          items:\n            $ref: '#/components/schemas/SeasonBaseRecord'\n          type: array\n          x-go-name: Seasons\n        seasonTypes:\n          items:\n            $ref: '#/components/schemas/SeasonType'\n          type: array\n          x-go-name: Seasons\n        slug:\n          type: string\n        status:\n          $ref: '#/components/schemas/Status'\n        tags:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n        trailers:\n          items:\n            $ref: '#/components/schemas/Trailer'\n          type: array\n          x-go-name: Trailers\n        translations:\n          items:\n            $ref: '#/components/schemas/TranslationExtended'\n          type: array\n\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    SourceType:\n      description: source type record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        postfix:\n          type: string\n        prefix:\n          type: string\n        slug:\n          type: string\n          x-go-name: Slug\n        sort:\n          format: int64\n          type: integer\n          x-go-name: Sort\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Status:\n      description: status record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        keepUpdated:\n          type: boolean\n          x-go-name: KeepUpdated\n        name:\n          type: string\n          x-go-name: Name\n        recordType:\n          type: string\n          x-go-name: RecordType\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    StudioBaseRecord:\n      description: studio record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        parentStudio:\n          type: integer\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Tag:\n      description: tag record\n      properties:\n        allowsMultiple:\n          type: boolean\n          x-go-name: AllowsMultiple\n        helpText:\n          type: string\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        options:\n          items:\n            $ref: '#/components/schemas/TagOption'\n          type: array\n          x-go-name: TagOptions\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    TagOption:\n      description: tag option record\n      properties:\n        helpText:\n          type: string\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n          x-go-name: Name\n        tag:\n          format: int64\n          type: integer\n          x-go-name: Tag\n        tagName:\n          type: string\n          x-go-name: TagName\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Trailer:\n      description: trailer record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        language:\n          type: string\n        name:\n          type: string\n        url:\n          type: string\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    Translation:\n      description: translation record\n      properties:\n        aliases:\n          items:\n            type: string\n          type: array\n        isAlias:\n          type: boolean\n        isPrimary:\n          type: boolean\n        language:\n          type: string\n          x-go-name: Language\n        name:\n          type: string\n        overview:\n          type: string\n        tagline:\n          type: string\n          description: Only populated for movie translations.  We disallow taglines without a title.\n      type: object\n      x-go-package: github.com/whip-networks/tvdb-api-v4-core/tvdb-api-v4-core/pkg/model\n    TranslationSimple:\n      description: translation simple record\n      properties:\n        language:\n          type: string\n          x-go-name: Language\n      type: object\n    TranslationExtended:\n      description: translation extended record\n      properties:\n        nameTranslations:\n          items:\n            $ref: '#/components/schemas/Translation'\n          type: array\n        overviewTranslations:\n          items:\n            $ref: '#/components/schemas/Translation'\n          type: array\n        alias:\n          items:\n            type: string\n          type: array\n      type: object\n    TagOptionEntity:\n      description: a entity with selected tag option\n      type: object\n      properties:\n        name:\n          type: string\n        tagName:\n          type: string\n        tagId:\n          type: integer\n    Inspiration:\n      description: Movie inspiration record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        type:\n          type: string\n        type_name:\n          type: string\n        url:\n          type: string\n    InspirationType:\n      description: Movie inspiration type record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        name:\n          type: string\n        description:\n          type: string\n        reference_name:\n          type: string\n        url:\n          type: string\n    ProductionCountry:\n      description: Production country record\n      properties:\n        id:\n          format: int64\n          type: integer\n          x-go-name: ID\n        country:\n          type: string\n        name:\n          type: string\n    Companies:\n      description: Companies by type record\n      properties:\n        studio:\n          type: array\n          $ref: '#/components/schemas/Company'\n        network:\n          type: array\n          $ref: '#/components/schemas/Company'\n        production:\n          type: array\n          $ref: '#/components/schemas/Company'\n        distributor:\n          type: array\n          $ref: '#/components/schemas/Company'\n        special_effects:\n          type: array\n          $ref: '#/components/schemas/Company'\n    Links:\n      description: Links for next, previous and current record\n      properties:\n        prev:\n          type: string\n        self:\n          type: string\n        next:\n          type: string\n        total_items:\n          type: integer\n        page_size:\n          type: integer\n",
			"canonicalURL": "/github.com/HristoKolev/TvDbSharper@86fa4555b2a10c389c8b3d106ebf66365be09225/-/blob/test/GenerateDto/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/HristoKolev/TvDbSharper/blob/86fa4555b2a10c389c8b3d106ebf66365be09225/test/GenerateDto/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}