{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ory/sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "clients/keto/go/api/openapi.yaml",
			"byteSize": 22309,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: hi@ory.sh\n  description: |\n    Documentation for all of Ory Keto's REST APIs. gRPC is documented separately.\n  license:\n    name: Apache 2.0\n  title: Ory Keto API\n  version: v0.8.0-alpha.2\nservers:\n- url: /\npaths:\n  /check:\n    get:\n      description: To learn how relation tuples and the check works, head over to\n        [the documentation](../concepts/relation-tuples.mdx).\n      operationId: getCheck\n      parameters:\n      - description: Namespace of the Relation Tuple\n        explode: true\n        in: query\n        name: namespace\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Object of the Relation Tuple\n        explode: true\n        in: query\n        name: object\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Relation of the Relation Tuple\n        explode: true\n        in: query\n        name: relation\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: SubjectID of the Relation Tuple\n        explode: true\n        in: query\n        name: subject_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Namespace of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.namespace\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Object of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.object\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Relation of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.relation\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: max-depth\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getCheckResponse'\n          description: getCheckResponse\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getCheckResponse'\n          description: getCheckResponse\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Check a relation tuple\n      tags:\n      - read\n    post:\n      description: To learn how relation tuples and the check works, head over to\n        [the documentation](../concepts/relation-tuples.mdx).\n      operationId: postCheck\n      parameters:\n      - explode: true\n        in: query\n        name: max-depth\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationQuery'\n        x-originalParamName: Payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getCheckResponse'\n          description: getCheckResponse\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getCheckResponse'\n          description: getCheckResponse\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Check a relation tuple\n      tags:\n      - read\n  /expand:\n    get:\n      description: Use this endpoint to expand a relation tuple.\n      operationId: getExpand\n      parameters:\n      - description: Namespace of the Subject Set\n        explode: true\n        in: query\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Object of the Subject Set\n        explode: true\n        in: query\n        name: object\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Relation of the Subject Set\n        explode: true\n        in: query\n        name: relation\n        required: true\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: max-depth\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/expandTree'\n          description: expandTree\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Expand a Relation Tuple\n      tags:\n      - read\n  /health/alive:\n    get:\n      description: |-\n        This endpoint returns a HTTP 200 status code when Ory Keto is accepting incoming\n        HTTP requests. This status does currently not include checks whether the database connection is working.\n\n        If the service supports TLS Edge Termination, this endpoint does not require the\n        `X-Forwarded-Proto` header to be set.\n\n        Be aware that if you are running multiple nodes of this service, the health status will never\n        refer to the cluster state, only to a single instance.\n      operationId: isAlive\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n          description: Ory Keto is ready to accept connections.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Check HTTP Server Status\n      tags:\n      - metadata\n  /health/ready:\n    get:\n      description: |-\n        This endpoint returns a HTTP 200 status code when Ory Keto is up running and the environment dependencies (e.g.\n        the database) are responsive as well.\n\n        If the service supports TLS Edge Termination, this endpoint does not require the\n        `X-Forwarded-Proto` header to be set.\n\n        Be aware that if you are running multiple nodes of Ory Keto, the health status will never\n        refer to the cluster state, only to a single instance.\n      operationId: isReady\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n          description: Ory Keto is ready to accept requests.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_503'\n          description: Ory Kratos is not yet ready to accept requests.\n      summary: Check HTTP Server and Database Status\n      tags:\n      - metadata\n  /relation-tuples:\n    delete:\n      description: Use this endpoint to delete relation tuples\n      operationId: deleteRelationTuples\n      parameters:\n      - description: Namespace of the Relation Tuple\n        explode: true\n        in: query\n        name: namespace\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Object of the Relation Tuple\n        explode: true\n        in: query\n        name: object\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Relation of the Relation Tuple\n        explode: true\n        in: query\n        name: relation\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: SubjectID of the Relation Tuple\n        explode: true\n        in: query\n        name: subject_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Namespace of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.namespace\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Object of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.object\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Relation of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.relation\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"204\":\n          description: Empty responses are sent when, for example, resources are deleted.\n            The HTTP status code for empty responses is typically 201.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Delete Relation Tuples\n      tags:\n      - write\n    get:\n      description: Get all relation tuples that match the query. Only the namespace\n        field is required.\n      operationId: getRelationTuples\n      parameters:\n      - explode: true\n        in: query\n        name: page_token\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: page_size\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Namespace of the Relation Tuple\n        explode: true\n        in: query\n        name: namespace\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Object of the Relation Tuple\n        explode: true\n        in: query\n        name: object\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Relation of the Relation Tuple\n        explode: true\n        in: query\n        name: relation\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: SubjectID of the Relation Tuple\n        explode: true\n        in: query\n        name: subject_id\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Namespace of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.namespace\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Object of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.object\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Relation of the Subject Set\n        explode: true\n        in: query\n        name: subject_set.relation\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getRelationTuplesResponse'\n          description: getRelationTuplesResponse\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Query relation tuples\n      tags:\n      - read\n    patch:\n      description: Use this endpoint to patch one or more relation tuples.\n      operationId: patchRelationTuples\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PatchDelta'\n              type: array\n        x-originalParamName: Payload\n      responses:\n        \"204\":\n          description: Empty responses are sent when, for example, resources are deleted.\n            The HTTP status code for empty responses is typically 201.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Patch Multiple Relation Tuples\n      tags:\n      - write\n    put:\n      description: Use this endpoint to create a relation tuple.\n      operationId: createRelationTuple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationQuery'\n        x-originalParamName: Payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RelationQuery'\n          description: RelationQuery\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/genericError'\n          description: genericError\n      summary: Create a Relation Tuple\n      tags:\n      - write\n  /version:\n    get:\n      description: |-\n        This endpoint returns the version of Ory Keto.\n\n        If the service supports TLS Edge Termination, this endpoint does not require the\n        `X-Forwarded-Proto` header to be set.\n\n        Be aware that if you are running multiple nodes of this service, the version will never\n        refer to the cluster state, only to a single instance.\n      operationId: getVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n          description: Returns the Ory Keto version.\n      summary: Return Running Software Version.\n      tags:\n      - metadata\ncomponents:\n  responses:\n    emptyResponse:\n      description: Empty responses are sent when, for example, resources are deleted.\n        The HTTP status code for empty responses is typically 201.\n  schemas:\n    InternalRelationTuple:\n      example:\n        subject_id: subject_id\n        namespace: namespace\n        object: object\n        relation: relation\n        subject_set:\n          namespace: namespace\n          object: object\n          relation: relation\n      properties:\n        namespace:\n          description: Namespace of the Relation Tuple\n          type: string\n        object:\n          description: Object of the Relation Tuple\n          type: string\n        relation:\n          description: Relation of the Relation Tuple\n          type: string\n        subject_id:\n          description: |-\n            SubjectID of the Relation Tuple\n\n            Either SubjectSet or SubjectID are required.\n          type: string\n        subject_set:\n          $ref: '#/components/schemas/SubjectSet'\n      required:\n      - namespace\n      - object\n      - relation\n      type: object\n    PatchDelta:\n      example:\n        relation_tuple:\n          subject_id: subject_id\n          namespace: namespace\n          object: object\n          relation: relation\n          subject_set:\n            namespace: namespace\n            object: object\n            relation: relation\n        action: insert\n      properties:\n        action:\n          enum:\n          - insert\n          - delete\n          type: string\n        relation_tuple:\n          $ref: '#/components/schemas/InternalRelationTuple'\n      type: object\n    RelationQuery:\n      example:\n        subject_id: subject_id\n        namespace: namespace\n        object: object\n        relation: relation\n        subject_set:\n          namespace: namespace\n          object: object\n          relation: relation\n      properties:\n        namespace:\n          description: Namespace of the Relation Tuple\n          type: string\n        object:\n          description: Object of the Relation Tuple\n          type: string\n        relation:\n          description: Relation of the Relation Tuple\n          type: string\n        subject_id:\n          description: |-\n            SubjectID of the Relation Tuple\n\n            Either SubjectSet or SubjectID can be provided.\n          type: string\n        subject_set:\n          $ref: '#/components/schemas/SubjectSet'\n      type: object\n    SubjectSet:\n      example:\n        namespace: namespace\n        object: object\n        relation: relation\n      properties:\n        namespace:\n          description: Namespace of the Subject Set\n          type: string\n        object:\n          description: Object of the Subject Set\n          type: string\n        relation:\n          description: Relation of the Subject Set\n          type: string\n      required:\n      - namespace\n      - object\n      - relation\n      type: object\n    UUID:\n      format: uuid4\n      type: string\n    expandTree:\n      example:\n        subject_id: subject_id\n        children:\n        - null\n        - null\n        type: union\n        subject_set:\n          namespace: namespace\n          object: object\n          relation: relation\n      properties:\n        children:\n          items:\n            $ref: '#/components/schemas/expandTree'\n          type: array\n        subject_id:\n          type: string\n        subject_set:\n          $ref: '#/components/schemas/SubjectSet'\n        type:\n          enum:\n          - union\n          - exclusion\n          - intersection\n          - leaf\n          type: string\n      required:\n      - type\n      type: object\n    genericError:\n      description: The standard error format\n      properties:\n        code:\n          format: int64\n          type: integer\n        details:\n          items:\n            additionalProperties: true\n            type: object\n          type: array\n        message:\n          type: string\n        reason:\n          type: string\n        request:\n          type: string\n        status:\n          type: string\n      type: object\n    getCheckResponse:\n      description: The content of the allowed field is mirrored in the HTTP status\n        code.\n      example:\n        allowed: true\n      properties:\n        allowed:\n          description: whether the relation tuple is allowed\n          type: boolean\n      required:\n      - allowed\n      title: Represents the response for a check request.\n      type: object\n    getRelationTuplesResponse:\n      example:\n        next_page_token: next_page_token\n        relation_tuples:\n        - subject_id: subject_id\n          namespace: namespace\n          object: object\n          relation: relation\n          subject_set:\n            namespace: namespace\n            object: object\n            relation: relation\n        - subject_id: subject_id\n          namespace: namespace\n          object: object\n          relation: relation\n          subject_set:\n            namespace: namespace\n            object: object\n            relation: relation\n      properties:\n        next_page_token:\n          description: |-\n            The opaque token to provide in a subsequent request\n            to get the next page. It is the empty string iff this is\n            the last page.\n          type: string\n        relation_tuples:\n          items:\n            $ref: '#/components/schemas/InternalRelationTuple'\n          type: array\n      type: object\n    healthNotReadyStatus:\n      properties:\n        errors:\n          additionalProperties:\n            type: string\n          description: Errors contains a list of errors that caused the not ready\n            status.\n          type: object\n      type: object\n    healthStatus:\n      properties:\n        status:\n          description: Status always contains \"ok\".\n          type: string\n      type: object\n    subject:\n      type: object\n    version:\n      properties:\n        version:\n          description: Version is the service's version.\n          type: string\n      type: object\n    inline_response_200:\n      example:\n        status: status\n      properties:\n        status:\n          description: Always \"ok\".\n          type: string\n      required:\n      - status\n      type: object\n    inline_response_503:\n      properties:\n        errors:\n          additionalProperties:\n            type: string\n          description: Errors contains a list of errors that caused the not ready\n            status.\n          type: object\n      required:\n      - errors\n      type: object\n    inline_response_200_1:\n      example:\n        version: version\n      properties:\n        version:\n          description: The version of Ory Keto.\n          type: string\n      required:\n      - version\n      type: object\n",
			"canonicalURL": "/github.com/ory/sdk@90149750ce71014072ee0714de2f9d3105889abe/-/blob/clients/keto/go/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ory/sdk/blob/90149750ce71014072ee0714de2f9d3105889abe/clients/keto/go/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}