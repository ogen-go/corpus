{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "quoteManagement.api.yaml",
			"size": 0,
			"path": "generated/staticBinding/carrierEthernet/quoteManagement.api.yaml",
			"byteSize": 185476,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    **This file forms part of MEF 115**\n\n    This API implements Business Requirements described in MEF 80\n\n    Quote API allows the Buyer to submit a request to find out how much the installation\n    of an instance of a Product Offering, an update to an existing Product, or\n    a disconnect of an existing Product will cost.\n\n    List of supported Use Cases:\n    - Create Quote\n    - Retrieve Quote List\n    - Retrieve Quote by Quote Identifier\n    - Cancel Quote by Quote Identifier\n    - Decline Quote by Quote Identifier\n    - Register for Quote Notification\n\n    Copyright 2021 MEF Forum and its contributors.\n\n    This file includes content based on the TM Forum Quote Management API\n    (TMF648 v4.0.0) available at\n    https://github.com/tmforum-apis/TMF648_QuoteManagement, which is licensed\n    by the TM Forum under the Apache License version 2.0. Such content has been\n    modified by the MEF Forum and its contributors.\n  title: Quote Management\n  version: 8.0.0\nservers:\n- url: \"https://{serverBase}/mefApi/sonata/quoteManagement/v8/\"\n  variables:\n    serverBase:\n      default: mef.net\n      description: The base of Seller's URL.\ntags:\n- name: quote\n- name: quote operations\n- name: events subscription\npaths:\n  /quote:\n    get:\n      description: \"The Buyer requests a list of Quotes from the Seller based on a\\\n        \\ set of filter criteria (as described in MEF 80).  For each Quote returned,\\\n        \\ the Seller also provides a Quote Identifier that uniquely identifies this\\\n        \\ Quote within the Seller. The order of the elements returned to the Buyer\\\n        \\ is defined by the Seller (e.g. natural order) and does not change between\\\n        \\ the pages.\"\n      operationId: listQuote\n      parameters:\n      - description: State of the Quote to be retrieved. See `MEFQuoteStateType` definition\n          for details\n        explode: true\n        in: query\n        name: state\n        required: false\n        schema:\n          enum:\n          - accepted\n          - acknowledged\n          - answered\n          - approved.orderable\n          - approved.orderableAlternate\n          - cancelled\n          - unableToProvide\n          - declined\n          - expired\n          - inProgress\n          - inProgress.draft\n          - rejected\n          type: string\n        style: form\n      - description: \"Level of the quote - could be budgetary, firmSubjectToFeasibilityCheck,\\\n          \\ firm\"\n        explode: true\n        in: query\n        name: quoteLevel\n        required: false\n        schema:\n          enum:\n          - budgetary\n          - firmSubjectToFeasibilityCheck\n          - firm\n          type: string\n        style: form\n      - description: ID given by the consumer and only understandable by him (to facilitate\n          his searches afterward)\n        explode: true\n        in: query\n        name: externalId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: An identifier that is used to group Quotes that represent a unit\n          of functionality that is important to a Buyer. A Project can be used to\n          relate multiple Quotes together\n        explode: true\n        in: query\n        name: projectId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Date when the quote was created - greater than\n        explode: true\n        in: query\n        name: quoteDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Date when the quote was created - lower than\n        explode: true\n        in: query\n        name: quoteDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Requested Quote Completion Date - greater than\n        explode: true\n        in: query\n        name: requestedQuoteCompletionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Requested Quote Completion Date - lower than\n        explode: true\n        in: query\n        name: requestedQuoteCompletionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Expected Quote Completion Date - greater than\n        explode: true\n        in: query\n        name: expectedQuoteCompletionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Expected Quote Completion Date - lower than\n        explode: true\n        in: query\n        name: expectedQuoteCompletionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Date when the Quote State was set to one of the Completion States\n          - greater than\n        explode: true\n        in: query\n        name: effectiveQuoteCompletionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Date when the Quote State was set to one of the Completion States\n          - lower than\n        explode: true\n        in: query\n        name: effectiveQuoteCompletionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n           represents more than one Seller.\n\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Requested index for start of resources to be provided in response\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Requested number of resources to be provided in response\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Quote_Find'\n                type: array\n          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n          headers:\n            X-Pagination-Throttled:\n              description: |\n                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: |\n                The total number of matching records. E.g. if there are 50 matching records in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of records included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: List or find Quote objects\n      tags:\n      - quote\n    post:\n      description: This operation creates a Quote entity.\n      operationId: createQuote\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n           represents more than one Seller.\n\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/Quote_Create'\n        description: The Quote to be created\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Quote'\n          description: Created  (https://tools.ietf.org/html/rfc7231#section-6.3.2)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"422\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to the business validation problems\n            in the Quote or one of the Quote items\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Send request to perform a quotation\n      tags:\n      - quote\n      x-codegen-request-body-name: quote\n  /quote/{id}:\n    get:\n      description: This operation retrieves a Quote entity. Attribute selection is\n        enabled for all first level attributes.\n      operationId: retrieveQuote\n      parameters:\n      - description: Identifier of the Quote\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n           represents more than one Seller.\n\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Quote'\n          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a Quote by ID\n      tags:\n      - quote\n  /cancelQuote:\n    post:\n      description: This operation sends a cancellation request.\n      operationId: cancelQuote\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n           represents more than one Seller.\n\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/QuoteOperationData'\n        description: The details of the Quote Operation\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/QuoteOperationData'\n          description: Success\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"422\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to the business validation problems\n            in the Quote or one of the Quote items\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Cancels a Quote\n      tags:\n      - quote operations\n      x-codegen-request-body-name: cancelQuote\n  /rejectQuote:\n    post:\n      description: This operation sends a rejection request.\n      operationId: rejectQuote\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n           represents more than one Seller.\n\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/QuoteOperationData'\n        description: The details of the Quote Operation\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/QuoteOperationData'\n          description: Success\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"422\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to the business validation problems\n            in the Quote or one of the Quote items\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Rejects a Quote\n      tags:\n      - quote operations\n      x-codegen-request-body-name: rejectQuote\n  /hub:\n    post:\n      description: A request initiated by the Buyer to instruct the Seller to send\n        notifications of Quote state changes in the event the Seller uses the Deferred\n        Response pattern to respond to a Create Quote request.\n      operationId: registerListener\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n           represents more than one Seller.\n\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/EventSubscriptionInput'\n        description: Data containing the callback endpoint to deliver the information\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description: Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Allows the Buyer to register to Quote state change notifications\n      tags:\n      - events subscription\n      x-codegen-request-body-name: data\n  /hub/{id}:\n    delete:\n      description: \"Resets the communication endpoint address the service instance\\\n        \\ must use to deliver information about its health state, execution state,\\\n        \\ failures and metrics.\"\n      operationId: unregisterListener\n      parameters:\n      - description: The id of the EventSubscription\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n           represents more than one Seller.\n\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"204\":\n          description: Deleted (https://tools.ietf.org/html/rfc7231#section-6.3.5)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Unregister a listener\n      tags:\n      - events subscription\ncomponents:\n  schemas:\n    AccessEline:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/AccessElineOvcCommon'\n      - properties:\n          enniEp:\n            $ref: '#/components/schemas/AccessElineOvcEndPoint'\n          uniEp:\n            $ref: '#/components/schemas/AccessElineOvcEndPoint'\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:sonata:access-eline:v3.0.0:all\n    AccessElineOvcCommon:\n      description: \"This class contains all of the Access E-Line OVC Services Attributes\\\n        \\ that are used in all four Business Functions (POQ, Quote, Order, Inventory).\\\n        \\ At this time, this includes all of the Access Eline OVC Service Attributes.\\\n        \\ This class is used to compose the AccessElineOvc class which has one file\\\n        \\ for each Business Function that differ in terms of the Service Attributes\\\n        \\ that are \\\"Required\\\" for the Business Function (rather than \\\"Optional\\\"\\\n        ).\"\n      properties:\n        ceVlanIdPreservation:\n          description: \"MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress\\\n            \\ Frame is Stripped or Preserved in the Egress Frame. Per MEF 51.1, the\\\n            \\ Operator must support PRESERVE and should support STRIP.\"\n          $ref: '#/components/schemas/CeVlanIdPreservation'\n        cTagPcpPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n        ovcL2cpAddressSet:\n          $ref: '#/components/schemas/L2cpAddressSet'\n        frameDisposition:\n          $ref: '#/components/schemas/FrameDisposition'\n        listOfClassOfServiceNames:\n          description: MEF 26.2 sec. 12.12 - The OVC List of Class of Service Names\n            Service Attribute is used to specify all of the Class of Service Names\n            supported by an OVC. The value of the OVC List of Class of Service Names\n            Service Attribute is a non-empty list of Class of Service Names (which\n            may include one or more of the CoS Labels defined in MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \"MEF 26.2 sec. 12.13 - Technical details of the service level\\\n            \\ in terms of Performance Objectives, agreed between the SP/SO and the\\\n            \\ Operator as part of the Service Level Agreement. For each Performance\\\n            \\ Metric included in the SLS, a Performance Objective must be included\\\n            \\ as well as the parameter values needed for the Performance Metric.\"\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \"MEF 26.2 sec. 12.6 - The max length in bytes allowed in a\\\n            \\ frame mapped to an OVC EP associated by the OVC. The length of the frame\\\n            \\ includes all bytes from the start of the destination MAC address through\\\n            \\ the Frame Check Sequence. This must be at least 1526 (1518+C-tag+S-tag).\\\n            \\ This Service Attribute must be included in POQ, Quote, and Order if\\\n            \\ the Buyer requires a value that is different than the value agreed on\\\n            \\ during the on-boarding process between the Buyer and Seller.\"\n          minimum: 1526\n          type: integer\n      type: object\n    AccessElineOvcEndPoint:\n      allOf:\n      - $ref: '#/components/schemas/AccessElineOvcEpCommon'\n      description: An OVC End Point is a logical entity at a given External Interface\n        that is associated with a distinct set of frames passing over that External\n        Interface. The OVC End Point schema is included in the definitions section\n        of the OVC schema.\n      type: object\n    AccessElineOvcEpCommon:\n      description: \"This class contains all of the Access E-Line OVC End Point Services\\\n        \\ Attributes that are used in all four Business Functions (POQ, Quote, Order,\\\n        \\ Inventory). At this time, this includes all of the Access Eline OVC End\\\n        \\ Point Service Attributes. This class is used to compose the AccessElineOvcEndPoint\\\n        \\ class which has one file for each Business Function that differ in terms\\\n        \\ of the Service Attributes that are \\\"Required\\\" for the Business Function\\\n        \\ (rather than \\\"Optional\\\").\"\n      properties:\n        identifier:\n          description: MEF 26.2 sec. 16.1 - The value of theOVC EP ID Service Attribute\n            is a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the OVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n        egressEquivalenceClassIdentifier:\n          description: \"MEF 26.2 sec. 16.9 - The mechanism that allows an Egress Equivalence\\\n            \\ Class Name to be determined for an egress EI Frame. ?F, M, P? where\\\n            \\ F is a protocol field in the egress EI Frame, M is a map that maps each\\\n            \\ possible value of the field F and the absence of the field F to an Egress\\\n            \\ Equivalence Class Name and P is a map of L2CP type to Egress Equivalence\\\n            \\ Class Name.\"\n          $ref: '#/components/schemas/CosFrom'\n        aggregationLinkDepth:\n          description: \"MEF 26.2 sec. 16.14 - A list of 2-tuples {SVID, Depth} that\\\n            \\ indicates the number of ENNI links that can carry ENNI Frames for each\\\n            \\ S-VLAN ID mapped to the OVC End Point. It indicates the level of resiliency\\\n            \\ to use for the SVID at the ENNI.\"\n          items:\n            $ref: '#/components/schemas/AggLinkDepth'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceIntermediatePoint:\n          $ref: '#/components/schemas/MegList'\n        ovcEgressMap:\n          description: \"MEF 26.2 sec. 16.8 - A set of mappings that determine the\\\n            \\ content of the S-Tag or C-Tag of an egress frame at an ENNI or UNI (respectively)\\\n            \\ based on the Class of Service Name and Frame Color of the frame. Three\\\n            \\ forms: (1) CoSName(CN) -\u003e C/S-Tag PCP or Discard, (2) CoSName and Frame\\\n            \\ Color (CC)--\u003e C/S-Tag DEI or Discard, and (3) CoSName and Frame Color\\\n            \\ (CC)--\u003e C/S-Tag PCP or Discard. A fourth form is included which combines\\\n            \\ (1) and (2) because that is a common case.\"\n          items:\n            $ref: '#/components/schemas/OvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerEndPoint:\n          description: MEF 26.2 sec. 16.11 - Bandwidth Profile Flow parameters for\n            all egress Service Frames mapped to the OVC End Point.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBwpPerEgressEquivalenceClassName:\n          description: \"MEF 26.2 sec. 16.13 - For each EEC Name listed, Bandwidth\\\n            \\ Profile Flow parameters, for all egress Service Frames mapped to that\\\n            \\ EEC Name at the OVC End Point.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        ingressBandwidthProfilePerClassOfServiceName:\n          description: \"MEF 26.2 sec. 16.12 - For each CoS Name listed, Bandwidth\\\n            \\ Profile Flow parameters for all ingress Service Frames mapped to that\\\n            \\ CoS Name at OVC End Point. This bandwidth profile flow is used to police\\\n            \\ at Ingress each CoS in an OVC individually. List of 2-tuples {cos, bwpf}.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ovcEndPointEnvelopes:\n          description: \"The Envelopes and Envelope Coupling Flag values to which Bandwidth\\\n            \\ Profile Flows for this OVC End Point can be mapped. Value is list of\\\n            \\ {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the OVC\\\n            \\ End Point Envelopes Service Attribute can be used when all of the Bandwidth\\\n            \\ Profile Flows contained in the Envelope are specific to a given OVC\\\n            \\ End Point. They are specified using one of the following OVC End Point\\\n            \\ Service Attributes: Ingress Bandwidth Profile Per OVC End Point Egress\\\n            \\ Bandwidth Profile Per OVC End Point Ingress Bandwidth Profile Per Class\\\n            \\ of Service Name Egress Bandwidth Profile Per Egress Equivalence Class\\\n            \\ Name  To create an Envelope containing Bandwidth Profile Flows for more\\\n            \\ than one OVC End Point, the UNI or ENNI Envelopes Service Attribute\\\n            \\ (as appropriate) must be used.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ovcEndPointMap:\n          description: \"MEF 26.2 sec. 16.5 - The information that determines which\\\n            \\ UNI/ENNI Frames are mapped to the OVC End Point. At the UNI and ENNI,\\\n            \\ the only allowable mapping is a LIST of VLAN IDs (CE-VLAN IDs at the\\\n            \\ UNI and S-VLAN IDs at the ENNI).\"\n          $ref: '#/components/schemas/EndPointMapForm'\n        colorMap:\n          description: \"MEF 26.2 sec. 16.7 - The OVC EP Color Map Service Attribute\\\n            \\ is the mechanism by which the Color for an Ingress External Interface\\\n            \\ Frame that is mapped to an OVC EP is indicated by the content in the\\\n            \\ frame header. The value of the OVC EP Color Map Service Attribute is\\\n            \\ a pair of the form ?F, M? where: F is one of the values ENDPOINT, DEI,\\\n            \\ PCP, or DSCP and M is a map that can be used to assign Color to each\\\n            \\ Ingress Frame. (The form of M depends on the value of F.)\"\n          $ref: '#/components/schemas/ColorFrom'\n        ovcEndPointPortConversationToAggregationLinkMap:\n          description: \"MEF 26.2 sec. 13.2 - A mapping of Port Conversation IDs (i.e.,\\\n            \\ VLAN IDs) to an ordered list of physical links if EnniService.sVlanIdControl\\\n            \\ is FULL and there are multiple physical links in the ENNI and EnniCommon.linkAggregation\\\n            \\ is ALL_ACTIVE. Only S-VLAN IDs that are listed in the AccessElineOvcEndPoint.ovcEndPointMap\\\n            \\ can be listed in this attribute.   If EnniService.sVlanIdControl is\\\n            \\ PARTIAL then the Service Provider does not have full visibility of all\\\n            \\ the S-VLAN IDs mapped to each physical link, and hence cannot pick values\\\n            \\ that avoid overloading certain links. In this case, the ENNI Port Conversation\\\n            \\ to Aggregation Link Map Common Attribute must be agreed between the\\\n            \\ relevant Operators.\"\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ingressClassOfServiceMap:\n          description: \"MEF 26.2 sec. 16.6 - The value of the OVC EP Ingress Class\\\n            \\ of Service Map Service Attribute is a 3-tuple of the form ?F, M, P?\\\n            \\ where: F is one of the values ENDPOINT, C_TAG_PCP, S_TAG_PCP, or DSCP,\\\n            \\ M is a map that can be used to assign Class of Service Names to External\\\n            \\ Interface Frames. (The form of M depends on the value of F.), and P\\\n            \\ is a map with entries of the form ?Layer 2 Control Protocol type ? Class\\\n            \\ of Service Name? where the Layer 2 Control Protocol type is determined\\\n            \\ by the Protocol Identifier (see Section 6.2 of MEF 45.1).\"\n          $ref: '#/components/schemas/CosFrom'\n        sourceMacAddressLimit:\n          description: \"MEF 26.2 sec. 16.15 - Specifies a limit on the number of different\\\n            \\ Source MAC address over a time interval for which ingress Service Frames\\\n            \\ at this OVC End Point will be delivered. The absence of this attribute\\\n            \\ corresponds to a Service Attribute value of None. The value is {N,t}\\\n            \\ where N is an integer greater than or equal to 1 and t is a time duration.\"\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceEndPointList:\n          description: \"MEF 26.2 sec. 16.17 - A list of the MEPs instantiated at this\\\n            \\ OVC EP and the direction of each MEP, List of 2-tuples ?l, d? where\\\n            \\ l is MEG level and d is direction (Up/Down)\"\n          items:\n            $ref: '#/components/schemas/MepLevelAndDirection'\n          maxItems: 16\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    AggLinkDepth:\n      description: \"For an Operator Service, this is a pair of \u003cVLAN ID, link depth\u003e\\\n        \\ indicating that a given VLAN ID maps to a given number of links in the Port\\\n        \\ Conversation ID to Aggregation Link Map.\"\n      properties:\n        vlanID:\n          description: The VLAN ID\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagDepth:\n          description: The number of Link Aggregation links available to the VLAN\n          minimum: 1\n          type: integer\n      type: object\n    AvailableMegList:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      type: string\n    BandwidthProfilePerClassOfServiceName:\n      description: |-\n        The value is a list of pairs of the form ?x, y? For ingress, x is a Class of Service Name that is in the value of the EVC/OVC List of Class of Service Names Service Attribute (MEF 10.4 sec. 8.7 and MEF 26.2 sec. 12.12) for the EVC/OVC that associates the EVC/OVC End Point. For egress, x is a Class of Service from the EVC List of Class of Service Names Service Attribute or an Egress Equivalence Class Name (for OVC). If specified, y is a reference to a Bandwidth Profile Flow and Disabled otherwise. There is at most one pair in the list for each CoS or EEC Name (Except Discard).\n         For EVCs it is used by the EVC EP Class of Service Name Ingress\n        Bandwidth Profile Service Attribute (MEF 10.4 sec. 10.9). and EVC EP Class of Service Name Egress Bandwidth Profile Service Attribute (MEF 10.4 sec. 10.11). For OVCs it is used by the Ingress Bandwidth Profile per Class of Service Name (MEF 26.2 sec. 16.12) Egress Bandwidth Profile per Egress Equivalence Class Name (MEF 26.2 sec. 16.13).\n      properties:\n        bwpFlow:\n          description: \"The Bandwidth Profile to be applied to all items that are\\\n            \\ in the specified Class of Service or Egress Equivalence Class. If this\\\n            \\ is an empty list, it means that the Bandwidth Profile is Disabled.\"\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        classOfServiceName:\n          description: \"MEF 26.2 sec. 16.12 and 16.13 - For Ingress, this is the Name\\\n            \\ of the Class of Service that this bandwidth profile flow is applied\\\n            \\ to. This should be an item from ovc.listOfClassOfServiceNames. For Egress,\\\n            \\ this is the Class of Service for EVCs and the Egress Equivalence Class\\\n            \\ (EEC) Name for OVCs. If the specific Class of Service/ Egress Equivalence\\\n            \\ Class is not used/configured that the End Point, the Bandwidth Profile\\\n            \\ can be an empty list.\"\n          type: string\n      type: object\n    BwpFlow:\n      description: \"The Bandwidth Profile Flow, BwpFlow, object class represents the\\\n        \\ Bandwidth Profile Flow which includes the bandwidth profile parameter CIR,\\\n        \\ CIRmax, CBS, EIR, EIRmax, EBS, Coupling Flag, Color Mode, Envelope and Rank,\\\n        \\ and Token Request Offset. The BwpFlow is used with Service Attributes for\\\n        \\ CarrierEthernetOperatorUni, CarrierEthernetSubscriberUni, CarrierEthernetVuni,,\\\n        \\ and ENNI as well as OVC and EVC End Points. Reference MEF 10.4 Section 12\\\n        \\ and MEF 26.2 Section 17.\"\n      properties:\n        eirMax:\n          $ref: '#/components/schemas/InformationRate'\n        envelopeRank:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The rank in\n            the envelope of this Bandwidth Profile Flow\n          minimum: 1\n          type: integer\n        cirMax:\n          $ref: '#/components/schemas/InformationRate'\n        cbs:\n          $ref: '#/components/schemas/DataSize'\n        couplingFlag:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The couplingFlag\n            determines whether unused committed bandwidth for this Bandwidth Profile\n            Flow is made available as excess bandwidth for this Bandwidth Profile\n            Flow or as committed bandwidth for the next lower-ranked Bandwidth Profile\n            Flow. 0/FALSE means overflow green tokens are used as green tokens in\n            the next lowest BWP Flow in the Envelope. 1/TRUE means they are used as\n            yellow tokens for this BWP Flow.\n          type: boolean\n        envelopeId:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The name of\n            the envelope that this Bandwidth Profile Flow resides in.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n        tokenRequestOffset:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - tokenRequestOffset\n            adjusts the bandwidth consumed by each External Interface Frame in the\n            Bandwidth Profile Flow by a fixed number of octets.\n          type: integer\n        ebs:\n          $ref: '#/components/schemas/DataSize'\n        colorMode:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n            whether or not External Interface Frames for this Bandwidth Profile Flow\n            that are identified as Yellow on input to the Bandwidth Profile Algorithm\n            can be declared Green.\n          $ref: '#/components/schemas/ColorMode'\n        cir:\n          $ref: '#/components/schemas/InformationRate'\n        eir:\n          $ref: '#/components/schemas/InformationRate'\n      type: object\n    CarrierEthernetEvcCommon:\n      description: These are the MEF 10.4 EVC Service Attributes that are common to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3.\n      properties:\n        listOfCosNames:\n          description: MEF 10.4 sec. 8.7 - The EVC List of Class of Service Names\n            Service Attribute is used to specify all of the Class of Service Names\n            supported by an EVC. The value of the EVC List of Class of Service Names\n            Service Attribute is a non-empty list of Class of Service Names (which\n            may include one or more of the CoS Labels defined in MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \"MEF 10.4 sec. 8.8 - The SLS includes technical details of\\\n            \\ the service level in terms of Performance Objectives, agreed between\\\n            \\ the Service Provider and the Subscriber or between Service Provider\\\n            \\ and the Operator as part of the Service Level Agreement. A given SLS\\\n            \\ might contain 0,1 or more Performance Objectives for each Performance\\\n            \\ Metric.\"\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \"MEF 10.4 sec. 8.10 - Maximum size of Service frames that can\\\n            \\ be carried over the EVC. This must be at least 1522 (1518+C-tag). This\\\n            \\ Service Attribute must be included in POQ, Quote, and Order if the Buyer\\\n            \\ requires a value that is different than the value agreed on during the\\\n            \\ on-boarding process between the Buyer and Seller.\"\n          minimum: 1522\n          type: integer\n      type: object\n    CarrierEthernetEvcEpCommon:\n      description: This set of EVC End Point Service Attributes are applicable to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4.\n      properties:\n        identifier:\n          description: MEF 10.4 sec. 10.1 - The value of the EVC EP ID Service Attribute\n            is a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the EVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n        subscriberMegMip:\n          $ref: '#/components/schemas/MegList'\n        egressMap:\n          description: \"MEF 10.4 sec. 10.7 - The value of the EVC EP Egress Map Service\\\n            \\ Attribute is None or a map of the form {Corresponding Ingress Service\\\n            \\ Frame Class of Service Name, Corresponding Ingress Service Frame Color}\\\n            \\ to {Egress Service Frame C-Tag PCP value, Egress Service Frame C-Tag\\\n            \\ DEI value} or Discard. If this property is not present or an empty list,\\\n            \\ the value is assumed to have the value None.\"\n          items:\n            $ref: '#/components/schemas/EvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        colorMap:\n          description: \"MEF 10.4 sec. 10.6 - The value of the EVC EP Color Map Service\\\n            \\ Attribute is a pair of the form ?F, M? where: F is one of the values\\\n            \\ ENDPOINT, DEI, PCP, or DSCP and M is a map that can be used to assign\\\n            \\ Color to each Ingress Service Frame. (The form of M depends on the value\\\n            \\ of F.). The EVC EP Color Map Service Attribute is the mechanism by which\\\n            \\ the Color for an Ingress Service Frame that is mapped to an EVC EP is\\\n            \\ indicated by the content in the Service Frame header.\"\n          $ref: '#/components/schemas/ColorFrom'\n        ingressClassOfServiceMap:\n          description: \"MEF 10.4 sec. 10.5 and MEF 45.1 sec. 6.2 - The value of the\\\n            \\ EVC EP Ingress Class of Service Map Service Attribute is a 3-tuple of\\\n            \\ the form ?F, M, P? where: F is one of the values ENDPOINT, C_TAG_PCP,\\\n            \\ or DSCP, M is a map that can be used to assign Class of Service Names\\\n            \\ to Service Frames. (The form of M depends on the value of F.), and P\\\n            \\ is a map with entries of the form ?Layer 2 Control Protocol type ? Class\\\n            \\ of Service Name? where the Layer 2 Control Protocol type is determined\\\n            \\ by the Protocol Identifier (see Section 6.2 of MEF 45.1).\"\n          $ref: '#/components/schemas/CosFrom'\n        ingressBandwidthProfilePerClassofServiceName:\n          description: \"MEF 10.4 sec. 10.9 - The EVC EP Class of Service Name Ingress\\\n            \\ Bandwidth Profile Service Attribute is used to limit the rate of Ingress\\\n            \\ Service Frames with a given Class of Service Name at a UNI. The value\\\n            \\ is None or a non-empty list of pairs of the form ?x,y?, where x is a\\\n            \\ Class of Service Name that is in the value of the EVC List of Class\\\n            \\ of Service Names Service Attribute and y = BWP Flow Parameters. If this\\\n            \\ property is not present or an empty list, the value is assumed to have\\\n            \\ the value None.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpNotEpl:\n      description: This set of EVC End Point Service Attributes are applicable to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        sourceAddressMacLimit:\n          description: \"MEF 10.4 sec. 10.12 - The value of the EVC EP Source MAC Address\\\n            \\ Limit Service Attribute is either None or the pair ?N, t ? where N is\\\n            \\ an integer ?1 and t is a time duration. When the value of the EVC EP\\\n            \\ Source MAC Address Limit Service Attribute = ?N, t? the number of source\\\n            \\ MAC Addresses that can be used in Ingress Service Frames is limited.\\\n            \\ If this property is not present or an empty list, the value is assumed\\\n            \\ to have the value None.\"\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerClassofServiceName:\n          description: \"MEF 10.4 sec. 10.11 - The EVC EP Class of Service Name Egress\\\n            \\ Bandwidth Profile Service Attribute is used to limit the rate of all\\\n            \\ Egress Service Frames with a given Class of Service Name, as determined\\\n            \\ at the ingress UNI for each frame per the EVC EP Ingress Class of Service\\\n            \\ Map Service Attribute (MEF 10.4 Section 10.5). The value of the EVC\\\n            \\ EP Class of Service Name Egress Bandwidth Profile Service Attribute\\\n            \\ is either None or a non-empty list of pairs of the form ?x, y? where\\\n            \\ x is a Class of Service Name contained in the value of the EVC List\\\n            \\ of Class of Service Names Service Attribute (MEF 10.4 Section 8.7) but\\\n            \\ not equal to Discard and y= the 3-tuple ?CIR, CIRmax, ER? where the\\\n            \\ elements of the 3-tuple are defined in MEF 10.4 Section 12.1.2. If this\\\n            \\ property is not present or an empty list, the value is assumed to have\\\n            \\ the value None.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        evcEndPointEnvelopes:\n          description: \"The Envelopes and Envelope Coupling Flag values to which Bandwidth\\\n            \\ Profile Flows for this EVC End Point can be mapped. Value is list of\\\n            \\ {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the EVC\\\n            \\ End Point Envelopes Service Attribute can be used when all of the Bandwidth\\\n            \\ Profile Flows contained in the Envelope are specific to a given OVC\\\n            \\ End Point. They are specified using one of the following EVC End Point\\\n            \\ Service Attributes: Ingress Bandwidth Profile Per EVC End Point Egress\\\n            \\ Bandwidth Profile Per EVC End Point Ingress Bandwidth Profile Per Class\\\n            \\ of Service Name Egress Bandwidth Profile Per Egress Equivalence Class\\\n            \\ Name  To create an Envelope containing Bandwidth Profile Flows for more\\\n            \\ than one EVC End Point, the UNI Envelopes Service Attribute must be\\\n            \\ used.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpVirtualPrivate:\n      properties:\n        evcEndPointMap:\n          $ref: '#/components/schemas/EndPointMapEvc'\n      type: object\n    CarrierEthernetEvcNotEpl:\n      description: These are the MEF 10.4 EVC Service Attributes that are common to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        frameDisposition:\n          $ref: '#/components/schemas/FrameDisposition'\n      type: object\n    CarrierEthernetOperatorUni:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/OperatorUniCommon'\n      x-discriminator-value: urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v3.0.0:all\n    CarrierEthernetPhysicalLink:\n      description: \"A 2-tuple of the form ?id, physicalLink?. The value of id is an\\\n        \\ identifier for the physical link. The value of physicalLink is the specific\\\n        \\ Ethernet physical layer type.\"\n      properties:\n        physicalLink:\n          description: An Ethernet physical layer\n          $ref: '#/components/schemas/PhysicalLink'\n        id:\n          description: An identifier for the physical link.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n      type: object\n    CarrierEthernetSls:\n      description: \"The Service Level Specification Service Attribute (SLS) is, as\\\n        \\ part of the Service Level Agreement, the technical details of the service\\\n        \\ level, in terms of Performance Objectives, agreed between the Service Provider\\\n        \\ and the Subscriber for Subscriber Ethernet Services and between the SP/SO\\\n        \\ and Operator for Operator Ethernet Services. . A given SLS might contain\\\n        \\ 0, 1, or more Performance Objectives for each Performance Metric. The SLS\\\n        \\ is described in section 8.8 (EVC Service Level Specification Service Attribute)\\\n        \\ of MEF 10.4 for EVCs and section 12.13 (OVC Service Level Specification\\\n        \\ Service Attribute) for OVCs. MEF 10.4 defines 10 Performance Metrics (all\\\n        \\ of which are included here). MEF 26.2 defines only 9 Performance Metrics.\\\n        \\ MEF 26.2 does not include the One Way Composite PM. The other 9 are the\\\n        \\ same.\"\n      properties:\n        slsCosNameEntry:\n          description: MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - This is a list\n            of Performance Metrics. Each entry contains a set of parameters and Performance\n            Metrics one one Class of Service.\n          items:\n            $ref: '#/components/schemas/SlsCosNameEntry'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        startTime:\n          $ref: '#/components/schemas/Time'\n        timeDuration:\n          $ref: '#/components/schemas/LongDuration'\n      type: object\n    CarrierEthernetSubscriberUni:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/SubscriberUniCommon'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.2.0:all\n    CarrierEthernetVpEvcCommon:\n      description: \"These are the MEF 10.4 EVC Service Attributes that are common\\\n        \\ to all Virtual Private Subscriber (EVC-based) Ethernet Services (EVPL, EVP-LAN,\\\n        \\ EVP_TREE) defined in MEF 6.3.\"\n      properties:\n        cTagPcpPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    CcDei:\n      description: One of the possible values for the OVC Egress Map. This indicates\n        that the Color is mapped to the DEI field of the Egress Frame. Note that the\n        Enums used for the DEI values include DISCARD as a value.\n      properties:\n        deiGeen:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        deiYellow:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI\n            Frame.\n          type: string\n      type: object\n    CcPcp:\n      description: One of the possible values for the OVC Egress Map. This indicates\n        that the Class of Service and Color are mapped to the PCP field of the Egress\n        Frame. Note that the Enums used for the PCP values include DISCARD as a value.\n      properties:\n        pcpYellow:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI\n            Frame.\n          type: string\n        pcpGreen:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    CeVlanIdPreservation:\n      description: \"MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress\\\n        \\ Frame is Stripped or Preserved in the Egress Frame. Per MEF 51.1, the Operator\\\n        \\ must support PRESERVE and should support STRIP.\"\n      enum:\n      - PRESERVE\n      - STRIP\n      - RETAIN\n      type: string\n    CnPcp:\n      description: \"This is a 2-tuple ?x,y? where x is a Class of Service Name and\\\n        \\ y is a PCP Value or DISCARD.\"\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI\n            Frame.\n          type: string\n      type: object\n    ColorFrom:\n      discriminator:\n        mapping:\n          DEI: '#/components/schemas/ColorFromDei'\n          PCP: '#/components/schemas/ColorFromPCP'\n          ENDPOINT: '#/components/schemas/ColorFromEp'\n          DSCP: '#/components/schemas/ColorFromDscp'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n          - DEI\n          - PCP\n          - ENDPOINT\n          - DSCP\n          type: string\n      required:\n      - mapType\n      type: object\n    ColorFromDei:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"This Class is referenced when the color comes from the S-tag\\\n          \\ or C-tag DEI field. MEF 26.2 requires that DEI=0 means Green and DEI=1\\\n          \\ means Yellow, so no map is needed.\"\n        type: object\n      x-discriminator-value: DEI\n    ColorFromDscp:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"This Class is referenced when the color comes from the DSCP\\\n          \\ field. It is a list of DSCP Entries where each entry has three components:\\\n          \\ (1) A list of DSCP values, (2) a color for IPv4 packets with one of those\\\n          \\ DSCP values, and (3) a color for IPv6 packets with one of those DSCP values.\\\n          \\ Any DSCP value that is not specified and any Frame that does not include\\\n          \\ an IP packet is Green..\"\n        properties:\n          colorFromDscpMap:\n            items:\n              $ref: '#/components/schemas/ColorFromDscpEntry'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: DSCP\n    ColorFromDscpEntry:\n      properties:\n        ipv6Color:\n          $ref: '#/components/schemas/FrameColor'\n        dscpList:\n          description: This is a list of DSCP values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ipv4Color:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorFromEp:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"The color of each Ingress Frame is determined solely from the\\\n          \\ EVC or OVC End Point. In other words, the EP declares all frames GREEN\\\n          \\ or all frame YELLOW\"\n        properties:\n          epColor:\n            $ref: '#/components/schemas/FrameColor'\n        type: object\n      x-discriminator-value: ENDPOINT\n    ColorFromPCP:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"This Class is referenced when the color comes from the S-tag\\\n          \\ or C-tag PCP field. Each of the 8 possible PCP values maps to a color.\\\n          \\ If there is no tag, the frame is Green.\"\n        properties:\n          colorFromPcpMap:\n            description: \"This is a list of 8 Color mappings, one for each PCP value.\"\n            items:\n              $ref: '#/components/schemas/ColorFromPCPMapEntry'\n            maxItems: 8\n            minItems: 8\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: PCP\n    ColorFromPCPMapEntry:\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValue'\n        pcpColor:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorMode:\n      description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n        whether or not External Interface Frames for this Bandwidth Profile Flow that\n        are identified as Yellow on input to the Bandwidth Profile Algorithm can be\n        declared Green.\n      enum:\n      - COLOR_BLIND\n      - COLOR_AWARE\n      type: string\n    ConversationIdRange:\n      description: \"A range of ConversationID (either a VLAN Id or 0 for untagged\\\n        \\ frames)  allowing three forms: start, start ? start, and start ? end\"\n      properties:\n        start:\n          description: The starting Conversation ID of the range or the only Conversation\n            ID if there is no end value\n          maximum: 4094\n          minimum: 0\n          type: integer\n        end:\n          description: The final Conversation ID in the range\n          maximum: 4094\n          minimum: 0\n          type: integer\n      type: object\n    ConversationIdToAggregationLinkMap:\n      description: \"This is a 2-tuple ?x,y? where x is a list of Port Conversation\\\n        \\ IDs or ranges of Port Conversation IDs (a Port Conversation ID is a VLAN\\\n        \\ ID or 0 for untagged frames) and y is a list of Link Numbers. This is used\\\n        \\ in the Port Conversation to Aggregation Link Map for the UNI and ENNI.\"\n      properties:\n        conversationIDs:\n          description: 802.1AX-2014 sec. 6.6.2.1 - A Port Conversation ID is a VLAN\n            ID (1 to 4094) or 0 to represent untagged and priority-tagged frames.\n          items:\n            $ref: '#/components/schemas/ConversationIdRange'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        aggLinkList:\n          description: 802.1AX-2014 sec. 6.6.2.1 - An ordered list of Aggregation\n            Link Numbers\n          items:\n            minimum: 1\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    CosDscpMap:\n      description: This is a list of DSCP to CoS Name Entries followed by items for\n        Not an IP Packet and All Other Values.\n      properties:\n        dscpValueCoSList:\n          description: \"This is a list of DSCP to CoS Map Entries: {ipv4DSCPs, ipv6DSCPs,\\\n            \\ CoSName}\"\n          items:\n            $ref: '#/components/schemas/CosDscpMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        notIP:\n          description: This is the CoS Name for packets that are not IP packets when\n            CoS is determined from DSCP\n          type: string\n        otherIPv6:\n          description: This is the CoS Name for IPv6 packets with DSCP values other\n            than those listed.\n          type: string\n        otherIPv4:\n          description: This is the CoS Name for IPv4 packets with DSCP values other\n            than those listed.\n          type: string\n      type: object\n    CosDscpMapEntry:\n      description: \"This is a 3-tuple {ipv4list, ipv6list, cosName}\"\n      properties:\n        ipv4List:\n          $ref: '#/components/schemas/DscpValues'\n        ipv6List:\n          $ref: '#/components/schemas/DscpValues'\n        cosName:\n          type: string\n      type: object\n    CosEnniPcpMapEntry:\n      description: \"2-tuple {PCP, CoSName} that maps a CoS Name or DISCARD to a PCP.\"\n      properties:\n        pcpVal:\n          $ref: '#/components/schemas/PcpValue'\n        pcpCosName:\n          type: string\n      type: object\n    CosFrom:\n      discriminator:\n        mapping:\n          C_TAG_PCP: '#/components/schemas/CosFromCtagPcp'\n          ENDPOINT: '#/components/schemas/CosFromEp'\n          DSCP: '#/components/schemas/CosFromDscp'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The Field that indicates F = C_TAG_PCP.\n          enum:\n          - C_TAG_PCP\n          - ENDPOINT\n          - DSCP\n          type: string\n      required:\n      - mapType\n      type: object\n    CosFromCtagPcp:\n      allOf:\n      - $ref: '#/components/schemas/CosFrom'\n      - description: \"Ingress CoS is specified as {F,M,P}. This is when F=C_TAG_PCP.\\\n          \\ This maps each of the 8 PCP values in the C-tag to a Class of Service\\\n          \\ Name. It also maps UNTAGGED frames to a Class of Service Name.\"\n        properties:\n          map_M:\n            description: This maps each of the possible C-tag PCP values (0-7) and\n              Untagged to a specific CoS Name.\n            items:\n              $ref: '#/components/schemas/CosUniPcpMapEntry'\n            maxItems: 9\n            minItems: 9\n            type: array\n            uniqueItems: true\n          l2cp_P:\n            description: This specifies the CoS Name for L2CPs carried over the OVC.\n            items:\n              $ref: '#/components/schemas/CosL2cp'\n            minItems: 0\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: C_TAG_PCP\n    CosFromDscp:\n      allOf:\n      - $ref: '#/components/schemas/CosFrom'\n      - description: \"Ingress CoS is specified as {F,M,P}. This is when F=DSCP. This\\\n          \\ maps groups of DSCP values (independently for ipV4 and ipV6) to a Class\\\n          \\ of Service. It also provides a Class of Service mapping for DSCP values\\\n          \\ that are not specified and for frames that do not contain IP Packets.\"\n        properties:\n          map_M:\n            $ref: '#/components/schemas/CosDscpMap'\n          l2cp_P:\n            description: This specifies the CoS Names for L2CPs carried over the EVC/OVC.\n            items:\n              $ref: '#/components/schemas/CosL2cp'\n            minItems: 0\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: DSCP\n    CosFromEp:\n      allOf:\n      - $ref: '#/components/schemas/CosFrom'\n      - description: \"Ingress CoS is specified as {F,M,P}. This is when F=OVC_EP or\\\n          \\ EVC_EP as appropriate.\"\n        properties:\n          map_M:\n            description: The single CoS Name at this EVC/OVC EP\n            type: string\n          l2cp_P:\n            description: This specifies the CoS Name for L2CPs carried over the EVC/OVC.\n            items:\n              $ref: '#/components/schemas/CosL2cp'\n            minItems: 0\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: ENDPOINT\n    CosFromStagPcp:\n      description: \"Ingress CoS is specified as {F,M,P}. This is when F=S_TAG_PCP.\\\n        \\ This maps each of the 8 PCP values in the S-tag to a Class of Service Name.\"\n      properties:\n        map_M:\n          description: A list of 8 PCP values and their associated CoS Names\n          items:\n            $ref: '#/components/schemas/CosEnniPcpMapEntry'\n          maxItems: 8\n          minItems: 8\n          type: array\n          uniqueItems: true\n        mapType:\n          description: The Field that indicates F = S_TAG_PCP.\n          enum:\n          - S_TAG_PCP\n          type: string\n        l2cp_P:\n          description: This specifies the CoS Name for L2CPs carried over the OVC.\n          items:\n            $ref: '#/components/schemas/CosL2cp'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CosL2cp:\n      description: \"2-tuple {L2CP Ident, CoS Name}\"\n      properties:\n        l2cpIdentifier:\n          $ref: '#/components/schemas/L2cpProtocol'\n        l2cpCosName:\n          description: CoS Name String to associate with the L2CP\n          type: string\n      type: object\n    CosUniPcpMapEntry:\n      description: \"2-tuple {PCP, CoSName} that maps a PCP value (or Untagged) to\\\n        \\ a CoS Name.\"\n      properties:\n        pcpVal:\n          description: A PCP value from 0 to 7 or UNTAGGED\n          $ref: '#/components/schemas/PcpVal'\n        pcpCosName:\n          description: A CoS Name or DISCARD\n          type: string\n      type: object\n    DataSize:\n      description: A value and a unit of measure that specifies a data size for example\n        for a buffer or a burst size.\n      properties:\n        dataSizeUnits:\n          description: \"The unit of measure in the data size. For example, if a burst\\\n            \\ size is 40 KBYTES, this element is KBYTES. Note that the units indicate\\\n            \\ binary values, e.g., KBYTES is 1024 bytes.amd\"\n          $ref: '#/components/schemas/DataSizeUnits'\n        dataSizeValue:\n          description: \"The value in the data size. For example, if a burst size is\\\n            \\ 40 KBYTES, this element is 40.\"\n          type: integer\n      type: object\n    DataSizeUnits:\n      description: \"The unit of measure in the data size. For example, if a burst\\\n        \\ size is 40 KBYTES, this element is KBYTES. Note that the units indicate\\\n        \\ binary values, e.g., KBYTES is 1024 bytes.amd\"\n      enum:\n      - BYTES\n      - KBYTES\n      - MBYTES\n      - GBYTES\n      - TBYTES\n      - PBYTES\n      - EBYTES\n      - ZBYTES\n      - YBYTES\n      type: string\n    DeiFromCosColor:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: The DEI Field in the Egress EI Frame is determined from the Class\n          of Service and the Frame Color. This is a list that contains an entry for\n          Class of Service Name that includes the CoS Name and the DEI value (or DISCARD)\n          to use for Green frames and the DEI value (or DISCARD) to use for Yellow\n          Frames. For example CoS=Platinum and Color=Green --\u003e DEI = 1 and Color=Yellow\n          --\u003e DEI = 0. This affects the C-tag at the UNI and the S-tag at the ENNI.\n        properties:\n          ccDeiEntries:\n            description: \"A list of entries, one per CoS, that specifies the DEI value\\\n              \\ for Green frames and Yellow frames.\"\n            items:\n              $ref: '#/components/schemas/CcDei'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CC_DEI\n    DeiValueAndDiscard:\n      enum:\n      - \"0\"\n      - \"1\"\n      - DISCARD\n      type: string\n    DscpValues:\n      description: A list of 6 bit values\n      properties:\n        dscpValues:\n          description: A list of unique 6-bit (0-63) values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    Duration:\n      description: \"A Duration in a given unit of time e.g. 3 hours, or 5 days.\"\n      properties:\n        amount:\n          description: \"Duration (number of seconds, minutes, hours, etc.)\"\n          type: integer\n        units:\n          $ref: '#/components/schemas/TimeUnit'\n      required:\n      - amount\n      - units\n      type: object\n    EnabledDisabled:\n      description: Enumeration to indicate Enabled/Disabled state of an attribute\n      enum:\n      - ENABLED\n      - DISABLED\n      type: string\n    EndPointMapEvc:\n      description: \"MEF 10.4 sec. 10.4 - This is specifications for which Service\\\n        \\ Frames are mapped to the EVC End Point. The allowed values in MEF 10.4 are\\\n        \\ ALL, LIST, and UT/PT. Since Private services must be ALL, the map isn't\\\n        \\ needed for those services, and therefore the type does not include ALL.\\\n        \\ If the type is LIST there must be a list of VLAN IDs specified.\"\n      properties:\n        vlanId:\n          description: A list of VLAN IDs if the value of vlanType is \"LIST\"\n          items:\n            maximum: 4094\n            minimum: 1\n            type: integer\n          maxItems: 4094\n          minItems: 1\n          type: array\n          uniqueItems: true\n        vlanType:\n          description: An indication of the type EVC End Point Map. If the value is\n            UT/PT then no additional information is required. If the value is LIST\n            then a list of C-VLAN ID values must be specified.\n          $ref: '#/components/schemas/VlanType'\n      type: object\n    EndPointMapForm:\n      discriminator:\n        mapping:\n          FORM_U: '#/components/schemas/EndPointMapFormU'\n          FORM_E: '#/components/schemas/EndPointMapFormE'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The discriminator for Map Type U\n          enum:\n          - FORM_U\n          - FORM_E\n          type: string\n      required:\n      - mapType\n      type: object\n    EndPointMapFormE:\n      allOf:\n      - $ref: '#/components/schemas/EndPointMapForm'\n      - description: MEF 10.4 sec. 16.5.1 - The value of an End Point Map of Form\n          E (E for ENNI) consists of a list of one or more SVLAN ID values. An S-Tagged\n          ENNI Frame whose S-VLAN ID value matches an entry in the list maps to the\n          OVC End Point.\n        properties:\n          ovcEndPointMapFormE:\n            description: A list of S-VLAN ID values at the ENNI.\n            items:\n              maximum: 4094\n              minimum: 1\n              type: integer\n            maxItems: 4094\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: FORM_E\n    EndPointMapFormU:\n      allOf:\n      - $ref: '#/components/schemas/EndPointMapForm'\n      - description: MEF 10.4 sec. 16.5.4 - The EndPointMapFormU object class represents\n          the OVC End Point  Map Form U (U for UNI). It is a list of one or more CE-VLAN\n          IDs.\n        properties:\n          ovcEndPointMapFormU:\n            description: A list of C-VLAN ID values at the UNI.\n            items:\n              maximum: 4094\n              minimum: 1\n              type: integer\n            maxItems: 4094\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: FORM_U\n    Envelope:\n      description: Bandwidth Profiles are organized into Envelopes. Multiple Bandwidth\n        Profiles in an envelope can share bandwidth resources. Each Envelope has a\n        name and a Coupling Flag for Index Zero (CF0) that indicates whether unused\n        green tokens are discarded or converted to yellow tokens. All Bandwidth Profile\n        Flows in the same envelope satisfy the same criterion listed in R230 of MEF\n        26.2.\n      properties:\n        couplingFlagForIndexZero:\n          description: MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - This attribute\n            denotes the coupling flag for index zero. FALSE for 0 (overflow Green\n            tokens are discarded) and TRUE for 1 (overflow Green tokens can be used\n            as Yellow tokens).\n          type: boolean\n        envelopeID:\n          description: MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - The attribute\n            is a string that identifies the Envelope\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n      type: object\n    Epl:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - properties:\n          evcEndPointA:\n            $ref: '#/components/schemas/EplEvcEndPoint'\n          evcEndPointZ:\n            $ref: '#/components/schemas/EplEvcEndPoint'\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:epl:v0.2.0:all\n    EplEvcEndPoint:\n      allOf:\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      description: An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point Service\n        Attributes are the attributes of an EVC that can be different at each UNI\n        in the EVC. These are the EVC End Point Service Attributes applicable to Ethernet\n        Private Line (EPL) Services defined in MEF 6.3 based on the Service Attributes\n        in MEF 10.4.\n    Eplan:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eplan:v0.2.0:all\n    EplanEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.2.0:all\n    Eptree:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eptree:v0.2.0:all\n    EptreeEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.2.0:all\n    Error:\n      description: |\n        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.\n      properties:\n        reason:\n          description: Text that explains the reason for the error. This can be shown\n            to a client user.\n          maxLength: 255\n          type: string\n        message:\n          description: Text that provides mode details and corrective actions related\n            to the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n      - reason\n      type: object\n    Error400:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error400Code'\n        required:\n        - code\n        type: object\n      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)\n    Error400Code:\n      description: |-\n        One of the following error codes:\n        - missingQueryParameter: The URI is missing a required query-string parameter\n        - missingQueryValue: The URI is missing a required query-string parameter value\n        - invalidQuery: The query section of the URI is invalid.\n        - invalidBody: The request has an invalid body\n      enum:\n      - missingQueryParameter\n      - missingQueryValue\n      - invalidQuery\n      - invalidBody\n      type: string\n    Error401:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error401Code'\n        required:\n        - code\n        type: object\n      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n      - missingCredentials\n      - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error403Code'\n        required:\n        - code\n        type: object\n      description: Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n      - accessDenied\n      - forbiddenRequester\n      - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - notFound: A current representation for the target resource not found\n            enum:\n            - notFound\n            type: string\n        required:\n        - code\n        type: object\n      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error422:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error422Code'\n          propertyPath:\n            description: |\n              A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\n              Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n            type: string\n        required:\n        - code\n        type: object\n      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n      - missingProperty\n      - invalidValue\n      - invalidFormat\n      - referenceNotFound\n      - unexpectedProperty\n      - tooManyRecords\n      - otherIssue\n      type: string\n    Error500:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.\n            enum:\n            - internalError\n            type: string\n        required:\n        - code\n        type: object\n      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Error501:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - notImplemented: Method not supported by the server\n            enum:\n            - notImplemented\n            type: string\n        required:\n        - code\n        type: object\n      description: Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)\n    EvcEgressMap:\n      description: \"This map is a table with one entries for each CosName, that includes\\\n        \\ the CoSName, a PCP value for green frames, a PCP value for yellow frames,\\\n        \\ a DEI value for green frames and a DEI value for yellow frames. Any of the\\\n        \\ values can be DISCARD (in which case they are all treated as DISCARD). This\\\n        \\ table is used at the UNI for EVCs.\"\n      properties:\n        evcEgressMapEntries:\n          items:\n            $ref: '#/components/schemas/EvcEgressMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    EvcEgressMapEntry:\n      description: \"A row in the EVC Egress Map. Contains a CoSName, PCPGreen, PCPYellow,\\\n        \\ DEIGreen, DEIYellow\"\n      properties:\n        pcpYellow:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        deiYellow:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          type: string\n        deiGreen:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        pcpGreen:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    EventSubscription:\n      description: |\n        This resource is used to manage notification subscription.\n        Reference: MEF 79 (Sn 8.3)\n      properties:\n        query:\n          description: The value provided by the Buyer in `EventSubscriptionInput`\n            during notification registration\n        callback:\n          description: The value provided by the Buyer in `EventSubscriptionInput`\n            during notification registration\n          type: string\n        id:\n          description: An identifier of the event subscription assigned by the Seller\n            when a resource is created.\n          type: string\n      required:\n      - callback\n      - id\n      type: object\n    EventSubscriptionInput:\n      description: This class is used to register for Notifications.\n      properties:\n        query:\n          description: \"This attribute is used to define to which type of events to\\\n            \\ register to. Example: \\\"query\\\":\\\"eventType = quoteStateChangeEvent\\\"\\\n            . To subscribe for more than one event type, put the values separated\\\n            \\ by comma: `eventType=quoteStateChangeEvent,quoteItemStateChangeEvent`.\\\n            \\ The possible values are enumerated by the 'QuoteEventType' in quoteNotification.api.yaml.\\\n            \\ An empty query is treated as specifying no filters - ending in  subscription\\\n            \\ for all event types.\"\n          type: string\n        callback:\n          description: \"This callback value must be set to *host* property from Buyer\\\n            \\ Notification API (quoteNotification.api.yaml). This property is appended\\\n            \\ with the base path and notification resource path specified in that\\\n            \\ API to construct an URL to which notification is sent. E.g. for \\\"callback\\\"\\\n            : \\\"http://buyer.co/listenerEndpoint\\\", the state change event notification\\\n            \\ will be sent to: `http://buyer.co/listenerEndpoint/mefApi/sonata/quoteNotification/v8/listener/quoteStateChangeEvent`\"\n          type: string\n      required:\n      - callback\n      type: object\n    Evpl:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      - properties:\n          evcEndPointA:\n            $ref: '#/components/schemas/EvplEvcEndPoint'\n          evcEndPointZ:\n            $ref: '#/components/schemas/EvplEvcEndPoint'\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evpl:v0.2.0:all\n    EvplEvcEndPoint:\n      allOf:\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      description: An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point Service\n        Attributes are the attributes of an EVC that can be different at each UNI\n        in the EVC. These are the EVC End Point Service Attributes applicable to Ethernet\n        Virtual Private Line (EVPL) Services defined in MEF 6.3 based on the Service\n        Attributes in MEF 10.4.\n    Evplan:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evplan:v0.2.0:all\n    EvplanEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.2.0:all\n    Evptree:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evptree:v0.2.0:all\n    EvptreeEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.2.0:all\n    FieldedAddress:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          country:\n            description: Country that the address is in\n            type: string\n          streetType:\n            description: \"Alley, avenue, boulevard, brae, crescent, drive, highway,\\\n              \\ lane, terrace, parade, place, tarn, way, wharf\"\n            type: string\n          postcodeExtension:\n            description: An extension of a postal code. E.g. the part following the\n              dash in an american urban property address\n            type: string\n          city:\n            description: The city that the address is in\n            type: string\n          streetNr:\n            description: Number identifying a specific property on a public street.\n              It may be combined with streetNrLast for ranged addresses.\n            type: string\n          locality:\n            description: The locality that the address is in\n            type: string\n          postcode:\n            description: Descriptor for a postal delivery area used to speed and simplify\n              the delivery of mail (also known as zip code)\n            type: string\n          streetNrLast:\n            description: Last number in a range of street numbers allocated to a property\n            type: string\n          streetNrSuffix:\n            description: The first street number suffix\n            type: string\n          streetName:\n            description: Name of the street or other street type\n            type: string\n          stateOrProvince:\n            description: The State or Province that the address is in\n            type: string\n          streetNrLastSuffix:\n            description: Last street number suffix for a ranged address\n            type: string\n          geographicSubAddress:\n            $ref: '#/components/schemas/GeographicSubAddress'\n          streetSuffix:\n            description: A modifier denoting a relative direction\n            type: string\n        required:\n        - city\n        - country\n        - streetName\n        type: object\n      description: \"A type of Address that has a discrete field and value for each\\\n        \\ type of boundary or identifier down to the lowest level of detail. For example\\\n        \\ \\\"street number\\\" is one field, \\\"street name\\\" is another field, etc.\"\n    FormattedAddress:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          country:\n            description: Country that the address is in\n            type: string\n          postcodeExtension:\n            description: An extension of a postal code. E.g. the part following the\n              dash in an US urban property address\n            type: string\n          stateOrProvince:\n            description: The State or Province that the address is in\n            type: string\n          city:\n            description: The city that the address is in\n            type: string\n          addrLine2:\n            description: The second address line in a formatted address\n            type: string\n          addrLine1:\n            description: The first address line in a formatted address\n            type: string\n          locality:\n            description: \"An area of defined or undefined boundaries within a local\\\n              \\ authority or other legislatively defined area, usually rural or semi-rural\\\n              \\ in nature\"\n            type: string\n          postcode:\n            description: Descriptor for a postal delivery area used to speed and simplify\n              the delivery of mail (also known as ZIP code)\n            type: string\n        required:\n        - addrLine1\n        - city\n        - country\n        type: object\n      description: \"A type of Address that has discrete fields for each type of boundary\\\n        \\ or an identifier with the exception of the street and more specific location\\\n        \\ details, which are combined into a maximum of two strings based on local\\\n        \\ postal addressing conventions.\"\n    FrameColor:\n      enum:\n      - GREEN\n      - YELLOW\n      type: string\n    FrameDispEnum:\n      enum:\n      - DISCARD\n      - DELIVER_UNCONDITIONALLY\n      - DELIVER_CONDITIONALLY\n      type: string\n    FrameDisposition:\n      description: \"A 3-tuple that indicates how Unicast, Multicast, and Broadcast\\\n        \\ Frames are delivered by the service. For each, the value can be UNCONDITIONAL,\\\n        \\ the frames are delivered without condition, CONDITIONAL, the frames are\\\n        \\ delivered based on conditions agreed to between buyer and seller (e.g.,\\\n        \\ based on learned addresses), and DISCARD.\"\n      properties:\n        broadcast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        unicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        multicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n      type: object\n    GeographicAddressLabel:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          externalReferenceId:\n            description: The unique reference to an Address as provided by the Administrative\n              Authority.\n            type: string\n          externalReferenceType:\n            description: The organization or standard from the organization that administers\n              this Geographic Address Label ensuring it is unique within the Administrative\n              Authority. The value(s) to be used are to be agreed upon during the\n              onboarding. For North American providers this would normally be CLLI\n              (Common Language Location Identifier) code.\n            type: string\n        required:\n        - externalReferenceId\n        - externalReferenceType\n        type: object\n      description: \"A unique identifier controlled by a generally accepted independent\\\n        \\ administrative authority that specifies a fixed geographical location. \\n\\\n        Reference: MEF 79 (Sn 8.9.4), MEF 79.0.2 (Sn 8.9.4)\"\n    GeographicAddressRef:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          href:\n            description: |\n              Hyperlink to the referenced GeographicAddress. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n            type: string\n          id:\n            description: Identifier of the referenced Geographic Address. This identifier\n              is assigned during a successful address validation request (Geographic\n              Address Validation API)\n            type: string\n        required:\n        - id\n        type: object\n      description: |\n        A reference to a Geographic Address resource available through Address Validation API.\n    GeographicSiteRef:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          href:\n            description: |\n              Hyperlink to the referenced GeographicSite. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n            type: string\n          id:\n            description: Identifier of the referenced Geographic Site.\n            type: string\n        required:\n        - id\n        type: object\n      description: |\n        A reference to a Geographic Site resource available through Service Site API\n    GeographicSubAddress:\n      description: \"Additional fields used to specify an address, as detailed as possible.\"\n      properties:\n        buildingName:\n          description: |\n            Allows for identification of places that require building name as part of addressing information\n          type: string\n        subUnit:\n          description: \"Representation of a MEFSubUnit It is used for describing subunit\\\n            \\ within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\\\n            \\ WHARF.\"\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n        levelType:\n          description: Describes level types within a building\n          type: string\n        levelNumber:\n          description: \"Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\\\n            \\ 2\"\n          type: string\n        id:\n          description: Unique Identifier of the subAddress\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        privateStreetName:\n          description: Private streets internal to a property (e.g. a university)\n            may have internal names that are not recorded by the land title office\n          type: string\n      type: object\n    InformationRate:\n      description: A value and a unit of measure that specifies an Information Rate.\n      properties:\n        irValue:\n          description: The value in the information rate. For example if the information\n            rate is 70 kbps this element is 70.\n          minimum: 0\n          type: number\n        irUnits:\n          description: \"The unit of measure for the Information Rate. For example\\\n            \\ if the Information Rate is 70KBPS this element is KBPS. Note that the\\\n            \\ values are decimal values. 1 KBPS is 1000 bits per second and 1MBPS\\\n            \\ is 1,000,000 bits per second.\"\n          $ref: '#/components/schemas/IrUnits'\n      type: object\n    Instantiation:\n      description: \"MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is implemented\\\n        \\ using one or more instances of a standard Physical Layer. When the value\\\n        \\ is Virtual, the physical layer is not specified.\"\n      enum:\n      - PHYSICAL\n      - VIRTUAL\n      type: string\n    IrUnits:\n      description: \"The unit of measure for the Information Rate. For example if the\\\n        \\ Information Rate is 70KBPS this element is KBPS. Note that the values are\\\n        \\ decimal values. 1 KBPS is 1000 bits per second and 1MBPS is 1,000,000 bits\\\n        \\ per second.\"\n      enum:\n      - BPS\n      - KBPS\n      - MBPS\n      - GBPS\n      - TBPS\n      - PBPS\n      - EBPS\n      - ZBPS\n      - YBPS\n      type: string\n    L2cpAddressSet:\n      enum:\n      - CTA\n      - CTB\n      - CTB2\n      type: string\n    L2cpPeering:\n      description: This specifies the L2CP Protocol Identifier and the Destination\n        Address in use by the protocol entity. Reference MEF 45.1 Section 8.2 L2CP\n        Peering Service Attribute\n      properties:\n        protocolID:\n          $ref: '#/components/schemas/L2cpProtocol'\n        destinationAddress:\n          description: The Destination MAC Address of the L2CP to be peered in the\n            standard format of 6 hex bytes separated by hyphen (-).\n          pattern: \"[0-9a-fA-F][0-9a-fA-F]([-][0-9a-fA-F][0-9a-fA-F]){5}\"\n          type: string\n        linkIdList:\n          description: Identifiers for the links on which the specified protocol will\n            be peered. If no links are specified the protocol is peered on all links.\n          items:\n            maxLength: 45\n            minLength: 1\n            pattern: \"[ -\\x7f]+\"\n            type: string\n          minItems: 0\n          type: array\n          uniqueItems: false\n      type: object\n    L2cpProtocol:\n      description: Defines a L2CP protocol LLC address type or EtherType with possible\n        subtype. Reference MEF 45.1 Section 8.2 L2CP Peering Service Attribute.\n      properties:\n        l2cpProtocolType:\n          description: The protocol field to inspect to identify the L2CP.\n          $ref: '#/components/schemas/L2cpProtocolType'\n        subType:\n          description: The EtherType can be modified by an optional sub-type.\n          minimum: 0\n          type: integer\n        llcAddressOrEtherType:\n          description: The EtherType value or LLC value\n          minimum: 0\n          type: integer\n      type: object\n    L2cpProtocolType:\n      description: The protocol field to inspect to identify the L2CP.\n      enum:\n      - ETHERTYPE\n      - LLC\n      type: string\n    LinkAggType:\n      description: Type that defines the Link Aggregation types.\n      enum:\n      - NONE\n      - 2_LINK_ACTIVE_STANDBY\n      - ALL_ACTIVE\n      - OTHER\n      type: string\n    LongDuration:\n      description: This class is used to describe durations expressed in days or larger\n        time units\n      properties:\n        longDurationUnits:\n          description: \"The unit of measure in the duration. For example, if an interval\\\n            \\ is 2 weeks, this element is WEEKS.\"\n          $ref: '#/components/schemas/LongDurationUnits'\n        longDurationValue:\n          description: \"The value of the duration. For example, if the duration is\\\n            \\ 20 days, this element is 20.\"\n          type: integer\n      type: object\n    LongDurationUnits:\n      description: \"The unit of measure in the duration. For example, if an interval\\\n        \\ is 2 weeks, this element is WEEKS.\"\n      enum:\n      - DAY\n      - WEEK\n      - MONTH\n      - YEAR\n      type: string\n    MEFBuyerQuoteLevel:\n      description: An indication of whether the Buyer's Quote Request is for a Budgetary\n        or Firm Quote Level. Set by the Buyer. Buyer Requested Quote Level contains\n        the possible values and may be set by the Buyer on the Request. All Quote\n        Items in a Quote have the same Quote Level.\n      enum:\n      - budgetary\n      - firm\n      type: string\n    MEFBuyerSellerType:\n      description: Indicates if the note is from Buyer or Seller.\n      enum:\n      - buyer\n      - seller\n      type: string\n    MEFChargePeriod:\n      description: Used for a recurring charge to indicate period.\n      enum:\n      - hour\n      - day\n      - week\n      - month\n      - year\n      type: string\n    MEFEndOfTermAction:\n      description: The action that needs to be taken by the Seller once the term expires.\n      enum:\n      - roll\n      - autoDisconnect\n      - autoRenew\n      type: string\n    MEFGeographicPoint:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          spatialRef:\n            description: The spatial reference system used to determine the coordinates\n              (e.g. `WGS84`). The system used and the value of this field are to be\n              agreed upon during the onboarding process.\n            type: string\n          x:\n            description: The latitude expressed in the format specified by the `spacialRef`\n            type: string\n          \"y\":\n            description: The longitude expressed in the format specified by the `spacialRef`\n            type: string\n          z:\n            description: The elevation expressed in the format specified by the `spacialRef`\n            type: string\n        required:\n        - spatialRef\n        - x\n        - \"y\"\n        type: object\n      description: |\n        A MEFGeographicPoint defines a geographic point through coordinates. Reference: MEF 79 (Sn 8.9.5)\n    MEFItemTerm:\n      description: \"The terms of the Quote Item. Used to describe a term (also known\\\n        \\ as commitment) for a Quote Item. Each Quote Item in a Quote Request could\\\n        \\ have a different Requested Quote Item Term. The Buyer specifies the longest\\\n        \\ term that they would accept. The Buyer may be willing to accept a shorter\\\n        \\ term. If the Seller responds with a term longer than the Buyer's request,\\\n        \\ it is treated as an alternate response.\"\n      properties:\n        duration:\n          $ref: '#/components/schemas/Duration'\n        endOfTermAction:\n          $ref: '#/components/schemas/MEFEndOfTermAction'\n        name:\n          description: Name of the term\n          type: string\n        description:\n          description: Description of the term\n          type: string\n        rollInterval:\n          $ref: '#/components/schemas/Duration'\n      required:\n      - duration\n      - endOfTermAction\n      - name\n      type: object\n    MEFPriceType:\n      description: Indicates if the price is for recurring or non-recurring charges.\n      enum:\n      - recurring\n      - nonRecurring\n      - usageBased\n      type: string\n    MEFProductActionType:\n      description: |\n        Product action to be applied to the Quote Item. This corresponds to the\n        Order Item Action when an associated product is ordered.\n\n        | MEFProductActionType | MEF 80     |\n        |--------------------- | ---------- |\n        | add                  | INSTALL    |\n        | modify               | CHANGE     |\n        | delete               | DISCONNECT |\n      enum:\n      - add\n      - modify\n      - delete\n      type: string\n    MEFProductConfiguration:\n      description: MEFProductConfiguration is used as an extension point for MEF specific\n        product/service payload. The `@type` attribute is used as a discriminator\n      discriminator:\n        mapping:\n          urn:mef:lso:spec:sonata:access-eline:v3.0.0:all: '#/components/schemas/AccessEline'\n          urn:mef:lso:spec:cantata-sonata:eptree:v0.2.0:all: '#/components/schemas/Eptree'\n          urn:mef:lso:spec:cantata-sonata:evplan:v0.2.0:all: '#/components/schemas/Evplan'\n          urn:mef:lso:spec:cantata-sonata:epl:v0.2.0:all: '#/components/schemas/Epl'\n          urn:mef:lso:spec:cantata-sonata:evptree:v0.2.0:all: '#/components/schemas/Evptree'\n          urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.2.0:all: '#/components/schemas/EvplanEndpoint'\n          urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v3.0.0:all: '#/components/schemas/CarrierEthernetOperatorUni'\n          urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.2.0:all: '#/components/schemas/CarrierEthernetSubscriberUni'\n          urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.2.0:all: '#/components/schemas/EplanEndpoint'\n          urn:mef:lso:spec:cantata-sonata:eplan:v0.2.0:all: '#/components/schemas/Eplan'\n          urn:mef:lso:spec:cantata-sonata:evpl:v0.2.0:all: '#/components/schemas/Evpl'\n          urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.2.0:all: '#/components/schemas/EptreeEndpoint'\n          urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.2.0:all: '#/components/schemas/EvptreeEndpoint'\n        propertyName: '@type'\n      properties:\n        '@type':\n          description: \"The name of the type that uniquely identifies the type of\\\n            \\ the product that is the subject of the POQ Request. In the case of the\\\n            \\ MEF product, this is the URN provided in the Product Specification.\"\n          enum:\n          - urn:mef:lso:spec:sonata:access-eline:v3.0.0:all\n          - urn:mef:lso:spec:cantata-sonata:eptree:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evplan:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:epl:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evptree:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.2.0:all\n          - urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v3.0.0:all\n          - urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:eplan:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evpl:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.2.0:all\n          type: string\n      required:\n      - '@type'\n      type: object\n    MEFProductRefOrValueQuote:\n      description: One or more services sold to a Buyer by a Seller. A particular\n        Product Offering defines the technical and commercial attributes and behaviors\n        of a Product.\n      properties:\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          $ref: '#/components/schemas/MEFProductConfiguration'\n        productRelationship:\n          description: A list of references to existing products that are related\n            to the Product that would be delivered to fulfill the Quote Item\n          items:\n            $ref: '#/components/schemas/ProductRelationshipWithGrouping'\n          type: array\n        id:\n          description: |\n            The unique identifier of an in-service Product that is the quotation's subject.  This field MUST be populated if an item `action` is either `modify` or `delete`.  This field MUST NOT be populated if an item `action` is `add`.\n          type: string\n        href:\n          description: |\n            Hyperlink to the product in Seller's inventory that is the quotation's subject. Hyperlink MAY be used when providing a response by the Seller. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n          type: string\n        place:\n          description: A list of places that are related to the Product. For example\n            an installation location\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n      type: object\n    MEFQuoteItemStateType:\n      description: |\n        Possible values for the status of a QuoteItem.\n        Following mapping has been used between `MEFQuoteItemStateType` and MEF 80:\n\n        | MEFQuoteItemStateType       | MEF 80                            |\n        | ----------------------------| --------------------------------- |\n        | answered                    | ANSWERED                          |\n        | acknowledged                | ACKNOWLEDGED                      |\n        | approved.orderable          | ORDERABLE                         |\n        | approved.orderableAlternate | ORDERABLE_ALTERNATE               |\n        | inProgress                  | IN_PROGRESS                       |\n        | inProgress.draft            | IN_PROGRESS_DRAFT                 |\n        | abandoned                   | ABANDONED                         |\n        | rejected                    | REJECTED                          |\n        | unableToProvide             | UNABLE_TO_PROVIDE                 |\n      enum:\n      - answered\n      - acknowledged\n      - approved.orderable\n      - approved.orderableAlternate\n      - inProgress\n      - inProgress.draft\n      - rejected\n      - abandoned\n      - unableToProvide\n      type: string\n    MEFQuoteItem_Common:\n      description: Quote items describe an action to be performed on a productOffering\n        or a product in order to get pricing elements and conditions.\n      properties:\n        requestedQuoteItemTerm:\n          $ref: '#/components/schemas/MEFItemTerm'\n        note:\n          description: Free form text associated with the quote item. Only useful\n            in processes involving human interaction. Not applicable for the automated\n            process.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        product:\n          $ref: '#/components/schemas/MEFProductRefOrValueQuote'\n        productOfferingQualificationItem:\n          $ref: '#/components/schemas/ProductOfferingQualificationItemRef'\n        relatedContactInformation:\n          description: |\n            Contact information of an individual or organization playing a role for this Quote. If `instantSyncQuote` equals `false`  then 'Quote Item Technical Contact' must be specified (`role: quoteItemTechnicalContact`). If `instantSyncQuote` equals `false` and the Quote Item requires a location,  the Buyer MUST provide the Quote Item Location Contact Information `role: quoteItemLocationContact`.\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        agreementName:\n          description: Name of the agreement. The name is unique between the Buyer\n            and the Seller.\n          type: string\n        action:\n          $ref: '#/components/schemas/MEFProductActionType'\n        dealReference:\n          description: A pre-agreed pricing modifier reference that the Seller is\n            offering to the Buyer which will impact the price.\n          type: string\n        id:\n          description: \"Identifier of the quote item (generally it is a sequence number\\\n            \\ 01, 02, 03, ...)\"\n          type: string\n        requestedQuoteItemInstallationInterval:\n          $ref: '#/components/schemas/Duration'\n        quoteItemRelationship:\n          description: A relationship from item within a quote\n          items:\n            $ref: '#/components/schemas/QuoteItemRelationship'\n          type: array\n      required:\n      - action\n      - id\n      type: object\n    MEFQuoteItem_Create:\n      allOf:\n      - $ref: '#/components/schemas/MEFQuoteItem_Common'\n      - description: \"A quote item describes an action to be performed on a productOffering\\\n          \\ or a product in order to get pricing elements and condition. The modeling\\\n          \\ pattern introduces the `MEFQuoteItem_Common` supertype to aggregate attributes\\\n          \\ that are common to both `QuoteItem` and `MEFQuoteItem_Create`. In this\\\n          \\ case the create type has a subset of attributes of the response type and\\\n          \\ does not introduce any new, thus the `MEFQuoteItem_Create` type has an\\\n          \\ empty definition.\"\n        type: object\n    MEFQuoteStateChange:\n      description: \"Holds the reached state, reasons, and associated date the Quote\\\n        \\ state changed, populated by the Seller.\"\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFQuoteStateType'\n      required:\n      - changeDate\n      - state\n      type: object\n    MEFQuoteStateType:\n      description: |\n        Possible values for the status of a Quote.\n        Following mapping has been used between `MEFQuoteStateType` and MEF 80:\n\n         | QuoteStateType                            | MEF 80                            |\n         | ----------------------------------------- | --------------------------------- |\n         | accepted                                  | ACCEPTED                          |\n         | acknowledged                              | ACKNOWLEDGED                      |\n         | answered                                  | ANSWERED                          |\n         | approved.orderable                        | ORDERABLE                         |\n         | approved.orderableAlternate               | ORDERABLE_ALTERNATE               |\n         | declined                                  | DECLINED                          |\n         | expired                                   | EXPIRED                           |\n         | cancelled                                 | CANCELLED                         |\n         | unableToProvide                           | UNABLE_TO_PROVIDE                 |\n         | inProgress                                | IN_PROGRESS                       |\n         | inProgress.draft                          | IN_PROGRESS_DRAFT                 |\n         | rejected                                  | REJECTED                          |\n      enum:\n      - accepted\n      - acknowledged\n      - answered\n      - approved.orderable\n      - approved.orderableAlternate\n      - cancelled\n      - unableToProvide\n      - declined\n      - expired\n      - inProgress\n      - inProgress.draft\n      - rejected\n      type: string\n    MEFSellerQuoteLevel:\n      description: \"An indication of whether the Seller's Quote Response is Budgetary,\\\n        \\ Firm - Subject to Feasibility Check, or Firm. The Seller Quote Level is\\\n        \\ provided by the Seller when responding to a Quote request.  This represents\\\n        \\ the lowest Quote Item Level of all Quote Items included in the Quote.\"\n      enum:\n      - budgetary\n      - firmSubjectToFeasibilityCheck\n      - firm\n      type: string\n    MEFSubUnit:\n      description: Allows for subunit identification\n      properties:\n        subUnitNumber:\n          description: \"The discriminator used for the subunit, often just a simple\\\n            \\ number but may also be a range.\"\n          type: string\n        subUnitType:\n          description: \"The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\\\n            \\ UNIT, WHARF.\"\n          type: string\n      required:\n      - subUnitNumber\n      - subUnitType\n      type: object\n    MegList:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      - NONE\n      type: string\n    MepDirection:\n      description: Indicates whether this is an Up MEP or Down MEP\n      enum:\n      - UP\n      - DOWN\n      type: string\n    MepLevelAndDirection:\n      description: \"A 2-tuple \u003clevel, direction\u003e that defines the MEG Level and MEP\\\n        \\ direction.\"\n      properties:\n        level:\n          description: The MEG level\n          maximum: 7\n          minimum: 0\n          type: integer\n        mepDirection:\n          description: Indicates whether this is an Up MEP or Down MEP\n          $ref: '#/components/schemas/MepDirection'\n      type: object\n    Money:\n      description: A base/value business entity used to represent money\n      properties:\n        unit:\n          description: Currency (ISO4217 norm uses 3 letters to define the currency)\n          type: string\n        value:\n          description: A positive floating point number\n          format: float\n          type: number\n      type: object\n    Note:\n      description: Extra information about a given entity. Only useful in processes\n        involving human interaction. Not applicable for the automated process.\n      properties:\n        date:\n          description: Date of the note\n          format: date-time\n          type: string\n        author:\n          description: Author of the note\n          type: string\n        id:\n          description: \"Identifier of the note within its containing entity (may or\\\n            \\ may not be globally unique, depending on provider implementation)\"\n          type: string\n        source:\n          $ref: '#/components/schemas/MEFBuyerSellerType'\n        text:\n          description: Text of the note\n          type: string\n      required:\n      - author\n      - date\n      - id\n      - source\n      - text\n      type: object\n    OneWayAvailabilityPmMetric:\n      description: \"MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 - One Way Availability\\\n        \\ Performance Metric consisting of 1 parameter, a list of Ordered End Point\\\n        \\ Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way Availability\\\n        \\ Objective for this Class of Service Name and these Ordered End Point Pairs.\"\n      properties:\n        oneWayAvailabilityObjective:\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayCompositePmMetric:\n      description: \"MEF 10.4 sec. 8.8.10 - One Way Composite Performance Metric consisting\\\n        \\ of 7 parameters, a list of Ordered End Point Pairs (referred to as S iin\\\n        \\ MEF 10.4) , a Composite Performance number (referred to as U in the MEF\\\n        \\ Standards), indicators about Composite Frame Loss, Composite Frame Delay,\\\n        \\ and Composite Frame Delay Variation (referred to as Wfl, Wfd, and Wfdv in\\\n        \\ the MEF Standards), Thresholds for Frame Delay and Delay Variation (referred\\\n        \\ to as DL and Jt in the MEF Standards) and the One Way Composite Objective\\\n        \\ for this Class of Service Name and these seven parameters. (Note: This Performance\\\n        \\ Metric is not defined for OVC services).\"\n      properties:\n        oneWayIfdvThreshold:\n          $ref: '#/components/schemas/ShortDuration'\n        cpmObjective:\n          $ref: '#/components/schemas/Percentage'\n        compositeFrameDelay:\n          description: MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame\n            Delay equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        compositeFrameDelayVariation:\n          description: MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame\n            Delay Variation equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        oneWayFdThreshold:\n          $ref: '#/components/schemas/ShortDuration'\n        compositeFrameLoss:\n          description: MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame\n            Loss equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 - The set (referred to as S in MEF 10.4)\n            of ordered pairs of EVC or OVC End Points over which this Performance\n            Metric parameters and objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        compositePerformanceIndicatorThreshold:\n          description: MEF 10.4 sec. 8.8.10 - Composite Performance Indicator threshold\n            which if exceeded suggests an unacceptable time interval.\n          maximum: 1\n          minimum: 0\n          type: number\n      type: object\n    OneWayConsecutiveHighLossIntervalsPmMetric:\n      description: \"MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 - One Way Frame\\\n        \\ Delay Range Performance Metric consisting of 2 parameters, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a number (referred\\\n        \\ to as p in the MEF Standards), and the One Way Consecutive High Loss Intervals\\\n        \\ Objective for this Class of Service Name and these two parameters.\"\n      properties:\n        consecutiveNumberP:\n          description: MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - The number of\n            high loss intervals that constitute a consecutive high loss interval.\n          minimum: 1\n          type: integer\n        oneWayChliObjective:\n          description: MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - Performance\n            Objective expressed as a non-negative integer.\n          minimum: 1\n          type: integer\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayPmMetric:\n      description: \"MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - One Way Frame\\\n        \\ Delay Performance Metric consisting of 2 parameters, a list of Ordered End\\\n        \\ Point Pairs (referred to as S in the MEF Standards) , a percentile (referred\\\n        \\ to as Pd in the MEF 10.4 and MEF 26.2), and the One Way Frame Delay Objective\\\n        \\ for this Class of Service Name and these two parameters.\"\n      properties:\n        oneWayFdObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        oneWayFdPercentile:\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayRangePmMetric:\n      description: \"MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 - One Way Frame\\\n        \\ Delay Range Performance Metric consisting of 2 parameters, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a percentile\\\n        \\ (referred to as Pr in the MEF Standards), and the One Way Frame Delay Range\\\n        \\ Objective for this Class of Service Name and these two parameters.\"\n      properties:\n        oneWayFdrPercentile:\n          $ref: '#/components/schemas/Percentage'\n        oneWayFdrObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayFrameLostRatioPmMetric:\n      description: \"MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 - One Way Frame\\\n        \\ Loss Ratio Performance Metric consisting of 1 parameter, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One\\\n        \\ Way Frame Loss Ratio Objective for this Class of Service Name and these\\\n        \\ Ordered End Point Pairs.\"\n      properties:\n        oneWayFlrObjective:\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: MEF 10.4 sec. 8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayHighLossIntervalPmMetric:\n      description: \"MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 - One Way High Loss\\\n        \\ Intervals Performance Metric consisting of 1 parameter, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One\\\n        \\ Way High Loss Intervals Objective for this Class of Service Name and these\\\n        \\ Ordered End Point Pairs.\"\n      properties:\n        oneWayHighLossIntervalsObjective:\n          description: MEF 10.4 sec. 8.8.8 and MEF 26.2 sec.12.13.8 - The PM Objective\n            for this Performance Metric (this CoS and these Ordered End Point Pairs)\n            expressed as a non-negative number.\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayInterFrameDelayVariationPmMetric:\n      description: \"MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 - One Way Frame\\\n        \\ Inter Frame Delay Variation Performance Metric consisting of 3 parameters,\\\n        \\ a list of Ordered End Point Pairs (referred to as S in MEF 10.4 and MEF\\\n        \\ 26.2) , a time duration (referred to as ?t (the greek letter tau, not t)\\\n        \\ in the MEF Standards), a percentile (referred to as Pv in the MEF Standards),\\\n        \\ and the Inter Frame Delay Variation Objective for this Class of Service\\\n        \\ Name and these three parameters.\"\n      properties:\n        oneWayIfdvObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        oneWayIfdvPencentile:\n          $ref: '#/components/schemas/Percentage'\n        timeDuration:\n          $ref: '#/components/schemas/ShortDuration'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayMeanFrameDelayPmMetric:\n      description: \"MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - One Way Frame\\\n        \\ Mean Delay Performance Metric consisting of 1 parameter, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One\\\n        \\ Way Mean Frame Delay Objective for this Class of Service Name and these\\\n        \\ Ordered End Point Pairs.\"\n      properties:\n        oneWayMfdObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OperatorUniCommon:\n      description: \"This class contains all of the Operator UNI Services Attributes\\\n        \\ that are used in all four Business Functions (POQ, Quote, Order, Inventory).\\\n        \\ At this time, this includes all of the Operator UNI Service Attributes.\\\n        \\ This class is used to compose the OperatorUNI class which has one file for\\\n        \\ each Business Function that differ in terms of the Service Attributes that\\\n        \\ are \\\"Required\\\" for the Business Function (rather than \\\"Optional\\\").\"\n      properties:\n        aggregationLinkMap:\n          description: \"MEF 26.2 sec. 14.6 and 802.1AX-2014 sec.  6.6.2.1 - A mapping\\\n            \\ of a list of Port Conversation IDs (i.e., VLAN IDs or zero for untagged\\\n            \\ frames) to an ordered list of physical links if there are multiple physical\\\n            \\ links in the UNI and the link aggregation is ALL_ACTIVE.\"\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        defaultCeVlanId:\n          description: MEF 26.2 sec. 14.9 - The value of the Operator UNI Default\n            CE-VLAN ID is an integer that is the CE-VLAN ID value assigned to Untagged\n            Service Frames and Priority Tagged Service Frames.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        maximumNumberOfEndPoints:\n          description: MEF 26.2 sec. 14.10 - The maximum number of OVC End Points\n            that the Operator CEN can support at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        ingressBandwidthProfile:\n          description: MEF 26.2 sec. 14.12 - A single set Bandwidth Profile Flow parameters\n            that covers all OVCs at the UNI. The value is either Disabled (empty array)\n            or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        lagLinkMeg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOam:\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          $ref: '#/components/schemas/LinkAggType'\n        egressBandwidthProfile:\n          description: MEF 26.2 sec. 14.13 - A single set of Bandwidth Profile Flow\n            parameters that covers all OVCs at the UNI. The value is either Disabled\n            (empty array) or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        l2cpPeering:\n          description: \"MEF 26.2 sec. 14.21 and  and MEF 45.1 sec. 8.1 - L2CP Peering\\\n            \\ Service Attribute defined in MEF 45.1 specifies which protocols, if\\\n            \\ any, are peered at the UNI. The L2CP Peering service attribute value\\\n            \\ must be an empty list, or a list of entries identifying protocols to\\\n            \\ be Peered where each entry consists of {Destination Address, Protocol\\\n            \\ Identifier} or {Destination Address, Protocol Identifier, Link Identifier}.\"\n          items:\n            $ref: '#/components/schemas/L2cpPeering'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfCeVlanIdsPerEndPoint:\n          description: MEF 26.2 sec. 14.11 - An integer between 1 and 4094 inclusive\n            that limits the number of C-Tag VLAN IDs that can map to each OVC End\n            Point at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: MEF 26.2 sec. 14.8 - Specifies the maximum size of Service\n            Frames that can be transmitted across the UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \"MEF 26.2 sec. 14.19 - The Envelopes and Envelope Coupling\\\n            \\ Flag values to which Bandwidth Profile Flows can be mapped. Value is\\\n            \\ list of {envelopeID, couplingFlagForIndexZero}. Note: Envelopes for\\\n            \\ the UNI can also be specified at the OVC End Points associated with\\\n            \\ the UNI.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        listOfPhysicalLinks:\n          description: \"MEF 26.2 sec. 14.2, 14.3 - This Service Attribute combines\\\n            \\ several of the MEF 26.2 Objects into a single n-tuple that is consistent\\\n            \\ with the way this information is described in MEF 10.4. The value of\\\n            \\ the Operator UNI List of Physical Links Service Attribute is a list\\\n            \\ of 6-tuples of the form ?id, physicalLink, synchronousEthernet, precisionTiming,\\\n            \\ uniConnectorType,uniConnectorGender?, with one list item for each physical\\\n            \\ link. The value of id is an identifier for the physical link. The value\\\n            \\ of physicalLink is the specific Ethernet physical layer type. synchronousEthernet\\\n            \\ indicates if synchronous Ethernet is used on the physical link and has\\\n            \\ the value Enabled or Disabled. The value of precisionTiming indicates\\\n            \\ if the Precision Time Protocol is used on the physical link and has\\\n            \\ the value Enabled or Disabled. The values of uniConnectorType and uniConnectorGender\\\n            \\ specify the type of connector used. Note that the id and the physicalLink\\\n            \\ come from the CarrierEthernetPhysicalLink class.\"\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OrderedPair:\n      description: Performance Metrics (except for Group Availability) are specified\n        for a list of Ordered End Point Pairs. In other words a Frame Delay objective\n        (for example) is specified from ?A to B? and from ?C to D?. This class defines\n        one Ordered End Point Pair.\n      properties:\n        toCarrierEthernetServiceEndPoint:\n          description: This is the EVC End Point ID for and EVC End Point in the service\n            or OVC End Point ID for an OVC End Point in the service.\n          type: string\n        fromCarrierEthernetServiceEndPoint:\n          description: This is the EVC End Point ID for and EVC End Point in the service\n            or OVC End Point ID for an OVC End Point in the service.\n          type: string\n      type: object\n    OvcEgressMap:\n      discriminator:\n        mapping:\n          CN_PCP: '#/components/schemas/PcpFromCos'\n          CC_PCP: '#/components/schemas/PcpFromCosColor'\n          CN_PCP_CC_DEI: '#/components/schemas/PcpFromCosDeiFromCosColor'\n          CC_DEI: '#/components/schemas/DeiFromCosColor'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n          - CN_PCP\n          - CC_PCP\n          - CN_PCP_CC_DEI\n          - CC_DEI\n          type: string\n      required:\n      - mapType\n      type: object\n    PcpFromCos:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: The PCP Field in the Egress EI Frame is determined from the Class\n          of Service of the corresponding Ingress EI Frame. This is a list that contains\n          an entry for Class of Service Name that includes the CoS Name and the PCP\n          value  (or DISCARD) to use for that CoS. For example CoS=Platinum --\u003e PCP\n          = 6. This affects the C-tag at the UNI and the S-tag at the ENNI.\n        properties:\n          cnPcpEntries:\n            description: A list of mappings of each CoS to an egress PCP value or\n              DISCARD.\n            items:\n              $ref: '#/components/schemas/CnPcp'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CN_PCP\n    PcpFromCosColor:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: \"The PCP Field in the Egress EI Frame is determined from the\\\n          \\ Class of Service Name and the Frame Color. This is a list that contains\\\n          \\ an entry for Class of Service Name that includes the CoS Name and two\\\n          \\ PCP values (or DISCARD), one for Green frames and one for Yellow frames.\\\n          \\  For example CoS=Platinum and Color=Green --\u003e PCP = 6  and Color=Yellow\\\n          \\ --\u003e PCP = 5. This affects the C-tag at the UNI and the S-tag at the ENNI.\"\n        properties:\n          ccPcpEntries:\n            description: \"A list of entries, one per CoS that indicates the PCP value\\\n              \\ for Green Frames and the PCP value for Yellow Frames.\"\n            items:\n              $ref: '#/components/schemas/CcPcp'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CC_PCP\n    PcpFromCosDeiFromCosColor:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: \"This is a combination of PCP from CoS and DEI from Color. The\\\n          \\ PCP Field in the Egress EI Frame is determined from the Class of Service\\\n          \\ and the DEI Field is determined from the Frame Color. This is a list that\\\n          \\ contains an entry for Class of Service Name that includes the CoS Name,\\\n          \\ PCP value to use (or DISCARD) and the DEI value to use for each color\\\n          \\ for that CoS Name. For example CoS=Platinum and Color=Green --\u003e PCP =\\\n          \\ 6/DEI = 1 and Color=Yellow --\u003e DEI=0. This affects the C-tag at the UNI\\\n          \\ and the S-tag at the ENNI.\"\n        properties:\n          cnPcpCcDeiEntries:\n            description: \"A list of entries, one per CoS, the specifies the PCP value\\\n              \\ for the CoS and the DEI values for Green and Yellow frames in the\\\n              \\ CoS.\"\n            items:\n              $ref: '#/components/schemas/PcpFromCosDeiFromCosColor'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CN_PCP_CC_DEI\n    PcpVal:\n      description: A PCP value from 0 to 7 or UNTAGGED\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      - UNTAGGED\n      type: string\n    PcpValue:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      type: string\n    PcpValueAndDiscard:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      - DISCARD\n      type: string\n    Percentage:\n      description: This is a number of percent - a floating point number between 0\n        and 100\n      maximum: 100\n      minimum: 0\n      type: number\n    PhysicalLink:\n      description: An Ethernet physical layer\n      enum:\n      - 1BASE5\n      - 2BASE_TL\n      - 10BASE2\n      - 10BASE5\n      - 10BASE_F\n      - 10BASE_FB\n      - 10BASE_FL\n      - 10BASE_FP\n      - 10BASE_T\n      - 10BASE_T1L\n      - 10BASE_T1S\n      - 10BASE_TE\n      - 10BROAD36\n      - 10PASS_TS\n      - 100BASE_BX10\n      - 100BASE_FX\n      - 100BASE_LX10\n      - 100BASE_T\n      - 100BASE_T1\n      - 100BASE_T2\n      - 100BASE_T4\n      - 100BASE_TX\n      - 100BASE_X\n      - 1000BASE_BX10\n      - 1000BASE_CX\n      - 1000BASE_KX\n      - 1000BASE_LX\n      - 1000BASE_LX10\n      - 1000BASE_PX10\n      - 1000BASE_PX20\n      - 1000BASE_RHA\n      - 1000BASE_RHB\n      - 1000BASE_RHC\n      - 1000BASE_SX\n      - 1000BASE_T\n      - 1000BASE_T1\n      - 1000BASE_X\n      - 2_5GBASE_KX\n      - 2_5GBASE_T\n      - 2_5GBASE_T1\n      - 5GBASE_KR\n      - 5GBASE_T\n      - 5GBASE_T1\n      - 10GBASE_CX4\n      - 10GBASE_E\n      - 10GBASE_ER\n      - 10GBASE_EW\n      - 10GBASE_KR\n      - 10GBASE_KX4\n      - 10GBASE_L\n      - 10GBASE_LR\n      - 10GBASE_LRM\n      - 10GBASE_LW\n      - 10GBASE_LX4\n      - 10GBASE_R\n      - 10GBASE_S\n      - 10GBASE_SR\n      - 10GBASE_SW\n      - 10GBASE_T\n      - 10GBASE_T1\n      - 10GBASE_W\n      - 10GBASE_X\n      - 25GBASE_CR\n      - 25GBASE_CR_S\n      - 25GBASE_ER\n      - 25GBASE_KR\n      - 25GBASE_KR_S\n      - 25GBASE_LR\n      - 25GBASE_SR\n      - 25GBASE_T\n      - 40GBASE_CR4\n      - 40GBASE_ER4\n      - 40GBASE_FR\n      - 40GBASE_KR4\n      - 40GBASE_LR4\n      - 40GBASE_R\n      - 40GBASE_SR4\n      - 40GBASE_T\n      - 50GBASE_CR\n      - 50GBASE_ER\n      - 50GBASE_FR\n      - 50GBASE_KR\n      - 50GBASE_LR\n      - 50GBASE_SR\n      - 100GBASE_CR10\n      - 100GBASE_CR2\n      - 100GBASE_CR4\n      - 100GBASE_DR\n      - 100GBASE_ER4\n      - 100GBASE_KP4\n      - 100GBASE_KR2\n      - 100GBASE_KR4\n      - 100GBASE_LR4\n      - 100GBASE_R\n      - 100GBASE_SR10\n      - 100GBASE_SR2\n      - 100GBASE_SR4\n      - 200GBASE_CR4\n      - 200GBASE_DR4\n      - 200GBASE_ER4\n      - 200GBASE_FR4\n      - 200GBASE_KR4\n      - 200GBASE_LR4\n      - 200GBASE_SR4\n      - 400GBASE_DR4\n      - 400GBASE_ER8\n      - 400GBASE_FR8\n      - 400GBASE_LR8\n      - 400GBASE_SR16\n      - 400GBASE_SR4_2\n      - 400GBASE_SR8\n      - OTHER\n      type: string\n    Price:\n      description: \"Provides all amounts (tax included, duty-free, tax rate), used\\\n        \\ currency and percentage to apply for Price Alteration.\"\n      properties:\n        taxRate:\n          description: \"Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax.\"\n          format: float\n          type: number\n        taxIncludedAmount:\n          $ref: '#/components/schemas/Money'\n        dutyFreeAmount:\n          $ref: '#/components/schemas/Money'\n      type: object\n    ProductOfferingQualificationItemRef:\n      description: It's a productOfferingQualification item that has been executed\n        previously.\n      properties:\n        productOfferingQualificationId:\n          description: Unique identifier of related Product Offering Qualification.\n          type: string\n        alternateProductProposalId:\n          description: \"A unique identifier for the Alternate Product Proposal assigned\\\n            \\ by the Seller, if the referenced qualification comes from an alternate\\\n            \\ product proposal.\"\n          type: string\n        productOfferingQualificationHref:\n          description: Reference of the related Product Offering Qualification.\n          type: string\n        id:\n          description: Id of an item of a product offering qualification\n          type: string\n      required:\n      - id\n      - productOfferingQualificationId\n      type: object\n    ProductOfferingRef:\n      description: |\n        A reference to a Product Offering offered by the Seller to the Buyer. A Product Offering contains the commercial and technical details of a Product sold by a particular Seller. A Product Offering defines all of the commercial terms and, through association with a particular Product Specification defines all the technical attributes and behaviors of the Product. A Product Offering may constrain the allowable set of configurable technical attributes and/or behaviors specified in the associated Product Specification.\n        The id of the Product offering is assigned by the Seller. The Buyer and the Seller exchange information about offerings' ids during the onboarding process.\n      properties:\n        id:\n          description: unique identifier of the Product Offering.\n          type: string\n        href:\n          description: Hyperlink to a Product Offering in Sellers catalog. In case\n            Seller is not providing catalog capabilities this field is not used. The\n            catalog API definition is provided by the Seller to Buyer during onboarding\n            Hyperlink MAY be used when providing response by the Seller Hyperlink\n            MUST be ignored by the Seller in case it is provided by the Buyer in a\n            requestHyperlink reference\n          type: string\n      required:\n      - id\n      type: object\n    ProductRelationshipWithGrouping:\n      description: A relationship to an existing Product. The requirements for usage\n        for given Product are described in the Product Specification. The \"WithGrouping\"\n        flavor of the Product Relationship allows for providing a list of related\n        product identifiers within a single Product Relationship. This can be later\n        used while processing the request as defined in the Product Specification.\n        The `groupingKey` attribute is used to achieve this behavior in the API by\n        marking the list of `ProductRelationshipWithGroupings` within a `product`\n        with a common key.\n      properties:\n        relationshipType:\n          description: |\n            Specifies the type (nature) of the relationship to the related Product. The nature of required relationships varies for Products of different types. For example, a UNI or ENNI Product may not have any relationships, but an Access E-Line may have two mandatory relationships (related to the UNI on one end and the ENNI on the other). More complex Products such as multipoint IP or Firewall Products may have more complex relationships. As a result, the allowed and mandatory `relationshipType` values are defined in the Product Specification.\n          type: string\n        id:\n          description: unique identifier of a Product that is referenced.\n          type: string\n        href:\n          description: Hyperlink to the product in Seller's inventory that is referenced\n            Hyperlink MAY be used when providing a response by the Seller Hyperlink\n            MUST be ignored by the Seller in case it is provided by the Buyer in a\n            request\n          type: string\n        groupingKey:\n          description: |\n            MEF 80 Introduces a list of related ids for the ProductRelationship. For sake of TMF compliance, a `groupingKey` is introduced to retain id as a simple attribute. Ids from relationships having the same `groupingKey` and `relationshipType` MUST be treated as a list of identifiers.\n            Reference: MEF 80 (Sn 8.1.8.)\n          type: string\n      required:\n      - id\n      - relationshipType\n      type: object\n    Quote:\n      allOf:\n      - $ref: '#/components/schemas/Quote_Common'\n      - description: \"Quote can be used to negotiate service and product acquisition\\\n          \\ or modification between a customer and a service provider. Quote contains\\\n          \\ a list of quote items, a reference to a customer, a list of productOfferings,\\\n          \\ and attached prices and conditions.\"\n        properties:\n          effectiveQuoteCompletionDate:\n            description: Date when the Quote State was set to one of the Completion\n              States.\n            format: date-time\n            type: string\n          expectedQuoteCompletionDate:\n            description: This is the date provided by the Seller to indicate the date\n              by which the Quote is expected to reach a Quote Completion State\n            format: date-time\n            type: string\n          validFor:\n            $ref: '#/components/schemas/TimePeriod'\n          quoteLevel:\n            $ref: '#/components/schemas/MEFSellerQuoteLevel'\n          quoteItem:\n            description: An item of the quote - it is used to describe an operation\n              on a product to be quoted\n            items:\n              $ref: '#/components/schemas/QuoteItem'\n            minItems: 1\n            type: array\n          stateChange:\n            description: State change for the Quote\n            items:\n              $ref: '#/components/schemas/MEFQuoteStateChange'\n            type: array\n          id:\n            description: Unique identifier - attributed by quoting system\n            type: string\n          href:\n            description: |\n              Hyperlink representing this Quote. Hyperlink MAY be used when providing a response by the Seller\n            type: string\n          state:\n            $ref: '#/components/schemas/MEFQuoteStateType'\n          quoteDate:\n            description: Date and time when the quote was created\n            format: date-time\n            type: string\n        required:\n        - id\n        - quoteDate\n        - quoteItem\n        type: object\n    QuoteItem:\n      allOf:\n      - $ref: '#/components/schemas/MEFQuoteItem_Common'\n      - description: Quote items describe an action to be performed on a productOffering\n          or a product in order to get pricing elements and conditions.\n        properties:\n          terminationError:\n            description: \"When the Seller cannot process the Quote Item Request, the\\\n              \\ Seller returns a text-based list of reasons here.\"\n            items:\n              $ref: '#/components/schemas/TerminationError'\n            type: array\n          quoteItemInstallationInterval:\n            $ref: '#/components/schemas/Duration'\n          subjectToFeasibilityCheck:\n            description: For a Firm Quote Level indicates if the pricing requires\n              a Feasibility Check. The Seller indicates if the Quote Item requires\n              a Feasibility Check. This is not used for a Budgetary Quote Level.\n            type: boolean\n          quoteItemTerm:\n            description: Quote Item Term as defined by the Seller and part of the\n              Quote for the Quote Item.\n            items:\n              $ref: '#/components/schemas/MEFItemTerm'\n            maxItems: 1\n            type: array\n          state:\n            $ref: '#/components/schemas/MEFQuoteItemStateType'\n          quoteItemPrice:\n            description: Price for this quote item\n            items:\n              $ref: '#/components/schemas/QuotePrice'\n            type: array\n        required:\n        - state\n        type: object\n    QuoteItemRelationship:\n      description: Used to describe the relationship between quote items. These relationships\n        could have an impact on pricing and conditions\n      properties:\n        relationshipType:\n          description: \"Relationship type as relies on, bundles, etc... MEF: Specifies\\\n            \\ the nature of the relationship to the related Quote Items. The nature\\\n            \\ of required relationships varies for Products of different types. For\\\n            \\ example, a UNI or ENNI Product may not have any relationships, but an\\\n            \\ Access E-Line may have two mandatory relationships (related to the UNI\\\n            \\ on one end and the ENNI on the other). More complex Products such as\\\n            \\ multipoint IP or Firewall Products may have more complex relationships.\\\n            \\ As a result, the allowed and mandatory Relationship Nature values are\\\n            \\ defined in the Product Specification.\"\n          type: string\n        id:\n          description: ID of the related quote item (must be in the same quote)\n          type: string\n      required:\n      - id\n      - relationshipType\n      type: object\n    QuoteOperationData:\n      description: Request for operation on an existing Quote (cancel or decline)\n      properties:\n        reason:\n          description: Allows the Buyer to specify a reason for the Cancel or Decline\n            Quote request.\n          type: string\n        quoteId:\n          description: \"Unique (within the Seller quoting domain) identifier for the\\\n            \\ quote, as attributed by the Seller.\"\n          type: string\n      required:\n      - quoteId\n      type: object\n    QuotePrice:\n      description: Description of price and discount awarded\n      properties:\n        unitOfMeasure:\n          description: \"Unit of Measure if price depending on it (Gb, SMS volume,\\\n            \\ etc..) MEF: if Quote Item Price Type equals usageBased\"\n          type: string\n        price:\n          $ref: '#/components/schemas/Price'\n        name:\n          description: Name of the quote/quote item price\n          type: string\n        priceType:\n          $ref: '#/components/schemas/MEFPriceType'\n        description:\n          description: Description of the quote/quote item price\n          type: string\n        recurringChargePeriod:\n          $ref: '#/components/schemas/MEFChargePeriod'\n      type: object\n    Quote_Common:\n      description: \"Quote can be used to negotiate service and product acquisition\\\n        \\ or modification between a customer and a service provider. Quote contains\\\n        \\ a list of quote items, a reference to a customer, a list of productOfferings,\\\n        \\ and attached prices and conditions.\"\n      properties:\n        note:\n          description: Free form text associated with the quote. Only useful in processes\n            involving human interaction. Not applicable for the automated process.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        requestedQuoteCompletionDate:\n          description: This is requested date - from quote requester - to get a complete\n            response for this quote\n          format: date-time\n          type: string\n        relatedContactInformation:\n          description: \"Party playing a role for this quote. If `instantSyncQuote`\\\n            \\ equals `false` \\nthen the Buyer MUST specify Buyer Contact Information\\\n            \\ ('role: buyerContactInformation') \\nand the Seller MUST specify Seller\\\n            \\ Contact Information ('role: sellerContactInformation')\"\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        description:\n          description: Description of the quote\n          type: string\n        externalId:\n          description: ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n          type: string\n        buyerRequestedQuoteLevel:\n          $ref: '#/components/schemas/MEFBuyerQuoteLevel'\n        projectId:\n          description: An identifier that is used to group Quotes that represent a\n            unit of functionality that is important to a Buyer. A Project can be used\n            to relate multiple Quotes together.\n          type: string\n        instantSyncQuote:\n          description: \"If this flag is set to true, the Buyer requests an immediate\\\n            \\ Quote to be provided in the response to the creation of a Quote.\"\n          type: boolean\n      required:\n      - buyerRequestedQuoteLevel\n      - instantSyncQuote\n      type: object\n    Quote_Create:\n      allOf:\n      - $ref: '#/components/schemas/Quote_Common'\n      - description: |\n          Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contains a list of quote items, a reference to a customer, a list of productOfferings, and attached prices and conditions.\n        properties:\n          quoteItem:\n            description: An item of the quote - used to describe an operation on a\n              product to be quoted\n            items:\n              $ref: '#/components/schemas/MEFQuoteItem_Create'\n            minItems: 1\n            type: array\n        required:\n        - quoteItem\n        type: object\n    Quote_Find:\n      description: |\n        This class represents a single list item for the response of `listQuote` operation.\n      properties:\n        effectiveQuoteCompletionDate:\n          description: Date when the Quote State was set to one of the Completion\n            States\n          format: date-time\n          type: string\n        expectedQuoteCompletionDate:\n          description: This is the date provided by the Seller to indicate expected\n            Quote completion date\n          format: date-time\n          type: string\n        requestedQuoteCompletionDate:\n          description: This is requested date - from quote requester - to get a complete\n            response for this quote\n          format: date-time\n          type: string\n        quoteLevel:\n          $ref: '#/components/schemas/MEFSellerQuoteLevel'\n        externalId:\n          description: ID given by the consumer and only understandable by him (to\n            facilitate his searches afterward)\n          type: string\n        id:\n          description: Unique identifier - attributed by quoting system\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFQuoteStateType'\n        projectId:\n          description: An identifier that is used to group Quotes that represent a\n            unit of functionality that is important to a Buyer. A Project can be used\n            to relate multiple Quotes together.\n          type: string\n        quoteDate:\n          description: Date and time when the quote was created\n          format: date-time\n          type: string\n      required:\n      - state\n      type: object\n    RelatedContactInformation:\n      description: \"Contact data for a person or organization that is involved in\\\n        \\ a given context. It is specified by the Seller (e.g. Seller Contact Information)\\\n        \\ or by the Buyer. \\nReference: MEF 80 (Sn 8.1.9)\"\n      properties:\n        number:\n          description: Phone number\n          type: string\n        emailAddress:\n          description: Email address\n          type: string\n        role:\n          description: The role of the particular contact in a given context.\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/FieldedAddress'\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n      required:\n      - emailAddress\n      - name\n      - number\n      - role\n      type: object\n    RelatedPlaceRefOrValue:\n      description: Place defines the places where the products' quotation must be\n        done.\n      discriminator:\n        mapping:\n          FieldedAddress: '#/components/schemas/FieldedAddress'\n          FormattedAddress: '#/components/schemas/FormattedAddress'\n          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'\n          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'\n          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'\n          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'\n        propertyName: '@type'\n      properties:\n        role:\n          description: Role of this place\n          type: string\n        '@type':\n          description: |\n            This field is used as a discriminator and is used between different place representations. This type might discriminate for the additional related place as defined in '@schemaLocation'.\n          enum:\n          - FieldedAddress\n          - FormattedAddress\n          - GeographicAddressLabel\n          - GeographicAddressRef\n          - GeographicSiteRef\n          - MEFGeographicPoint\n          type: string\n        '@schemaLocation':\n          description: A URI to a JSON-Schema file that defines additional attributes\n            and relationships. May be used to define additional related place types.\n            Usage of this attribute must be agreed upon between Buyer and Seller.\n          format: uri\n          type: string\n      required:\n      - '@type'\n      - role\n      type: object\n    ShortDuration:\n      description: This class is used to describe durations expressed in minutes or\n        smaller time units\n      properties:\n        shortDurationValue:\n          description: \"The value of the duration. For example, if the duration is\\\n            \\ 20 ms, this element is 20.\"\n          type: integer\n        shortDurationUnits:\n          description: \"The unit of measure in the duration. For example, if an interval\\\n            \\ is 2ms, this element is MS.\"\n          $ref: '#/components/schemas/ShortDurationUnits'\n      type: object\n    ShortDurationUnits:\n      description: \"The unit of measure in the duration. For example, if an interval\\\n        \\ is 2ms, this element is MS.\"\n      enum:\n      - NS\n      - US\n      - MS\n      - SEC\n      - MIN\n      type: string\n    SlsCosNameEntry:\n      description: \"This is the specification of Performance Metrics (and parameters)\\\n        \\ for one Class of Service. The first element is the CoS Name. This MUST be\\\n        \\ unique, i.e. there can not be two instances of this Class with the same\\\n        \\ CoS Name. The CoS Name is followed by three parameters and then lists of\\\n        \\ Performance Metrics.\"\n      properties:\n        thresholdC:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - thresholdC is\\\n            \\ a real number in the range [0,1] used as a threshold to determine whether\\\n            \\ a given time interval ?tk has high loss.\"\n          maximum: 1\n          minimum: 0\n          type: number\n        oneWayConsecutiveHighLossIntervalsPmMetric:\n          description: MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 - oneWayConsecutiveHighLossIntervalsPmMetric\n            is a reference to zero or more instances of One Way Consecutive High Loss\n            Intervals Performance Metric. Each reference contains a set of parameters\n            and performance objective for the Performance Metric. If there are 0 instances\n            then this Class of Service does not have an objective for One Way CHLI.\n            If there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayConsecutiveHighLossIntervalsPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameDelayPmMetric:\n          description: MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - oneWayFrameDelayPmMetric\n            is a reference to zero or more instances of One Way Frame Delay Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Delay. If there are\n            multiple instances for this Class of Service then at least one of the\n            parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayInterFrameDelayVariationPmMetric:\n          description: MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 - oneWayInterFrameDelayVariationPmMetric\n            is a reference to zero or more instances of One Way Inter Frame Delay\n            Variation Performance Metric. Each reference contains a set of parameters\n            and performance objective for the Performance Metric. If there are 0 instances\n            then this Class of Service does not have an objective for One Way Inter\n            Frame Delay Variation. If there are multiple instances for this Class\n            of Service then at least one of the parameters must be different between\n            the instances.\n          items:\n            $ref: '#/components/schemas/OneWayInterFrameDelayVariationPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayMeanFrameDelayPmMetric:\n          description: MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - oneWayMeanFrameDelayPmMetric\n            is a reference to zero or more instances of One Way Mean Frame Delay Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Mean Frame Delay. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayMeanFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayGroupAvailabilityPmMetric:\n          description: MEF 10.4 sec. 8.8.11 and MEF 26.2 sec. 12.13.10 - oneWayGroupAvailabilityPmMetric\n            is a reference to zero or more instances of One Way Group Availability\n            Performance Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then this\n            Class of Service does not have an objective for One Way Group Availability.\n            If there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayAvailabilityPmMetric:\n          description: MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 - oneWayAvailabilityPmMetric\n            is a reference to zero or more instances of One Way Availability Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Availability. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayHighLossIntervalsPmMetric:\n          description: MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 - oneWayHighLossIntervalsPmMetric\n            is a reference to zero or more instances of One Way High Loss Intervals\n            Performance Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then this\n            Class of Service does not have an objective for One Way HLI. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayHighLossIntervalPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayCompositePmMetric:\n          description: MEF 10.4 sec. 8.8.10 - oneWayCompositePmMetric is a reference\n            to zero or more instances of One Way Composite Performance Metric. Each\n            reference contains a set of parameters and performance objective for the\n            Performance Metric. If there are 0 instances then this Class of Service\n            does not have an objective for One Way Composite Performance. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayCompositePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameLossRatioPmMetric:\n          description: MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 - oneWayFrameLossRatioPmMetric\n            is a reference to zero or more instances of One Way Frame Loss Ratio Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Loss Ratio. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameLostRatioPmMetric'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        consecutiveIntervalN:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - consectiveIntervalN\\\n            \\ is an integer ? 1, used to identify how many consecutive ?\\U0001d461\\\n            \\U0001d458 intervals must have high loss to trigger a change in Availability.\"\n          minimum: 1\n          type: integer\n        deltaT:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - deltaT is a time\\\n            \\ duration in seconds much smaller than timeInterval. This is used, primarily,\\\n            \\ in calculations associated with Availability, High Loss Intervals and\\\n            \\ Consecutive High Loss Intervals. MEF 10.4 and MEF 26.2 refer to this\\\n            \\ as ?t and the k-th interval starting at ts is referred to as ?tk (k\\\n            \\ is subscript).\"\n          minimum: 1\n          type: integer\n        oneWayFrameDelayRangePmMetric:\n          description: MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 - oneWayFrameDelayRangePmMetric\n            is a reference to zero or more instances of One Way Frame Delay Range\n            Performance Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then this\n            Class of Service does not have an objective for One Way Frame Delay Range.\n            If there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayRangePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        cosName:\n          description: This is the CoS Name for this PM Entry.\n          minLength: 1\n          type: string\n      type: object\n    SourceMacAddressLimit:\n      description: This limits the number of source MAC addresses that can be used\n        in ingress  frame mapped to the End Point of all types over a time interval.\n        It is a recommendation that each Ingress EI Frame with a source MAC address\n        that would exceed the limit be discarded by the Carrier Ethernet Network.\n      properties:\n        limit:\n          description: The number of MAC source addresses that will not subject an\n            Ingress EI Frame to discard during the time interval.\n          minimum: 1\n          type: integer\n        interval:\n          $ref: '#/components/schemas/ShortDuration'\n      type: object\n    SubscriberUniCommon:\n      description: \"This class contains all of the Subscriber UNI Services Attributes\\\n        \\ that are used in all four Business Functions (POQ, Quote, Order, Inventory).\\\n        \\ At this time, this includes all of the Subscriber UNI Service Attributes.\\\n        \\ This class is used to compose the SubscriberUNI class which has one file\\\n        \\ for each Business Function that differ in terms of the Service Attributes\\\n        \\ that are \\\"Required\\\" for the Business Function (rather than \\\"Optional\\\"\\\n        ).\"\n      properties:\n        listOfPhyLinks:\n          description: \"MEF 10.4 sec. 9.4 - The value of the Subscriber UNI List of\\\n            \\ Physical Links Service Attribute is a list of 5-tuples of the form id,\\\n            \\ ?physicalLink, synchronousEthernet, precisionTiming, demarcConnectorType?\\\n            , with one list item for each physical link. The value of id is an identifier\\\n            \\ for the physical link. The value of physicalLink is the specific Ethernet\\\n            \\ physical layer type. synchronousEthernet indicates if synchronous Ethernet\\\n            \\ is used on the physical link and has the value Enabled or Disabled.\\\n            \\ The value of precisionTiming indicates if the Precision Time Protocol\\\n            \\ is used on the physical link and has the value Enabled or Disabled.\\\n            \\ The value of demarcConnectorType specifies the type of connector used.\\\n            \\ Note that the id and the physicalLink come from the CarrierEthernetPhysicalLink\\\n            \\ class.\"\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        virtualFrameMap:\n          description: \"MEF 10.4 sec. 9.2 and sec. 9.3 - When the value of the Subscriber\\\n            \\ UNI Instantiation Service Attribute = Virtual there must exist a map\\\n            \\ that maps the set of Virtual Frames that cross the UNI to a sequence\\\n            \\ of pairs of the form ?s,t? where s is a standard Ethernet frame per\\\n            \\ Clause 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival time at the\\\n            \\ UNI for all bits in s. Since MEF 10.4 does not specify the contents\\\n            \\ or format of this map, it is currently defined as an arbitrary length\\\n            \\ string.\"\n          items:\n            $ref: '#/components/schemas/VirtualFrameMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        portConversation:\n          description: \"MEF 10.4 sec. 9.6 - A mapping of Port Conversation IDs (i.e.,\\\n            \\ VLAN IDs or zero for untagged frames) to an ordered list of physical\\\n            \\ links if there are multiple physical links in the UNI and the link aggregation\\\n            \\ is ALL_ACTIVE.\"\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfEndPoints:\n          description: MEF 10.4 sec. 9.9 - The maximum number of OVC End Points that\n            the Operator CEN can support at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagLinkMeg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOAM:\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          $ref: '#/components/schemas/LinkAggType'\n        l2cpPeering:\n          $ref: '#/components/schemas/L2cpPeering'\n        maximumNumberOfCtagVlanIdsPerEndPoint:\n          description: MEF 10.4 sec. 9.10 - An integer greater than or equal to 1\n            that limits the number of C-Tag VLAN IDs that can map to each EVC End\n            Point.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: MEF 10.4 sec. 9.8 - Specifies the maximum size of Service Frames\n            that can be transmitted across UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \"MEF 10.4 sec. 9.12 - The Envelopes and Envelope Coupling Flag\\\n            \\ values to which Bandwidth Profile Flows can be mapped. Value is None\\\n            \\ or non-empty list of {envelopeID, couplingFlagForIndexZero}. If this\\\n            \\ property is not present or an empty list, the value is assumed to have\\\n            \\ the value None.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        instantiation:\n          description: \"MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is\\\n            \\ implemented using one or more instances of a standard Physical Layer.\\\n            \\ When the value is Virtual, the physical layer is not specified.\"\n          $ref: '#/components/schemas/Instantiation'\n      type: object\n    TerminationError:\n      description: This indicates an error that caused an Item to be terminated. The\n        code and propertyPath should be used like in Error422.\n      properties:\n        code:\n          $ref: '#/components/schemas/Error422Code'\n        propertyPath:\n          description: |\n            A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\n            Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n          type: string\n        value:\n          description: Text to describe the reason of the termination.\n          type: string\n      type: object\n    Time:\n      description: \"This Class provides full specification for a date and time: year:month:day\\\n        \\ hour:minute:sec. The time and date are UTC.\"\n      properties:\n        month:\n          maximum: 12\n          minimum: 1\n          type: integer\n        hour:\n          maximum: 23\n          minimum: 0\n          type: integer\n        year:\n          minimum: 1900\n          type: integer\n        day:\n          maximum: 31\n          minimum: 1\n          type: integer\n        minute:\n          maximum: 59\n          minimum: 0\n          type: integer\n        second:\n          maximum: 59\n          minimum: 0\n          type: integer\n      type: object\n    TimePeriod:\n      description: \"A period of time, either as a deadline (endDateTime only) a startDateTime\\\n        \\ only, or both.\"\n      properties:\n        startDateTime:\n          description: \"Start of the time period, using IETC-RFC-3339 format. If you\\\n            \\ define a start, you must also define an end\"\n          example: 1985-04-12T23:20:50.52Z\n          format: date-time\n          type: string\n        endDateTime:\n          description: \"End of the time period, using IETC-RFC-3339 format\"\n          example: 1985-04-12T23:20:50.52Z\n          format: date-time\n          type: string\n      type: object\n    TimeUnit:\n      description: |\n        Represents a unit of time.\n        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)\n      enum:\n      - calendarMonths\n      - calendarDays\n      - calendarHours\n      - calendarMinutes\n      - businessDays\n      - businessHours\n      - businessMinutes\n      type: string\n    UniConnectorGender:\n      description: This indicates whether the Subscriber is presented with a SOCKET\n        (common) or a PLUG (less common).\n      enum:\n      - SOCKET\n      - PLUG\n      type: string\n    UniConnectorType:\n      description: This indicates the type of connector that is presented to the Subscriber.\n      enum:\n      - SC\n      - LC\n      - RJ45\n      - FC\n      - D4\n      - OTHER\n      type: string\n    UniPhysicalLink:\n      allOf:\n      - $ref: '#/components/schemas/CarrierEthernetPhysicalLink'\n      - $ref: '#/components/schemas/UniSpecificAttributes'\n      description: \"This class describes the Physical Link attributes at a UNI. It\\\n        \\ is a 6-tuple ?id, phy, frequency sync enable, PTP enable, connector, gender?\\\n        .\"\n    UniSpecificAttributes:\n      properties:\n        uniConnectorGender:\n          description: This indicates whether the Subscriber is presented with a SOCKET\n            (common) or a PLUG (less common).\n          $ref: '#/components/schemas/UniConnectorGender'\n        synchronousEthernet:\n          $ref: '#/components/schemas/EnabledDisabled'\n        uniConnectorType:\n          description: This indicates the type of connector that is presented to the\n            Subscriber.\n          $ref: '#/components/schemas/UniConnectorType'\n        precisionTiming:\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    VirtualFrameMap:\n      description: A map for virtual frame mapping.   The absence of this attribute\n        corresponds to a Service Attribute value of Not Applicable. Reference MEF\n        10.4 Section 9.3 Subscriber UNI Virtual Frame Map Service Attribute.\n      properties:\n        vfMap:\n          description: \"MEF 10.4 sec. 9.2 and sec. 9,3 - When the value of the Subscriber\\\n            \\ UNI Instantiation Service Attribute = Virtual, there must exist a map\\\n            \\ that maps the set of Virtual Frames that cross the UNI to a sequence\\\n            \\ of pairs of the form?s,t where s is a standard Ethernet frame per Clause\\\n            \\ 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival time at the UNI\\\n            \\ for all bits in s. Since MEF 10.4 does not specify the contents or format\\\n            \\ of this map, it is currently defined as an arbitrary length string.\"\n          minLength: 0\n          type: string\n      type: object\n    VlanType:\n      description: An indication of the type EVC End Point Map. If the value is UT/PT\n        then no additional information is required. If the value is LIST then a list\n        of C-VLAN ID values must be specified.\n      enum:\n      - LIST\n      - UT/PT\n      type: string\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/generated/staticBinding/carrierEthernet/quoteManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/generated/staticBinding/carrierEthernet/quoteManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}