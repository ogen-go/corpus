{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ministryofjustice/hmpps-book-secure-move-api"
		},
		"file": {
			"name": "swagger_doc_v2.yaml",
			"size": 0,
			"path": "spec/swagger/swagger_doc_v2.yaml",
			"byteSize": 26141,
			"content": "---\n:basePath: \"/api/v2\"\n:openapi: 3.0.1\n:info:\n  :title: PECS4 API V2 Docs\n  :version: v2\n  :description: |\n    Book A Secure Move supplier and frontend API.\n\n    Ids in this api are typically not required in the request body where they\n    are specifiable in the path.\n\n    Ids always come back for resources in responses.\n:consumes:\n  - application/vnd.api+json\n:produces:\n  - application/vnd.api+json; version=2\n:servers:\n  - :url: http://localhost:3000/api\n    :description: Local development (localhost)\n  - :url: https://hmpps-book-secure-move-api-dev.apps.live-1.cloud-platform.service.justice.gov.uk/api\n    :description: Dev API\n  - :url: https://hmpps-book-secure-move-api-staging.apps.live-1.cloud-platform.service.justice.gov.uk/api\n    :description: Staging API\n  - :url: https://hmpps-book-secure-move-api-uat.apps.live-1.cloud-platform.service.justice.gov.uk/api\n    :description: UAT API\n  - :url: https://hmpps-book-secure-move-api-preprod.apps.live-1.cloud-platform.service.justice.gov.uk/api\n    :description: PreProd API\n  - :url: https://api.bookasecuremove.service.justice.gov.uk/api\n    :description: Production API\n:security:\n  - :oauth2: []\n:components:\n  :securitySchemes:\n    :oauth2:\n      :type: :oauth2\n      :flows:\n        :clientCredentials:\n          :authorizationUrl: \"/oauth/authorize\"\n          :tokenUrl: \"/oauth/token/\"\n          :scopes: {}\n  :schemas:\n    :Category:\n      :$ref: \"../v2/category.yaml#/Category\"\n    :Ethnicity:\n      :$ref: \"../v1/ethnicity.yaml#/Ethnicity\"\n    :Gender:\n      :$ref: \"../v1/gender.yaml#/Gender\"\n    :Person:\n      :$ref: \"../v2/person.yaml#/Person\"\n    :Profile:\n      :$ref: \"../v1/profile.yaml#/Profile\"\n    :Move:\n      :$ref: \"../v2/move.yaml#/Move\"\n    :Event:\n      :$ref: \"../v2/event.yaml#/EventResponseBody\"\n:paths:\n  \"/people\":\n    get:\n      summary: \"Returns a list of people\"\n      tags:\n        - People\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - \"$ref\": \"../v1/content_type_parameter.yaml#/ContentType\"\n        - \"$ref\": \"../v2/accept_encoding.yaml#/AcceptEncoding\"\n        - name: filter[police_national_computer]\n          in: query\n          description:\n            Filters results to only include people identified by their police_national_computer.\n            This is a case insensitive search.\n            Either filter[police_national_computer], filter[prison_number] or filter[criminal_records_office]\n            are supported.\n          schema:\n            type: string\n            example: 07/1435713R\n          format: string\n          required: false\n        - name: filter[criminal_records_office]\n          in: query\n          description:\n            Filters results to only include people identified by their\n            This is a case insensitive search.\n            criminal_records_office. Either filter[police_national_computer], filter[prison_number]\n            or filter[criminal_records_office] are supported.\n          schema:\n            type: string\n            example: 610592/05U\n          format: string\n          required: false\n        - name: filter[prison_number]\n          in: query\n          description:\n            Filters results to only include people identified by their prison_number.\n            This is a case insensitive search.\n            Either filter[police_national_computer], filter[prison_number] or filter[criminal_records_office]\n            are supported.\n          schema:\n            type: string\n            example: G1234UT\n          format: string\n          required: false\n        - \"$ref\": \"../v2/person_include_parameter.yaml#/PersonIncludeParameter\"\n        - \"$ref\": \"../v1/pagination_parameters.yaml#/Page\"\n        - \"$ref\": \"../v1/pagination_parameters.yaml#/PerPage\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_people_responses.yaml#/200\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_people_responses.yaml#/401\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_people_responses.yaml#/415\"\n        \"504\":\n          description: Nomis Timeout error\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_people_responses.yaml#/504\"\n    post:\n      summary: \"Creates a new person\"\n      tags:\n        - People\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - name: body\n          in: body\n          required: true\n          description: The person object to be created\n          schema:\n            \"$ref\": \"../v2/person.yaml#/Person\"\n        - \"$ref\": \"../v2/person_include_parameter.yaml#/PersonIncludeParameter\"\n      responses:\n        \"201\":\n          description: created\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_people_responses.yaml#/201\"\n        \"400\":\n          description: bad request\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_people_responses.yaml#/400\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_people_responses.yaml#/401\"\n        \"404\":\n          description: resource not found\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_people_responses.yaml#/404\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_people_responses.yaml#/415\"\n        \"422\":\n          description: unprocessable entity\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_people_responses.yaml#/422\"\n  \"/people/{person_id}\":\n    get:\n      summary: Returns a person\n      tags:\n        - People\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - name: person_id\n          in: path\n          required: true\n          description: The ID of the person\n          schema:\n            type: string\n          format: uuid\n          example: 00525ecb-7316-492a-aae2-f69334b2a155\n        - \"$ref\": \"../v2/person_category_include_parameter.yaml#/PersonCategoryIncludeParameter\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_person_responses.yaml#/200\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_person_responses.yaml#/401\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_person_responses.yaml#/415\"\n        \"502\":\n          description: Nomis Bad Gateway Error\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_person_responses.yaml#/502\"\n        \"504\":\n          description: Nomis Timeout Error\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_person_responses.yaml#/504\"\n    patch:\n      summary: \"Updates an existing person.\"\n      tags:\n        - People\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - name: person_id\n          in: path\n          required: true\n          description: The ID of the person\n          schema:\n            type: string\n          format: uuid\n          example: 00525ecb-7316-492a-aae2-f69334b2a155\n        - name: body\n          in: body\n          required: true\n          description: The person object to be updated\n          schema:\n            \"$ref\": \"../v2/person.yaml#/Person\"\n        - \"$ref\": \"../v2/person_include_parameter.yaml#/PersonIncludeParameter\"\n      responses:\n        \"200\":\n          description: updated\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_people_responses.yaml#/200\"\n        \"400\":\n          description: bad request\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_people_responses.yaml#/400\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_people_responses.yaml#/401\"\n        \"404\":\n          description: resource not found\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_people_responses.yaml#/404\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_people_responses.yaml#/415\"\n        \"422\":\n          description: unprocessable entity\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_people_responses.yaml#/422\"\n  \"/moves\":\n    get:\n      summary: Returns a list of moves\n      tags:\n        - Moves\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - \"$ref\": \"../v1/content_type_parameter.yaml#/ContentType\"\n        - \"$ref\": \"../v2/accept_encoding.yaml#/AcceptEncoding\"\n        - name: filter[date_from]\n          in: query\n          description:\n            Filters results to only include moves on and after the given\n            date, e.g. `2019-05-02`\n          schema:\n            type: string\n            example: \"2019-05-09\"\n          format: date\n        - name: filter[date_to]\n          in: query\n          description:\n            Filters results to only include moves up to and including the\n            given date, e.g. `2019-05-09`\n          schema:\n            type: string\n            example: \"2019-05-09\"\n          format: date\n        - name: filter[created_at_from]\n          in: query\n          description:\n            Filters results to only include moves created on or after the\n            given date, e.g. `2019-05-02`\n          schema:\n            type: string\n            example: \"2019-05-09\"\n          format: date\n        - name: filter[created_at_to]\n          in: query\n          description:\n            Filters results to only include moves created on or before\n            the given date, e.g. `2019-05-09`\n          schema:\n            type: string\n            example: \"2019-05-09\"\n          format: date\n        - name: filter[date_of_birth_from]\n          in: query\n          description:\n            Filters results to only include moves with people born on or after the\n            given date, e.g. `2009-05-02`\n          schema:\n            type: string\n            example: \"2009-05-09\"\n          format: date\n        - name: filter[date_of_birth_to]\n          in: query\n          description:\n            Filters results to only include moves with people born on or before\n            the given date, e.g. `2009-05-09`\n          schema:\n            type: string\n            example: \"2009-05-09\"\n          format: date\n        - name: filter[status]\n          in: query\n          explode: false\n          description: Filters results to only include moves with the given statuses\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - proposed\n                - requested\n                - booked\n                - in_transit\n                - cancelled\n                - completed\n        - name: filter[move_type]\n          in: query\n          explode: false\n          description: Filters results to only include moves with the given move_types\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - court_appearance\n                - police_transfer\n                - prison_recall\n                - prison_transfer\n        - name: filter[cancellation_reason]\n          in: query\n          explode: false\n          description: Filters results to only include moves with the given cancellation_reasons\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - made_in_error\n                - supplier_declined_to_move\n                - cancelled_by_pmu\n                - rejected\n                - other\n        - name: filter[rejection_reason]\n          in: query\n          explode: false\n          description: Filters results to only include moves with the given rejection_reasons\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - no_space_at_receiving_prison\n                - no_transport_available\n        - name: filter[supplier_id]\n          description: Filters results to only include moves for the given supplier UUIDs\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n        - name: filter[from_location_id]\n          description:\n            Filters results to only include moves from the given location\n            UUIDs\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n        - name: filter[to_location_id]\n          description:\n            Filters results to only include moves to the given location\n            UUIDs\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n        - name: filter[has_relationship_to_allocation]\n          in: query\n          explode: false\n          description:\n            Filters results to either exclude or include moves associated\n            to an allocation optionally\n          schema:\n            type: boolean\n            example: true\n        - name: filter[ready_for_transit]\n          in: query\n          explode: false\n          description:\n            Filters results to either moves which have a confirmed person escort record if set to true,\n            and moves with no person escort record or non confirmed person escort records if set to false.\n            Please note that this filter does not filter by move status, and will include all moves that\n            match the above criteria regardless of status i.e. this filter will include moves which are not\n            necessarily in the `booked` status. Additional filters are necessary to limit the results to the required\n            status of moves (example `booked`).\n          schema:\n            type: boolean\n            example: true\n        - name: filter[profile_id]\n          description: Filters results to only include moves for the given profile UUIDs\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n        - name: filter[person_id]\n          description: Filters results to only include moves for the given person UUIDs\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n        - name: filter[reference]\n          description: Filters results to only include moves with a given reference\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: sort[by]\n          description: field to sort results by\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: string\n            enum:\n              - name\n              - from_location\n              - to_location\n              - prison_transfer_reason\n              - created_at\n              - date\n              - date_from\n        - name: sort[direction]\n          description: direction to sort by\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - name: meta\n          description: list of meta data fields to include for specified resource\n          in: query\n          style: form\n          explode: false\n          schema:\n            type: string\n            enum:\n              - vehicle_registration\n              - expected_time_of_arrival\n              - expected_collection_time\n        - \"$ref\": \"../v2/moves_include_parameter.yaml#/MovesIncludeParameter\"\n        - \"$ref\": \"../v1/pagination_parameters.yaml#/Page\"\n        - \"$ref\": \"../v1/pagination_parameters.yaml#/PerPage\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_moves_responses.yaml#/200\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_moves_responses.yaml#/401\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_moves_responses.yaml#/415\"\n    post:\n      summary: Creates a new move\n      tags:\n        - Moves\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - name: body\n          in: body\n          required: true\n          description: The move object to be created\n          schema:\n            \"$ref\": \"../v2/move.yaml#/Move\"\n        - \"$ref\": \"../v2/move_include_parameter.yaml#/MoveIncludeParameter\"\n      responses:\n        \"201\":\n          description: created\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_moves_responses.yaml#/201\"\n        \"400\":\n          description: bad request\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_moves_responses.yaml#/400\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_moves_responses.yaml#/401\"\n        \"404\":\n          description: resource not found\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_moves_responses.yaml#/404\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_moves_responses.yaml#/415\"\n        \"422\":\n          description: unprocessable entity\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_moves_responses.yaml#/422\"\n  \"/moves/{move_id}\":\n    patch:\n      summary: Updates a move. Aliased as PUT /moves/{move_id}.\n      tags:\n        - Moves\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - \"$ref\": \"../v1/move_id_parameter.yaml#/MoveId\"\n        - name: body\n          in: body\n          required: true\n          description: The move object to be modified\n          schema:\n            \"$ref\": \"../v2/patch_move.yaml#/Move\"\n        - \"$ref\": \"../v2/move_include_parameter.yaml#/MoveIncludeParameter\"\n        - name: create_in_nomis\n          in: query\n          oneOf:\n            - type: boolean\n            - type: \"null\"\n          example: \"true\"\n          description: Indicates if the move should be automatically created in NOMIS\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_move_responses.yaml#/200\"\n        \"400\":\n          description: bad request\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_move_responses.yaml#/400\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_move_responses.yaml#/401\"\n        \"404\":\n          description: resource not found\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_move_responses.yaml#/404\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_move_responses.yaml#/415\"\n        \"422\":\n          description: unprocessable entity\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/patch_move_responses.yaml#/422\"\n    get:\n      summary: Returns the details of a move\n      tags:\n        - Moves\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - \"$ref\": \"../v2/accept_encoding.yaml#/AcceptEncoding\"\n        - name: Authorization\n          in: header\n          schema:\n            type: string\n            default: Bearer \u003cyour-client-token\u003e\n          required: true\n        - name: Content-Type\n          in: header\n          description: Accepted request content type\n          schema:\n            type: string\n            default: application/vnd.api+json\n          required: true\n        - name: move_id\n          in: path\n          description: The ID of the move\n          schema:\n            type: string\n          format: uuid\n          example: 00525ecb-7316-492a-aae2-f69334b2a155\n          required: true\n        - \"$ref\": \"../v2/move_include_parameter.yaml#/MoveIncludeParameter\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_move_responses.yaml#/200\"\n        \"401\":\n          description: unauthorised\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v1/error_responses.yaml#/401\"\n        \"404\":\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v1/error_responses.yaml#/404\"\n        \"415\":\n          description: invalid content type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v1/error_responses.yaml#/415\"\n  \"/reference/categories\":\n    get:\n      summary: Retrieves a list of prisoner and establishment categories\n      description: |\n        This method returns a list of categories\n      tags:\n        - Categories\n      consumes:\n        - application/vnd.api+json\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_categories_responses.yaml#/200\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_categories_responses.yaml#/401\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/get_categories_responses.yaml#/415\"\n  \"/events\":\n    post:\n      summary: Creates a new event for a given eventable\n      tags:\n        - Events\n      consumes:\n        - application/vnd.api+json\n      parameters:\n        - \"$ref\": \"../v2/accept_type_parameter.yaml#/Accept\"\n        - name: body\n          in: body\n          required: true\n          description: The event object to be created\n          schema:\n            \"$ref\": \"../v2/event.yaml#/EventRequestPostBody\"\n      responses:\n        \"201\":\n          description: created\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_event_responses.yaml#/201\"\n        \"400\":\n          description: bad request\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_event_responses.yaml#/400\"\n        \"401\":\n          description: unauthorized\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_event_responses.yaml#/401\"\n        \"404\":\n          description: resource not found\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_event_responses.yaml#/404\"\n        \"415\":\n          description: invalid media type\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_event_responses.yaml#/415\"\n        \"422\":\n          description: unprocessable entity\n          content:\n            application/vnd.api+json:\n              schema:\n                \"$ref\": \"../v2/post_event_responses.yaml#/422\"\n",
			"canonicalURL": "/github.com/ministryofjustice/hmpps-book-secure-move-api@2ee4fa91bba693adbd074208cff6cdce17b522e6/-/blob/spec/swagger/swagger_doc_v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ministryofjustice/hmpps-book-secure-move-api/blob/2ee4fa91bba693adbd074208cff6cdce17b522e6/spec/swagger/swagger_doc_v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}