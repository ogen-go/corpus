{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sprakash57/shortify"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "server/oas/openapi.yaml",
			"byteSize": 9221,
			"content": "openapi: 3.0.3\ninfo:\n  title: Shortify REST API\n  description: |-\n    **Shortify** converts your long URL into an eight-character short URL (a *'shorty'*).\n\n    ## Install Shortify (with Docker)\n\n    1. [Clone](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository) the Shortify repository (https://github.com/sprakash57/shortify) to your local machine\n    2. Ensure [Docker](https://www.docker.com/products/docker-desktop) is installed and running on your system\n    3. In your terminal app, visit the folder you cloned Shortify into and type `docker-compose up`\n    4. Once the Docker container (server, client and database) is running, visit [http://localhost:8080/](http://localhost:8080/)\n\n  version: '1.0'\n  x-logo:\n    url: 'shortify-logo.png'\n    backgroundColor: '#FFFFFF'\n    altText: 'Shortify logo'\n  contact:\n    url: 'https://suprdev.netlify.app/contact'\n    name: Supr Dev\n  license:\n    name: GNU General Public License version 3.0\n    url: 'https://opensource.org/licenses/GPL-3.0'\nexternalDocs:\n  description: The Shortify repository\n  url: 'https://github.com/sprakash57/shortify'\nservers:\n  - url: 'http://localhost:8081/api'\n    description: Localhost\ntags:\n  - name: Endpoints\n    description: All the Shortify REST API endpoints\npaths:\n  /:\n    get:\n      summary: Retrieve all shorties from the server\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n      operationId: get-shorties\n      tags:\n        - Endpoints\n      x-code-samples:\n        - lang: cURL\n          source: |\n            curl --location --request GET 'http://localhost:8081/api' \\\n            --header 'Accept: application/json'\n        - lang: JavaScript\n          source: |\n            var myHeaders = new Headers();\n            myHeaders.append(\"Accept\", \"application/json\");\n\n            var requestOptions = {\n              method: 'GET',\n              headers: myHeaders,\n              redirect: 'follow'\n            };\n\n            fetch(\"http://localhost:8081/api\", requestOptions)\n              .then(response =\u003e response.text())\n              .then(result =\u003e console.log(result))\n              .catch(error =\u003e console.log('error', error));\n  /create:\n    post:\n      summary: Create a shorty\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/inputUrl-request-body'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n      operationId: post-shorty\n      tags:\n        - Endpoints\n      x-code-samples:\n        - lang: cURL\n          source: |\n            curl --location --request POST 'http://localhost:8081/api/create' \\\n            --header 'Accept: application/json' \\\n            --header 'Content-Type: application/json' \\\n            --data-raw '{\n                \"inputUrl\": \"http://suprdev.netlify.app/\"\n            }'\n        - lang: JavaScript\n          source: |\n            var myHeaders = new Headers();\n            myHeaders.append(\"Accept\", \"application/json\");\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            var raw = JSON.stringify({\"inputUrl\":\"https://www.udemy.com/course/design-and-develop-a-killer-website-with-html5-and-css3/learn/lecture/2619778#questions/10895550\"});\n\n            var requestOptions = {\n              method: 'POST',\n              headers: myHeaders,\n              body: raw,\n              redirect: 'follow'\n            };\n            fetch(\"http://localhost:8081/api/create\", requestOptions)\n              .then(response =\u003e response.text())\n              .then(result =\u003e console.log(result))\n              .catch(error =\u003e console.log('error', error));\n  /delete/{id}:\n    delete:\n      summary: Delete a shorty\n      parameters:\n        - $ref: '#/components/parameters/id-path'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n      operationId: delete-shorty\n      tags:\n        - Endpoints\n      x-code-samples:\n        - lang: cURL\n          source: |\n            curl --location --request DELETE 'http://localhost:8081/api/delete/605f1d6fbd9b810014a1c072' \\\n            --header 'Accept: application/json'\n        - lang: JavaScript\n          source: |\n            var myHeaders = new Headers();\n            myHeaders.append(\"Accept\", \"application/json\");\n\n            var requestOptions = {\n              method: 'DELETE',\n              headers: myHeaders,\n              redirect: 'follow'\n            };\n\n            fetch(\"http://localhost:8081/api/delete/605f1d6fbd9b810014a1c072\", requestOptions)\n              .then(response =\u003e response.text())\n              .then(result =\u003e console.log(result))\n              .catch(error =\u003e console.log('error', error));\n  /deleteAll:\n    delete:\n      summary: Delete all shorties\n      responses:\n        '200':\n          $ref: '#/components/responses/200deleted'\n        '400':\n          $ref: '#/components/responses/400'\n      operationId: delete-shorties\n      tags:\n        - Endpoints\n      x-code-samples:\n        - lang: cURL\n          source: |\n            curl --location --request DELETE 'http://localhost:8081/api/deleteAll' \\\n            --header 'Accept: application/json'\n        - lang: JavaScript\n          source: |\n            var myHeaders = new Headers();\n            myHeaders.append(\"Accept\", \"application/json\");\n\n            var requestOptions = {\n              method: 'DELETE',\n              headers: myHeaders,\n              redirect: 'follow'\n            };\n\n            fetch(\"http://localhost:8081/api/deleteAll\", requestOptions)\n              .then(response =\u003e response.text())\n              .then(result =\u003e console.log(result))\n              .catch(error =\u003e console.log('error', error));\ncomponents:\n  schemas:\n    id:\n      type: string\n      minLength: 1\n      description: The shorty's identifying string (required for deletion)\n      example: 605f1d6fbd9b810014a1c072\n    inputUrl:\n      type: string\n      minLength: 1\n      description: The original/destination URL for the shorty\n      example: 'http://suprdev.netlify.app/'\n    inputUrl-request-body:\n      type: object\n      properties:\n        inputUrl:\n          $ref: '#/components/schemas/inputUrl'\n      required:\n        - inputUrl\n    200-success:\n      type: array\n      description: A list of all shorties on the server\n      uniqueItems: true\n      items:\n        type: object\n        properties:\n          _id:\n            $ref: '#/components/schemas/id'\n          inputUrl:\n            $ref: '#/components/schemas/inputUrl'\n          shortUrl:\n            type: string\n            minLength: 1\n            description: The 'shortified' version of the original URL\n            example: 'https://sup.dev/bl0fd1wb'\n            readOnly: true\n          createdAt:\n            type: string\n            minLength: 1\n            description: 'The date the shorty was first created (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))'\n            example: '2021-03-27T11:56:31.316Z'\n            readOnly: true\n          updatedAt:\n            type: string\n            minLength: 1\n            description: 'Same as `createdAt`'\n            example: '2021-03-27T11:56:31.316Z'\n            readOnly: true\n          __v:\n            type: number\n            description: For internal use\n            example: 0\n            readOnly: true\n      readOnly: true\n    400-bad-request:\n      type: object\n      properties:\n        error:\n          type: string\n          minLength: 1\n          description: The nature of the error\n          example: Url is missing\n          readOnly: true\n    200-deleted:\n      type: object\n      properties:\n        'n':\n          type: number\n          description: The number of shorties deleted\n          minimum: 0\n          example: 3\n          readOnly: true\n        ok:\n          type: number\n          description: Returns 1 if the deletion was successful\n          example: 1\n          readOnly: true\n        deletedCount:\n          type: number\n          description: The same as `n`\n          example: 3\n          minimum: 0\n          readOnly: true\n  responses:\n    '200':\n      description: Successful API call\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/200-success'\n    200deleted:\n      description: All shorties have been successfully deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/200-deleted'\n    '400':\n      description: Incorrectly formed API call\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/400-bad-request'\n          examples:\n            'Missing URL':\n              value:\n                error: 'Url is missing'\n            'Incorrect value supplied as parameter':\n              value:\n                error: '^Cast to ObjectId failed for value \\\"14\\\" at path \\\"_id\\\" for model \\\"Weburl\\\"'\n  parameters:\n    id-path:\n      name: id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/id'\n",
			"canonicalURL": "/github.com/sprakash57/shortify@0f4c140fb09271505b92c55be12bb2b6c4f5ccd4/-/blob/server/oas/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sprakash57/shortify/blob/0f4c140fb09271505b92c55be12bb2b6c4f5ccd4/server/oas/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}