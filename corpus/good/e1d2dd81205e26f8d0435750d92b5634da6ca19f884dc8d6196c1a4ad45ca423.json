{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "maven/org.projectnessie/nessie-model"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "META-INF/openapi.yaml",
			"byteSize": 4910,
			"content": "#\n# Copyright (C) 2020 Dremio\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nopenapi: 3.0.3 # must be compatible with quarkus\n\n# Note: the final OpenAPI definition file is produced at build time by merging this data with OpenAPI java annotations.\n\ninfo:\n  title: Nessie API\n  version: ${project.version}\n  contact:\n    name: Project Nessie\n    url: https://projectnessie.org\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n\npaths: {} # inferred from java annotations\n\ncomponents:\n  examples:\n\n    namespace:\n      value: \"a.b.c\"\n\n    ref:\n      value: \"main\"\n\n    hash:\n      value: \"2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d\"\n\n    nullHash:\n      value:\n\n    refObj:\n      value:\n        type: BRANCH\n        hash: \"2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d\"\n        name: \"main\"\n\n    refObjNew:\n      value:\n        type: BRANCH\n        hash: \"abcdef4242424242424242424242beef00dead42112233445566778899001122\"\n        name: \"exampleBranch\"\n\n    tagObj:\n      value:\n        type: TAG\n        hash: \"abcdef4242424242424242424242beef00dead42112233445566778899001122\"\n        name: \"exampleTag\"\n\n    ContentsKey:\n      value:\n        elements:\n          - example\n          - key\n\n    iceberg:\n      value:\n        type: ICEBERG_TABLE\n        metadataLocation: \"/path/to/metadata/\"\n        uuid: b874b5d5-f926-4eed-9be7-b2380d9810c0\n\n    expr_by_namespace:\n      value: \"entry.namespace.startsWith('a.b.c')\"\n    expr_by_contentType:\n      value: \"entry.contentType in ['ICEBERG_TABLE','DELTA_LAKE_TABLE']\"\n    expr_by_namespace_and_contentType:\n      value: \"entry.namespace.startsWith('some.name.space') \u0026\u0026 entry.contentType in ['ICEBERG_TABLE','DELTA_LAKE_TABLE']\"\n    expr_by_commit_author:\n      value: \"commit.author=='nessie_author'\"\n    expr_by_commit_committer:\n      value: \"commit.committer=='nessie_committer'\"\n    expr_by_commitTime:\n      value: \"timestamp(commit.commitTime) \u003e timestamp('2021-05-31T08:23:15Z')\"\n\n    commitMessage:\n      value: \"Example Commit Message\"\n\n    multiGetResponse:\n      value:\n        contents:\n          - contents:\n              type: ICEBERG_TABLE\n              metadataLocation: \"/path/to/metadata/\"\n              uuid: b874b5d5-f926-4eed-9be7-b2380d9810c0\n            key:\n              elements:\n                - example\n                - key\n\n    multiGetRequest:\n      value:\n        requestedKeys:\n          - elements:\n              - example\n              - key\n\n    entriesResponse:\n      value:\n        token: \"xxx\"\n        entries:\n          - name:\n              elements:\n                - example\n                - key\n            type: ICEBERG_TABLE\n\n    types:\n      value:\n        - ICEBERG_TABLE\n\n    merge:\n      value:\n        fromHash: \"abcdef4242424242424242424242beef00dead42112233445566778899001122\"\n\n    transplant:\n      value:\n        hashesToTransplant:\n          - \"abcdef4242424242424242424242beef00dead42112233445566778899001122\"\n\n    operations:\n      value:\n        commitMeta:\n          author: \"authorName \u003cauthorName@example.com\u003e\"\n          authorTime: \"2021-04-07T14:42:25.534748Z\"\n          hash: \"abcdef4242424242424242424242beef00dead42112233445566778899001122\"\n          message: \"Example Commit Message\"\n          properties:\n            additionalProp1: \"xxx\"\n            additionalProp2: \"yyy\"\n            additionalProp3: \"zzz\"\n          signedOffBy: \"signedOffByName \u003csignedOffBy@example.com\u003e\"\n        operations:\n          - type: PUT\n            key:\n              elements:\n                - example\n                - key\n            contents:\n              type: ICEBERG_TABLE\n              uuid: \"b874b5d5-f926-4eed-9be7-b2380d9810c0\"\n              metadataLocation: \"/path/to/metadata/\"\n\n    logResponse:\n      value:\n        token: \"xxx\"\n        operations:\n          - author: \"authorName \u003cauthorName@example.com\u003e\"\n            authorTime: \"2021-04-07T14:42:25.534748Z\"\n            commitTime: \"2021-04-07T14:42:25.534748Z\"\n            committer: \"committerName \u003ccommitterName@example.com\u003e\"\n            hash: \"abcdef4242424242424242424242beef00dead42112233445566778899001122\"\n            message: \"Example Commit Message\"\n            properties:\n              additionalProp1: \"xxx\"\n              additionalProp2: \"yyy\"\n              additionalProp3: \"zzz\"\n            signedOffBy: \"signedOffByName \u003csignedOffBy@example.com\u003e\"\n",
			"canonicalURL": "/maven/org.projectnessie/nessie-model@855a509516618a23495fd100bedab9c698a1165d/-/blob/META-INF/openapi.yaml",
			"externalURLs": []
		}
	}
}