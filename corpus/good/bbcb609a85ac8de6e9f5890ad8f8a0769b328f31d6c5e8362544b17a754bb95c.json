{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/incf-nidash/PyNIDM"
		},
		"file": {
			"name": "REST_API_definition.openapi.yaml",
			"size": 0,
			"path": "docs/REST_API_definition.openapi.yaml",
			"byteSize": 8127,
			"content": "openapi: 3.0.0\ninfo:\n  title: PyNIDM REST API\n  description: This is the REST API for PyNIDM\n  contact:\n    email: albert.crowley@tcg.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 0.1.0\nservers:\n- url: https://virtserver.swaggerhub.com/albertcrowley/PyNIDM/1.0.0\n  description: SwaggerHub API Auto Mocking\ntags:\n- name: users\n  description: Operations available to regular users\npaths:\n  /projects:\n    get:\n      tags:\n      - users\n      summary: returns a list of projects\n      description: |\n        Get a list of all projects available at this endpoint\n      operationId: projectList\n      parameters:\n      - name: filter\n        in: query\n        description: pass an optional search string for filtering projects (not implemented)\n        required: false\n        style: form\n        explode: true\n        schema:\n          $ref: '#/components/schemas/filter'\n      responses:\n        \"200\":\n          description: projects matching filter criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UUID'\n        \"400\":\n          description: bad input parameter\n  /projects/{project_id}:\n    get:\n      tags:\n      - users\n      summary: returns project details\n      description: Get details for a specific project\n      operationId: projectDetails\n      parameters:\n      - name: project_id\n        in: path\n        description: the project UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      responses:\n        \"200\":\n          description: project details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project_details'\n        \"400\":\n          description: bad input parameter\n  /projects/{project_id}/subjects:\n    get:\n      tags:\n      - users\n      summary: returns subjects in the supplied project_id\n      description: Get subjects for a project\n      operationId: subjects\n      parameters:\n      - name: project_id\n        in: path\n        description: the project UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      - name: filter\n        in: query\n        description: pass an optional search string for filtering projects (not implemented)\n        required: false\n        style: form\n        explode: true\n        schema:\n          $ref: '#/components/schemas/filter'\n      responses:\n        \"200\":\n          description: subjects matching filter criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UUID'\n        \"400\":\n          description: bad input parameter\n  /projects/{project_id}/subjects/{subject_id}:\n    get:\n      tags:\n      - users\n      summary: returns subject details\n      description: Get subject details\n      operationId: subjectsDetails\n      parameters:\n      - name: project_id\n        in: path\n        description: the project UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      - name: subject_id\n        in: path\n        description: the subject UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      responses:\n        \"200\":\n          description: subjects matching filter criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subject_details'\n        \"400\":\n          description: bad input parameter\n  /projects/{project_id}/subjects/{subject_id}/instruments:\n    get:\n      tags:\n      - users\n      summary: returns instrument UUIDs for a subject\n      description: Get instruments UUIDs for a subbject\n      operationId: subjectsInstrumets\n      parameters:\n      - name: project_id\n        in: path\n        description: the project UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      - name: subject_id\n        in: path\n        description: the subject UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      responses:\n        \"200\":\n          description: instrument UUIDs for the subjects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UUID'\n        \"400\":\n          description: bad input parameter\n  /projects/{project_id}/subjects/{subject_id}/derivatives:\n    get:\n      tags:\n      - users\n      summary: returns derivitve UUIDs for a subbject\n      description: Get derivitve UUIDs for a subbject\n      operationId: subjectsDerivative\n      parameters:\n      - name: project_id\n        in: path\n        description: the project UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      - name: subject_id\n        in: path\n        description: the subject UUID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: dc1bf9be-10a3-11ea-8779-003ee1ce9545\n      responses:\n        \"200\":\n          description: derivatives UUIDs for the subjects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UUID'\n        \"400\":\n          description: bad input parameter\ncomponents:\n  schemas:\n    UUID:\n      type: string\n      format: uuid\n      example: d290f1ee-6c54-4b01-90e6-d701748f0851\n    filter:\n      type: string\n      example: AGE_AT_SCAN gt 18\n    instrument:\n      type: object\n      additionalProperties:\n        type: string\n    instruments:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/instrument'\n    derivative_value:\n      type: object\n      properties:\n        datumType:\n          type: string\n        label:\n          type: string\n        value:\n          type: string\n        units:\n          type: string\n    derivative_value_dict_item:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/derivative_value'\n    derivative:\n      type: object\n      properties:\n        URI:\n          type: string\n        StatsCollectionType:\n          type: string\n        values:\n          $ref: '#/components/schemas/derivative_value_dict_item'\n    derivatives:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/derivative'\n    project_details:\n      properties:\n        title:\n          type: string\n          example: ABIDE CMU_a Site\n        Identifier:\n          type: string\n          example: 1.0.1\n        age_max:\n          type: number\n          example: 35.4\n        age_min:\n          type: number\n          example: 18\n        gender:\n          type: array\n          items:\n            type: string\n        handedness:\n          type: array\n          items:\n            type: string\n    subject_details:\n      properties:\n        uuid:\n          $ref: '#/components/schemas/UUID'\n        id:\n          type: string\n          example: \"0050665\"\n        activity:\n          type: array\n          items:\n            $ref: '#/components/schemas/UUID'\n        derivatives:\n          type: array\n          items:\n            $ref: '#/components/schemas/derivatives'\n        instruments:\n          type: array\n          items:\n            $ref: '#/components/schemas/instruments'\n",
			"canonicalURL": "/github.com/incf-nidash/PyNIDM@ffdaef34cef728cbbf9b2a640b97b7e2d7139418/-/blob/docs/REST_API_definition.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/incf-nidash/PyNIDM/blob/ffdaef34cef728cbbf9b2a640b97b7e2d7139418/docs/REST_API_definition.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}