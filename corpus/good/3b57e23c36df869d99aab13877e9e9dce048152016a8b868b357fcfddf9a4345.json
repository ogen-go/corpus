{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "sportsdata.io-golf-v2-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/sportsdata.io-golf-v2-1.0-swagger.yaml",
			"byteSize": 25331,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: nfldata\n  title: Golf v2\n  version: \"1.0\"\n  x-apisguru-categories:\n    - entertainment\n  x-logo:\n    url: https://twitter.com/nfldata/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://fantasydata.com/downloads/swagger/golf-v2.json\n      version: \"2.0\"\n  x-providerName: sportsdata.io\n  x-serviceName: golf-v2\nsecurity:\n  - apiKeyHeader: []\n  - apiKeyQuery: []\ntags: []\npaths:\n  \"/{format}/DfsSlatesByTournament/{tournamentid}\":\n    get:\n      operationId: DfsSlates\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: The TournamentID of a tournament.  TournamentIDs can be found in the\n            Tournaments API.  Valid entries are \u003ccode\u003e58\u003c/code\u003e,\n            \u003ccode\u003e61\u003c/code\u003e, etc.\n          in: path\n          name: tournamentid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DfsSlate\"\n                type: array\n      summary: DFS Slates\n  \"/{format}/Injuries\":\n    get:\n      operationId: Injuries\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Injury\"\n                type: array\n      summary: Injuries\n  \"/{format}/InjuriesByHistorical\":\n    get:\n      operationId: InjuriesHistorical\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Injury\"\n                type: array\n      summary: Injuries (Historical)\n  \"/{format}/Leaderboard/{tournamentid}\":\n    get:\n      operationId: Leaderboard\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: The TournamentID of a tournament.  TournamentIDs can be found in the\n            Tournaments API.  Valid entries are \u003ccode\u003e58\u003c/code\u003e,\n            \u003ccode\u003e61\u003c/code\u003e, etc.\n          in: path\n          name: tournamentid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Leaderboard\"\n      summary: Leaderboard\n  \"/{format}/News\":\n    get:\n      operationId: News\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/News\"\n                type: array\n      summary: News\n  \"/{format}/NewsByDate/{date}\":\n    get:\n      operationId: NewsByDate\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2015-JUL-31\u003c/code\u003e, \u003ccode\u003e2015-SEP-01\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/News\"\n                type: array\n      summary: News by Date\n  \"/{format}/NewsByPlayerID/{playerid}\":\n    get:\n      operationId: NewsByPlayer\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e40000019\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/News\"\n                type: array\n      summary: News by Player\n  \"/{format}/Player/{playerid}\":\n    get:\n      operationId: Player\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e40000019\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Player\"\n      summary: Player\n  \"/{format}/PlayerSeasonStats/{season}\":\n    get:\n      operationId: PlayerSeasonStatsWWorldGolfRankings\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: |-\n            Year of the season.\n            \u003cbr\u003eExamples: \u003ccode\u003e2016\u003c/code\u003e, \u003ccode\u003e2017\u003c/code\u003e.\n          in: path\n          name: season\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayerSeason\"\n                type: array\n      summary: Player Season Stats (w/ World Golf Rankings)\n  \"/{format}/PlayerTournamentProjectionStats/{tournamentid}\":\n    get:\n      operationId: PlayerTournamentProjectedStatsWDraftkingsSalaries\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: The TournamentID of a tournament.  TournamentIDs can be found in the\n            Tournaments API.  Valid entries are \u003ccode\u003e78\u003c/code\u003e,\n            \u003ccode\u003e79\u003c/code\u003e, \u003ccode\u003e80\u003c/code\u003e, etc.\n          in: path\n          name: tournamentid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayerTournamentProjection\"\n                type: array\n      summary: Player Tournament Projected Stats (w/ DraftKings Salaries)\n  \"/{format}/PlayerTournamentStatsByPlayer/{tournamentid}/{playerid}\":\n    get:\n      operationId: PlayerTournamentStatsByPlayer\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: The TournamentID of a tournament.  TournamentIDs can be found in the\n            Tournaments API.  Valid entries are \u003ccode\u003e58\u003c/code\u003e,\n            \u003ccode\u003e61\u003c/code\u003e, etc.\n          in: path\n          name: tournamentid\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e40000019\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlayerTournament\"\n      summary: Player Tournament Stats By Player\n  \"/{format}/Players\":\n    get:\n      operationId: Players\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Player\"\n                type: array\n      summary: Players\n  \"/{format}/Tournaments\":\n    get:\n      operationId: Schedule\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tournament\"\n                type: array\n      summary: Schedule\n  \"/{format}/Tournaments/{season}\":\n    get:\n      operationId: ScheduleBySeason\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - XML\n              - JSON\n            default: XML\n        - description: |-\n            Year of the season.\n            \u003cbr\u003eExamples: \u003ccode\u003e2016\u003c/code\u003e, \u003ccode\u003e2017\u003c/code\u003e.\n          in: path\n          name: season\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tournament\"\n                type: array\n      summary: Schedule by Season\nservers:\n  - url: http://api.sportsdata.io\n  - url: https://api.sportsdata.io\n  - url: http://api.fantasydata.net\n  - url: https://api.fantasydata.net\ncomponents:\n  securitySchemes:\n    apiKeyHeader:\n      in: header\n      name: Ocp-Apim-Subscription-Key\n      type: apiKey\n    apiKeyQuery:\n      in: query\n      name: subscription-key\n      type: apiKey\n  schemas:\n    DfsSlate:\n      properties:\n        DfsSlatePlayers:\n          items:\n            $ref: \"#/components/schemas/DfsSlatePlayer\"\n          type: array\n        DfsSlateTournaments:\n          items:\n            $ref: \"#/components/schemas/DfsSlateTournament\"\n          type: array\n        IsMultiDaySlate:\n          type: boolean\n        NumberOfTournaments:\n          type: integer\n        Operator:\n          type: string\n        OperatorDay:\n          type: string\n        OperatorGameType:\n          type: string\n        OperatorName:\n          type: string\n        OperatorSlateID:\n          type: integer\n        OperatorStartTime:\n          type: string\n        RemovedByOperator:\n          type: boolean\n        SalaryCap:\n          type: integer\n        SlateID:\n          type: integer\n        SlateRosterSlots:\n          items:\n            type: string\n          type: array\n    DfsSlatePlayer:\n      properties:\n        OperatorPlayerID:\n          type: string\n        OperatorPlayerName:\n          type: string\n        OperatorPosition:\n          type: string\n        OperatorRosterSlots:\n          items:\n            type: string\n          type: array\n        OperatorSalary:\n          type: integer\n        OperatorSlatePlayerID:\n          type: string\n        PlayerID:\n          type: integer\n        PlayerTournamentProjectionID:\n          type: integer\n        RemovedByOperator:\n          type: boolean\n        SlateID:\n          type: integer\n        SlatePlayerID:\n          type: integer\n        SlateTournamentID:\n          type: integer\n    DfsSlateTournament:\n      properties:\n        OperatorTournamentID:\n          type: integer\n        RemovedByOperator:\n          type: boolean\n        SlateID:\n          type: integer\n        SlateTournamentID:\n          type: integer\n        Tournament:\n          $ref: \"#/components/schemas/Tournament\"\n        TournamentID:\n          type: integer\n    Injury:\n      properties:\n        Active:\n          type: boolean\n        BodyPart:\n          type: string\n        ExpectedReturn:\n          type: string\n        InjuryID:\n          type: integer\n        Name:\n          type: string\n        PlayerID:\n          type: integer\n        StartDate:\n          type: string\n        Status:\n          type: string\n    Leaderboard:\n      properties:\n        Players:\n          items:\n            $ref: \"#/components/schemas/PlayerTournament\"\n          type: array\n        Tournament:\n          $ref: \"#/components/schemas/Tournament\"\n    News:\n      properties:\n        Content:\n          type: string\n        NewsID:\n          type: integer\n        PlayerID:\n          type: integer\n        Source:\n          type: string\n        TermsOfUse:\n          type: string\n        Title:\n          type: string\n        Updated:\n          type: string\n        Url:\n          type: string\n    Player:\n      properties:\n        BirthCity:\n          type: string\n        BirthDate:\n          type: string\n        BirthState:\n          type: string\n        College:\n          type: string\n        Country:\n          type: string\n        DraftKingsName:\n          type: string\n        DraftKingsPlayerID:\n          type: integer\n        FanDuelName:\n          type: string\n        FanDuelPlayerID:\n          type: integer\n        FantasyAlarmPlayerID:\n          type: integer\n        FantasyDraftName:\n          type: string\n        FantasyDraftPlayerID:\n          type: integer\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        PgaDebut:\n          type: integer\n        PgaTourPlayerID:\n          type: integer\n        PhotoUrl:\n          type: string\n        PlayerID:\n          type: integer\n        RotoWirePlayerID:\n          type: integer\n        RotoworldPlayerID:\n          type: integer\n        SportRadarPlayerID:\n          type: string\n        Swings:\n          type: string\n        Weight:\n          type: integer\n        YahooPlayerID:\n          type: integer\n    PlayerHole:\n      properties:\n        Birdie:\n          type: boolean\n        Bogey:\n          type: boolean\n        DoubleBogey:\n          type: boolean\n        DoubleEagle:\n          type: boolean\n        Eagle:\n          type: boolean\n        HoleInOne:\n          type: boolean\n        IsPar:\n          type: boolean\n        Number:\n          type: integer\n        Par:\n          type: integer\n        PlayerRoundID:\n          type: integer\n        Score:\n          type: integer\n        ToPar:\n          type: integer\n        WorseThanDoubleBogey:\n          type: boolean\n    PlayerRound:\n      properties:\n        Birdies:\n          type: integer\n        BogeyFree:\n          type: boolean\n        Bogeys:\n          type: integer\n        BounceBackCount:\n          type: number\n        ConsecutiveBirdieOrBetterCount:\n          type: number\n        Day:\n          type: string\n        DoubleBogeys:\n          type: integer\n        DoubleEagles:\n          type: integer\n        Eagles:\n          type: integer\n        HoleInOnes:\n          type: integer\n        Holes:\n          items:\n            $ref: \"#/components/schemas/PlayerHole\"\n          type: array\n        IncludesFiveOrMoreBirdiesOrBetter:\n          type: boolean\n        IncludesStreakOfFiveBirdiesOrBetter:\n          type: boolean\n        IncludesStreakOfFourBirdiesOrBetter:\n          type: boolean\n        IncludesStreakOfSixBirdiesOrBetter:\n          type: boolean\n        IncludesStreakOfThreeBirdiesOrBetter:\n          type: boolean\n        LongestBirdieOrBetterStreak:\n          type: number\n        Number:\n          type: integer\n        Par:\n          type: integer\n        Pars:\n          type: integer\n        PlayerRoundID:\n          type: integer\n        PlayerTournamentID:\n          type: integer\n        Score:\n          type: integer\n        TripleBogeys:\n          type: integer\n        WorseThanDoubleBogey:\n          type: integer\n        WorseThanTripleBogey:\n          type: integer\n    PlayerSeason:\n      properties:\n        AveragePoints:\n          type: number\n        Events:\n          type: integer\n        Name:\n          type: string\n        PlayerID:\n          type: integer\n        PlayerSeasonID:\n          type: integer\n        PointsGained:\n          type: number\n        PointsLost:\n          type: number\n        Season:\n          type: integer\n        TotalPoints:\n          type: number\n        WorldGolfRank:\n          type: integer\n        WorldGolfRankLastWeek:\n          type: integer\n    PlayerTournament:\n      properties:\n        Birdies:\n          type: number\n        BogeyFreeRounds:\n          type: number\n        Bogeys:\n          type: number\n        BounceBackCount:\n          type: number\n        ConsecutiveBirdieOrBetterCount:\n          type: number\n        Country:\n          type: string\n        DoubleBogeys:\n          type: number\n        DoubleEagles:\n          type: number\n        DraftKingsSalary:\n          type: integer\n        Eagles:\n          type: number\n        Earnings:\n          type: number\n        FanDuelSalary:\n          type: integer\n        FantasyDraftSalary:\n          type: integer\n        FantasyPoints:\n          type: number\n        FantasyPointsDraftKings:\n          type: number\n        FantasyPointsFanDuel:\n          type: number\n        FantasyPointsFantasyDraft:\n          type: number\n        FantasyPointsYahoo:\n          type: number\n        FedExPoints:\n          type: integer\n        HoleInOnes:\n          type: number\n        IsAlternate:\n          type: boolean\n        IsWithdrawn:\n          type: boolean\n        MadeCut:\n          type: number\n        MadeCutDidNotFinish:\n          type: boolean\n        Name:\n          type: string\n        OddsToWin:\n          type: number\n        OddsToWinDescription:\n          type: string\n        Pars:\n          type: number\n        PlayerID:\n          type: integer\n        PlayerTournamentID:\n          type: integer\n        Rank:\n          type: integer\n        Rounds:\n          items:\n            $ref: \"#/components/schemas/PlayerRound\"\n          type: array\n        RoundsUnderSeventy:\n          type: number\n        RoundsWithFiveOrMoreBirdiesOrBetter :\n          type: number\n        StreaksOfFiveBirdiesOrBetter:\n          type: number\n        StreaksOfFourBirdiesOrBetter:\n          type: number\n        StreaksOfSixBirdiesOrBetter:\n          type: number\n        StreaksOfThreeBirdiesOrBetter:\n          type: number\n        TeeTime:\n          type: string\n        TotalScore:\n          type: number\n        TotalStrokes:\n          type: number\n        TotalThrough:\n          type: integer\n        TournamentID:\n          type: integer\n        TournamentStatus:\n          type: string\n        TripleBogeys:\n          type: number\n        Win:\n          type: number\n        WorseThanDoubleBogey:\n          type: number\n        WorseThanTripleBogey:\n          type: number\n    PlayerTournamentProjection:\n      properties:\n        Birdies:\n          type: number\n        BogeyFreeRounds:\n          type: number\n        Bogeys:\n          type: number\n        BounceBackCount:\n          type: number\n        ConsecutiveBirdieOrBetterCount:\n          type: number\n        Country:\n          type: string\n        DoubleBogeys:\n          type: number\n        DoubleEagles:\n          type: number\n        DraftKingsSalary:\n          type: integer\n        Eagles:\n          type: number\n        Earnings:\n          type: number\n        FanDuelSalary:\n          type: integer\n        FantasyDraftSalary:\n          type: integer\n        FantasyPoints:\n          type: number\n        FantasyPointsDraftKings:\n          type: number\n        FantasyPointsFanDuel:\n          type: number\n        FantasyPointsFantasyDraft:\n          type: number\n        FantasyPointsYahoo:\n          type: number\n        FedExPoints:\n          type: integer\n        HoleInOnes:\n          type: number\n        IsAlternate:\n          type: boolean\n        IsWithdrawn:\n          type: boolean\n        MadeCut:\n          type: number\n        MadeCutDidNotFinish:\n          type: boolean\n        Name:\n          type: string\n        OddsToWin:\n          type: number\n        OddsToWinDescription:\n          type: string\n        Pars:\n          type: number\n        PlayerID:\n          type: integer\n        PlayerTournamentID:\n          type: integer\n        Rank:\n          type: integer\n        Rounds:\n          items:\n            $ref: \"#/components/schemas/PlayerRound\"\n          type: array\n        RoundsUnderSeventy:\n          type: number\n        RoundsWithFiveOrMoreBirdiesOrBetter :\n          type: number\n        StreaksOfFiveBirdiesOrBetter:\n          type: number\n        StreaksOfFourBirdiesOrBetter:\n          type: number\n        StreaksOfSixBirdiesOrBetter:\n          type: number\n        StreaksOfThreeBirdiesOrBetter:\n          type: number\n        TeeTime:\n          type: string\n        TotalScore:\n          type: number\n        TotalStrokes:\n          type: number\n        TotalThrough:\n          type: integer\n        TournamentID:\n          type: integer\n        TournamentStatus:\n          type: string\n        TripleBogeys:\n          type: number\n        Win:\n          type: number\n        WorseThanDoubleBogey:\n          type: number\n        WorseThanTripleBogey:\n          type: number\n    Round:\n      properties:\n        Day:\n          type: string\n        Number:\n          type: integer\n        RoundID:\n          type: integer\n        TournamentID:\n          type: integer\n    Tournament:\n      properties:\n        Canceled:\n          type: boolean\n        City:\n          type: string\n        Country:\n          type: string\n        Covered:\n          type: boolean\n        EndDate:\n          type: string\n        Format:\n          type: string\n        IsInProgress:\n          type: boolean\n        IsOver:\n          type: boolean\n        Location:\n          type: string\n        Name:\n          type: string\n        Par:\n          type: integer\n        Purse:\n          type: number\n        Rounds:\n          items:\n            $ref: \"#/components/schemas/Round\"\n          type: array\n        SportRadarTournamentID:\n          type: string\n        StartDate:\n          type: string\n        StartDateTime:\n          type: string\n        State:\n          type: string\n        TimeZone:\n          type: string\n        TournamentID:\n          type: integer\n        Venue:\n          type: string\n        Yards:\n          type: integer\n        ZipCode:\n          type: string\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/sportsdata.io-golf-v2-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/sportsdata.io-golf-v2-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}