{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/ingest/v1beta2/openapi.yaml",
			"byteSize": 39919,
			"content": "components:\n  requestBodies:\n    postCollectorPayload:\n      content:\n        application/json:\n          schema:\n            type: string\n      description: |-\n        The payload uses concatenated JSON format.\n        See https://docs.splunk.com/Documentation/Splunk/latest/Data/FormateventsforHTTPEventCollector#Event_data for more information.\n      x-go-name: Payload\n  responses:\n    badRequestError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request isn't valid.\n    errorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Error response.\n    fileUploadSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UploadSuccessResponse'\n      description: The file was uploaded successfully.\n    forbiddenError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The operation is unauthorized.\n    hecAckResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CollectorAckResponse'\n      description: The Acks were returned successfully.\n    hecBadRequestError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECResponse'\n      description: |-\n        The request isn't valid.\n\n        Possible causes are:\n        there is no data\n        the data format is incorrect e.g. not JSON\n        the specified index is invalid\n        the event field is missing or empty\n        the fields property is invalid\n        the event size is too large\n    hecForbiddenError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECResponse'\n      description: |-\n        The operation is unauthorized.\n\n        Possible causes are the provided token is invalid or disabled.\n    hecHealthyResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECResponse'\n      description: HEC collector endpoint is healthy.\n    hecInternalError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECResponse'\n      description: An internal service error occurred.\n    hecSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECResponse'\n      description: The events were processed successfully.\n    hecTokenCreateSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECTokenCreateResponse'\n      description: The dsphec token was created successfully.\n    hecTokenDeleteSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECTokenDeleteResponse'\n      description: The dsphec token was deleted successfully.\n    hecTokenGetSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECTokenAccessResponse'\n      description: The dsphec token metadata was returned successfully.\n    hecTokenListSuccessResponse:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: '#/components/schemas/HECTokenAccessResponse'\n            type: array\n      description: The list of dsphec token metadata was returned successfully.\n    hecTokenSyncSuccessResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TokenSyncResponse'\n      description: The tokens were synced successfully.\n    hecUnauthorizedError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECResponse'\n      description: |-\n        Authentication is required.\n\n        Possible causes are the authentication token is missing or the authorization header isn't well formed.\n    internalError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: An internal service error occurred.\n    notFoundError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The resource wasn't found.\n    resourceConflictError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The resource has a conflict.\n    serverBusyError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HECResponse'\n      description: The server can't process the data sent because the server is overloaded.\n    successResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPResponse'\n      description: The event was sent successfully.\n    tooManyRequestsError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Too many requests were sent.\n    unauthorizedError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The user isn't authenticated.\n    unprocessableEntityError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unprocessable entity in request.\n  schemas:\n    CollectorAckResponse:\n      description: POST /collector/ack\n      properties:\n        acks:\n          additionalProperties:\n            type: boolean\n          type: object\n          x-go-name: Acks\n      title: 'CollectorAckResponse defines the response body returned from the HTTP\n        Event Collector ack endpoint:'\n      type: object\n    Error:\n      properties:\n        code:\n          type: string\n          x-go-name: Code\n        details:\n          type: object\n          x-go-name: Details\n        message:\n          type: string\n          x-go-name: Message\n      type: object\n      x-go-name: ErrorResponse\n    Event:\n      properties:\n        attributes:\n          additionalProperties: {}\n          description: Specifies a JSON object that contains explicit custom fields\n            to be defined at index time.\n          type: object\n          x-go-name: Attributes\n        body:\n          description: The raw event content. It can be a string, number, string array,\n            number array, JSON object, map, list, a JSON array, or a byte array.\n          x-go-name: Body\n        host:\n          description: The host value assigned to the event data. Typically, this\n            is the hostname of the client from which you are sending data.\n          type: string\n          x-go-name: Host\n        id:\n          description: |-\n            An optional ID that uniquely identifies the event data. It is used to deduplicate the data if same data is set multiple times.\n            If ID is not specified, it will be assigned by the system.\n          type: string\n          x-go-name: ID\n        nanos:\n          description: Optional nanoseconds part of the timestamp.\n          format: int32\n          type: integer\n          x-go-name: Nanos\n        source:\n          description: |-\n            The source value to assign to the event data. For example, if you are sending data from an app that you are developing,\n            set this key to the name of the app.\n          type: string\n          x-go-name: Source\n        sourcetype:\n          description: The sourcetype value assigned to the event data.\n          type: string\n          x-go-name: Sourcetype\n        timestamp:\n          description: Epoch time in milliseconds.\n          format: int64\n          type: integer\n          x-go-name: Timestamp\n      required:\n      - body\n      type: object\n    FileUploadDetails:\n      properties:\n        filename:\n          type: string\n          x-go-name: Filename\n      type: object\n    HECResponse:\n      properties:\n        ackId:\n          format: int64\n          type: integer\n          x-go-name: AckID\n        code:\n          description: code defines the status of the response. For a complete list\n            of the possible error codes, see https://docs.splunk.com/Documentation/SplunkCloud/latest/Data/TroubleshootHTTPEventCollector#Possible_error_codes\n          format: int64\n          type: integer\n          x-go-name: Code\n        invalid-event-number:\n          description: invalid-event-number defines the index of the first event in\n            error.\n          format: int64\n          type: integer\n          x-go-name: EventErrorIndex\n        text:\n          description: text describes the response status\n          type: string\n          x-go-name: Message\n      title: HECResponse defines the HTTP response from the HTTP Event Collector service.\n      type: object\n    HECTokenAccessResponse:\n      description: |-\n        GET  /collector/tokens/{tokenName}\n        PUT  /collector/tokens/{tokenName}\n      properties:\n        ack_enabled:\n          description: |-\n            ack_enabled is set to true if events sent with the auth token should support indexer acknowledgement\n\n            type: bool\n          type: boolean\n          x-go-name: AckEnabled\n        allow_query_string_auth:\n          description: |-\n            allow_query_string_auth is set to true if this token can be passed into the ingest endpoint's query parameter for auth\n\n            type: bool\n          type: boolean\n          x-go-name: AllowQueryStringAuth\n        created_at:\n          description: |-\n            created_at is a timestamp that captures when this token was created.\n\n            type: string\n            format: date-time\n          format: date-time\n          type: string\n          x-go-name: CreatedAt\n        created_by:\n          description: |-\n            created_by is the principal that created the token.\n\n            type: string\n          type: string\n          x-go-name: CreatedBy\n        description:\n          description: |-\n            description is an optional description of the token.\n\n            type: string\n          type: string\n          x-go-name: Description\n        disabled:\n          description: |-\n            disabled is set to true if this auth token has been disabled and cannot be used to send events to HECv1\n\n            type: bool\n          type: boolean\n          x-go-name: Disabled\n        index:\n          description: |-\n            index is the default value of the index field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Index\n        indexes:\n          description: |-\n            indexes is a list of index names that this token is allowed to send events to\n\n            type: []string\n          items:\n            type: string\n          type: array\n          x-go-name: Indexes\n        last_modified_at:\n          description: |-\n            last_modified_at is a timestamp that captures when this token was last modified.\n\n            type: string\n            format: date-time\n          format: date-time\n          type: string\n          x-go-name: LastModifiedAt\n        last_modified_by:\n          description: |-\n            last_modified_by is the principal that last modified the token.\n\n            type: string\n          type: string\n          x-go-name: LastModifiedBy\n        name:\n          description: |-\n            name is the name of the token (unique within the tenant that it belongs to).\n\n            type: string\n          pattern: '''[a-z][a-z0-9]{3,35}'''\n          type: string\n          x-go-name: Name\n        source:\n          description: |-\n            source is the default value of the source field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Source\n        sourcetype:\n          description: |-\n            sourcetype is the default value of the sourcetype field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Sourcetype\n        tenant:\n          description: |-\n            tenant is the tenant that this token belongs to\n\n            type: string\n          pattern: '''[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\"'''\n          type: string\n          x-go-name: Tenant\n      title: 'HECTokenAccessResponse defines the response body returned from the HTTP\n        Event Collector token access endpoints:'\n      type: object\n    HECTokenCreateRequest:\n      description: POST  /collector/tokens\n      properties:\n        ack_enabled:\n          description: |-\n            ack_enabled is set to true if events sent with the auth token should support indexer acknowledgement\n\n            type: bool\n          type: boolean\n          x-go-name: AckEnabled\n        allow_query_string_auth:\n          description: |-\n            allow_query_string_auth is set to true if this token can be passed into the ingest endpoint's query parameter for auth\n\n            type: bool\n          type: boolean\n          x-go-name: AllowQueryStringAuth\n        description:\n          description: |-\n            description is an optional description of the token.\n\n            type: string\n          type: string\n          x-go-name: Description\n        disabled:\n          description: |-\n            disabled is set to true if this auth token has been disabled and cannot be used to send events to HECv1\n\n            type: bool\n          type: boolean\n          x-go-name: Disabled\n        index:\n          description: |-\n            index is the default value of the index field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Index\n        indexes:\n          description: |-\n            indexes is a list of index names that this token is allowed to send events to\n\n            type: []string\n          items:\n            type: string\n          type: array\n          x-go-name: Indexes\n        name:\n          description: |-\n            name is the name of the token (unique within the tenant that it belongs to).\n\n            type: string\n          pattern: '''[a-z][a-z0-9]{3,35}'''\n          type: string\n          x-go-name: Name\n        source:\n          description: |-\n            source is the default value of the source field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Source\n        sourcetype:\n          description: |-\n            sourcetype is the default value of the sourcetype field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Sourcetype\n      required:\n      - name\n      title: 'HECTokenCreateRequest defines the request body accepted by the HTTP\n        Event Collector token create endpoint:'\n      type: object\n    HECTokenCreateResponse:\n      description: POST /collector/tokens\n      properties:\n        ack_enabled:\n          description: |-\n            ack_enabled is set to true if events sent with the auth token should support indexer acknowledgement\n\n            type: bool\n          type: boolean\n          x-go-name: AckEnabled\n        allow_query_string_auth:\n          description: |-\n            allow_query_string_auth is set to true if this token can be passed into the ingest endpoint's query parameter for auth\n\n            type: bool\n          type: boolean\n          x-go-name: AllowQueryStringAuth\n        created_at:\n          description: |-\n            created_at is a timestamp that captures when this token was created.\n\n            type: string\n            format: date-time\n          format: date-time\n          type: string\n          x-go-name: CreatedAt\n        created_by:\n          description: |-\n            created_by is the principal that created the token.\n\n            type: string\n          type: string\n          x-go-name: CreatedBy\n        description:\n          description: |-\n            description is an optional description of the token.\n\n            type: string\n          type: string\n          x-go-name: Description\n        disabled:\n          description: |-\n            disabled is set to true if this auth token has been disabled and cannot be used to send events to HECv1\n\n            type: bool\n          type: boolean\n          x-go-name: Disabled\n        index:\n          description: |-\n            index is the default value of the index field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Index\n        indexes:\n          description: |-\n            indexes is a list of index names that this token is allowed to send events to\n\n            type: []string\n          items:\n            type: string\n          type: array\n          x-go-name: Indexes\n        last_modified_at:\n          description: |-\n            last_modified_at is a timestamp that captures when this token was last modified.\n\n            type: string\n            format: date-time\n          format: date-time\n          type: string\n          x-go-name: LastModifiedAt\n        last_modified_by:\n          description: |-\n            last_modified_by is the principal that last modified the token.\n\n            type: string\n          type: string\n          x-go-name: LastModifiedBy\n        name:\n          description: |-\n            name is the name of the token (unique within the tenant that it belongs to).\n\n            type: string\n          pattern: '''[a-z][a-z0-9]{3,35}'''\n          type: string\n          x-go-name: Name\n        source:\n          description: |-\n            source is the default value of the source field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Source\n        sourcetype:\n          description: |-\n            sourcetype is the default value of the sourcetype field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Sourcetype\n        tenant:\n          description: |-\n            tenant is the tenant that this token belongs to.\n\n            type: string\n          pattern: '''[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\"'''\n          type: string\n          x-go-name: Tenant\n        token:\n          description: |-\n            token is the token value.\n\n            type: string\n          type: string\n          x-go-name: Token\n      title: 'HECTokenCreateResponse defines the response body returned from the HTTP\n        Event Collector token create endpoint:'\n      type: object\n    HECTokenDeleteResponse:\n      description: DELETE /collector/tokens/{tokenName}\n      title: 'HECTokenDeleteResponse defines the response body returned from the HTTP\n        Event Collector token delete endpoint:'\n      type: object\n    HECTokenUpdateRequest:\n      description: PUT  /collector/tokens/{tokenName}\n      properties:\n        ack_enabled:\n          description: |-\n            ack_enabled is set to true if events sent with the auth token should support indexer acknowledgement\n\n            type: *bool\n          type: boolean\n          x-go-name: AckEnabled\n        allow_query_string_auth:\n          description: |-\n            allow_query_string_auth is set to true if this token can be passed into the ingest endpoint's query parameter for auth\n\n            type: *bool\n          type: boolean\n          x-go-name: AllowQueryStringAuth\n        description:\n          description: |-\n            description is an optional description of the token.\n\n            type: *string\n          type: string\n          x-go-name: Description\n        disabled:\n          description: |-\n            disabled is set to true if this auth token has been disabled and cannot be used to send events to HECv1\n\n            type: *bool\n          type: boolean\n          x-go-name: Disabled\n        index:\n          description: |-\n            index is the default value of the index field for records collected using this token\n\n            type: *string\n          type: string\n          x-go-name: Index\n        indexes:\n          description: |-\n            indexes is a list of index names that this token is allowed to send events to\n\n            type: []string\n          items:\n            type: string\n          type: array\n          x-go-name: Indexes\n        source:\n          description: |-\n            source is the default value of the source field for records collected using this token\n\n            type: *string\n          type: string\n          x-go-name: Source\n        sourcetype:\n          description: |-\n            sourcetype is the default value of the sourcetype field for records collected using this token\n\n            type: *string\n          type: string\n          x-go-name: Sourcetype\n      title: 'HECTokenUpdateRequest defines the request body accepted by the HTTP\n        Event Collector token update endpoint:'\n      type: object\n    HTTPResponse:\n      description: HTTPResponse implements the Error interface\n      properties:\n        code:\n          type: string\n          x-go-name: Code\n        details:\n          type: object\n          x-go-name: Details\n        message:\n          type: string\n          x-go-name: Message\n      type: object\n    Metric:\n      properties:\n        dimensions:\n          additionalProperties:\n            type: string\n          description: Dimensions allow metrics to be classified e.g. {\"Server\":\"nginx\",\n            \"Region\":\"us-west-1\", ...}\n          type: object\n          x-go-name: Dimensions\n        name:\n          description: Name of the metric e.g. CPU, Memory etc.\n          type: string\n          x-go-name: Name\n        type:\n          description: Type of metric. Default is g for gauge.\n          type: string\n          x-go-name: Type\n        unit:\n          description: Unit of the metric e.g. percent, megabytes, seconds etc.\n          type: string\n          x-go-name: Unit\n        value:\n          description: Value of the metric. If not specified, it will be defaulted\n            to 0.\n          format: double\n          type: number\n          x-go-name: Value\n      required:\n      - name\n      title: Specifies individual metric data.\n      type: object\n    MetricAttribute:\n      properties:\n        defaultDimensions:\n          additionalProperties:\n            type: string\n          description: Optional. If set, individual metrics inherit these dimensions\n            and can override any and/or all of them.\n          type: object\n          x-go-name: DefaultDimensions\n        defaultType:\n          description: Optional. If set, individual metrics inherit this type and\n            can optionally override.\n          type: string\n          x-go-name: DefaultType\n        defaultUnit:\n          description: Optional. If set, individual metrics inherit this unit and\n            can optionally override.\n          type: string\n          x-go-name: DefaultUnit\n      title: Default attributes for the metric.\n      type: object\n    MetricEvent:\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricAttribute'\n        body:\n          description: Specifies multiple related metrics e.g. Memory, CPU etc.\n          items:\n            $ref: '#/components/schemas/Metric'\n          type: array\n          x-go-name: Body\n        host:\n          description: The host value assigned to the event data. Typically, this\n            is the hostname of the client from which you are sending data.\n          type: string\n          x-go-name: Host\n        id:\n          description: |-\n            An optional ID that uniquely identifies the metric data. It is used to deduplicate the data if same data is set multiple times.\n            If ID is not specified, it will be assigned by the system.\n          type: string\n          x-go-name: ID\n        nanos:\n          description: Optional nanoseconds part of the timestamp.\n          format: int32\n          type: integer\n          x-go-name: Nanos\n        source:\n          description: |-\n            The source value to assign to the event data. For example, if you are sending data from an app that you are developing,\n            set this key to the name of the app.\n          type: string\n          x-go-name: Source\n        sourcetype:\n          description: The sourcetype value assigned to the event data.\n          type: string\n          x-go-name: Sourcetype\n        timestamp:\n          description: Epoch time in milliseconds.\n          format: int64\n          type: integer\n          x-go-name: Timestamp\n      required:\n      - body\n      type: object\n    TokenSyncRequest:\n      description: POST /collector/tokens/sync\n      properties:\n        allowQueryStringAuth:\n          description: |-\n            true if this token is allowed to be passed as a query parameter to event ingest endpoints\n\n            type: *bool\n          type: boolean\n          x-go-name: AllowQueryStringAuth\n        description:\n          description: |-\n            description is an optional description of the token.\n\n            type: *string\n          type: string\n          x-go-name: Description\n        disabled:\n          description: |-\n            true if the token is disabled\n\n            type: *bool\n          type: boolean\n          x-go-name: Disabled\n        index:\n          description: |-\n            index is the default value of the index field for records collected using this token.\n\n            type: string\n          type: string\n          x-go-name: Index\n        indexes:\n          description: |-\n            a list of index names that this token has access to\n\n            type: []string\n          items:\n            type: string\n          type: array\n          x-go-name: Indexes\n        name:\n          description: |-\n            name is the name of the token (unique within the tenant that it belongs to).\n\n            type: string\n          type: string\n          x-go-name: Name\n        source:\n          description: |-\n            source is the default value of the source field for records collected using this token\n\n            type: *string\n          type: string\n          x-go-name: Source\n        sourcetype:\n          description: |-\n            sourcetype is the default value of the sourcetype field for records collected using this token\n\n            type: *string\n          type: string\n          x-go-name: Sourcetype\n        tokenValue:\n          description: |-\n            the value of the token. This will be hashed then stored in DSP\n\n            type: string\n          type: string\n          x-go-name: TokenValue\n        useAck:\n          description: |-\n            true if indexer acknowledgement is enabled for this token\n\n            type: bool\n          type: boolean\n          x-go-name: UseAck\n      required:\n      - index\n      - name\n      - tokenValue\n      - useAck\n      title: 'TokenSyncRequest defines the request body accepted by the HTTP Event\n        Collector tokens sync endpoint:'\n      type: object\n    TokenSyncResponse:\n      properties:\n        NumTokensDeleted:\n          description: |-\n            the number of tokens deleted from store\n\n            type: integer\n          format: int64\n          type: integer\n        NumTokensInStore:\n          description: |-\n            the total number of tokens in store\n\n            type: integer\n          format: int64\n          type: integer\n        NumTokensUpserted:\n          description: |-\n            the number of tokens upserted to store\n\n            type: integer\n          format: int64\n          type: integer\n      type: object\n    UploadSuccessResponse:\n      properties:\n        code:\n          type: string\n          x-go-name: Code\n        details:\n          $ref: '#/components/schemas/FileUploadDetails'\n        message:\n          type: string\n          x-go-name: Message\n      type: object\ninfo:\n  description: Use the Ingest service in Splunk Cloud Services to send event and metrics\n    data, or upload a static file, to Splunk Cloud Services.\n  title: Ingest API\n  version: v1beta2.32\nopenapi: 3.0.0\npaths:\n  /{tenant}/ingest/v1beta2/collector/tokens:\n    delete:\n      operationId: deleteAllCollectorTokens\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      responses:\n        \"204\":\n          $ref: '#/components/responses/hecTokenDeleteSuccessResponse'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/internalError'\n      summary: Delete All dsphec tokens for a given tenant.\n      tags:\n      - CollectorTokens\n      x-auth-required: true\n      x-authz-scope: ingest.collector.tokens.delete\n    get:\n      operationId: listCollectorTokens\n      parameters:\n      - description: The access token provided by the user (obtained from a known\n          identity provider).\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          pattern: ^Bearer .+\n          type: string\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      - in: query\n        name: limit\n        schema:\n          format: int64\n          type: integer\n        x-go-name: Limit\n      - in: query\n        name: offset\n        schema:\n          format: int64\n          type: integer\n        x-go-name: Offset\n      responses:\n        \"200\":\n          $ref: '#/components/responses/hecTokenListSuccessResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/internalError'\n      summary: List dsphec tokens for a tenant.\n      tags:\n      - CollectorTokens\n      x-auth-required: true\n      x-authz-scope: ingest.collector.tokens.read\n    post:\n      operationId: postCollectorTokens\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      - description: The access token provided by the user (obtained from a known\n          identity provider).\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          pattern: ^Bearer .+\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HECTokenCreateRequest'\n        description: The API request schema for the token.\n        required: true\n      responses:\n        \"201\":\n          $ref: '#/components/responses/hecTokenCreateSuccessResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"409\":\n          $ref: '#/components/responses/resourceConflictError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/internalError'\n      summary: Creates dsphec tokens.\n      tags:\n      - CollectorTokens\n      x-auth-required: true\n      x-authz-scope: ingest.collector.tokens.write\n  /{tenant}/ingest/v1beta2/collector/tokens/{tokenName}:\n    delete:\n      operationId: deleteCollectorToken\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      - description: The access token provided by the user (obtained from a known\n          identity provider).\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          pattern: ^Bearer .+\n          type: string\n      - in: path\n        name: tokenName\n        required: true\n        schema:\n          pattern: ^[a-z][a-z0-9]{3,35}$\n          type: string\n        x-go-name: Name\n      responses:\n        \"204\":\n          $ref: '#/components/responses/hecTokenDeleteSuccessResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/internalError'\n      summary: Delete dsphec token by name.\n      tags:\n      - CollectorTokens\n      x-auth-required: true\n      x-authz-scope: ingest.collector.tokens.delete\n    get:\n      operationId: getCollectorToken\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      - in: path\n        name: tokenName\n        required: true\n        schema:\n          type: string\n        x-go-name: Name\n      responses:\n        \"200\":\n          $ref: '#/components/responses/hecTokenGetSuccessResponse'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/internalError'\n      summary: Get the metadata of a dsphec token by name.\n      tags:\n      - CollectorTokens\n      x-auth-required: true\n      x-authz-scope: ingest.collector.tokens.read\n    put:\n      operationId: putCollectorToken\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      - description: The access token provided by the user (obtained from a known\n          identity provider).\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          pattern: ^Bearer .+\n          type: string\n      - in: path\n        name: tokenName\n        required: true\n        schema:\n          pattern: ^[a-z][a-z0-9]{3,35}$\n          type: string\n        x-go-name: Name\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HECTokenUpdateRequest'\n        description: The API request schema for the token.\n        required: true\n      responses:\n        \"200\":\n          $ref: '#/components/responses/hecTokenGetSuccessResponse'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/internalError'\n      summary: Update the metadata of a dsphec token by name.\n      tags:\n      - CollectorTokens\n      x-auth-required: true\n      x-authz-scope: ingest.collector.tokens.write\n  /{tenant}/ingest/v1beta2/events:\n    post:\n      operationId: postEvents\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/Event'\n              type: array\n      responses:\n        \"200\":\n          $ref: '#/components/responses/successResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"413\":\n          $ref: '#/components/responses/badRequestError'\n        \"422\":\n          $ref: '#/components/responses/unprocessableEntityError'\n        \"429\":\n          $ref: '#/components/responses/tooManyRequestsError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/errorResponse'\n      summary: Sends events.\n      tags:\n      - Events\n      x-auth-required: false\n      x-authz-scope: ingest.events.write\n  /{tenant}/ingest/v1beta2/files:\n    post:\n      operationId: uploadFiles\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      - description: The access token provided by the user (obtained from a known\n          identity provider).\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          pattern: ^Bearer .+\n          type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                upfile:\n                  format: binary\n                  type: string\n                  x-go-name: Upfile\n              type: object\n      responses:\n        \"201\":\n          $ref: '#/components/responses/fileUploadSuccessResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"429\":\n          $ref: '#/components/responses/tooManyRequestsError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/errorResponse'\n      summary: Upload a CSV or text file that contains events. The file limit is 1MB\n        or an error is returned.\n      tags:\n      - Files\n      x-authz-scope: ingest.files.write\n  /{tenant}/ingest/v1beta2/metrics:\n    post:\n      operationId: postMetrics\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n        x-go-name: Tenant\n      - description: The access token provided by the user (obtained from a known\n          identity provider).\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          pattern: ^Bearer .+\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/MetricEvent'\n              type: array\n      responses:\n        \"200\":\n          $ref: '#/components/responses/successResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"413\":\n          $ref: '#/components/responses/badRequestError'\n        \"429\":\n          $ref: '#/components/responses/tooManyRequestsError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n        default:\n          $ref: '#/components/responses/errorResponse'\n      summary: Sends metric events.\n      tags:\n      - Metrics\n      x-auth-required: false\n      x-authz-scope: ingest.metrics.write\nservers:\n- url: /\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: ingest/v1beta2/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/ingest/v1beta2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/ingest/v1beta2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}