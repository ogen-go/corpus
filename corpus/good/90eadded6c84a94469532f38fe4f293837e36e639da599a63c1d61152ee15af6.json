{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HandshakeAlliance/handshake-api-spec"
		},
		"file": {
			"name": "hsd.yaml",
			"size": 0,
			"path": "node-http/hsd.yaml",
			"byteSize": 8832,
			"content": "---\nopenapi: 3.0.2\ninfo:\n  title: hsd2\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/MIT\n  version: 0.1.0\nservers:\n- url: http://{domain}:{port}\n  description: 'Local HSD node '\n  variables:\n    domain:\n      default: localhost\n      description: The traditional value if the user has a Handshake node running\n        locally\n    port:\n      default: \"13037\"\n      description: The variable for testnet\n- url: '{domain}:{port}'\n  description: Mainnet\n  variables:\n    domain:\n      default: localhost\n    port:\n      default: \"12037\"\n      description: Port for mainnet Handshake installation\npaths:\n  /reset:\n    summary: Reset chain to specific height\n    description: This will reset the chain used by the node to the specified height.\n      The node will then begin to rsync the chain from that height to the tip.\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: integer\n            examples:\n              Reset Chain to Block 100:\n                value:\n                  height: 100\n        required: true\n      responses:\n        200:\n          description: Returned if the reset is successful\n          content:\n            application/json:\n              schema:\n                type: boolean\n              examples:\n                Successful Reset:\n                  value:\n                    success: true\n        400:\n          description: Returned if the height is poorly formatted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Height too high:\n                  value:\n                    error:\n                      message: Height cannot be greater than chain tip.\n        500:\n          description: Block not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                Block not found:\n                  value:\n                    error:\n                      message: Block not found.\ncomponents:\n  schemas:\n    info:\n      title: Root Type for info\n      description: The root of the info type's schema.\n      type: object\n      properties:\n        version:\n          type: string\n        network:\n          type: string\n        chain:\n          type: object\n          properties:\n            height:\n              format: int32\n              type: integer\n            tip:\n              type: string\n            progress:\n              format: int32\n              type: integer\n        pool:\n          type: object\n          properties:\n            host:\n              type: string\n            port:\n              format: int32\n              type: integer\n            agent:\n              type: string\n            services:\n              type: string\n            outbound:\n              format: int32\n              type: integer\n            inbound:\n              format: int32\n              type: integer\n        mempool:\n          type: object\n          properties:\n            tx:\n              format: int32\n              type: integer\n            size:\n              format: int32\n              type: integer\n        time:\n          type: object\n          properties:\n            uptime:\n              format: int32\n              type: integer\n            system:\n              format: int32\n              type: integer\n            adjusted:\n              format: int32\n              type: integer\n            offset:\n              format: int32\n              type: integer\n        memory:\n          type: object\n          properties:\n            total:\n              format: int32\n              type: integer\n            jsHeap:\n              format: int32\n              type: integer\n            jsHeapTotal:\n              format: int32\n              type: integer\n            nativeHeap:\n              format: int32\n              type: integer\n            external:\n              format: int32\n              type: integer\n      example: |-\n        {\n          \"version\": \"0.0.0\",\n          \"network\": \"testnet\",\n          \"chain\": {\n            \"height\": 3601,\n            \"tip\": \"a06c2b7a61ed896f12fbb552311acebad0d4e8392f08cbd16e1ed946813afd01\",\n            \"progress\": 1\n          },\n          \"pool\": {\n            \"host\": \"199.185.131.97\",\n            \"port\": 13038,\n            \"agent\": \"/hsd:0.0.0/\",\n            \"services\": \"1\",\n            \"outbound\": 8,\n            \"inbound\": 0\n          },\n          \"mempool\": {\n            \"tx\": 0,\n            \"size\": 0\n          },\n          \"time\": {\n            \"uptime\": 5,\n            \"system\": 1556137851,\n            \"adjusted\": 1556137851,\n            \"offset\": 0\n          },\n          \"memory\": {\n            \"total\": 64,\n            \"jsHeap\": 20,\n            \"jsHeapTotal\": 34,\n            \"nativeHeap\": 29,\n            \"external\": 17\n          }\n        }\n    Covenant:\n      title: Root Type for Covenant\n      description: A Covenant that is stored inside of a Transaction\n      type: object\n      properties:\n        type:\n          format: int32\n          description: The numeric type value of the covenant\n          type: integer\n        action:\n          description: The action this covenant takes\n          type: string\n        items:\n          description: An array of the data for this covenant\n          type: array\n          items: {}\n      example:\n        type: 0\n        action: NONE\n        items: []\n    UTXO:\n      title: Root Type for UTXO\n      description: A representation of an Unspent Transaction Output\n      type: object\n      example: |-\n        {\n            \"version\": 0,\n            \"height\": 3326,\n            \"value\": 1999997520,\n            \"address\": \"ts1q4w0y9jaemmk78u66sfk4klufkk5qdr9ly5kuvn\",\n            \"covenant\": {\n              \"type\": 0,\n              \"action\": \"NONE\",\n              \"items\": []\n            },\n            \"coinbase\": false,\n            \"hash\": \"c3c404c36a0c78b59cbad20d4466f336bd3e9a99d0fcb7a361bceceacff3911f\",\n            \"index\": 1\n          }\n    Transaction:\n      title: Root Type for Transaction\n      description: The root of the Transaction type's schema.\n      required: []\n      type: object\n      properties:\n        hash:\n          type: string\n        witnessHash:\n          type: string\n        fee:\n          format: int32\n          type: integer\n        rate:\n          format: int32\n          type: integer\n        mtime:\n          format: int32\n          type: integer\n        height:\n          format: int32\n          type: integer\n        time:\n          format: int32\n          type: integer\n        index:\n          format: int32\n          type: integer\n        version:\n          format: int32\n          type: integer\n        inputs:\n          type: array\n          items: {}\n        outputs:\n          type: array\n          items: {}\n        locktime:\n          format: int32\n          type: integer\n        hex:\n          type: string\n        confirmations:\n          format: int32\n          type: integer\n        block:\n          type: string\n      example:\n        hash: a659ea7e126074e0ec41bed48867e388e65bfbc7a1fd6445aaefb0dba457175c\n        witnessHash: fc4ec969d257f5e921fa020f0d240298caf362c058a1480756c25cabe5276813\n        fee: 0\n        rate: 0\n        mtime: 1556137846\n        height: 3601\n        block: a06c2b7a61ed896f12fbb552311acebad0d4e8392f08cbd16e1ed946813afd01\n        time: 1556136594\n        index: 0\n        version: 0\n        inputs:\n        - prevout:\n            hash: \"0000000000000000000000000000000000000000000000000000000000000000\"\n            index: 4294967295\n          witness:\n          - 6d696e656420627920687364\n          - 5817336bc6a09544\n          - \"0000000000000000\"\n          sequence: 4037084422\n        outputs:\n        - value: 2000000000\n          address: ts1q6hkprx5zsfzxsed5ekpqjr05vy4su3sdszynaz\n          covenant:\n            type: 0\n            action: NONE\n            items: []\n        locktime: 3601\n        hex: 00000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0605a1f00100943577000000000014d5ec119a8282446865b4cd82090df4612b0e460d0000110e0000030c6d696e656420627920687364085817336bc6a09544080000000000000000\n        confirmations: 2\n    Error:\n      title: Root Type for Error\n      description: Non-standard error thrown by the daemon - i.e. 500\n      type: object\n      properties:\n        message:\n          description: The error message\n          type: string\n        type:\n          description: The specific type of error\n          type: string\n        code:\n          description: The error code\n          type: integer\n      example: |-\n        {\n          \"error\": {\n            \"message\": \"Block not found.\"\n          }\n        }\n",
			"canonicalURL": "/github.com/HandshakeAlliance/handshake-api-spec@c9cdf7edc057b216a0361e03a0a494e12d467a26/-/blob/node-http/hsd.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HandshakeAlliance/handshake-api-spec/blob/c9cdf7edc057b216a0361e03a0a494e12d467a26/node-http/hsd.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}