{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/astarte-platform/astarte"
		},
		"file": {
			"name": "astarte_housekeeping_api.yaml",
			"size": 0,
			"path": "apps/astarte_housekeeping_api/priv/static/astarte_housekeeping_api.yaml",
			"byteSize": 6923,
			"content": "openapi: 3.0.0\nservers:\n  - url: '{base_url}/v1'\n    variables:\n      base_url:\n        default: http://localhost:4001\n        description: \u003e-\n          The base URL you're serving Astarte from. This should point to the base\n          path from which Housekeeping API is served. In case you are running a local\n          installation, this is likely `http://localhost:4001`. In case you have a\n          standard Astarte installation, it is most likely\n          `https://\u003cyour host\u003e/housekeeping`.\ninfo:\n  description: \u003e-\n    APIs for Administration activities such as Realm creation and Astarte\n    configuration. This API is usually accessible only to system administrators,\n    and is not meant for the average user of Astarte, which should refer to\n    Realm Management API instead.\n  version: 1.1.0-dev\n  title: Astarte Housekeeping API\n  contact:\n    email: info@ispirata.com\ntags:\n  - name: realm\n    description: APIs for managing Realms.\npaths:\n  /realms:\n    get:\n      tags:\n        - realm\n      summary: Get all realms\n      description: Returns a list of all existing realms.\n      operationId: getRealms\n      security:\n        - JWT: []\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: string\n                example:\n                  data:\n                    - arealm\n                    - anotherrealm\n    post:\n      tags:\n        - realm\n      summary: Create a realm\n      description: \u003e-\n        Creates a new realm, based on the provided realm configuration.\n        Realm creation will be executed asynchronously by default - it is not\n        guaranteed that the requested realm will be available as soon as the\n        API call returns, but it is guaranteed that it will be eventually created\n        if no errors are returned and Astarte is operating normally.\n        You can perform the call synchronously by setting the async_operation query\n        param to false.\n      operationId: createRealm\n      security:\n        - JWT: []\n      parameters:\n        - name: async_operation\n          in: query\n          description: Whether the operation should be carried out asynchronously.\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Realm'\n      requestBody:\n        $ref: '#/components/requestBodies/createRealmBody'\n  '/realms/{realm_name}':\n    get:\n      tags:\n        - realm\n      summary: Get realm configuration\n      description: Retrieves a realm's configuration.\n      operationId: getRealmConfiguration\n      security:\n        - JWT: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Realm name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Realm'\n    put:\n      tags:\n        - realm\n      summary: Update a realm\n      description: Updates a realm's configuration.\n      operationId: updateRealm\n      security:\n        - JWT: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Realm name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n      requestBody:\n        $ref: '#/components/requestBodies/createRealmBody'\n    delete:\n      tags:\n        - realm\n      summary: Delete realm\n      description: \u003e\n        Deletes a realm from Astarte. This feature must be explicitly enabled\n        in the cluster, if it's disabled a 405 status code will be returned.\n        If there are connected devices present in the realm, a 422 status\n        code will be returned. Realm deletion will be executed asynchronously\n        by default - it is not guaranteed that the realm will be deleted as\n        soon as the API call returns, but it is guaranteed that it will be\n        eventually removed if no errors are returned and Astarte is\n        operating normally. You can perform the call synchronously by setting\n        the async_operation parameter to false.\n      operationId: deleteRealm\n      security:\n        - JWT: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Realm name\n          required: true\n          schema:\n            type: string\n        - name: async_operation\n          in: query\n          description: Whether the operation should be carried out asynchronously.\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '204':\n          description: Success\n        '405':\n          description: Realm deletion disabled\n        '422':\n          description: Connected devices present\ncomponents:\n  securitySchemes:\n    JWT:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: \u003e\n        To access APIs a valid JWT token must be passed in all requests\n        in the `Authorization` header. This token should be signed with\n        the private key provided upon Housekeeping API installation.\n\n\n        The following syntax must be used in the `Authorization` header :\n          `Bearer xxxxxx.yyyyyyy.zzzzzz`\n  requestBodies:\n    createRealmBody:\n      content:\n        application/json:\n          schema:\n            properties:\n              data:\n                $ref: '#/components/schemas/Realm'\n      description: Realm JSON configuration object.\n      required: true\n  schemas:\n    Realm:\n      type: object\n      required:\n        - realm_name\n        - jwt_public_key_pem\n      properties:\n        realm_name:\n          type: string\n          example: myrealm\n        jwt_public_key_pem:\n          type: string\n          example: |\n            -----BEGIN PUBLIC KEY-----\n            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsj7/Ci5Nx+ApLNW7+DyE\n            eTzQ68KEJT/gPW73Kpa2uyvxDwY669z/rP4hMj16wv4Ku3bI6C1ZIqT5SVuF8pDo\n            1Y1SF0GRIeslupm9KV1aFqIu1/srLz18LQHucQYUSa99PStFUJY2V83wneaeAArY\n            4VKDuQYtRZOd2VeD5Cbn602ksLLWCQc9HfL3VUHXTw6DuthnMMJARcVem8RAMScm\n            htGi6YRPFzvHtkb1WQCNGjw5gAmHX5/37ouwbBdnXOa9deiFv+1UIdcCVwMTyP/4\n            f9jgaxW4oQV85enS/OJrrC9jU11agRc4bDv1h4s2t+ETWb4llTVk3HMIHbC3EvKJ\n            VwIDAQAB\n            -----END PUBLIC KEY-----\n        replication_factor:\n          type: integer\n          example: 2\n",
			"canonicalURL": "/github.com/astarte-platform/astarte@ffad806921d493a4cf4eb7d3105acf423c28ac9b/-/blob/apps/astarte_housekeeping_api/priv/static/astarte_housekeeping_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/astarte-platform/astarte/blob/ffad806921d493a4cf4eb7d3105acf423c28ac9b/apps/astarte_housekeeping_api/priv/static/astarte_housekeeping_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}