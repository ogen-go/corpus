{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/karlvr/openapi-generator-plus-generators"
		},
		"file": {
			"name": "serialized-name.yml",
			"size": 0,
			"path": "__tests__/specs/serialized-name.yml",
			"byteSize": 4457,
			"content": "openapi: 3.0.3\ninfo:\n  title: Serialized name\n  description: |\n    Examples of where a property name might differ from the serializedName\n  version: '1.0'\npaths:\n  /auth/token:\n    post:\n      tags: [auth]\n      deprecated: false\n      summary: Obtain an access token\n      description: \"Use this endpoint to generate or refresh an auth token.\"\n      operationId: signIn\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [grant_type, client_id, client_secret]\n              properties:\n                grant_type:\n                  type: string\n                  enum: [password, refresh_token, client_credentials, token]\n                  description: |\n                    When using `password`, you must provide the `username` and `password`.\n                    \n                    When using `refresh_token` you must provide the `refresh_token`.\n                    \n                    When using `client_credentials` you only need to provide the `client_id` and `client_secret`.\n\n                    When using `token` you only need to provide the token in the `password`.\n                client_id:\n                  type: string\n                client_secret:\n                  type: string\n                  format: password\n                username:\n                  type: string\n                password:\n                  type: string\n                  format: password\n                totp:\n                  type: string\n                  description: |\n                    Supply the user's current TOTP if enabled for their account.\n                    If a user with TOTP setup attempts to authenticate without a TOTP, or with an invalid TOTP, the\n                    error response will use the `invalid_totp` code, instead of the usual `invalid_grant`.\n                refresh_token:\n                  type: string\n                  format: password\n      responses:\n        200:\n          description: OK\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/AccessToken'\n        400:\n          description: The credentials were not correct for the user, or the account was not found.\n          content:\n            application/json; charset=UTF-8:\n              schema:\n                $ref : '#/components/schemas/OAuthError'\n  /encoding:\n    get:\n      parameters:\n        - name: accessToken\n          in: query\n          schema:\n            $ref: '#/components/schemas/AccessToken'\n        - name: accessTokenFormNoExplode\n          in: query\n          schema:\n            $ref: '#/components/schemas/AccessToken'\n          style: form\n          explode: false\n        - name: accessTokenDeepObject\n          in: query\n          schema:\n            $ref: '#/components/schemas/AccessToken'\n          style: deepObject\n      responses:\n        200:\n          description: OK\n  /parameters/{access_token_path}:\n    get:\n      parameters:\n        - name: access_token\n          in: query\n          schema:\n            type: string\n        - name: access-token-header\n          in: header\n          schema:\n            type: string\n        - name: access_token_path\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\ncomponents:\n  schemas:\n    AccessToken:\n      type: object\n      required: [access_token, token_type, expires_in]\n      properties:\n        access_token:\n          type: string\n          description: The access token that grants the member access.\n        token_type:\n          type: string\n          description: \"The type of the access token.\"\n        refresh_token:\n          type: string\n          description: The refresh token is used to obtain a new access token, after the access token expires, without needing to prompt the user for their credentials again.\n        expires_in:\n          type: integer\n          format: int64\n          description: The number of seconds before the access token expires.\n        issuer:\n          type: string\n          description: A named external system that provides identity and API access by issuing OAuth access tokens.\n    OAuthError:\n      type: object\n      required: [error]\n      properties:\n        error:\n          type: string\n          description: The error code.\n",
			"canonicalURL": "/github.com/karlvr/openapi-generator-plus-generators@57cdb83edb435119e29597695b9037d2da85266b/-/blob/__tests__/specs/serialized-name.yml",
			"externalURLs": [
				{
					"url": "https://github.com/karlvr/openapi-generator-plus-generators/blob/57cdb83edb435119e29597695b9037d2da85266b/__tests__/specs/serialized-name.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}