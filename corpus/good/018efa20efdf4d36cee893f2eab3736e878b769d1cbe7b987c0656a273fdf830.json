{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/decentralised-dataexchange/automated-data-agreements"
		},
		"file": {
			"name": "data-agreements-admin-spec.yaml",
			"size": 0,
			"path": "interface-specs/data-agreements-admin-spec.yaml",
			"byteSize": 52037,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: Automated Data Agreements\n  description: This specification is documented in OpenAPI format, it describes the RESTFul APIs of ADA component\n  contact:\n    email: support@igrant.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 2.0.0\nservers:\n- url: https://virtserver.swaggerhub.com/iGrant.io/ADA/2.0.0\n  description: SwaggerHub API Auto Mocking\ntags:\n- name: Data Agreement - Auditor Functions\n  description: Data Agreement Proofs Protocol 1.0 (ADA RFC 0004)\n  externalDocs:\n    description: Specification\n    url: https://github.com/decentralised-dataexchange/automated-data-agreements/blob/main/docs/didcomm-protocol-spec.md\n- name: Data Agreement - Core Functions\n  description: Data Agreement Protocol 1.0 (ADA RFC 0002)\n  externalDocs:\n    description: Specification\n    url: https://github.com/decentralised-dataexchange/automated-data-agreements/blob/main/docs/didcomm-protocol-spec.md\n- name: Data Agreement - MyData DID Operations\n  description: MyData DID Protocol 1.0 (ADA RFC 0001)\n  externalDocs:\n    description: Specification\n    url: https://github.com/decentralised-dataexchange/automated-data-agreements/blob/main/docs/didcomm-protocol-spec.md\n- name: Data Agreement - MyData DID Registry Admin Functions\n  description: MyData DID registry administrative functions\n  externalDocs:\n    description: Specification\n    url: https://github.com/decentralised-dataexchange/automated-data-agreements/blob/main/docs/didcomm-protocol-spec.md\n- name: connection\n  description: Connection management\n  externalDocs:\n    description: Specification\n    url: https://github.com/hyperledger/aries-rfcs/tree/9b0aaa39df7e8bd434126c4b33c097aae78d65bf/features/0160-connection-protocol\npaths:\n  /mydata-did/didcomm/transaction-records:\n    get:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Fetch MyData DID registry transaction records\n      parameters:\n      - name: connection_id\n        in: query\n        description: Connection identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: uuid\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      - name: message_type\n        in: query\n        description: Message type\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - create-did\n          - read-did\n          - delete-did\n      - name: thread_id\n        in: query\n        description: Thread identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: uuid\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MyDataDIDRegistryDIDCommTransactionRecordListResponse'\n  /mydata-did/didcomm/transaction-records/{mydata_did_registry_didcomm_transaction_record_id}:\n    get:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Fetch MyData DID registry DIDComm transaction record by ID\n      parameters:\n      - name: mydata_did_registry_didcomm_transaction_record_id\n        in: path\n        description: MyData DID registry didcomm transaction identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MyDataDIDRegistryDIDCommTransactionRecord'\n    delete:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Remove MyData DID registry DIDComm transaction record by ID\n      parameters:\n      - name: mydata_did_registry_didcomm_transaction_record_id\n        in: path\n        description: MyData DID registry didcomm transaction identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"204\":\n          description: MyData DID registry DIDComm transaction record removed\n  /mydata-did/didcomm/create-did/{did}:\n    post:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Send create-did didcomm message to MyData DID registry\n      parameters:\n      - name: did\n        in: path\n        description: did:sov identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$\n          type: string\n        example: WgWxqztrNooG92RXvxSTWv\n      responses:\n        \"200\":\n          description: Send create-did message to DID registry\n  /mydata-did/didcomm/read-did/{did}:\n    post:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Send read-did didcomm message to MyData DID registry\n      parameters:\n      - name: did\n        in: path\n        description: did:mydata identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: ^did:mydata:(z[a-km-zA-HJ-NP-Z1-9]+)\n          type: string\n        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n      responses:\n        \"200\":\n          description: Send read-did message to DID registry\n  /mydata-did/didcomm/delete-did/{did}:\n    post:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Send delete-did message\n      parameters:\n      - name: did\n        in: path\n        description: did:mydata identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: ^did:mydata:(z[a-km-zA-HJ-NP-Z1-9]+)\n          type: string\n        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n      responses:\n        \"200\":\n          description: Send delete-did message to DID registry\n  /mydata-did/remote:\n    get:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Fetch MyData DID remote records.\n      parameters:\n      - name: did\n        in: query\n        description: MyData decentralised identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          pattern: ^did:mydata:(z[a-km-zA-HJ-NP-Z1-9]+)\n          type: string\n        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n      - name: sov_verkey\n        in: query\n        description: Sovrin verkey\n        required: false\n        style: form\n        explode: true\n        schema:\n          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$\n          type: string\n        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV\n      - name: status\n        in: query\n        description: MyData DID remote status\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - active\n          - revoked\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MyDataDIDRemoteRecordResponse'\n  /mydata-did-registry/mydata-did:\n    get:\n      tags:\n      - Data Agreement - MyData DID Registry Admin Functions\n      summary: Fetch all registered MyData DIDs\n      parameters:\n      - name: connection_id\n        in: query\n        description: Connection identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: uuid\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      - name: did\n        in: query\n        description: MyData decentralised identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          pattern: ^did:mydata:(z[a-km-zA-HJ-NP-Z1-9]+)\n          type: string\n        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n      - name: status\n        in: query\n        description: MyData DID remote status\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - active\n          - revoked\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MyDataDIDRegistryMyDataDIDListResponse'\n  /data-agreements/didcomm/read-data-agreement:\n    post:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Send read data agreement message to Data Controller (remote agent)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadDataAgreementRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataAgreementCRUDDIDCommTransactionResponse'\n  /data-agreements/didcomm/transactions:\n    get:\n      tags:\n      - Data Agreement - Core Functions\n      summary: List data agreements crud didcomm transactions from the wallet\n      parameters:\n      - name: connection_id\n        in: query\n        description: Connection identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: uuid\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      - name: message_type\n        in: query\n        description: Message type\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - create-data-agreement\n          - read-data-agreement\n          - update-data-agreement\n          - delete-data-agreement\n      - name: thread_id\n        in: query\n        description: Thread identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: uuid\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataAgreementCRUDDIDCommTransactionResponse'\n  /data-agreements/didcomm/transactions/{da_crud_didcomm_tx_id}:\n    delete:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Remove data agreement CRUD DIDComm transaction record by ID\n      parameters:\n      - name: da_crud_didcomm_tx_id\n        in: path\n        description: Data agreement CRUD didcomm transaction identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"204\":\n          description: Data agreement CRUD DIDComm transaction record removed\n  /data-agreements:\n    get:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Query data agreements in the wallet\n      parameters:\n      - name: data_agreement_id\n        in: query\n        description: Data agreement identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: delete_flag\n        in: query\n        description: Delete flag to query deleted data agreements\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n      - name: method_of_use\n        in: query\n        description: Method of use\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - data-source\n          - data-using-service\n      - name: template_version\n        in: query\n        description: Data agreement template version\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataAgreementV1RecordResponse'\n    post:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Create and store data agreement in wallet\n      requestBody:\n        $ref: '#/components/requestBodies/CreateOrUpdateDataAgreementInWalletRequest'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataAgreementV1RecordResponse'\n        \"422\":\n          description: Unprocessable Entity (invalid request payload)\n  /data-agreements/{data_agreement_id}:\n    put:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Update data agreement in the wallet\n      parameters:\n      - name: data_agreement_id\n        in: path\n        description: Data agreement identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/CreateOrUpdateDataAgreementInWalletRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataAgreementV1RecordResponse'\n        \"400\":\n          description: Bad Request (invalid request payload)\n    delete:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Delete data agreement in the wallet\n      parameters:\n      - name: data_agreement_id\n        in: path\n        description: Data agreement identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content (data agreement deleted)\n        \"400\":\n          description: Bad Request (invalid request payload)\n  /data-agreements/version-history/{data_agreement_id}:\n    get:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Query version history of a data agreement\n      parameters:\n      - name: data_agreement_id\n        in: path\n        description: Data agreement identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataAgreementV1RecordResponse'\n        \"400\":\n          description: Bad Request (invalid request payload)\n  /data-agreements/personal-data:\n    get:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Query data agreement personal data in wallet\n      parameters:\n      - name: attribute_category\n        in: query\n        description: Category of the attribute\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: attribute_sensitive\n        in: query\n        description: Sensitivity of the attribute\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataAgreementPersonalDataRecord'\n    post:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Create and store data agreement personal data in wallet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAndStoreDAPersonalDataInWalletRequest'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataAgreementPersonalDataRecord'\n        \"422\":\n          description: Unprocessable Entity (invalid request payload)\n  /data-agreements/personal-data/category:\n    get:\n      tags:\n      - Data Agreement - Core Functions\n      summary: List data agreement personal data category from wallet\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDAPersonalDataCategoryFromWalletResponse'\n  /mydata-did/set-did-registry-connection/{connection_id}:\n    post:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Mark a connection as MyData DID registry.\n      parameters:\n      - name: connection_id\n        in: path\n        description: Connection identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"204\":\n          description: Connection marked as MyData DID registry.\n        \"400\":\n          description: Bad Request\n  /mydata-did/get-did-registry-connection:\n    get:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Fetch current connection marked as MyData DID registry\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionRecord'\n        \"400\":\n          description: Bad Request\n  /mydata-did/unset-did-registry-connection:\n    delete:\n      tags:\n      - Data Agreement - MyData DID Operations\n      summary: Unmark current connection marked as MyData DID registry\n      responses:\n        \"204\":\n          description: Connection unmarked as MyData DID registry.\n        \"400\":\n          description: Bad Request\n  /auditor/set-auditor-connection/{connection_id}:\n    post:\n      tags:\n      - Data Agreement - Auditor Functions\n      summary: Mark a connection as Auditor.\n      parameters:\n      - name: connection_id\n        in: path\n        description: Connection identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"204\":\n          description: Connection marked as Auditor.\n        \"400\":\n          description: Bad Request\n  /auditor/get-auditor-connection:\n    get:\n      tags:\n      - Data Agreement - Auditor Functions\n      summary: Fetch current connection marked as Auditor\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionRecord'\n        \"400\":\n          description: Bad Request\n  /auditor/unset-auditor-connection:\n    delete:\n      tags:\n      - Data Agreement - Auditor Functions\n      summary: Unmark current connection marked as Auditor\n      responses:\n        \"204\":\n          description: Connection unmarked as Auditor.\n        \"400\":\n          description: Bad Request\n  /data-agreement-instances:\n    get:\n      tags:\n      - Data Agreement - Core Functions\n      summary: Query data agreement instances\n      parameters:\n      - name: data_agreement_id\n        in: query\n        description: Data agreement identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      - name: data_agreement_template_id\n        in: query\n        description: Data agreement template identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      - name: data_exchange_record_id\n        in: query\n        description: Data exchange record identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      - name: method_of_use\n        in: query\n        description: Method of use (or data exchange mode)\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - data-source\n          - data-using-service\n        example: data-using-service\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataAgreementInstance'\n  /auditor/didcomm/transaction-records:\n    get:\n      tags:\n      - Data Agreement - Auditor Functions\n      summary: Fetch Auditor DIDComm transaction records\n      parameters:\n      - name: connection_id\n        in: query\n        description: Connection identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: uuid\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      - name: thread_id\n        in: query\n        description: Thread identifier\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: uuid\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuditorDIDCommTransactionRecord'\n  /auditor/didcomm/transaction-records/{auditor_didcomm_transaction_record_id}:\n    get:\n      tags:\n      - Data Agreement - Auditor Functions\n      summary: Fetch Auditor DIDComm transaction record by ID\n      parameters:\n      - name: auditor_didcomm_transaction_record_id\n        in: path\n        description: Auditor didcomm transaction identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditorDIDCommTransactionRecord'\n    delete:\n      tags:\n      - Data Agreement - Auditor Functions\n      summary: Remove Auditor DIDComm transaction record by ID\n      parameters:\n      - name: auditor_didcomm_transaction_record_id\n        in: path\n        description: Auditor didcomm transaction identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"204\":\n          description: Auditor DIDComm transaction record removed\n  /auditor/didcomm/verify-request/{data_agreement_id}:\n    post:\n      tags:\n      - Data Agreement - Auditor Functions\n      summary: Send data agreement verify request to the auditor\n      parameters:\n      - name: data_agreement_id\n        in: path\n        description: Data agreement identifier\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditorDIDCommTransactionRecord'\n  /.well-known/did-configuration.json:\n    get:\n      tags:\n      - connection\n      summary: Well-known endpoint for connection\n      responses:\n        \"200\":\n          description: Returns connection invitation\ncomponents:\n  schemas:\n    AuditorDIDCommTransactionRecord:\n      required:\n      - auditor_didcomm_transaction_record_id\n      type: object\n      properties:\n        auditor_didcomm_transaction_record_id:\n          type: string\n          description: Transaction record id\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        connection_id:\n          type: string\n          description: Connection identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        created_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of record creation\n          example: 2021-12-10T11:20:01.000+0000\n        messages_list:\n          type: array\n          description: Messages list\n          items:\n            type: object\n        state:\n          type: string\n          description: Current record state\n          example: active\n        thread_id:\n          type: string\n          description: Parent message identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        trace:\n          type: boolean\n          description: Record trace information, based on agent configuration\n        updated_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of last record update\n          example: 2021-12-10T11:20:01.000+0000\n    CreateAndStoreDAPersonalDataInWalletRequest:\n      required:\n      - attribute_name\n      type: object\n      properties:\n        attribute_category:\n          type: string\n          description: Category of the attribute\n          example: Personal\n        attribute_description:\n          type: string\n          description: Description of the attribute\n          example: Name of the user\n        attribute_name:\n          type: string\n          description: Name of the attribute\n          example: Name\n        attribute_sensitive:\n          type: boolean\n          description: Sensitivity of the attribute\n          example: true\n    CreateOrUpdateDataAgreementInWalletRequest:\n      required:\n      - '@context'\n      - data_controller_name\n      - data_policy\n      - lawful_basis\n      - method_of_use\n      - personal_data\n      - purpose\n      - purpose_description\n      type: object\n      properties:\n        '@context':\n          type: string\n          description: Context of the schema\n          example: https://raw.githubusercontent.com/decentralised-dataexchange/automated-data-agreements/main/interface-specs/data-agreement-schema/v1/data-agreement-schema-context.jsonld\n        data_controller_name:\n          type: string\n          description: PII controller name\n          example: Happy Shopping AB\n        data_controller_url:\n          type: string\n          description: PII controller URL\n          example: https://www.happyshopping.com\n        data_policy:\n          $ref: '#/components/schemas/DataAgreementDataPolicy'\n        dpia:\n          $ref: '#/components/schemas/DataAgreementDPIA'\n        lawful_basis:\n          type: string\n          description: Legal basis of processing\n          example: consent\n          enum:\n          - consent\n          - legal_obligation\n          - contract\n          - vital_interest\n          - public_task\n          - legitimate_interest\n        method_of_use:\n          type: string\n          description: Method of use (or data exchange mode)\n          example: data-using-service\n          enum:\n          - data-source\n          - data-using-service\n        personal_data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateOrUpdateDataAgreementPersonalDataRequest'\n        purpose:\n          type: string\n          description: Usage purpose title\n          example: Customized shopping experience\n        purpose_description:\n          type: string\n          description: Usage purpose description\n          example: Collecting user data for offering custom tailored shopping experience\n    CreateOrUpdateDataAgreementPersonalDataRequest:\n      type: object\n      properties:\n        attribute_id:\n          type: string\n          description: Attribute identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        restrictions:\n          type: array\n          description: List of restrictions\n          items:\n            $ref: '#/components/schemas/CreateOrUpdateDataAgreementPersonalDataRestriction'\n    CreateOrUpdateDataAgreementPersonalDataRestriction:\n      type: object\n      properties:\n        cred_def_id:\n          type: string\n          description: Credential definition identifier\n          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag\n        schema_id:\n          type: string\n          description: Schema identifier\n          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0\n    DataAgreementCRUDDIDCommTransactionResponse:\n      type: object\n      properties:\n        connection_id:\n          type: string\n          description: Connection identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        da_crud_didcomm_tx_id:\n          type: string\n          description: Data agreement CRUD DIDComm transaction identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        message_type:\n          type: string\n          description: Message type\n          example: read-data-agreement\n        messages_list:\n          type: array\n          description: List of messages\n          items:\n            type: string\n        thread_id:\n          type: string\n          description: Thread identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n    DataAgreementDPIA:\n      type: object\n      properties:\n        dpia_date:\n          type: string\n          description: DPIA conducted date time in ISO 8601 UTC date time format\n          example: 2021-12-10T11:20:02.529+0000\n        dpia_summary_url:\n          type: string\n          description: DPIA summary URL\n          example: https://org.com/dpia_results.html\n    DataAgreementDataPolicy:\n      required:\n      - data_retention_period\n      - geographic_restriction\n      - jurisdiction\n      - policy_URL\n      - storage_location\n      type: object\n      properties:\n        data_retention_period:\n          type: integer\n          description: Data retention period in days\n          format: int32\n          example: 365\n        geographic_restriction:\n          type: string\n          description: Geographic restriction\n          example: Europe\n        industry_sector:\n          type: string\n          description: Industry scope\n          example: Healthcare\n        jurisdiction:\n          type: string\n          description: Jurisdiction\n          example: Sweden\n        policy_URL:\n          type: string\n          description: Policy URL\n          example: https://clarifyhealth.com/privacy-policy/\n        storage_location:\n          type: string\n          description: Storage location\n          example: Europe\n    DataAgreementEvent:\n      type: object\n      properties:\n        did:\n          pattern: ^did:mydata:(z[a-km-zA-HJ-NP-Z1-9]+)\n          type: string\n          description: MyData decentralised identifier\n          example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n        id:\n          type: string\n          description: Data agreement event identifier\n          example: did:mydata:123456789abcdefghi#1\n        state:\n          type: string\n          description: State of the event\n          example: capture\n        time-stamp:\n          type: string\n          description: Data agreement event timestamp in ISO 8601 UTC date time format\n          example: 2021-12-10T11:20:02.535+0000\n    DataAgreementInstance:\n      required:\n      - data_policy\n      - lawful_basis\n      - method_of_use\n      - personal_data\n      - purpose\n      - purpose_description\n      type: object\n      properties:\n        '@context':\n          type: array\n          description: Context\n          example:\n          - https://raw.githubusercontent.com/decentralised-dataexchange/automated-data-agreements/main/interface-specs/data-agreement-schema/v1/data-agreement-schema-context.jsonld\n          - https://w3id.org/security/v2\n          items:\n            type: string\n        data_controller_name:\n          type: string\n          description: PII controller name\n          example: Happy Shopping AB\n        data_controller_url:\n          type: string\n          description: PII controller URL\n          example: https://www.happyshopping.com\n        data_policy:\n          description: Data policy\n          allOf:\n          - $ref: '#/components/schemas/DataAgreementDataPolicy'\n        dpia:\n          description: DPIA metadata\n          allOf:\n          - $ref: '#/components/schemas/DataAgreementDPIA'\n        event:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataAgreementEvent'\n        id:\n          type: string\n          description: Data agreement identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        lawful_basis:\n          type: string\n          description: Legal basis of processing\n          example: consent\n          enum:\n          - consent\n          - legal_obligation\n          - contract\n          - vital_interest\n          - public_task\n          - legitimate_interest\n        method_of_use:\n          type: string\n          description: Method of use (or data exchange mode)\n          example: data-using-service\n          enum:\n          - data-source\n          - data-using-service\n        personal_data:\n          type: array\n          description: Personal data (attributes)\n          items:\n            $ref: '#/components/schemas/DataAgreementPersonalData'\n        principle-did:\n          type: string\n          description: Principle did\n          example: did:mydata:123456789abcdefghi\n        proof:\n          $ref: '#/components/schemas/DataAgreementProof'\n        proofChain:\n          type: array\n          description: Data agreement proof chain\n          items:\n            $ref: '#/components/schemas/DataAgreementProof'\n        purpose:\n          type: string\n          description: Usage purpose title\n          example: Customized shopping experience\n        purpose_description:\n          type: string\n          description: Usage purpose description\n          example: Collecting user data for offering custom tailored shopping experience\n        template_id:\n          type: string\n          description: Data agreement template identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        template_version:\n          type: integer\n          description: Data agreement template version\n          format: int32\n          example: 1\n        version:\n          type: integer\n          description: Data agreement version\n          format: int32\n          example: 1\n    DataAgreementPersonalData:\n      required:\n      - attribute_description\n      - attribute_name\n      type: object\n      properties:\n        attribute_category:\n          type: string\n          description: Category of the attribute\n          example: Personal\n        attribute_description:\n          type: string\n          description: The description of the attribute.\n          example: Name of the customer\n        attribute_id:\n          type: string\n          description: Attribute identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        attribute_name:\n          type: string\n          description: Name of the attribute\n          example: Name\n        attribute_sensitive:\n          type: boolean\n          description: Sensitivity of the attribute\n          example: true\n    DataAgreementPersonalDataRecord:\n      required:\n      - attribute_category\n      - attribute_description\n      - attribute_name\n      - attribute_sensitive\n      - data_agreement_personal_data_record_id\n      type: object\n      properties:\n        attribute_category:\n          type: string\n          description: The category of the attribute.\n          example: personal\n        attribute_description:\n          type: string\n          description: The description of the attribute.\n          example: Name of the customer\n        attribute_name:\n          type: string\n          description: The name of the attribute.\n          example: name\n        attribute_sensitive:\n          type: string\n          description: The sensitive flag of the attribute.\n          example: \"True\"\n        created_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of record creation\n          example: 2021-12-10T11:20:01.000+0000\n        data_agreement_personal_data_record_id:\n          type: string\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        state:\n          type: string\n          description: Current record state\n          example: active\n        trace:\n          type: boolean\n          description: Record trace information, based on agent configuration\n        updated_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of last record update\n          example: 2021-12-10T11:20:01.000+0000\n    DataAgreementProof:\n      type: object\n      properties:\n        created:\n          type: string\n          description: Proof created date time in ISO 8601 format\n          example: 2021-12-10T11:20:02.534+0000\n        id:\n          type: string\n          description: Proof identifier\n          example: did:mydata:123456789abcdefghi#1\n        proofPurpose:\n          type: string\n          description: Proof purpose\n          example: contractAgreement\n        proofValue:\n          type: string\n          description: Proof value\n          example: 123456789abcdefghi\n        type:\n          type: string\n          description: Proof type\n          example: Ed25519Signature2018\n        verificationMethod:\n          type: string\n          description: Verification method\n          example: did:mydata:123456789abcdefghi\n    DataAgreementV1:\n      required:\n      - '@context'\n      - data_controller_name\n      - data_policy\n      - lawful_basis\n      - method_of_use\n      - personal_data\n      - purpose\n      - purpose_description\n      type: object\n      properties:\n        '@context':\n          type: string\n          description: Context of the schema\n          example: https://raw.githubusercontent.com/decentralised-dataexchange/automated-data-agreements/main/interface-specs/data-agreement-schema/v1/data-agreement-schema-context.jsonld\n        data_controller_name:\n          type: string\n          description: PII controller name\n          example: Happy Shopping AB\n        data_controller_url:\n          type: string\n          description: PII controller URL\n          example: https://www.happyshopping.com\n        data_policy:\n          $ref: '#/components/schemas/DataAgreementDataPolicy'\n        dpia:\n          $ref: '#/components/schemas/DataAgreementDPIA'\n        lawful_basis:\n          type: string\n          description: Legal basis of processing\n          example: consent\n          enum:\n          - consent\n          - legal_obligation\n          - contract\n          - vital_interest\n          - public_task\n          - legitimate_interest\n        method_of_use:\n          type: string\n          description: Method of use (or data exchange mode)\n          example: data-using-service\n          enum:\n          - data-source\n          - data-using-service\n        personal_data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataAgreementPersonalData'\n        purpose:\n          type: string\n          description: Usage purpose title\n          example: Customized shopping experience\n        purpose_description:\n          type: string\n          description: Usage purpose description\n          example: Collecting user data for offering custom tailored shopping experience\n        template_id:\n          type: string\n          description: Data agreement template identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        template_version:\n          type: integer\n          description: Data agreement template version\n          format: int32\n          example: 1\n    DataAgreementV1RecordResponse:\n      required:\n      - data_agreement\n      - data_agreement_id\n      - data_agreement_record_id\n      - delete_flag\n      - method_of_use\n      - published_flag\n      - state\n      type: object\n      properties:\n        data_agreement:\n          description: The data agreement.\n          allOf:\n          - $ref: '#/components/schemas/DataAgreementV1'\n        data_agreement_id:\n          type: string\n          description: The unique identifier for the data agreement.\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        data_agreement_record_id:\n          type: string\n          description: Data Agreement Record identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        delete_flag:\n          type: string\n          description: The delete flag.\n          example: \"False\"\n          enum:\n          - \"True\"\n          - \"False\"\n        method_of_use:\n          type: string\n          description: The method of use for the data agreement.\n          example: data-source\n          enum:\n          - data-source\n          - data-using-service\n        published_flag:\n          type: string\n          description: The production flag.\n          example: \"False\"\n          enum:\n          - \"True\"\n          - \"False\"\n        state:\n          type: string\n          description: The state of the data agreement.\n          example: PREPARATION\n          enum:\n          - PREPARATION\n    ListDAPersonalDataCategoryFromWalletResponse:\n      required:\n      - categories\n      type: object\n      properties:\n        categories:\n          type: array\n          description: List of categories\n          items:\n            type: string\n            description: Category\n            example: Personal\n    MyDataDIDDoc:\n      required:\n      - '@context'\n      - authentication\n      - id\n      - service\n      - verification_method\n      type: object\n      properties:\n        '@context':\n          type: string\n          description: The DIDDoc context\n          example: https://w3id.org/did/v1\n        authentication:\n          type: array\n          items:\n            $ref: '#/components/schemas/MyDataDIDDocAuthentication'\n        id:\n          type: string\n          example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n        service:\n          type: array\n          items:\n            $ref: '#/components/schemas/MyDataDIDDocService'\n        verification_method:\n          type: array\n          items:\n            $ref: '#/components/schemas/MyDataDIDDocVerificationMethod'\n    MyDataDIDDocAuthentication:\n      required:\n      - publicKey\n      - type\n      type: object\n      properties:\n        publicKey:\n          type: string\n          example: did:mydata:fz6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E#1\n        type:\n          type: string\n          example: Ed25519SignatureAuthentication2018\n    MyDataDIDDocService:\n      required:\n      - id\n      - priority\n      - recipientKeys\n      - serviceEndpoint\n      - type\n      type: object\n      properties:\n        id:\n          type: string\n          example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E;didcomm\n        priority:\n          type: integer\n          format: int32\n          example: 1\n        recipientKeys:\n          type: array\n          items:\n            type: string\n            example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n        serviceEndpoint:\n          type: string\n          example: https://didcomm.org\n        type:\n          type: string\n          example: DIDComm\n    MyDataDIDDocVerificationMethod:\n      required:\n      - controller\n      - id\n      - publicKeyBase58\n      - type\n      type: object\n      properties:\n        controller:\n          type: string\n          example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n        id:\n          type: string\n          example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E#1\n        publicKeyBase58:\n          type: string\n          example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n        type:\n          type: string\n          example: Ed25519VerificationKey2018\n    MyDataDIDRegistryDIDCommTransactionRecord:\n      required:\n      - mydata_did_registry_didcomm_transaction_record_id\n      type: object\n      properties:\n        connection_id:\n          type: string\n          description: Connection identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        created_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of record creation\n          example: 2021-12-10T11:20:01.000+0000\n        message_type:\n          type: string\n          description: Message family\n          example: create-did\n          enum:\n          - create-did\n          - read-did\n          - delete-did\n        messages_list:\n          type: array\n          description: Messages list\n          items:\n            type: object\n        mydata_did_registry_didcomm_transaction_record_id:\n          type: string\n          description: Transaction record id\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        state:\n          type: string\n          description: Current record state\n          example: active\n        thread_id:\n          type: string\n          description: Parent message identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        trace:\n          type: boolean\n          description: Record trace information, based on agent configuration\n        updated_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of last record update\n          example: 2021-12-10T11:20:01.000+0000\n    MyDataDIDRegistryDIDCommTransactionRecordListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          description: MyData DID registry transaction records\n          items:\n            $ref: '#/components/schemas/MyDataDIDRegistryDIDCommTransactionRecord'\n    MyDataDIDRegistryMyDataDIDListResponse:\n      type: object\n      properties:\n        connection_id:\n          type: string\n          description: Connection identifier\n          format: uuid\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        did:\n          pattern: ^did:mydata:(z[a-km-zA-HJ-NP-Z1-9]+)\n          type: string\n          description: MyData decentralised identifier\n          example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n        diddoc:\n          description: MyData DID document\n          allOf:\n          - $ref: '#/components/schemas/MyDataDIDDoc'\n        status:\n          type: string\n          description: MyData DID remote status\n          enum:\n          - active\n          - revoked\n        version:\n          type: string\n          description: MyData DID document version\n    MyDataDIDRemoteRecordResponse:\n      type: object\n      properties:\n        did:\n          pattern: ^did:mydata:(z[a-km-zA-HJ-NP-Z1-9]+)\n          type: string\n          description: MyData decentralised identifier\n          example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E\n        did_doc:\n          description: MyData DID document\n          allOf:\n          - $ref: '#/components/schemas/MyDataDIDDoc'\n        sov_verkey:\n          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$\n          type: string\n          description: Sovrin verkey\n          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV\n        status:\n          type: string\n          description: MyData DID remote status\n          enum:\n          - active\n          - revoked\n    ReadDataAgreementRequest:\n      required:\n      - connection_id\n      - data_agreement_id\n      type: object\n      properties:\n        connection_id:\n          type: string\n          description: Connection identifier\n          format: uuid\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        data_agreement_id:\n          type: string\n          description: Data agreement identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n    ConnectionRecord:\n      type: object\n      properties:\n        accept:\n          type: string\n          description: 'Connection acceptance: manual or auto'\n          example: auto\n          enum:\n          - manual\n          - auto\n        alias:\n          type: string\n          description: Optional alias to apply to connection for later use\n          example: Bob, providing quotes\n        connection_id:\n          type: string\n          description: Connection identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        created_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of record creation\n          example: 2021-12-10T11:20:01.000+0000\n        error_msg:\n          type: string\n          description: Error message\n          example: No DIDDoc provided; cannot connect to public DID\n        inbound_connection_id:\n          type: string\n          description: Inbound routing connection id to use\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        initiator:\n          type: string\n          description: 'Connection initiator: self, external, or multiuse'\n          example: self\n          enum:\n          - self\n          - external\n          - multiuse\n        invitation_key:\n          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$\n          type: string\n          description: Public key for connection\n          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV\n        invitation_mode:\n          type: string\n          description: 'Invitation mode: once, multi, or static'\n          example: once\n          enum:\n          - once\n          - multi\n          - static\n        my_did:\n          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$\n          type: string\n          description: Our DID for connection\n          example: WgWxqztrNooG92RXvxSTWv\n        request_id:\n          type: string\n          description: Connection request identifier\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        routing_state:\n          type: string\n          description: Routing state of connection\n          example: active\n        state:\n          type: string\n          description: Current record state\n          example: active\n        their_did:\n          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$\n          type: string\n          description: Their DID for connection\n          example: WgWxqztrNooG92RXvxSTWv\n        their_label:\n          type: string\n          description: Their label for connection\n          example: Bob\n        their_role:\n          type: string\n          description: Their assigned role for connection\n          example: Point of contact\n        updated_at:\n          pattern: ^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$\n          type: string\n          description: Time of last record update\n          example: 2021-12-10T11:20:01.000+0000\n  requestBodies:\n    CreateOrUpdateDataAgreementInWalletRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateOrUpdateDataAgreementInWalletRequest'\n",
			"canonicalURL": "/github.com/decentralised-dataexchange/automated-data-agreements@19e52796701882c35cde09583fce94f882b6e79c/-/blob/interface-specs/data-agreements-admin-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/decentralised-dataexchange/automated-data-agreements/blob/19e52796701882c35cde09583fce94f882b6e79c/interface-specs/data-agreements-admin-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}