{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jjrom/resto"
		},
		"file": {
			"name": "resto-api.json",
			"size": 0,
			"path": "docs/resto-api.json",
			"byteSize": 210267,
			"content": "{\n    \"info\": {\n        \"contact\": {\n            \"email\": \"jerome.gasperi@gmail.com\"\n        }, \n        \"description\": \"A metadata catalog and search engine for geospatialized data\", \n        \"version\": \"6.0.0\", \n        \"title\": \"Welcome to resto\"\n    }, \n    \"paths\": {\n        \"/collections/{collectionId}/items\": {\n            \"post\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"featureId\": \"c4f6ed9f-35ba-5c85-8449-e437c14ae428\", \n                                    \"message\": \"Feature inserted\", \n                                    \"collection\": \"S2\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"featureId\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Newly created feature identifier\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }, \n                                        \"collection\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Collection identifier in which feature is inserted\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"Feature is inserted within collection\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Collection not found\"\n                    }, \n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForbiddenError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Only user with *update* rights can add feature to collection\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Invalid feature description\"\n                    }, \n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ConflictError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Feature is already present in database\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Simplify input geometry with tolerance in degrees (use in conjunction with *maxpoints*). [IMPORTANT] Simplification only affects the internal indexed geometry used by the search engine. The original geometry is stored unmodified.\", \n                        \"required\": false, \n                        \"name\": \"tolerance\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"number\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"If tolerance is set, geometry simplification of input geometry is performed only if the number of geometry vertices is greater than *maxpoints*\", \n                        \"required\": false, \n                        \"name\": \"maxpoints\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[ADDON][Tag] Set to false to not use iTag during feature insertion\", \n                        \"required\": false, \n                        \"name\": \"_useItag\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ], \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"summary\": \"Add feature(s) to collection\", \n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"oneOf\": [\n                                    {\n                                        \"$ref\": \"#/components/schemas/InputFeatureCollection\"\n                                    }, \n                                    {\n                                        \"$ref\": \"#/components/schemas/InputFeature\"\n                                    }\n                                ]\n                            }\n                        }\n                    }, \n                    \"description\": \"Either a GeoJSON Feature or a GeoJSON FeatureCollection\"\n                }, \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"CollectionsAPI::insertFeatures\"\n            }, \n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RestoFeatureCollection\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Features collection\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Collection not Found\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Bad request (i.e. invalid parameter)\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Free text search - OpenSearch {searchTerms}. Can include hashtags i.e. text starting with *#* characters. In this case, use the following:\\n* *#cryosphere* will search for *cryosphere*\\n* *#cryosphere #atmosphere* will search for *cryosphere* AND *atmosphere*\\n* *#cryosphere|atmosphere* will search for *cryosphere* OR *atmosphere*\\n* *#cryosphere!* will search for *cryosphere* OR any *broader* concept of *cryosphere* ([EXTENSION][SKOS])\\n* *#cryosphere\\\\** will search for *cryosphere* OR any *narrower* concept of *cryosphere* ([EXTENSION][SKOS])\\n* *#cryosphere~* will search for *cryosphere* OR any *related* concept of *cryosphere* ([EXTENSION][SKOS])\", \n                        \"required\": false, \n                        \"name\": \"q\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Number of results returned per page - between 1 and 500 (default 20) - OpenSearch {count}\", \n                        \"required\": false, \n                        \"name\": \"limit\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"default\": 20, \n                            \"minimum\": 1, \n                            \"type\": \"integer\", \n                            \"maximum\": 500\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"First result to provide - minimum 1, (default 1) - OpenSearch {startIndex}\", \n                        \"required\": false, \n                        \"name\": \"startIndex\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"default\": 1, \n                            \"minimum\": 1, \n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"First page to provide - minimum 1, (default 1) - OpenSearch {startPage}\", \n                        \"required\": false, \n                        \"name\": \"page\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"default\": 1, \n                            \"minimum\": 1, \n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Two letters language code according to ISO 639-1 (default *en*) - OpenSearch {language}\", \n                        \"required\": false, \n                        \"name\": \"lang\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Array of item ids to return. All other filter parameters that further restrict the number of search results (except next and limit) are ignored\", \n                        \"required\": false, \n                        \"name\": \"ids\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Region of Interest defined in GeoJSON or in Well Known Text standard (WKT) with coordinates in decimal degrees (EPSG:4326) - OpenSearch {geo:geometry}\", \n                        \"required\": false, \n                        \"name\": \"intersects\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Region of Interest defined by 'west, south, east, north' coordinates of longitude, latitude, in decimal degrees (EPSG:4326) - OpenSearch {geo:box}\", \n                        \"required\": false, \n                        \"name\": \"bbox\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"minItems\": 4, \n                            \"items\": {\n                                \"type\": \"number\"\n                            }, \n                            \"type\": \"array\", \n                            \"maxItems\": 6\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[EXTENSION][egg] Location string e.g. Paris, France  or toponym identifier (i.e. geouid:xxxx) - OpenSearch {geo:name}\", \n                        \"required\": false, \n                        \"name\": \"name\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Longitude expressed in decimal degrees (EPSG:4326) - should be used with geo:lat - OpenSearch {geo:lon}\", \n                        \"required\": false, \n                        \"name\": \"lon\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"number\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Latitude expressed in decimal degrees (EPSG:4326) - should be used with geo:lon - OpenSearch {geo:lat}\", \n                        \"required\": false, \n                        \"name\": \"lat\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"number\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Radius expressed in meters - should be used with geo:lon and geo:lat - OpenSearch {geo:radius}\", \n                        \"required\": false, \n                        \"name\": \"radius\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"number\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Single date+time, or a range ('/' separator) of the search query. Format should follow RFC-3339 - OpenSearch {time:start}/{time:end}\", \n                        \"required\": false, \n                        \"name\": \"datetime\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^([0-9]{4})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)([\\\\.,][0-9]+)?(([Zz])|([\\\\+|\\\\-]([01][0-9]|2[0-3]):[0-5][0-9]))$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Beginning of the time slice of the search query. Format should follow RFC-3339 - OpenSearch {time:start}.\", \n                        \"required\": false, \n                        \"name\": \"start\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?(|Z|[\\\\+\\\\-][0-9]{2}:[0-9]{2}))?$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"End of the time slice of the search query. Format should follow RFC-3339 - OpenSearch {time:end}\", \n                        \"required\": false, \n                        \"name\": \"end\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?(|Z|[\\\\+\\\\-][0-9]{2}:[0-9]{2}))?$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Returns products with metadata publication date greater or equal than *published* - OpenSearch {dc:date}\", \n                        \"required\": false, \n                        \"name\": \"published\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?(|Z|[\\\\+\\\\-][0-9]{2}:[0-9]{2}))?$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Returns features with *sort* key value greater than *prev* value - use this for pagination. The value is a unique iterator computed from the *sort* key value and provided within each feature properties as *sort_idx* property\", \n                        \"required\": false, \n                        \"name\": \"prev\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Returns features with *sort* key value lower than *next* value - use this for pagination. The value is a unique iterator computed from the *sort* key value and provided within each feature properties as *sort_idx* property\", \n                        \"required\": false, \n                        \"name\": \"next\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Like on product identifier\", \n                        \"required\": false, \n                        \"name\": \"pid\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Sort results by property *startDate* or *created* (default *startDate*). Sorting order is DESCENDING (ASCENDING if property is prefixed by minus sign)\", \n                        \"required\": false, \n                        \"name\": \"sort\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Limit search to owner's features\", \n                        \"required\": false, \n                        \"name\": \"owner\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[EXTENSION][social] Limit search to number of likes (interval)\", \n                        \"required\": false, \n                        \"name\": \"likes\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[EXTENSION][social] Return only liked features from calling user\", \n                        \"required\": false, \n                        \"name\": \"liked\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Feature status (unusued)\", \n                        \"required\": false, \n                        \"name\": \"status\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the entry type (e.g. ER02_SAR_IM__0P, MER_RR__1P, SM_SLC__1S, GES_DISC_AIRH3STD_V005) - OpenSearch {eo:productType}\", \n                        \"required\": false, \n                        \"name\": \"productType\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the processing level applied to the entry - OpenSearch {eo:processingLevel}\", \n                        \"required\": false, \n                        \"name\": \"processingLevel\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string with the platform short name (e.g. Sentinel-1) - OpenSearch {eo:platform}\", \n                        \"required\": false, \n                        \"name\": \"platform\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the instrument (e.g. MERIS, AATSR, ASAR, HRVIR. SAR) - OpenSearch {eo:instrument}\", \n                        \"required\": false, \n                        \"name\": \"instrument\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the sensor type. Suggested values are: OPTICAL, RADAR, ALTIMETRIC, ATMOSPHERIC, LIMB - OpenSearch {eo:sensorType}\", \n                        \"required\": false, \n                        \"name\": \"sensorType\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][OpticalModel] Cloud cover expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"cloudCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][OpticalModel] Snow cover expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"snowCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Water area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"waterCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Urban area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"urbanCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Ice area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"iceCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Herbaceous area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"herbaceousCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Forest area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"forestCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Flooded area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"floodedCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Desert area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"desertCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Cultivated area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"cultivatedCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ], \n                \"tags\": [\n                    \"Feature\"\n                ], \n                \"description\": \"List of filters to search features within collection {collectionId}\", \n                \"summary\": \"Get features (search on a specific collection)\", \n                \"operationId\": \"FeaturesAPI::getFeaturesInCollection\"\n            }\n        }, \n        \"/collections/{collectionId}/items/{featureId}/{property}\": {\n            \"put\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"Update property for feature b9eeaf6b-9868-5418-9455-3e77cd349e21\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"The property is updated\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Feature not found\"\n                    }, \n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForbiddenError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Forbidden\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Invalid property\"\n                    }\n                }, \n                \"description\": \"Update {property} for feature {featureId}\", \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Feature identifier\", \n                        \"required\": true, \n                        \"name\": \"featureId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"enum\": [\n                                \"title\", \n                                \"description\", \n                                \"visibility\", \n                                \"owner\", \n                                \"status\"\n                            ], \n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Property to update\", \n                        \"required\": true, \n                        \"name\": \"property\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"Feature\"\n                ], \n                \"summary\": \"Update feature property\", \n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"example\": {\n                                \"value\": 1\n                            }, \n                            \"schema\": {\n                                \"type\": \"object\", \n                                \"properties\": {\n                                    \"value\": {\n                                        \"description\": \"New property value\"\n                                    }\n                                }\n                            }\n                        }\n                    }, \n                    \"description\": \"Property value to update\"\n                }, \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"FeaturesAPI::updateFeatureProperty\"\n            }\n        }, \n        \"/conformance\": {\n            \"get\": {\n                \"operationId\": \"ServicesAPI::conformance\", \n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"conformsTo\": {\n                                            \"items\": {\n                                                \"type\": \"string\"\n                                            }, \n                                            \"type\": \"array\", \n                                            \"description\": \"Array of conformance specification urls\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"OGC API Feature conformance definition\"\n                    }, \n                    \"404\": {\n                        \"description\": \"Not found\"\n                    }\n                }, \n                \"summary\": \"Conformance page\", \n                \"description\": \"Returns the OGC API Feature conformance description as JSON document\", \n                \"tags\": [\n                    \"Server\"\n                ]\n            }\n        }, \n        \"/auth/activate/{token}\": {\n            \"put\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"profile\": {\n                                        \"picture\": \"https://robohash.org/d0e907f8b6f4ee74cd4c38a515e2a4de?gravatar=hashed\u0026bgset=any\u0026size=400x400\", \n                                        \"followed\": false, \n                                        \"name\": \"jrom\", \n                                        \"firstname\": \"J\\u00e9r\\u00f4me\", \n                                        \"bio\": \"Working on new features for the next major release of SnapPlanet\", \n                                        \"lastname\": \"Gasperi\", \n                                        \"followings\": 144, \n                                        \"topics\": \"earth,fires,geology,glaciology,volcanism\", \n                                        \"followme\": false, \n                                        \"followers\": 185, \n                                        \"groups\": [\n                                            \"1\"\n                                        ], \n                                        \"id\": \"1356771884787565573\", \n                                        \"registrationdate\": \"2016-10-08T22:50:34.187217Z\"\n                                    }, \n                                    \"token\": \"eyJzdWIiOiIxOTQ2NTIwMjk3MjEzNTI3MDUyIiwiaWF0IjoxNTQ2MjY2NTU3LCJleHAiOjE1NDYyNzAxNTd9.nI4q0LBqGOG0a6GCjxWvUiVA6hKndN9mJrjuT1WG1Xo\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"profile\": {\n                                            \"description\": \"User profile\", \n                                            \"$ref\": \"#/components/schemas/UserDisplayProfile\"\n                                        }, \n                                        \"token\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Authentication token\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"Activation status - user activated or not\"\n                    }, \n                    \"400\": {\n                        \"description\": \"Bad request\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Activation token\", \n                        \"required\": true, \n                        \"name\": \"token\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"User\"\n                ], \n                \"description\": \"Activate registered user\", \n                \"summary\": \"Activate a user\", \n                \"operationId\": \"activateUser\"\n            }\n        }, \n        \"/auth/check/{token}\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"isValid\": false, \n                                    \"message\": \"Token checked\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"isValid\": {\n                                            \"type\": \"boolean\", \n                                            \"description\": \"True if valid - False if not\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Token checked\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"Return token validity\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Security token\", \n                        \"required\": true, \n                        \"name\": \"token\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"User\"\n                ], \n                \"description\": \"Check if security token associated to user is valid. Usually security token is used to temporarely replace authentication to download/visualize ressources\", \n                \"summary\": \"Check token validity\", \n                \"operationId\": \"checkToken\"\n            }\n        }, \n        \"/api.{format}\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OpenAPI 3.0 definition\"\n                    }, \n                    \"404\": {\n                        \"description\": \"Not found\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"enum\": [\n                                \"json\", \n                                \"html\"\n                            ], \n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Output format - *json* or *html*\", \n                        \"required\": true, \n                        \"name\": \"format\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"Server\"\n                ], \n                \"description\": \"Returns the server API definition as an OpenAPI 3.0 JSON document (default) or as an HTML page (if format is specified and set to *html*)\", \n                \"summary\": \"OpenAPI definition\", \n                \"operationId\": \"ServicesAPI::api\"\n            }\n        }, \n        \"/\": {\n            \"get\": {\n                \"operationId\": \"ServicesAPI::hello\", \n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"description\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Server description\"\n                                        }, \n                                        \"links\": {\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/Link\"\n                                            }, \n                                            \"type\": \"array\", \n                                            \"description\": \"Landing page conforms to OGC API Feature\\n(see https://github.com/opengeospatial/ogcapi-features/blob/master/core/standard/17-069.adoc)\"\n                                        }, \n                                        \"id\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Server identifier.\"\n                                        }, \n                                        \"capabilities\": {\n                                            \"items\": {\n                                                \"type\": \"string\"\n                                            }, \n                                            \"type\": \"array\", \n                                            \"description\": \"Array of resto-addons list. Used client side to detect resto capabilities\"\n                                        }, \n                                        \"title\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Server title\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"Server landing page\"\n                    }, \n                    \"404\": {\n                        \"description\": \"Not found\"\n                    }\n                }, \n                \"summary\": \"Landing page\", \n                \"description\": \"Landing page for the server. Should be used by client to automatically detects endpoints to API, collections, etc.\", \n                \"tags\": [\n                    \"Server\"\n                ]\n            }\n        }, \n        \"/services/osdd/{collectionId}\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OpenSearch Document Description (OSDD)\"\n                    }, \n                    \"404\": {\n                        \"description\": \"Collection not found\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"description\": \"Returns the OpenSearch Document Description (OSDD) for the search service of collection {collectionId}\", \n                \"summary\": \"Get OpenSearch Description Document for a collection\", \n                \"operationId\": \"ServicesAPI::getOSDDForCollection\"\n            }\n        }, \n        \"/collections/{collectionId}/items/{featureId}\": {\n            \"put\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"Update feature b9eeaf6b-9868-5418-9455-3e77cd349e21\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"The feature is updated\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Feature not found\"\n                    }, \n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForbiddenError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Forbidden\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Invalid property\"\n                    }\n                }, \n                \"description\": \"Update feature {featureId}\", \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Feature identifier\", \n                        \"required\": true, \n                        \"name\": \"featureId\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"Feature\"\n                ], \n                \"summary\": \"Update feature property\", \n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/InputFeature\"\n                            }\n                        }\n                    }, \n                    \"description\": \"Feature description\"\n                }, \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"FeaturesAPI::updateFeature\"\n            }, \n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OutputFeature\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Feature metadata\"\n                    }, \n                    \"404\": {\n                        \"description\": \"Feature not found\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Feature identifier\", \n                        \"required\": true, \n                        \"name\": \"featureId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Comma separated list of property fields to be returned. The following reserved keywords can also be used:\\n* _all: Return all properties (This is the default)\\n* _simple: Return all fields except *keywords* property\", \n                        \"required\": false, \n                        \"name\": \"fields\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ], \n                \"tags\": [\n                    \"Feature\"\n                ], \n                \"description\": \"Returns feature {featureId} metadata\", \n                \"summary\": \"Get feature\", \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"FeaturesAPI::getFeature\"\n            }, \n            \"delete\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"Feature 7e5caa78-5127-53e5-97ff-ddf44984ef56 deleted\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"The feature is delete\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Feature not found\"\n                    }, \n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForbiddenError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Only user with *update* rights can delete a feature\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Missing mandatory feature identifier\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Feature identifier\", \n                        \"required\": true, \n                        \"name\": \"featureId\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"Feature\"\n                ], \n                \"description\": \"Delete feature {featureId}\", \n                \"summary\": \"Delete feature\", \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"FeaturesAPI::deleteFeature\"\n            }\n        }, \n        \"/services/osdd\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OpenSearch Document Description (OSDD)\"\n                    }, \n                    \"404\": {\n                        \"description\": \"Collection not found\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Limit description to collections belonging to *model* - e.g. *model=SatelliteModel* will search in all satellite collections\", \n                        \"required\": false, \n                        \"name\": \"model\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ], \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"description\": \"Returns the OpenSearch Document Description (OSDD) for the search service on all collections\", \n                \"summary\": \"Get OpenSearch Description Document for all collections\", \n                \"operationId\": \"ServicesAPI::getOSDD\"\n            }\n        }, \n        \"/collections\": {\n            \"post\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"Collection S2 created\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"The collection is created\"\n                    }, \n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForbiddenError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Only user with *create* rights can create a collection\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Missing mandatory collection id or collection already exist\"\n                    }\n                }, \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"summary\": \"Create collection\", \n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/InputCollection\"\n                            }\n                        }\n                    }, \n                    \"description\": \"Collection description\"\n                }, \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"CollectionsAPI::createCollection\"\n            }, \n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"collections\": [\n                                        {\n                                            \"description\": \"Landsat represents the world's longest continuously acquired collection of space-based moderate-resolution land remote sensing data. Four decades of imagery provides a unique resource for those who work in agriculture, geology, forestry, regional planning, education, mapping, and global change research. Landsat images are also invaluable for emergency response and disaster relief\", \n                                            \"license\": \"proprietary\", \n                                            \"title\": \"Landsat-8\", \n                                            \"links\": [\n                                                {\n                                                    \"href\": \"http://127.0.0.1:5252/collections.json?\u0026_pretty=1\", \n                                                    \"type\": \"application/json\", \n                                                    \"rel\": \"self\"\n                                                }, \n                                                {\n                                                    \"href\": \"http://127.0.0.1:5252\", \n                                                    \"type\": \"application/json\", \n                                                    \"rel\": \"root\"\n                                                }\n                                            ], \n                                            \"resto:info\": {\n                                                \"lineage\": [\n                                                    \"DefaultModel\", \n                                                    \"LandCoverModel\", \n                                                    \"SatelliteModel\", \n                                                    \"OpticalModel\"\n                                                ], \n                                                \"osDescription\": {\n                                                    \"Attribution\": \"USGS/NASA Landsat\", \n                                                    \"Description\": \"Landsat represents the world's longest continuously acquired collection of space-based moderate-resolution land remote sensing data. Four decades of imagery provides a unique resource for those who work in agriculture, geology, forestry, regional planning, education, mapping, and global change research. Landsat images are also invaluable for emergency response and disaster relief\", \n                                                    \"Tags\": \"landsat level1C USGS\", \n                                                    \"Contact\": \"jrom@snapplanet.io\", \n                                                    \"LongName\": \"Images Landsat-8 niveau 1C\", \n                                                    \"Query\": \"USA 2019\", \n                                                    \"ShortName\": \"Landsat-8\", \n                                                    \"Developer\": \"J\\\\u00e9r\\\\u00f4me Gasperi\"\n                                                }, \n                                                \"model\": \"OpticalModel\", \n                                                \"owner\": \"203883411255198721\"\n                                            }, \n                                            \"stac_version\": \"0.8.0\", \n                                            \"stac_extensions\": [\n                                                \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n                                            ], \n                                            \"extent\": {\n                                                \"temporal\": {\n                                                    \"trs\": \"http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\", \n                                                    \"interval\": [\n                                                        [\n                                                            \"2019-05-19T13:59:47.695508Z\", \n                                                            \"2019-06-06T13:28:04.338517Z\"\n                                                        ]\n                                                    ]\n                                                }, \n                                                \"spatial\": {\n                                                    \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", \n                                                    \"bbox\": [\n                                                        [\n                                                            -180, \n                                                            -77.28054, \n                                                            180, \n                                                            82.77201\n                                                        ]\n                                                    ]\n                                                }\n                                            }, \n                                            \"keywords\": [\n                                                \"landsat\", \n                                                \"level1C\", \n                                                \"USGS\"\n                                            ], \n                                            \"summaries\": {\n                                                \"processingLevel\": [\n                                                    \"LEVEL1C\"\n                                                ], \n                                                \"datetime\": {\n                                                    \"minimum\": \"2019-05-19T13:59:47.695508Z\", \n                                                    \"maximum\": \"2019-06-06T13:28:04.338517Z\"\n                                                }, \n                                                \"sensorType\": [\n                                                    \"OPTICAL\"\n                                                ], \n                                                \"eo:platform\": [\n                                                    \"LANDSAT_8\"\n                                                ], \n                                                \"productType\": [\n                                                    \"L1GT\", \n                                                    \"L1TP\"\n                                                ], \n                                                \"eo:instrument\": [\n                                                    \"OLI_TIRS\", \n                                                    \"TIRS\"\n                                                ]\n                                            }, \n                                            \"id\": \"L8\"\n                                        }\n                                    ], \n                                    \"summaries\": {\n                                        \"resto:stats\": {\n                                            \"count\": 11310, \n                                            \"facets\": {\n                                                \"collection\": {\n                                                    \"L8\": 11307\n                                                }\n                                            }\n                                        }\n                                    }, \n                                    \"extent\": {\n                                        \"temporal\": {\n                                            \"trs\": \"http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\", \n                                            \"interval\": [\n                                                [\n                                                    \"2018-09-13T05:58:08.367000Z\", \n                                                    \"2019-06-11T16:11:41.808000Z\"\n                                                ]\n                                            ]\n                                        }, \n                                        \"spatial\": {\n                                            \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", \n                                            \"bbox\": [\n                                                [\n                                                    -180, \n                                                    -77.28054, \n                                                    180, \n                                                    82.77201\n                                                ]\n                                            ]\n                                        }\n                                    }, \n                                    \"resto:info\": {\n                                        \"osDescription\": {\n                                            \"Attribution\": \"Copyright 2018, All Rights Reserved\", \n                                            \"Description\": \"Search on all collections\", \n                                            \"Tags\": \"resto\", \n                                            \"Contact\": \"jerome.gasperi@gmail.com\", \n                                            \"LongName\": \"resto search service\", \n                                            \"Query\": \"europe 2015\", \n                                            \"ShortName\": \"resto\", \n                                            \"Developer\": \"J\\\\u00e9r\\\\u00f4me Gasperi\"\n                                        }\n                                    }\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"collections\": {\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/OutputCollection\"\n                                            }, \n                                            \"type\": \"array\", \n                                            \"description\": \"List of available collections\"\n                                        }, \n                                        \"summaries\": {\n                                            \"type\": \"object\", \n                                            \"description\": \"Return collections descriptions\"\n                                        }, \n                                        \"extent\": {\n                                            \"type\": \"object\", \n                                            \"$ref\": \"#/components/schemas/Extent\"\n                                        }, \n                                        \"resto:info\": {\n                                            \"type\": \"object\", \n                                            \"description\": \"resto additional information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"List of all collection descriptions\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Set to get individual statistics for all collection\", \n                        \"required\": false, \n                        \"name\": \"_stats\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ], \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"description\": \"Returns a list of all collection descriptions including statistics (i.e. number of products, etc.)\", \n                \"summary\": \"Get collections\", \n                \"operationId\": \"CollectionsAPI::getCollections\"\n            }\n        }, \n        \"/auth\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"profile\": {\n                                        \"picture\": \"https://robohash.org/d0e907f8b6f4ee74cd4c38a515e2a4de?gravatar=hashed\u0026bgset=any\u0026size=400x400\", \n                                        \"followed\": false, \n                                        \"name\": \"jrom\", \n                                        \"firstname\": \"J\\u00e9r\\u00f4me\", \n                                        \"bio\": \"Working on new features for the next major release of SnapPlanet\", \n                                        \"lastname\": \"Gasperi\", \n                                        \"followings\": 144, \n                                        \"topics\": \"earth,fires,geology,glaciology,volcanism\", \n                                        \"followme\": false, \n                                        \"followers\": 185, \n                                        \"groups\": [\n                                            \"1\"\n                                        ], \n                                        \"id\": \"1356771884787565573\", \n                                        \"registrationdate\": \"2016-10-08T22:50:34.187217Z\"\n                                    }, \n                                    \"token\": \"eyJzdWIiOiIxOTQ2NTIwMjk3MjEzNTI3MDUyIiwiaWF0IjoxNTQ2MjY2NTU3LCJleHAiOjE1NDYyNzAxNTd9.nI4q0LBqGOG0a6GCjxWvUiVA6hKndN9mJrjuT1WG1Xo\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"profile\": {\n                                            \"description\": \"User profile\", \n                                            \"$ref\": \"#/components/schemas/UserDisplayProfile\"\n                                        }, \n                                        \"token\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"A rJWT token\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"A fresh authentication token (aka rJWT)\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }\n                }, \n                \"tags\": [\n                    \"Authentication\"\n                ], \n                \"description\": \"Get a fresh authentication token (aka rJWT).\", \n                \"summary\": \"Get an authentication token\", \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"AuthAPI::getToken\"\n            }\n        }, \n        \"/collections/{collectionId}\": {\n            \"put\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"Collection S2 updated\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"The collection is created\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Collection not found\"\n                    }, \n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForbiddenError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Only user with *update* rights can update a collection\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Missing mandatory collection id\"\n                    }\n                }, \n                \"description\": \"Note that *collectionId* and *model* properties cannot be updated\", \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"summary\": \"Update collection\", \n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/InputCollection\"\n                            }\n                        }\n                    }, \n                    \"description\": \"Collection description\"\n                }, \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"CollectionsAPI::updateCollection\"\n            }, \n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OutputCollection\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Collection description\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Collection not found\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }, \n                        \"description\": \"True to return full statistics in summaries property. Default is *false*\", \n                        \"style\": \"form\", \n                        \"name\": \"_stats\", \n                        \"in\": \"query\"\n                    }\n                ], \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"description\": \"Returns collection description including statistics (i.e. number of products, etc.)\", \n                \"summary\": \"Get collection\", \n                \"operationId\": \"CollectionsAPI::getCollection\"\n            }, \n            \"delete\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"Collection S2 deleted\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"The collection is delete\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Collection not found\"\n                    }, \n                    \"403\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForbiddenError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Only user with *update* rights can delete a collection\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Missing mandatory collection id\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Collection identifier\", \n                        \"required\": true, \n                        \"name\": \"collectionId\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"Collection\"\n                ], \n                \"description\": \"For security reason, only empty collection can be deleted\", \n                \"summary\": \"Delete collection\", \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"CollectionsAPI::deleteCollection\"\n            }\n        }, \n        \"/search\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RestoFeatureCollection\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Features collection\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Collection not Found\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Bad request (i.e. invalid parameter)\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Search features within collections belonging to *model* - e.g. *model=SatelliteModel* will search in all satellite collections\", \n                        \"required\": false, \n                        \"name\": \"model\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Search features within collections - comma separated list of collection identifiers\", \n                        \"required\": false, \n                        \"name\": \"collections\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Free text search - OpenSearch {searchTerms}. Can include hashtags i.e. text starting with *#* characters. In this case, use the following:\\n* *#cryosphere* will search for *cryosphere*\\n* *#cryosphere #atmosphere* will search for *cryosphere* AND *atmosphere*\\n* *#cryosphere|atmosphere* will search for *cryosphere* OR *atmosphere*\\n* *#cryosphere!* will search for *cryosphere* OR any *broader* concept of *cryosphere* ([EXTENSION][SKOS])\\n* *#cryosphere\\\\** will search for *cryosphere* OR any *narrower* concept of *cryosphere* ([EXTENSION][SKOS])\\n* *#cryosphere~* will search for *cryosphere* OR any *related* concept of *cryosphere* ([EXTENSION][SKOS])\", \n                        \"required\": false, \n                        \"name\": \"q\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Number of results returned per page - between 1 and 500 (default 20) - OpenSearch {count}\", \n                        \"required\": false, \n                        \"name\": \"limit\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"default\": 20, \n                            \"minimum\": 1, \n                            \"type\": \"integer\", \n                            \"maximum\": 500\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"First result to provide - minimum 1, (default 1) - OpenSearch {startIndex}\", \n                        \"required\": false, \n                        \"name\": \"startIndex\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"default\": 1, \n                            \"minimum\": 1, \n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"First page to provide - minimum 1, (default 1) - OpenSearch {startPage}\", \n                        \"required\": false, \n                        \"name\": \"page\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"default\": 1, \n                            \"minimum\": 1, \n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Two letters language code according to ISO 639-1 (default *en*) - OpenSearch {language}\", \n                        \"required\": false, \n                        \"name\": \"lang\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Array of item ids to return. All other filter parameters that further restrict the number of search results (except next and limit) are ignored\", \n                        \"required\": false, \n                        \"name\": \"ids\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Region of Interest defined in GeoJSON or in Well Known Text standard (WKT) with coordinates in decimal degrees (EPSG:4326) - OpenSearch {geo:geometry}\", \n                        \"required\": false, \n                        \"name\": \"intersects\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Region of Interest defined by 'west, south, east, north' coordinates of longitude, latitude, in decimal degrees (EPSG:4326) - OpenSearch {geo:box}\", \n                        \"required\": false, \n                        \"name\": \"bbox\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"minItems\": 4, \n                            \"items\": {\n                                \"type\": \"number\"\n                            }, \n                            \"type\": \"array\", \n                            \"maxItems\": 6\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[EXTENSION][egg] Location string e.g. Paris, France  or toponym identifier (i.e. geouid:xxxx) - OpenSearch {geo:name}\", \n                        \"required\": false, \n                        \"name\": \"name\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Longitude expressed in decimal degrees (EPSG:4326) - should be used with geo:lat - OpenSearch {geo:lon}\", \n                        \"required\": false, \n                        \"name\": \"lon\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"number\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Latitude expressed in decimal degrees (EPSG:4326) - should be used with geo:lon - OpenSearch {geo:lat}\", \n                        \"required\": false, \n                        \"name\": \"lat\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"number\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Radius expressed in meters - should be used with geo:lon and geo:lat - OpenSearch {geo:radius}\", \n                        \"required\": false, \n                        \"name\": \"radius\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"number\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Single date+time, or a range ('/' separator) of the search query. Format should follow RFC-3339 - OpenSearch {time:start}/{time:end}\", \n                        \"required\": false, \n                        \"name\": \"datetime\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^([0-9]{4})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)([\\\\.,][0-9]+)?(([Zz])|([\\\\+|\\\\-]([01][0-9]|2[0-3]):[0-5][0-9]))$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Beginning of the time slice of the search query. Format should follow RFC-3339 - OpenSearch {time:start}\", \n                        \"required\": false, \n                        \"name\": \"start\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?(|Z|[\\\\+\\\\-][0-9]{2}:[0-9]{2}))?$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"End of the time slice of the search query. Format should follow RFC-3339 - OpenSearch {time:end}\", \n                        \"required\": false, \n                        \"name\": \"end\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?(|Z|[\\\\+\\\\-][0-9]{2}:[0-9]{2}))?$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Returns products with metadata creation date greater or equal than *created* - OpenSearch {dc:date}\", \n                        \"required\": false, \n                        \"name\": \"created\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?(|Z|[\\\\+\\\\-][0-9]{2}:[0-9]{2}))?$\", \n                            \"type\": \"string\", \n                            \"format\": \"date-time\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Returns features with *sort* key value greater than *prev* value - use this for pagination. The value is a unique iterator computed from the *sort* key value and provided within each feature properties as *sort_idx* property\", \n                        \"required\": false, \n                        \"name\": \"prev\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Returns features with *sort* key value lower than *next* value - use this for pagination. The value is a unique iterator computed from the *sort* key value and provided within each feature properties as *sort_idx* property\", \n                        \"required\": false, \n                        \"name\": \"next\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Like on product identifier\", \n                        \"required\": false, \n                        \"name\": \"pid\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Sort results by property *startDate* or *created* (default *startDate*). Sorting order is DESCENDING (ASCENDING if property is prefixed by minus sign)\", \n                        \"required\": false, \n                        \"name\": \"sort\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Limit search to owner's features\", \n                        \"required\": false, \n                        \"name\": \"owner\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[EXTENSION][social] Limit search to number of likes (interval)\", \n                        \"required\": false, \n                        \"name\": \"likes\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[EXTENSION][social] Return only liked features from calling user\", \n                        \"required\": false, \n                        \"name\": \"liked\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Feature status (unusued)\", \n                        \"required\": false, \n                        \"name\": \"status\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the entry type (e.g. ER02_SAR_IM__0P, MER_RR__1P, SM_SLC__1S, GES_DISC_AIRH3STD_V005) - OpenSearch {eo:productType}\", \n                        \"required\": false, \n                        \"name\": \"productType\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the processing level applied to the entry - OpenSearch {eo:processingLevel}\", \n                        \"required\": false, \n                        \"name\": \"processingLevel\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string with the platform short name (e.g. Sentinel-1) - OpenSearch {eo:platform}\", \n                        \"required\": false, \n                        \"name\": \"platform\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the instrument (e.g. MERIS, AATSR, ASAR, HRVIR. SAR) - OpenSearch {eo:instrument}\", \n                        \"required\": false, \n                        \"name\": \"instrument\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][SatelliteModel] A string identifying the sensor type. Suggested values are: OPTICAL, RADAR, ALTIMETRIC, ATMOSPHERIC, LIMB - OpenSearch {eo:sensorType}\", \n                        \"required\": false, \n                        \"name\": \"sensorType\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][OpticalModel] Cloud cover expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"cloudCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][OpticalModel] Snow cover expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"snowCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Water area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"waterCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Urban area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"urbanCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Ice area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"iceCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Herbaceous area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"herbaceousCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Forest area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"forestCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Flooded area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"floodedCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Desert area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"desertCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"[MODEL][LandCoverModel] Cultivated area expressed in percent\", \n                        \"required\": false, \n                        \"name\": \"cultivatedCover\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }, \n                    {\n                        \"style\": \"form\", \n                        \"description\": \"Comma separated list of property fields to be returned. The following reserved keywords can also be used:\\n* _all: Return all properties (This is the default)\\n* _simple: Return all fields except *keywords* property\", \n                        \"required\": false, \n                        \"name\": \"fields\", \n                        \"in\": \"query\", \n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ], \n                \"tags\": [\n                    \"Feature\"\n                ], \n                \"description\": \"List of filters to search features within all collections\", \n                \"summary\": \"STAC search endpoint\", \n                \"operationId\": \"STAC::search\"\n            }\n        }, \n        \"/users/{userid}\": {\n            \"put\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"Update profile for user john.doe@dev.null\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"User profile is updated\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Bad request\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"User's identifier\", \n                        \"required\": true, \n                        \"name\": \"userid\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"User\"\n                ], \n                \"summary\": \"Update user\", \n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"example\": {\n                                \"picture\": \"https://robohash.org/d0e907f8b6f4ee74cd4c38a515e2a4de?gravatar=hashed\u0026bgset=any\u0026size=400x400\", \n                                \"topics\": \"earth,fires\", \n                                \"bio\": \"I just changed my picture, bio information and topics of interest list\"\n                            }, \n                            \"schema\": {\n                                \"type\": \"object\", \n                                \"properties\": {\n                                    \"picture\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"An http(s) url to the user's avatar picture\"\n                                    }, \n                                    \"name\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User display name\"\n                                    }, \n                                    \"firstname\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User firstname\"\n                                    }, \n                                    \"bio\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User biography\"\n                                    }, \n                                    \"lastname\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User lastname\"\n                                    }, \n                                    \"topics\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"Comma separated list of user's topics of interest\"\n                                    }, \n                                    \"password\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User password - don't worry it's encrypted server side\"\n                                    }\n                                }\n                            }\n                        }\n                    }, \n                    \"required\": true, \n                    \"description\": \"User information to update\"\n                }, \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"UsersAPI::updateUserProfile\"\n            }, \n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserDisplayProfile\"\n                                }\n                            }\n                        }, \n                        \"description\": \"User profile\"\n                    }, \n                    \"404\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Resource not found\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"User's identifier\", \n                        \"required\": true, \n                        \"name\": \"userid\", \n                        \"in\": \"path\"\n                    }\n                ], \n                \"tags\": [\n                    \"User\"\n                ], \n                \"summary\": \"Get user\", \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"UsersAPI::getUserProfile\"\n            }\n        }, \n        \"/users\": {\n            \"post\": {\n                \"operationId\": \"UsersAPI::createUser\", \n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"example\": {\n                                \"picture\": \"https://robohash.org/d0e907f8b6f4ee74cd4c38a515e2a4de?gravatar=hashed\u0026bgset=any\u0026size=400x400\", \n                                \"name\": \"jj\", \n                                \"firstname\": \"John\", \n                                \"bio\": \"Just a user\", \n                                \"lastname\": \"Doe\", \n                                \"topics\": \"earth,fires,geology,glaciology,volcanism\", \n                                \"country\": \"FR\", \n                                \"organization\": \"My nice company\", \n                                \"password\": \"MySuperSecretPassword\", \n                                \"email\": \"john.doe@dev.null\"\n                            }, \n                            \"schema\": {\n                                \"required\": [\n                                    \"email\", \n                                    \"password\"\n                                ], \n                                \"type\": \"object\", \n                                \"properties\": {\n                                    \"picture\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"An http(s) url to the user's avatar picture\"\n                                    }, \n                                    \"name\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User display name\"\n                                    }, \n                                    \"firstname\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User firstname\"\n                                    }, \n                                    \"bio\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User biography\"\n                                    }, \n                                    \"lastname\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User lastname\"\n                                    }, \n                                    \"topics\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"Comma separated list of user's topics of interest\"\n                                    }, \n                                    \"flags\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"[Unused] Comma separated list of flags\"\n                                    }, \n                                    \"country\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User country code (ISO 3166-1 alpha2 code)\"\n                                    }, \n                                    \"organization\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"Organization name\"\n                                    }, \n                                    \"password\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User password - don't worry it's encrypted server side\"\n                                    }, \n                                    \"email\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"User email\"\n                                    }\n                                }\n                            }\n                        }\n                    }, \n                    \"required\": true, \n                    \"description\": \"User information to create user account\"\n                }, \n                \"summary\": \"Create user\", \n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"status\": \"success\", \n                                    \"message\": \"User john.doe@dev.null created\"\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"status\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Status is *success*\"\n                                        }, \n                                        \"message\": {\n                                            \"type\": \"string\", \n                                            \"description\": \"Message information\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"User is created but not activated. An activation code is sent to user's email address.\"\n                    }, \n                    \"412\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ConflictError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"User already exist but is not activated\"\n                    }, \n                    \"409\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ConflictError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"User already exist\"\n                    }, \n                    \"400\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/BadRequestError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Bad request\"\n                    }\n                }, \n                \"tags\": [\n                    \"User\"\n                ]\n            }, \n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"example\": {\n                                    \"exactCount\": true, \n                                    \"totalResults\": 2, \n                                    \"profiles\": [\n                                        {\n                                            \"picture\": \"https://robohash.org/d0e907f8b6f4ee74cd4c38a515e2a4de?gravatar=hashed\u0026bgset=any\u0026size=400x400\", \n                                            \"followed\": false, \n                                            \"name\": \"jrom\", \n                                            \"firstname\": \"J\\u00e9r\\u00f4me\", \n                                            \"bio\": \"Working on new features for the next major release of SnapPlanet\", \n                                            \"lastname\": \"Gasperi\", \n                                            \"followings\": 144, \n                                            \"topics\": \"earth,fires,geology,glaciology,volcanism\", \n                                            \"followme\": false, \n                                            \"followers\": 185, \n                                            \"groups\": [\n                                                1\n                                            ], \n                                            \"id\": \"1356771884787565573\", \n                                            \"registrationdate\": \"2016-10-08T22:50:34.187217Z\"\n                                        }, \n                                        {\n                                            \"picture\": \"https://graph.facebook.com/410860042635946/picture?type=large\", \n                                            \"followed\": false, \n                                            \"name\": \"Sergio\", \n                                            \"followings\": 9, \n                                            \"followme\": false, \n                                            \"followers\": 16, \n                                            \"groups\": [\n                                                \"1\"\n                                            ], \n                                            \"id\": \"1381434932013827205\", \n                                            \"registrationdate\": \"2016-10-08T22:50:34.187217Z\"\n                                        }\n                                    ]\n                                }, \n                                \"schema\": {\n                                    \"type\": \"object\", \n                                    \"properties\": {\n                                        \"exactCount\": {\n                                            \"type\": \"boolean\", \n                                            \"description\": \"True if totalResults is an exact count. False if estimated.\"\n                                        }, \n                                        \"totalResults\": {\n                                            \"type\": \"integer\", \n                                            \"description\": \"Total number of user profiles\"\n                                        }, \n                                        \"profiles\": {\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/UserDisplayProfile\"\n                                            }, \n                                            \"type\": \"array\", \n                                            \"description\": \"Return users\"\n                                        }\n                                    }\n                                }\n                            }\n                        }, \n                        \"description\": \"List of users profiles\"\n                    }, \n                    \"401\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                                }\n                            }\n                        }, \n                        \"description\": \"Unauthorized\"\n                    }\n                }, \n                \"parameters\": [\n                    {\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }, \n                        \"description\": \"Return user profiles with identifier lower than *lt* - used for pagination\", \n                        \"style\": \"form\", \n                        \"name\": \"lt\", \n                        \"in\": \"query\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"List of comma separated user identifiers\", \n                        \"style\": \"form\", \n                        \"name\": \"in\", \n                        \"in\": \"query\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Return user profiles belonging to group identified by *groupid* \", \n                        \"style\": \"form\", \n                        \"name\": \"groupid\", \n                        \"in\": \"query\"\n                    }, \n                    {\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }, \n                        \"description\": \"Filter by name, firstname or lastname\", \n                        \"style\": \"form\", \n                        \"name\": \"q\", \n                        \"in\": \"query\"\n                    }\n                ], \n                \"tags\": [\n                    \"User\"\n                ], \n                \"description\": \"Return the list of user's profiles ordered by descending user identifier. A maximum of 50 profiles are returned per page. The *lt* parameter should be used for pagination\", \n                \"summary\": \"Get users\", \n                \"security\": [\n                    {\n                        \"bearerAuth\": [], \n                        \"basicAuth\": [], \n                        \"queryAuth\": []\n                    }\n                ], \n                \"operationId\": \"UsersAPI::getUsersProfiles\"\n            }\n        }\n    }, \n    \"tags\": [\n        {\n            \"name\": \"Collection\", \n            \"description\": \"A collection is a set of features. This set is usually homogeneous (e.g. *Sentinel-2 images*) but not necessary. A collection is defined by a *model* physically described within a dedicated class under $SRC/include/resto/Models. The purpose of the model class is to convert the input collection feature format (i.e. whatever) to the resto generic format (i.e. GeoJSON) described within the RestoModel class.\"\n        }, \n        {\n            \"name\": \"Feature\", \n            \"description\": \"A feature is an application object that represents a physical entity e.g. a building, a river, a person, a coverage taken by a a satellite. Practically, a resto feature is defined by a set of metadata including a geographical location (i.e. a (Multi)Point, a (Multi)LineString or a (Multi)Polygon). A feature always belongs to one and only one collection.\"\n        }, \n        {\n            \"name\": \"User\", \n            \"description\": \"Everything about user - profile, access rights, history, etc.\"\n        }\n    ], \n    \"servers\": [\n        {\n            \"url\": \"http://127.0.0.1:5252\", \n            \"description\": \"resto localhost server\"\n        }\n    ], \n    \"components\": {\n        \"securitySchemes\": {\n            \"bearerAuth\": {\n                \"scheme\": \"bearer\", \n                \"type\": \"http\", \n                \"description\": \"Access token in HTTP header as JWT or rJWT (_resto JWT_) - this is the default\", \n                \"bearerFormat\": \"JWT\"\n            }, \n            \"basicAuth\": {\n                \"scheme\": \"basic\", \n                \"type\": \"http\", \n                \"description\": \"Basic authentication in HTTP header - should be used first to get a valid rJWT token\"\n            }, \n            \"queryAuth\": {\n                \"in\": \"query\", \n                \"type\": \"apiKey\", \n                \"description\": \"Access token in query as preseance over token in HTTP header\", \n                \"name\": \"_bearer\"\n            }\n        }, \n        \"schemas\": {\n            \"InputFeatureCollection\": {\n                \"example\": {\n                    \"type\": \"FeatureCollection\", \n                    \"features\": [\n                        {\n                            \"assets\": {\n                                \"tileInfo\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/tileInfo.json\", \n                                    \"type\": \"application/json\"\n                                }, \n                                \"productInfo\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/productInfo.json\", \n                                    \"type\": \"application/json\"\n                                }, \n                                \"thumbnail\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/preview.jpg\", \n                                    \"type\": \"image/jpeg\"\n                                }, \n                                \"metadata\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/metadata.xml\", \n                                    \"type\": \"text/xml\"\n                                }\n                            }, \n                            \"links\": [\n                                {\n                                    \"href\": \"http://127.0.0.1:5252/collections/S2/items/8030a391-4002-556f-929b-d7ff9dad6705?\u0026lang=en\", \n                                    \"type\": \"application/json\", \n                                    \"rel\": \"self\"\n                                }, \n                                {\n                                    \"href\": \"http://127.0.0.1:5252/collections/S2?\u0026lang=en\", \n                                    \"type\": \"application/json\", \n                                    \"rel\": \"collection\", \n                                    \"title\": \"S2\"\n                                }\n                            ], \n                            \"geometry\": {\n                                \"type\": \"Polygon\", \n                                \"coordinates\": [\n                                    [\n                                        [\n                                            -48.619853, \n                                            75.657209\n                                        ], \n                                        [\n                                            -44.646424, \n                                            75.684397\n                                        ], \n                                        [\n                                            -44.660672, \n                                            75.069386\n                                        ], \n                                        [\n                                            -44.698432, \n                                            75.060518\n                                        ], \n                                        [\n                                            -45.489771, \n                                            74.830977\n                                        ], \n                                        [\n                                            -45.857954, \n                                            74.720238\n                                        ], \n                                        [\n                                            -45.921685, \n                                            74.698702\n                                        ], \n                                        [\n                                            -48.392706, \n                                            74.674979\n                                        ], \n                                        [\n                                            -48.619853, \n                                            75.657209\n                                        ]\n                                    ]\n                                ]\n                            }, \n                            \"collection\": \"S2\", \n                            \"properties\": {\n                                \"startDate\": \"2019-06-11T16:11:41.808000Z\", \n                                \"productIdentifier\": \"S2A_MSIL1C_20190611T160901_N0207_R140_T23XMD_20190611T193040\", \n                                \"datetime\": \"2019-06-11T16:11:41Z\"\n                            }, \n                            \"stac_version\": \"0.8.0\", \n                            \"stac_extensions\": [\n                                \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n                            ], \n                            \"type\": \"Feature\", \n                            \"id\": \"8030a391-4002-556f-929b-d7ff9dad6705\", \n                            \"bbox\": [\n                                -48.6198530870596, \n                                74.6749788966259, \n                                -44.6464244356188, \n                                75.6843970710939\n                            ]\n                        }\n                    ]\n                }, \n                \"required\": [\n                    \"type\", \n                    \"features\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Feature collection\", \n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"FeatureCollection\"\n                        ], \n                        \"type\": \"string\", \n                        \"description\": \"Always set to *FeatureCollection*\"\n                    }, \n                    \"features\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/InputFeature\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"Array of features\"\n                    }\n                }\n            }, \n            \"ForbiddenError\": {\n                \"required\": [\n                    \"ErrorCode\", \n                    \"ErrorMessage\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"ErrorCode\": {\n                        \"type\": \"integer\", \n                        \"description\": \"HTTP status code\"\n                    }, \n                    \"ErrorMessage\": {\n                        \"type\": \"string\", \n                        \"description\": \"Error message\"\n                    }\n                }, \n                \"example\": {\n                    \"ErrorCode\": 403, \n                    \"ErrorMessage\": \"Forbidden\"\n                }\n            }, \n            \"OutputCollection\": {\n                \"required\": [\n                    \"id\", \n                    \"type\", \n                    \"title\", \n                    \"description\", \n                    \"license\", \n                    \"extent\", \n                    \"links\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\", \n                        \"description\": \"Detailed multi-line description to fully explain the collection. CommonMark 0.28 syntax MAY be used for rich text representation.\"\n                    }, \n                    \"license\": {\n                        \"enum\": [\n                            \"proprietary\", \n                            \"various\", \n                            \"\u003clicense id\u003e\"\n                        ], \n                        \"type\": \"string\", \n                        \"description\": \"License for this collection as a SPDX License identifier or expression. Alternatively, use proprietary if the license is not on the SPDX license list or various if multiple licenses apply. In these two cases links to the license texts SHOULD be added, see the license link relation type.\"\n                    }, \n                    \"title\": {\n                        \"type\": \"string\", \n                        \"description\": \"A short descriptive one-line title for the collection.\"\n                    }, \n                    \"summaries\": {\n                        \"type\": \"object\", \n                        \"description\": \"resto collection\"\n                    }, \n                    \"providers\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Provider\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"A list of providers, which may include all organizations capturing or processing the data or the hosting provider. Providers should be listed in chronological order with the most recent provider being the last element of the list\"\n                    }, \n                    \"links\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Link\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"resto collection\"\n                    }, \n                    \"resto:info\": {\n                        \"type\": \"object\", \n                        \"description\": \"resto additional information\"\n                    }, \n                    \"stac_version\": {\n                        \"type\": \"string\", \n                        \"description\": \"[EXTENSION][STAC] The STAC version the Collection implements\"\n                    }, \n                    \"stac_extensions\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"[EXTENSION][STAC] A list of extensions the Collection implements.\"\n                    }, \n                    \"extent\": {\n                        \"type\": \"object\", \n                        \"$ref\": \"#/components/schemas/Extent\"\n                    }, \n                    \"keywords\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"List of keywords describing the collection.\"\n                    }, \n                    \"type\": {\n                        \"enum\": [\n                            \"Collection\"\n                        ], \n                        \"type\": \"string\", \n                        \"description\": \"[EXTENSION][STAC] Always set to *Collection*\"\n                    }, \n                    \"id\": {\n                        \"type\": \"string\", \n                        \"description\": \"Collection identifier. It must be an unique alphanumeric string containing only [a-zA-Z0-9\\\\-_].\"\n                    }\n                }, \n                \"example\": {\n                    \"description\": \"The SENTINEL-2 mission is a land monitoring constellation of two satellites each equipped with a MSI (Multispectral Imager) instrument covering 13 spectral bands providing high resolution optical imagery (i.e., 10m, 20m, 60 m) every 10 days with one satellite and 5 days with two satellites\", \n                    \"license\": \"proprietary\", \n                    \"title\": \"Sentinel-2\", \n                    \"providers\": [\n                        {\n                            \"url\": \"https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi\", \n                            \"name\": \"European Union/ESA/Copernicus\", \n                            \"roles\": [\n                                \"producer\", \n                                \"licensor\"\n                            ]\n                        }\n                    ], \n                    \"links\": [\n                        {\n                            \"href\": \"http://127.0.0.1:5252/collections/S2.json?\u0026_pretty=1\", \n                            \"type\": \"application/json\", \n                            \"rel\": \"self\"\n                        }, \n                        {\n                            \"href\": \"http://127.0.0.1:5252\", \n                            \"type\": \"application/json\", \n                            \"rel\": \"root\"\n                        }, \n                        {\n                            \"href\": \"https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf\", \n                            \"rel\": \"license\", \n                            \"title\": \"Legal notice on the use of Copernicus Sentinel Data and Service Information\"\n                        }\n                    ], \n                    \"resto:info\": {\n                        \"lineage\": [\n                            \"DefaultModel\", \n                            \"LandCoverModel\", \n                            \"SatelliteModel\", \n                            \"OpticalModel\"\n                        ], \n                        \"osDescription\": {\n                            \"Attribution\": \"European Union/ESA/Copernicus\", \n                            \"Description\": \"The SENTINEL-2 mission is a land monitoring constellation of two satellites each equipped with a MSI (Multispectral Imager) instrument covering 13 spectral bands providing high resolution optical imagery (i.e., 10m, 20m, 60 m) every 10 days with one satellite and 5 days with two satellites\", \n                            \"Tags\": \"copernicus esa eu msi radiance sentinel sentinel2\", \n                            \"Contact\": \"jrom@snapplanet.io\", \n                            \"LongName\": \"Level 1C Sentinel-2 images\", \n                            \"Query\": \"Toulouse\", \n                            \"ShortName\": \"Sentinel-2\", \n                            \"Developer\": \"J\\\\u00e9r\\\\u00f4me Gasperi\"\n                        }, \n                        \"model\": \"OpticalModel\", \n                        \"owner\": \"203883411255198721\"\n                    }, \n                    \"stac_version\": \"0.8.0\", \n                    \"stac_extensions\": [\n                        \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n                    ], \n                    \"extent\": {\n                        \"temporal\": {\n                            \"trs\": \"http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\", \n                            \"interval\": [\n                                [\n                                    \"2019-06-11T16:11:41.808000Z\", \n                                    \"2019-06-11T16:11:41.808000Z\"\n                                ]\n                            ]\n                        }, \n                        \"spatial\": {\n                            \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", \n                            \"bbox\": [\n                                [\n                                    -48.6198530870596, \n                                    74.6749788966259, \n                                    -44.6464244356188, \n                                    75.6843970710939\n                                ]\n                            ]\n                        }\n                    }, \n                    \"keywords\": [\n                        \"copernicus\", \n                        \"esa\", \n                        \"eu\", \n                        \"msi\", \n                        \"radiance\", \n                        \"sentinel\", \n                        \"sentinel2\"\n                    ], \n                    \"summaries\": {\n                        \"eo:bands\": [\n                            {\n                                \"common_name\": \"coastal\", \n                                \"center_wavelength\": 4.439, \n                                \"name\": \"B1\", \n                                \"gsd\": 60\n                            }, \n                            {\n                                \"common_name\": \"blue\", \n                                \"center_wavelength\": 4.966, \n                                \"name\": \"B2\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"common_name\": \"green\", \n                                \"center_wavelength\": 5.6, \n                                \"name\": \"B3\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"common_name\": \"red\", \n                                \"center_wavelength\": 6.645, \n                                \"name\": \"B4\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"center_wavelength\": 7.039, \n                                \"name\": \"B5\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"center_wavelength\": 7.402, \n                                \"name\": \"B6\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"center_wavelength\": 7.825, \n                                \"name\": \"B7\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"common_name\": \"nir\", \n                                \"center_wavelength\": 8.351, \n                                \"name\": \"B8\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"center_wavelength\": 8.648, \n                                \"name\": \"B8A\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"center_wavelength\": 9.45, \n                                \"name\": \"B9\", \n                                \"gsd\": 60\n                            }, \n                            {\n                                \"center_wavelength\": 1.3735, \n                                \"name\": \"B10\", \n                                \"gsd\": 60\n                            }, \n                            {\n                                \"common_name\": \"swir16\", \n                                \"center_wavelength\": 1.6137, \n                                \"name\": \"B11\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"common_name\": \"swir22\", \n                                \"center_wavelength\": 2.2024, \n                                \"name\": \"B12\", \n                                \"gsd\": 20\n                            }\n                        ], \n                        \"datetime\": {\n                            \"minimum\": \"2019-06-11T16:11:41.808000Z\", \n                            \"maximum\": \"2019-06-11T16:11:41.808000Z\"\n                        }, \n                        \"eo:platform\": [\n                            \"S2A\"\n                        ], \n                        \"processingLevel\": [\n                            \"LEVEL1C\"\n                        ], \n                        \"productType\": [\n                            \"REFLECTANCE\"\n                        ], \n                        \"eo:instrument\": [\n                            \"MSI\"\n                        ]\n                    }, \n                    \"id\": \"S2\"\n                }\n            }, \n            \"UserDisplayProfile\": {\n                \"required\": [\n                    \"id\", \n                    \"picture\", \n                    \"groups\", \n                    \"name\", \n                    \"followers\", \n                    \"followings\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"picture\": {\n                        \"type\": \"string\", \n                        \"description\": \"An http(s) url to the user's avatar picture\"\n                    }, \n                    \"followed\": {\n                        \"type\": \"boolean\", \n                        \"description\": \"True if user is followed by requesting user\"\n                    }, \n                    \"name\": {\n                        \"type\": \"string\", \n                        \"description\": \"User display name\"\n                    }, \n                    \"firstname\": {\n                        \"type\": \"string\", \n                        \"description\": \"User firstname\"\n                    }, \n                    \"bio\": {\n                        \"type\": \"string\", \n                        \"description\": \"User biography\"\n                    }, \n                    \"lastname\": {\n                        \"type\": \"string\", \n                        \"description\": \"User lastname\"\n                    }, \n                    \"followings\": {\n                        \"type\": \"integer\", \n                        \"description\": \"Number of user's followings\"\n                    }, \n                    \"topics\": {\n                        \"type\": \"string\", \n                        \"description\": \"Comma separated list of user's topics of interest\"\n                    }, \n                    \"followme\": {\n                        \"type\": \"string\", \n                        \"description\": \"True if user follows requesting user\"\n                    }, \n                    \"followers\": {\n                        \"type\": \"integer\", \n                        \"description\": \"Number of user's followers\"\n                    }, \n                    \"groups\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"Array of group identifiers\"\n                    }, \n                    \"id\": {\n                        \"type\": \"string\", \n                        \"description\": \"Unique user identifier. Identifier is related to user's registration date i.e. the greatest the identifier value, the most recently registered the user is\"\n                    }, \n                    \"registrationdate\": {\n                        \"type\": \"string\", \n                        \"description\": \"User registration date\"\n                    }\n                }, \n                \"example\": {\n                    \"picture\": \"https://robohash.org/d0e907f8b6f4ee74cd4c38a515e2a4de?gravatar=hashed\u0026bgset=any\u0026size=400x400\", \n                    \"followed\": false, \n                    \"name\": \"jrom\", \n                    \"firstname\": \"J\\u00e9r\\u00f4me\", \n                    \"bio\": \"Working on new features for the next major release of SnapPlanet\", \n                    \"lastname\": \"Gasperi\", \n                    \"followings\": 144, \n                    \"topics\": \"earth,fires,geology,glaciology,volcanism\", \n                    \"followme\": false, \n                    \"followers\": 185, \n                    \"groups\": [\n                        \"1\"\n                    ], \n                    \"id\": \"1356771884787565573\", \n                    \"registrationdate\": \"2016-10-08T22:50:34.187217Z\"\n                }\n            }, \n            \"BadRequestError\": {\n                \"required\": [\n                    \"ErrorCode\", \n                    \"ErrorMessage\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"ErrorCode\": {\n                        \"type\": \"integer\", \n                        \"description\": \"HTTP status code\"\n                    }, \n                    \"ErrorMessage\": {\n                        \"type\": \"string\", \n                        \"description\": \"Error message\"\n                    }\n                }, \n                \"example\": {\n                    \"ErrorCode\": 400, \n                    \"ErrorMessage\": \"Bad request\"\n                }\n            }, \n            \"InputCollection\": {\n                \"required\": [\n                    \"id\", \n                    \"model\", \n                    \"osDescription\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"version\": {\n                        \"type\": \"string\", \n                        \"description\": \"Version of the collection.\"\n                    }, \n                    \"links\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Link\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"resto collection\"\n                    }, \n                    \"rights\": {\n                        \"type\": \"object\", \n                        \"description\": \"Default collection rights settings\", \n                        \"properties\": {\n                            \"download\": {\n                                \"enum\": [\n                                    0, \n                                    1\n                                ], \n                                \"type\": \"integer\", \n                                \"description\": \"Feature download rights (1 can be downloaded; 0 cannot be downloaded)\"\n                            }, \n                            \"visualize\": {\n                                \"type\": \"integer\", \n                                \"description\": \"Features visualization rights (1 can be visualized; 0 cannot be visualized)\"\n                            }\n                        }\n                    }, \n                    \"providers\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Provider\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"A list of providers, which may include all organizations capturing or processing the data or the hosting provider. Providers should be listed in chronological order with the most recent provider being the last element of the list\"\n                    }, \n                    \"visibility\": {\n                        \"description\": \"Visibility of this collection. Collections with visibility 1 are visible to all users.\"\n                    }, \n                    \"summaries\": {\n                        \"type\": \"object\", \n                        \"description\": \"resto collection\"\n                    }, \n                    \"licenseId\": {\n                        \"type\": \"string\", \n                        \"description\": \"License for this collection as a SPDX License identifier. Alternatively, use proprietary if the license is not on the SPDX license list or various if multiple licenses apply. In these two cases links to the license texts SHOULD be added, see the license link relation type.\"\n                    }, \n                    \"keywords\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"List of keywords describing the collection.\"\n                    }, \n                    \"osDescription\": {\n                        \"required\": [\n                            \"en\"\n                        ], \n                        \"type\": \"object\", \n                        \"description\": \"resto collection\", \n                        \"properties\": {\n                            \"fr\": {\n                                \"description\": \"OpenSearch description in French\", \n                                \"$ref\": \"#/components/schemas/OpenSearchDescription\"\n                            }, \n                            \"en\": {\n                                \"description\": \"OpenSearch description in English\", \n                                \"$ref\": \"#/components/schemas/OpenSearchDescription\"\n                            }\n                        }\n                    }, \n                    \"model\": {\n                        \"type\": \"string\", \n                        \"description\": \"[For developper] Name of the collection model class under $SRC/include/resto/Models.\"\n                    }, \n                    \"id\": {\n                        \"type\": \"string\", \n                        \"description\": \"Collection identifier. It must be an unique alphanumeric string containing only [a-zA-Z0-9\\\\-_].\"\n                    }, \n                    \"assets\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Asset\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"resto collection\"\n                    }\n                }, \n                \"example\": {\n                    \"version\": \"1.0\", \n                    \"links\": [\n                        {\n                            \"href\": \"https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf\", \n                            \"rel\": \"license\", \n                            \"title\": \"Legal notice on the use of Copernicus Sentinel Data and Service Information\"\n                        }\n                    ], \n                    \"rights\": {\n                        \"download\": 1, \n                        \"visualize\": 1\n                    }, \n                    \"providers\": [\n                        {\n                            \"url\": \"https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi\", \n                            \"name\": \"European Union/ESA/Copernicus\", \n                            \"roles\": [\n                                \"producer\", \n                                \"licensor\"\n                            ]\n                        }\n                    ], \n                    \"visibility\": 1, \n                    \"summaries\": {\n                        \"eo:bands\": [\n                            {\n                                \"common_name\": \"coastal\", \n                                \"center_wavelength\": 4.439, \n                                \"name\": \"B1\", \n                                \"gsd\": 60\n                            }, \n                            {\n                                \"common_name\": \"blue\", \n                                \"center_wavelength\": 4.966, \n                                \"name\": \"B2\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"common_name\": \"green\", \n                                \"center_wavelength\": 5.6, \n                                \"name\": \"B3\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"common_name\": \"red\", \n                                \"center_wavelength\": 6.645, \n                                \"name\": \"B4\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"center_wavelength\": 7.039, \n                                \"name\": \"B5\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"center_wavelength\": 7.402, \n                                \"name\": \"B6\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"center_wavelength\": 7.825, \n                                \"name\": \"B7\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"common_name\": \"nir\", \n                                \"center_wavelength\": 8.351, \n                                \"name\": \"B8\", \n                                \"gsd\": 10\n                            }, \n                            {\n                                \"center_wavelength\": 8.648, \n                                \"name\": \"B8A\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"center_wavelength\": 9.45, \n                                \"name\": \"B9\", \n                                \"gsd\": 60\n                            }, \n                            {\n                                \"center_wavelength\": 1.3735, \n                                \"name\": \"B10\", \n                                \"gsd\": 60\n                            }, \n                            {\n                                \"common_name\": \"swir16\", \n                                \"center_wavelength\": 1.6137, \n                                \"name\": \"B11\", \n                                \"gsd\": 20\n                            }, \n                            {\n                                \"common_name\": \"swir22\", \n                                \"center_wavelength\": 2.2024, \n                                \"name\": \"B12\", \n                                \"gsd\": 20\n                            }\n                        ]\n                    }, \n                    \"licenseId\": \"proprietary\", \n                    \"osDescription\": {\n                        \"fr\": {\n                            \"Attribution\": \"European Union/ESA/Copernicus\", \n                            \"Description\": \"La mission SENTINEL-2 est constitu\\u00e9e de deux satellites d'imagerie optique \\u00e9quip\\u00e9s d\\u2019un imageur multispectral (MSI) en 13 bandes spectrales avec des r\\u00e9solutions de 10, 20 et 60 m\\u00e8tres et d'une fauch\\u00e9e unique de 290 km de large. La capacit\\u00e9 d'observation des deux satellites permet de surveiller l'int\\u00e9gralit\\u00e9 des terres \\u00e9merg\\u00e9es du globe tous les 5 jours\", \n                            \"Tags\": \"copernicus esa eu msi radiance sentinel sentinel2\", \n                            \"Contact\": \"jrom@snapplanet.io\", \n                            \"LongName\": \"Images Sentinel-2 Niveau 1C\", \n                            \"Query\": \"Toulouse\", \n                            \"ShortName\": \"Sentinel-2\", \n                            \"Developer\": \"J\\u00e9r\\u00f4me Gasperi\"\n                        }, \n                        \"en\": {\n                            \"Attribution\": \"European Union/ESA/Copernicus\", \n                            \"Description\": \"The SENTINEL-2 mission is a land monitoring constellation of two satellites each equipped with a MSI (Multispectral Imager) instrument covering 13 spectral bands providing high resolution optical imagery (i.e., 10m, 20m, 60 m) every 10 days with one satellite and 5 days with two satellites\", \n                            \"Tags\": \"copernicus esa eu msi radiance sentinel sentinel2\", \n                            \"Contact\": \"jrom@snapplanet.io\", \n                            \"LongName\": \"Level 1C Sentinel-2 images\", \n                            \"Query\": \"Toulouse\", \n                            \"ShortName\": \"Sentinel-2\", \n                            \"Developer\": \"J\\u00e9r\\u00f4me Gasperi\"\n                        }\n                    }, \n                    \"model\": \"OpticalModel\", \n                    \"id\": \"S2\"\n                }\n            }, \n            \"NotFoundError\": {\n                \"required\": [\n                    \"ErrorCode\", \n                    \"ErrorMessage\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"ErrorCode\": {\n                        \"type\": \"integer\", \n                        \"description\": \"HTTP status code\"\n                    }, \n                    \"ErrorMessage\": {\n                        \"type\": \"string\", \n                        \"description\": \"Error message\"\n                    }\n                }, \n                \"example\": {\n                    \"ErrorCode\": 404, \n                    \"ErrorMessage\": \"Not Found\"\n                }\n            }, \n            \"OpenSearchDescription\": {\n                \"example\": {\n                    \"Attribution\": \"SnapPlanet - Copyright 2016, All Rights Reserved\", \n                    \"Description\": \"Sentinel-2 tiles\", \n                    \"Tags\": \"s2 sentinel2\", \n                    \"Contact\": \"jrom@snapplanet.io\", \n                    \"LongName\": \"Sentinel-2\", \n                    \"Query\": \"Toulouse\", \n                    \"ShortName\": \"S2\", \n                    \"Developer\": \"J\\u00e9r\\u00f4me Gasperi\"\n                }, \n                \"required\": [\n                    \"ShortName\", \n                    \"Description\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"OpenSearch description of the search engine attached to the collection\", \n                \"properties\": {\n                    \"Attribution\": {\n                        \"type\": \"string\", \n                        \"description\": \"Contains a list of all sources or entities that should be credited for the content contained in the search feed\"\n                    }, \n                    \"Description\": {\n                        \"type\": \"string\", \n                        \"description\": \"Contains a human-readable text description of the collection search engine\"\n                    }, \n                    \"Tags\": {\n                        \"type\": \"string\", \n                        \"description\": \"Contains a set of words that are used as keywords to identify and categorize this search content. Tags must be a single word and are delimited by the space character\"\n                    }, \n                    \"Contact\": {\n                        \"type\": \"string\", \n                        \"description\": \"Contains an email address at which the maintainer of the description document can be reached\"\n                    }, \n                    \"LongName\": {\n                        \"type\": \"string\", \n                        \"description\": \"Contains an extended human-readable title that identifies this search engine\"\n                    }, \n                    \"Query\": {\n                        \"type\": \"string\", \n                        \"description\": \"Defines a search query that can be performed by search clients. Please see the OpenSearch Query element specification for more information\"\n                    }, \n                    \"ShortName\": {\n                        \"type\": \"string\", \n                        \"description\": \"Contains a brief human-readable title that identifies the search engine\"\n                    }, \n                    \"Developer\": {\n                        \"type\": \"string\", \n                        \"description\": \"Contains the human-readable name or identifier of the creator or maintainer of the description document\"\n                    }\n                }\n            }, \n            \"ConflictError\": {\n                \"required\": [\n                    \"ErrorCode\", \n                    \"ErrorMessage\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"ErrorCode\": {\n                        \"type\": \"integer\", \n                        \"description\": \"HTTP status code\"\n                    }, \n                    \"ErrorMessage\": {\n                        \"type\": \"string\", \n                        \"description\": \"Error message\"\n                    }\n                }, \n                \"example\": {\n                    \"ErrorCode\": 409, \n                    \"ErrorMessage\": \"Conflict\"\n                }\n            }, \n            \"Statistics\": {\n                \"example\": {\n                    \"count\": 5322724, \n                    \"facets\": {\n                        \"instrument\": {\n                            \"MSI\": 5322722, \n                            \"HRS\": 2\n                        }, \n                        \"productType\": {\n                            \"REFLECTANCE\": 5322722, \n                            \"PX\": 2\n                        }, \n                        \"continent\": {\n                            \"Europe\": 1992756, \n                            \"Oceania\": 218789, \n                            \"Seven seas (open ocean)\": 9481, \n                            \"Africa\": 671538, \n                            \"South America\": 313983, \n                            \"Asia\": 747847, \n                            \"North America\": 1012027, \n                            \"Antarctica\": 106337\n                        }, \n                        \"processingLevel\": {\n                            \"LEVEL1C\": 5322722\n                        }, \n                        \"platform\": {\n                            \"S2B\": 1976403, \n                            \"SPOT6\": 1, \n                            \"S2A\": 3346319\n                        }\n                    }\n                }, \n                \"required\": [\n                    \"count\", \n                    \"facets\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Collection facets statistics\", \n                \"properties\": {\n                    \"count\": {\n                        \"type\": \"integer\", \n                        \"description\": \"Total number of features in the collection\"\n                    }, \n                    \"facets\": {\n                        \"description\": \"Statistics per facets\"\n                    }\n                }\n            }, \n            \"Link\": {\n                \"example\": {\n                    \"href\": \"http://127.0.0.1:5252/collections/S2.json?\u0026_pretty=1\", \n                    \"type\": \"application/json\", \n                    \"rel\": \"self\"\n                }, \n                \"required\": [\n                    \"rel\", \n                    \"href\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Link\", \n                \"properties\": {\n                    \"href\": {\n                        \"type\": \"string\", \n                        \"description\": \"Url to the resource\"\n                    }, \n                    \"type\": {\n                        \"type\": \"string\", \n                        \"description\": \"Mimetype of the resource\"\n                    }, \n                    \"rel\": {\n                        \"type\": \"string\", \n                        \"description\": \"Relationship between the feature and the linked document/resource\"\n                    }, \n                    \"title\": {\n                        \"type\": \"string\", \n                        \"description\": \"Title of the resource\"\n                    }\n                }\n            }, \n            \"Asset\": {\n                \"example\": {\n                    \"href\": \"https://landsat-pds.s3.amazonaws.com/c1/L8/171/002/LC08_L1TP_171002_20200616_20200616_01_RT/LC08_L1TP_171002_20200616_20200616_01_RT_B1.TIF\", \n                    \"type\": \"image/tiff; application=geotiff; profile=cloud-optimized\", \n                    \"eo:bands\": [\n                        0\n                    ], \n                    \"roles\": [\n                        \"data\"\n                    ]\n                }, \n                \"required\": [\n                    \"rel\", \n                    \"href\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Asset links\", \n                \"properties\": {\n                    \"href\": {\n                        \"type\": \"string\", \n                        \"description\": \"Url to the resource\"\n                    }, \n                    \"type\": {\n                        \"type\": \"string\", \n                        \"description\": \"Mimetype of the resource\"\n                    }, \n                    \"roles\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"Asset roles\"\n                    }, \n                    \"rel\": {\n                        \"type\": \"string\", \n                        \"description\": \"Relationship between the feature and the linked document/resource\"\n                    }, \n                    \"title\": {\n                        \"type\": \"string\", \n                        \"description\": \"Title of the resource\"\n                    }\n                }\n            }, \n            \"Extent\": {\n                \"example\": {\n                    \"temporal\": {\n                        \"trs\": \"http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\", \n                        \"interval\": [\n                            [\n                                \"2019-06-11T16:11:41.808000Z\", \n                                \"2019-06-11T16:11:41.808000Z\"\n                            ]\n                        ]\n                    }, \n                    \"spatial\": {\n                        \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\", \n                        \"bbox\": [\n                            [\n                                -48.6198530870596, \n                                74.6749788966259, \n                                -44.6464244356188, \n                                75.6843970710939\n                            ]\n                        ]\n                    }\n                }, \n                \"required\": [\n                    \"spatial\", \n                    \"temporal\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Spatio-temporal extents of the Collection\", \n                \"properties\": {\n                    \"temporal\": {\n                        \"type\": \"object\", \n                        \"description\": \"The temporal extents of the Collection\"\n                    }, \n                    \"spatial\": {\n                        \"type\": \"object\", \n                        \"description\": \"The spatial extents of the Collection\"\n                    }\n                }\n            }, \n            \"Provider\": {\n                \"example\": [\n                    {\n                        \"url\": \"https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi\", \n                        \"name\": \"European Union/ESA/Copernicus\", \n                        \"roles\": [\n                            \"producer\", \n                            \"licensor\"\n                        ]\n                    }\n                ], \n                \"required\": [\n                    \"name\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"A provider is any of the organizations that captured or processed the content of the collection and therefore influenced the data offered by this collection\", \n                \"properties\": {\n                    \"url\": {\n                        \"type\": \"string\", \n                        \"description\": \"Homepage on which the provider describes the dataset and publishes contact information.\"\n                    }, \n                    \"name\": {\n                        \"type\": \"string\", \n                        \"description\": \"The name of the organization or the individual\"\n                    }, \n                    \"roles\": {\n                        \"items\": {\n                            \"enum\": [\n                                \"licensor\", \n                                \"producer\", \n                                \"processor\", \n                                \"host\"\n                            ], \n                            \"type\": \"string\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"Roles of the provider.\"\n                    }, \n                    \"description\": {\n                        \"type\": \"string\", \n                        \"description\": \"Multi-line description to add further provider information such as processing details for processors and producers, hosting details for hosts or basic contact information. CommonMark 0.28 syntax MAY be used for rich text representation\"\n                    }\n                }\n            }, \n            \"UnauthorizedError\": {\n                \"required\": [\n                    \"ErrorCode\", \n                    \"ErrorMessage\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"ErrorCode\": {\n                        \"type\": \"integer\", \n                        \"description\": \"HTTP status code\"\n                    }, \n                    \"ErrorMessage\": {\n                        \"type\": \"string\", \n                        \"description\": \"Error message\"\n                    }\n                }, \n                \"example\": {\n                    \"ErrorCode\": 401, \n                    \"ErrorMessage\": \"Unauthorized\"\n                }\n            }, \n            \"OutputFeature\": {\n                \"example\": {\n                    \"assets\": {\n                        \"thumbnail\": {\n                            \"role\": \"thumbnail\", \n                            \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/28/H/CE/2020/6/21/0/preview.jpg\", \n                            \"type\": \"image/jpeg\"\n                        }\n                    }, \n                    \"links\": [\n                        {\n                            \"href\": \"https://tamn.snapplanet.io/collections/S2/items/af9f811b-f6b7-5dfc-ac43-c1d200a79088\", \n                            \"type\": \"application/geo+json\", \n                            \"rel\": \"self\"\n                        }\n                    ], \n                    \"geometry\": {\n                        \"type\": \"Polygon\", \n                        \"coordinates\": [\n                            [\n                                [\n                                    -16.34433, \n                                    -36.136821\n                                ], \n                                [\n                                    -16.002576, \n                                    -36.14017\n                                ], \n                                [\n                                    -16.003437, \n                                    -36.207726\n                                ], \n                                [\n                                    -16.003437, \n                                    -36.207726\n                                ], \n                                [\n                                    -16.073904, \n                                    -36.193064\n                                ], \n                                [\n                                    -16.079613, \n                                    -36.194838\n                                ], \n                                [\n                                    -16.343729, \n                                    -36.140707\n                                ], \n                                [\n                                    -16.343453, \n                                    -36.137129\n                                ], \n                                [\n                                    -16.34433, \n                                    -36.136821\n                                ]\n                            ]\n                        ]\n                    }, \n                    \"collection\": \"S2\", \n                    \"properties\": {\n                        \"start_datetime\": \"2020-06-21T11:11:28.371000Z\", \n                        \"updated\": \"2018-09-13T12:52:25.971969Z\", \n                        \"liked\": false, \n                        \"hashtags\": [\n                            \"ocean:SouthAtlanticOcean:3358844\", \n                            \"landcover:water\", \n                            \"location:southern\", \n                            \"season:winter\", \n                            \"collection:S2\", \n                            \"productType:REFLECTANCE\", \n                            \"processingLevel:LEVEL1C\", \n                            \"platform:S2B\", \n                            \"instrument:MSI\", \n                            \"year:2020\", \n                            \"month:06\", \n                            \"day:21\"\n                        ], \n                        \"productIdentifier\": \"S2B_MSIL1C_20200621T111039_N0209_R008_T28HCE_20200621T132349\", \n                        \"comments\": 0, \n                        \"datetime\": \"2020-06-21T11:11:28.371000Z\", \n                        \"centroid\": {\n                            \"type\": \"Point\", \n                            \"coordinates\": [\n                                70.513407, \n                                23.006623\n                            ]\n                        }, \n                        \"end_datetime\": \"2020-06-21T11:11:28.371000Z\", \n                        \"published\": \"2018-09-13T12:52:25.971969Z\", \n                        \"likes\": 0\n                    }, \n                    \"type\": \"Feature\", \n                    \"id\": \"b9eeaf68-5127-53e5-97ff-ddf44984ef56\"\n                }, \n                \"required\": [\n                    \"type\", \n                    \"id\", \n                    \"geometry\", \n                    \"properties\", \n                    \"collection\", \n                    \"links\", \n                    \"assets\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Feature returned by resto\", \n                \"properties\": {\n                    \"assets\": {\n                        \"type\": \"object\", \n                        \"description\": \"RESTo Feature\"\n                    }, \n                    \"links\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Link\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"RESTo Feature\"\n                    }, \n                    \"geometry\": {\n                        \"required\": [\n                            \"type\", \n                            \"geometry\"\n                        ], \n                        \"type\": \"object\", \n                        \"description\": \"Geometry definition\", \n                        \"properties\": {\n                            \"type\": {\n                                \"enum\": [\n                                    \"Point\", \n                                    \"MultiPoint\", \n                                    \"LineString\", \n                                    \"MultiLineString\", \n                                    \"Polygon\", \n                                    \"MultiPolygon\", \n                                    \"GeometryCollection\"\n                                ], \n                                \"type\": \"string\", \n                                \"description\": \"Geometry type following GeoJSON specification\"\n                            }, \n                            \"coordinates\": {\n                                \"items\": {\n                                    \"type\": \"number\"\n                                }, \n                                \"type\": \"array\", \n                                \"description\": \"Geometry vertices following GeoJSON specification\"\n                            }\n                        }\n                    }, \n                    \"collection\": {\n                        \"type\": \"string\", \n                        \"description\": \"Collection identifier\"\n                    }, \n                    \"properties\": {\n                        \"type\": \"object\", \n                        \"description\": \"Feature properties mainly based on *[OGC-13-026r8] OGC OpenSearch Extension for Earth Observation*. Only non null properties are returned\", \n                        \"properties\": {\n                            \"status\": {\n                                \"type\": \"integer\", \n                                \"description\": \"[Unused]\"\n                            }, \n                            \"liked\": {\n                                \"type\": \"boolean\", \n                                \"description\": \"True if the user that requests the feature likes it\"\n                            }, \n                            \"description\": {\n                                \"type\": \"string\", \n                                \"description\": \"A descriptipon of the feature\"\n                            }, \n                            \"title\": {\n                                \"type\": \"string\", \n                                \"description\": \"A name given to the feature\"\n                            }, \n                            \"hashtags\": {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                }, \n                                \"type\": \"array\", \n                                \"description\": \"Array of hashtags attached to the feature\"\n                            }, \n                            \"comments\": {\n                                \"type\": \"integer\", \n                                \"description\": \"Number of comments on this feature\"\n                            }, \n                            \"datetime\": {\n                                \"type\": \"string\", \n                                \"description\": \"Start/end of feature life (e.g. start of acquisition for a satellite imagery) (ISO 8601 - YYYY-MM-DD-THH:MM:SSZ/YYYY-MM-DD-THH:MM:SSZ)\"\n                            }, \n                            \"centroid\": {\n                                \"type\": \"object\", \n                                \"description\": \"Centroid of the feature\", \n                                \"properties\": {\n                                    \"type\": {\n                                        \"type\": \"string\", \n                                        \"description\": \"Always set to *Point*\"\n                                    }, \n                                    \"coordinates\": {\n                                        \"items\": {\n                                            \"type\": \"number\"\n                                        }, \n                                        \"type\": \"array\", \n                                        \"description\": \"Coordinates expressed in [longitude, latitude]\"\n                                    }\n                                }\n                            }, \n                            \"likes\": {\n                                \"type\": \"integer\", \n                                \"description\": \"Number of likes for this feature\"\n                            }, \n                            \"published\": {\n                                \"type\": \"string\", \n                                \"description\": \"The date when the feature metadata was published (ISO 8601 - YYYY-MM-DD-THH:MM:SSZ)\"\n                            }, \n                            \"owner\": {\n                                \"type\": \"string\", \n                                \"description\": \"Owner of the feature i.e. user that created it\"\n                            }, \n                            \"udpated\": {\n                                \"type\": \"string\", \n                                \"description\": \"The date when the feature metadata was updated (ISO 8601 - YYYY-MM-DD-THH:MM:SSZ)\"\n                            }\n                        }\n                    }, \n                    \"type\": {\n                        \"enum\": [\n                            \"Feature\"\n                        ], \n                        \"type\": \"string\", \n                        \"description\": \"Always set to *feature*\"\n                    }, \n                    \"id\": {\n                        \"type\": \"string\", \n                        \"description\": \"Feature identifier\"\n                    }\n                }\n            }, \n            \"RestoFeatureCollection\": {\n                \"example\": {\n                    \"context\": {\n                        \"exactCount\": false, \n                        \"returned\": 20, \n                        \"startIndex\": 1, \n                        \"limit\": 20, \n                        \"query\": {\n                            \"inputFilters\": []\n                        }, \n                        \"matched\": 11345\n                    }, \n                    \"type\": \"FeatureCollection\", \n                    \"features\": [\n                        {\n                            \"assets\": {\n                                \"tileInfo\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/tileInfo.json\", \n                                    \"type\": \"application/json\"\n                                }, \n                                \"productInfo\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/productInfo.json\", \n                                    \"type\": \"application/json\"\n                                }, \n                                \"thumbnail\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/preview.jpg\", \n                                    \"type\": \"image/jpeg\"\n                                }, \n                                \"metadata\": {\n                                    \"href\": \"https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/23/X/MD/2019/6/11/0/metadata.xml\", \n                                    \"type\": \"text/xml\"\n                                }\n                            }, \n                            \"links\": [\n                                {\n                                    \"href\": \"http://127.0.0.1:5252/collections/S2/items/8030a391-4002-556f-929b-d7ff9dad6705?\u0026lang=en\", \n                                    \"type\": \"application/json\", \n                                    \"rel\": \"self\"\n                                }, \n                                {\n                                    \"href\": \"http://127.0.0.1:5252/collections/S2?\u0026lang=en\", \n                                    \"type\": \"application/json\", \n                                    \"rel\": \"collection\", \n                                    \"title\": \"S2\"\n                                }\n                            ], \n                            \"geometry\": {\n                                \"type\": \"Polygon\", \n                                \"coordinates\": [\n                                    [\n                                        [\n                                            -48.619853, \n                                            75.657209\n                                        ], \n                                        [\n                                            -44.646424, \n                                            75.684397\n                                        ], \n                                        [\n                                            -44.660672, \n                                            75.069386\n                                        ], \n                                        [\n                                            -44.698432, \n                                            75.060518\n                                        ], \n                                        [\n                                            -45.489771, \n                                            74.830977\n                                        ], \n                                        [\n                                            -45.857954, \n                                            74.720238\n                                        ], \n                                        [\n                                            -45.921685, \n                                            74.698702\n                                        ], \n                                        [\n                                            -48.392706, \n                                            74.674979\n                                        ], \n                                        [\n                                            -48.619853, \n                                            75.657209\n                                        ]\n                                    ]\n                                ]\n                            }, \n                            \"collection\": \"S2\", \n                            \"properties\": {\n                                \"startDate\": \"2019-06-11T16:11:41.808000Z\", \n                                \"productIdentifier\": \"S2A_MSIL1C_20190611T160901_N0207_R140_T23XMD_20190611T193040\", \n                                \"datetime\": \"2019-06-11T16:11:41Z\"\n                            }, \n                            \"stac_version\": \"0.8.0\", \n                            \"stac_extensions\": [\n                                \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n                            ], \n                            \"type\": \"Feature\", \n                            \"id\": \"8030a391-4002-556f-929b-d7ff9dad6705\", \n                            \"bbox\": [\n                                -48.6198530870596, \n                                74.6749788966259, \n                                -44.6464244356188, \n                                75.6843970710939\n                            ]\n                        }\n                    ], \n                    \"links\": [\n                        {\n                            \"href\": \"http://127.0.0.1:5252/stac/search.json?\", \n                            \"type\": \"application/json\", \n                            \"rel\": \"self\"\n                        }, \n                        {\n                            \"href\": \"http://127.0.0.1:5252/services/osdd\", \n                            \"type\": \"application/opensearchdescription+xml\", \n                            \"rel\": \"search\"\n                        }, \n                        {\n                            \"href\": \"http://127.0.0.1:5252/stac/search.json?next=204449069316703379\", \n                            \"type\": \"application/json\", \n                            \"rel\": \"next\"\n                        }\n                    ], \n                    \"id\": \"20ac2fc6-daee-5621-bca4-d88c0bb19da1\"\n                }, \n                \"required\": [\n                    \"type\", \n                    \"links\", \n                    \"features\", \n                    \"context\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Feature collection\", \n                \"properties\": {\n                    \"context\": {\n                        \"items\": {\n                            \"type\": \"object\", \n                            \"properties\": {\n                                \"exactCount\": {\n                                    \"type\": \"boolean\", \n                                    \"description\": \"True if *matched* is exact - false means that it is estimated\"\n                                }, \n                                \"returned\": {\n                                    \"type\": \"integer\", \n                                    \"description\": \"The count of results returned by this response. equal to the cardinality of features array\"\n                                }, \n                                \"startIndex\": {\n                                    \"type\": \"integer\", \n                                    \"description\": \"Start index for the search (cf. pagination)\"\n                                }, \n                                \"limit\": {\n                                    \"type\": \"integer\", \n                                    \"description\": \"The maximum number of results to which the result was limited\"\n                                }, \n                                \"query\": {\n                                    \"type\": \"object\", \n                                    \"description\": \"Query details\"\n                                }, \n                                \"matched\": {\n                                    \"type\": \"integer\", \n                                    \"description\": \"The count of total number of results that match for this query, possibly estimated\"\n                                }\n                            }\n                        }, \n                        \"required\": [\n                            \"returned\"\n                        ], \n                        \"description\": \"Information on search query\"\n                    }, \n                    \"type\": {\n                        \"enum\": [\n                            \"FeatureCollection\"\n                        ], \n                        \"type\": \"string\", \n                        \"description\": \"Always set to *FeatureCollection*\"\n                    }, \n                    \"features\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/OutputFeature\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"Array of features\"\n                    }, \n                    \"links\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Link\"\n                        }, \n                        \"type\": \"array\", \n                        \"description\": \"RESTo FeatureCollection\"\n                    }, \n                    \"id\": {\n                        \"type\": \"string\", \n                        \"description\": \"FeatureCollection unique identifier (uuid)\"\n                    }\n                }\n            }, \n            \"InputFeature\": {\n                \"example\": {\n                    \"geometry\": {\n                        \"type\": \"Polygon\", \n                        \"coordinates\": [\n                            [\n                                [\n                                    -16.34433, \n                                    -36.136821\n                                ], \n                                [\n                                    -16.002576, \n                                    -36.14017\n                                ], \n                                [\n                                    -16.003437, \n                                    -36.207726\n                                ], \n                                [\n                                    -16.003437, \n                                    -36.207726\n                                ], \n                                [\n                                    -16.073904, \n                                    -36.193064\n                                ], \n                                [\n                                    -16.079613, \n                                    -36.194838\n                                ], \n                                [\n                                    -16.343729, \n                                    -36.140707\n                                ], \n                                [\n                                    -16.343453, \n                                    -36.137129\n                                ], \n                                [\n                                    -16.34433, \n                                    -36.136821\n                                ]\n                            ]\n                        ]\n                    }, \n                    \"type\": \"Feature\", \n                    \"properties\": {\n                        \"productIdentifier\": \"S2B_MSIL1C_20200621T111039_N0209_R008_T28HCE_20200621T132349\", \n                        \"datetime\": \"2020-06-21T11:11:28.371000Z\"\n                    }\n                }, \n                \"required\": [\n                    \"type\", \n                    \"geometry\", \n                    \"properties\"\n                ], \n                \"type\": \"object\", \n                \"description\": \"Feature ingested by resto\", \n                \"properties\": {\n                    \"geometry\": {\n                        \"required\": [\n                            \"type\", \n                            \"geometry\"\n                        ], \n                        \"type\": \"object\", \n                        \"description\": \"Geometry definition\", \n                        \"properties\": {\n                            \"type\": {\n                                \"enum\": [\n                                    \"Point\", \n                                    \"MultiPoint\", \n                                    \"LineString\", \n                                    \"MultiLineString\", \n                                    \"Polygon\", \n                                    \"MultiPolygon\", \n                                    \"GeometryCollection\"\n                                ], \n                                \"type\": \"string\", \n                                \"description\": \"Geometry type following GeoJSON specification\"\n                            }, \n                            \"coordinates\": {\n                                \"items\": {\n                                    \"type\": \"number\"\n                                }, \n                                \"type\": \"array\", \n                                \"description\": \"Geometry vertices following GeoJSON specification\"\n                            }\n                        }\n                    }, \n                    \"type\": {\n                        \"enum\": [\n                            \"Feature\"\n                        ], \n                        \"type\": \"string\", \n                        \"description\": \"Always set to *feature*\"\n                    }, \n                    \"id\": {\n                        \"type\": \"string\", \n                        \"description\": \"Feature identifier\"\n                    }, \n                    \"properties\": {\n                        \"type\": \"object\", \n                        \"description\": \"Feature properties mainly based on *[OGC-13-026r8] OGC OpenSearch Extension for Earth Observation*. Only non null properties are returned\", \n                        \"properties\": {\n                            \"status\": {\n                                \"type\": \"integer\", \n                                \"description\": \"[Unused]\"\n                            }, \n                            \"productIdentifier\": {\n                                \"type\": \"string\", \n                                \"description\": \"Original product identifier\"\n                            }, \n                            \"datetime\": {\n                                \"type\": \"string\", \n                                \"description\": \"Start/end of feature life (e.g. start of acquisition for a satellite imagery) (ISO 8601 - YYYY-MM-DD-THH:MM:SSZ/YYYY-MM-DD-THH:MM:SSZ)\"\n                            }, \n                            \"description\": {\n                                \"type\": \"string\", \n                                \"description\": \"Descritipon of the feature. Each hashtag within the description is indexed to speedup search\"\n                            }, \n                            \"title\": {\n                                \"type\": \"string\", \n                                \"description\": \"A name given to the feature\"\n                            }\n                        }\n                    }\n                }\n            }, \n            \"GenericError\": {\n                \"required\": [\n                    \"ErrorCode\", \n                    \"ErrorMessage\"\n                ], \n                \"type\": \"object\", \n                \"properties\": {\n                    \"ErrorCode\": {\n                        \"type\": \"integer\", \n                        \"description\": \"HTTP status code\"\n                    }, \n                    \"ErrorMessage\": {\n                        \"type\": \"string\", \n                        \"description\": \"Error message\"\n                    }\n                }\n            }\n        }\n    }, \n    \"openapi\": \"3.0.0\"\n}\n",
			"canonicalURL": "/github.com/jjrom/resto@be086f978a756af8bf580fd1ede9d4a4d60c83c0/-/blob/docs/resto-api.json",
			"externalURLs": [
				{
					"url": "https://github.com/jjrom/resto/blob/be086f978a756af8bf580fd1ede9d4a4d60c83c0/docs/resto-api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}