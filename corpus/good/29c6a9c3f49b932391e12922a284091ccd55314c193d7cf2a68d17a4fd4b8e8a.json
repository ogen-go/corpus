{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ubccr/grendel"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "openapi.json",
			"byteSize": 20348,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Grendel API\",\n    \"description\": \"Bare Metal Provisioning system for HPC Linux clusters. Find out more about Grendel at [https://github.com/ubccr/grendel](https://github.com/ubccr/grendel)\",\n    \"contact\": {\n      \"email\": \"aebruno2@buffalo.edu\"\n    },\n    \"license\": {\n      \"name\": \"GPLv3\",\n      \"url\": \"https://www.gnu.org/licenses/gpl-3.0.en.html\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"externalDocs\": {\n    \"description\": \"https://grendel.readthedocs.io/en/latest/\",\n    \"url\": \"https://grendel.readthedocs.io/en/latest/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"host\",\n      \"description\": \"Host API Service\",\n      \"externalDocs\": {\n        \"description\": \"Operations for grendel hosts\",\n        \"url\": \"https://grendel.readthedocs.io/en/latest/\"\n      }\n    },\n    {\n      \"name\": \"image\",\n      \"description\": \"Boot Image API Service\",\n      \"externalDocs\": {\n        \"description\": \"Operations for grendel boot images\",\n        \"url\": \"https://grendel.readthedocs.io/en/latest/\"\n      }\n    }\n  ],\n  \"paths\": {\n    \"/host/list\": {\n      \"get\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"List all hosts\",\n        \"description\": \"Returns all host stored in Grendel\",\n        \"operationId\": \"hostList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Host\"\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch hosts from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/host/find/{nodeSet}\": {\n      \"get\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Find hosts by name or nodeset\",\n        \"description\": \"Returns a list of hosts in the given nodeset\",\n        \"operationId\": \"hostFind\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeSet\",\n            \"in\": \"path\",\n            \"description\": \"nodeset syntax. Example: cpn-d13-[01-100]\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Host\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid nodeset supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch hosts from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Delete hosts by name or nodeset\",\n        \"description\": \"Delete hosts in the given nodeset\",\n        \"operationId\": \"hostDelete\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeSet\",\n            \"in\": \"path\",\n            \"description\": \"nodeset syntax. Example: cpn-d13-[01-100]\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid nodeset supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to delete hosts from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/host/tags/{tags}\": {\n      \"get\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Find hosts by tags\",\n        \"description\": \"Returns a list of hosts with the given tags\",\n        \"operationId\": \"hostTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"path\",\n            \"description\": \"comman separated list of tags. Example: ib,noib,k16\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Host\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tags supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch hosts by tag from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/host/provision/{nodeSet}\": {\n      \"put\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Set hosts to provision by name or nodeset\",\n        \"description\": \"Sets hosts to provision in the given nodeset\",\n        \"operationId\": \"hostProvision\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeSet\",\n            \"in\": \"path\",\n            \"description\": \"nodeset syntax. Example: cpn-d13-[01-100]\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid nodeset supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch hosts from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/host/unprovision/{nodeSet}\": {\n      \"put\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Set hosts to unprovision by name or nodeset\",\n        \"description\": \"Sets hosts to unprovision in the given nodeset\",\n        \"operationId\": \"hostUnprovision\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeSet\",\n            \"in\": \"path\",\n            \"description\": \"nodeset syntax. Example: cpn-d13-[01-100]\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid nodeset supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch hosts from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/host/tag/{nodeSet}\": {\n      \"put\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Tag hosts by name or nodeset\",\n        \"description\": \"Tag hosts in the given nodeset\",\n        \"operationId\": \"hostTag\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeSet\",\n            \"in\": \"path\",\n            \"description\": \"nodeset syntax. Example: cpn-d13-[01-100]\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"list of tags. Example: ib,noib,k16\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid nodeset supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch hosts from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/host/untag/{nodeSet}\": {\n      \"put\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Untag hosts name or nodeset\",\n        \"description\": \"Untag hosts the given nodeset\",\n        \"operationId\": \"hostUntag\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeSet\",\n            \"in\": \"path\",\n            \"description\": \"nodeset syntax. Example: cpn-d13-[01-100]\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"list of tags. Example: ib,noib,k16\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid nodeset supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch hosts from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/host\": {\n      \"post\": {\n        \"tags\": [\n          \"host\"\n        ],\n        \"summary\": \"Add or update hosts in Grendel\",\n        \"operationId\": \"storeHosts\",\n        \"requestBody\": {\n          \"description\": \"Add/Update one or more hosts to Grendel\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Host\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"successfully stored hosts\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid host input supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to store hosts in database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    },\n    \"/bootimage/list\": {\n      \"get\": {\n        \"tags\": [\n          \"image\"\n        ],\n        \"summary\": \"List all images\",\n        \"description\": \"Returns all images stored in Grendel\",\n        \"operationId\": \"imageList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BootImage\"\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch images from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/bootimage/find/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"image\"\n        ],\n        \"summary\": \"Find image by name\",\n        \"description\": \"Returns image with the given name\",\n        \"operationId\": \"imageFind\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"Name of image\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BootImage\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid name supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to fetch image from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"image\"\n        ],\n        \"summary\": \"Delete boot images by name\",\n        \"description\": \"Delete boot images with the given name\",\n        \"operationId\": \"imageDelete\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"Name of boot image to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid name supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to delete boot images from database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/bootimage\": {\n      \"post\": {\n        \"tags\": [\n          \"image\"\n        ],\n        \"summary\": \"Add or update images in Grendel\",\n        \"operationId\": \"storeImages\",\n        \"requestBody\": {\n          \"description\": \"Add/Update one or more images to Grendel\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/BootImage\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"successfully stored images\",\n            \"content\": { }\n          },\n          \"400\": {\n            \"description\": \"Invalid boot image input supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Failed to store images in database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Host\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"provision\": {\n            \"type\": \"boolean\"\n          },\n          \"firmware\": {\n            \"type\": \"string\"\n          },\n          \"boot_image\": {\n            \"type\": \"string\"\n          },\n          \"interfaces\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NetInterface\"\n            }\n          }\n        }\n      },\n      \"NetInterface\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mac\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"ip\": {\n            \"type\": \"string\"\n          },\n          \"fqdn\": {\n            \"type\": \"string\"\n          },\n          \"bmc\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"BootImage\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"kernel\": {\n            \"type\": \"string\"\n          },\n          \"initrd\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"liveimg\": {\n            \"type\": \"string\"\n          },\n          \"cmdline\": {\n            \"type\": \"string\"\n          },\n          \"verify\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/ubccr/grendel@19873451b1bf95a9dc7141bb42128ebe94ccd46e/-/blob/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/ubccr/grendel/blob/19873451b1bf95a9dc7141bb42128ebe94ccd46e/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}