{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CounterpartyAdministration.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CounterpartyAdministration.yaml",
			"byteSize": 27541,
			"content": "openapi: 3.0.1\ninfo:\n  title: Counterparty Administration\n  description: This Service Domain maintains key counterparty reference information used in the clearing and settlement of wholesale trading\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CounterpartyAdministration/10.0.0\npaths:\n  /CounterpartyAdministration/{counterpartyadministrationId}/Control:\n    put:\n      tags:\n      - CR - CounterpartyDirectoryEntry\n      summary: Control Counterparty Directory Entry\n      description: Control Counterparty Directory Entry\n      operationId: Control\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/{counterpartyadministrationId}/Execute:\n    put:\n      tags:\n      - CR - CounterpartyDirectoryEntry\n      summary: Execute Counterparty Directory Entry\n      description: Execute Counterparty Directory Entry\n      operationId: Execute\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/{counterpartyadministrationId}/Notify:\n    get:\n      tags:\n      - CR - CounterpartyDirectoryEntry\n      summary: Notify Counterparty Directory Entry\n      description: Notify Counterparty Directory Entry\n      operationId: Notify\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/Register:\n    post:\n      tags:\n      - CR - CounterpartyDirectoryEntry\n      summary: Register Counterparty Directory Entry\n      description: Register Counterparty Directory Entry\n      operationId: Register\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/{counterpartyadministrationId}/Request:\n    put:\n      tags:\n      - CR - CounterpartyDirectoryEntry\n      summary: Request Counterparty Directory Entry\n      description: Request Counterparty Directory Entry\n      operationId: Request\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/{counterpartyadministrationId}/Retrieve:\n    get:\n      tags:\n      - CR - CounterpartyDirectoryEntry\n      summary: Retrieve Counterparty Directory Entry\n      description: Retrieve Counterparty Directory Entry\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/{counterpartyadministrationId}/Update:\n    put:\n      tags:\n      - CR - CounterpartyDirectoryEntry\n      summary: Update Counterparty Directory Entry\n      description: Update Counterparty Directory Entry\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Execute\n  : put:\n      tags:\n      - BQ - CounterpartyEntityReferenceproperty\n      summary: Execute Counterparty Entity Reference property\n      description: Execute Counterparty Entity Reference property\n      operationId: ExecuteCounterpartyEntityReferenceproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Execute\n  : put:\n      tags:\n      - BQ - CounterpartyPermittedTransactionproperty\n      summary: Execute Counterparty Permitted Transaction property\n      description: Execute Counterparty Permitted Transaction property\n      operationId: ExecuteCounterpartyPermittedTransactionproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Notify\n  : get:\n      tags:\n      - BQ - CounterpartyEntityReferenceproperty\n      summary: Notify Counterparty Entity Reference property\n      description: Notify Counterparty Entity Reference property\n      operationId: NotifyCounterpartyEntityReferenceproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Notify\n  : get:\n      tags:\n      - BQ - CounterpartyPermittedTransactionproperty\n      summary: Notify Counterparty Permitted Transaction property\n      description: Notify Counterparty Permitted Transaction property\n      operationId: NotifyCounterpartyPermittedTransactionproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/Register:\n    post:\n      tags:\n      - BQ - CounterpartyEntityReferenceproperty\n      summary: Register Counterparty Entity Reference property\n      description: Register Counterparty Entity Reference property\n      operationId: RegisterCounterpartyEntityReferenceproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/Register:\n    post:\n      tags:\n      - BQ - CounterpartyPermittedTransactionproperty\n      summary: Register Counterparty Permitted Transaction property\n      description: Register Counterparty Permitted Transaction property\n      operationId: RegisterCounterpartyPermittedTransactionproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Request\n  : put:\n      tags:\n      - BQ - CounterpartyEntityReferenceproperty\n      summary: Request Counterparty Entity Reference property\n      description: Request Counterparty Entity Reference property\n      operationId: RequestCounterpartyEntityReferenceproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Request\n  : put:\n      tags:\n      - BQ - CounterpartyPermittedTransactionproperty\n      summary: Request Counterparty Permitted Transaction property\n      description: Request Counterparty Permitted Transaction property\n      operationId: RequestCounterpartyPermittedTransactionproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Retrieve\n  : get:\n      tags:\n      - BQ - CounterpartyEntityReferenceproperty\n      summary: Retrieve Counterparty Entity Reference property\n      description: Retrieve Counterparty Entity Reference property\n      operationId: RetrieveCounterpartyEntityReferenceproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Retrieve\n  : get:\n      tags:\n      - BQ - CounterpartyPermittedTransactionproperty\n      summary: Retrieve Counterparty Permitted Transaction property\n      description: Retrieve Counterparty Permitted Transaction property\n      operationId: RetrieveCounterpartyPermittedTransactionproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Update\n  : put:\n      tags:\n      - BQ - CounterpartyEntityReferenceproperty\n      summary: Update Counterparty Entity Reference property\n      description: Update Counterparty Entity Reference property\n      operationId: UpdateCounterpartyEntityReferenceproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Update\n  : put:\n      tags:\n      - BQ - CounterpartyPermittedTransactionproperty\n      summary: Update Counterparty Permitted Transaction property\n      description: Update Counterparty Permitted Transaction property\n      operationId: UpdateCounterpartyPermittedTransactionproperty\n      parameters:\n      - $ref: '#/components/parameters/CounterpartyAdministrationID'\n      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CounterpartyDirectoryEntry:\n      type: object\n      properties:\n        CounterpartyDirectoryEntryDescription:\n          type: string\n        CounterpartyDirectoryEntrySchedule:\n          type: object\n        CounterpartyDirectoryEntryVersion:\n          type: string\n        CounterpartyDirectoryEntryStatus:\n          type: string\n        CounterpartyDirectoryEntryUsageLog:\n          type: string\n        CounterpartyDirectoryEntryUpdateLog:\n          type: string\n        CounterpartyDirectoryEntryServiceConfiguration:\n          type: string\n        CounterpartyDirectoryEntryReference:\n          type: string\n    CounterpartyEntityReferenceproperty:\n      type: object\n      properties:\n        Preconditions:\n          type: object\n        Schedule:\n          type: object\n        VersionNumber:\n          type: string\n        BusinessService:\n          type: object\n        CounterpartyDirectoryEntryReference:\n          type: string\n        CounterpartyEntityReferencepropertyReference:\n          type: object\n        CounterpartyEntityReferencepropertyType:\n          type: string\n    CounterpartyPermittedTransactionproperty:\n      type: object\n      properties:\n        Preconditions:\n          type: object\n        Schedule:\n          type: object\n        VersionNumber:\n          type: string\n        BusinessService:\n          type: object\n        CounterpartyDirectoryEntryReference:\n          type: string\n        CounterpartyPermittedTransactionpropertyReference:\n          type: object\n        CounterpartyPermittedTransactionpropertyType:\n          type: string\n    CounterpartyAdministrationOutcome:\n      type: object\n      properties:\n        CounterpartyAdministrationEntry:\n          type: string\n        CounterpartyAdministrationWorkProduct:\n          type: object\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n  parameters:\n    CounterpartyAdministrationID:\n      name: counterpartyadministrationId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    CounterpartyEntityReferencepropertyID:\n      name: counterpartyentityreferencepropertyId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    CounterpartyPermittedTransactionpropertyID:\n      name: counterpartypermittedtransactionpropertyId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    CounterpartyAdministrationOutcomeID:\n      name: counterpartyadministrationoutcomeId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    CounterpartyDirectoryEntry:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CounterpartyDirectoryEntry'\n    CounterpartyEntityReferenceproperty:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'\n    CounterpartyPermittedTransactionproperty:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CounterpartyAdministration.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CounterpartyAdministration.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}