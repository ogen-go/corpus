{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "adyen.com-NotificationConfigurationService-1-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/adyen.com-NotificationConfigurationService-1-openapi.yaml",
			"byteSize": 20307,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://cal-test.adyen.com/cal/services/Notification/v1\ninfo:\n  contact:\n    email: support@adyen.com\n    name: Adyen Support\n    url: https://support.adyen.com/\n    x-twitter: Adyen\n  description: \u003e-\n    The MarketPay Notification Configuration API provides endpoints for\n    configuration a subscription to a marketplace's MarketPay-related\n    notifications. Notifications are sent upon the occurrence of certain events\n    (such as a KYC check completion or a payout completion), and the\n    subscription to these notifications dictates to where they are sent.\n\n\n    For further information on MarketPay notifications, please visit the [MarketPay documentation](https://docs.adyen.com/developers/marketpay/marketpay-overview).\n\n    ## Authentication\n\n    To connect to the MarketPay API, you must use basic authentication credentials of your web service user. If you don't have one, please contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:\n\n\n    ```\n\n    curl\n\n    -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\\n\n    -H \"Content-Type: application/json\" \\\n\n    ...\n\n    ```\n\n    Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/developers/api-reference/live-endpoints).\n\n\n    ## Versioning\n\n    MarketPay API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n\n    For example:\n\n    ```\n\n    https://cal-test.adyen.com/cal/services/Notification/v1/createNotificationConfiguration\n\n    ```\n  termsOfService: https://docs.adyen.com/legal/terms-conditions\n  title: Adyen MarketPay Notification Configuration Service\n  version: \"1\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.11\n      format: openapi\n      url: https://raw.githubusercontent.com/adyen/adyen-openapi/master/specs/3.0/NotificationConfigurationService-v1.json\n      version: \"3.0\"\n  x-providerName: adyen.com\n  x-serviceName: NotificationConfigurationService\npaths:\n  /createNotificationConfiguration:\n    post:\n      description: This endpoint is used to create a subscription to MarketPay event\n        notifications. After the subscription is created, the events specified\n        in the configuration will be sent to the URL specified in the\n        configuration. Subscriptions must be configured on a per-event basis (as\n        opposed to, for example, a per-account holder basis), so all event\n        notifications of a marketplace and of a given type will be sent to the\n        same endpoint(s). A marketplace may have multiple endpoints if desired;\n        an event notification may be sent to as many or as few different\n        endpoints as configured.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n      summary: Configure a new subscription to notifications.\n      x-groupName: General\n      x-sortIndex: 1\n  /deleteNotificationConfigurations:\n    post:\n      description: This endpoint is used to delete an existing notification subscription\n        configuration. After the subscription is deleted, no further event\n        notifications will be sent to the URL that was in the subscription.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericResponse\"\n          description: OK - the request has succeeded.\n      summary: Delete an existing notification subscription configuration.\n      x-groupName: General\n      x-sortIndex: 6\n  /getNotificationConfiguration:\n    post:\n      description: This endpoint is used to retrieve the details of the configuration of a\n        notification subscription.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n      summary: Retrieve an existing notification subscription configuration.\n      x-groupName: General\n      x-sortIndex: 2\n  /getNotificationConfigurationList:\n    post:\n      description: This endpoint is used to retrieve the details of the configurations of\n        all of the notification subscriptions in the marketplace of the\n        executing user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EmptyRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationListResponse\"\n          description: OK - the request has succeeded.\n      summary: Retrive a list of existing notification subscription configurations.\n      x-groupName: General\n      x-sortIndex: 3\n  /testNotificationConfiguration:\n    post:\n      description: This endpoint is used to test an existing notification subscription\n        configuration. For each event type specified, a test notification will\n        be generated and sent to the URL configured in the subscription\n        specified.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n      summary: Test an existing notification configuration.\n      x-groupName: General\n      x-sortIndex: 4\n  /updateNotificationConfiguration:\n    post:\n      description: This endpoint is used to update an existing notification subscription\n        configuration. If updating the event types, all event types desired must\n        be provided, otherwise the previous event type configuration will be\n        overwritten.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n      summary: Update an existing notification subscription configuration.\n      x-groupName: General\n      x-sortIndex: 5\ncomponents:\n  schemas:\n    CreateNotificationConfigurationRequest:\n      properties:\n        configurationDetails:\n          $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          description: Details of the prospective notification subscription configuration.\n      required:\n        - configurationDetails\n    DeleteNotificationConfigurationRequest:\n      properties:\n        notificationIds:\n          description: A list of IDs of the notification subscription configurations to be\n            deleted.\n          items:\n            format: int64\n            type: integer\n          type: array\n      required:\n        - notificationIds\n    EmptyRequest: {}\n    ExchangeMessage:\n      properties:\n        messageCode:\n          type: string\n        messageDescription:\n          type: string\n    GenericResponse:\n      properties:\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's marketplace settings,\n            the following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n      required:\n        - pspReference\n        - submittedAsync\n    GetNotificationConfigurationListResponse:\n      properties:\n        configurations:\n          description: Details of the notification subscription configurations.\n          items:\n            $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          type: array\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's marketplace settings,\n            the following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n      required:\n        - pspReference\n        - submittedAsync\n        - configurations\n    GetNotificationConfigurationRequest:\n      properties:\n        notificationId:\n          description: The ID of the notification subscription configuration whose details\n            are to be retrieved.\n          format: int64\n          type: integer\n      required:\n        - notificationId\n    GetNotificationConfigurationResponse:\n      properties:\n        configurationDetails:\n          $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          description: Details of the notification subscription configuration.\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's marketplace settings,\n            the following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n      required:\n        - pspReference\n        - submittedAsync\n        - configurationDetails\n    NotificationConfigurationDetails:\n      properties:\n        active:\n          description: Indicates whether the notification subscription is active.\n          type: boolean\n        apiVersion:\n          description: The API version of the notification to send.\n          format: int32\n          type: integer\n        description:\n          description: \u003e-\n            A description of the notification subscription configuration.\n\n            \u003eRequired when creating a configuration, forbidden when updating a configuration.\n          type: string\n        eventConfigs:\n          description: The types of events whose notifications apply to this configuration.\n          items:\n            $ref: \"#/components/schemas/NotificationEventConfiguration\"\n          type: array\n        notificationId:\n          description: \u003e-\n            The ID of the configuration.\n\n            \u003eRequired if updating an existing configuration, ignored during the creation of a configuration.\n          format: int64\n          type: integer\n        notifyPassword:\n          description: The password to use when accessing the notifyURL with the specified\n            username.\n          type: string\n        notifyURL:\n          description: The URL to which the notifications are to be sent.\n          type: string\n        notifyUsername:\n          description: The username to use when accessing the notifyURL.\n          type: string\n        sslProtocol:\n          description: \u003e-\n            The SSL protocol employed by the endpoint.\n\n            \u003ePermitted values: `SSL`, `SSLv3`, `SSLInsecureCiphers`, `TLS`, `TLSv10`, `TLSv10InsecureCiphers`, `TLSv11`, `TLSv12`.\n          enum:\n            - SSL\n            - SSLInsecureCiphers\n            - SSLv3\n            - TLS\n            - TLSv10\n            - TLSv10InsecureCiphers\n            - TLSv11\n            - TLSv12\n          type: string\n      required:\n        - eventConfigs\n        - notifyURL\n    NotificationEventConfiguration:\n      properties:\n        eventType:\n          description: \u003e-\n            The type of event triggering the notification.\n\n            \u003ePermitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.\n          enum:\n            - ACCOUNT_CREATED\n            - ACCOUNT_HOLDER_CREATED\n            - ACCOUNT_HOLDER_LIMIT_REACHED\n            - ACCOUNT_HOLDER_PAYOUT\n            - ACCOUNT_HOLDER_STATUS_CHANGE\n            - ACCOUNT_HOLDER_UPDATED\n            - ACCOUNT_HOLDER_VERIFICATION\n            - ACCOUNT_UPDATED\n            - BENEFICIARY_SETUP\n            - COMPENSATE_NEGATIVE_BALANCE\n            - PAYMENT_FAILURE\n            - REPORT_AVAILABLE\n            - SCHEDULED_REFUNDS\n            - TRANSFER_FUNDS\n          type: string\n        includeMode:\n          description: \u003e-\n            Indicates whether the specified eventType is to be sent to the\n            endpoint or all events other than the specified eventType (and other\n            specified eventTypes) are to be sent.\n\n            \u003ePermitted values: `INCLUDE`, `EXCLUDE`.\n\n            \u003e- `INCLUDE`: send the specified eventType.\n\n            \u003e- `EXCLUDE`: send all eventTypes other than the specified eventType (and other eventTypes marked with `EXCLUDE`).\n          enum:\n            - EXCLUDE\n            - INCLUDE\n          type: string\n      required:\n        - eventType\n        - includeMode\n    TestNotificationConfigurationRequest:\n      properties:\n        eventTypes:\n          description: \u003e-\n            The event types to test.  If left blank, then all of the configured\n            event types will be tested.\n\n            \u003ePermitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.\n          items:\n            enum:\n              - ACCOUNT_CREATED\n              - ACCOUNT_HOLDER_CREATED\n              - ACCOUNT_HOLDER_LIMIT_REACHED\n              - ACCOUNT_HOLDER_PAYOUT\n              - ACCOUNT_HOLDER_STATUS_CHANGE\n              - ACCOUNT_HOLDER_UPDATED\n              - ACCOUNT_HOLDER_VERIFICATION\n              - ACCOUNT_UPDATED\n              - BENEFICIARY_SETUP\n              - COMPENSATE_NEGATIVE_BALANCE\n              - PAYMENT_FAILURE\n              - REPORT_AVAILABLE\n              - SCHEDULED_REFUNDS\n              - TRANSFER_FUNDS\n            type: string\n          type: array\n        notificationId:\n          description: The ID of the notification subscription configuration to be tested.\n          format: int64\n          type: integer\n      required:\n        - notificationId\n    TestNotificationConfigurationResponse:\n      properties:\n        errorMessages:\n          description: Any error messages encountered.\n          items:\n            type: string\n          type: array\n        eventTypes:\n          description: \u003e-\n            The event types that were tested.\n\n            \u003ePermitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.\n          items:\n            enum:\n              - ACCOUNT_CREATED\n              - ACCOUNT_HOLDER_CREATED\n              - ACCOUNT_HOLDER_LIMIT_REACHED\n              - ACCOUNT_HOLDER_PAYOUT\n              - ACCOUNT_HOLDER_STATUS_CHANGE\n              - ACCOUNT_HOLDER_UPDATED\n              - ACCOUNT_HOLDER_VERIFICATION\n              - ACCOUNT_UPDATED\n              - BENEFICIARY_SETUP\n              - COMPENSATE_NEGATIVE_BALANCE\n              - PAYMENT_FAILURE\n              - REPORT_AVAILABLE\n              - SCHEDULED_REFUNDS\n              - TRANSFER_FUNDS\n            type: string\n          type: array\n        exchangeMessages:\n          description: The notification message and related response messages.\n          items:\n            $ref: \"#/components/schemas/ExchangeMessage\"\n          type: array\n        notificationId:\n          description: The ID of the notification subscription configuration.\n          format: int64\n          type: integer\n        okMessages:\n          description: A list of messages describing the testing steps.\n          items:\n            type: string\n          type: array\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's marketplace settings,\n            the following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n      required:\n        - pspReference\n        - submittedAsync\n        - notificationId\n        - eventTypes\n        - okMessages\n        - exchangeMessages\n    UpdateNotificationConfigurationRequest:\n      properties:\n        configurationDetails:\n          $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          description: Details of the notification subscription configuration to be updated.\n      required:\n        - configurationDetails\nx-groups:\n  - General\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/adyen.com-NotificationConfigurationService-1-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/adyen.com-NotificationConfigurationService-1-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}