{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/godaddy.aftermarket/openapi.yml",
			"byteSize": 14683,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: GoDaddy Aftermarket\n    iconPath: \"icon.png\"\n  title: GoDaddy Aftermarket API\n  description: \u003e-\n    This is a generated connector for [GoDaddy Aftermarket API\n    v1](https://developer.godaddy.com/doc/endpoint/aftermarket) OpenAPI\n    specification. The GoDaddy Aftermarket API provides capability to access\n    GoDaddy operations related to GoDaddy Auctions.\n  version: v1\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials.  Create a\n    [GoDaddy Shoppers](https://sg.godaddy.com/) and obtain tokens by following\n    [this guide](https://developer.godaddy.com/getstarted).  \nservers:\n  - url: https://api.ote-godaddy.com/\ntags:\n  - name: v1\n    description: ''\npaths:\n  /v1/aftermarket/listings:\n    delete:\n      tags:\n        - v1\n      summary: Remove listings from GoDaddy Auction\n      operationId: deleteListings\n      parameters:\n        - name: domains\n          in: query\n          description: A comma separated list of domain names\n          required: true\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \"\\tRequired parameters must be specified in correct format\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/aftermarket/listings/expiry:\n    post:\n      tags:\n        - v1\n      summary: Add expiry listings into GoDaddy Auction\n      operationId: addExpiryListings\n      requestBody:\n        description: An array of expiry listings to be loaded\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AftermarketListingExpiryCreate'\n          application/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AftermarketListingExpiryCreate'\n          text/xml:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AftermarketListingExpiryCreate'\n        required: true\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AftermarketListingAction'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Required parameters must be specified in correct format\u003cbr\u003eToo many\n            Listings provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: expiryListings\nsecurity:\n  - ApiKeyAuth: []\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:       \n      type: apiKey\n      in: header  \n      name: Authorization\n      description: Represents API Key 'Authorization'\n  schemas:\n    AftermarketListingAction:\n      required:\n        - listingActionId\n      type: object\n      properties:\n        listingActionId:\n          type: integer\n          description: Action Id\n    AftermarketListingExpiryCreate:\n      required:\n        - domain\n        - expiresAt\n        - losingRegistrarId\n      type: object\n      properties:\n        domain:\n          type: string\n          description: Domain name\n        expiresAt:\n          type: string\n          description: Date when the domain expires\n          format: iso-datetime\n        losingRegistrarId:\n          minimum: 1\n          type: integer\n          description: Losing registrar id for the domain\n        pageViewsMonthly:\n          type: integer\n          description: Monthly traffic page view for the domain\n        revenueMonthly:\n          type: integer\n          description: Monthly parking revenue (in USD micro unit) for the domain\n    Error:\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n    ErrorField:\n      required:\n        - code\n        - path\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        message:\n          type: string\n          description: \u003e-\n            Human-readable, English description of the problem with the contents\n            of the field\n        path:\n          type: string\n          description: \u003e-\n            \u003cul\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field\n            containing an error\u003c/li\u003e\n\n            \u003cstrong style='margin-left: 12px;'\u003eOR\u003c/strong\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field that\n            refers to an object containing an error, with more detail in\n            `pathRelated`\u003c/li\u003e\n\n            \u003c/ul\u003e\n          format: json-path\n        pathRelated:\n          type: string\n          description: \u003e-\n            JSONPath referring to a field containing an error, which is\n            referenced by `path`\n          format: json-path\n    ErrorLimit:\n      required:\n        - code\n        - retryAfterSec\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n        retryAfterSec:\n          type: integer\n          description: Number of seconds to wait before attempting a similar request\n          format: integer-positive\n    expiry:\n      type: object\n      properties:\n        id:\n          type: number\n          format: double\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/godaddy.aftermarket/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/godaddy.aftermarket/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}