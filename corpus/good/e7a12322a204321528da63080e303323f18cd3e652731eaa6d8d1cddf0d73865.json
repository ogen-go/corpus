{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CustomerEventHistory.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CustomerEventHistory.yaml",
			"byteSize": 29064,
			"content": "openapi: 3.0.1\ninfo:\n  title: Customer Event History\n  description: This service domain captures, classifies and stores relationship, servicing and product fulfillment related customer events. In addition to servicing and product transaction details, the log can capture life/relationship events that are revealed during customer exchanges\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CustomerEventHistory/10.0.0\npaths:\n  /CustomerEventHistory/Initiate:\n    post:\n      tags:\n      - CR - CustomerEventLog\n      summary: InCR Initiate customer event history tracking for a customer\n      description: InCR Initiate customer event history tracking for a customer\n      operationId: Initiate\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerEventLog'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Update:\n    put:\n      tags:\n      - CR - CustomerEventLog\n      summary: UpCR Update details about the log\n      description: UpCR Update details about the log\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerEventLog'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Retrieve:\n    get:\n      tags:\n      - CR - CustomerEventLog\n      summary: ReCR Retrieve details about the customer event log\n      description: ReCR Retrieve details about the customer event log\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Relationship/{relationshipId}/Update:\n    put:\n      tags:\n      - BQ - Relationship\n      summary: UpBQ Update captured relationship management event details\n      description: UpBQ Update captured relationship management event details\n      operationId: UpdateRelationship\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/RelationshipID'\n      requestBody:\n        $ref: '#/components/requestBodies/Relationship'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Relationship'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Relationship/{relationshipId}/Capture:\n    put:\n      tags:\n      - BQ - Relationship\n      summary: CaBQ Capture relationship management event details\n      description: CaBQ Capture relationship management event details\n      operationId: CaptureRelationship\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/RelationshipID'\n      requestBody:\n        $ref: '#/components/requestBodies/Relationship'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Relationship/{relationshipId}/Retrieve:\n    get:\n      tags:\n      - BQ - Relationship\n      summary: ReBQ Retrieve relationship management event details\n      description: ReBQ Retrieve relationship management event details\n      operationId: RetrieveRelationship\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/RelationshipID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Sales/{salesId}/Update:\n    put:\n      tags:\n      - BQ - Sales\n      summary: UpBQ Update captured sales event details\n      description: UpBQ Update captured sales event details\n      operationId: UpdateSales\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/SalesID'\n      requestBody:\n        $ref: '#/components/requestBodies/Sales'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sales'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Sales/{salesId}/Capture:\n    put:\n      tags:\n      - BQ - Sales\n      summary: CaBQ Capture sales event details\n      description: CaBQ Capture sales event details\n      operationId: CaptureSales\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/SalesID'\n      requestBody:\n        $ref: '#/components/requestBodies/Sales'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Sales/{salesId}/Retrieve:\n    get:\n      tags:\n      - BQ - Sales\n      summary: ReBQ Retrieve sales event details\n      description: ReBQ Retrieve sales event details\n      operationId: RetrieveSales\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/SalesID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Servicing/{servicingId}/Update:\n    put:\n      tags:\n      - BQ - Servicing\n      summary: UpBQ Update captured servicing event details\n      description: UpBQ Update captured servicing event details\n      operationId: UpdateServicing\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/ServicingID'\n      requestBody:\n        $ref: '#/components/requestBodies/Servicing'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Servicing'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Servicing/{servicingId}/Capture:\n    put:\n      tags:\n      - BQ - Servicing\n      summary: CaBQ Capture servicing event details\n      description: CaBQ Capture servicing event details\n      operationId: CaptureServicing\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/ServicingID'\n      requestBody:\n        $ref: '#/components/requestBodies/Servicing'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Servicing/{servicingId}/Retrieve:\n    get:\n      tags:\n      - BQ - Servicing\n      summary: ReBQ Retrieve servicing event details\n      description: ReBQ Retrieve servicing event details\n      operationId: RetrieveServicing\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/ServicingID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/ProductProcessing/{productprocessingId}/Update:\n    put:\n      tags:\n      - BQ - ProductProcessing\n      summary: UpBQ Update captured product processing event details\n      description: UpBQ Update captured product processing event details\n      operationId: UpdateProductProcessing\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/ProductProcessingID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductProcessing'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductProcessing'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/ProductProcessing/{productprocessingId}/Capture:\n    put:\n      tags:\n      - BQ - ProductProcessing\n      summary: CaBQ Capture product processing event details\n      description: CaBQ Capture product processing event details\n      operationId: CaptureProductProcessing\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/ProductProcessingID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductProcessing'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/ProductProcessing/{productprocessingId}/Retrieve:\n    get:\n      tags:\n      - BQ - ProductProcessing\n      summary: ReBQ Retrieve product processing event details\n      description: ReBQ Retrieve product processing event details\n      operationId: RetrieveProductProcessing\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/ProductProcessingID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Fraud/{fraudId}/Update:\n    put:\n      tags:\n      - BQ - Fraud\n      summary: UpBQ Update captured fraud event details\n      description: UpBQ Update captured fraud event details\n      operationId: UpdateFraud\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/FraudID'\n      requestBody:\n        $ref: '#/components/requestBodies/Fraud'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fraud'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Fraud/{fraudId}/Capture:\n    put:\n      tags:\n      - BQ - Fraud\n      summary: CaBQ Capture fraud event details\n      description: CaBQ Capture fraud event details\n      operationId: CaptureFraud\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/FraudID'\n      requestBody:\n        $ref: '#/components/requestBodies/Fraud'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Fraud/{fraudId}/Retrieve:\n    get:\n      tags:\n      - BQ - Fraud\n      summary: ReBQ Retrieve fraud event details\n      description: ReBQ Retrieve fraud event details\n      operationId: RetrieveFraud\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/FraudID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Life/{lifeId}/Update:\n    put:\n      tags:\n      - BQ - Life\n      summary: UpBQ Update captured customer life event details\n      description: UpBQ Update captured customer life event details\n      operationId: UpdateLife\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/LifeID'\n      requestBody:\n        $ref: '#/components/requestBodies/Life'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Life'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Life/{lifeId}/Capture:\n    put:\n      tags:\n      - BQ - Life\n      summary: CaBQ Capture customer life event details\n      description: CaBQ Capture customer life event details\n      operationId: CaptureLife\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/LifeID'\n      requestBody:\n        $ref: '#/components/requestBodies/Life'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerEventHistory/{customereventhistoryId}/Life/{lifeId}/Retrieve:\n    get:\n      tags:\n      - BQ - Life\n      summary: ReBQ Retrieve customer life event details\n      description: ReBQ Retrieve customer life event details\n      operationId: RetrieveLife\n      parameters:\n      - $ref: '#/components/parameters/CustomerEventHistoryID'\n      - $ref: '#/components/parameters/LifeID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEventLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CustomerEventLog:\n      type: object\n      properties:\n        CustomerReference:\n          type: object\n    Life:\n      type: object\n      properties:\n        CustomerLifeEventType:\n          type: string\n        CustomerContactRecordReference:\n          type: object\n        Employee/UnitReference:\n          type: object\n        CustomerLifeEventRecord:\n          type: string\n        Date/Time/Location:\n          type: string\n    ProductProcessing:\n      type: object\n      properties:\n        ProductInstanceReference:\n          type: object\n        ProductAction/EventType:\n          type: string\n        ProductAction/EventDescription:\n          type: string\n        ProductAction/EventResult:\n          type: string\n        Employee/UnitReference:\n          type: object\n        CustomerProductandServiceEventRecord:\n          type: string\n        Date/Time/Location:\n          type: string\n    Sales:\n      type: object\n      properties:\n        CustomerSalesEventType:\n          type: string\n        Employee/UnitReference:\n          type: object\n        ProductandServiceType:\n          type: string\n        LeadandOpportunityReference:\n          type: object\n        CustomerSalesEventRecord:\n          type: string\n        CommissionAgreementReference:\n          type: object\n        Date/Time/Location:\n          type: string\n    Relationship:\n      type: object\n      properties:\n        CustomerRelationshipEventType:\n          type: string\n        Employee/UnitReference:\n          type: object\n        CustomerRelationshipEventRecord:\n          type: string\n        CustomerRelationshipEventAction:\n          type: string\n        Date/Time/Location:\n          type: string\n    Fraud:\n      type: object\n      properties:\n        CustomerFraudCaseEventType:\n          type: string\n        CustomerContactRecordReference:\n          type: object\n        AccessedProductandService:\n          type: string\n        Employee/UnitReference:\n          type: object\n        FraudCaseReference:\n          type: object\n        Date/Time/Location:\n          type: string\n    Servicing:\n      type: object\n      properties:\n        CustomerServicingEventType:\n          type: string\n        CustomerContactRecordReference:\n          type: object\n        AccessedProductandService:\n          type: string\n        Channel/DeviceType:\n          type: string\n        ContactPurpose:\n          type: string\n        ContactResult:\n          type: string\n        Employee/UnitReference:\n          type: object\n        CustomerServicingEventRecord:\n          type: string\n        Date/Time/Location:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n  parameters:\n    CustomerEventHistoryID:\n      name: customereventhistoryId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    LifeID:\n      name: lifeId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    ProductProcessingID:\n      name: productprocessingId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    SalesID:\n      name: salesId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    RelationshipID:\n      name: relationshipId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    FraudID:\n      name: fraudId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    ServicingID:\n      name: servicingId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    CustomerEventLog:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CustomerEventLog'\n    Relationship:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Relationship'\n    Sales:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Sales'\n    Servicing:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Servicing'\n    ProductProcessing:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProductProcessing'\n    Fraud:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Fraud'\n    Life:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Life'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CustomerEventHistory.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CustomerEventHistory.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}