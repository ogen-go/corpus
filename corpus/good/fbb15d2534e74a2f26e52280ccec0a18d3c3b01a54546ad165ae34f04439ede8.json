{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackrox/acs-fleet-manager"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "internal/dinosaur/pkg/api/private/api/openapi.yaml",
			"byteSize": 16875,
			"content": "openapi: 3.0.0\ninfo:\n  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager APIs\n    that are used by internal services e.g fleetshard operators.\n  title: Red Hat Advanced Cluster Security Service Fleet Manager\n  version: 1.4.0\nservers:\n- description: Main (production) server\n  url: https://api.openshift.com\n- description: Staging server\n  url: https://api.stage.openshift.com\n- description: localhost\n  url: http://localhost:8000\n- description: current domain\n  url: /\ntags:\n- name: Agent Clusters\npaths:\n  /api/rhacs/v1/agent-clusters/{id}/status:\n    put:\n      operationId: updateAgentClusterStatus\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'\n        description: Cluster status update data\n        required: true\n      responses:\n        \"200\":\n          description: Cluster status is updated\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Update the status of an agent cluster\n      tags:\n      - Agent Clusters\n  /api/rhacs/v1/agent-clusters/{id}/centrals/status:\n    put:\n      operationId: updateCentralClusterStatus\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataPlaneCentralStatusUpdateRequest'\n        description: Centrals status update data\n        required: true\n      responses:\n        \"200\":\n          description: Status is updated for Centrals\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Update the status of Centrals on an agent cluster\n      tags:\n      - Agent Clusters\n  /api/rhacs/v1/agent-clusters/{id}/centrals:\n    get:\n      operationId: getCentrals\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagedCentralList'\n          description: The list of the ManagedCentrals for the specified agent cluster\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Get the list of ManagedaCentrals for the specified agent cluster\n      tags:\n      - Agent Clusters\n  /api/rhacs/v1/agent-clusters/{id}:\n    get:\n      operationId: getDataPlaneClusterAgentConfig\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataplaneClusterAgentConfig'\n          description: The Data Plane Cluster Agent configuration\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Get the data plane cluster agent configuration\n      tags:\n      - Agent Clusters\ncomponents:\n  examples:\n    ManagedCentralExample:\n      value:\n        id: 1rfpsqbvq1em2u9u0z54ymjcwac\n        kind: ManagedCentral\n        metadata:\n          name: example-central\n          namespace: example-central-1rfpsqbvq1em2u9u0z54ymjcwac\n          annotations:\n            mas/id: 1rfpsqbvq1em2u9u0z54ymjcwac\n            mas/placementId: \"\"\n          deletionTimestamp: 2022-06-01T11:04:09Z\n        spec:\n          owners:\n          - central-owner1\n          endpoint:\n            host: example-central--rfpsqbvq-em-u-u-z--ymjcwac.example.central.com\n            tls:\n              cert: \"\"\n              key: \"\"\n          versions:\n            central: 2.7.0\n            centralOperator: 0.21.2\n          central:\n            resources:\n              requests:\n                cpu: 250m\n                memory: 250Mi\n              limtis:\n                cpu: 1000m\n                memory: 4Gi\n          scanner:\n            analyzer:\n              scaling:\n                autoScaling: enabled\n                replicas: 1\n                minReplicas: 1\n                maxReplicas: 3\n              resources:\n                requests:\n                  cpu: 250m\n                  memory: 100Mi\n                limtis:\n                  cpu: 500m\n                  memory: 2500Mi\n          db:\n            host: dbhost.rhacs-psql-instance\n    DataPlaneCentralStatusRequestExample:\n      value:\n        conditions:\n        - type: Ready\n          reason: CentralInstanceReady\n          message: installing\n          status: \"False\"\n          lastTransitionTime: 2018-01-01T00:00:00Z\n        versions:\n          central: 2.4.1\n          centralOperator: 0.21.2\n    \"400InvalidIdExample\":\n      value:\n        id: \"21\"\n        kind: Error\n        href: /api/rhacs/v1/errors/21\n        code: RHACS-MGMT-21\n        reason: Bad request\n        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv\n    \"404Example\":\n      value:\n        id: \"7\"\n        kind: Error\n        href: /api/rhacs/v1/errors/7\n        code: RHACS-MGMT-7\n        reason: The requested resource doesn't exist\n  schemas:\n    ListReference:\n      properties:\n        kind:\n          type: string\n      required:\n      - items\n      - kind\n      type: object\n    PrivateObjectReference:\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n      type: object\n    ResourceList:\n      properties:\n        cpu:\n          type: string\n        memory:\n          type: string\n      type: object\n    ResourceRequirements:\n      properties:\n        requests:\n          $ref: '#/components/schemas/ResourceList'\n        limits:\n          $ref: '#/components/schemas/ResourceList'\n      type: object\n    ManagedCentralVersions:\n      properties:\n        central:\n          type: string\n        centralOperator:\n          type: string\n      type: object\n    ManagedCentral:\n      allOf:\n      - $ref: '#/components/schemas/PrivateObjectReference'\n      - $ref: '#/components/schemas/ManagedCentral_allOf'\n    ManagedCentralList:\n      allOf:\n      - $ref: '#/components/schemas/ListReference'\n      - $ref: '#/components/schemas/ManagedCentralList_allOf'\n      description: A list of ManagedCentral\n    DataPlaneClusterUpdateStatusRequest:\n      description: Schema for the request to update a data plane cluster's status\n      example:\n        conditions:\n        - reason: reason\n          type: type\n          message: message\n          status: status\n        - reason: reason\n          type: type\n          message: message\n          status: status\n        centralOperator:\n        - ready: true\n          centralVersions:\n          - centralVersions\n          - centralVersions\n          version: version\n        - ready: true\n          centralVersions:\n          - centralVersions\n          - centralVersions\n          version: version\n      properties:\n        conditions:\n          description: The cluster data plane conditions\n          items:\n            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'\n          type: array\n        centralOperator:\n          items:\n            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_centralOperator'\n          type: array\n      type: object\n    DataPlaneCentralStatus:\n      description: Schema of the status object for a Central\n      example:\n        $ref: '#/components/examples/DataPlaneCentralStatusRequestExample'\n      properties:\n        conditions:\n          description: The status conditions of a Central\n          items:\n            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'\n          type: array\n        versions:\n          $ref: '#/components/schemas/DataPlaneCentralStatus_versions'\n        routes:\n          description: Routes created for a Central\n          items:\n            $ref: '#/components/schemas/DataPlaneCentralStatus_routes'\n          nullable: true\n          type: array\n      type: object\n    DataPlaneCentralStatusUpdateRequest:\n      additionalProperties:\n        $ref: '#/components/schemas/DataPlaneCentralStatus'\n      description: Schema for the request to update the statuses of Central clusters\n        from data plane\n      type: object\n    DataplaneClusterAgentConfig:\n      description: Configuration for the data plane cluster agent\n      example:\n        spec:\n          observability:\n            channel: channel\n            tag: tag\n            accessToken: accessToken\n            repository: repository\n      properties:\n        spec:\n          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec'\n      type: object\n    WatchEvent:\n      properties:\n        type:\n          type: string\n        error:\n          $ref: '#/components/schemas/Error'\n        object:\n          nullable: true\n          type: object\n      required:\n      - type\n      type: object\n    Error:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Error_allOf'\n    ObjectReference:\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n        href:\n          type: string\n      type: object\n    ManagedCentral_allOf_metadata_annotations:\n      properties:\n        mas/id:\n          type: string\n        mas/placementId:\n          type: string\n      required:\n      - mas/id\n      - mas/placementId\n    ManagedCentral_allOf_metadata:\n      properties:\n        name:\n          type: string\n        namespace:\n          type: string\n        annotations:\n          $ref: '#/components/schemas/ManagedCentral_allOf_metadata_annotations'\n        deletionTimestamp:\n          type: string\n    ManagedCentral_allOf_spec_endpoint_tls:\n      nullable: true\n      properties:\n        cert:\n          type: string\n        key:\n          type: string\n    ManagedCentral_allOf_spec_endpoint:\n      properties:\n        host:\n          type: string\n        tls:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec_endpoint_tls'\n    ManagedCentral_allOf_spec_central:\n      properties:\n        resources:\n          $ref: '#/components/schemas/ResourceRequirements'\n    ManagedCentral_allOf_spec_scanner_analyzer_scaling:\n      properties:\n        autoScaling:\n          type: string\n        replicas:\n          format: int32\n          minimum: 1\n          type: integer\n        minReplicas:\n          format: int32\n          minimum: 1\n          type: integer\n        maxReplicas:\n          format: int32\n          minimum: 1\n          type: integer\n    ManagedCentral_allOf_spec_scanner_analyzer:\n      properties:\n        scaling:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner_analyzer_scaling'\n        resources:\n          $ref: '#/components/schemas/ResourceRequirements'\n    ManagedCentral_allOf_spec_scanner_db:\n      properties:\n        host:\n          type: string\n    ManagedCentral_allOf_spec_scanner:\n      properties:\n        analyzer:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner_analyzer'\n        db:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner_db'\n    ManagedCentral_allOf_spec:\n      properties:\n        owners:\n          items:\n            type: string\n          type: array\n        endpoint:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec_endpoint'\n        versions:\n          $ref: '#/components/schemas/ManagedCentralVersions'\n        central:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec_central'\n        scanner:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner'\n    ManagedCentral_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ManagedCentral_allOf_metadata'\n        spec:\n          $ref: '#/components/schemas/ManagedCentral_allOf_spec'\n    ManagedCentralList_allOf:\n      example: '{\"kind\":\"ManagedCentralList\",\"items\":{\"$ref\":\"#/components/examples/ManagedCentralExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/ManagedCentral'\n          type: array\n    DataPlaneClusterUpdateStatusRequest_conditions:\n      example:\n        reason: reason\n        type: type\n        message: message\n        status: status\n      properties:\n        type:\n          type: string\n        reason:\n          type: string\n        message:\n          type: string\n        status:\n          type: string\n    DataPlaneClusterUpdateStatusRequest_centralOperator:\n      example:\n        ready: true\n        centralVersions:\n        - centralVersions\n        - centralVersions\n        version: version\n      properties:\n        ready:\n          type: boolean\n        version:\n          type: string\n        centralVersions:\n          items:\n            type: string\n          type: array\n      required:\n      - ready\n      - version\n    DataPlaneCentralStatus_versions:\n      description: Version information related to a Central\n      properties:\n        central:\n          type: string\n        centralOperator:\n          type: string\n    DataPlaneCentralStatus_routes:\n      properties:\n        name:\n          type: string\n        prefix:\n          type: string\n        router:\n          type: string\n    DataplaneClusterAgentConfig_spec_observability:\n      description: Observability configurations\n      example:\n        channel: channel\n        tag: tag\n        accessToken: accessToken\n        repository: repository\n      properties:\n        accessToken:\n          nullable: true\n          type: string\n        channel:\n          type: string\n        repository:\n          type: string\n        tag:\n          type: string\n    DataplaneClusterAgentConfig_spec:\n      description: Data plane cluster agent spec\n      example:\n        observability:\n          channel: channel\n          tag: tag\n          accessToken: accessToken\n          repository: repository\n      properties:\n        observability:\n          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec_observability'\n    Error_allOf:\n      properties:\n        code:\n          type: string\n        reason:\n          type: string\n        operation_id:\n          type: string\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/stackrox/acs-fleet-manager@af15bd701241c3c16e73122e0802af79acebb71f/-/blob/internal/dinosaur/pkg/api/private/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackrox/acs-fleet-manager/blob/af15bd701241c3c16e73122e0802af79acebb71f/internal/dinosaur/pkg/api/private/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}