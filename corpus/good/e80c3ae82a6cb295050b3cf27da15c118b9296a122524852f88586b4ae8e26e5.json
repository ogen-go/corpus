{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "webhooks.v3.yml",
			"size": 0,
			"path": "reference/webhooks.v3.yml",
			"byteSize": 115272,
			"content": "openapi: 3.0.0\r\ninfo:\r\n  title: Webhooks v3\r\n  version: ''\r\n  description: 'Get notified when specific events occur on a BigCommerce store. For more information, see [Webhooks Overview](/api-docs/store-management/webhooks/overview).'\r\npaths:\r\n  '/stores/{store_hash}/v3/hooks':\r\n    post:\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  data:\r\n                    $ref: '#/components/schemas/webhook_Full'\r\n                  meta:\r\n                    type: object\r\n                    properties:\r\n                      pagination:\r\n                        $ref: '#/components/schemas/Pagination'\r\n              examples:\r\n                application/json:\r\n                  value:\r\n                    data:\r\n                      id: 18048287\r\n                      client_id: m9r6keqmo7h7f23btnpwernbez1kglkl\r\n                      store_hash: sftg45fsd\r\n                      created_at: 1561488106\r\n                      updated_at: 1561488106\r\n                      scope: store/order/*\r\n                      destination: 'https://665b65a6.ngrok.io/webhooks'\r\n                      is_active: true\r\n                      headers:\r\n                        custom: string\r\n                    meta:\r\n                      pagination:\r\n                        count: 5\r\n                        current_page: 1\r\n                        links:\r\n                          current: '?limit=100\u0026page=1'\r\n                          next: '?limit=100\u0026page=1'\r\n                          previous: '?limit=100\u0026page=1'\r\n                        per_page: 100\r\n                        total: 5\r\n                        total_pages: 1\r\n          links:\r\n            getHook:\r\n              operationId: getWebhook\r\n              parameters:\r\n                webhook_id: $response.body#/id\r\n        '400':\r\n          $ref: '#/components/responses/400_BadRequest'\r\n        '401':\r\n          $ref: '#/components/responses/401_Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/422_UnprocessableEntity'\r\n      summary: Create a Webhook\r\n      description: Creates a webhook. Only one webhook at a time can be created. Custom headers can be added. Destination URL must be served on port 443 (custom ports are not currently supported).\r\n      operationId: createWebhooks\r\n      parameters:\r\n        - $ref: '#/components/parameters/Accept'\r\n        - $ref: '#/components/parameters/Content-Type'\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/webhook_Base'\r\n      tags:\r\n        - Webhooks\r\n    get:\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/webhooks_Resp'\r\n        '400':\r\n          $ref: '#/components/responses/400_BadRequest'\r\n        '401':\r\n          $ref: '#/components/responses/401_Unauthorized'\r\n      summary: Get Webhooks\r\n      description: |-\r\n        Returns a list of all webhooks on a store associated to the `client_id` used to authenticate the request.\r\n\r\n        *Note: BigCommerce determines the `client_id` from the `access_token`.*\r\n      operationId: getAllWebhooks\r\n      tags:\r\n        - Webhooks\r\n      parameters:\r\n        - $ref: '#/components/parameters/Accept'\r\n        - $ref: '#/components/parameters/Content-Type'\r\n        - $ref: '#/components/parameters/FilterPageParam'\r\n        - $ref: '#/components/parameters/FilterLimitParam'\r\n        - $ref: '#/components/parameters/IsActive'\r\n        - $ref: '#/components/parameters/FilterByScope'\r\n        - $ref: '#/components/parameters/FilterByDestination'\r\n    parameters:\r\n      - schema:\r\n          type: string\r\n        name: store_hash\r\n        in: path\r\n        required: true\r\n        description: Hash of your BigCommerce store\r\n  '/stores/{store_hash}/v3/hooks/{webhook_id}':\r\n    get:\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/webhook_Resp'\r\n      description: Return a webhook by ID.\r\n      operationId: getWebhook\r\n      summary: Get a Webhook\r\n      tags:\r\n        - Webhooks\r\n      parameters:\r\n        - $ref: '#/components/parameters/Accept'\r\n        - $ref: '#/components/parameters/Content-Type'\r\n    parameters:\r\n      - $ref: '#/components/parameters/WebhookId'\r\n      - schema:\r\n          type: string\r\n        name: store_hash\r\n        in: path\r\n        required: true\r\n        description: Hash of your BigCommerce store\r\n    put:\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/webhook_Resp'\r\n      summary: Update a Webhook\r\n      description: Updates a webhook. Custom headers can be added.\r\n      operationId: updateAWebhook\r\n      parameters:\r\n        - $ref: '#/components/parameters/Accept'\r\n        - $ref: '#/components/parameters/Content-Type'\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/webhook_Base'\r\n        x-examples:\r\n          application/json:\r\n            scope: store/cart/lineItem/*\r\n            destination: 'https://myapp.herokuapp.com/'\r\n            is_active: true\r\n            headers:\r\n              User-Name: Hello\r\n              Password: Goodbye\r\n      tags:\r\n        - Webhooks\r\n    delete:\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/webhook_Resp'\r\n      summary: Delete a Webhook\r\n      description: 'Deletes a webhook. Only one webhook at a time can be deleted. When a webhook is deleted, it is returned in the response as a 200 OK.'\r\n      operationId: deleteAWebhook\r\n      tags:\r\n        - Webhooks\r\n      parameters:\r\n        - $ref: '#/components/parameters/Accept'\r\n        - $ref: '#/components/parameters/Content-Type'\r\n  '/stores/{store_hash}/v3/hooks/admin':\r\n    get:\r\n      operationId: getHooksAdmin\r\n      summary: Get Admin Info\r\n      description: 'List all notification emails, webhooks, and denylisted domains associated with the API account.'\r\n      parameters:\r\n        - name: is_active\r\n          in: query\r\n          description: Enables user to filter for webhooks that are active or not.\r\n          schema:\r\n            type: boolean\r\n            example: true\r\n        - schema:\r\n            type: string\r\n          name: store_hash\r\n          in: path\r\n          required: true\r\n          description: Hash of your BigCommerce store\r\n      responses:\r\n        '200':\r\n          description: Successful operation.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      emails:\r\n                        description: Email addresses to be sent notifications.\r\n                        type: array\r\n                        items:\r\n                          type: string\r\n                          format: email\r\n                          example: 'webhooks@example.com'\r\n                      hooks_list:\r\n                        description: 'List of all the webhooks associated with the provider API account, filtered by the \"active\" parameter.'\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            id:\r\n                              type: integer\r\n                              description: ID of the webhook\r\n                            client_id:\r\n                              type: string\r\n                              minLength: 1\r\n                              description: 'Client ID, unique to the store'\r\n                            store_hash:\r\n                              minLength: 1\r\n                              type: string\r\n                              description: Store permanent ID\r\n                            scope:\r\n                              type: string\r\n                              minLength: 1\r\n                              description: Event you subscribe to\r\n                              example: store/order/*\r\n                            destination:\r\n                              type: string\r\n                              minLength: 1\r\n                              description: 'URL must be active, return a 200 response, and be served on port 443 (custom ports not currently supported)'\r\n                            headers:\r\n                              type: object\r\n                              description: You can pass in any number of custom headers to validate webhooks being returned.\r\n                            is_active:\r\n                              type: boolean\r\n                              description: If webhook is active or not\r\n                              default: true\r\n                            created_at:\r\n                              type: integer\r\n                              description: Created time\r\n                            updated_at:\r\n                              type: integer\r\n                              description: Updated time\r\n                      blocked_domains:\r\n                        description: List of domains (destinations) that are currently on the denylist and are not being sent webhooks.\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            destination:\r\n                              description: Domain URL to which webhooks are sent.\r\n                              type: string\r\n                              format: url\r\n                            time_left:\r\n                              description: Remaining time in seconds that the domain is on the denylist.\r\n                              type: integer\r\n                            reasons:\r\n                              type: array\r\n                              items:\r\n                                type: object\r\n                                properties:\r\n                                  failure_description:\r\n                                    type: string\r\n                                  count:\r\n                                    type: integer\r\n                                  timestamp:\r\n                                    type: integer\r\n                                    format: int64\r\n                                    description: UTC timestamp in seconds that the events was created\r\n                  meta:\r\n                    type: object\r\n                    properties:\r\n                      pagination:\r\n                        $ref: '#/components/schemas/Pagination'\r\n              examples: {}\r\n        '400':\r\n          $ref: '#/components/responses/400_BadRequest'\r\n        '401':\r\n          $ref: '#/components/responses/401_Unauthorized'\r\n      tags:\r\n        - Webhooks Admin\r\n    put:\r\n      operationId: putHooksAdmin\r\n      summary: Upsert Email Notifications\r\n      description: |\r\n        Update email addresses that are sent notification emails when any domain associated with the API account is denylisted or when a webhook is deactivated. Supports `upsert` functionality in the case that no email address exists yet.\r\n\r\n      requestBody:\r\n        description: List of notification emails.\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                emails:\r\n                  type: array\r\n                  items:\r\n                    type: string\r\n                    format: email\r\n                    example: 'webhooks@example.com'\r\n            examples:\r\n              Example:\r\n                value:\r\n                  emails:\r\n                    - user@example.com\r\n        required: true\r\n      responses:\r\n        '204':\r\n          description: No Content\r\n        '400':\r\n          $ref: '#/components/responses/400_BadRequest'\r\n        '401':\r\n          $ref: '#/components/responses/401_Unauthorized'\r\n        '422':\r\n          $ref: '#/components/responses/422_UnprocessableEntity'\r\n      tags:\r\n        - Webhooks Admin\r\n    parameters:\r\n      - schema:\r\n          type: string\r\n        name: store_hash\r\n        in: path\r\n        required: true\r\n        description: Hash of your BigCommerce store\r\n  '/stores/{store_hash}/v3/hooks/events':\r\n    get:\r\n      tags:\r\n        - Webhooks\r\n      summary: Get Events\r\n      parameters:\r\n        - $ref: '#/components/parameters/FilterPageParam'\r\n        - $ref: '#/components/parameters/FilterLimitParam'\r\n        - $ref: '#/components/parameters/FilterMaxCreatedAtParam'\r\n        - $ref: '#/components/parameters/FilterMinCreatedAtParam'\r\n      operationId: getWebhookEvents\r\n      responses:\r\n        '200':\r\n          description: Successful operation.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  data:\r\n                    type: array\r\n                    items:\r\n                      $ref: '#/components/schemas/HistoryEvent'\r\n                  meta:\r\n                    type: object\r\n                    properties:\r\n                      pagination:\r\n                        $ref: '#/components/schemas/Pagination'\r\n        '400':\r\n          $ref: '#/components/responses/400_BadRequest'\r\n        '401':\r\n          $ref: '#/components/responses/401_Unauthorized'\r\n      description: |\r\n        Get a list of events that were sent but not successfully received. Events are stored for not less than one week.\r\n    parameters:\r\n      - schema:\r\n          type: string\r\n        name: store_hash\r\n        in: path\r\n        required: true\r\n        description: Hash of your BigCommerce store\r\ntags:\r\n  - name: Webhooks\r\n  - name: Webhooks Admin\r\n  - name: Callbacks\r\nsecurity:\r\n  - X-Auth-Token: []\r\nservers:\r\n  - url: 'https://api.bigcommerce.com'\r\ncomponents:\r\n  parameters:\r\n    WebhookId:\r\n      name: webhook_id\r\n      in: path\r\n      description: The ID of a Webhook.\r\n      required: true\r\n      schema:\r\n        type: integer\r\n        minimum: 1\r\n        example: 22561593\r\n    IsActive:\r\n      name: is_active\r\n      in: query\r\n      description: |\r\n        Enables user to filter for webhooks that are active or not.\r\n      schema:\r\n        type: boolean\r\n    FilterByScope:\r\n      name: scope\r\n      in: query\r\n      description: |\r\n        Enables user to filter for webhooks by scope.\r\n      schema:\r\n        type: string\r\n    FilterByDestination:\r\n      name: destination\r\n      in: query\r\n      description: |\r\n        Enables user to filter for webhooks by destination.\r\n      schema:\r\n        type: string\r\n    FilterPageParam:\r\n      name: page\r\n      in: query\r\n      description: |\r\n        Page number.\r\n      required: false\r\n      schema:\r\n        type: integer\r\n        example: 1\r\n    FilterLimitParam:\r\n      name: limit\r\n      in: query\r\n      description: |\r\n        Items count per page.\r\n      required: false\r\n      schema:\r\n        type: integer\r\n    FilterMaxCreatedAtParam:\r\n      name: 'created_at:max'\r\n      in: query\r\n      description: |\r\n        Maximum value for returned data.\r\n      required: false\r\n      schema:\r\n        type: string\r\n    FilterMinCreatedAtParam:\r\n      name: 'created_at:min'\r\n      in: query\r\n      description: |\r\n        Minimum value for returned data.\r\n      required: false\r\n      schema:\r\n        type: string\r\n    Accept:\r\n      in: header\r\n      name: Accept\r\n      schema:\r\n        type: string\r\n        default: application/json\r\n    Content-Type:\r\n      name: Content-Type\r\n      in: header\r\n      schema:\r\n        type: string\r\n        default: application/json\r\n  responses:\r\n    webhooks_Resp:\r\n      description: ''\r\n      content:\r\n        application/json:\r\n          schema:\r\n            description: ''\r\n            type: object\r\n            properties:\r\n              data:\r\n                type: array\r\n                uniqueItems: true\r\n                minItems: 1\r\n                items:\r\n                  type: object\r\n                  properties:\r\n                    id:\r\n                      type: number\r\n                    client_id:\r\n                      type: string\r\n                      minLength: 1\r\n                    store_hash:\r\n                      type: string\r\n                      minLength: 1\r\n                    scope:\r\n                      type: string\r\n                      minLength: 1\r\n                    destination:\r\n                      type: string\r\n                      minLength: 1\r\n                    headers:\r\n                      type: object\r\n                      nullable: true\r\n                    is_active:\r\n                      type: boolean\r\n                    created_at:\r\n                      type: number\r\n                    updated_at:\r\n                      type: number\r\n              meta:\r\n                type: object\r\n                properties:\r\n                  pagination:\r\n                    $ref: '#/components/schemas/Pagination'\r\n          examples: {}\r\n    502_GatewayError:\r\n      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/error_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 502\r\n                title: A login URL could not be generated. Please try another request.\r\n                type: /api-docs/getting-started/api-status-codes\r\n    503_ServiceUnavailable:\r\n      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce [system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/error_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 503\r\n                title: Service Unavailable\r\n                type: /api-docs/getting-started/api-status-codes\r\n    504_GatewayTimeout:\r\n      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce [system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/errorDetailed_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 504\r\n                title: Gateway Timeout\r\n                type: /api-docs/getting-started/api-status-codes\r\n                errors: {}\r\n    400_BadRequest:\r\n      description: |-\r\n        Malformed request syntax. Typically need to fix the JSON\r\n        Body to resend successfully.\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/error_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 400\r\n                title: Input is invalid.\r\n                type: /api-docs/getting-started/api-status-codes\r\n    401_Unauthorized:\r\n      description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/error_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 401\r\n                title: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.\r\n                type: /api-docs/getting-started/api-status-codes\r\n    403_Unauthorized:\r\n      description: ''\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/error_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 403\r\n                title: Unauthorized Access. You do not have permission to make this request.\r\n                type: /api-docs/getting-started/api-status-codes\r\n    404_NotFound:\r\n      description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/error_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 404\r\n                title: 'Account with {id} not found'\r\n                type: /api-docs/getting-started/api-status-codes\r\n    422_UnprocessableEntity:\r\n      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/errorDetailed_Full'\r\n          examples:\r\n            response:\r\n              value:\r\n                status: 422\r\n                title: JSON data is missing or invalid\r\n                type: /api-docs/getting-started/api-status-codes\r\n                errors:\r\n                  destination: error.path.missing.\r\n    webhook_Resp:\r\n      description: Example response\r\n      content:\r\n        application/json:\r\n          schema:\r\n            description: ''\r\n            type: object\r\n            x-examples:\r\n              example-1:\r\n                data:\r\n                  id: 22041448\r\n                  client_id: hm6ttr1z8fzu2utb7d1p9qile9jtugv\r\n                  store_hash: 29iql3rwa6\r\n                  scope: store/order/*\r\n                  destination: 'https://665b65a6.ngrok.io/webhooks'\r\n                  headers: null\r\n                  is_active: false\r\n                  created_at: 1626812212\r\n                  updated_at: 1627588222\r\n                meta: {}\r\n            properties:\r\n              data:\r\n                type: object\r\n                properties:\r\n                  id:\r\n                    type: number\r\n                  client_id:\r\n                    type: string\r\n                    minLength: 1\r\n                  store_hash:\r\n                    type: string\r\n                    minLength: 1\r\n                  scope:\r\n                    type: string\r\n                    minLength: 1\r\n                  destination:\r\n                    type: string\r\n                    minLength: 1\r\n                  headers: {}\r\n                  is_active:\r\n                    type: boolean\r\n                  created_at:\r\n                    type: number\r\n                  updated_at:\r\n                    type: number\r\n              meta:\r\n                type: object\r\n                properties:\r\n                  pagination:\r\n                    $ref: '#/components/schemas/Pagination'\r\n          examples:\r\n            application/json:\r\n              value:\r\n                data:\r\n                  id: 18048287\r\n                  client_id: m9r6keqmo7h7f23btnpwernbez1kglkl\r\n                  store_hash: sftg45fsd\r\n                  created_at: 1561488106\r\n                  updated_at: 1561488106\r\n                  scope: store/order/*\r\n                  destination: 'https://665b65a6.ngrok.io/webhooks'\r\n                  is_active: true\r\n                  headers:\r\n                    custom: string\r\n                meta:\r\n                  pagination:\r\n                    count: 5\r\n                    current_page: 1\r\n                    links:\r\n                      current: '?limit=100\u0026page=1'\r\n                      next: '?limit=100\u0026page=1'\r\n                      previous: '?limit=100\u0026page=1'\r\n                    per_page: 100\r\n                    total: 5\r\n                    total_pages: 1\r\n  securitySchemes:\r\n    X-Auth-Token:\r\n      type: apiKey\r\n      name: X-Auth-Token\r\n      in: header\r\n      description: |-\r\n        ### OAuth Scopes\r\n        None required. Create and manage webhooks with the default scope of an API account.\r\n\r\n        ### Headers\r\n\r\n        | Header | Parameter | Description |\r\n        |:-------|:----------|:------------|\r\n        | `X-Auth-Token` | `access_token ` | Obtained by creating an API account or installing an app in a BigCommerce control panel. |\r\n\r\n        ### Example\r\n\r\n        ```http\r\n        GET /stores/{store_hash}/v3/catalog/summary\r\n        host: api.bigcommerce.com\r\n        Content-Type: application/json\r\n        X-Auth-Token: {access_token}\r\n        ```\r\n\r\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\r\n  schemas:\r\n    store_cart_wildcard:\r\n      description: \"Subscribes to the following events:\\n- `store/cart/created`\\n- `store/cart/updated`\\n- `store/cart/deleted`\\n- `store/cart/couponApplied`\\n- `store/cart/abandoned`\\n- `store/cart/converted`\\n- `store/cart/lineItem`\\n\\t\\t\\t\\nSee individual events for more information.\\n\"\r\n      title: store/cart/*\r\n      x-examples: {}\r\n      x-internal: false\r\n    store_cart_created:\r\n      description: |-\r\n        This webhook fires on new cart creation when any of the following occur:\r\n        - a storefront shopper adding their first product to a cart during a new session\r\n        - a successful `POST` request to `/carts` using either the [storefront](/api-reference/storefront/carts/cart/createacart) or [server-to-server](/api-reference/store-management/carts/cart/createacart) API \r\n\r\n        Cart creation also fires the `store/cart/updated` webhook.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      title: store/cart/created\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                  enum:\r\n                    - cart\r\n                    - cart_line_item\r\n                id:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_cart_updated:\r\n      title: store/cart/updated\r\n      description: |-\r\n        This webhook fires when the following occur:\r\n        -  Modifying a cartʼs line items by adding a new item to a cart, updating an existing itemʼs quantity, or deleting an item.\r\n        -  Entering or changing their email address during guest checkout. This includes logging into a customer account after creating a guest cart, which associates the accountʼs email address with the cart.\r\n\r\n        The `store/cart/created` webhook firing also triggers this webhook because adding a product to an empty cart is considered an update. \r\n\r\n        Fields that trigger this webhook event:\r\n        - Quantity\r\n        - Item Price\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_cart_deleted:\r\n      title: store/cart/deleted\r\n      description: |-\r\n        This webhook fires whenever a cart is deleted. Carts are deleted in two ways; when all items are removed from a cart, and when an API consumer explicitly removes the cart using a `DELETE` request. Cart deletion ends the cart lifecycle. The `store/cart/updated` webhook also fires when the last item is removed.\r\n\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n      x-tags:\r\n        - deleted\r\n      type: object\r\n      x-internal: false\r\n    store_cart_couponApplied:\r\n      title: store/cart/couponApplied\r\n      description: |-\r\n        This webhook fires whenever a new coupon code is applied to a cart. The webhook request body includes the ID of the coupon code.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/couponApplied\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\",\r\n            \"couponId\": 1\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n                couponId:\r\n                  type: integer\r\n                  description: ID of the coupon\r\n                  example: 1\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_cart_abandoned:\r\n      title: store/cart/abandoned\r\n      description: |-\r\n        This webhook fires after a cart is abandoned. BigCommerce considers a cart abandoned when it has no activity for at least one hour. This webhook is available for all store plans, regardless of whether the Abandoned Cart Saver feature is enabled.\r\n\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/abandoned\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\",\r\n            \"token\": \"1eed6d2d979776ff18e695ceeb10ea61\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n                token:\r\n                  type: string\r\n                  example: 1eed6d2d979776ff18e695ceeb10ea61\r\n                  description: Use this token to obtain cart data.\r\n      type: object\r\n      x-internal: false\r\n    store_cart_converted:\r\n      title: store/cart/converted\r\n      description: |-\r\n        This webhook fires when a cart/checkout is converted into an order, which is typically after the checkout payment step on the storefront. At this point, the cart is automatically deleted and no longer accessible. This webhook returns both the cart/checkout ID and order ID for correlation purposes.\r\n\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/converted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\",\r\n            \"orderId\": 252\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `cart`\r\n                  default: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n                orderId:\r\n                  type: integer\r\n                  description: ID of the order created\r\n                  example: 252\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_cart_lineItem_wildcard:\r\n      title: store/cart/lineItem/*\r\n      description: |-\r\n        This webhook subscribes to all cart line item events. \r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\",\r\n            \"cartId\": \"b0386708-fef3-45de-9d8b-fbe3031450a4\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                id:\r\n                  type: string\r\n                  description: ID of the cart\r\n                cartId:\r\n                  type: string\r\n                  description: ID of the cart\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_cart_lineItem_created:\r\n      title: store/cart/lineItem/created\r\n      description: |-\r\n        This webhook fires when a new item is added to the cart.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/lineItem/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\",\r\n            \"cartId\": \"b0386708-fef3-45de-9d8b-fbe3031450a4\"            \r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the line item\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n                cartId:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: b0386708-fef3-45de-9d8b-fbe3031450a4\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_cart_lineItem_updated:\r\n      title: store/cart/lineItem/updated\r\n      description: |-\r\n        This webhook fires when an item’s quantity has changed or the product options change.\r\n\r\n        Fields that trigger event:\r\n        - Quantity\r\n        - Item Price\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/lineItem/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\",\r\n            \"cartId\": \"b0386708-fef3-45de-9d8b-fbe3031450a4\"            \r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the line item\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n                cartId:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: b0386708-fef3-45de-9d8b-fbe3031450a4\r\n      type: object\r\n      x-tags:\r\n        - updated\r\n      x-internal: false\r\n    store_cart_lineItem_deleted:\r\n      title: store/cart/lineItem/deleted\r\n      description: |-\r\n        This webhook fires when an item is deleted from the cart.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/cart/lineItem/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"cart\",\r\n            \"id\": \"09346904-4175-44fd-be53-f7e598531b6c\",\r\n            \"cartId\": \"b0386708-fef3-45de-9d8b-fbe3031450a4\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  example: cart\r\n                id:\r\n                  type: string\r\n                  description: ID of the line item\r\n                  example: 09346904-4175-44fd-be53-f7e598531b6c\r\n                cartId:\r\n                  type: string\r\n                  description: ID of the cart\r\n                  example: b0386708-fef3-45de-9d8b-fbe3031450a4\r\n      type: object\r\n      x-tags:\r\n        - deleted\r\n      x-internal: false\r\n    store_category_wildcard:\r\n      title: store/category/*\r\n      description: |\r\n        Subscribe to all store/category events\r\n      x-examples: {}\r\n      allOf: []\r\n      x-tags:\r\n        - created\r\n      x-internal: false\r\n    store_category_created:\r\n      title: store/category/created\r\n      type: object\r\n      description: |-\r\n        This webhook fires when a category is created.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/category/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"category\",\r\n            \"id\": 42\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - $ref: '#/components/schemas/callback_category_data'\r\n      x-tags:\r\n        - created\r\n      x-internal: false\r\n    store_category_updated:\r\n      title: store/category/updated\r\n      description: |-\r\n        This webhook fires when a category is updated. \u003cbr\u003e\u003cbr\u003eChanges to the following fields trigger this event:\u003cul\u003e\u003cli\u003eUrl\u003c/li\u003e\u003cli\u003eName\u003c/li\u003e\u003cli\u003eRedirect old URLs\u003c/li\u003e\u003cli\u003eDescription\u003c/li\u003e\u003cli\u003eParent Category\u003c/li\u003e\u003cli\u003eTemplate Layout File\u003c/li\u003e\u003cli\u003eSort Order\u003c/li\u003e\u003cli\u003eDefault Product Sort\u003c/li\u003e\u003cli\u003eCategory Image\u003c/li\u003e\u003cli\u003ePage Title\u003c/li\u003e\u003cli\u003eMeta Keywords\u003c/li\u003e\u003cli\u003eMeta Description\u003c/li\u003e\u003cli\u003eSearch Keywords\u003c/li\u003e\u003cli\u003eGoogle Product Category\u003c/li\u003e\u003cli\u003eEnable Google Shopping\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/category/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"category\",\r\n            \"id\": 42\r\n          }\r\n        }\r\n        ```\r\n\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `category`\r\n                  default: category\r\n                id:\r\n                  type: integer\r\n                  description: ID of the category\r\n                  example: 42\r\n      x-tags:\r\n        - updated\r\n      type: object\r\n      x-internal: false\r\n    store_category_deleted:\r\n      title: store/category/deleted\r\n      description: |-\r\n        This webhook fires when a category is deleted.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/category/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"category\",\r\n            \"id\": \"42\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `category`\r\n                  default: category\r\n                  example: category\r\n                id:\r\n                  type: integer\r\n                  description: ID of the category\r\n                  example: 42\r\n      x-tags:\r\n        - deleted\r\n      type: object\r\n      x-internal: false\r\n    store_channel_wildcard:\r\n      title: store/channel/*\r\n      description: 'Subscribe to all `store/channel` events. '\r\n      allOf: []\r\n      x-tags:\r\n        - created\r\n      x-internal: false\r\n    store_channel_created:\r\n      title: store/channel/created\r\n      description: |-\r\n        This webhook fires when a channel is created via control panel or API.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/channel/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"channel\",\r\n            \"id\": 173331\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `channel`\r\n                  default: channel\r\n                  example: channel\r\n                  readOnly: true\r\n                id:\r\n                  type: integer\r\n                  description: ID of the channel\r\n                  example: 173331\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_channel_updated:\r\n      title: store/channel/updated\r\n      description: |-\r\n        This webhook fires when a channel is updated via control panel or API. \r\n\r\n        Changes to the following fields trigger this event:\u003cul\u003e\u003cli\u003ename\u003c/li\u003e\u003cli\u003eexternal_id\u003c/li\u003e\u003cli\u003estatus\u003c/li\u003e\u003cli\u003eis_listable_from_ui\u003c/li\u003e\u003cli\u003eis_visible\u003c/li\u003e\u003cli\u003eis_enabled (to be deprecated)\u003c/li\u003e\u003cli\u003econfig_meta\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/channel/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"channel\",\r\n            \"id\": 173331\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `channel`\r\n                  default: channel\r\n                  example: channel\r\n                  readOnly: true\r\n                id:\r\n                  type: integer\r\n                  description: ID of the channel\r\n                  example: 173331\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_customer_wildcard:\r\n      title: store/customer/*\r\n      description: |\r\n        Subscribe to all `store/customer` events\r\n      x-examples: {}\r\n      allOf: []\r\n      x-tags:\r\n        - created\r\n      x-internal: false\r\n    store_customer_created:\r\n      title: store/customer/created\r\n      description: |-\r\n        This webhook fires when a new customer is created.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/customer/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"customer\",\r\n            \"id\": 32\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `customer`\r\n                  default: customer\r\n                  example: customer\r\n                  readOnly: true\r\n                id:\r\n                  type: integer\r\n                  description: ID of the customer\r\n                  example: 32\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_customer_updated:\r\n      title: store/customer/updated\r\n      description: |-\r\n        This webhook fires when a customer is updated. In addition, this webhook fires when a shopper initially enters custom form field values within the account sign-up form. Please note that neither changing existing data in customer form fields nor changing a customerʼs address will trigger the webhook.\r\n\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/customer/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"customer\",\r\n            \"id\": 32\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `customer`\r\n                  default: customer\r\n                  example: customer\r\n                  readOnly: true\r\n                id:\r\n                  type: integer\r\n                  description: ID of the customer\r\n                  example: 32\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_customer_deleted:\r\n      title: store/customer/deleted\r\n      description: |-\r\n        This webhook fires when a customer is deleted.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/customer/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"customer\",\r\n            \"id\": 32\r\n          }\r\n        }\r\n        ```\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `customer`\r\n                  default: customer\r\n                  example: customer\r\n                  readOnly: true\r\n                id:\r\n                  type: integer\r\n                  description: ID of the customer\r\n                  example: 32\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_customer_address_updated:\r\n      title: store/customer/address/updated\r\n      description: |-\r\n        This webhook fires when a customer address is updated.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/customer/address/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"customer\",\r\n            \"id\": 60,\r\n            \"address\": {\r\n              \"customer_id\": 32\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `customer`\r\n                  example: customer\r\n                id:\r\n                  type: integer\r\n                  description: ID of the customer address\r\n                  example: 60\r\n                address:\r\n                  type: object\r\n                  properties:\r\n                    customer_id:\r\n                      type: integer\r\n                      description: ID of the customer\r\n                      example: 32\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_customer_address_created:\r\n      title: store/customer/address/created\r\n      description: |-\r\n        This webhook fires when a customer address is created.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/customer/address/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"customer\",\r\n            \"id\": 60,\r\n            \"address\": {\r\n              \"customer_id\": 32\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `customer`\r\n                  example: customer\r\n                id:\r\n                  type: integer\r\n                  description: ID of the customer address\r\n                  example: 60\r\n                address:\r\n                  type: object\r\n                  properties:\r\n                    customer_id:\r\n                      type: integer\r\n                      description: ID of the customer\r\n                      example: 32\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_customer_address_deleted:\r\n      title: store/customer/address/deleted\r\n      description: |-\r\n        This webhook fires when a customer address is deleted.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/customer/address/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"customer\",\r\n            \"id\": 60,\r\n            \"address\": {\r\n              \"customer_id\": 32\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `customer`\r\n                  example: customer\r\n                id:\r\n                  type: integer\r\n                  description: ID of the customer address\r\n                  example: 60\r\n                address:\r\n                  type: object\r\n                  properties:\r\n                    customer_id:\r\n                      type: integer\r\n                      description: ID of the customer\r\n                      example: 32\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_customer_payment_instrument_default_updated:\r\n      title: store/customer/payment/instrument/default/updated\r\n      description: |-\r\n        This webhook fires when a customer default payment instrument is updated.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/customer/payment/instrument/default/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"customer\",\r\n            \"id\": 32\r\n          }\r\n        }\r\n        ```\r\n\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: can be `cart` or `cart_line_item`\r\n                  default: '\"customer\"'\r\n                  example: '\"customer\"'\r\n                  readOnly: true\r\n                id:\r\n                  type: integer\r\n                  description: ID of the customer\r\n                  example: 32\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_order_wildcard:\r\n      title: store/order/*\r\n      description: Subscribe to all store/order events\r\n      type: object\r\n      x-internal: false\r\n    store_order_created:\r\n      title: store/order/created\r\n      description: |-\r\n        This webhook fires if an order is created using the control panel, an app or via the API.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/order/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"order\",\r\n            \"id\": 250\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `order`\r\n                  default: order\r\n                  example: order\r\n                id:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 250\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_order_updated:\r\n      title: store/order/updated\r\n      description: |-\r\n        This webhook fires when an already created order is updated.  \r\n\r\n        Fields that trigger event: \u003cul\u003e\u003cli\u003eStatus\u003c/li\u003e\u003cli\u003eCoupon Code\u003c/li\u003e\u003cli\u003eBilling and Shipping Address\u003c/li\u003e\u003cli\u003eProduct Type\u003c/li\u003e\u003cli\u003eSearch Keywords\u003c/li\u003e\u003cli\u003eRelated Products\u003c/li\u003e\u003cli\u003eWarranty Information\u003c/li\u003e\u003cli\u003ePage Title\u003c/li\u003e\u003cli\u003eMeta Description\u003c/li\u003e\u003cli\u003eGift Wrapping options\u003c/li\u003e\u003cli\u003eBin Picking Number (BPN)\u003c/li\u003e\u003cli\u003eFixed Shipping Price\u003c/li\u003e\u003cli\u003eFree Shipping\u003c/li\u003e\u003cli\u003eOpen Graph Sharing Type\u003c/li\u003e\u003cli\u003eAvailability Text\u003c/li\u003e\u003cli\u003ePurchasability\u003c/li\u003e\u003cli\u003eRelease Date\u003c/li\u003e\u003cli\u003eRemove pre-order status on this date\u003c/li\u003e\u003c/ul\u003e\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/order/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"order\",\r\n            \"id\": 250\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `order`\r\n                  default: order\r\n                  example: order\r\n                id:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 250\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_order_archived:\r\n      title: store/order/archived\r\n      description: |-\r\n        This webhook fires when an order is archived.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/order/archived\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"order\",\r\n            \"id\": 250\r\n          }\r\n        }\r\n        ```\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `order`\r\n                  default: order\r\n                  example: order\r\n                id:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 250\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_order_statusUpdated:\r\n      title: store/order/statusUpdated\r\n      description: |-\r\n        This webhook only fires if the order status has changed, such as `Pending` to `Awaiting Payment`\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/order/statusUpdated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"order\",\r\n            \"id\": 250,\r\n            \"status\": {\r\n              \"previous_status_id\": 1,\r\n              \"new_status_id\": 11\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `order`\r\n                  example: order\r\n                id:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 250\r\n                status:\r\n                  type: object\r\n                  properties:\r\n                    previous_status_id:\r\n                      type: integer\r\n                      description: Previous status ID\r\n                      example: 1\r\n                    new_status_id:\r\n                      type: integer\r\n                      description: Updated status ID\r\n                      example: 11\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_order_message_created:\r\n      title: store/order/message/created\r\n      description: |-\r\n        This webhook fires when an order message is created by customer or in control panel.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/order/message/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n         \"data\": {\r\n            \"type\": \"order\",\r\n            \"id\": 250,\r\n            \"message\": {\r\n              \"order_message_id\": 3\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `order`\r\n                  example: order\r\n                id:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 250\r\n                message:\r\n                  type: object\r\n                  properties:\r\n                    order_message_id:\r\n                      type: integer\r\n                      description: ID of the message on the order\r\n                      example: 3\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_order_refund_created:\r\n      title: store/order/refund/created\r\n      description: |-\r\n        This webhook fires when a refund has been submitted against an order.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/order/refund/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"order\",\r\n            \"id\": 250,\r\n            \"refund\": {\r\n              \"refund_id\": 3\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `order`\r\n                  example: order\r\n                id:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 250\r\n                refund:\r\n                  type: object\r\n                  properties:\r\n                    refund_id:\r\n                      type: integer\r\n                      description: ID of the refund submitted against the order\r\n                      example: 3\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_product_wildcard:\r\n      title: store/product/*\r\n      description: Subscribe to all `store/product` events\r\n      type: object\r\n      x-internal: false\r\n    store_product_deleted:\r\n      title: store/product/deleted\r\n      description: |-\r\n        This webhook fires when a product is deleted.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/product/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"product\",\r\n            \"id\": 205\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `product`\r\n                  default: product\r\n                  example: product\r\n                id:\r\n                  type: integer\r\n                  description: ID of the product\r\n                  example: 205\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_product_created:\r\n      title: store/product/created\r\n      description: |-\r\n        This webhook fires when a new product is created.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/product/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"product\",\r\n            \"id\": 205\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `product`\r\n                  default: product\r\n                  example: product\r\n                id:\r\n                  type: integer\r\n                  description: ID of the product\r\n                  example: 205\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_product_updated:\r\n      title: store/product/updated\r\n      description: |-\r\n        This webhook fires when product details are edited. \r\n\r\n        Fields that trigger event\u003cul\u003e\u003cli\u003eProduct Type\u003c/li\u003e\u003cli\u003eSearch Keywords\u003c/li\u003e\u003cli\u003eRelated Products\u003c/li\u003e\u003cli\u003eWarranty Information\u003c/li\u003e\u003cli\u003ePage Title\u003c/li\u003e\u003cli\u003eMeta Description\u003c/li\u003e\u003cli\u003eGift Wrapping options\u003c/li\u003e\u003cli\u003eBin Picking Number (BPN)\u003c/li\u003e\u003cli\u003eFixed Shipping Price\u003c/li\u003e\u003cli\u003eFree Shipping\u003c/li\u003e\u003cli\u003eOpen Graph Sharing Type\u003c/li\u003e\u003cli\u003eAvailability Text\u003c/li\u003e\u003cli\u003ePurchasability\u003c/li\u003e\u003cli\u003eRelease Date\u003c/li\u003e\u003cli\u003eRemove pre-order status on this date\u003c/li\u003e\u003cli\u003ePreorder Message\u003c/li\u003e\u003cli\u003eInventory Stock\u003c/li\u003e\u003cli\u003eInventory Low Stock\u003c/li\u003e\u003cli\u003eTrack inventory\u003c/li\u003e\u003cli\u003eProduct UPC/EAN\u003c/li\u003e\u003cli\u003eSKU\u003c/li\u003e\u003cli\u003eCost\u003c/li\u003e\u003cli\u003eTax Class\u003c/li\u003e\u003cli\u003eWeight\u003c/li\u003e\u003cli\u003eWidth\u003c/li\u003e\u003cli\u003eHeight\u003c/li\u003e\u003cli\u003eDepth\u003c/li\u003e\u003cli\u003eCondition\u003c/li\u003e\u003cli\u003eShow condition on storefront\u003c/li\u003e\u003cli\u003eBrand\u003c/li\u003e\u003cli\u003eDefault Price\u003c/li\u003e\u003cli\u003eSale Price\u003c/li\u003e\u003cli\u003eMSRP\u003c/li\u003e\u003cli\u003eProduct Name\u003c/li\u003e\u003cli\u003eDescription\u003c/li\u003e\u003cli\u003eVisible on Storefront\u003c/li\u003e\u003cli\u003eSort Order\u003c/li\u003e\u003cli\u003eCategories\u003c/li\u003e\u003cli\u003eProduct URL\u003c/li\u003e\u003cli\u003eSet as a Featured Product on my Storefront\u003c/li\u003e\u003c/ul\u003e\r\n\r\n        Fields that do not trigger event\u003cul\u003e\u003cli\u003eManufacturer Part Number (MPN)\u003c/li\u003e\u003cli\u003eGlobal Trade Number (GTN)\u003c/li\u003e\u003cli\u003eTax Provider Tax Code\u003c/li\u003e\u003cli\u003eProduct Image\u003c/li\u003e\u003cli\u003eProduct Image Description\u003c/li\u003e\u003cli\u003eProduct Files\u003c/li\u003e\u003cli\u003eCustoms Information\u003c/li\u003e\u003c/ul\u003e\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/product/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"product\",\r\n            \"id\": 205\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `product`\r\n                  default: product\r\n                  example: product\r\n                id:\r\n                  type: integer\r\n                  description: ID of the product\r\n                  example: 205\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_product_inventory_updated:\r\n      title: store/product/inventory/updated\r\n      description: |-\r\n        This webhook fires when product inventory is updated. \u003cbr\u003e\u003cbr\u003eChanges to the following fields trigger this event: \u003cul\u003e\u003cli\u003eInventory Stock\u003c/li\u003e\u003c/ul\u003eFields that do not trigger event: \u003cul\u003e\u003cli\u003eTrack Inventory\u003c/li\u003e\u003cli\u003eInventory Low Stock\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/product/inventory/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"product\",\r\n            \"id\": 167,\r\n            \"inventory\": {\r\n              \"product_id\": 167,\r\n              \"method\": \"absolute\",\r\n              \"value\": 2\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `product`\r\n                  example: product\r\n                id:\r\n                  type: integer\r\n                  description: ID of the product\r\n                  example: 167\r\n                inventory:\r\n                  type: object\r\n                  properties:\r\n                    product_id:\r\n                      type: integer\r\n                      description: ID of the product\r\n                      example: 167\r\n                    method:\r\n                      type: string\r\n                      description: |-\r\n                        How the inventory was adjusted. Value will be one of the following:\r\n                        - `absolute` - inventory updated using the API or the control panel\r\n                        - `relative` - inventory updated by an order\r\n                      enum:\r\n                        - absolute\r\n                        - relative\r\n                    value:\r\n                      type: integer\r\n                      description: 'This value is the difference between an item’s inventory count before and after the inventory updates. This value is negative if an item’s inventory count decreases. For example, reducing inventory by three returns a value of `-3`. This value is positive if an item’s inventory count increases. For example, returning two items to the inventory returns a value of `2`.'\r\n                      example: 2\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_product_inventory_order_updated:\r\n      title: store/product/inventory/order/updated\r\n      description: |-\r\n        This webhook fires if a product’s inventory increases or decreases. \u003cbr\u003e\u003cbr\u003eFields that trigger event: \u003cul\u003e\u003cli\u003eQuantity\u003c/li\u003e\u003c/ul\u003e\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/product/inventory/order/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"product\",\r\n            \"id\": 167,\r\n            \"inventory\": {\r\n              \"product_id\": 167,\r\n              \"method\": \"absolute\",\r\n              \"value\": 2\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `product`\r\n                  example: product\r\n                id:\r\n                  type: integer\r\n                  description: ID of the product\r\n                  example: 167\r\n                inventory:\r\n                  type: object\r\n                  properties:\r\n                    product_id:\r\n                      type: integer\r\n                      description: ID of the product\r\n                      example: 167\r\n                    method:\r\n                      type: string\r\n                      description: |-\r\n                        How the inventory was adjusted. Value will be one of the following:\r\n                        - `absolute` - inventory updated using the API or the control panel\r\n                        - `relative` - inventory updated by an order\r\n                      enum:\r\n                        - absolute\r\n                        - relative\r\n                    value:\r\n                      type: integer\r\n                      description: 'This value is the difference between an item’s inventory count before and after the inventory updates. This value is negative if an item’s inventory count decreases. For example, reducing inventory by three returns a value of `-3`. This value is positive if an item’s inventory count increases. For example, returning two items to the inventory returns a value of `2`.'\r\n                      example: 2\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_shipment_wildcard:\r\n      title: store/shipment/*\r\n      description: Subscribe to all store/shipment events\r\n      type: object\r\n      x-internal: false\r\n    store_shipment_created:\r\n      title: store/shipment/created\r\n      description: |-\r\n        This webhook fires when a shipment is created.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/shipment/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"shipment\",\r\n            \"id\": 12,\r\n            \"orderId\": 251\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `shipment`\r\n                  example: shipment\r\n                id:\r\n                  type: integer\r\n                  description: ID of the shipment\r\n                  example: 12\r\n                orderId:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 251\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_shipment_updated:\r\n      title: store/shipment/updated\r\n      description: |-\r\n        This webhook fires when a shipment is updated.\r\n\r\n        Fields that trigger event:\u003cul\u003e\u003cli\u003eShipping Tracking Number\u003c/li\u003e\u003c/ul\u003e\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/shipment/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"shipment\",\r\n            \"id\": 12,\r\n            \"orderId\": 251\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `shipment`\r\n                  example: shipment\r\n                id:\r\n                  type: integer\r\n                  description: ID of the shipment\r\n                  example: 12\r\n                orderId:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 251\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_shipment_deleted:\r\n      title: store/shipment/deleted\r\n      description: |-\r\n        This webhook fires when a shipment is deleted.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/shipment/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"shipment\",\r\n            \"id\": 12,\r\n            \"orderId\": 251\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `shipment`\r\n                  example: shipment\r\n                id:\r\n                  type: integer\r\n                  description: ID of the shipment\r\n                  example: 12\r\n                orderId:\r\n                  type: integer\r\n                  description: ID of the order\r\n                  example: 251\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_sku_wildcard:\r\n      title: store/sku/*\r\n      description: Subscribe to all `store/sku` events\r\n      type: object\r\n      x-internal: false\r\n    store_sku_created:\r\n      title: store/sku/created\r\n      description: |-\r\n        This webhook fires when a new SKU is created.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/sku/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"sku\",\r\n            \"id\": 461,\r\n            \"sku\": {\r\n              \"product_id\": 206,\r\n              \"variant_id\": 509\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `\"sku\"`\r\n                  example: sku\r\n                id:\r\n                  type: integer\r\n                  description: ID of the SKU\r\n                  example: 461\r\n                sku:\r\n                  type: object\r\n                  properties:\r\n                    product_id:\r\n                      type: integer\r\n                      description: ID of the product\r\n                      example: 206\r\n                    variant_id:\r\n                      type: integer\r\n                      description: ID of the variant\r\n                      example: 509\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_sku_updated:\r\n      title: store/sku/updated\r\n      description: |-\r\n        This webhook fires when a SKU is updated.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/sku/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"sku\",\r\n            \"id\": 461,\r\n            \"sku\": {\r\n              \"product_id\": 206,\r\n              \"variant_id\": 509\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `\"sku\"`\r\n                  example: sku\r\n                id:\r\n                  type: integer\r\n                  description: ID of the SKU\r\n                  example: 461\r\n                sku:\r\n                  type: object\r\n                  properties:\r\n                    product_id:\r\n                      type: integer\r\n                      description: ID of the product\r\n                      example: 206\r\n                    variant_id:\r\n                      type: integer\r\n                      description: ID of the variant\r\n                      example: 509\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_sku_deleted:\r\n      title: store/sku/deleted\r\n      description: |-\r\n        This webhook fires when a SKU is deleted.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/sku/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"sku\",\r\n            \"id\": 461,\r\n            \"sku\": {\r\n              \"product_id\": 206,\r\n              \"variant_id\": 509\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `\"sku\"`\r\n                  example: sku\r\n                id:\r\n                  type: integer\r\n                  description: ID of the SKU\r\n                  example: 461\r\n                sku:\r\n                  type: object\r\n                  properties:\r\n                    product_id:\r\n                      type: integer\r\n                      description: ID of the product\r\n                      example: 206\r\n                    variant_id:\r\n                      type: integer\r\n                      description: ID of the variant\r\n                      example: 509\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_sku_inventory_updated:\r\n      title: store/sku/inventory/updated\r\n      description: |-\r\n        This webhook fires when a SKU is updated.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/sku/inventory/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"sku\",\r\n            \"id\": 461,\r\n            \"inventory\": {\r\n              \"product_id\": 167,\r\n              \"method\": \"absolute\",\r\n              \"value\": 2,\r\n              \"variant_id\": 509\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `sku`\r\n                  example: sku\r\n                id:\r\n                  type: integer\r\n                  description: ID of the SKU\r\n                  example: 461\r\n                inventory:\r\n                  type: object\r\n                  properties:\r\n                    product_id:\r\n                      type: integer\r\n                      description: ID of the product\r\n                      example: 167\r\n                    method:\r\n                      type: string\r\n                      description: |-\r\n                        How the inventory was adjusted. Value will be one of the following:\r\n                        - `absolute` - inventory updated by an order\r\n                        - `relative` - inventory updated using the API or the control panel\r\n                      enum:\r\n                        - absolute\r\n                        - relative\r\n                    value:\r\n                      type: integer\r\n                      description: 'the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'\r\n                      example: 2\r\n                    variant_id:\r\n                      type: integer\r\n                      description: ID of the variant\r\n                      example: 509\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_sku_inventory_order_updated:\r\n      title: store/sku/inventory/order/updated\r\n      description: |-\r\n        This webhook fires when the inventory is updated.\u003cbr\u003e\u003cbr\u003eFields that trigger event:\u003cul\u003e\u003cli\u003eQuantity\u003c/li\u003e\u003c/ul\u003e\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/sku/inventory/order/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"sku\",\r\n            \"id\": 461,\r\n            \"inventory\": {\r\n              \"product_id\": 167,\r\n              \"method\": \"absolute\",\r\n              \"value\": 2,\r\n              \"variant_id\": 509\r\n            }\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `sku`\r\n                  example: sku\r\n                id:\r\n                  type: integer\r\n                  description: ID of the SKU\r\n                  example: 461\r\n                inventory:\r\n                  type: object\r\n                  properties:\r\n                    product_id:\r\n                      type: integer\r\n                      description: ID of the product\r\n                      example: 167\r\n                    method:\r\n                      type: string\r\n                      description: |-\r\n                        How the inventory was adjusted. Value will be one of the following:\r\n                        - `absolute` - inventory updated by an order\r\n                        - `relative` - inventory updated using the API or the control panel\r\n                      enum:\r\n                        - absolute\r\n                        - relative\r\n                    value:\r\n                      type: integer\r\n                      description: 'the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'\r\n                      example: 2\r\n                    variant_id:\r\n                      type: integer\r\n                      description: ID of the variant\r\n                      example: 509\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_app_uninstalled:\r\n      title: store/app/uninstalled\r\n      description: |-\r\n        This webhook fires when a client store is canceled and uninstalled from the platform.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/app/uninstalled\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"store\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: will always be `store`\r\n                  example: store\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_information_updated:\r\n      title: store/information/updated\r\n      description: |-\r\n        This webhook fires when changes are made to store settings. \r\n\r\n        Changes to the following fields trigger this event:\r\n\r\n        \u003cul\u003e\u003cli\u003eStore Name\u003c/li\u003e\u003cli\u003eStore Address\u003c/li\u003e\u003cli\u003eStore Country\u003c/li\u003e\u003cli\u003eAddress Type\u003c/li\u003e\u003cli\u003eEmail\u003c/li\u003e\u003cli\u003ePhone\u003c/li\u003e\u003c/ul\u003e\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/information/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"store\"\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: ''\r\n                  example: store\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_subscriber_wildcard:\r\n      title: store/subscriber/*\r\n      description: Subscribe to all `store/subscriber` events\r\n      type: object\r\n      x-internal: false\r\n    store_subscriber_created:\r\n      title: store/subscriber/created\r\n      description: |-\r\n        This webhook fires when a subscriber is created. \r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/subscriber/created\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"subscriber\",\r\n            \"id\": 5\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `subscriber`\r\n                  example: subscriber\r\n                id:\r\n                  type: integer\r\n                  description: ID of the subscriber\r\n                  example: 5\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_subscriber_updated:\r\n      title: store/subscriber/updated\r\n      description: |-\r\n        The webhook fires when a subscriber is updated. \r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/subscriber/updated\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"subscriber\",\r\n            \"id\": 5\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `subscriber`\r\n                  example: subscriber\r\n                id:\r\n                  type: integer\r\n                  description: ID of the subscriber\r\n                  example: 5\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    store_subscriber_deleted:\r\n      title: store/subscriber/deleted\r\n      description: |-\r\n        This webhook fires when a subscriber is deleted.\r\n\r\n        ```json title=\"Example callback object\" lineNumbers\r\n        {\r\n          \"created_at\": 1561482670,\r\n          \"store_id\": \"1025646\",\r\n          \"producer\": \"stores/{store_hash}\",\r\n          \"scope\": \"store/subscriber/deleted\",\r\n          \"hash\": \"352e4afc6dd3fc85ea26bfdf3f91852604d57528\",\r\n          \"data\": {\r\n            \"type\": \"subscriber\",\r\n            \"id\": 5\r\n          }\r\n        }\r\n        ```\r\n\r\n      x-examples: {}\r\n      allOf:\r\n        - $ref: '#/components/schemas/webhook_callback_base'\r\n        - description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            data:\r\n              type: object\r\n              description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n              properties:\r\n                type:\r\n                  type: string\r\n                  description: Will always be `subscriber`\r\n                  example: subscriber\r\n                id:\r\n                  type: integer\r\n                  description: ID of the subscriber\r\n                  example: 5\r\n      x-tags:\r\n        - created\r\n      type: object\r\n      x-internal: false\r\n    error_Full:\r\n      type: object\r\n      title: error_Full\r\n      properties:\r\n        status:\r\n          description: |\r\n            The HTTP status code.\r\n          type: integer\r\n        title:\r\n          description: |\r\n            The error title describing the particular error.\r\n          type: string\r\n        type:\r\n          description: Typically a link to BigCommerce API Status codes\r\n          type: string\r\n      x-internal: false\r\n    errorDetailed_Full:\r\n      type: object\r\n      title: errorDetailed_Full\r\n      properties:\r\n        status:\r\n          description: |\r\n            The HTTP status code.\r\n          type: integer\r\n        title:\r\n          description: |\r\n            The error title describing the particular error.\r\n          type: string\r\n        type:\r\n          description: Typically a link to BigCommerce API Status codes\r\n          type: string\r\n        errors:\r\n          type: object\r\n      x-internal: false\r\n    webhook_Base:\r\n      type: object\r\n      title: webhook_Base\r\n      x-internal: false\r\n      properties:\r\n        scope:\r\n          type: string\r\n          example: store/order/*\r\n          description: Event you subscribe to\r\n        destination:\r\n          type: string\r\n          example: 'https://665b65a6.ngrok.io/webhooks'\r\n          description: 'URL must be active, return a 200 response, and be served on port 443 (custom ports not currently supported).'\r\n        is_active:\r\n          type: boolean\r\n          example: true\r\n          description: If webhook is active or not\r\n        events_history_enabled:\r\n          type: boolean\r\n          example: true\r\n          description: Identifies whether events are stored that could not be received.\r\n        headers:\r\n          type: object\r\n          description: 'You can pass in any number of custom headers to validate webhooks being returned. '\r\n          nullable: true\r\n          properties:\r\n            custom:\r\n              type: string\r\n      required:\r\n        - scope\r\n        - destination\r\n        - headers\r\n    webhook_Full:\r\n      allOf:\r\n        - type: object\r\n          properties:\r\n            id:\r\n              type: integer\r\n              description: Id of the webhook\r\n              example: 18048287\r\n            client_id:\r\n              type: string\r\n              description: 'Client ID, unique to the store'\r\n              example: m9r6keqmo7h7f23btnpwernbez1kglkl\r\n            store_hash:\r\n              type: string\r\n              description: 'Store permanent ID. '\r\n              example: sftg45fsd\r\n            created_at:\r\n              type: integer\r\n              example: 1561488106\r\n              description: Created time\r\n            updated_at:\r\n              type: integer\r\n              example: 1561488106\r\n              description: Updated time\r\n        - $ref: '#/components/schemas/webhook_Base'\r\n      title: webhook_Full\r\n      x-internal: false\r\n    HistoryEvent:\r\n      type: object\r\n      properties:\r\n        scope:\r\n          type: string\r\n          description: Alias where the event occurred.\r\n        store_id:\r\n          type: string\r\n          description: A numerical identifier that is unique to each store.\r\n        data:\r\n          type: object\r\n          description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n        hash:\r\n          type: string\r\n          description: The payload data json encoded then passed through SH1 encryption.\r\n        created_at:\r\n          type: integer\r\n          format: int64\r\n          description: UTC timestamp in seconds that the events was created.\r\n        producer:\r\n          type: string\r\n          description: Will always follow the pattern stores/store_hash. This is the store that created the webhook.\r\n    Pagination:\r\n      type: object\r\n      description: |\r\n        Data about the response, including pagination and collection totals.\r\n      properties:\r\n        total:\r\n          type: integer\r\n          description: Total number of returned items across all pages.\r\n        count:\r\n          type: integer\r\n          description: Number of items on current page.\r\n        per_page:\r\n          type: integer\r\n          description: Maximum number of items per page.\r\n        current_page:\r\n          type: integer\r\n          description: Current page number.\r\n        total_pages:\r\n          type: integer\r\n          description: Total number of pages.\r\n        links:\r\n          type: object\r\n          properties:\r\n            previous:\r\n              type: string\r\n              description: Link to the previous page returned in the response.\r\n            current:\r\n              type: string\r\n              description: Link to the current page returned in the response.\r\n            next:\r\n              type: string\r\n              description: Link to the next page returned in the response.\r\n      x-internal: false\r\n    webhook_callback_base:\r\n      description: ''\r\n      x-examples:\r\n        example-1:\r\n          created_at: 1561482670\r\n          store_id: '1025646'\r\n          producer: 'stores/{store_hash}'\r\n          scope: store/cart/created\r\n          hash: 352e4afc6dd3fc85ea26bfdf3f91852604d57528\r\n      title: ''\r\n      allOf:\r\n        - properties:\r\n            created_at:\r\n              type: integer\r\n              example: 1561482670\r\n              description: Hook creation date as a Unix timestamp.\r\n              readOnly: true\r\n            store_id:\r\n              type: string\r\n              minLength: 1\r\n              example: '1025646'\r\n              description: A numerical identifier that is unique to each store.\r\n            producer:\r\n              type: string\r\n              minLength: 1\r\n              example: 'stores/{store_hash}'\r\n              description: Will always follow the pattern `stores/store_hash`. This is the store that created the webhook.\r\n            scope:\r\n              type: string\r\n              minLength: 1\r\n              example: store/cart/created\r\n              description: The event registered when the webhook was created.\r\n            hash:\r\n              type: string\r\n              minLength: 1\r\n              example: 352e4afc6dd3fc85ea26bfdf3f91852604d57528\r\n              description: The payload data JSON encoded then passed through SH1 encryption.\r\n      type: object\r\n      x-internal: false\r\n    callback_category_data:\r\n      title: callback_category_data\r\n      type: object\r\n      description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n      properties:\r\n        data:\r\n          type: object\r\n          description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.\r\n          properties:\r\n            type:\r\n              type: string\r\n              description: will always be `category`\r\n              default: category\r\n            id:\r\n              type: integer\r\n              description: ID of the category\r\n              example: 42\r\n      x-internal: false\r\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@3d4f475bfa35fa63397a69165530f47d4d8b3703/-/blob/reference/webhooks.v3.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/3d4f475bfa35fa63397a69165530f47d4d8b3703/reference/webhooks.v3.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}