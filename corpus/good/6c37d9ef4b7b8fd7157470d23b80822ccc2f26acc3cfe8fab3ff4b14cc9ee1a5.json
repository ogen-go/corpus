{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubeshop/kusk-gateway"
		},
		"file": {
			"name": "gateway_v1_api.yaml",
			"size": 0,
			"path": "config/samples/gateway_v1_api.yaml",
			"byteSize": 11331,
			"content": "apiVersion: gateway.kusk.io/v1alpha1\nkind: API\nmetadata:\n  name: api-sample\nspec:\n  fleet:\n    name: default\n    namespace: default\n  # service name and port should be specified inside x-kusk annotation\n  spec: |\n    openapi: 3.0.2\n    servers:\n      - url: /api/v3\n    info:\n      description: |-\n        This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\n        Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\n        You can now help us improve the API whether it's by making changes to the definition itself or to the code.\n        That way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n        Some useful links:\n        - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n        - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\n      version: 1.0.6\n      title: Swagger Petstore - OpenAPI 3.0\n      termsOfService: 'http://swagger.io/terms/'\n      contact:\n        email: apiteam@swagger.io\n      license:\n        name: Apache 2.0\n        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n    tags:\n      - name: pet\n        description: Everything about your Pets\n        externalDocs:\n          description: Find out more\n          url: 'http://swagger.io'\n      - name: store\n        description: Operations about user\n      - name: user\n        description: Access to Petstore orders\n        externalDocs:\n          description: Find out more about our store\n          url: 'http://swagger.io'\n    x-kusk:\n      disabled: false\n      cors:\n        origins:\n        - \"*\"\n        methods:\n        - POST\n        - GET\n        - OPTIONS\n        headers:\n        - Content-Type\n        credentials: true\n        expose_headers:\n        - X-Custom-Header1\n        - X-Custom-Header2\n        max_age: 86200\n      upstream:\n        service:\n          name: petstore\n          namespace: default\n          port: 80\n      path:\n        prefix: /petstore/api/v3\n        # Strips prefix when forwarding to upstream\n        rewrite:\n          pattern: \"^/petstore\"\n          substitution: \"\"\n    paths:\n      /pet:\n        x-kusk:\n          disabled: true\n        post:\n          x-kusk:\n            disabled: false\n            upstream:\n              host:\n                hostname: petstore1.default1.svc.cluster.local\n                port: 8080\n          tags:\n            - pet\n          summary: Add a new pet to the store\n          description: Add a new pet to the store\n          operationId: addPet\n          responses:\n            '200':\n              description: Successful operation\n              content:\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n            '405':\n              description: Invalid input\n          security:\n            - petstore_auth:\n                - 'write:pets'\n                - 'read:pets'\n          requestBody:\n            description: Create a new pet in the store\n            required: true\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n              application/xml:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n              application/x-www-form-urlencoded:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n        put:\n          tags:\n            - pet\n          summary: Update an existing pet\n          description: Update an existing pet by Id\n          operationId: updatePet\n          responses:\n            '200':\n              description: Successful operation\n              content:\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Pet not found\n            '405':\n              description: Validation exception\n          security:\n            - petstore_auth:\n                - 'write:pets'\n                - 'read:pets'\n          requestBody:\n            description: Update an existent pet in the store\n            required: true\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n              application/xml:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n              application/x-www-form-urlencoded:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n      /pet/findByStatus:\n        get:\n          tags:\n            - pet\n          summary: Finds Pets by status\n          description: Multiple status values can be provided with comma separated strings\n          operationId: findPetsByStatus\n          parameters:\n            - name: status\n              in: query\n              description: Status values that need to be considered for filter\n              required: false\n              explode: true\n              schema:\n                type: string\n                enum:\n                  - available\n                  - pending\n                  - sold\n                default: available\n          responses:\n            '200':\n              description: successful operation\n              content:\n                application/xml:\n                  schema:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Pet'\n                application/json:\n                  schema:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Pet'\n            '400':\n              description: Invalid status value\n          security:\n            - petstore_auth:\n                - 'write:pets'\n                - 'read:pets'\n      '/pet/{petId}':\n        get:\n          x-kusk:\n            disabled: false\n            cors:\n              origins:\n              - \"http://example.com\"\n              methods:\n                - POST\n                - GET\n                - OPTIONS\n              headers:\n                - Content-Type\n              credentials: true\n              expose_headers:\n                - X-Custom-Header3\n              max_age: 86300\n            qos:\n              request_timeout: 10\n              idle_timeout: 40\n              retries: 5\n          tags:\n            - pet\n          summary: Find pet by ID\n          description: Returns a single pet\n          operationId: getPetById\n          parameters:\n            - name: petId\n              in: path\n              description: ID of pet to return\n              required: true\n              schema:\n                type: integer\n                format: int64\n          responses:\n            '200':\n              description: successful operation\n              content:\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Pet not found\n          security:\n            - api_key: []\n            - petstore_auth:\n                - 'write:pets'\n                - 'read:pets'\n        post:\n          tags:\n            - pet\n          summary: Updates a pet in the store with form data\n          description: ''\n          operationId: updatePetWithForm\n          parameters:\n            - name: petId\n              in: path\n              description: ID of pet that needs to be updated\n              required: true\n              schema:\n                type: integer\n                format: int64\n            - name: name\n              in: query\n              description: Name of pet that needs to be updated\n              schema:\n                type: string\n            - name: status\n              in: query\n              description: Status of pet that needs to be updated\n              schema:\n                type: string\n          responses:\n            '405':\n              description: Invalid input\n          security:\n            - petstore_auth:\n                - 'write:pets'\n                - 'read:pets'\n    externalDocs:\n      description: Find out more about Swagger\n      url: 'http://swagger.io'\n    components:\n      schemas:\n        Category:\n          properties:\n            id:\n              type: integer\n              format: int64\n              example: 1\n            name:\n              type: string\n              example: Dogs\n          xml:\n            name: category\n          type: object\n        Tag:\n          properties:\n            id:\n              type: integer\n              format: int64\n            name:\n              type: string\n          xml:\n            name: tag\n          type: object\n        Pet:\n          required:\n            - name\n            - photoUrls\n          properties:\n            id:\n              type: integer\n              format: int64\n              example: 10\n            name:\n              type: string\n              example: doggie\n            category:\n              $ref: '#/components/schemas/Category'\n            photoUrls:\n              type: array\n              xml:\n                wrapped: true\n              items:\n                type: string\n                xml:\n                  name: photoUrl\n            tags:\n              type: array\n              xml:\n                wrapped: true\n              items:\n                $ref: '#/components/schemas/Tag'\n                xml:\n                  name: tag\n            status:\n              type: string\n              description: pet status in the store\n              enum:\n                - available\n                - pending\n                - sold\n          xml:\n            name: pet\n          type: object\n        ApiResponse:\n          properties:\n            code:\n              type: integer\n              format: int32\n            type:\n              type: string\n            message:\n              type: string\n          xml:\n            name: '##default'\n          type: object\n      requestBodies:\n        Pet:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Pet'\n          description: Pet object that needs to be added to the store\n      securitySchemes:\n        petstore_auth:\n          type: oauth2\n          flows:\n            implicit:\n              authorizationUrl: 'https://petstore.swagger.io/oauth/authorize'\n              scopes:\n                'write:pets': modify pets in your account\n                'read:pets': read your pets\n        api_key:\n          type: apiKey\n          name: api_key\n          in: header\n",
			"canonicalURL": "/github.com/kubeshop/kusk-gateway@71d8a6c204f833b6e837095bdd2bb340290906af/-/blob/config/samples/gateway_v1_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kubeshop/kusk-gateway/blob/71d8a6c204f833b6e837095bdd2bb340290906af/config/samples/gateway_v1_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}