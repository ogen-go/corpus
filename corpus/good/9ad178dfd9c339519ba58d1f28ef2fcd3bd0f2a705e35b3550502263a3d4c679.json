{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stichtingsem/technology-prototype"
		},
		"file": {
			"name": "webhooks.v1.yaml",
			"size": 0,
			"path": "reference/webhooks.v1.yaml",
			"byteSize": 4144,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://example.stichtingsem.org/api'\ninfo:\n  description: |-\n    The proposed architecture for the new ecosystem is based on an Event model, where each provider of data to the ecosystem provides a mechanism for other participants to securely subscribe to events that are of interest to them.\n\n    The Webhook API is the mechanism, in conjunction with the Event API, that enables this event based notification mechanism to function reliably.  It enables subscribers to create a webhook registration with the provider, so that the provider can send a POST to the provided URL when an event occurs.\n\n    This forms the 'near real time' element of the architecture, and enables subscribers to retrieve information on all changes immediately, while still retaining full control of when that data will be subsequently processed.\n\n    Notes:\n      - Ideally you would have one webhook registration per subscriber, but we should allow for multiple.\n      - It should be possible to filter to only events you are interested in as part of the configuration, to avoid sending events that then need to be discarded.\n      - Event filters should automatically be applied aligned with oauth scopes in place for the subscriber - e.g. don't allow events to go to a subscriber for entities that they are not allowed to access.  This restriction will be defined in the API specification for each service.\n  version: 1.0.0\n  title: Generic Web Hook API\n  contact:\n    email: clifton@infinitaslearning.com\n  license:\n    name: MIT\n    url: 'https://opensource.org/licenses/MIT'\ntags:\n  - name: webhooks\n    description: Operations related to webhook management\npaths:\n  /webhook:\n    get:\n      tags:\n        - webhooks\n      summary: Retrieve list of webhooks\n      description: retrieves list of webhooks registered\n      operationId: listWebhooks\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhooks'\n    post:\n      tags:\n        - webhooks\n      description: creates or updates a webhook\n      operationId: createUpdateWebhook\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/webhook'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhook'\n  '/webhook/{webhookId}':\n    get:\n      tags:\n        - webhooks\n      summary: Retrieve webhook by ID\n      description: retrieves specific of webhook\n      operationId: getWebhook\n      parameters:\n        - name: webhookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhook'\n    delete:\n      tags:\n        - webhooks\n      description: deletes a webhook\n      operationId: deleteWebhook\n      parameters:\n        - name: webhookId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\ncomponents:\n  schemas:\n    webhooks:\n      type: array\n      items:\n        $ref: '#/components/schemas/webhook'\n      x-tags:\n        - webhooks\n    webhook:\n      type: object\n      required:\n        - id\n        - url\n        - enabled_events\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        url:\n          type: string\n          description: The url that will be called when any of the subscribed events occur\n          example: 'http://lms.nl/api/webhook'\n        enabled_events:\n          type: array\n          description: Allow filtering of events that should be sent to this endpoint\n          items:\n            type: string\n          example:\n            - 'la:usage'\n            - 'la:results'\n      x-tags:\n        - webhooks\n",
			"canonicalURL": "/github.com/stichtingsem/technology-prototype@3bf27b60f5566865821b0496df27c73dc3e3c5e2/-/blob/reference/webhooks.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stichtingsem/technology-prototype/blob/3bf27b60f5566865821b0496df27c73dc3e3c5e2/reference/webhooks.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}