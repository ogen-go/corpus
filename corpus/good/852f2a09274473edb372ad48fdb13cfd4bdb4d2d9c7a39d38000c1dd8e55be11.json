{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mtwichel/backbone"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "packages/backbone_cli/example/openapi.yaml",
			"byteSize": 3805,
			"content": "openapi: 3.0.3\ninfo:\n  title: Pets Api\n  version: 1.0.0\n  description: API for managing pets in each family\npaths:\n  /v1/pets/{petId}/images:\n    parameters:\n      - name: petId\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: uploadImage\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                  description: Image file to upload\n\n      responses:\n        \"200\":\n          description: Successfully uploaded image\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    description: Unique identifier of the image\n\n  \"/v1/pets\":\n    get:\n      operationId: listPets\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListPetsResponse\"\n\n    post:\n      operationId: createPet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CreatePetResponse\"\n      security:\n        - petsApiAuth: []\n\n  \"/v1/pets/{petId}\":\n    parameters:\n      - name: petId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: getPet\n      parameters:\n        - name: test\n          in: header\n          required: true\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: A successful pet response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pet:\n                    $ref: \"#/components/schemas/Pet\"\n                required:\n                  - pet\n    put:\n      operationId: updatePet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        \"200\":\n          description: A successful update pet response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pet:\n                    $ref: \"#/components/schemas/Pet\"\n                required:\n                  - pet\n\ncomponents:\n  responses:\n    ListPetsResponse:\n      description: A successful list pets response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              pets:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            required:\n              - pets\n    CreatePetResponse:\n      description: A successful create pets response\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n  requestBodies:\n    CreatePetRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n  schemas:\n    Pet:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        age:\n          type: integer\n        type:\n          $ref: \"#/components/schemas/PetType\"\n        other-names:\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - type\n        - other-names\n\n    PetType:\n      type: string\n      enum:\n        - Cat\n        - Dog\n        - Fish\n\n  securitySchemes:\n    petsApiAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/mtwichel/backbone@975b75d5c6ce1a629960a24353c3012255502ef0/-/blob/packages/backbone_cli/example/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mtwichel/backbone/blob/975b75d5c6ce1a629960a24353c3012255502ef0/packages/backbone_cli/example/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}