{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/traccar.org/4.14/openapi.yaml",
			"byteSize": 58278,
			"content": "openapi: 3.0.1\nservers:\n  - description: Demo Server 1\n    url: https://demo.traccar.org/api\n  - description: Demo Server 2\n    url: https://demo2.traccar.org/api\n  - description: Demo Server 3\n    url: https://demo3.traccar.org/api\n  - description: Subscription Server\n    url: https://server.traccar.org/api\n  - description: Other Server\n    url: http://{host}:{port}/api\n    variables:\n      host:\n        default: localhost\n      port:\n        default: \"8082\"\n        enum:\n          - \"8082\"\n          - \"80\"\ninfo:\n  contact:\n    email: support@traccar.org\n    name: Traccar Support\n    url: https://www.traccar.org/\n  description: Open Source GPS Tracking Platform\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  title: Traccar\n  version: \"4.14\"\n  x-apisguru-categories:\n    - location\n  x-logo:\n    url: https://pbs.twimg.com/profile_images/590395195268538368/oScd6DxA_400x400.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/tananaev/traccar/master/swagger.json\n      version: \"3.0\"\n  x-providerName: traccar.org\nsecurity:\n  - basicAuth: []\ntags:\n  - description: Server information\n    name: Server\n  - description: User session management\n    name: Session\n  - description: Device management\n    name: Devices\n  - description: Group management\n    name: Groups\n  - description: User management\n    name: Users\n  - description: User permissions and other object linking\n    name: Permissions\n  - description: Retrieving raw location information\n    name: Positions\n  - description: Retrieving event information\n    name: Events\n  - description: Reports generation\n    name: Reports\n  - description: User notifications management\n    name: Notifications\n  - description: Geofence management\n    name: Geofences\n  - description: Sending commands to devices and stored command management\n    name: Commands\n  - description: Computed attributes management\n    name: Attributes\n  - description: Drivers management\n    name: Drivers\n  - description: Maintenance management\n    name: Maintenance\n  - description: Calendar management\n    name: Calendars\n  - description: Retrieving server statistics\n    name: Statistics\npaths:\n  /attributes/computed:\n    get:\n      description: Without params, it returns a list of Attributes the user has access to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _deviceId_s, they have access to\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _groupId_s, they have access to\n          in: query\n          name: groupId\n          schema:\n            type: integer\n        - in: query\n          name: refresh\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Attribute\"\n                type: array\n          description: OK\n      summary: Fetch a list of Attributes\n      tags:\n        - Attributes\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Attribute\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n          description: OK\n      summary: Create an Attribute\n      tags:\n        - Attributes\n      x-codegen-request-body-name: body\n  \"/attributes/computed/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete an Attribute\n      tags:\n        - Attributes\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Attribute\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n          description: OK\n      summary: Update an Attribute\n      tags:\n        - Attributes\n      x-codegen-request-body-name: body\n  /calendars:\n    get:\n      description: Without params, it returns a list of Calendars the user has access to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Calendar\"\n                type: array\n          description: OK\n      summary: Fetch a list of Calendars\n      tags:\n        - Calendars\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Calendar\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Calendar\"\n          description: OK\n      summary: Create a Calendar\n      tags:\n        - Calendars\n      x-codegen-request-body-name: body\n  \"/calendars/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Calendar\n      tags:\n        - Calendars\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Calendar\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Calendar\"\n          description: OK\n      summary: Update a Calendar\n      tags:\n        - Calendars\n      x-codegen-request-body-name: body\n  /commands:\n    get:\n      description: Without params, it returns a list of Saved Commands the user has access to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _deviceId_s, they have access to\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _groupId_s, they have access to\n          in: query\n          name: groupId\n          schema:\n            type: integer\n        - in: query\n          name: refresh\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Command\"\n                type: array\n          description: OK\n      summary: Fetch a list of Saved Commands\n      tags:\n        - Commands\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Command\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n          description: OK\n      summary: Create a Saved Command\n      tags:\n        - Commands\n      x-codegen-request-body-name: body\n  /commands/send:\n    get:\n      description: Return a list of saved commands linked to Device and its groups, filtered by current Device protocol support\n      parameters:\n        - description: Standard users can use this only with _deviceId_s, they have access to\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Command\"\n                type: array\n          description: OK\n        \"400\":\n          content: {}\n          description: Could happen when the user doesn't have permission for the device\n      summary: Fetch a list of Saved Commands supported by Device at the moment\n      tags:\n        - Commands\n    post:\n      description: Dispatch a new command or Saved Command if _body.id_ set\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Command\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n          description: Command sent\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n          description: Command queued\n        \"400\":\n          content: {}\n          description: Could happen when the user doesn't have permission or an incorrect command _type_ for the device\n      summary: Dispatch commands to device\n      tags:\n        - Commands\n      x-codegen-request-body-name: body\n  /commands/types:\n    get:\n      parameters:\n        - description: Internal device identifier. Only works if device has already reported some locations\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: Protocol name. Can be used instead of device id\n          in: query\n          name: protocol\n          schema:\n            type: string\n        - description: When `true` return SMS commands. If not specified or `false` return data commands\n          in: query\n          name: textChannel\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommandType\"\n                type: array\n          description: OK\n        \"400\":\n          content: {}\n          description: Could happen when trying to fetch from a device the user does not have permission\n      summary: Fetch a list of available Commands for the Device or all possible Commands if Device ommited\n      tags:\n        - Commands\n  \"/commands/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Saved Command\n      tags:\n        - Commands\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Command\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n          description: OK\n      summary: Update a Saved Command\n      tags:\n        - Commands\n      x-codegen-request-body-name: body\n  /devices:\n    get:\n      description: Without any params, returns a list of the user's devices\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n        - description: To fetch one or more devices. Multiple params can be passed like `id=31\u0026id=42`\n          in: query\n          name: id\n          schema:\n            type: integer\n        - description: To fetch one or more devices. Multiple params can be passed like `uniqueId=333331\u0026uniqieId=44442`\n          in: query\n          name: uniqueId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Device\"\n                type: array\n          description: OK\n        \"400\":\n          content: {}\n          description: No permission\n      summary: Fetch a list of Devices\n      tags:\n        - Devices\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Device\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n          description: OK\n      summary: Create a Device\n      tags:\n        - Devices\n      x-codegen-request-body-name: body\n  \"/devices/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Device\n      tags:\n        - Devices\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Device\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n          description: OK\n      summary: Update a Device\n      tags:\n        - Devices\n      x-codegen-request-body-name: body\n  \"/devices/{id}/accumulators\":\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceAccumulators\"\n        required: true\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Update total distance and hours of the Device\n      tags:\n        - Devices\n      x-codegen-request-body-name: body\n  /drivers:\n    get:\n      description: Without params, it returns a list of Drivers the user has access to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _deviceId_s, they have access to\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _groupId_s, they have access to\n          in: query\n          name: groupId\n          schema:\n            type: integer\n        - in: query\n          name: refresh\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Driver\"\n                type: array\n          description: OK\n      summary: Fetch a list of Drivers\n      tags:\n        - Drivers\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Driver\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Driver\"\n          description: OK\n      summary: Create a Driver\n      tags:\n        - Drivers\n      x-codegen-request-body-name: body\n  \"/drivers/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Driver\n      tags:\n        - Drivers\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Driver\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Driver\"\n          description: OK\n      summary: Update a Driver\n      tags:\n        - Drivers\n      x-codegen-request-body-name: body\n  \"/events/{id}\":\n    get:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Event\"\n          description: OK\n      tags:\n        - Events\n  /geofences:\n    get:\n      description: Without params, it returns a list of Geofences the user has access to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _deviceId_s, they have access to\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _groupId_s, they have access to\n          in: query\n          name: groupId\n          schema:\n            type: integer\n        - in: query\n          name: refresh\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Geofence\"\n                type: array\n          description: OK\n      summary: Fetch a list of Geofences\n      tags:\n        - Geofences\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Geofence\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Geofence\"\n          description: OK\n      summary: Create a Geofence\n      tags:\n        - Geofences\n      x-codegen-request-body-name: body\n  \"/geofences/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Geofence\n      tags:\n        - Geofences\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Geofence\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Geofence\"\n          description: OK\n      summary: Update a Geofence\n      tags:\n        - Geofences\n      x-codegen-request-body-name: body\n  /groups:\n    get:\n      description: Without any params, returns a list of the Groups the user belongs to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Group\"\n                type: array\n          description: OK\n      summary: Fetch a list of Groups\n      tags:\n        - Groups\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Group\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n          description: OK\n        \"400\":\n          content: {}\n          description: No permission\n      summary: Create a Group\n      tags:\n        - Groups\n      x-codegen-request-body-name: body\n  \"/groups/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Group\n      tags:\n        - Groups\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Group\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n          description: OK\n      summary: Update a Group\n      tags:\n        - Groups\n      x-codegen-request-body-name: body\n  /maintenance:\n    get:\n      description: Without params, it returns a list of Maintenance the user has access to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _deviceId_s, they have access to\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _groupId_s, they have access to\n          in: query\n          name: groupId\n          schema:\n            type: integer\n        - in: query\n          name: refresh\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Maintenance\"\n                type: array\n          description: OK\n      summary: Fetch a list of Maintenance\n      tags:\n        - Maintenance\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Maintenance\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Maintenance\"\n          description: OK\n      summary: Create a Maintenance\n      tags:\n        - Maintenance\n      x-codegen-request-body-name: body\n  \"/maintenance/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Maintenance\n      tags:\n        - Maintenance\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Maintenance\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Maintenance\"\n          description: OK\n      summary: Update a Maintenance\n      tags:\n        - Maintenance\n      x-codegen-request-body-name: body\n  /notifications:\n    get:\n      description: Without params, it returns a list of Notifications the user has access to\n      parameters:\n        - description: Can only be used by admins or managers to fetch all entities\n          in: query\n          name: all\n          schema:\n            type: boolean\n        - description: Standard users can use this only with their own _userId_\n          in: query\n          name: userId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _deviceId_s, they have access to\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: Standard users can use this only with _groupId_s, they have access to\n          in: query\n          name: groupId\n          schema:\n            type: integer\n        - in: query\n          name: refresh\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Notification\"\n                type: array\n          description: OK\n      summary: Fetch a list of Notifications\n      tags:\n        - Notifications\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Notification\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n          description: OK\n      summary: Create a Notification\n      tags:\n        - Notifications\n      x-codegen-request-body-name: body\n  /notifications/test:\n    post:\n      responses:\n        \"204\":\n          content: {}\n          description: Successful sending\n        \"400\":\n          content: {}\n          description: Could happen if sending has failed\n      summary: Send test notification to current user via Email and SMS\n      tags:\n        - Notifications\n  /notifications/types:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/NotificationType\"\n                type: array\n          description: OK\n      summary: Fetch a list of available Notification types\n      tags:\n        - Notifications\n  \"/notifications/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a Notification\n      tags:\n        - Notifications\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Notification\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n          description: OK\n      summary: Update a Notification\n      tags:\n        - Notifications\n      x-codegen-request-body-name: body\n  /permissions:\n    delete:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Permission\"\n        required: true\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Unlink an Object from another Object\n      tags:\n        - Permissions\n      x-codegen-request-body-name: body\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Permission\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Permission\"\n          description: OK\n        \"400\":\n          content: {}\n          description: No permission\n      summary: Link an Object to another Object\n      tags:\n        - Permissions\n      x-codegen-request-body-name: body\n  /positions:\n    get:\n      description: We strongly recommend using [Traccar WebSocket API](https://www.traccar.org/traccar-api/) instead of periodically polling positions endpoint. Without any params, it returns a list of last known positions for all the user's Devices. _from_ and _to_ fields are not required with _id_.\n      parameters:\n        - description: _deviceId_ is optional, but requires the _from_ and _to_ parameters when used\n          in: query\n          name: deviceId\n          schema:\n            type: integer\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          schema:\n            format: date-time\n            type: string\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          schema:\n            format: date-time\n            type: string\n        - description: To fetch one or more positions. Multiple params can be passed like `id=31\u0026id=42`\n          in: query\n          name: id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/gpx+xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n          description: OK\n      summary: Fetches a list of Positions\n      tags:\n        - Positions\n  /reports/events:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - explode: true\n          in: query\n          name: deviceId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - explode: true\n          in: query\n          name: groupId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - description: \"% can be used to return events of all types\"\n          explode: false\n          in: query\n          name: type\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          required: true\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Event\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Event\"\n                type: array\n          description: OK\n      summary: Fetch a list of Events within the time period for the Devices or Groups\n      tags:\n        - Reports\n  /reports/route:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - explode: true\n          in: query\n          name: deviceId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - explode: true\n          in: query\n          name: groupId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          required: true\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n          description: OK\n      summary: Fetch a list of Positions within the time period for the Devices or Groups\n      tags:\n        - Reports\n  /reports/stops:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - explode: true\n          in: query\n          name: deviceId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - explode: true\n          in: query\n          name: groupId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          required: true\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportStops\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportStops\"\n                type: array\n          description: OK\n      summary: Fetch a list of ReportStops within the time period for the Devices or Groups\n      tags:\n        - Reports\n  /reports/summary:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - explode: true\n          in: query\n          name: deviceId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - explode: true\n          in: query\n          name: groupId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          required: true\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportSummary\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportSummary\"\n                type: array\n          description: OK\n      summary: Fetch a list of ReportSummary within the time period for the Devices or Groups\n      tags:\n        - Reports\n  /reports/trips:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - explode: true\n          in: query\n          name: deviceId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - explode: true\n          in: query\n          name: groupId\n          schema:\n            items:\n              type: integer\n            type: array\n          style: form\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          required: true\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportTrips\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportTrips\"\n                type: array\n          description: OK\n      summary: Fetch a list of ReportTrips within the time period for the Devices or Groups\n      tags:\n        - Reports\n  /server:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n          description: OK\n      summary: Fetch Server information\n      tags:\n        - Server\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Server\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n          description: OK\n      summary: Update Server information\n      tags:\n        - Server\n      x-codegen-request-body-name: body\n  /session:\n    delete:\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Close the Session\n      tags:\n        - Session\n    get:\n      parameters:\n        - in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: OK\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Fetch Session information\n      tags:\n        - Session\n    post:\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                email:\n                  type: string\n                password:\n                  format: password\n                  type: string\n              required:\n                - email\n                - password\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n      summary: Create a new Session\n      tags:\n        - Session\n  /statistics:\n    get:\n      parameters:\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          required: true\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Statistics\"\n                type: array\n          description: OK\n      summary: Fetch server Statistics\n      tags:\n        - Statistics\n  /users:\n    get:\n      parameters:\n        - description: Can only be used by admin or manager users\n          in: query\n          name: userId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/User\"\n                type: array\n          description: OK\n        \"400\":\n          content: {}\n          description: No Permission\n      summary: Fetch a list of Users\n      tags:\n        - Users\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: OK\n      summary: Create a User\n      tags:\n        - Users\n      x-codegen-request-body-name: body\n  \"/users/{id}\":\n    delete:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n      summary: Delete a User\n      tags:\n        - Users\n    put:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: OK\n      summary: Update a User\n      tags:\n        - Users\n      x-codegen-request-body-name: body\ncomponents:\n  parameters:\n    all:\n      description: Can only be used by admins or managers to fetch all entities\n      in: query\n      name: all\n      schema:\n        type: boolean\n    deviceId:\n      description: Standard users can use this only with _deviceId_s, they have access to\n      in: query\n      name: deviceId\n      schema:\n        type: integer\n    deviceIdArray:\n      explode: true\n      in: query\n      name: deviceId\n      schema:\n        items:\n          type: integer\n        type: array\n      style: form\n    entityId:\n      in: path\n      name: id\n      required: true\n      schema:\n        type: integer\n    fromTime:\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      in: query\n      name: from\n      required: true\n      schema:\n        format: date-time\n        type: string\n    groupId:\n      description: Standard users can use this only with _groupId_s, they have access to\n      in: query\n      name: groupId\n      schema:\n        type: integer\n    groupIdArray:\n      explode: true\n      in: query\n      name: groupId\n      schema:\n        items:\n          type: integer\n        type: array\n      style: form\n    refresh:\n      in: query\n      name: refresh\n      schema:\n        type: boolean\n    toTime:\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      in: query\n      name: to\n      required: true\n      schema:\n        format: date-time\n        type: string\n    userId:\n      description: Standard users can use this only with their own _userId_\n      in: query\n      name: userId\n      schema:\n        type: integer\n  requestBodies:\n    Attribute:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Attribute\"\n      required: true\n    Calendar:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Calendar\"\n      required: true\n    Command:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Command\"\n      required: true\n    Device:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Device\"\n      required: true\n    Driver:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Driver\"\n      required: true\n    Geofence:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Geofence\"\n      required: true\n    Group:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Group\"\n      required: true\n    Maintenance:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Maintenance\"\n      required: true\n    Notification:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Notification\"\n      required: true\n    Permission:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Permission\"\n      required: true\n    User:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/User\"\n      required: true\n  schemas:\n    Attribute:\n      properties:\n        attribute:\n          type: string\n        description:\n          type: string\n        expression:\n          type: string\n        id:\n          type: integer\n        type:\n          description: String|Number|Boolean\n          type: string\n      type: object\n    Calendar:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        data:\n          description: base64 encoded in iCalendar format\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n      type: object\n    Command:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        description:\n          type: string\n        deviceId:\n          type: integer\n        id:\n          type: integer\n        type:\n          type: string\n      type: object\n    CommandType:\n      properties:\n        type:\n          type: string\n      type: object\n    Device:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        category:\n          type: string\n        contact:\n          type: string\n        disabled:\n          type: boolean\n        geofenceIds:\n          items:\n            type: integer\n          type: array\n        groupId:\n          type: integer\n        id:\n          type: integer\n        lastUpdate:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        model:\n          type: string\n        name:\n          type: string\n        phone:\n          type: string\n        positionId:\n          type: integer\n        status:\n          type: string\n        uniqueId:\n          type: string\n      type: object\n    DeviceAccumulators:\n      properties:\n        deviceId:\n          type: integer\n        hours:\n          type: number\n        totalDistance:\n          description: in meters\n          type: number\n      type: object\n    Driver:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        id:\n          type: integer\n        name:\n          type: string\n        uniqueId:\n          type: string\n      type: object\n    Event:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        deviceId:\n          type: integer\n        eventTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        geofenceId:\n          type: integer\n        id:\n          type: integer\n        maintenanceId:\n          type: integer\n        positionId:\n          type: integer\n        type:\n          type: string\n      type: object\n    Geofence:\n      properties:\n        area:\n          type: string\n        attributes:\n          properties: {}\n          type: object\n        calendarId:\n          type: integer\n        description:\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n      type: object\n    Group:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        groupId:\n          type: integer\n        id:\n          type: integer\n        name:\n          type: string\n      type: object\n    Maintenance:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        id:\n          type: integer\n        name:\n          type: string\n        period:\n          type: number\n        start:\n          type: number\n        type:\n          type: string\n      type: object\n    Notification:\n      properties:\n        always:\n          type: boolean\n        attributes:\n          properties: {}\n          type: object\n        calendarId:\n          type: integer\n        id:\n          type: integer\n        mail:\n          type: boolean\n        sms:\n          type: boolean\n        type:\n          type: string\n        web:\n          type: boolean\n      type: object\n    NotificationType:\n      properties:\n        type:\n          type: string\n      type: object\n    Permission:\n      description: \"This is a permission map that contain two object indexes. It is used to link/unlink objects. Order is important. Example: { deviceId:8, geofenceId: 16 }\"\n      properties:\n        attributeId:\n          description: Computed Attribute Id, can be second parameter only\n          type: integer\n        calendarId:\n          description: Calendar Id, can be second parameter only and only in combination with userId\n          type: integer\n        deviceId:\n          description: Device Id, can be first parameter or second only in combination with userId\n          type: integer\n        driverId:\n          description: Driver Id, can be second parameter only\n          type: integer\n        geofenceId:\n          description: Geofence Id, can be second parameter only\n          type: integer\n        groupId:\n          description: Group Id, can be first parameter or second only in combination with userId\n          type: integer\n        managedUserId:\n          description: User Id, can be second parameter only and only in combination with userId\n          type: integer\n        userId:\n          description: User Id, can be only first parameter\n          type: integer\n      type: object\n    Position:\n      properties:\n        accuracy:\n          type: number\n        address:\n          type: string\n        altitude:\n          type: number\n        attributes:\n          properties: {}\n          type: object\n        course:\n          type: number\n        deviceId:\n          type: integer\n        deviceTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        fixTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        id:\n          type: integer\n        latitude:\n          type: number\n        longitude:\n          type: number\n        network:\n          properties: {}\n          type: object\n        outdated:\n          type: boolean\n        protocol:\n          type: string\n        serverTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        speed:\n          description: in knots\n          type: number\n        valid:\n          type: boolean\n      type: object\n    ReportStops:\n      properties:\n        address:\n          type: string\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        duration:\n          type: integer\n        endTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        engineHours:\n          type: integer\n        lat:\n          type: number\n        lon:\n          type: number\n        spentFuel:\n          description: in liters\n          type: number\n        startTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n      type: object\n    ReportSummary:\n      properties:\n        averageSpeed:\n          description: in knots\n          type: number\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        distance:\n          description: in meters\n          type: number\n        engineHours:\n          type: integer\n        maxSpeed:\n          description: in knots\n          type: number\n        spentFuel:\n          description: in liters\n          type: number\n      type: object\n    ReportTrips:\n      properties:\n        averageSpeed:\n          description: in knots\n          type: number\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        distance:\n          description: in meters\n          type: number\n        driverName:\n          type: string\n        driverUniqueId:\n          type: integer\n        duration:\n          type: integer\n        endAddress:\n          type: string\n        endLat:\n          type: number\n        endLon:\n          type: number\n        endTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        maxSpeed:\n          description: in knots\n          type: number\n        spentFuel:\n          description: in liters\n          type: number\n        startAddress:\n          type: string\n        startLat:\n          type: number\n        startLon:\n          type: number\n        startTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n      type: object\n    Server:\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        bingKey:\n          type: string\n        coordinateFormat:\n          type: string\n        deviceReadonly:\n          type: boolean\n        forceSettings:\n          type: boolean\n        id:\n          type: integer\n        latitude:\n          type: number\n        limitCommands:\n          type: boolean\n        longitude:\n          type: number\n        map:\n          type: string\n        mapUrl:\n          type: string\n        poiLayer:\n          type: string\n        readonly:\n          type: boolean\n        registration:\n          type: boolean\n        twelveHourFormat:\n          type: boolean\n        version:\n          type: string\n        zoom:\n          type: integer\n      type: object\n    Statistics:\n      properties:\n        activeDevices:\n          type: integer\n        activeUsers:\n          type: integer\n        captureTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        messagesReceived:\n          type: integer\n        messagesStored:\n          type: integer\n        requests:\n          type: integer\n      type: object\n    User:\n      properties:\n        administrator:\n          type: boolean\n        attributes:\n          properties: {}\n          type: object\n        coordinateFormat:\n          type: string\n        deviceLimit:\n          type: integer\n        deviceReadonly:\n          type: boolean\n        disabled:\n          type: boolean\n        email:\n          type: string\n        expirationTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        id:\n          type: integer\n        latitude:\n          type: number\n        limitCommands:\n          type: boolean\n        longitude:\n          type: number\n        map:\n          type: string\n        name:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        poiLayer:\n          type: string\n        readonly:\n          type: boolean\n        token:\n          type: string\n        twelveHourFormat:\n          type: boolean\n        userLimit:\n          type: integer\n        zoom:\n          type: integer\n      type: object\n  securitySchemes:\n    basicAuth:\n      description: Basic HTTP authorization with _email_ and _password_\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/traccar.org/4.14/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/traccar.org/4.14/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}