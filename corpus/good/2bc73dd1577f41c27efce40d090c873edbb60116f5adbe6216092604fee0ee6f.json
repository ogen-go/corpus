{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/magento.async.customer/openapi.yml",
			"byteSize": 143497,
			"content": "openapi: 3.0.1\ninfo:\n  title: Magento Asynchronous Customer REST endpoints - All inclusive\n  version: 2.3.5\n  description: \u003e-\n    This is a generated connector for [Magento REST Asynchronous API v2.2](https://devdocs.magento.com/redoc/2.3/async-admin-rest-api.html) OpenAPI specification.\n    \n    The Magento Asynchronous Customer REST API service enables applications to build and manage the Magento e-commerce platform. \n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n \n    Follow [this guide](https://devdocs.magento.com/guides/v2.4/get-started/authentication/gs-authentication-token.html) and obtain tokens.\n  x-ballerina-display:\n    label: Magento Asynchronous Customer\n    iconPath: \"icon.png\"\n# servers:\n# - url: https://example.com/rest/default/async\ntags:\n- name: amazon-billing-address/{amazonOrderReferenceId}\n- name: amazon-shipping-address/{amazonOrderReferenceId}\n- name: amazon/order-ref\n- name: carts/guest-carts/{cartId}/giftCards\n- name: carts/guest-carts/{cartId}/giftCards/{giftCardCode}\n- name: carts/mine\n- name: carts/mine/balance/apply\n- name: carts/mine/collect-totals\n- name: carts/mine/payment-information\n- name: carts/mine/set-payment-information\n- name: customers\n- name: customers/isEmailAvailable\n- name: customers/me/activate\n- name: customers/me/password\n- name: customers/password\n- name: customers/resetPassword\n- name: giftregistry/mine/estimate-shipping-methods\n- name: guest-carts\n- name: guest-carts/{cartId}\n- name: guest-carts/{cartId}/billing-address\n- name: guest-carts/{cartId}/collect-totals\n- name: guest-carts/{cartId}/coupons\n- name: guest-carts/{cartId}/coupons/{couponCode}\n- name: guest-carts/{cartId}/estimate-shipping-methods\n- name: guest-carts/{cartId}/gift-message\n- name: guest-carts/{cartId}/gift-message/{itemId}\n- name: guest-carts/{cartId}/items\n- name: guest-carts/{cartId}/items/{itemId}\n- name: guest-carts/{cartId}/order\n- name: guest-carts/{cartId}/payment-information\n- name: guest-carts/{cartId}/selected-payment-method\n- name: guest-carts/{cartId}/set-payment-information\n- name: guest-carts/{cartId}/shipping-information\n- name: guest-carts/{cartId}/totals-information\n- name: guest-giftregistry/{cartId}/estimate-shipping-methods\n- name: integration/admin/token\n- name: integration/customer/token\n- name: negotiable-carts/{cartId}/billing-address\n- name: negotiable-carts/{cartId}/coupons\n- name: negotiable-carts/{cartId}/coupons/{couponCode}\n- name: negotiable-carts/{cartId}/estimate-shipping-methods\n- name: negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id\n- name: negotiable-carts/{cartId}/giftCards\n- name: negotiable-carts/{cartId}/giftCards/{giftCardCode}\n- name: negotiable-carts/{cartId}/payment-information\n- name: negotiable-carts/{cartId}/set-payment-information\n- name: negotiable-carts/{cartId}/shipping-information\n- name: requisition_lists\n- name: reward/mine/use-reward\n- name: vertex-address-validation/vertex-address\n- name: worldpay-guest-carts/{cartId}/payment-information\nsecurity:\n  - bearerAuth: []\npaths:\n  /async/V1/amazon-billing-address/{amazonOrderReferenceId}:\n    put:\n      tags:\n      - amazon-billing-address/{amazonOrderReferenceId}\n      summary: amazon-billing-address/{amazonOrderReferenceId}\n      operationId: amazonPaymentAddressManagementV1GetBillingAddressPut\n      parameters:\n      - name: amazonOrderReferenceId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressConsentToken\n              type: object\n              properties:\n                addressConsentToken:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressConsentToken\n              type: object\n              properties:\n                addressConsentToken:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: amazonPaymentAddressManagementV1GetBillingAddressPutBody\n  /async/V1/amazon-shipping-address/{amazonOrderReferenceId}:\n    put:\n      tags:\n      - amazon-shipping-address/{amazonOrderReferenceId}\n      summary: amazon-shipping-address/{amazonOrderReferenceId}\n      operationId: amazonPaymentAddressManagementV1GetShippingAddressPut\n      parameters:\n      - name: amazonOrderReferenceId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressConsentToken\n              type: object\n              properties:\n                addressConsentToken:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressConsentToken\n              type: object\n              properties:\n                addressConsentToken:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: amazonPaymentAddressManagementV1GetShippingAddressPutBody\n  /async/V1/amazon/order-ref:\n    delete:\n      tags:\n      - amazon/order-ref\n      summary: amazon/order-ref\n      operationId: amazonPaymentOrderInformationManagementV1RemoveOrderReferenceDelete\n      responses:\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/carts/guest-carts/{cartId}/giftCards:\n    post:\n      tags:\n      - carts/guest-carts/{cartId}/giftCards\n      summary: carts/guest-carts/{cartId}/giftCards\n      description: Add gift card to the cart.\n      operationId: giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostBody\n  /async/V1/carts/guest-carts/{cartId}/giftCards/{giftCardCode}:\n    delete:\n      tags:\n      - carts/guest-carts/{cartId}/giftCards/{giftCardCode}\n      summary: carts/guest-carts/{cartId}/giftCards/{giftCardCode}\n      description: Remove GiftCard Account entity.\n      operationId: giftCardAccountGuestGiftCardAccountManagementV1DeleteByQuoteIdDelete\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: giftCardCode\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/carts/mine:\n    put:\n      tags:\n      - carts/mine\n      summary: carts/mine\n      description: Save quote\n      operationId: quoteCartRepositoryV1SavePut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - quote\n              type: object\n              properties:\n                quote:\n                  $ref: '#/components/schemas/quote-data-cart-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - quote\n              type: object\n              properties:\n                quote:\n                  $ref: '#/components/schemas/quote-data-cart-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartRepositoryV1SavePutBody\n  /async/V1/carts/mine/balance/apply:\n    post:\n      tags:\n      - carts/mine/balance/apply\n      summary: carts/mine/balance/apply\n      description: Apply store credit\n      operationId: customerBalanceBalanceManagementV1ApplyPost\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/carts/mine/collect-totals:\n    put:\n      tags:\n      - carts/mine/collect-totals\n      summary: carts/mine/collect-totals\n      description: Set shipping/billing methods and additional data for cart and collect\n        totals.\n      operationId: quoteCartTotalManagementV1CollectTotalsPut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                shippingCarrierCode:\n                  type: string\n                  description: The carrier code.\n                shippingMethodCode:\n                  type: string\n                  description: The shipping method code.\n                additionalData:\n                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                shippingCarrierCode:\n                  type: string\n                  description: The carrier code.\n                shippingMethodCode:\n                  type: string\n                  description: The shipping method code.\n                additionalData:\n                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartTotalManagementV1CollectTotalsPutBody\n  /async/V1/carts/mine/payment-information:\n    post:\n      tags:\n      - carts/mine/payment-information\n      summary: carts/mine/payment-information\n      description: Set payment information and place order for a specified cart.\n      operationId: checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody\n  /async/V1/carts/mine/set-payment-information:\n    post:\n      tags:\n      - carts/mine/set-payment-information\n      summary: carts/mine/set-payment-information\n      description: Set payment information for a specified cart.\n      operationId: checkoutPaymentInformationManagementV1SavePaymentInformationPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutPaymentInformationManagementV1SavePaymentInformationPostBody\n  /async/V1/customers:\n    post:\n      tags:\n      - customers\n      summary: customers\n      description: Create customer account. Perform necessary business operations\n        like sending email.\n      operationId: customerAccountManagementV1CreateAccountPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - customer\n              type: object\n              properties:\n                customer:\n                  $ref: '#/components/schemas/customer-data-customer-interface'\n                password:\n                  type: string\n                redirectUrl:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - customer\n              type: object\n              properties:\n                customer:\n                  $ref: '#/components/schemas/customer-data-customer-interface'\n                password:\n                  type: string\n                redirectUrl:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: customerAccountManagementV1CreateAccountPostBody\n  /async/V1/customers/isEmailAvailable:\n    post:\n      tags:\n      - customers/isEmailAvailable\n      summary: customers/isEmailAvailable\n      description: Check if given email is associated with a customer account in given\n        website.\n      operationId: customerAccountManagementV1IsEmailAvailablePost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - customerEmail\n              type: object\n              properties:\n                customerEmail:\n                  type: string\n                websiteId:\n                  type: integer\n                  description: If not set, will use the current websiteId\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - customerEmail\n              type: object\n              properties:\n                customerEmail:\n                  type: string\n                websiteId:\n                  type: integer\n                  description: If not set, will use the current websiteId\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: customerAccountManagementV1IsEmailAvailablePostBody\n  /async/V1/customers/me/activate:\n    put:\n      tags:\n      - customers/me/activate\n      summary: customers/me/activate\n      description: Activate a customer account using a key that was sent in a confirmation\n        email.\n      operationId: customerAccountManagementV1ActivateByIdPut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - confirmationKey\n              type: object\n              properties:\n                confirmationKey:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - confirmationKey\n              type: object\n              properties:\n                confirmationKey:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: customerAccountManagementV1ActivateByIdPutBody\n  /async/V1/customers/me/password:\n    put:\n      tags:\n      - customers/me/password\n      summary: customers/me/password\n      description: Change customer password.\n      operationId: customerAccountManagementV1ChangePasswordByIdPut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - currentPassword\n              - newPassword\n              type: object\n              properties:\n                currentPassword:\n                  type: string\n                newPassword:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - currentPassword\n              - newPassword\n              type: object\n              properties:\n                currentPassword:\n                  type: string\n                newPassword:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: customerAccountManagementV1ChangePasswordByIdPutBody\n  /async/V1/customers/password:\n    put:\n      tags:\n      - customers/password\n      summary: customers/password\n      description: Send an email to the customer with a password reset link.\n      operationId: customerAccountManagementV1InitiatePasswordResetPut\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - email\n              - template\n              type: object\n              properties:\n                email:\n                  type: string\n                template:\n                  type: string\n                websiteId:\n                  type: integer\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - email\n              - template\n              type: object\n              properties:\n                email:\n                  type: string\n                template:\n                  type: string\n                websiteId:\n                  type: integer\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: customerAccountManagementV1InitiatePasswordResetPutBody\n  /async/V1/customers/resetPassword:\n    post:\n      tags:\n      - customers/resetPassword\n      summary: customers/resetPassword\n      description: Reset customer password.\n      operationId: customerAccountManagementV1ResetPasswordPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - email\n              - newPassword\n              - resetToken\n              type: object\n              properties:\n                email:\n                  type: string\n                  description: If empty value given then the customer will be matched\n                    by the RP token.\n                resetToken:\n                  type: string\n                newPassword:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - email\n              - newPassword\n              - resetToken\n              type: object\n              properties:\n                email:\n                  type: string\n                  description: If empty value given then the customer will be matched\n                    by the RP token.\n                resetToken:\n                  type: string\n                newPassword:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: customerAccountManagementV1ResetPasswordPostBody\n  /async/V1/giftregistry/mine/estimate-shipping-methods:\n    post:\n      tags:\n      - giftregistry/mine/estimate-shipping-methods\n      summary: giftregistry/mine/estimate-shipping-methods\n      description: Estimate shipping\n      operationId: giftRegistryShippingMethodManagementV1EstimateByRegistryIdPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - registryId\n              type: object\n              properties:\n                registryId:\n                  type: integer\n                  description: The estimate registry id\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - registryId\n              type: object\n              properties:\n                registryId:\n                  type: integer\n                  description: The estimate registry id\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftRegistryShippingMethodManagementV1EstimateByRegistryIdPostBody\n  /async/V1/guest-carts:\n    post:\n      tags:\n      - guest-carts\n      summary: guest-carts\n      description: Enable an customer or guest user to create an empty cart and quote\n        for an anonymous customer.\n      operationId: quoteGuestCartManagementV1CreateEmptyCartPost\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/guest-carts/{cartId}:\n    put:\n      tags:\n      - guest-carts/{cartId}\n      summary: guest-carts/{cartId}\n      description: Assign a specified customer to a specified shopping cart.\n      operationId: quoteGuestCartManagementV1AssignCustomerPut\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - customerId\n              - storeId\n              type: object\n              properties:\n                customerId:\n                  type: integer\n                  description: The customer ID.\n                storeId:\n                  type: integer\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - customerId\n              - storeId\n              type: object\n              properties:\n                customerId:\n                  type: integer\n                  description: The customer ID.\n                storeId:\n                  type: integer\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestCartManagementV1AssignCustomerPutBody\n  /async/V1/guest-carts/{cartId}/billing-address:\n    post:\n      tags:\n      - guest-carts/{cartId}/billing-address\n      summary: guest-carts/{cartId}/billing-address\n      description: Assign a specified billing address to a specified cart.\n      operationId: quoteGuestBillingAddressManagementV1AssignPost\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestBillingAddressManagementV1AssignPostBody\n  /async/V1/guest-carts/{cartId}/collect-totals:\n    put:\n      tags:\n      - guest-carts/{cartId}/collect-totals\n      summary: guest-carts/{cartId}/collect-totals\n      description: Set shipping/billing methods and additional data for cart and collect\n        totals for guest.\n      operationId: quoteGuestCartTotalManagementV1CollectTotalsPut\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                shippingCarrierCode:\n                  type: string\n                  description: The carrier code.\n                shippingMethodCode:\n                  type: string\n                  description: The shipping method code.\n                additionalData:\n                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                shippingCarrierCode:\n                  type: string\n                  description: The carrier code.\n                shippingMethodCode:\n                  type: string\n                  description: The shipping method code.\n                additionalData:\n                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestCartTotalManagementV1CollectTotalsPutBody\n  /async/V1/guest-carts/{cartId}/coupons:\n    delete:\n      tags:\n      - guest-carts/{cartId}/coupons\n      summary: guest-carts/{cartId}/coupons\n      description: Delete a coupon from a specified cart.\n      operationId: quoteGuestCouponManagementV1RemoveDelete\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/guest-carts/{cartId}/coupons/{couponCode}:\n    put:\n      tags:\n      - guest-carts/{cartId}/coupons/{couponCode}\n      summary: guest-carts/{cartId}/coupons/{couponCode}\n      description: Add a coupon by code to a specified cart.\n      operationId: quoteGuestCouponManagementV1SetPut\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      - name: couponCode\n        in: path\n        description: The coupon code data.\n        required: true\n        schema:\n          type: string\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/guest-carts/{cartId}/estimate-shipping-methods:\n    post:\n      tags:\n      - guest-carts/{cartId}/estimate-shipping-methods\n      summary: guest-carts/{cartId}/estimate-shipping-methods\n      description: Estimate shipping by address and return list of available shipping\n        methods\n      operationId: quoteGuestShipmentEstimationV1EstimateByExtendedAddressPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestShipmentEstimationV1EstimateByExtendedAddressPostBody\n  /async/V1/guest-carts/{cartId}/gift-message:\n    post:\n      tags:\n      - guest-carts/{cartId}/gift-message\n      summary: guest-carts/{cartId}/gift-message\n      description: Set the gift message for an entire order.\n      operationId: giftMessageGuestCartRepositoryV1SavePost\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftMessageGuestCartRepositoryV1SavePostBody\n  /async/V1/guest-carts/{cartId}/gift-message/{itemId}:\n    post:\n      tags:\n      - guest-carts/{cartId}/gift-message/{itemId}\n      summary: guest-carts/{cartId}/gift-message/{itemId}\n      description: Set the gift message for a specified item in a specified shopping\n        cart.\n      operationId: giftMessageGuestItemRepositoryV1SavePost\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      - name: itemId\n        in: path\n        description: The item ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftMessageGuestItemRepositoryV1SavePostBody\n  /async/V1/guest-carts/{cartId}/items:\n    post:\n      tags:\n      - guest-carts/{cartId}/items\n      summary: guest-carts/{cartId}/items\n      description: Add/update the specified cart item.\n      operationId: quoteGuestCartItemRepositoryV1SavePost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestCartItemRepositoryV1SavePostBody\n  /async/V1/guest-carts/{cartId}/items/{itemId}:\n    put:\n      tags:\n      - guest-carts/{cartId}/items/{itemId}\n      summary: guest-carts/{cartId}/items/{itemId}\n      description: Add/update the specified cart item.\n      operationId: quoteGuestCartItemRepositoryV1SavePut\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: itemId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestCartItemRepositoryV1SavePutBody\n    delete:\n      tags:\n      - guest-carts/{cartId}/items/{itemId}\n      summary: guest-carts/{cartId}/items/{itemId}\n      description: Remove the specified item from the specified cart.\n      operationId: quoteGuestCartItemRepositoryV1DeleteByIdDelete\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      - name: itemId\n        in: path\n        description: The item ID of the item to be removed.\n        required: true\n        schema:\n          type: integer\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/guest-carts/{cartId}/order:\n    put:\n      tags:\n      - guest-carts/{cartId}/order\n      summary: guest-carts/{cartId}/order\n      description: Place an order for a specified cart.\n      operationId: quoteGuestCartManagementV1PlaceOrderPut\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestCartManagementV1PlaceOrderPutBody\n  /async/V1/guest-carts/{cartId}/payment-information:\n    post:\n      tags:\n      - guest-carts/{cartId}/payment-information\n      summary: guest-carts/{cartId}/payment-information\n      description: Set payment information and place order for a specified cart.\n      operationId: checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - email\n              - paymentMethod\n              type: object\n              properties:\n                email:\n                  type: string\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - email\n              - paymentMethod\n              type: object\n              properties:\n                email:\n                  type: string\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody\n  /async/V1/guest-carts/{cartId}/selected-payment-method:\n    put:\n      tags:\n      - guest-carts/{cartId}/selected-payment-method\n      summary: guest-carts/{cartId}/selected-payment-method\n      description: Add a specified payment method to a specified shopping cart.\n      operationId: quoteGuestPaymentMethodManagementV1SetPut\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - method\n              type: object\n              properties:\n                method:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - method\n              type: object\n              properties:\n                method:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteGuestPaymentMethodManagementV1SetPutBody\n  /async/V1/guest-carts/{cartId}/set-payment-information:\n    post:\n      tags:\n      - guest-carts/{cartId}/set-payment-information\n      summary: guest-carts/{cartId}/set-payment-information\n      description: Set payment information for a specified cart.\n      operationId: checkoutGuestPaymentInformationManagementV1SavePaymentInformationPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - email\n              - paymentMethod\n              type: object\n              properties:\n                email:\n                  type: string\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - email\n              - paymentMethod\n              type: object\n              properties:\n                email:\n                  type: string\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutGuestPaymentInformationManagementV1SavePaymentInformationPostBody\n  /async/V1/guest-carts/{cartId}/shipping-information:\n    post:\n      tags:\n      - guest-carts/{cartId}/shipping-information\n      summary: guest-carts/{cartId}/shipping-information\n      operationId: checkoutGuestShippingInformationManagementV1SaveAddressInformationPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutGuestShippingInformationManagementV1SaveAddressInformationPostBody\n  /async/V1/guest-carts/{cartId}/totals-information:\n    post:\n      tags:\n      - guest-carts/{cartId}/totals-information\n      summary: guest-carts/{cartId}/totals-information\n      description: Calculate quote totals based on address and shipping method.\n      operationId: checkoutGuestTotalsInformationManagementV1CalculatePost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-totals-information-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-totals-information-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutGuestTotalsInformationManagementV1CalculatePostBody\n  /async/V1/guest-giftregistry/{cartId}/estimate-shipping-methods:\n    post:\n      tags:\n      - guest-giftregistry/{cartId}/estimate-shipping-methods\n      summary: guest-giftregistry/{cartId}/estimate-shipping-methods\n      description: Estimate shipping\n      operationId: giftRegistryGuestCartShippingMethodManagementV1EstimateByRegistryIdPost\n      parameters:\n      - name: cartId\n        in: path\n        description: The shopping cart ID.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - registryId\n              type: object\n              properties:\n                registryId:\n                  type: integer\n                  description: The estimate registry id\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - registryId\n              type: object\n              properties:\n                registryId:\n                  type: integer\n                  description: The estimate registry id\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftRegistryGuestCartShippingMethodManagementV1EstimateByRegistryIdPostBody\n  /async/V1/integration/admin/token:\n    post:\n      tags:\n      - integration/admin/token\n      summary: integration/admin/token\n      description: Create access token for admin given the admin credentials.\n      operationId: integrationAdminTokenServiceV1CreateAdminAccessTokenPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - password\n              - username\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - password\n              - username\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: integrationAdminTokenServiceV1CreateAdminAccessTokenPostBody\n  /async/V1/integration/customer/token:\n    post:\n      tags:\n      - integration/customer/token\n      summary: integration/customer/token\n      description: Create access token for admin given the customer credentials.\n      operationId: integrationCustomerTokenServiceV1CreateCustomerAccessTokenPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - password\n              - username\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - password\n              - username\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody\n  /async/V1/negotiable-carts/{cartId}/billing-address:\n    post:\n      tags:\n      - negotiable-carts/{cartId}/billing-address\n      summary: negotiable-carts/{cartId}/billing-address\n      description: Assigns a specified billing address to a specified cart.\n      operationId: negotiableQuoteBillingAddressManagementV1AssignPost\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: negotiableQuoteBillingAddressManagementV1AssignPostBody\n  /async/V1/negotiable-carts/{cartId}/coupons:\n    delete:\n      tags:\n      - negotiable-carts/{cartId}/coupons\n      summary: negotiable-carts/{cartId}/coupons\n      description: Deletes a coupon from a specified cart.\n      operationId: negotiableQuoteCouponManagementV1RemoveDelete\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/negotiable-carts/{cartId}/coupons/{couponCode}:\n    put:\n      tags:\n      - negotiable-carts/{cartId}/coupons/{couponCode}\n      summary: negotiable-carts/{cartId}/coupons/{couponCode}\n      description: Adds a coupon by code to a specified cart.\n      operationId: negotiableQuoteCouponManagementV1SetPut\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      - name: couponCode\n        in: path\n        description: The coupon code data.\n        required: true\n        schema:\n          type: string\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/negotiable-carts/{cartId}/estimate-shipping-methods:\n    post:\n      tags:\n      - negotiable-carts/{cartId}/estimate-shipping-methods\n      summary: negotiable-carts/{cartId}/estimate-shipping-methods\n      description: Estimate shipping by address and return list of available shipping\n        methods\n      operationId: negotiableQuoteShipmentEstimationV1EstimateByExtendedAddressPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: negotiableQuoteShipmentEstimationV1EstimateByExtendedAddressPostBody\n  /async/V1/negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id:\n    post:\n      tags:\n      - negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id\n      summary: negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id\n      description: Estimate shipping\n      operationId: negotiableQuoteShippingMethodManagementV1EstimateByAddressIdPost\n      parameters:\n      - name: cartId\n        in: path\n        description: The shopping cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressId\n              type: object\n              properties:\n                addressId:\n                  type: integer\n                  description: The estimate address id\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressId\n              type: object\n              properties:\n                addressId:\n                  type: integer\n                  description: The estimate address id\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: negotiableQuoteShippingMethodManagementV1EstimateByAddressIdPostBody\n  /async/V1/negotiable-carts/{cartId}/giftCards:\n    post:\n      tags:\n      - negotiable-carts/{cartId}/giftCards\n      summary: negotiable-carts/{cartId}/giftCards\n      operationId: negotiableQuoteGiftCardAccountManagementV1SaveByQuoteIdPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: negotiableQuoteGiftCardAccountManagementV1SaveByQuoteIdPostBody\n  /async/V1/negotiable-carts/{cartId}/giftCards/{giftCardCode}:\n    delete:\n      tags:\n      - negotiable-carts/{cartId}/giftCards/{giftCardCode}\n      summary: negotiable-carts/{cartId}/giftCards/{giftCardCode}\n      description: Remove GiftCard Account entity\n      operationId: negotiableQuoteGiftCardAccountManagementV1DeleteByQuoteIdDelete\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      - name: giftCardCode\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/negotiable-carts/{cartId}/payment-information:\n    post:\n      tags:\n      - negotiable-carts/{cartId}/payment-information\n      summary: negotiable-carts/{cartId}/payment-information\n      description: Set payment information and place order for a specified cart.\n      operationId: negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody\n  /async/V1/negotiable-carts/{cartId}/set-payment-information:\n    post:\n      tags:\n      - negotiable-carts/{cartId}/set-payment-information\n      summary: negotiable-carts/{cartId}/set-payment-information\n      description: Set payment information for a specified cart.\n      operationId: negotiableQuotePaymentInformationManagementV1SavePaymentInformationPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: negotiableQuotePaymentInformationManagementV1SavePaymentInformationPostBody\n  /async/V1/negotiable-carts/{cartId}/shipping-information:\n    post:\n      tags:\n      - negotiable-carts/{cartId}/shipping-information\n      summary: negotiable-carts/{cartId}/shipping-information\n      operationId: negotiableQuoteShippingInformationManagementV1SaveAddressInformationPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: negotiableQuoteShippingInformationManagementV1SaveAddressInformationPostBody\n  /async/V1/requisition_lists:\n    post:\n      tags:\n      - requisition_lists\n      summary: requisition_lists\n      description: Save Requisition List\n      operationId: requisitionListRequisitionListRepositoryV1SavePost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - requisitionList\n              type: object\n              properties:\n                requisitionList:\n                  $ref: '#/components/schemas/requisition-list-data-requisition-list-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - requisitionList\n              type: object\n              properties:\n                requisitionList:\n                  $ref: '#/components/schemas/requisition-list-data-requisition-list-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: requisitionListRequisitionListRepositoryV1SavePostBody\n  /async/V1/reward/mine/use-reward:\n    post:\n      tags:\n      - reward/mine/use-reward\n      summary: reward/mine/use-reward\n      description: Set reward points to quote\n      operationId: rewardRewardManagementV1SetPost\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /async/V1/vertex-address-validation/vertex-address:\n    post:\n      tags:\n      - vertex-address-validation/vertex-address\n      summary: vertex-address-validation/vertex-address\n      operationId: vertexAddressValidationAddressManagementV1GetValidAddressPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: vertexAddressValidationAddressManagementV1GetValidAddressPostBody\n  /async/V1/worldpay-guest-carts/{cartId}/payment-information:\n    post:\n      tags:\n      - worldpay-guest-carts/{cartId}/payment-information\n      summary: worldpay-guest-carts/{cartId}/payment-information\n      description: Proxy handler for guest place order\n      operationId: worldpayGuestPaymentInformationManagementProxyV1SavePaymentInformationAndPlaceOrderPost\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - email\n              - paymentMethod\n              type: object\n              properties:\n                email:\n                  type: string\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - email\n              - paymentMethod\n              type: object\n              properties:\n                email:\n                  type: string\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        202:\n          description: 202 Accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/asynchronous-operations-data-async-response-interface'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: worldpayGuestPaymentInformationManagementProxyV1SavePaymentInformationAndPlaceOrderPostBody\ncomponents: \n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    error-response:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Error message\n        errors:\n          $ref: '#/components/schemas/error-errors'\n        code:\n          type: integer\n          description: Error code\n        parameters:\n          $ref: '#/components/schemas/error-parameters'\n        trace:\n          type: string\n          description: Stack trace\n    error-errors:\n      type: array\n      description: Errors list\n      items:\n        $ref: '#/components/schemas/error-errors-item'\n    error-errors-item:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Error message\n        parameters:\n          $ref: '#/components/schemas/error-parameters'\n      description: Error details\n    error-parameters:\n      type: array\n      description: Error parameters list\n      items:\n        $ref: '#/components/schemas/error-parameters-item'\n    error-parameters-item:\n      type: object\n      properties:\n        resources:\n          type: string\n          description: ACL resource\n        fieldName:\n          type: string\n          description: Missing or invalid field name\n        fieldValue:\n          type: string\n          description: Incorrect field value\n      description: Error parameters item\n    customer-data-customer-interface:\n      required:\n      - email\n      - firstname\n      - lastname\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Customer id\n        group_id:\n          type: integer\n          description: Group id\n        default_billing:\n          type: string\n          description: Default billing address id\n        default_shipping:\n          type: string\n          description: Default shipping address id\n        confirmation:\n          type: string\n          description: Confirmation\n        created_at:\n          type: string\n          description: Created at time\n        updated_at:\n          type: string\n          description: Updated at time\n        created_in:\n          type: string\n          description: Created in area\n        dob:\n          type: string\n          description: Date of birth\n        email:\n          type: string\n          description: Email address\n        firstname:\n          type: string\n          description: First name\n        lastname:\n          type: string\n          description: Last name\n        middlename:\n          type: string\n          description: Middle name\n        prefix:\n          type: string\n          description: Prefix\n        suffix:\n          type: string\n          description: Suffix\n        gender:\n          type: integer\n          description: Gender\n        store_id:\n          type: integer\n          description: Store id\n        taxvat:\n          type: string\n          description: Tax Vat\n        website_id:\n          type: integer\n          description: Website id\n        addresses:\n          type: array\n          description: Customer addresses.\n          items:\n            $ref: '#/components/schemas/customer-data-address-interface'\n        disable_auto_group_change:\n          type: integer\n          description: Disable auto group change flag.\n        extension_attributes:\n          $ref: '#/components/schemas/customer-data-customer-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Customer interface.\n    customer-data-address-interface:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID\n        customer_id:\n          type: integer\n          description: Customer ID\n        region:\n          $ref: '#/components/schemas/customer-data-region-interface'\n        region_id:\n          type: integer\n          description: Region ID\n        country_id:\n          type: string\n          description: Country code in ISO_3166-2 format\n        street:\n          type: array\n          description: Street\n          items:\n            type: string\n        company:\n          type: string\n          description: Company\n        telephone:\n          type: string\n          description: Telephone number\n        fax:\n          type: string\n          description: Fax number\n        postcode:\n          type: string\n          description: Postcode\n        city:\n          type: string\n          description: City name\n        firstname:\n          type: string\n          description: First name\n        lastname:\n          type: string\n          description: Last name\n        middlename:\n          type: string\n          description: Middle name\n        prefix:\n          type: string\n          description: Prefix\n        suffix:\n          type: string\n          description: Suffix\n        vat_id:\n          type: string\n          description: Vat id\n        default_shipping:\n          type: boolean\n          description: If this address is default shipping address.\n        default_billing:\n          type: boolean\n          description: If this address is default billing address\n        extension_attributes:\n          $ref: '#/components/schemas/customer-data-address-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Customer address interface.\n    customer-data-region-interface:\n      required:\n      - region\n      - region_code\n      - region_id\n      type: object\n      properties:\n        region_code:\n          type: string\n          description: Region code\n        region:\n          type: string\n          description: Region\n        region_id:\n          type: integer\n          description: Region id\n        extension_attributes:\n          $ref: '#/components/schemas/customer-data-region-extension-interface'\n      description: Customer address region interface.\n    customer-data-region-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface\n    customer-data-address-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface\n    framework-attribute-interface:\n      required:\n      - attribute_code\n      - value\n      type: object\n      properties:\n        attribute_code:\n          type: string\n          description: Attribute code\n        value:\n          type: string\n          description: Attribute value\n      description: Interface for custom attribute value.\n    customer-data-customer-extension-interface:\n      type: object\n      properties:\n        company_attributes:\n          $ref: '#/components/schemas/company-data-company-customer-interface'\n        is_subscribed:\n          type: boolean\n        amazon_id:\n          type: string\n        vertex_customer_code:\n          type: string\n      description: ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface\n    company-data-company-customer-interface:\n      type: object\n      properties:\n        customer_id:\n          type: integer\n          description: Customer ID.\n        company_id:\n          type: integer\n          description: Company ID.\n        job_title:\n          type: string\n          description: Get job title.\n        status:\n          type: integer\n          description: Customer status.\n        telephone:\n          type: string\n          description: Get telephone.\n        extension_attributes:\n          $ref: '#/components/schemas/company-data-company-customer-extension-interface'\n      description: Extended customer custom attributes interface.\n    company-data-company-customer-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface\n    asynchronous-operations-data-async-response-interface:\n      required:\n      - bulk_uuid\n      - errors\n      - request_items\n      type: object\n      properties:\n        bulk_uuid:\n          type: string\n          description: Bulk Uuid.\n        request_items:\n          type: array\n          description: The list of request items with status data.\n          items:\n            $ref: '#/components/schemas/asynchronous-operations-data-item-status-interface'\n        errors:\n          type: boolean\n          description: There errors during processing bulk\n        extension_attributes:\n          $ref: '#/components/schemas/asynchronous-operations-data-async-response-extension-interface'\n      description: Interface AsyncResponseInterface Temporary data object to give\n        response from webapi async router\n    asynchronous-operations-data-item-status-interface:\n      required:\n      - data_hash\n      - id\n      - status\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Entity Id.\n        data_hash:\n          type: string\n          description: md5 hash of entity params array.\n        status:\n          type: string\n          description: accepted|rejected\n        error_message:\n          type: string\n          description: Error information.\n        error_code:\n          type: integer\n          description: Error code.\n      description: ItemStatusInterface interface Temporary object with status of requested\n        item. Indicate if entity param was Accepted|Rejected to bulk schedule\n    asynchronous-operations-data-async-response-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\AsyncResponseInterface\n    quote-data-cart-interface:\n      required:\n      - customer\n      - id\n      - store_id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Cart/quote ID.\n        created_at:\n          type: string\n          description: Cart creation date and time. Otherwise, null.\n        updated_at:\n          type: string\n          description: Cart last update date and time. Otherwise, null.\n        converted_at:\n          type: string\n          description: Cart conversion date and time. Otherwise, null.\n        is_active:\n          type: boolean\n          description: Active status flag value. Otherwise, null.\n        is_virtual:\n          type: boolean\n          description: Virtual flag value. Otherwise, null.\n        items:\n          type: array\n          description: Array of items. Otherwise, null.\n          items:\n            $ref: '#/components/schemas/quote-data-cart-item-interface'\n        items_count:\n          type: integer\n          description: Number of different items or products in the cart. Otherwise,\n            null.\n        items_qty:\n          type: number\n          description: Total quantity of all cart items. Otherwise, null.\n        customer:\n          $ref: '#/components/schemas/customer-data-customer-interface'\n        billing_address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        reserved_order_id:\n          type: string\n          description: Reserved order ID. Otherwise, null.\n        orig_order_id:\n          type: integer\n          description: Original order ID. Otherwise, null.\n        currency:\n          $ref: '#/components/schemas/quote-data-currency-interface'\n        customer_is_guest:\n          type: boolean\n          description: For guest customers, false for logged in customers\n        customer_note:\n          type: string\n          description: Notice text\n        customer_note_notify:\n          type: boolean\n          description: Customer notification flag\n        customer_tax_class_id:\n          type: integer\n          description: Customer tax class ID.\n        store_id:\n          type: integer\n          description: Store identifier\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-cart-extension-interface'\n      description: Interface CartInterface\n    quote-data-cart-item-interface:\n      required:\n      - qty\n      - quote_id\n      type: object\n      properties:\n        item_id:\n          type: integer\n          description: Item ID. Otherwise, null.\n        sku:\n          type: string\n          description: Product SKU. Otherwise, null.\n        qty:\n          type: number\n          description: Product quantity.\n        name:\n          type: string\n          description: Product name. Otherwise, null.\n        price:\n          type: number\n          description: Product price. Otherwise, null.\n        product_type:\n          type: string\n          description: Product type. Otherwise, null.\n        quote_id:\n          type: string\n          description: Quote id.\n        product_option:\n          $ref: '#/components/schemas/quote-data-product-option-interface'\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-cart-item-extension-interface'\n      description: Interface CartItemInterface\n    quote-data-product-option-interface:\n      type: object\n      properties:\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-product-option-extension-interface'\n      description: Product option interface\n    quote-data-product-option-extension-interface:\n      type: object\n      properties:\n        custom_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/catalog-data-custom-option-interface'\n        bundle_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/bundle-data-bundle-option-interface'\n        configurable_item_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/configurable-product-data-configurable-item-option-value-interface'\n        downloadable_option:\n          $ref: '#/components/schemas/downloadable-data-downloadable-option-interface'\n        giftcard_item_option:\n          $ref: '#/components/schemas/gift-card-data-gift-card-option-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface\n    catalog-data-custom-option-interface:\n      required:\n      - option_id\n      - option_value\n      type: object\n      properties:\n        option_id:\n          type: string\n          description: Option id\n        option_value:\n          type: string\n          description: Option value\n        extension_attributes:\n          $ref: '#/components/schemas/catalog-data-custom-option-extension-interface'\n      description: Interface CustomOptionInterface\n    catalog-data-custom-option-extension-interface:\n      type: object\n      properties:\n        file_info:\n          $ref: '#/components/schemas/framework-data-image-content-interface'\n      description: ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface\n    framework-data-image-content-interface:\n      required:\n      - base64_encoded_data\n      - name\n      - type\n      type: object\n      properties:\n        base64_encoded_data:\n          type: string\n          description: Media data (base64 encoded content)\n        type:\n          type: string\n          description: MIME type\n        name:\n          type: string\n          description: Image name\n      description: Image Content data interface\n    bundle-data-bundle-option-interface:\n      required:\n      - option_id\n      - option_qty\n      - option_selections\n      type: object\n      properties:\n        option_id:\n          type: integer\n          description: Bundle option id.\n        option_qty:\n          type: integer\n          description: Bundle option quantity.\n        option_selections:\n          type: array\n          description: Bundle option selection ids.\n          items:\n            type: integer\n        extension_attributes:\n          $ref: '#/components/schemas/bundle-data-bundle-option-extension-interface'\n      description: Interface BundleOptionInterface\n    bundle-data-bundle-option-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface\n    configurable-product-data-configurable-item-option-value-interface:\n      required:\n      - option_id\n      type: object\n      properties:\n        option_id:\n          type: string\n          description: Option SKU\n        option_value:\n          type: integer\n          description: Item id\n        extension_attributes:\n          $ref: '#/components/schemas/configurable-product-data-configurable-item-option-value-extension-interface'\n      description: Interface ConfigurableItemOptionValueInterface\n    configurable-product-data-configurable-item-option-value-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface\n    downloadable-data-downloadable-option-interface:\n      required:\n      - downloadable_links\n      type: object\n      properties:\n        downloadable_links:\n          type: array\n          description: The list of downloadable links\n          items:\n            type: integer\n      description: Downloadable Option\n    gift-card-data-gift-card-option-interface:\n      required:\n      - giftcard_amount\n      - giftcard_recipient_email\n      - giftcard_recipient_name\n      - giftcard_sender_email\n      - giftcard_sender_name\n      type: object\n      properties:\n        giftcard_amount:\n          type: string\n          description: Gift card amount.\n        custom_giftcard_amount:\n          type: number\n          description: Gift card open amount value.\n        giftcard_sender_name:\n          type: string\n          description: Gift card sender name.\n        giftcard_recipient_name:\n          type: string\n          description: Gift card recipient name.\n        giftcard_sender_email:\n          type: string\n          description: Gift card sender email.\n        giftcard_recipient_email:\n          type: string\n          description: Gift card recipient email.\n        giftcard_message:\n          type: string\n          description: Giftcard message.\n        extension_attributes:\n          $ref: '#/components/schemas/gift-card-data-gift-card-option-extension-interface'\n      description: Interface GiftCardOptionInterface\n    gift-card-data-gift-card-option-extension-interface:\n      type: object\n      properties:\n        giftcard_created_codes:\n          type: array\n          items:\n            type: string\n      description: ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface\n    quote-data-cart-item-extension-interface:\n      type: object\n      properties:\n        discounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/sales-rule-data-rule-discount-interface'\n        negotiable_quote_item:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface\n    sales-rule-data-rule-discount-interface:\n      required:\n      - discount_data\n      - rule_id\n      - rule_label\n      type: object\n      properties:\n        discount_data:\n          $ref: '#/components/schemas/sales-rule-data-discount-data-interface'\n        rule_label:\n          type: string\n          description: Rule Label\n        rule_id:\n          type: integer\n          description: Rule ID\n      description: Rule discount Interface\n    sales-rule-data-discount-data-interface:\n      required:\n      - amount\n      - base_amount\n      - base_original_amount\n      - original_amount\n      type: object\n      properties:\n        amount:\n          type: number\n          description: Amount\n        base_amount:\n          type: number\n          description: Base Amount\n        original_amount:\n          type: number\n          description: Original Amount\n        base_original_amount:\n          type: number\n          description: Base Original Amount\n      description: Discount Data Interface\n    negotiable-quote-data-negotiable-quote-item-interface:\n      required:\n      - item_id\n      - original_discount_amount\n      - original_price\n      - original_tax_amount\n      type: object\n      properties:\n        item_id:\n          type: integer\n          description: Quote item id\n        original_price:\n          type: number\n          description: Quote item original price\n        original_tax_amount:\n          type: number\n          description: Quote item original tax amount\n        original_discount_amount:\n          type: number\n          description: Quote item original discount amount\n        extension_attributes:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-extension-interface'\n      description: Interface CompanyQuoteConfigInterface\n    negotiable-quote-data-negotiable-quote-item-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface\n    quote-data-address-interface:\n      required:\n      - city\n      - country_id\n      - email\n      - firstname\n      - lastname\n      - postcode\n      - region\n      - region_code\n      - region_id\n      - street\n      - telephone\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Id\n        region:\n          type: string\n          description: Region name\n        region_id:\n          type: integer\n          description: Region id\n        region_code:\n          type: string\n          description: Region code\n        country_id:\n          type: string\n          description: Country id\n        street:\n          type: array\n          description: Street\n          items:\n            type: string\n        company:\n          type: string\n          description: Company\n        telephone:\n          type: string\n          description: Telephone number\n        fax:\n          type: string\n          description: Fax number\n        postcode:\n          type: string\n          description: Postcode\n        city:\n          type: string\n          description: City name\n        firstname:\n          type: string\n          description: First name\n        lastname:\n          type: string\n          description: Last name\n        middlename:\n          type: string\n          description: Middle name\n        prefix:\n          type: string\n          description: Prefix\n        suffix:\n          type: string\n          description: Suffix\n        vat_id:\n          type: string\n          description: Vat id\n        customer_id:\n          type: integer\n          description: Customer id\n        email:\n          type: string\n          description: Billing/shipping email\n        same_as_billing:\n          type: integer\n          description: Same as billing flag\n        customer_address_id:\n          type: integer\n          description: Customer address id\n        save_in_address_book:\n          type: integer\n          description: Save in address book flag\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-address-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Interface AddressInterface\n    quote-data-address-extension-interface:\n      type: object\n      properties:\n        discounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/sales-rule-data-rule-discount-interface'\n        gift_registry_id:\n          type: integer\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface\n    quote-data-currency-interface:\n      type: object\n      properties:\n        global_currency_code:\n          type: string\n          description: Global currency code\n        base_currency_code:\n          type: string\n          description: Base currency code\n        store_currency_code:\n          type: string\n          description: Store currency code\n        quote_currency_code:\n          type: string\n          description: Quote currency code\n        store_to_base_rate:\n          type: number\n          description: Store currency to base currency rate\n        store_to_quote_rate:\n          type: number\n          description: Store currency to quote currency rate\n        base_to_global_rate:\n          type: number\n          description: Base currency to global currency rate\n        base_to_quote_rate:\n          type: number\n          description: Base currency to quote currency rate\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-currency-extension-interface'\n      description: Interface CurrencyInterface\n    quote-data-currency-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface\n    quote-data-cart-extension-interface:\n      type: object\n      properties:\n        shipping_assignments:\n          type: array\n          items:\n            $ref: '#/components/schemas/quote-data-shipping-assignment-interface'\n        negotiable_quote:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-interface'\n        amazon_order_reference_id:\n          $ref: '#/components/schemas/amazon-payment-data-quote-link-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface\n    quote-data-shipping-assignment-interface:\n      required:\n      - items\n      - shipping\n      type: object\n      properties:\n        shipping:\n          $ref: '#/components/schemas/quote-data-shipping-interface'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/quote-data-cart-item-interface'\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-shipping-assignment-extension-interface'\n      description: Interface ShippingAssignmentInterface\n    quote-data-shipping-interface:\n      required:\n      - address\n      - method\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        method:\n          type: string\n          description: Shipping method\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-shipping-extension-interface'\n      description: Interface ShippingInterface\n    quote-data-shipping-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface\n    quote-data-shipping-assignment-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface\n    negotiable-quote-data-negotiable-quote-interface:\n      required:\n      - applied_rule_ids\n      - creator_id\n      - creator_type\n      - deleted_sku\n      - email_notification_status\n      - expiration_period\n      - has_unconfirmed_changes\n      - is_address_draft\n      - is_customer_price_changed\n      - is_regular_quote\n      - is_shipping_tax_changed\n      - negotiated_price_type\n      - negotiated_price_value\n      - notifications\n      - quote_id\n      - quote_name\n      - shipping_price\n      - status\n      type: object\n      properties:\n        quote_id:\n          type: integer\n          description: Negotiable quote ID.\n        is_regular_quote:\n          type: boolean\n          description: Is regular quote.\n        status:\n          type: string\n          description: Negotiable quote status.\n        negotiated_price_type:\n          type: integer\n          description: Negotiated price type.\n        negotiated_price_value:\n          type: number\n          description: Negotiated price value.\n        shipping_price:\n          type: number\n          description: Proposed shipping price.\n        quote_name:\n          type: string\n          description: Negotiable quote name.\n        expiration_period:\n          type: string\n          description: Expiration period.\n        email_notification_status:\n          type: integer\n          description: Email notification status.\n        has_unconfirmed_changes:\n          type: boolean\n          description: Has unconfirmed changes.\n        is_shipping_tax_changed:\n          type: boolean\n          description: Shipping tax changes.\n        is_customer_price_changed:\n          type: boolean\n          description: Customer price changes.\n        notifications:\n          type: integer\n          description: Quote notifications.\n        applied_rule_ids:\n          type: string\n          description: Quote rules.\n        is_address_draft:\n          type: boolean\n          description: Is address draft.\n        deleted_sku:\n          type: string\n          description: Deleted products sku.\n        creator_id:\n          type: integer\n          description: Quote creator id.\n        creator_type:\n          type: integer\n          description: Quote creator type.\n        original_total_price:\n          type: number\n          description: Quote original total price.\n        base_original_total_price:\n          type: number\n          description: Quote original total price in base currency.\n        negotiated_total_price:\n          type: number\n          description: Quote negotiated total price.\n        base_negotiated_total_price:\n          type: number\n          description: Quote negotiated total price in base currency.\n        extension_attributes:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-extension-interface'\n      description: Interface NegotiableQuoteInterface\n    negotiable-quote-data-negotiable-quote-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface\n    amazon-payment-data-quote-link-interface:\n      required:\n      - amazon_order_reference_id\n      - confirmed\n      - id\n      - quote_id\n      - sandbox_simulation_reference\n      type: object\n      properties:\n        id:\n          type: string\n        amazon_order_reference_id:\n          type: string\n          description: Amazon order reference id\n        quote_id:\n          type: integer\n          description: Quote id\n        sandbox_simulation_reference:\n          type: string\n          description: Sandbox simulation reference\n        confirmed:\n          type: boolean\n          description: Quote confirmed with amazon\n      description: \"\"\n    quote-data-payment-interface:\n      required:\n      - method\n      type: object\n      properties:\n        po_number:\n          type: string\n          description: Purchase order number\n        method:\n          type: string\n          description: Payment method code\n        additional_data:\n          type: array\n          description: Payment additional details\n          items:\n            type: string\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-payment-extension-interface'\n      description: Interface PaymentInterface\n    quote-data-payment-extension-interface:\n      type: object\n      properties:\n        agreement_ids:\n          type: array\n          items:\n            type: string\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface\n    quote-data-totals-additional-data-interface:\n      type: object\n      properties:\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-totals-additional-data-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Additional data for totals collection.\n    quote-data-totals-additional-data-extension-interface:\n      type: object\n      properties:\n        gift_messages:\n          type: array\n          items:\n            $ref: '#/components/schemas/gift-message-data-message-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsAdditionalDataInterface\n    gift-message-data-message-interface:\n      required:\n      - message\n      - recipient\n      - sender\n      type: object\n      properties:\n        gift_message_id:\n          type: integer\n          description: Gift message ID. Otherwise, null.\n        customer_id:\n          type: integer\n          description: Customer ID. Otherwise, null.\n        sender:\n          type: string\n          description: Sender name.\n        recipient:\n          type: string\n          description: Recipient name.\n        message:\n          type: string\n          description: Message text.\n        extension_attributes:\n          $ref: '#/components/schemas/gift-message-data-message-extension-interface'\n      description: Interface MessageInterface\n    gift-message-data-message-extension-interface:\n      type: object\n      properties:\n        entity_id:\n          type: string\n        entity_type:\n          type: string\n        wrapping_id:\n          type: integer\n        wrapping_allow_gift_receipt:\n          type: boolean\n        wrapping_add_printed_card:\n          type: boolean\n      description: ExtensionInterface class for @see \\Magento\\GiftMessage\\Api\\Data\\MessageInterface\n    requisition-list-data-requisition-list-interface:\n      required:\n      - customer_id\n      - description\n      - id\n      - items\n      - name\n      - updated_at\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Requisition List ID\n        customer_id:\n          type: integer\n          description: Customer ID\n        name:\n          type: string\n          description: Requisition List Name\n        updated_at:\n          type: string\n          description: Requisition List Update Time\n        description:\n          type: string\n          description: Requisition List Description\n        items:\n          type: array\n          description: Requisition List Items\n          items:\n            $ref: '#/components/schemas/requisition-list-data-requisition-list-item-interface'\n        extension_attributes:\n          $ref: '#/components/schemas/requisition-list-data-requisition-list-extension-interface'\n      description: Interface RequisitionListInterface\n    requisition-list-data-requisition-list-item-interface:\n      required:\n      - added_at\n      - id\n      - options\n      - qty\n      - requisition_list_id\n      - sku\n      - store_id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Requisition List ID.\n        sku:\n          type: integer\n          description: Product SKU.\n        requisition_list_id:\n          type: integer\n          description: Requisition List ID.\n        qty:\n          type: number\n          description: Product Qty.\n        options:\n          type: array\n          description: Requisition list item options.\n          items:\n            type: string\n        store_id:\n          type: integer\n          description: Store ID.\n        added_at:\n          type: string\n          description: Added_at value.\n        extension_attributes:\n          $ref: '#/components/schemas/requisition-list-data-requisition-list-item-extension-interface'\n      description: Interface RequisitionListItemInterface\n    requisition-list-data-requisition-list-item-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListItemInterface\n    requisition-list-data-requisition-list-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListInterface\n    checkout-data-shipping-information-interface:\n      required:\n      - shipping_address\n      - shipping_carrier_code\n      - shipping_method_code\n      type: object\n      properties:\n        shipping_address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        billing_address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        shipping_method_code:\n          type: string\n          description: Shipping method code\n        shipping_carrier_code:\n          type: string\n          description: Carrier code\n        extension_attributes:\n          $ref: '#/components/schemas/checkout-data-shipping-information-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Interface ShippingInformationInterface\n    checkout-data-shipping-information-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface\n    checkout-data-totals-information-interface:\n      required:\n      - address\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        shipping_method_code:\n          type: string\n          description: Shipping method code\n        shipping_carrier_code:\n          type: string\n          description: Carrier code\n        extension_attributes:\n          $ref: '#/components/schemas/checkout-data-totals-information-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Interface TotalsInformationInterface\n    checkout-data-totals-information-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface\n    gift-card-account-data-gift-card-account-interface:\n      required:\n      - base_gift_cards_amount\n      - base_gift_cards_amount_used\n      - gift_cards_amount\n      - gift_cards_amount_used\n      type: object\n      properties:\n        gift_cards:\n          type: array\n          description: Cards codes.\n          items:\n            type: string\n        gift_cards_amount:\n          type: number\n          description: Cards amount in quote currency.\n        base_gift_cards_amount:\n          type: number\n          description: Cards amount in base currency.\n        gift_cards_amount_used:\n          type: number\n          description: Cards amount used in quote currency.\n        base_gift_cards_amount_used:\n          type: number\n          description: Cards amount used in base currency.\n        extension_attributes:\n          $ref: '#/components/schemas/gift-card-account-data-gift-card-account-extension-interface'\n      description: Gift Card Account data\n    gift-card-account-data-gift-card-account-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface\nx-tagGroups:\n- name: amazon billing address\n  tags:\n  - amazon-billing-address/{amazonOrderReferenceId}\n- name: amazon shipping address\n  tags:\n  - amazon-shipping-address/{amazonOrderReferenceId}\n- name: amazon\n  tags:\n  - amazon/order-ref\n- name: carts\n  tags:\n  - carts/guest-carts/{cartId}/giftCards\n  - carts/guest-carts/{cartId}/giftCards/{giftCardCode}\n  - carts/mine\n  - carts/mine/balance/apply\n  - carts/mine/collect-totals\n  - carts/mine/payment-information\n  - carts/mine/set-payment-information\n- name: customers\n  tags:\n  - customers\n  - customers/isEmailAvailable\n  - customers/me/activate\n  - customers/me/password\n  - customers/password\n  - customers/resetPassword\n- name: giftregistry\n  tags:\n  - giftregistry/mine/estimate-shipping-methods\n- name: guest carts\n  tags:\n  - guest-carts\n  - guest-carts/{cartId}\n  - guest-carts/{cartId}/billing-address\n  - guest-carts/{cartId}/collect-totals\n  - guest-carts/{cartId}/coupons\n  - guest-carts/{cartId}/coupons/{couponCode}\n  - guest-carts/{cartId}/estimate-shipping-methods\n  - guest-carts/{cartId}/gift-message\n  - guest-carts/{cartId}/gift-message/{itemId}\n  - guest-carts/{cartId}/items\n  - guest-carts/{cartId}/items/{itemId}\n  - guest-carts/{cartId}/order\n  - guest-carts/{cartId}/payment-information\n  - guest-carts/{cartId}/selected-payment-method\n  - guest-carts/{cartId}/set-payment-information\n  - guest-carts/{cartId}/shipping-information\n  - guest-carts/{cartId}/totals-information\n- name: guest giftregistry\n  tags:\n  - guest-giftregistry/{cartId}/estimate-shipping-methods\n- name: integration\n  tags:\n  - integration/admin/token\n  - integration/customer/token\n- name: negotiable carts\n  tags:\n  - negotiable-carts/{cartId}/billing-address\n  - negotiable-carts/{cartId}/coupons\n  - negotiable-carts/{cartId}/coupons/{couponCode}\n  - negotiable-carts/{cartId}/estimate-shipping-methods\n  - negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id\n  - negotiable-carts/{cartId}/giftCards\n  - negotiable-carts/{cartId}/giftCards/{giftCardCode}\n  - negotiable-carts/{cartId}/payment-information\n  - negotiable-carts/{cartId}/set-payment-information\n  - negotiable-carts/{cartId}/shipping-information\n- name: requisition_lists\n  tags:\n  - requisition_lists\n- name: reward\n  tags:\n  - reward/mine/use-reward\n- name: vertex address validation\n  tags:\n  - vertex-address-validation/vertex-address\n- name: worldpay guest carts\n  tags:\n  - worldpay-guest-carts/{cartId}/payment-information\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/magento.async.customer/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/magento.async.customer/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}