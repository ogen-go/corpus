{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/corona-warn-app/cwa-testresult-server"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "openapi.json",
			"byteSize": 9757,
			"content": "{\"openapi\": \"3.0.1\",\n\"info\": {\n    \"title\": \"cwa-testresult-server\",\n    \"license\": {\n        \"name\": \"Apache 2.0\",\n        \"url\": \"http://www.apache.org/licenses/LICENSE-2.0\"\n    },\n    \"version\": \"1.4.4-SNAPSHOT\"\n},\n\"servers\": [\n    {\n        \"url\": \"http://localhost:8080\",\n        \"description\": \"Generated server url\"\n    }\n],\n\"paths\": {\n    \"/api/v1/quicktest/results\": {\n        \"post\": {\n            \"tags\": [\n                \"test-result-controller\"\n            ],\n            \"summary\": \"Set multiple testresults for a Rapid Antigen Test as an array.\",\n            \"description\": \"The result and the sc (sample collection) timestamp of a RAT can be set.\",\n            \"operationId\": \"quicktestResults\",\n            \"requestBody\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/TestResultRequest\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"responses\": {\n                \"204\": {\n                    \"description\": \"No content, RAT result(s) inserted successfully.\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"/api/v1/quicktest/result\": {\n        \"post\": {\n            \"tags\": [\n                \"test-result-controller\"\n            ],\n            \"summary\": \"Set the testresult for a Rapid Antigen Test.\",\n            \"description\": \"The result and the sc (sample collection) timestamp of a RAT can be set.\",\n            \"operationId\": \"quickTestResult\",\n            \"requestBody\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/TestResultRequest\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"responses\": {\n                \"200\": {\n                    \"description\": \"Ok, RAT result inserted successfully.\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TestResultResponse\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"/api/v1/pocnat/results\": {\n        \"post\": {\n            \"tags\": [\n                \"test-result-controller\"\n            ],\n            \"summary\": \"Set multiple testresults for a PoC-NAT as an array.\",\n            \"description\": \"The result and the sc (sample collection) timestamp of a PoC-NAT can be set.\",\n            \"operationId\": \"pocnatResults\",\n            \"requestBody\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/PocNatResultList\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"responses\": {\n                \"204\": {\n                    \"description\": \"No content, PoC-NAT result(s) inserted successfully.\"\n                }\n            }\n        }\n    },\n    \"/api/v1/pocnat/result\": {\n        \"post\": {\n            \"tags\": [\n                \"test-result-controller\"\n            ],\n            \"summary\": \"Set the testresult for a PoC-NAT.\",\n            \"description\": \"The result and the sc (sample collection) timestamp of a PoC-NAT can be set.\",\n            \"operationId\": \"pocnatResult\",\n            \"requestBody\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/TestResultRequest\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"responses\": {\n                \"200\": {\n                    \"description\": \"Ok, PoC-NAT result inserted successfully.\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TestResultResponse\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"/api/v1/lab/results\": {\n        \"post\": {\n            \"tags\": [\n                \"test-result-controller\"\n            ],\n            \"summary\": \"PCR Testresults to be inserted by labs.\",\n            \"description\": \"PCR testresults can be inserted.\",\n            \"operationId\": \"results\",\n            \"requestBody\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/TestResultRequest\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"responses\": {\n                \"204\": {\n                    \"description\": \"No content, testresult successfully inserted\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"/api/v1/app/result\": {\n        \"post\": {\n            \"tags\": [\n                \"test-result-controller\"\n            ],\n            \"summary\": \"Retrieve test results\",\n            \"description\": \"Get test result for a given TestId (Hashed GUID)\",\n            \"operationId\": \"result\",\n            \"requestBody\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/TestResultRequest\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"responses\": {\n                \"200\": {\n                    \"description\": \"Content exists\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TestResultResponse\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n},\n\"components\": {\n    \"schemas\": {\n        \"TestResultRequest\": {\n            \"required\": [\n                \"id\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"pattern\": \"^[XxA-Fa-f0-9]([A-Fa-f0-9]{63})$\",\n                    \"type\": \"string\"\n                },\n                \"sc\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int64\"\n                }\n            },\n            \"description\": \"The test result request model.\"\n        },\n        \"TestResultResponse\": {\n            \"required\": [\n                \"testResult\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n                \"testResult\": {\n                    \"maximum\": 9,\n                    \"minimum\": 0,\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                },\n                \"sc\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int64\"\n                },\n                \"labId\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"description\": \"The test result response model.\"\n        },\n        \"PocNatResult\": {\n            \"required\": [\n                \"id\",\n                \"result\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"pattern\": \"^[XxA-Fa-f0-9]([A-Fa-f0-9]{63})$\",\n                    \"type\": \"string\",\n                    \"description\": \"the testId (Hashed GUID\"\n                },\n                \"result\": {\n                    \"maximum\": 14,\n                    \"minimum\": 10,\n                    \"type\": \"integer\",\n                    \"description\": \"the result of the PoC-NAT\",\n                    \"format\": \"int32\"\n                },\n                \"sc\": {\n                    \"type\": \"integer\",\n                    \"description\": \"the timestamp of the sample collection (sc) in unix epoch format. If not set, the time of insertion will be used instead\",\n                    \"format\": \"int64\"\n                }\n            },\n            \"description\": \"The PoC-NAT result model.\"\n        },\n        \"PocNatResultList\": {\n            \"required\": [\n                \"labId\",\n                \"testResults\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n                \"testResults\": {\n                    \"type\": \"array\",\n                    \"description\": \"array of PoC-NAT results\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/PocNatResult\"\n                    }\n                },\n                \"labId\": {\n                    \"maxLength\": 64,\n                    \"type\": \"string\",\n                    \"description\": \"The id that identifies a lab. Every lab can choose its own labid, but it must be unique over all labs, should be generated once via cryptographic hash function\"\n                }\n            },\n            \"description\": \"The PoC-NAT result list model.\"\n        }\n    }\n}\n}",
			"canonicalURL": "/github.com/corona-warn-app/cwa-testresult-server@eb92b9bd42aa497c68e3807d18ee1a2be063e308/-/blob/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/corona-warn-app/cwa-testresult-server/blob/eb92b9bd42aa497c68e3807d18ee1a2be063e308/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}