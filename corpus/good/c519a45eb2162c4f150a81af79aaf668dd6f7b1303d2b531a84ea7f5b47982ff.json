{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/davidgarc/shpe-conference-2020"
		},
		"file": {
			"name": "api-definition.yaml",
			"size": 0,
			"path": "backend/templates/api/api-definition.yaml",
			"byteSize": 4270,
			"content": "openapi: 3.0.0\ninfo:\n  title: Resume API\n  description: Operations to manage your Resume Web Application\n  version: 1.0.0\ntags:\n  - name: Experiences\n    description: |\n      Operations to manage experiences.\n  - name: Endorsements \n    description: |\n      Operations to manage endorsements.\nx-amazon-apigateway-cors:\n  allowOrigins:\n    - '*'\n  allowMethods:\n    - GET\n    - POST\n  allowHeaders:\n    - authorization\n    - content-type\n  maxAge: 3600\n\npaths:\n  /experiences:\n    post:\n      summary: Add a new experience\n      description: Create a new experience with any details you like. This will return an id\n      tags:\n        - Experiences\n      responses:\n        201:\n          $ref: '#/components/responses/Created'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExperienceModel'\n    get:\n      summary: Get all available experience entries\n      description: Retrieves all experiences available\n      tags:\n        - Experiences\n      responses:\n        200:\n          description: The request succeeded and all available experiences are included in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExperienceListModel'\n\n  /experiences/{experienceId}:\n    parameters:\n      - $ref: '#/components/parameters/experienceId'\n    get:\n      summary: Get Experience details\n      description: Returns all the details for an experience with the provided id\n      tags:\n        - Experiences\n      responses:\n        200:\n          description: The request succeeded and the experience is included in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExperienceModel'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\ncomponents:\n  parameters:\n    experienceId:\n      name: experienceId\n      in: path\n      description: Identifier for an experience\n      required: true\n      example: 2umzGoDfBfPveMsTahhQxS\n      schema:\n        type: string\n\n  schemas:\n    ExperienceModel:\n      type: object\n      required:\n        - name\n        - startDate\n      properties:\n        name:\n          type: string\n        role:\n          type: string\n        description:\n          type: string\n        startDate:\n          type: string\n        endDate:\n          type: string\n      example: \n        id: 2umzGoDfBfPveMsTahhQxS\n        name: Florida International University\n        role: Student\n        description: Computer Engineer student focused on software development\n        startDate: 07/01/2012\n        endDate: 08/01/2014\n        \n    ExperienceListModel:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperienceModel'\n\n  responses:\n    Created: #201\n      description: The request succeeded and created a new experience\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              id:\n                type: string\n            required:\n              - id\n    NoContentUpdate: #204\n      description: The request succeeded and updated an existing experience\n    NoContentDelete: #204\n      description: The request finished processing and the experience was removed or did not exist\n    NotFound: #404\n      description: The requested experience was not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: Could not find an experience with the specified id.\n            required:\n              - message\n\n    InternalServerError: #500\n      description: The server encountered an unexpected condition which prevented it from fulfilling the request.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                example: An error occurred saving the experience.\n            required:\n              - message\n",
			"canonicalURL": "/github.com/davidgarc/shpe-conference-2020@123ba450225f91092a0cd3b645d88ca76a44e9f1/-/blob/backend/templates/api/api-definition.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/davidgarc/shpe-conference-2020/blob/123ba450225f91092a0cd3b645d88ca76a44e9f1/backend/templates/api/api-definition.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}