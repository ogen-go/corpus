{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CustomerCaseManagement.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CustomerCaseManagement.yaml",
			"byteSize": 15059,
			"content": "openapi: 3.0.1\ninfo:\n  title: Customer Case Management\n  description: Track and assess case load and resolution activity - allocate resources as necessary to optimize case resolution performance\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CustomerCaseManagement/10.0.0\npaths:\n  /CustomerCaseManagement/Create:\n    post:\n      tags:\n      - CR - CustomerCaseManagementPlan\n      summary: CrCR Create the management plan for customer case handling\n      description: CrCR Create the management plan for customer case handling\n      operationId: Create\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerCaseManagementPlan'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerCaseManagementPlan'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Update:\n    put:\n      tags:\n      - CR - CustomerCaseManagementPlan\n      summary: UpCR Update aspects of the customer case handling management plan\n      description: UpCR Update aspects of the customer case handling management plan\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerCaseManagementPlan'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerCaseManagementPlan'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Request:\n    put:\n      tags:\n      - CR - CustomerCaseManagementPlan\n      summary: RqCR Request manual intervention with the plan\n      description: RqCR Request manual intervention with the plan\n      operationId: Request\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerCaseManagementPlan'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerCaseManagementPlan'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Retrieve:\n    get:\n      tags:\n      - CR - CustomerCaseManagementPlan\n      summary: ReCR Retrieve details about the customer case handling management plan\n      description: ReCR Retrieve details about the customer case handling management plan\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerCaseManagementPlan'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Rules/{rulesId}/Update:\n    put:\n      tags:\n      - BQ - Rules\n      summary: UpBQ Update details of the case resolution criterion\n      description: UpBQ Update details of the case resolution criterion\n      operationId: UpdateRules\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      - $ref: '#/components/parameters/RulesID'\n      requestBody:\n        $ref: '#/components/requestBodies/Rules'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rules'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Rules/{rulesId}/Request:\n    put:\n      tags:\n      - BQ - Rules\n      summary: RqBQ Request manual intervention in the case resolution rules\n      description: RqBQ Request manual intervention in the case resolution rules\n      operationId: RequestRules\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      - $ref: '#/components/parameters/RulesID'\n      requestBody:\n        $ref: '#/components/requestBodies/Rules'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rules'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Rules/{rulesId}/Retrieve:\n    get:\n      tags:\n      - BQ - Rules\n      summary: ReBQ Retrieve details about the customer case criterion\n      description: ReBQ Retrieve details about the customer case criterion\n      operationId: RetrieveRules\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      - $ref: '#/components/parameters/RulesID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rules'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Performance/{performanceId}/Update:\n    put:\n      tags:\n      - BQ - Performance\n      summary: UpBQ Update performance analysis related information\n      description: UpBQ Update performance analysis related information\n      operationId: UpdatePerformance\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      - $ref: '#/components/parameters/PerformanceID'\n      requestBody:\n        $ref: '#/components/requestBodies/Performance'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Performance'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Performance/{performanceId}/Request:\n    put:\n      tags:\n      - BQ - Performance\n      summary: RqBQ Request manual intervention in unit performance analysis\n      description: RqBQ Request manual intervention in unit performance analysis\n      operationId: RequestPerformance\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      - $ref: '#/components/parameters/PerformanceID'\n      requestBody:\n        $ref: '#/components/requestBodies/Performance'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Performance'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerCaseManagement/{customercasemanagementId}/Performance/{performanceId}/Retrieve:\n    get:\n      tags:\n      - BQ - Performance\n      summary: ReBQ Retrieve details about business unit performance assessment activity\n      description: ReBQ Retrieve details about business unit performance assessment activity\n      operationId: RetrievePerformance\n      parameters:\n      - $ref: '#/components/parameters/CustomerCaseManagementID'\n      - $ref: '#/components/parameters/PerformanceID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Performance'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CustomerCaseManagementPlan:\n      type: object\n      properties:\n        CustomerCaseManagementPlanPeriod:\n          type: string\n        CustomerCasePoliciesAndGuidelines:\n          type: string\n        CustomerCaseServicePerformanceGoals:\n          type: string\n        CustomerCaseServiceSchedule:\n          type: string\n        CustomerCaseServiceOperatingConfiguration:\n          type: string\n        CustomerCaseResourcePlan:\n          type: string\n        CustomerCaseTrainingPlan:\n          type: string\n    Rules:\n      type: object\n      properties:\n        CustomerCaseDecisionCriterion:\n          type: string\n        CustomerCaseDecisionCriterionDefinition:\n          type: string\n        CustomerCaseDecisionCriterionRules:\n          type: string\n        CustomerCaseDecisionCriterionAnalysis:\n          type: string\n        CustomerCaseDecisionCriterionHistory:\n          type: string\n    Performance:\n      type: object\n      properties:\n        CustomerCaseResourceUtilization:\n          type: string\n        CustomerCaseLoadingProjections:\n          type: string\n        CustomerCaseResolutionServiceStatistics:\n          type: string\n        CustomerCaseServiceStatisticType:\n          type: string\n        CustomerCaseServiceStatisticValue:\n          type: string\n        CustomerCaseServiceStatisticInterpretation:\n          type: string\n        CustomerCaseServiceStatisticRecommendation:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n  parameters:\n    CustomerCaseManagementID:\n      name: customercasemanagementId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    RulesID:\n      name: rulesId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    PerformanceID:\n      name: performanceId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    CustomerCaseManagementPlan:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CustomerCaseManagementPlan'\n    Rules:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Rules'\n    Performance:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Performance'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CustomerCaseManagement.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CustomerCaseManagement.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}