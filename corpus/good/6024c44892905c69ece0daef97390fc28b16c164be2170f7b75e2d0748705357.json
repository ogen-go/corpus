{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GetDKAN/dkan2"
		},
		"file": {
			"name": "dkan_api_openapi_spec.yml",
			"size": 0,
			"path": "modules/dkan_api/docs/dkan_api_openapi_spec.yml",
			"byteSize": 19943,
			"content": "openapi: 3.0.2\ninfo:\n  title: API Documentation\n  version: Alpha\ntags:\n  - name: Dataset\n  - name: SQL Query\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  parameters:\n    datasetUuid:\n      name: identifier\n      in: path\n      description: A dataset uuid\n      required: true\n      schema:\n        type: string\n      example: 11111111-1111-4111-1111-111111111111\n    property:\n      name: schema_id\n      in: path\n      description: Property of a dataset\n      required: true\n      schema:\n        type: string\n      example: keyword\n    propertyUuid:\n      name: identifier\n      in: path\n      description: A property uuid\n      required: true\n      schema:\n        type: string\n      example: PROPERTY-UUID\n    query:\n      name: query\n      in: query\n      description: SQL query\n      required: true\n      schema:\n        type: string\n      example: '[SELECT * FROM DATASTORE-UUID];'\n    datastoreUuid:\n      name: identifier\n      in: path\n      description: A datastore uuid\n      required: true\n      schema:\n        type: string\n      example: DATASTORE-UUID\n    harvestPlanId:\n      name: plan_id\n      in: path\n      description: A harvest plan identifier\n      required: true\n      schema:\n        type: string\n      example: HARVEST-PLAN-ID\n    harvestRunId:\n      name: run_id\n      in: path\n      description: A harvest run identifier\n      required: true\n      schema:\n        type: string\n      example: HARVEST-RUN-ID\n  schemas:\n    # @TODO: Load directly from dkan2's schema/collections/dataset.json schema\n    Dataset:\n      type: object\n      required:\n        - title\n        - description\n        - identifier\n        - accessLevel\n        - modified\n        - keyword\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        identifier:\n          type: string\n        accessLevel:\n          type: string\n          enum:\n            - public\n            - restricted public\n            - non-public\n        modified:\n          type: string\n        keyword:\n          type: array\npaths:\n  /api/1/metastore/schemas/dataset:\n    get:\n      operationId: dataset-get-schema\n      summary: Get dataset schema\n      tags:\n        - Dataset\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/1/metastore/schemas/dataset/items:\n    get:\n      operationId: dataset-get-all\n      summary: Get all datasets\n      tags:\n        - Dataset\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dataset'\n    post:\n      operationId: dataset-create\n      summary: Create a dataset\n      tags:\n        - Dataset\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n            example:\n              title: UPDATED Title for 111111\n              description: UPDATED Description for 111111\n              identifier: 11111111-1111-4111-1111-111111111111\n              accessLevel: public\n              modified: 2020-02-02\n              keyword: \n                - test\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - endpoint\n                  - identifier\n                properties:\n                  endpoint:\n                    type: string\n                  identifier:\n                    type: string\n        '409':\n          description: Resource already exists\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n        '401':\n          description: Unauthorized\n  /api/1/metastore/schemas/dataset/items/{identifier}:\n    get:\n      operationId: dataset-get\n      summary: Get this dataset\n      tags:\n        - Dataset\n      parameters:\n        - name: identifier\n          in: path\n          description: A dataset uuid\n          required: true\n          schema:\n            type: string\n          example: c9e2d352-e24c-4051-9158-f48127aa5692\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n    put:\n      operationId: dataset-put\n      summary: Replace a dataset\n      tags:\n        - Dataset\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/datasetUuid'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n            example:\n              title: UPDATED AGAIN Title for 111111\n              description: UPDATED AGAIN Description for 111111\n              identifier: 11111111-1111-4111-1111-111111111111\n              accessLevel: public\n              modified: 2020-02-02\n              keyword:\n                - test\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - endpoint\n                  - identifier\n                properties:\n                  endpoint:\n                    type: string\n                  identifier:\n                    type: string\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n    patch:\n      operationId: dataset-patch\n      summary: Update a dataset\n      tags:\n        - Dataset\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/datasetUuid'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              # Only a subset of Dataset schema\n              type: object\n            example:\n              theme:\n                - Some New Theme\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - endpoint\n                  - identifier\n                properties:\n                  endpoint:\n                    type: string\n                  identifier:\n                    type: string\n        '401':\n          description: Unauthorized\n    delete:\n      operationId: dataset-delete\n      summary: Delete a dataset\n      tags:\n        - Dataset\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/datasetUuid'\n      responses:\n        '200':\n          description: Dataset has been deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n        '401':\n          description: Unauthorized\n  /api/1/metastore/schemas/{schema_id}/items:\n    get:\n      operationId: property-get-all\n      summary: Get properties\n      tags:\n        - Properties\n      parameters:\n        - $ref: '#/components/parameters/property'\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - identifier\n                  properties:\n                    identifier:\n                      type: string\n  /api/1/metastore/schemas/{schema_id}/items/{identifier}:\n    get:\n      operationId: property-get\n      summary: Get a property\n      tags:\n        - Properties\n      parameters:\n        - $ref: '#/components/parameters/property'\n        - $ref: '#/components/parameters/propertyUuid'\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - identifier\n                properties:\n                  identifier:\n                    type: string\n    put:\n      operationId: property-put\n      summary: Replace a property\n      tags:\n        - Properties\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/property'\n        - $ref: '#/components/parameters/propertyUuid'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - identifier\n              properties:\n                identifier:\n                  type: string\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - endpoint\n                  - identifier\n                properties:\n                  endpoint:\n                    type: string\n                  identifier:\n                    type: string\n        '401':\n          description: Unauthorized\n    patch:\n      operationId: property-patch\n      summary: Update a property\n      tags:\n        - Properties\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/property'\n        - $ref: '#/components/parameters/propertyUuid'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              # Only a subset of Property schema\n              type: object\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - endpoint\n                  - identifier\n                properties:\n                  endpoint:\n                    type: string\n                  identifier:\n                    type: string\n        '401':\n          description: Unauthorized\n  /api/1/datastore/sql:\n    get:\n      operationId: datastore-query\n      summary: Query resources in datastore\n      description: \u003e\n        Interact with resources in the datastore using an SQL-like syntax.\n      tags:\n        - SQL Query\n      parameters:\n        - $ref: '#/components/parameters/query'\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n  /api/1/harvest/plans:\n    get:\n      operationId: harvest-get-all\n      summary: List harvest identifiers\n      description: \u003e\n        Lists the identifiers of all registered harvests.\n      tags:\n        - Harvest\n      security:\n        - basicAuth: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          description: Unauthorized\n    post:\n      operationId: harvest-register\n      summary: Register a new harvest\n      description: \u003e\n        Registers a new harvest, after validating against our schema.\n      tags:\n        - Harvest\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - endpoint\n                  - identifier\n                properties:\n                  endpoint:\n                    type: string\n                  identifier:\n                    type: string\n        '401':\n          description: Unauthorized\n  /api/1/harvest/plans/{plan_id}:\n    get:\n      operationId: harvest-get-single\n      summary: Get single harvest plan\n      description: \u003e\n        Get the json plan of a registered harvest, based on the its harvest id.\n      tags:\n        - Harvest\n      parameters:\n        - $ref: '#/components/parameters/harvestPlanId'\n      security:\n        - basicAuth: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - identifier\n                  - extract\n                  - load\n                properties:\n                  identifier:\n                    type: string\n                  extract:\n                    type: object\n                    required:\n                      - type\n                      - uri\n                    properties:\n                      type:\n                        type: string\n                      uri:\n                        type: string\n                  load:\n                    type: object\n                    required:\n                      - type\n                    properties:\n                      type:\n                        type: string\n        '401':\n          description: Unauthorized\n  /api/1/harvest/runs/{run_id}:\n    get:\n      operationId: harvest-run-info\n      summary: Information about a previous run\n      description: \u003e\n        Gives information about a previous run for a specific harvest run.\n      tags:\n        - Harvest\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/harvestRunId'\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n        '401':\n          description: Unauthorized\n  /api/1/harvest/runs:\n    get:\n      operationId: harvest-info\n      summary: List previous runs for a harvest id\n      description: \u003e\n        Lists the identifiers (timestamps) of previous runs for a particular\n        harvest id.\n      tags:\n        - Harvest\n      security:\n        - basicAuth: []\n      parameters:\n        - in: query\n          name: plan\n          description: A plan identifier\n          required: true\n          schema:\n            type: string\n          example: PLAN-ID\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n        '401':\n          description: Unauthorized\n    post:\n      operationId: harvest-run\n      summary: Run a harvest\n      description: \u003e\n        Runs a harvest for a specific plan identifier inside json object payload.\n      tags:\n        - Harvest\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - plan_id\n              properties:\n                plan_id:\n                  type: string\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - identifier\n                  - result\n                properties:\n                  identifier:\n                    type: string\n                  result:\n                    type: string\n        '401':\n          description: Unauthorized\n  /api/1/datastore/imports:\n    get:\n      operationId: datastore-list\n      summary: List datastores\n      description: \u003e\n        Returns a list of all stored importers, with data about their file fetcher and status.\n      tags:\n        - Datastore\n      security:\n        - basicAuth: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n        '401':\n          description: Unauthorized\n    post:\n      operationId: datastore-import\n      summary: Datastore import\n      description: \u003e\n        Immediately starts the import process for a datastore.\n      tags:\n        - Datastore\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resource_id\n              properties:\n                plan_id:\n                  type: string\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n        '401':\n          description: Unauthorized\n  /api/1/datastore/imports/{identifier}:\n    get:\n      operationId: datastore-get\n      summary: Datastore statistics\n      description: \u003e\n        Returns the numbers of rows and columns, and a list of columns headers\n        from the datastore.\n      tags:\n        - Datastore\n      parameters:\n        - $ref: '#/components/parameters/datastoreUuid'\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - numOfRows\n                  - numOfColumns\n                  - columns\n                properties:\n                  numOfRows:\n                    type: integer\n                  numOfColumns:\n                    type: integer\n                  columns:\n                    type: array\n                    items:\n                      type: string\n    delete:\n      operationId: datastore-delete\n      summary: Delete a datastore\n      description: \u003e\n        Delete one or more datastores. If the uuid parameter is that of\n        a resource, delete that resource. If the uuid parameter is that of\n        a dataset, delete all resources of that dataset.\n      tags:\n        - Datastore\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/datastoreUuid'\n      responses:\n        '200':\n          description: Dataset has been deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n  /api/1:\n    get:\n      operationId: docs-get\n      summary: Complete json documentation\n      tags:\n        - Documentation\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n  /api/1/metastore/schemas/dataset/items/{identifier}/docs:\n    get:\n      operationId: docs-get-dataset-specific\n      summary: Dataset-specific json documentation\n      tags:\n        - Documentation\n      parameters:\n        - name: identifier\n          in: path\n          description: A dataset uuid\n          required: true\n          schema:\n            type: string\n          example: c9e2d352-e24c-4051-9158-f48127aa5692\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n",
			"canonicalURL": "/github.com/GetDKAN/dkan2@3ba5dcc6e7d22bb49151ac9615f45251dd70e343/-/blob/modules/dkan_api/docs/dkan_api_openapi_spec.yml",
			"externalURLs": [
				{
					"url": "https://github.com/GetDKAN/dkan2/blob/3ba5dcc6e7d22bb49151ac9615f45251dd70e343/modules/dkan_api/docs/dkan_api_openapi_spec.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}