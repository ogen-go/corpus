{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/the-singularity-mesh/apigee-proxy-template"
		},
		"file": {
			"name": "Hipster-Products-API.yaml",
			"size": 0,
			"path": "Hipster-Products-API.yaml",
			"byteSize": 9688,
			"content": "openapi: 3.0.0\ninfo:\n  title: Hipster Products API With Defined Error Codes\n  description: Products API for Hipster Application\n  version: \"1\"\nservers:\n- url: https://guppratik-56916-eval-test.apigee.net/v1/singularity\npaths:\n  /products:\n    get:\n      summary: Returns the range of products along with images\n      parameters:\n        - in: header\n          name: x-api-key\n          schema:\n            type: string\n          required: true\n      tags:\n      - ProductCatalogService\n      operationId: getProducts\n      responses:\n        200:\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hipstershopListProductsResponse'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/400errorResponse'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/401errorResponse'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/403errorResponse'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/404errorResponse'\n        429:\n          description: Too Many Requests\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/429errorResponse'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/500errorResponse'\n        501:\n          description: Not Implemented\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/501errorResponse'\n        default:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\ncomponents:\n  schemas:\n    hipstershopListProductsResponse:\n      type: object\n      properties:\n        products:\n          type: array\n          items:\n            $ref: '#/components/schemas/hipstershopProduct'\n    hipstershopMoney:\n      type: object\n      properties:\n        currency_code:\n          type: string\n          description: The 3-letter currency code defined in ISO 4217.\n        units:\n          type: string\n          description: |-\n            The whole units of the amount.\n            For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.\n          format: int64\n        nanos:\n          type: integer\n          description: |-\n            Number of nano (10^-9) units of the amount.\n            The value must be between -999,999,999 and +999,999,999 inclusive.\n            If `units` is positive, `nanos` must be positive or zero.\n            If `units` is zero, `nanos` can be positive, zero, or negative.\n            If `units` is negative, `nanos` must be negative or zero.\n            For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.\n          format: int32\n      description: Represents an amount of money with its currency type.\n    hipstershopProduct:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        picture:\n          type: string\n        price_usd:\n          $ref: '#/components/schemas/hipstershopMoney'\n        categories:\n          type: array\n          description: |-\n            Categories such as \"vintage\" or \"gardening\" that can be used to look up\n            other related products.\n          items:\n            type: string\n    errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: ErrorResponseCode\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: backend\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n    400errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: invalidRequestHeader\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: \u003e-\n            Bad Request request.header.content-type header is invalid when\n            matched with regular expression: ^application/json$\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: apigeePolicy\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: validateAndSanitizeRequest commonFunctions.js\n    401errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: InvalidAPIKey\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: Invalid ApiKey\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: apigeePolicy\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: VerifyAPIKey\n    429errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: ErrorResponseCode\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: \u003e-\n            {\"fault\":{\"faultstring\":\"Spike arrest violation. Allowed rate :\n            MessageRate{messagesPerPeriod=5, periodInMicroseconds=3000000,\n            maxBurstMessageCount=1.0}\",\"detail\":{\"errorcode\":\"policies.ratelimit.SpikeArrestViolation\"}}}\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: backend\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n    403errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: IPDeniedAccess\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: 'Access denied for Client IP:34.205.190.4'\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: apigeePolicy\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: checkClientIpAgainstAllowedListOfIps\n    404errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: ResourceNotFound\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: Resource /products/something/15262P1 not found\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: apigeePolicy\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: RaiseFaultEnterErrorFlow\n    500errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: ErrorResponseCode\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: backend\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n    501errorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          pattern: .+\n          description: apigee-specific error code\n          example: MethodNotImplemented\n        message:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: request method POST is not Implemented\n        source:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: apigeePolicy\n        sourceName:\n          type: string\n          pattern: .+\n          description: human-readable summary of the problem\n          example: RaiseFaultEnterErrorFlow\n",
			"canonicalURL": "/github.com/the-singularity-mesh/apigee-proxy-template@a11195a9cc4e3ce846a2d18d398dee1703257aff/-/blob/Hipster-Products-API.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/the-singularity-mesh/apigee-proxy-template/blob/a11195a9cc4e3ce846a2d18d398dee1703257aff/Hipster-Products-API.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}