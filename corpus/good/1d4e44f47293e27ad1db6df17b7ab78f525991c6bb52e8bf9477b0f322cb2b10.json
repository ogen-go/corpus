{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "robokop/openapi.yml",
			"byteSize": 10686,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: patrick@covar.com\n    name: Patrick Wang\n    url: robokop.renci.org\n  description: An API for answering biomedical questions\n  termsOfService: https://robokop.renci.org/termsofservice/\n  title: ROBOKOP Ranker\n  version: 0.0.1\n  x-reasoner_standard_version: 0.9.1\ntags:\n  - name: \"0.9.2\"\n  - name: translator\n  - name: reasoner\npaths:\n  /query/:\n    post:\n      parameters:\n        - description: Maximum number of results to return. Provide -1 to indicate no maximum.\n          in: query\n          name: max_results\n          schema:\n            type: integer\n            default: -1\n        - description: 'Requested output format. DENSE, MESSAGE, CSV or ANSWERS'\n          in: query\n          name: output_format\n          schema:\n            type: string\n            default: MESSAGE\n        - description: 'Max connectivity of nodes considered in the answers, Use -1 for no restriction'\n          in: query\n          name: max_connectivity\n          schema:\n            type: integer\n            default: -1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n            example:\n              message:\n                  query_graph:\n                      nodes:\n                        - id: \"n00\"\n                          type: \"disease\"\n                          curie: \"MONDO:0005737\"\n                        - id: \"n01\"\n                          type: \"gene\"\n                          set: true\n                        - id: \"n02\"\n                          type: genetic_condition\n                      edges:\n                        - id: \"e00\"\n                          source_id: \"n00\"\n                          target_id: \"n01\"\n                        - id: \"e01\"\n                          source_id: \"n01\"\n                          target_id: \"n02\"\n        description: A message with question graph.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: A message with knowledge graph and answers.\n      summary: Get answers to a question\n      tags:\n        - \"0.9.2\"\nservers:\n  - url: https://robokop.renci.org/ranker/api/\ncomponents:\n  schemas:\n    Query:\n      x-body-name: request_body\n      type: object\n      properties:\n        message:\n          $ref: '#/components/schemas/Message'\n      required:\n        - message\n    Message:\n      type: object\n      properties:\n        results:\n          description: List of all returned potential answers for the query posed\n          type: array\n          items:\n            $ref: '#/components/schemas/Result'\n        query_graph:\n          type: object\n          description: \u003e-\n            QueryGraph object that contains a serialization of a query in the form\n            of a graph\n          $ref: '#/components/schemas/QueryGraph'\n        knowledge_graph:\n          type: object\n          description: \u003e-\n            KnowledgeGraph object that contains all the nodes and edges referenced\n            in any of the possible answers to the query OR connection information\n            for a remote knowledge graph\n          oneOf:\n            - $ref: '#/components/schemas/KnowledgeGraph'\n            - $ref: '#/components/schemas/RemoteKnowledgeGraph'\n    Result:\n      type: object\n      description: One of potentially several results or answers for a query\n      properties:\n        node_bindings:\n          type: array\n          description: List of QNode-KNode bindings.\n          items:\n            $ref: '#/components/schemas/NodeBinding'\n        edge_bindings:\n          type: array\n          description: List of QEdge-KEdge bindings.\n          items:\n            $ref: '#/components/schemas/EdgeBinding'\n        score:\n          type: number\n          format: float\n          description: Any type of score associated with this result\n          example: 163.233\n      required:\n        - node_bindings\n        - edge_bindings\n    NodeBinding:\n      type: object\n      properties:\n        qg_id:\n          type: string\n        kg_id:\n          oneOf:\n            - type: string\n            - type: array\n              items:\n                type: string\n      required:\n        - qg_id\n        - kg_id\n    EdgeBinding:\n      type: object\n      properties:\n        qg_id:\n          type: string\n        kg_id:\n          oneOf:\n            - type: string\n            - type: array\n              items:\n                type: string\n      required:\n        - qg_id\n        - kg_id\n    KnowledgeGraph:\n      type: object\n      description: \u003e-\n        A thought graph associated with this result. This will commonly be a\n        linear path subgraph from one concept to another, but related items aside\n        of the path may be included.\n      properties:\n        nodes:\n          type: array\n          description: List of nodes in the KnowledgeGraph\n          items:\n            $ref: '#/components/schemas/KNode'\n        edges:\n          type: array\n          description: List of edges in the KnowledgeGraph\n          items:\n            $ref: '#/components/schemas/KEdge'\n      required:\n        - nodes\n        - edges\n    RemoteKnowledgeGraph:\n      type: object\n      description: \u003e-\n        A thought graph associated with this result that is not repeated here, but\n        stored elsewhere in a way that can be remotely accessed by the reader of\n        this Message\n      properties:\n        url:\n          type: string\n          example: 'http://robokop.renci.org/api/kg'\n          description: URL that provides programmatic access to the remote knowledge graph\n        credentials:\n          type: object\n          description: \u003e-\n            Credentials needed for programmatic access to the remote knowledge\n            graph\n          $ref: '#/components/schemas/Credentials'\n      required:\n        - url\n        - credentials\n    Credentials:\n      description: Credentials needed for programmatic access to the remote knowledge graph\n      type: object\n      required:\n        - username\n        - password\n      properties:\n        username:\n          description: Username needed for programmatic access to the remote knowledge graph\n          type: string\n        password:\n          type: string\n          description: Password needed for programmatic access to the remote knowledge graph\n    QueryGraph:\n      type: object\n      description: \u003e-\n        A graph intended to be the thought path to be followed by a reasoner to\n        answer the question. This graph is a representation of a question.\n      properties:\n        nodes:\n          type: array\n          description: List of nodes in the QueryGraph\n          items:\n            $ref: '#/components/schemas/QNode'\n        edges:\n          type: array\n          description: List of edges in the QueryGraph\n          items:\n            $ref: '#/components/schemas/QEdge'\n      required:\n        - nodes\n        - edges\n    QNode:\n      type: object\n      description: A node in the QueryGraph\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            QueryGraph internal identifier for this QNode. Recommended form: n00,\n            n01, n02, etc.\n          example: n00\n        curie:\n          oneOf:\n            - type: string\n            - type: array\n              items:\n                type: string\n          description: CURIE identifier for this node\n          example: 'OMIM:603903'\n        type:\n          oneOf:\n            - $ref: '#/components/schemas/BiolinkEntity'\n            - type: array\n              items:\n                $ref: '#/components/schemas/BiolinkEntity'\n              description: 'Entity types of this node (e.g., protein, disease, etc.)'\n              example:\n                - disease\n                - genetic_condition\n      required:\n        - id\n    QEdge:\n      type: object\n      description: An edge in the QueryGraph\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            QueryGraph internal identifier for this QEdge. Recommended form: e00,\n            e01, e02, etc.\n          example: e00\n        type:\n          oneOf:\n            - $ref: '#/components/schemas/BiolinkRelation'\n            - type: array\n              items:\n                $ref: '#/components/schemas/BiolinkRelation'\n        source_id:\n          type: string\n          description: Corresponds to the @id of source node of this edge\n        target_id:\n          type: string\n          description: Corresponds to the @id of target node of this edge\n      required:\n        - id\n        - source_id\n        - target_id\n    KNode:\n      type: object\n      description: A node in the thought subgraph\n      properties:\n        id:\n          type: string\n          description: CURIE identifier for this node\n          example: 'OMIM:603903'\n        name:\n          type: string\n          description: Formal name of the entity\n          example: Haptoglobin\n        type:\n          type: array\n          description: 'Entity type of this node (e.g., protein, disease, etc.)'\n          items:\n            type: string\n          example:\n            - protein\n      required:\n        - id\n    KEdge:\n      type: object\n      description: An edge in the thought subgraph linking two nodes\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            Local identifier for this node which is unique within this\n            KnowledgeGraph, and perhaps within the source reasoner's knowledge\n            graph\n          example: '553903'\n        type:\n          $ref: '#/components/schemas/BiolinkRelation'\n        source_id:\n          type: string\n          description: Corresponds to the @id of source node of this edge\n          example: 'https://omim.org/entry/603903'\n        target_id:\n          type: string\n          description: Corresponds to the @id of target node of this edge\n          example: 'https://www.uniprot.org/uniprot/P00738'\n      required:\n        - id\n        - source_id\n        - target_id\n    BiolinkEntity:\n      description: A subclass of named_thing (snake_case)\n      type: string\n      externalDocs:\n        description: Biolink model entities\n        url: https://biolink.github.io/biolink-model/docs/NamedThing.html\n      example: disease\n    BiolinkRelation:\n      description: A relation, i.e. child of related_to (snake_case)\n      type: string\n      externalDocs:\n        description: Biolink model relations\n        url: https://biolink.github.io/biolink-model/docs/related_to.html\n      example: affects\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/robokop/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/robokop/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}