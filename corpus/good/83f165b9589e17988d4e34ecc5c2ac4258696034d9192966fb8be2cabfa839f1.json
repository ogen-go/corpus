{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/brpaz/go-api-sample"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/api/openapi.yaml",
			"byteSize": 4347,
			"content": "openapi: 3.0.0\ninfo:\n  title: Golang API Sample\n  version: '1.0'\n  contact:\n    name: Bruno Paz\n    url: 'https://brunopaz.dev'\n    email: oss@brunopaz.dev\n  license:\n    name: MIT\n  description: |-\n    This is the API documentation for the [Golang API sample](https://github.com/brpaz/go-api-sample) project.\n    It contains a basic API to manage Todos.\nservers:\n  - url: 'http://go-api-sample.docker'\npaths:\n  /_health:\n    get:\n      summary: Healthcheck\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n              examples:\n                success:\n                  value:\n                    status: pass\n                    checks:\n                      'cpu:utilization':\n                        - componentId: 1 minute\n                          componentType: system\n                          observedValue: 1\n                          observedUnit: '%'\n                          status: pass\n                          time: '2020-10-05T09:15:56.439293006Z'\n                        - componentId: 5 minutes\n                          componentType: system\n                          observedValue: 1\n                          observedUnit: '%'\n                          status: pass\n                          time: '2020-10-05T09:15:56.439293006Z'\n                        - componentId: 15 minutes\n                          componentType: system\n                          observedValue: 1\n                          observedUnit: '%'\n                          status: pass\n                          time: '2020-10-05T09:15:56.439293006Z'\n                      hostname:\n                        - componentId: hostname\n                          componentType: system\n                          observedValue: dc8ea880576c\n                          status: pass\n                          time: '2020-10-05T09:15:56.439293006Z'\n                      'memory:utilization':\n                        - componentId: Total Memory\n                          componentType: system\n                          observedValue: 15819\n                          observedUnit: MB\n                          status: pass\n                          time: '2020-10-05T09:15:56.439293006Z'\n                        - componentId: Free Memory\n                          componentType: system\n                          observedValue: 285\n                          observedUnit: MB\n                          status: pass\n                          time: '2020-10-05T09:15:56.439293006Z'\n                      uptime:\n                        - componentId: uptime\n                          componentType: system\n                          observedValue: 2484\n                          observedUnit: s\n                          status: pass\n                          time: '2020-10-05T09:15:56.439293006Z'\n                    serviceId: go-echo-sample\n                    description: An example Golang application\n        '503':\n          description: Service Unavailable\n      operationId: get-_health\n      description: 'Provides information about the application healthcheck, following the [Healthcheck RFC]()'\n  /todo:\n    get:\n      summary: List of Todos\n      tags: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Todo'\n              examples:\n                success:\n                  value:\n                    - id: 1\n                      content: my todo\n                      created_at: '2020-05-03T05:20:00'\n          description: Success response\n      operationId: list-todos\n      description: Returns a list of todos\ncomponents:\n  schemas:\n    Todo:\n      title: Todo\n      type: object\n      description: Represents a Todo item\n      properties:\n        id:\n          type: integer\n          description: The ID of the todo\n        content:\n          type: string\n          description: The description of the todo\n          minLength: 1\n          maxLength: 255\n        created_at:\n          type: string\n          description: The creation date\n          format: date-time\n      required:\n        - id\n        - content\n        - created_at\n",
			"canonicalURL": "/github.com/brpaz/go-api-sample@1b6a31d7eab66a4062f33b8a84bdf7a967bc352a/-/blob/docs/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/brpaz/go-api-sample/blob/1b6a31d7eab66a4062f33b8a84bdf7a967bc352a/docs/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}