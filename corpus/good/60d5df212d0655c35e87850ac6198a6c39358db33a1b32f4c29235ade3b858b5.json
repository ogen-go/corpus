{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mena-devs/tilde"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "docs/api_specifications/swagger.yaml",
			"byteSize": 9823,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: API V1\n  version: v1.0\npaths:\n  \"/api/v1/invitations\":\n    post:\n      summary: Invitation\n      tags:\n      - Invitations\n      description: Create a new invitation to join Slack Group\n      operationId: createNewInvitation\n      security:\n      - Bearer: []\n      parameters: []\n      responses:\n        '201':\n          description: Creates a new invitation\n          content: {}\n        '302':\n          description: Resend an existing invitation\n          content: {}\n        '422':\n          description: invalid parameters\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/errors_object\"\n        '401':\n          description: unauthorized\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/errors_object\"\n        '405':\n          description: invalid input\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/errors_object\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/invitation\"\n    get:\n      summary: Invitation\n      tags:\n      - Invitations\n      security:\n      - Bearer: []\n      responses:\n        '200':\n          description: Retrieve invitations\n          content: {}\n  \"/api/v1/jobs\":\n    get:\n      summary: All jobs\n      tags:\n      - Jobs\n      security:\n      - Bearer: []\n      parameters:\n      - name: page[number]\n        in: query\n        required: false\n        description: Allow navigation through a large set of objects\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Return published and approved jobs\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/jobs\"\n        '401':\n          description: unauthorized\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/errors_object\"\n  \"/api/v1/jobs/{id}\":\n    get:\n      summary: Retrieves a job\n      tags:\n      - Job\n      security:\n      - Bearer: []\n      parameters:\n      - name: id\n        in: path\n        description: ID of a job that you wish to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: job found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/jobs\"\n  \"/api/v1/users\":\n    get:\n      summary: All users\n      tags:\n      - Users\n      security:\n      - Bearer: []\n      parameters:\n      - name: page[number]\n        in: query\n        required: false\n        description: Allow navigation through a large set of objects\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Return verified users\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/users\"\n        '401':\n          description: unauthorized\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/errors_object\"\n  \"/api/v1/users/{id}\":\n    get:\n      summary: Retrieves a user\n      tags:\n      - User\n      security:\n      - Bearer: []\n      parameters:\n      - name: id\n        in: path\n        description: ID of a user that you wish to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: user found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/user\"\n        '404':\n          description: user not found\n          content: {}\n  \"/api/v1/users/search\":\n    get:\n      summary: Searches for a user using an incorrect query parameter\n      tags:\n      - User\n      security:\n      - Bearer: []\n      parameters:\n      - name: query\n        in: query\n        description: search query\n        schema:\n          type: string\n      responses:\n        '200':\n          description: user found by first_name, last_name, email or title\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/users\"\n        '404':\n          description: User not found\n          content: {}\n        '422':\n          description: Invalid request\n          content: {}\ncomponents:\n  schemas:\n    errors_object:\n      type: object\n      properties:\n        errors:\n          \"$ref\": \"#/components/schemas/errors_map\"\n    errors_map:\n      type: object\n      additionalProperties:\n        type: array\n        items:\n          type: string\n    jobs:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              attributes:\n                type: object\n                properties:\n                  title:\n                    type: string\n                  currency:\n                    type: string\n                  salary:\n                    type: string\n                  creator_name:\n                    type: string\n                  description:\n                    type: string\n                  last_updated:\n                    type: string\n        meta:\n          type: object\n          properties:\n            total:\n              type: integer\n        pagination:\n          properties:\n            current_page:\n              type: integer\n            last_page:\n              type: integer\n              nullable: true\n            next_page_url:\n              type: string\n              nullable: true\n            prev_page_url:\n              type: string\n              nullable: true\n    users:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              attributes:\n                type: object\n                properties:\n                  first_name:\n                    type: string\n                    nullable: true\n                  last_name:\n                    type: string\n                    nullable: true\n                  email:\n                    type: string\n                  nickname:\n                    type: string\n                    nullable: true\n                  tilde_url:\n                    type: string\n                  location:\n                    type: string\n                    nullable: true\n                  biography:\n                    type: string\n                    nullable: true\n                  title:\n                    type: string\n                    nullable: true\n                  company_name:\n                    type: string\n                    nullable: true\n                  twitter_handle:\n                    type: string\n                    nullable: true\n                  confirmed:\n                    type: boolean\n                  confirmed_at:\n                    type: string\n                  last_updated:\n                    type: string\n        meta:\n          type: object\n          properties:\n            total:\n              type: integer\n        pagination:\n          properties:\n            current_page:\n              type: integer\n            last_page:\n              type: integer\n              nullable: true\n            next_page_url:\n              type: string\n              nullable: true\n            prev_page_url:\n              type: string\n              nullable: true\n    user:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                first_name:\n                  type: string\n                  nullable: true\n                last_name:\n                  type: string\n                  nullable: true\n                email:\n                  type: string\n                nickname:\n                  type: string\n                  nullable: true\n                tilde_url:\n                  type: string\n                location:\n                  type: string\n                  nullable: true\n                biography:\n                  type: string\n                  nullable: true\n                title:\n                  type: string\n                  nullable: true\n                company_name:\n                  type: string\n                  nullable: true\n                twitter_handle:\n                  type: string\n                  nullable: true\n                confirmed:\n                  type: boolean\n                confirmed_at:\n                  type: string\n                last_updated:\n                  type: string\n    invitation:\n      type: object\n      properties:\n        invitation:\n          type: object\n          properties:\n            invitee_title:\n              type: string\n            invitee_name:\n              type: string\n            invitee_email:\n              type: string\n            slack_uid:\n              type: string\n            invitee_company:\n              type: string\n          required:\n          - invitee_email\n          - invitee_name\n  securitySchemes:\n    Bearer:\n      description: Authorization in the header\n      type: apiKey\n      name: Authorization\n      in: header\nservers:\n- url: https://menadevs.com/api/v1/\n  variables:\n    defaultHost:\n      default: www.menadevs.com/api/v1/\n- url: http://localhost:3000/api/v1/\n  variables:\n    defaultHost:\n      default: localhost:3000/api/v1/\n",
			"canonicalURL": "/github.com/mena-devs/tilde@705fe867dd7a3204c1fe21bec0d99001e9f65925/-/blob/docs/api_specifications/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mena-devs/tilde/blob/705fe867dd7a3204c1fe21bec0d99001e9f65925/docs/api_specifications/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}