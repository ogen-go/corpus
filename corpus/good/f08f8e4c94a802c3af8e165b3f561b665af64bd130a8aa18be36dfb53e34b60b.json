{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "victorops.com-0.0.3-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/victorops.com-0.0.3-swagger.yaml",
			"byteSize": 129126,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: VictorOps\n  description: \u003e\n    This API allows you to interact with the VictorOps platform in various ways.\n    Your account may be limited\n\n    to a total number of API calls per month. Also, some of these API calls have rate limits.\n\n\n    NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API\n\n    viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not\n\n    process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before\n\n    submitting the curl request.\n  title: VictorOps\n  version: 0.0.3\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://twitter.com/VictorOps/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://portal.victorops.com/public/api-docs/victorops-api-v1.yaml\n      version: \"2.0\"\n  x-providerName: victorops.com\ntags:\n  - name: On-call\n  - name: Incidents\n  - name: Alerts\n  - name: Reporting\n  - name: Users\n  - name: User Contact Methods\n  - name: User Paging Policies\n  - name: Personal Paging Policy Values\n  - name: Personal Paging Policies\n  - name: Teams\n  - name: Escalation Policies\n  - name: Routing Keys\n  - name: Scheduled Overrides\npaths:\n  \"/api-public/v1/alerts/{uuid}\":\n    get:\n      description: |\n        Retrieve the details of an alert that was sent VictorOps by you.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps uuid of the alert\n          in: path\n          name: uuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: |\n            The alert, if found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAlertResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Retrieve alert details.\n      tags:\n        - Alerts\n  /api-public/v1/incidents:\n    get:\n      description: \u003e\n        Get a list of the currently open, acknowledged and recently resolved\n        incidents.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: |\n            The set of incidents.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActiveIncidentList\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get current incident information\n      tags:\n        - Incidents\n    post:\n      description: \u003e\n        Create a new incident.\n\n\n        This call replicates the function of our\n\n        \u003ca href=\"https://help.victorops.com/knowledge-base/manual-incident-creation/\"\u003emanual incident creation process\u003c/a\u003e.\n\n        Monitoring tools and custom integrations\n\n        should be configured using our\n\n        \u003ca href=\"https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/\"\u003eREST Endpoint\u003c/a\u003e.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateIncidentRequest\"\n        description: The incident details\n        required: true\n      responses:\n        \"200\":\n          description: |\n            Information about the incident created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreatedIncident\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Create a new incident\n      tags:\n        - Incidents\n  /api-public/v1/incidents/ack:\n    patch:\n      description: \u003e\n        The incident(s) must be currently open.  The user supplied must be a\n        valid VictorOps user and a member of your organization.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AckOrResolveRequest\"\n      responses:\n        \"200\":\n          description: The result of each acknowledge incident action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AckOrResolveResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Acknowledge an incident or list of incidents\n      tags:\n        - Incidents\n  /api-public/v1/incidents/byUser/ack:\n    patch:\n      description: \u003e\n        The incident(s) must be currently open.  The user supplied must be a\n        valid VictorOps user and a member of your organization.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AckOrResolveByUserRequest\"\n      responses:\n        \"200\":\n          description: The result of each acknowledge incident action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AckOrResolveResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Acknowledge all incidents for which a user was paged.\n      tags:\n        - Incidents\n  /api-public/v1/incidents/byUser/resolve:\n    patch:\n      description: \u003e\n        The incident(s) must be currently open.  The user supplied must be a\n        valid VictorOps user and a member of your organization.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AckOrResolveByUserRequest\"\n      responses:\n        \"200\":\n          description: The result of each resolve incident action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AckOrResolveResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Resolve all incidents for which a user was paged.\n      tags:\n        - Incidents\n  /api-public/v1/incidents/reroute:\n    post:\n      description: \u003e\n        Reroute one or more incidents to one or more users and/or escalation\n        policies\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RerouteCollection\"\n        description: The reroute rules\n        required: true\n      responses:\n        \"200\":\n          description: The created reroute object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RerouteStatusResponse\"\n      summary: Reroute one or more incidents to one or more new routable destinations.\n      tags:\n        - Incidents\n  /api-public/v1/incidents/resolve:\n    patch:\n      description: \u003e\n        The incident(s) must be currently open.  The user supplied must be a\n        valid VictorOps user and a member of your organization.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AckOrResolveRequest\"\n      responses:\n        \"200\":\n          description: The result of each resolve incident action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AckOrResolveResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Resolve an incident or list of incidents\n      tags:\n        - Incidents\n  /api-public/v1/maintenancemode:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: maintenance mode state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaintenanceModeState\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get an organization's current maintenance mode state\n      tags:\n        - Maintenance Mode\n  /api-public/v1/maintenancemode/start:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                names:\n                  description: Routing keys that maintenance mode state covers. An empty\n                    list indicates global maintenance mode\n                  items:\n                    type: string\n                  type: array\n                purpose:\n                  description: the reason for the maintenance mode\n                  type: string\n                type:\n                  enum:\n                    - RoutingKeys\n                  type: string\n              type: object\n        description: the definition of the maintenance mode you want to start\n        required: true\n      responses:\n        \"200\":\n          description: maintenance mode state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaintenanceModeState\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"409\":\n          description: You have an active global maintanance mode and are attempting to\n            start a second. You may only have a single Global maintenance mode\n            at a time\n        \"420\":\n          description: You have reached the limit of allowed active maintenance modes\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Start maintenance mode for routing keys\n      tags:\n        - Maintenance Mode\n  \"/api-public/v1/maintenancemode/{maintenancemodeid}/end\":\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - $ref: \"#/components/parameters/maintenanceModeId\"\n      responses:\n        \"200\":\n          description: maintenance mode state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaintenanceModeState\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: End maintenance mode for routing keys\n      tags:\n        - Maintenance Mode\n  /api-public/v1/oncall/current:\n    get:\n      description: |\n        Get all on-call users/teams for your organization.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: All users and escalation policies currently on call\n          content:\n            application/json:\n              schema:\n                properties:\n                  teamsOnCall:\n                    items:\n                      $ref: \"#/components/schemas/OnCallTeamsResource\"\n                    type: array\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get an organization's on-call users\n      tags:\n        - On-call\n  /api-public/v1/org/routing-keys:\n    get:\n      description: |-\n        Retrieves a list of routing keys and associated teams.\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: The list of routing keys and associated teams\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListRoutingKeysResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: List routing keys with associated teams\n      tags:\n        - Routing Keys\n  /api-public/v1/overrides:\n    get:\n      description: |\n        List all the scheduled overrides on the organization\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: A list of scheduled overrides for your organization\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  overrides:\n                    items:\n                      $ref: \"#/components/schemas/ScheduledOverride\"\n                    type: array\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: List the scheduled overrides\n      tags:\n        - Scheduled Overrides\n    post:\n      description: \u003e\n        Creates a new scheduled override. Start and end dates are in ISO8601\n        format. E.g. `2018-09-28'T'05:00:00Z`\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScheduledOverridePayload\"\n        required: true\n      responses:\n        \"200\":\n          description: The created scheduled override\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  schedule:\n                    $ref: \"#/components/schemas/ScheduledOverride\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Creates a new scheduled override\n      tags:\n        - Scheduled Overrides\n  \"/api-public/v1/overrides/{publicId}\":\n    delete:\n      description: |\n        Deletes a scheduled override\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The publicId of the scheduled override\n          in: path\n          name: publicId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Whether or not the delete was successful\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Deletes a scheduled override\n      tags:\n        - Scheduled Overrides\n    get:\n      description: |\n        Get the specified scheduled override\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The publicId of the scheduled override\n          in: path\n          name: publicId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The scheduled override\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  override:\n                    $ref: \"#/components/schemas/ScheduledOverride\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the specified scheduled override\n      tags:\n        - Scheduled Overrides\n  \"/api-public/v1/overrides/{publicId}/assignments\":\n    get:\n      description: |\n        Get the specified scheduled override assignments\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The publicId of the scheduled override\n          in: path\n          name: publicId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The assignments for a given scheduled override\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Assignment\"\n                type: array\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the specified scheduled override\n      tags:\n        - Scheduled Overrides\n  \"/api-public/v1/overrides/{publicId}/assignments/{policySlug}\":\n    delete:\n      description: |\n        Delete the scheduled override assignment\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The publicId of the scheduled override\n          in: path\n          name: publicId\n          required: true\n          schema:\n            type: string\n        - description: The policySlug of the assignment\n          in: path\n          name: policySlug\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The assignment that was deleted for the given scheduled override and\n            policySlug\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Assignment\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Delete the scheduled override assignment\n      tags:\n        - Scheduled Overrides\n    get:\n      description: |\n        Get the specified scheduled override assignments\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The publicId of the scheduled override\n          in: path\n          name: publicId\n          required: true\n          schema:\n            type: string\n        - description: The policySlug of the assignment\n          in: path\n          name: policySlug\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The assignment for the given publicId\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Assignment\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the specified scheduled override assignment\n      tags:\n        - Scheduled Overrides\n    put:\n      description: |\n        Update the scheduled override assignment\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The publicId of the scheduled override\n          in: path\n          name: publicId\n          required: true\n          schema:\n            type: string\n        - description: The policySlug of the assignment\n          in: path\n          name: policySlug\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateAssignment\"\n        description: The policy and username we are assigning\n        required: true\n      responses:\n        \"200\":\n          description: The assignment for the given policySlug\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Assignment\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Update the scheduled override assignment\n      tags:\n        - Scheduled Overrides\n  /api-public/v1/policies:\n    get:\n      description: |-\n        Retrieves a list of escalation policy information.\n        This API may be called a maximum of once a minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: The list of escalation policies\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EscalationPolicyInfoList\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get escalation policy info\n      tags:\n        - Escalation Policies\n  /api-public/v1/policies/types/contacts:\n    get:\n      description: |\n        Get the available contact types\n\n        description: \"Email Address\", type: \"email\"\n        description: \"Phone Number\", type: \"phone\"\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: All the available contact types\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  contactTypes:\n                    items:\n                      $ref: \"#/components/schemas/ContactObject\"\n                    type: array\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the available contact types\n      tags:\n        - Personal Paging Policy Values\n  /api-public/v1/policies/types/notifications:\n    get:\n      description: |\n        Get the available notification types\n\n        description: \"Send a push notification to all my devices\", type: \"push\"\n        description: \"Send an email to an email address\", type: \"email\"\n        description: \"Send an SMS to a phone number\", type: \"sms\"\n        description: \"Make a phone call to a phone number\", type: \"phone\"\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: All the available contact types\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  notificationTypes:\n                    items:\n                      $ref: \"#/components/schemas/NotificationObject\"\n                    type: array\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the available notification types\n      tags:\n        - Personal Paging Policy Values\n  /api-public/v1/policies/types/timeouts:\n    get:\n      description: |\n        Get the available timeout values\n\n        description: \"If still unacked after 1 minute\", type: 1\n        description: \"If still unacked after 5 minutes\", type: 5\n        description: \"If still unacked after 10 minutes\", type: 10\n        description: \"If still unacked after 15 minutes\", type: 15\n        description: \"If still unacked after 20 minutes\", type: 20\n        description: \"If still unacked after 25 minutes\", type: 25\n        description: \"If still unacked after 30 minutes\", type: 30\n        description: \"If still unacked after 45 minutes\", type: 45\n        description: \"If still unacked after 60 minutes\", type: 60\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: All the available timeout types.\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  timeoutTypes:\n                    items:\n                      $ref: \"#/components/schemas/TimeoutObject\"\n                    type: array\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the available timeout values\n      tags:\n        - Personal Paging Policy Values\n  \"/api-public/v1/policies/{policy}/oncall/user\":\n    patch:\n      description: \u003e\n        Replaces a currently on-call user in the escalation policy with\n        another.  In many cases, the policy slug\n\n        will match the slug of the team that contains it.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps policy 'slug'\n          in: path\n          name: policy\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/TakeRequest\"\n      responses:\n        \"200\":\n          description: The result of the take request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TakeResult\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          description: Team or user(s) not found\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Create an on-call override (take on-call)\n      tags:\n        - On-call\n  \"/api-public/v1/profile/{username}/policies\":\n    get:\n      description: \u003e\n        Get all the paging policy steps for the user on the org associated with\n        the API key\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: All steps of the user's paging policy\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  steps:\n                    $ref: \"#/components/schemas/UserPagingPolicy\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the user's paging policy\n      tags:\n        - Personal Paging Policies\n    post:\n      description: |\n        Create a paging policy step\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AddGroupPayload\"\n      responses:\n        \"200\":\n          description: The created paging policy step\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  step:\n                    $ref: \"#/components/schemas/PagingPolicyStep\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Create a paging policy step\n      tags:\n        - Personal Paging Policies\n  \"/api-public/v1/profile/{username}/policies/{step}\":\n    get:\n      description: |\n        Get a paging policy step\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/pagingPolicyStep\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: The paging policy step\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  step:\n                    $ref: \"#/components/schemas/PagingPolicyStep\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a paging policy step\n      tags:\n        - Personal Paging Policies\n    post:\n      description: |\n        Create a rule for a paging policy step\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/pagingPolicyStep\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AddStepPayload\"\n      responses:\n        \"200\":\n          description: The created rule for the paging policy step\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  stepRule:\n                    $ref: \"#/components/schemas/PagingPolicyStepRule\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Create a rule for a paging policy step\n      tags:\n        - Personal Paging Policies\n    put:\n      description: |\n        Update a paging policy step\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/pagingPolicyStep\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AddGroupPayload\"\n      responses:\n        \"200\":\n          description: The updated paging policy step\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  step:\n                    $ref: \"#/components/schemas/PagingPolicyStep\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Update a paging policy step\n      tags:\n        - Personal Paging Policies\n  \"/api-public/v1/profile/{username}/policies/{step}/{rule}\":\n    delete:\n      description: |\n        Delete a rule from a paging policy step\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/pagingPolicyStep\"\n        - $ref: \"#/components/parameters/pagingPolicyRule\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: The deleted rule from the paging policy step\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  stepRule:\n                    $ref: \"#/components/schemas/PagingPolicyStepRule\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Delete a rule from a paging policy step\n      tags:\n        - Personal Paging Policies\n    get:\n      description: |\n        Get a rule from a paging policy step\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/pagingPolicyStep\"\n        - $ref: \"#/components/parameters/pagingPolicyRule\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: The rule from the paging policy step\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  stepRule:\n                    $ref: \"#/components/schemas/PagingPolicyStepRule\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a rule from a paging policy step\n      tags:\n        - Personal Paging Policies\n    put:\n      description: |\n        Update a rule for a paging policy step\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/username\"\n        - $ref: \"#/components/parameters/pagingPolicyStep\"\n        - $ref: \"#/components/parameters/pagingPolicyRule\"\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AddStepPayload\"\n      responses:\n        \"200\":\n          description: The updated rule for the paging policy step\n          content:\n            application/json:\n              schema:\n                properties:\n                  _selfUrl:\n                    type: string\n                  stepRule:\n                    $ref: \"#/components/schemas/PagingPolicyStepRule\"\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Update a rule for a paging policy step\n      tags:\n        - Personal Paging Policies\n  /api-public/v1/team:\n    get:\n      description: |\n        Get a list of teams for your organization.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: A list of teams for your organization\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTeamResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: |\n            You have reached your team limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: List teams\n      tags:\n        - Teams\n    post:\n      description: |\n        Add a team to your organization.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AddTeamPayload\"\n      responses:\n        \"200\":\n          description: Some details about the team that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddTeamResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            Team name or email is unavailable, or you have reached your team\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Add a team\n      tags:\n        - Teams\n  \"/api-public/v1/team/{team}\":\n    delete:\n      description: |\n        Remove a team from your organization.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team to be deleted\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team was deleted\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            There was a problem with the delete such as the replacement team was\n            not found.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Remove a team\n      tags:\n        - Teams\n    get:\n      description: |\n        Get the information for the specified team.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team to fetch\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Some details about the team that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddTeamResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            Team name or email is unavailable, or you have reached your team\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Retrieve information for a team\n      tags:\n        - Teams\n    put:\n      description: |\n        Update the designated team\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team to be updated\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/AddTeamPayload\"\n      responses:\n        \"200\":\n          description: Some details about the team that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddTeamResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            Team name or email is unavailable, or you have reached your team\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Update a team\n      tags:\n        - Teams\n  \"/api-public/v1/team/{team}/admins\":\n    get:\n      description: |\n        Get the team admins for the specified team.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Some details about the team that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamAdminsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Retrieve a list of team admins for a team\n      tags:\n        - Teams\n  \"/api-public/v1/team/{team}/members\":\n    get:\n      description: |\n        Get the members for the specified team.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team to fetch\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Some details about the team that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTeamMembersResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            Team name or email is unavailable, or you have reached your team\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Retrieve a list of members for a team\n      tags:\n        - Teams\n    post:\n      description: |\n        Add a team member to your team.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team to fetch\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddTeamMemberPayload\"\n        required: true\n      responses:\n        \"200\":\n          description: Some details about the team that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTeamMembersResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            Team name or email is unavailable, or you have reached your team\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Add a team member\n      tags:\n        - Teams\n  \"/api-public/v1/team/{team}/members/{user}\":\n    delete:\n      description: |\n        Remove a team from your organization.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team to be deleted\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: The team member username\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RemoveTeamMemberPayload\"\n        description: The user information\n        required: true\n      responses:\n        \"200\":\n          description: Team was deleted\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            There was a problem with the delete such as the replacement team\n            member was not found.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Remove a team member\n      tags:\n        - Teams\n  \"/api-public/v1/team/{team}/oncall/schedule\":\n    get:\n      deprecated: true\n      description: \u003e\n        __NOTE: This call is deprecated. Please use `GET\n        /api-public/v2/team/{team}/oncall/schedule`.__\n\n\n        Get the on-call schedule for a team, including on-call overrides.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team 'slug'\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/daysFwd\"\n        - $ref: \"#/components/parameters/daysSkip\"\n        - $ref: \"#/components/parameters/step\"\n      responses:\n        \"200\":\n          description: The on-call schedule for the team\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OnCallAndOverrides\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a team's on-call schedule\n      tags:\n        - On-call\n  \"/api-public/v1/team/{team}/oncall/user\":\n    patch:\n      deprecated: true\n      description: \u003e\n        __NOTE: This API call is deprecated. Please use `PATCH\n        /api-public/v2/policies/{policy}/oncall/user`__\n\n\n        Replaces a currently on-call user on the team with another.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team 'slug'\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/TakeRequest\"\n      responses:\n        \"200\":\n          description: The result of the take request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TakeResult\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          description: Team or user(s) not found\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Create an on-call override (take on-call)\n      tags:\n        - On-call\n  \"/api-public/v1/team/{team}/policies\":\n    get:\n      description: |\n        Get the escalation policies for the specified team.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team to fetch\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The escalation policy list. This does not include details about the\n            actual notification steps of the policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EscalationPolicyList\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"422\":\n          description: \u003e\n            Team name or email is unavailable, or you have reached your team\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Retrieve a list of escalation policies for a team\n      tags:\n        - Escalation Policies\n        - Teams\n  /api-public/v1/user:\n    get:\n      description: |\n        Get a list of users for your organization\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: A list of users for your organization\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListUserResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"422\":\n          description: |\n            You have reached your user limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: List users\n      tags:\n        - Users\n    post:\n      description: |\n        Add a user to your organization\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/AddUserPayload\"\n      responses:\n        \"200\":\n          description: Some details about the user that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddUserResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"422\":\n          description: \u003e\n            Username or email is unavailable, or you have reached your user\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Add a user\n      tags:\n        - Users\n  \"/api-public/v1/user/{user}\":\n    delete:\n      description: \u003e\n        Remove a user from your organization. If no replacement is specified, an\n        empty JSON payload (\"{}\") is still required.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user to be deleted\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteUserPayload\"\n        required: true\n      responses:\n        \"200\":\n          description: User was deleted\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"422\":\n          description: \u003e\n            There was a problem with the delete such as a replacement is\n            required or the replacement user was not found.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Remove a user\n      tags:\n        - Users\n    get:\n      description: |\n        Get the information for the specified user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user to fetch\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Some details about the user that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddUserResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"422\":\n          description: \u003e\n            Username or email is unavailable, or you have reached your user\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Retrieve information for a user\n      tags:\n        - Users\n    put:\n      description: |\n        Update the designated user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user to be updated\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/AddUserPayload\"\n      responses:\n        \"200\":\n          description: Some details about the user that was added\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddUserResponse\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"422\":\n          description: \u003e\n            Username or email is unavailable, or you have reached your user\n            limit.\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Update a user\n      tags:\n        - Users\n  \"/api-public/v1/user/{user}/contact-methods\":\n    get:\n      description: |\n        Get the contact methods for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: All available contact methods for the user\n          content:\n            application/json:\n              schema:\n                properties:\n                  devices:\n                    items:\n                      $ref: \"#/components/schemas/ContactDevice\"\n                    type: array\n                  emails:\n                    items:\n                      $ref: \"#/components/schemas/UserContact\"\n                    type: array\n                  phones:\n                    items:\n                      $ref: \"#/components/schemas/UserContact\"\n                    type: array\n                type: object\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a list of all contact methods for a user\n      tags:\n        - User Contact Methods\n  \"/api-public/v1/user/{user}/contact-methods/devices\":\n    get:\n      description: |\n        Get the contact methods for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of contact devices for the user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ContactDevice\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a list of all contact devices for a user\n      tags:\n        - User Contact Methods\n  \"/api-public/v1/user/{user}/contact-methods/devices/{contactId}\":\n    delete:\n      description: |\n        Delete a contact device for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: The unique contact identifier\n          in: path\n          name: contactId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Deleted contact device for the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContactDevice\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Delete a contact device for a user\n      tags:\n        - User Contact Methods\n    get:\n      description: |\n        Get the indicated contact device for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: The unique contact identifier\n          in: path\n          name: contactId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of contact devices for the user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ContactDevice\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the indicated contact device for a user\n      tags:\n        - User Contact Methods\n    put:\n      description: |\n        Update a contact device for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: The unique contact identifier\n          in: path\n          name: contactId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ContactDeviceAdd\"\n        description: The contact device\n        required: true\n      responses:\n        \"200\":\n          description: The list of contact devices for the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContactDevice\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Update a contact device for a user\n      tags:\n        - User Contact Methods\n  \"/api-public/v1/user/{user}/contact-methods/emails\":\n    get:\n      description: |\n        Get the contact emails for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of contact emails for the user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserContact\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a list of all contact emails for a user\n      tags:\n        - User Contact Methods\n    post:\n      description: |\n        Create a contact email for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ContactEmailAdd\"\n        description: The contact email\n        required: true\n      responses:\n        \"200\":\n          description: The list of contact emails for the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserContact\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Create a contact emails for a user\n      tags:\n        - User Contact Methods\n  \"/api-public/v1/user/{user}/contact-methods/emails/{contactId}\":\n    delete:\n      description: |\n        Delete the indicated contact email for the user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: The unique contact identifier\n          in: path\n          name: contactId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Deleted contact email for the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserContact\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Delete a contact email for a user\n      tags:\n        - User Contact Methods\n    get:\n      description: |\n        Get the indicated contact email for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: The unique contact identifier\n          in: path\n          name: contactId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The indicated contact email for the user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserContact\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the indicated contact email for a user\n      tags:\n        - User Contact Methods\n  \"/api-public/v1/user/{user}/contact-methods/phones\":\n    get:\n      description: |\n        Get the contact phones for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of contact phones for the user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserContact\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a list of all contact phones for a user\n      tags:\n        - User Contact Methods\n    post:\n      description: |\n        Create a contact phone for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ContactPhoneAdd\"\n        description: The contact phone\n        required: true\n      responses:\n        \"200\":\n          description: The list of contact phones for the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserContact\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Create a contact phones for a user\n      tags:\n        - User Contact Methods\n  \"/api-public/v1/user/{user}/contact-methods/phones/{contactId}\":\n    delete:\n      description: |\n        Delete the indicated contact phone for the user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: The unique contact identifier\n          in: path\n          name: contactId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Deleted contact phone for the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserContact\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Delete a contact phone for a user\n      tags:\n        - User Contact Methods\n    get:\n      description: |\n        Get the indicated contact phone for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: The unique contact identifier\n          in: path\n          name: contactId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The indicated contact phone for the user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserContact\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get the indicated contact phone for a user\n      tags:\n        - User Contact Methods\n  \"/api-public/v1/user/{user}/oncall/schedule\":\n    get:\n      deprecated: true\n      description: \u003e\n        __NOTE: This call is deprecated. Please use `GET\n        /api-public/v2/user/{user}/oncall/schedule`.__\n\n\n        Get the on-call schedule for a user for all teams, including on-call overrides.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/daysFwd\"\n        - $ref: \"#/components/parameters/daysSkip\"\n        - $ref: \"#/components/parameters/step\"\n      responses:\n        \"200\":\n          description: The on-call schedule for the user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OnCallAndOverrides\"\n                type: array\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a user's on-call schedule\n      tags:\n        - On-call\n  \"/api-public/v1/user/{user}/policies\":\n    get:\n      description: |\n        Get paging policies for a user\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: All configured paging policies for a user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Policies\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a list of paging policies for a user\n      tags:\n        - User Paging Policies\n  \"/api-public/v1/user/{user}/teams\":\n    get:\n      description: |\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserTeamsResponse\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Retrieve the user's team membership\n      tags:\n        - Users\n  \"/api-public/v2/team/{team}/oncall/schedule\":\n    get:\n      description: |\n        Get the on-call schedule for a team, including on-call overrides.\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team 'slug'\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/daysFwd\"\n        - $ref: \"#/components/parameters/daysSkip\"\n        - $ref: \"#/components/parameters/step\"\n      responses:\n        \"200\":\n          description: The on-call schedule for the team\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamSchedule\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/team-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a team's on-call schedule\n      tags:\n        - On-call\n  \"/api-public/v2/user/{user}/oncall/schedule\":\n    get:\n      description: \u003e\n        Get the on-call schedule for a user for all teams the user is on,\n        including on-call overrides.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps user ID\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/daysFwd\"\n        - $ref: \"#/components/parameters/daysSkip\"\n        - $ref: \"#/components/parameters/step\"\n      responses:\n        \"200\":\n          description: The on-call schedule for the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserSchedule\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/user-not-found\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get a user's on-call schedule\n      tags:\n        - On-call\n  /api-reporting/v1/incidents:\n    get:\n      deprecated: true\n      description: \u003e\n        \n        __NOTE: This call is deprecated. Please use `GET /api-reporting/v2/incidents`.__\n\n\n        Retrieve incident history for your company, searching over date ranges and with filtering options.  This is historical\n\n        data, and may be up to 15 minutes behind real-time incident data.  By default, only resolved incidents will be returned.\n\n\n        This API may be called a maximum of once a minute.\n\n\n        Incident requests are paginated with a offset and limit query string parameters.\n          The query for incidents is run and offset records are skipped, after which limit records will be returned.\n\n        The default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.\n\n\n        On return, the total number of records available for that query will be returned in the payload as 'total'.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - description: The entity ID involved  This is the unique identifier for the entity\n            causing the incident.\n          in: query\n          name: entityId\n          required: false\n          schema:\n            type: string\n        - description: \u003e\n            The incident number as shown in VictorOps Multiple values and ranges\n            are allowed: 4,5,20:50\n          in: query\n          name: incidentNumber\n          required: false\n          schema:\n            type: string\n        - description: Return incidents started after this timestamp Specify the timestamp\n            in ISO8601 format\n          in: query\n          name: startedAfter\n          required: false\n          schema:\n            type: string\n        - description: Find incidents started before this timestamp  Specify the timestamp\n            in ISO8601 format\n          in: query\n          name: startedBefore\n          required: false\n          schema:\n            type: string\n        - description: The host involved in the incident Multiple values can be separated\n            with commas.\n          in: query\n          name: host\n          required: false\n          schema:\n            type: string\n        - description: The service involved in the incident (if any) Multiple values can be\n            separated with commas.\n          in: query\n          name: service\n          required: false\n          schema:\n            type: string\n        - description: The current phase of the incident \"resolved\", \"triggered\" or\n            \"acknowledged\". Multiple values can be separated with commas.\n          in: query\n          name: currentPhase\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of incidents matching the request filters\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/IncidentList\"\n                type: array\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get/search incident history\n      tags:\n        - Reporting\n  \"/api-reporting/v1/team/{team}/oncall/log\":\n    get:\n      description: \u003e\n        Returns a log of user shift changes for the specified team. This is\n        historical\n\n        data, and may be up to 15 minutes behind real-time log data.\n\n\n        This API may be called a maximum of 60 times per minute.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - description: The VictorOps team 'slug'\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Return shift changes occurring after this timestamp. The default is\n            the start of the day at midnight. Specify the timestamp in ISO8601\n            format\n          in: query\n          name: start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Return shift changes occurring before this timestamp. The default is\n            the end of the day at 11:59:59. Specify the timestamp in ISO8601\n            format\n          in: query\n          name: end\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The VictorOps user ID. Return shift changes occurring during the\n            interval specified for this user. Without this parameter, all\n            relevant users (with respect to the specified interval) are returned\n          in: query\n          name: userName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The result of the take request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OnCallLog\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          description: Team or user(s) not found\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: A list of shift changes for a team\n      tags:\n        - Reporting\n  /api-reporting/v2/incidents:\n    get:\n      description: \u003e\n        Retrieve incident history for your company, searching over date ranges\n        and with filtering options.\n\n\n        This API may be called a maximum of once a minute.\n\n\n        Incident requests are paginated with a offset and limit query string parameters.\n          The query for incidents is run and offset records are skipped, after which limit records will be returned.\n\n        The default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.\n\n\n        Unless specified otherwise with the parameter currentPhase, the response will only contain resolved incidents.\n\n\n        On return, the total number of records available for that query will be returned in the payload as 'total'.\n      parameters:\n        - $ref: \"#/components/parameters/apiId\"\n        - $ref: \"#/components/parameters/apiKey\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - description: The entity ID involved  This is the unique identifier for the entity\n            causing the incident.\n          in: query\n          name: entityId\n          required: false\n          schema:\n            type: string\n        - description: \u003e\n            The incident number as shown in VictorOps Multiple values and ranges\n            are allowed: 4,5,20:50\n          in: query\n          name: incidentNumber\n          required: false\n          schema:\n            type: string\n        - description: Return incidents started after this timestamp Specify the timestamp\n            in ISO8601 format\n          in: query\n          name: startedAfter\n          required: false\n          schema:\n            type: string\n        - description: Find incidents started before this timestamp  Specify the timestamp\n            in ISO8601 format\n          in: query\n          name: startedBefore\n          required: false\n          schema:\n            type: string\n        - description: The host involved in the incident Multiple values can be separated\n            with commas.\n          in: query\n          name: host\n          required: false\n          schema:\n            type: string\n        - description: The service involved in the incident (if any) Multiple values can be\n            separated with commas.\n          in: query\n          name: service\n          required: false\n          schema:\n            type: string\n        - description: The current phase of the incident \"resolved\", \"triggered\" or\n            \"acknowledged\". Multiple values can be separated with commas. By\n            default, response contains only \"resolved\" incidents\n          in: query\n          name: currentPhase\n          required: false\n          schema:\n            type: string\n        - description: The original routing of the incident\n          in: query\n          name: routingKey\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of incidents matching the request filters\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActiveIncidentList\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      summary: Get/search incident history\n      tags:\n        - Reporting\nservers:\n  - url: https://api.victorops.com/\ncomponents:\n  parameters:\n    apiId:\n      description: Your API ID\n      in: header\n      name: X-VO-Api-Id\n      required: true\n      schema:\n        type: string\n    apiKey:\n      description: Your API Key\n      in: header\n      name: X-VO-Api-Key\n      required: true\n      schema:\n        type: string\n    daysFwd:\n      description: Days to include in returned schedule (30 max)\n      in: query\n      name: daysForward\n      required: false\n      schema:\n        type: number\n        minimum: 0\n        maximum: 30\n        default: 14\n    daysSkip:\n      description: Days to skip before computing schedule to return (90 max)\n      in: query\n      name: daysSkip\n      required: false\n      schema:\n        type: number\n        minimum: 0\n        maximum: 90\n        default: 0\n    limit:\n      description: The maximum number of matching incidents to return (100 max)\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: number\n        maximum: 100\n        default: 20\n    maintenanceModeId:\n      description: The id of the maintenance mode found in the active maintenance mode\n        object\n      in: path\n      name: maintenancemodeid\n      required: true\n      schema:\n        type: string\n    offset:\n      description: The offset within the set of matching incidents\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: number\n        default: 0\n    orgSlug:\n      description: Your organization slug\n      in: path\n      name: org\n      required: true\n      schema:\n        type: string\n    pagingPolicyRule:\n      description: Rule for a paging policy step\n      in: path\n      name: rule\n      required: true\n      schema:\n        type: number\n    pagingPolicyStep:\n      description: Paging policy step\n      in: path\n      name: step\n      required: true\n      schema:\n        type: number\n    step:\n      description: Step of escalation policy (3 max)\n      in: query\n      name: step\n      required: false\n      schema:\n        type: number\n        minimum: 0\n        maximum: 3\n        default: 0\n    username:\n      description: Your username\n      in: path\n      name: username\n      required: true\n      schema:\n        type: string\n  responses:\n    \"400\":\n      description: Problem with the request arguments.  The response payload may include an\n        error message.\n    \"401\":\n      description: Authentication parameters missing\n    \"403\":\n      description: Authentication failed or rate-limit reached\n    \"404\":\n      description: Path not found\n    \"500\":\n      description: Internal Server Error\n    team-not-found:\n      description: Team not found\n    user-not-found:\n      description: User not found\n  requestBodies:\n    AddUserPayload:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AddUserPayload\"\n      required: true\n    AddGroupPayload:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AddGroupPayload\"\n      required: true\n    AddTeamPayload:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AddTeamPayload\"\n      description: The team information\n      required: true\n    AckOrResolveRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AckOrResolveRequest\"\n      description: Ack/Resolve payload\n      required: true\n    AckOrResolveByUserRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AckOrResolveByUserRequest\"\n      description: Ack/Resolve payload\n      required: true\n    TakeRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TakeRequest\"\n      description: The take on-call payload\n      required: true\n    AddStepPayload:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AddStepPayload\"\n      required: true\n  schemas:\n    AckOrResolveByUserRequest:\n      properties:\n        message:\n          type: string\n        userName:\n          type: string\n      required:\n        - userName\n      type: object\n    AckOrResolveRequest:\n      properties:\n        incidentNames:\n          items:\n            type: string\n          type: array\n        message:\n          type: string\n        userName:\n          type: string\n      required:\n        - userName\n        - incidentNames\n      type: object\n    AckOrResolveResponse:\n      description: The results of ack/resolve for each incident\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/AckOrResolveResult\"\n          type: array\n      type: object\n    AckOrResolveResult:\n      description: The results of ack/resolve for a individual incident\n      properties:\n        cmdAccepted:\n          type: boolean\n        entityId:\n          type: string\n        incidentNumber:\n          type: string\n        message:\n          type: string\n      type: object\n    AckUser:\n      description: A JSON object with first/last name and email of the user that\n        acknowledged the incident.\n      properties:\n        email:\n          type: string\n        first:\n          type: string\n        last:\n          type: string\n      type: object\n    ActiveIncidentInfo:\n      description: Incidents contain the following fields (all should be considered\n        optional)\n      properties:\n        alertCount:\n          description: The number of alerts received for this incident\n          type: number\n        currentPhase:\n          description: The current phase of the incident \"resolved\", \"triggered\" or\n            \"acknowledged\".\n          type: string\n        entityId:\n          description: The unique identification of the entity being monitored that caused\n            the incident\n          type: string\n        host:\n          description: The host on which the incident occurred\n          type: string\n        incidentNumber:\n          description: The VictorOps incident number\n          type: string\n        lastAlertId:\n          description: The unique id of the last alert for the incident\n          type: string\n        lastAlertTime:\n          description: The time of the last alert received for the incident\n          type: string\n        pagedPolicies:\n          description: The escalation policies that were triggered for the incident\n          items:\n            $ref: \"#/components/schemas/EscalationPolicyInfo\"\n          type: array\n        pagedTeams:\n          description: The teams that were paged for the incident\n          items:\n            type: string\n          type: array\n        pagedUsers:\n          description: The users that were paged for the incident.\n          items:\n            type: string\n          type: array\n        service:\n          description: The service name causing the incident (if any)\n          type: string\n        startTime:\n          description: The time the incident started\n          type: string\n        transitions:\n          description: Transitions of the incident state over time\n          items:\n            $ref: \"#/components/schemas/IncidentTransition\"\n          type: array\n      type: object\n    ActiveIncidentList:\n      description: The list of incidents in various states\n      properties:\n        incidents:\n          description: The incident data\n          items:\n            $ref: \"#/components/schemas/ActiveIncidentInfo\"\n          type: array\n      type: object\n    ActiveMaintenanceMode:\n      properties:\n        instanceId:\n          description: external friendly unique id for maintenance mode\n          type: string\n        isGlobal:\n          description: whether this instance is a global maintenance mode or for specific\n            routing keys\n          type: boolean\n        startedAt:\n          description: millis from epoch marking the start time\n          type: number\n        startedBy:\n          description: username of the user that started maintenance mode\n          type: string\n        targets:\n          items:\n            $ref: \"#/components/schemas/MaintenanceModeTarget\"\n          type: array\n      type: object\n    AddGroupPayload:\n      properties:\n        rules:\n          items:\n            $ref: \"#/components/schemas/PagingPolicyStepRuleAdd\"\n          type: array\n        timeout:\n          $ref: \"#/components/schemas/TimeoutType\"\n      type: object\n    AddStepPayload:\n      properties:\n        contact:\n          $ref: \"#/components/schemas/Contact\"\n        type:\n          $ref: \"#/components/schemas/NotificationType\"\n      type: object\n    AddTeamMemberPayload:\n      description: The user information\n      properties:\n        username:\n          type: string\n      required:\n        - username\n      type: object\n    AddTeamPayload:\n      description: The team information\n      properties:\n        name:\n          type: string\n      required:\n        - name\n      type: object\n    AddTeamResponse:\n      $ref: \"#/components/schemas/TeamDetail\"\n    AddUserPayload:\n      description: The user information\n      properties:\n        admin:\n          type: boolean\n        email:\n          format: email\n          type: string\n        expirationHours:\n          default: 24\n          description: The validity duration for the invitatation/set password link sent to\n            the added user.\n          type: number\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n      required:\n        - firstName\n        - lastName\n        - username\n        - email\n      type: object\n    AddUserResponse:\n      $ref: \"#/components/schemas/V1User\"\n    Assignment:\n      properties:\n        _selfUrl:\n          type: string\n        assigned:\n          type: boolean\n        policy:\n          type: string\n        team:\n          type: string\n        user:\n          type: string\n      type: object\n    Contact:\n      properties:\n        id:\n          type: number\n        type:\n          $ref: \"#/components/schemas/ContactType\"\n      type: object\n    ContactDescription:\n      enum:\n        - Email Address\n        - Phone Number\n      type: string\n    ContactDevice:\n      properties:\n        _selfUrl:\n          type: string\n        deviceType:\n          type: string\n        extId:\n          type: string\n        label:\n          type: string\n      type: object\n    ContactDeviceAdd:\n      description: The contact device\n      properties:\n        chat_escalation_sound:\n          type: string\n        device_label:\n          type: string\n        escalation_notification_sound:\n          type: string\n        resolved_notification_sound:\n          type: string\n      type: object\n    ContactEmailAdd:\n      description: The contact email\n      properties:\n        email:\n          format: email\n          type: string\n        label:\n          type: string\n        rank:\n          type: integer\n      required:\n        - label\n        - email\n      type: object\n    ContactObject:\n      properties:\n        description:\n          $ref: \"#/components/schemas/ContactDescription\"\n        type:\n          $ref: \"#/components/schemas/ContactType\"\n      type: object\n    ContactPhoneAdd:\n      description: The contact phone\n      properties:\n        label:\n          type: string\n        phone:\n          type: string\n        rank:\n          type: integer\n      required:\n        - label\n        - phone\n      type: object\n    ContactType:\n      enum:\n        - email\n        - phone\n      type: string\n    CreateIncidentRequest:\n      properties:\n        details:\n          type: string\n        summary:\n          type: string\n        targets:\n          items:\n            $ref: \"#/components/schemas/IncidentTarget\"\n          type: array\n        userName:\n          type: string\n      required:\n        - summary\n        - details\n        - userName\n        - targets\n      type: object\n    CreatedIncident:\n      properties:\n        error:\n          description: An error message\n          type: string\n        incidentNumber:\n          description: The VictorOps incident number\n          type: string\n      type: object\n    DeleteUserPayload:\n      description: The information about what to do with the deleted user\n      properties:\n        replacement:\n          description: The user to take the place of the deleted user in escalations\n          type: string\n      type: object\n    EscalationPolicy:\n      properties:\n        name:\n          type: string\n        slug:\n          type: string\n      type: object\n    EscalationPolicyInfo:\n      properties:\n        policy:\n          $ref: \"#/components/schemas/EscalationPolicy\"\n        team:\n          $ref: \"#/components/schemas/Team\"\n      required:\n        - policy\n      type: object\n    EscalationPolicyInfoList:\n      properties:\n        policies:\n          items:\n            $ref: \"#/components/schemas/EscalationPolicyInfo\"\n          type: array\n      required:\n        - policies\n      type: object\n    EscalationPolicyList:\n      properties:\n        policies:\n          items:\n            $ref: \"#/components/schemas/EscalationPolicy\"\n          type: array\n      type: object\n    GetAlertResponse:\n      description: Alert details. All fields should be considered optional.\n      properties:\n        ackAuthor:\n          description: The user that acknowledged the incident.\n          type: string\n        ackMsg:\n          description: A user entered comment for the acknowledgment.\n          type: string\n        entityDisplayName:\n          description: Used within VictorOps to display a human-readable name for the\n            entity.\n          type: string\n        entityId:\n          description: |\n            Identifies the entity (host, service, etc.) this alert was about.\n          type: string\n        messageType:\n          description: \u003e\n            The type of alert; INFO, WARNING, ACKNOWLEDGEMENT, CRITICAL, RECOVERY\n          type: string\n        monitoringTool:\n          description: The name of the monitoring system software (eg. nagios, icinga,\n            sensu, etc.)\n          type: string\n        raw:\n          description: \u003e\n            The full, raw alert details JSON string (i.e. parse the string into\n            a JSON object)\n          type: string\n        stateMessage:\n          description: Any additional status information from the alert item.\n          type: string\n        stateStartTime:\n          description: The time this entity entered its current state (seconds since epoch).\n          type: number\n        timestamp:\n          description: Timestamp of the alert in seconds since epoch.\n          type: number\n      type: object\n    IncidentInfo:\n      description: Incidents contain the following fields (all should be considered\n        optional)\n      properties:\n        ackTime:\n          description: The time of the last acknowledgment of the incident\n          type: string\n        ackUser:\n          $ref: \"#/components/schemas/AckUser\"\n        ackUserId:\n          description: The VictorOps user id of the user that acknowledged the incident\n          type: string\n        alertCount:\n          description: The number of alerts received for this incident\n          type: number\n        currentPhase:\n          description: The current phase of the incident \"resolved\", \"triggered\" or\n            \"acknowledged\".\n          type: string\n        endTime:\n          description: The time the incident ended\n          type: string\n        entityDispName:\n          description: The display name of the entity causing the incident\n          type: string\n        entityId:\n          description: The unique identification of the entity being monitored that caused\n            the incident\n          type: string\n        entityType:\n          description: The type of entity causing the incident (host/service)\n          type: string\n        host:\n          description: The host on which the incident occurred\n          type: string\n        incidentNumber:\n          description: The VictorOps incident number\n          type: string\n        lastAlertID:\n          description: The unique id of the last alert for the incident\n          type: string\n        lastAlertTime:\n          description: The time of the last alert received for the incident\n          type: string\n        service:\n          description: The service name causing the incident (if any)\n          type: string\n        startTime:\n          description: The time the incident started\n          type: string\n        teams:\n          description: The teams that were paged for the incident (comma separated).\n          type: string\n      type: object\n    IncidentList:\n      description: The results of an incident history request\n      properties:\n        incidents:\n          description: An array of incident objects matching the search\n          items:\n            $ref: \"#/components/schemas/IncidentInfo\"\n          type: array\n        limit:\n          description: The limit value passed in the request\n          type: number\n        offset:\n          description: The offset passed in the request\n          type: number\n        total:\n          description: The total number of incidents available for this search\n          type: number\n      type: object\n    IncidentTarget:\n      properties:\n        slug:\n          description: User name or escalation policy slug\n          type: string\n        type:\n          description: Type of target\n          enum:\n            - User\n            - EscalationPolicy\n          type: string\n      required:\n        - type\n        - slug\n      type: object\n    IncidentTransition:\n      description: A transition of incident state\n      properties:\n        alertId:\n          description: The unique alert ID that caused the transition\n          type: string\n        alertUrl:\n          description: A URL to retrieve the details of the alert that caused the transition\n          type: string\n        at:\n          description: The time of the transition\n          type: string\n        by:\n          description: The user that caused the transition (if any)\n          type: string\n        manually:\n          description: If the incident transition was caused by a person\n          type: boolean\n        message:\n          description: The message entered by that user (if any)\n          type: string\n        name:\n          description: The transition name\n          type: string\n      type: object\n    ListRoutingKeysResponse:\n      description: Info about routing keys in the org\n      properties:\n        _selfUrl:\n          type: string\n        routingKeys:\n          items:\n            $ref: \"#/components/schemas/RoutingKeyInfo\"\n          type: array\n      type: object\n    ListTeamMembersResponse:\n      description: A list of members for the team\n      properties:\n        _selfUrl:\n          type: string\n        _teamUrl:\n          type: string\n        members:\n          items:\n            $ref: \"#/components/schemas/TeamMember\"\n          type: array\n      type: object\n    ListTeamResponse:\n      items:\n        $ref: \"#/components/schemas/TeamDetail\"\n      type: array\n    ListUserResponse:\n      description: Some info about the user\n      properties:\n        _selfUrl:\n          type: string\n        users:\n          items:\n            $ref: \"#/components/schemas/V1User\"\n          type: array\n      type: object\n    MaintenanceModeState:\n      properties:\n        activeInstances:\n          items:\n            $ref: \"#/components/schemas/ActiveMaintenanceMode\"\n          type: array\n        companyId:\n          type: string\n      type: object\n    MaintenanceModeTarget:\n      properties:\n        names:\n          description: Routing keys that maintenance mode state covers. An empty list\n            indicates global maintenance mode\n          items:\n            type: string\n          type: array\n        type:\n          enum:\n            - RoutingKeys\n          type: string\n      type: object\n    NotificationDescription:\n      enum:\n        - Send a push notification to all my devices\n        - Send an email to an email address\n        - Send an SMS to a phone number\n        - Make a phone call to a phone number\n      type: string\n    NotificationObject:\n      properties:\n        description:\n          $ref: \"#/components/schemas/NotificationDescription\"\n        type:\n          $ref: \"#/components/schemas/NotificationType\"\n      type: object\n    NotificationType:\n      enum:\n        - push\n        - email\n        - sms\n        - phone\n      example: email\n      type: string\n    OnCallAndOverrides:\n      properties:\n        overrides:\n          items:\n            $ref: \"#/components/schemas/TeamScheduleOverlayResource\"\n          type: array\n        schedule:\n          items:\n            $ref: \"#/components/schemas/TeamScheduleResource\"\n          type: array\n        team:\n          type: string\n      type: object\n    OnCallEntry:\n      properties:\n        onCallType:\n          $ref: \"#/components/schemas/OnCallType\"\n        onCallUser:\n          $ref: \"#/components/schemas/User\"\n        overrideOnCallUser:\n          $ref: \"#/components/schemas/User\"\n        rolls:\n          items:\n            $ref: \"#/components/schemas/OnCallRoll\"\n          type: array\n        rotationName:\n          type: string\n        shiftName:\n          type: string\n        shiftRoll:\n          description: The shift roll time (ISO 8601)\n          type: string\n      required:\n        - onCallType\n        - rolls\n      type: object\n    OnCallEscalationPolicyResource:\n      properties:\n        name:\n          type: string\n        slug:\n          type: string\n      type: object\n    OnCallInterval:\n      properties:\n        duration:\n          properties:\n            hours:\n              type: number\n            minutes:\n              type: number\n          type: object\n        escalationPolicy:\n          $ref: \"#/components/schemas/EscalationPolicy\"\n        off:\n          type: string\n        on:\n          type: string\n      type: object\n    OnCallLog:\n      properties:\n        end:\n          format: date-time\n          type: string\n        start:\n          format: date-time\n          type: string\n        teamSlug:\n          type: string\n        userLogs:\n          items:\n            $ref: \"#/components/schemas/UserLog\"\n          type: array\n      type: object\n    OnCallNowResource:\n      properties:\n        escalationPolicy:\n          $ref: \"#/components/schemas/OnCallEscalationPolicyResource\"\n        users:\n          items:\n            $ref: \"#/components/schemas/OnCallUsersResource\"\n          type: array\n      type: object\n    OnCallOverride:\n      properties:\n        end:\n          description: The override end time (ISO 8601)\n          type: string\n        origOnCallUser:\n          $ref: \"#/components/schemas/User\"\n        overrideOnCallUser:\n          $ref: \"#/components/schemas/User\"\n        start:\n          description: The override start time (ISO 8601)\n          type: string\n      type: object\n    OnCallRoll:\n      properties:\n        end:\n          description: The on-call period end time (ISO 8601)\n          type: string\n        isRoll:\n          type: boolean\n        onCallUser:\n          $ref: \"#/components/schemas/User\"\n        start:\n          description: The on-call period start time (ISO 8601)\n          type: string\n      required:\n        - start\n        - end\n        - isRoll\n      type: object\n    OnCallTeamResource:\n      properties:\n        name:\n          type: string\n        slug:\n          type: string\n      type: object\n    OnCallTeamsResource:\n      properties:\n        onCallNow:\n          items:\n            $ref: \"#/components/schemas/OnCallNowResource\"\n          type: array\n        team:\n          $ref: \"#/components/schemas/OnCallTeamResource\"\n      type: object\n    OnCallType:\n      enum:\n        - user\n        - rotation_group\n        - rotation_group_next\n        - rotation_group_previous\n        - team\n        - team_routing\n        - webhook\n        - email\n        - policy_routing\n      type: string\n    OnCallUsersResource:\n      properties:\n        onCallUser:\n          properties:\n            username:\n              type: string\n          type: object\n      type: object\n    PagingPolicy:\n      description: Paging policy fields\n      properties:\n        contactType:\n          type: string\n        extId:\n          type: string\n        order:\n          type: integer\n        timeout:\n          type: integer\n      type: object\n    PagingPolicyStep:\n      properties:\n        index:\n          type: number\n        rules:\n          items:\n            $ref: \"#/components/schemas/PagingPolicyStepRule\"\n          type: array\n        timeout:\n          $ref: \"#/components/schemas/TimeoutType\"\n      type: object\n    PagingPolicyStepRule:\n      properties:\n        contact:\n          $ref: \"#/components/schemas/Contact\"\n        index:\n          type: number\n        type:\n          $ref: \"#/components/schemas/NotificationType\"\n      type: object\n    PagingPolicyStepRuleAdd:\n      properties:\n        contact:\n          $ref: \"#/components/schemas/Contact\"\n        type:\n          $ref: \"#/components/schemas/NotificationType\"\n      type: object\n    Policies:\n      description: Paging policies accociated which this user\n      properties:\n        policies:\n          items:\n            $ref: \"#/components/schemas/PagingPolicy\"\n          type: array\n        userId:\n          type: integer\n        username:\n          type: string\n      type: object\n    PolicySchedule:\n      properties:\n        overrides:\n          items:\n            $ref: \"#/components/schemas/OnCallOverride\"\n          type: array\n        policy:\n          $ref: \"#/components/schemas/EscalationPolicy\"\n        schedule:\n          items:\n            $ref: \"#/components/schemas/OnCallEntry\"\n          type: array\n      type: object\n    RemoveTeamMemberPayload:\n      description: The user information\n      properties:\n        replacement:\n          type: string\n      required:\n        - replacement\n      type: object\n    Reroute:\n      properties:\n        incidentNumber:\n          type: string\n        targets:\n          items:\n            $ref: \"#/components/schemas/IncidentTarget\"\n          type: array\n      required:\n        - incidentNumber\n        - targets\n      type: object\n    RerouteCollection:\n      properties:\n        reroutes:\n          items:\n            $ref: \"#/components/schemas/Reroute\"\n          type: array\n        userName:\n          type: string\n      required:\n        - userName\n        - reroutes\n      type: object\n    RerouteStatus:\n      properties:\n        incidentNumber:\n          type: string\n        message:\n          type: string\n        success:\n          type: boolean\n        targetStatus:\n          items:\n            $ref: \"#/components/schemas/RerouteTargetStatus\"\n          type: array\n      required:\n        - incidentNumber\n        - success\n        - targetStatus\n      type: object\n    RerouteStatusResponse:\n      properties:\n        statuses:\n          items:\n            $ref: \"#/components/schemas/RerouteStatus\"\n          type: array\n      type: object\n    RerouteTargetStatus:\n      properties:\n        message:\n          type: string\n        slug:\n          description: User name or escalation policy slug\n          type: string\n        success:\n          type: boolean\n      required:\n        - slug\n        - success\n      type: object\n    RoutingKeyInfo:\n      description: Routing keys contain the following fields\n      properties:\n        isDefault:\n          type: boolean\n        routingKey:\n          type: string\n        targets:\n          items:\n            $ref: \"#/components/schemas/RoutingKeyTarget\"\n          type: array\n      type: object\n    RoutingKeyTarget:\n      description: Routing key target\n      properties:\n        _teamUrl:\n          type: string\n        policyName:\n          type: string\n        policySlug:\n          type: string\n      type: object\n    ScheduledOverride:\n      properties:\n        assignments:\n          items:\n            $ref: \"#/components/schemas/Assignment\"\n          type: array\n        end:\n          description: The override end time (ISO 8601)\n          type: string\n        publicId:\n          type: string\n        start:\n          description: The override start time (ISO 8601).\n          type: string\n        timezone:\n          type: string\n        user:\n          $ref: \"#/components/schemas/ScheduledUser\"\n      type: object\n    ScheduledOverridePayload:\n      properties:\n        end:\n          description: The override end time (ISO 8601)\n          type: string\n        start:\n          description: The override start time (ISO 8601)\n          type: string\n        timezone:\n          type: string\n        username:\n          type: string\n      type: object\n    ScheduledOverridePayloadUpdate:\n      properties:\n        end:\n          description: The override end time (ISO 8601)\n          type: string\n        policySlug:\n          type: string\n        start:\n          description: The override start time (ISO 8601)\n          type: string\n        username:\n          type: string\n      type: object\n    ScheduledUser:\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n      type: object\n    SimpleTeamDetail:\n      description: Some info about the team\n      properties:\n        _adminsUrl:\n          type: string\n        _membersUrl:\n          type: string\n        _policiesUrl:\n          type: string\n        _selfUrl:\n          type: string\n        name:\n          type: string\n        slug:\n          type: string\n      type: object\n    TakeRequest:\n      properties:\n        fromUser:\n          type: string\n        toUser:\n          type: string\n      required:\n        - fromUser\n        - toUser\n      type: object\n    TakeResult:\n      properties:\n        result:\n          type: string\n      type: object\n    Team:\n      properties:\n        name:\n          type: string\n        slug:\n          type: string\n      type: object\n    TeamAdmin:\n      description: Some info about the user\n      properties:\n        _selfUrl:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n      type: object\n    TeamAdminsResponse:\n      description: A list of team admins for the team\n      properties:\n        teamAdmins:\n          items:\n            $ref: \"#/components/schemas/TeamAdmin\"\n          type: array\n      type: object\n    TeamDetail:\n      description: Some info about the team\n      properties:\n        _adminsUrl:\n          type: string\n        _membersUrl:\n          type: string\n        _policiesUrl:\n          type: string\n        _selfUrl:\n          type: string\n        isDefaultTeam:\n          type: boolean\n        memberCount:\n          type: number\n        name:\n          type: string\n        slug:\n          type: string\n        version:\n          type: number\n      type: object\n    TeamMember:\n      description: Some info about the user\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        username:\n          type: string\n        verified:\n          description: Whether or not this user has set their password (will always be\n            false)\n          type: string\n        version:\n          type: number\n      type: object\n    TeamSchedule:\n      properties:\n        schedules:\n          items:\n            $ref: \"#/components/schemas/PolicySchedule\"\n          type: array\n        team:\n          $ref: \"#/components/schemas/Team\"\n      type: object\n    TeamScheduleOverlayResource:\n      properties:\n        end:\n          description: The time the override is scheduled to end\n          type: number\n        orig:\n          description: The user scheduled on call (if any)\n          type: string\n        over:\n          description: The user overriding the scheduled on call user (if any)\n          type: string\n        start:\n          description: The time the override is scheduled to start\n          type: number\n      type: object\n    TeamScheduleResource:\n      properties:\n        oncall:\n          description: The user scheduled on call (if any)\n          type: string\n        overrideoncall:\n          description: The user overriding the scheduled on call user (if any)\n          type: string\n        policyType:\n          type: string\n        rolls:\n          items:\n            $ref: \"#/components/schemas/TeamScheduleRollResource\"\n          type: array\n        rotationName:\n          type: string\n        shiftName:\n          type: string\n        shiftRoll:\n          type: number\n      required:\n        - policyType\n        - rolls\n      type: object\n    TeamScheduleRollResource:\n      properties:\n        change:\n          description: The time the period is scheduled to start\n          type: number\n        isRoll:\n          type: boolean\n        oncall:\n          description: The user scheduled on call (if any)\n          type: string\n        until:\n          description: The time the period is scheduled to end\n          type: number\n      required:\n        - change\n        - until\n        - isRoll\n      type: object\n    TimeoutDescription:\n      enum:\n        - If still unacked after 1 minute\n        - If still unacked after 5 minute\n        - If still unacked after 10 minute\n        - If still unacked after 15 minute\n        - If still unacked after 20 minute\n        - If still unacked after 25 minute\n        - If still unacked after 30 minute\n        - If still unacked after 45 minute\n        - If still unacked after 60 minute\n      type: string\n    TimeoutObject:\n      properties:\n        description:\n          $ref: \"#/components/schemas/TimeoutDescription\"\n        type:\n          $ref: \"#/components/schemas/TimeoutType\"\n      type: object\n    TimeoutType:\n      enum:\n        - 1\n        - 5\n        - 10\n        - 15\n        - 20\n        - 25\n        - 30\n        - 45\n        - 60\n      type: integer\n    UpdateAssignment:\n      properties:\n        policy:\n          description: The policy slug\n          type: string\n        username:\n          description: The username being assinged\n          type: string\n      required:\n        - policy\n      type: object\n    User:\n      properties:\n        username:\n          type: string\n      type: object\n    UserContact:\n      properties:\n        _selfUrl:\n          type: string\n        deviceType:\n          type: string\n        extId:\n          type: string\n        label:\n          type: string\n      type: object\n    UserLog:\n      properties:\n        adjustedTotal:\n          properties:\n            hours:\n              type: number\n            minutes:\n              type: number\n          type: object\n        log:\n          items:\n            $ref: \"#/components/schemas/OnCallInterval\"\n          type: array\n        total:\n          properties:\n            hours:\n              type: number\n            minutes:\n              type: number\n          type: object\n        userId:\n          type: string\n      type: object\n    UserPagingPolicy:\n      items:\n        $ref: \"#/components/schemas/PagingPolicyStep\"\n      type: array\n    UserSchedule:\n      properties:\n        teamSchedules:\n          items:\n            $ref: \"#/components/schemas/TeamSchedule\"\n          type: array\n      type: object\n    UserTeamsResponse:\n      description: A list of teams to which the user belongs\n      properties:\n        teams:\n          items:\n            $ref: \"#/components/schemas/SimpleTeamDetail\"\n          type: array\n      type: object\n    V1User:\n      description: Some info about the user\n      properties:\n        _selfUrl:\n          type: string\n        createdAt:\n          type: string\n        email:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        passwordLastUpdated:\n          type: string\n        username:\n          type: string\n        verified:\n          description: Whether or not this user has set their password (will always be\n            false)\n          type: boolean\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/victorops.com-0.0.3-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/victorops.com-0.0.3-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}