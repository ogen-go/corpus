{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/michaelawyu/api_tutorial"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/photo_album/codegen_server/openapi_server/openapi/openapi.yaml",
			"byteSize": 9765,
			"content": "openapi: 3.0.1\ninfo:\n  description: 'An OpenAPI specification sample for [Build, Deploy, and Manage Networked\n    APIs: An Overview](https://goo.gl/VardtG) document.'\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  title: Sample OpenAPI Specification\n  version: 0.0.1\nservers:\n- description: Example API Service\n  url: http://localhost:8080/\npaths:\n  /users:\n    post:\n      description: Creates a new user\n      operationId: create_user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: The user to create\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: User added\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\n  /users/{user_id}:\n    get:\n      description: Gets a user\n      operationId: get_user\n      parameters:\n      - description: ID of user\n        explode: false\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: User found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\n    patch:\n      description: Updates a user\n      operationId: update_user\n      parameters:\n      - description: ID of user\n        explode: false\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: The user to update\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: User updated\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\n  /users/{user_id}/photos/:\n    get:\n      description: Lists all photos\n      operationId: list_photos\n      parameters:\n      - description: ID of user\n        explode: false\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Ordering for the results\n        explode: true\n        in: query\n        name: order_by\n        required: false\n        schema:\n          enum:\n          - display_name\n          - created_at\n          type: string\n        style: form\n      - description: Token for the next page\n        explode: true\n        in: query\n        name: page_token\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n          description: List of photos and next_page_token\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\n    post:\n      description: Creates a photo\n      operationId: create_photo\n      parameters:\n      - description: ID of user\n        explode: false\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Photo'\n        description: The photo to add\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Photo'\n          description: Photo added\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\n  /users/{user_id}/photos/{photo_id}:\n    delete:\n      description: Deletes a photo\n      operationId: delete_photo\n      parameters:\n      - description: ID of user\n        explode: false\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of photo\n        explode: false\n        in: path\n        name: photo_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          description: Photo deleted\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\n    get:\n      description: Gets a photo\n      operationId: get_photo\n      parameters:\n      - description: ID of user\n        explode: false\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: ID of photo\n        explode: false\n        in: path\n        name: photo_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Photo'\n          description: Photo found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\n  /users/{user_id}/photos:batchGet:\n    get:\n      description: Gets a list of photos\n      operationId: batchget_photo\n      parameters:\n      - description: ID of user\n        explode: false\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: a collection of photo IDs\n        explode: true\n        in: query\n        name: photo_ids\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Photo'\n                type: array\n          description: List of photos found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n          description: Unexpected error\n      x-openapi-router-controller: openapi_server.controllers.default_controller\ncomponents:\n  parameters:\n    user_id:\n      description: ID of user\n      explode: false\n      in: path\n      name: user_id\n      required: true\n      schema:\n        type: string\n      style: simple\n    photo_id:\n      description: ID of photo\n      explode: false\n      in: path\n      name: photo_id\n      required: true\n      schema:\n        type: string\n      style: simple\n    photo_ids:\n      description: a collection of photo IDs\n      explode: true\n      in: query\n      name: photo_ids\n      required: true\n      schema:\n        items:\n          type: string\n        type: array\n      style: form\n  schemas:\n    User:\n      example:\n        name: name\n        display_name: display_name\n        email: email\n      properties:\n        name:\n          readOnly: true\n          type: string\n        display_name:\n          minLength: 1\n          type: string\n        email:\n          format: email\n          type: string\n      required:\n      - display_name\n      - email\n      type: object\n    Photo:\n      example:\n        data: data\n        name: name\n        created_at: 0\n        display_name: display_name\n      properties:\n        name:\n          readOnly: true\n          type: string\n        display_name:\n          type: string\n        created_at:\n          format: long\n          readOnly: true\n          type: integer\n        data:\n          type: string\n      required:\n      - data\n      type: object\n    ErrorMessage:\n      properties:\n        error_code:\n          type: string\n        error_message:\n          type: string\n      required:\n      - error_code\n      - error_message\n      type: object\n    inline_response_200:\n      example:\n        next_page_token: next_page_token\n        photos:\n        - data: data\n          name: name\n          created_at: 0\n          display_name: display_name\n        - data: data\n          name: name\n          created_at: 0\n          display_name: display_name\n      properties:\n        photos:\n          items:\n            $ref: '#/components/schemas/Photo'\n          type: array\n        next_page_token:\n          type: string\n",
			"canonicalURL": "/github.com/michaelawyu/api_tutorial@d76bcd0d77f18b005ecef2d01c6cba4f42856007/-/blob/openapi/photo_album/codegen_server/openapi_server/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/michaelawyu/api_tutorial/blob/d76bcd0d77f18b005ecef2d01c6cba4f42856007/openapi/photo_album/codegen_server/openapi_server/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}