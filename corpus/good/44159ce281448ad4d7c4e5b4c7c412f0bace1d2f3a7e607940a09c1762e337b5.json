{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PureStorage-OpenConnect/pure1-unplugged"
		},
		"file": {
			"name": "api-server-swagger.yaml",
			"size": 0,
			"path": "deploy/helm/pure1-unplugged/charts/swagger-server/api-server-swagger.yaml",
			"byteSize": 16396,
			"content": "openapi: 3.0.0\ninfo:\n  title: Pure1 Unplugged API\n  description: The interface provided by the Pure1 Unplugged API Server\n  version: 0.0.1\nservers:\n  - url: /\n    description: This Pure1 Unplugged 2.0 instance\ntags:\n  - name: Device Operations\n    description: Operations regarding the top-level devices\n  - name: Status Operations\n    description: Operations regarding device statuses\n  - name: Tag Operations\n    description: Operations regarding device tags\npaths:\n  /api/arrays:\n    get:\n      summary: Returns a list of registered storage devices\n      tags:\n        - Device Operations\n      parameters:\n        - $ref: \"#/components/parameters/idsParam\"\n        - $ref: \"#/components/parameters/namesParam\"\n        - $ref: \"#/components/parameters/modelsParam\"\n        - $ref: \"#/components/parameters/versionsParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/sortParam\"\n      responses:\n        \"200\":\n          description: The search was successful\n          content:\n            application/json:\n              schema:\n                description: Collection of devices\n                type: object\n                properties:\n                  response:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Device\"\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\n    post:\n      summary: Registers a new storage device\n      tags:\n        - Device Operations\n      requestBody:\n        description: The device to register\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceRegistration\"\n      responses:\n        \"200\":\n          description: The device was registered successfully\n          content:\n            application/json:\n              schema:\n                description: The registered device\n                $ref: \"#/components/schemas/Device\"\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\n    patch:\n      summary: Modifies all storage devices matching the given query\n      tags:\n        - Device Operations\n      parameters:\n        - $ref: \"#/components/parameters/idsParam\"\n        - $ref: \"#/components/parameters/namesParam\"\n        - $ref: \"#/components/parameters/modelsParam\"\n        - $ref: \"#/components/parameters/versionsParam\"\n      requestBody:\n        description: The patch to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DevicePatch\"\n      responses:\n        \"200\":\n          description: The patch was successful\n          content:\n            application/json:\n              schema:\n                description: Collection of devices\n                type: object\n                properties:\n                  response:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Device\"\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\n    delete:\n      summary: Deletes all storage devices matching the given query. Note that this will fail on an empty query to avoid mass-destructive operations.\n      tags:\n        - Device Operations\n      parameters:\n        - $ref: \"#/components/parameters/idsParam\"\n        - $ref: \"#/components/parameters/namesParam\"\n        - $ref: \"#/components/parameters/modelsParam\"\n        - $ref: \"#/components/parameters/versionsParam\"\n      responses:\n        \"200\":\n          description: The deletion was successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deletedCount:\n                    description: The number of devices deleted\n                    type: integer\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\n  /api/arrays/status:\n    get:\n      summary: Returns a list of registered storage device statuses\n      tags:\n        - Status Operations\n      parameters:\n        - $ref: \"#/components/parameters/idsParam\"\n        - $ref: \"#/components/parameters/namesParam\"\n        - $ref: \"#/components/parameters/modelsParam\"\n        - $ref: \"#/components/parameters/versionsParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/sortParam\"\n      responses:\n        \"200\":\n          description: The registration was successful\n          content:\n            application/json:\n              schema:\n                description: Collection of device statuses\n                type: object\n                properties:\n                  response:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/DeviceStatus\"\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\n  /api/arrays/tags:\n    get:\n      summary: Returns a list of registered storage device tags\n      tags:\n        - Tag Operations\n      parameters:\n        - $ref: \"#/components/parameters/idsParam\"\n        - $ref: \"#/components/parameters/namesParam\"\n        - $ref: \"#/components/parameters/modelsParam\"\n        - $ref: \"#/components/parameters/versionsParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/sortParam\"\n      responses:\n        \"200\":\n          description: The search was successful\n          content:\n            application/json:\n              schema:\n                description: Collection of device tags\n                type: object\n                properties:\n                  response:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/DeviceTags\"\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\n    patch:\n      summary: Adds new tags and modifies existing tags on all devices matching the given query\n      tags:\n        - Tag Operations\n      parameters:\n        - $ref: \"#/components/parameters/idsParam\"\n        - $ref: \"#/components/parameters/namesParam\"\n        - $ref: \"#/components/parameters/modelsParam\"\n        - $ref: \"#/components/parameters/versionsParam\"\n      requestBody:\n        description: The tag patch to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              description: Collection of device tag patches\n              type: object\n              properties:\n                tags:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DeviceTag\"\n      responses:\n        \"200\":\n          description: The patch was successful\n          content:\n            application/json:\n              schema:\n                description: Collection of device tags\n                type: object\n                properties:\n                  response:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/DeviceTags\"\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\n    delete:\n      summary: Deletes the given tags from all devices matching the given query\n      tags:\n        - Tag Operations\n      parameters:\n        - $ref: \"#/components/parameters/idsParam\"\n        - $ref: \"#/components/parameters/namesParam\"\n        - $ref: \"#/components/parameters/modelsParam\"\n        - $ref: \"#/components/parameters/versionsParam\"\n        - name: tags\n          description: The tag keys to delete, as a comma-separated list\n          in: query\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: The deletion was successful\n          content:\n            application/json:\n              schema:\n                description: Collection of device tags\n                type: object\n                properties:\n                  response:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/DeviceTags\"\n        \"400\":\n          $ref: \"#/components/responses/400Response\"\n        \"500\":\n          $ref: \"#/components/responses/500Response\"\ncomponents:\n  parameters:\n    idsParam:\n      name: ids\n      description: The IDs to filter by, as a comma-separated list\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n    namesParam:\n      name: names\n      description: The names to filter by, as a comma-separated list. Wildcards are supported\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n    modelsParam:\n      name: models\n      description: The device models to filter by, as a comma-separated list. Wildcards are supported\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n    versionsParam:\n      name: versions\n      description: The versions to filter by, as a comma-separated list. Wildcards are supported\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n    limitParam:\n      name: limit\n      description: The maximum number of items to return\n      in: query\n      schema:\n        type: integer\n        minimum: 1\n    offsetParam:\n      name: offset\n      description: The number of items to skip\n      in: query\n      schema:\n        type: integer\n        minimum: 0\n    sortParam:\n      name: sort\n      description: How to sort the returned results. Add a hyphen at the end to sort descending, default is ascending.\n      in: query\n      schema:\n        type: string\n  responses:\n    400Response:\n      description: Something in the input was invalid\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n    500Response:\n      description: Something went wrong in the server (such as a database connection error)\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n  schemas:\n    Device:\n      description: Information about a specific device\n      type: object\n      required:\n        - id\n        - name\n        - mgmt_endpoint\n        - api_token\n        - device_type\n        - status\n        - model\n        - version\n        - _as_of\n        - _last_updated\n      properties:\n        id:\n          type: string\n          description: Globally unique device ID\n        name:\n          type: string\n          description: Device display name\n        mgmt_endpoint:\n          type: string\n          description: Address to access the device management portal through\n        nfs_endpoint:\n          type: string\n          description: Address to access the network file system through (required for FlashBlade only)\n        api_token:\n          type: string\n          description: API token to use to access the device\n        device_type:\n          type: string\n          description: The type of the device (either \"FlashArray\" or \"FlashBlade\")\n        status:\n          type: string\n          description: \u003e-\n            Current status of the device. One of: { \"Connecting\", \"Connected\",\n            \"Unable to connect. Error: [error message]\"}\n        model:\n          type: string\n          description: \u003e-\n            The model of the device. For example, \"FlashBlade\", \"FA-405\", etc.\n        version:\n          type: string\n          description: \u003e-\n            The purity version running on the device. For example, \"5.1.3\", \"4.9.5\", or \"2.3.3\"\n        _as_of:\n          type: string\n          description: The last time the device was successfully pinged, in ISO 8601 format (yyyy-MM-ddTHH:mm:ss.SSS)\n        _last_updated:\n          type: string\n          description: \u003e-\n            The last time information in this device was updated, in ISO 8601\n            format (yyyy-MM-ddTHH:mm:ss.SSS)\n    DeviceRegistration:\n      description: Information to register an device\n      type: object\n      required:\n        - name\n        - mgmt_endpoint\n        - api_token\n        - device_type\n      properties:\n        name:\n          type: string\n          description: Device display name\n        mgmt_endpoint:\n          type: string\n          description: Address to access the device management portal through\n        api_token:\n          type: string\n          description: API token to use to access the device\n        device_type:\n          type: string\n          description: The type of the device (either \"FlashArray\" or \"FlashBlade\")\n        nfs_endpoint:\n          type: string\n          description: Address to access the network file system through (required for FlashBlade only)\n    DevicePatch:\n      description: Information to patch for a device/devices\n      type: object\n      properties:\n        name:\n          type: string\n          description: Device display name\n        mgmt_endpoint:\n          type: string\n          description: Address to access the device management portal through\n        nfs_endpoint:\n          type: string\n          description: Address to access the network file system through (required for FlashBlade only)\n        api_token:\n          type: string\n          description: API token to use to access the device\n        device_type:\n          type: string\n          description: The type of the device (either \"FlashArray\" or \"FlashBlade\")\n        status:\n          type: string\n          description: For internal modification only.\n        _as_of:\n          type: string\n          description: For internal modification only.\n        _last_updated:\n          type: string\n          description: For internal modification only.\n    DeviceStatus:\n      description: Information on the status of a specific device\n      type: object\n      required:\n        - id\n        - status\n        - _as_of\n      properties:\n        id:\n          type: string\n          description: Globally unique device ID\n        status:\n          type: string\n          description: \u003e-\n            Current status of the device. One of: { 'Connecting', 'Connected',\n            'Unable to connect. Error: [error message]'}\n        _as_of:\n          type: string\n          description: The last time the device was successfully pinged, in ISO 8601 format (yyyy-MM-ddTHH:mm:ss.SSS)\n    DeviceTags:\n      description: Information on the tags of a specific device\n      type: object\n      required:\n        - id\n        - tags\n        - _as_of\n      properties:\n        id:\n          type: string\n          description: Globally unique device ID\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DeviceTag\"\n          description: The tags on the device\n        _as_of:\n          type: string\n          description: The last time the device was successfully pinged, in ISO 8601 format (yyyy-MM-ddTHH:mm:ss.SSS)\n    DeviceTag:\n      description: A tag on a device\n      type: object\n      required:\n        - key\n        - value\n        - namespace\n      properties:\n        key:\n          type: string\n          description: The key of the tag\n        namespace:\n          type: string\n          description: \u003e-\n            The namespace of the tag. Usually 'psoNamespace' (for PSO-set internal\n            labels) or 'pure1-unplugged' (for user-set tags)\n        value:\n          type: string\n          description: The value of the tag\n    ErrorResponse:\n      description: The response given for an error\n      type: object\n      required:\n        - code\n        - text\n      properties:\n        code:\n          type: integer\n          description: The HTTP error code of this error\n        namespace:\n          type: string\n          description: The actual error message that caused this error code\n",
			"canonicalURL": "/github.com/PureStorage-OpenConnect/pure1-unplugged@10c8fca177027641073600a6df52948114ffad4f/-/blob/deploy/helm/pure1-unplugged/charts/swagger-server/api-server-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PureStorage-OpenConnect/pure1-unplugged/blob/10c8fca177027641073600a6df52948114ffad4f/deploy/helm/pure1-unplugged/charts/swagger-server/api-server-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}