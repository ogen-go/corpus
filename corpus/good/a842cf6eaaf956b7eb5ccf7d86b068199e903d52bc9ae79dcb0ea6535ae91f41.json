{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radixdlt/radixdlt-network-gateway"
		},
		"file": {
			"name": "gateway-api-spec.yaml",
			"size": 0,
			"path": "gateway-api-spec.yaml",
			"byteSize": 75149,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.1.4\n  title: Radix Gateway API\n  license:\n    name: The Radix License, Version 1.0\n    url: https://www.radixfoundation.org/licenses/LICENSE-v1\n  description: |\n    This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to simply build and submit transactions to the network.\n\n    The API is designed for use by the Radix Foundation's [Desktop Wallet](https://wallet.radixdlt.com/) and [Explorer](https://explorer.radixdlt.com/), and replaces the original Olympia \"Archive Node API\".\n\n    # Gateway API Overview\n\n    The Gateway API is separated into distinct groupings:\n\n    * `/gateway` - Information about the Gateway API status\n    * `/account/*` - To query account-related information\n    * `/token/*` - To query token-related information\n    * `/validator/*` and `/validators` - To query validator-related information\n    * `/transaction/*` - To build, finalize and submit transactions, and to read the status and content of submitted and on-ledger transactions.\n\n    The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/radixdlt-network-gateway), which is configured to read from full node/s to extract and index data from the network.\n\n    # Gateway API Format\n\n    The API is designed in a JSON-RPC style, using HTTP as a transport layer, which means that:\n\n    * All requests are POST requests.\n    * Any error is returned with an HTTP status code of 500, with a returned error object.\n      * The error object contains an HTTP-like `code`\n      * The error object also contains a structured/typed `details` sub-object, with a `type` discriminator, allowing for structured error interpretation in clients.\n\n    # Comparison to other Radix APIs\n\n    * [Core API](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/radixdlt/radixdlt/main/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/core/api.yaml) - The Core API is a low level API exposed by full nodes, and designed for use on internal networks. It is primarily designed for network integrations such as exchanges, ledger analytics providers, or hosted ledger data dashboards. The Core API provides endpoints for reading the mempool, constructing transactions and also exposes a stream of committed transactions.\n\n    * [System API](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/radixdlt/radixdlt/main/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/system/api.yaml) - The System API is a private API exposed by full nodes to read system status.\n\n    The Gateway API offers a much wider range of query options and is more performant than the Core API. It is built on top of the Core API, ingesting data via the Core API transaction stream into a relational database.\n\n    The Gateway API transaction/construction endpoints operate with the concept of \"actions\" - these are higher-levels of intent compared with the Core API, which makes it easier for clients to use. The Core API should be used if you require more power/flexiblity for managing UTXOs, or submitting transactions which can't be mapped to a Gateway API action.\n\nservers:\n  - url: http://localhost:5208\n  - url: https://stokenet-gateway.radixdlt.com\n  - url: https://mainnet-gateway.radixdlt.com\ntags:\n  - name: Status\n    x-displayName: Status Endpoints\n    description: To query information about the Gateway API status.\n  - name: Account\n    x-displayName: Account Endpoints\n    description: To query account-related information.\n  - name: Token\n    x-displayName: Token Endpoints\n    description: To query token-related information.\n  - name: Validator\n    x-displayName: Validator Endpoints\n    description: To query validator-related information.\n  - name: Transaction\n    x-displayName: Transaction Endpoints\n    description: To build, finalize and submit transactions, and to query transaction status and contents.\npaths:\n  \"/gateway\":\n    post:\n      summary: Get Gateway Info\n      description: Returns the Gateway API version, network and current ledger state.\n      tags:\n        - Status\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/GatewayRequest\"\n      responses:\n        '200':\n          description: The Network\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GatewayResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/token/native\":\n    post:\n      summary: Get Native Token Info\n      description: Returns information about XRD, including its Radix Resource Identifier.\n      tags:\n        - Token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TokenNativeRequest\"\n      responses:\n        '200':\n          description: Token info\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TokenNativeResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/token\":\n    post:\n      summary: Get Token Info\n      description: Returns information about any token, given its Radix Resource Identifier.\n      tags:\n        - Token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TokenRequest\"\n      responses:\n        '200':\n          description: Token info\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TokenResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/token/derive\":\n    post:\n      summary: Derive Token Identifier\n      description: Returns the Radix Resource Identifier of a token with the given symbol, created by an account with the given public key.\n      tags:\n        - Token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TokenDeriveRequest\"\n      responses:\n        '200':\n          description: Token info\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TokenDeriveResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/account/derive\":\n    post:\n      summary: Derive Account Identifier\n      description: Returns the account address associated with the given public key.\n      tags:\n        - Account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AccountDeriveRequest\"\n      responses:\n        '200':\n          description: Token info\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AccountDeriveResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/account/balances\":\n    post:\n      summary: Get Account Balances\n      description: |\n        Returns an account's available and staked token balances, given an account address.\n        If an account address is valid, but doesn't have any ledger transactions against it, this endpoint still returns a successful response.\n      tags:\n        - Account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AccountBalancesRequest\"\n      responses:\n        '200':\n          description: Balances of Account\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AccountBalancesResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/account/stakes\":\n    post:\n      summary: Get Stake Positions\n      description: |\n        Returns the xrd which the account has in pending and active delegated stake positions with validators, given an account address.\n        If an account address is valid, but doesn't have any ledger transactions against it, this endpoint still returns a successful response.\n      tags:\n        - Account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AccountStakesRequest\"\n      responses:\n        '200':\n          description: List of Stake Positions\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AccountStakesResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/account/unstakes\":\n    post:\n      summary: Get Unstake Positions\n      description: |\n        Returns the xrd which the account has in pending and temporarily-locked delegated unstake positions with validators, given an account address.\n        If an account address is valid, but doesn't have any ledger transactions against it, this endpoint still returns a successful response.\n      tags:\n        - Account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AccountUnstakesRequest\"\n      responses:\n        '200':\n          description: List of Unstake Positions\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AccountUnstakesResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/account/transactions\":\n    post:\n      summary: Get Account Transactions\n      description: |\n        Returns user-initiated transactions involving the given account address which have been succesfully committed to the ledger.\n        The transactions are returned in a paginated format, ordered by most recent.\n        If an account address is valid, but doesn't have any ledger transactions against it, this endpoint still returns a successful response.\n      tags:\n        - Account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AccountTransactionsRequest\"\n      responses:\n        '200':\n          description: List of Transactions\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AccountTransactionsResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/validator\":\n    post:\n      summary: Get Validator\n      description: |\n        Returns information about a validator, given a validator address.\n        If a validator address is valid, but has not appeared on ledger as a validator, this endpoint still returns a successful response.\n      tags:\n        - Validator\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ValidatorRequest\"\n      responses:\n        '200':\n          description: Validator Info\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ValidatorResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/validator/derive\":\n    post:\n      summary: Get Validator Identifier\n      description: Returns the validator address associated with the given public key.\n      tags:\n        - Validator\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ValidatorDeriveRequest\"\n      responses:\n        '200':\n          description: Validator Info\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ValidatorDeriveResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/validators\":\n    post:\n      summary: Get Validators\n      description: Returns information about all validators.\n      tags:\n        - Validator\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ValidatorsRequest\"\n      responses:\n        '200':\n          description: Ordered list of validators\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ValidatorsResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/validator/stakes\":\n    post:\n      summary: Get Validator Stakes\n      description: |\n        Returns paginated results about the delegated stakes from accounts to a validator.\n        The results are totalled by account, and ordered by account age (oldest to newest).\n      tags:\n        - Validator\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ValidatorStakesRequest\"\n      responses:\n        '200':\n          description: Page of account-validator stakes.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ValidatorStakesResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/transaction/rules\":\n    post:\n      summary: Get Transaction Rules\n      description: Returns the current rules used to build and validate transactions in the Radix Engine.\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TransactionRulesRequest\"\n      responses:\n        '200':\n          description: Rules for transaction construction\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TransactionRulesResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/transaction/recent\":\n    post:\n      summary: Get Recent Transactions\n      description: |\n        Returns user-initiated transactions which have been succesfully committed to the ledger.\n        The transactions are returned in a paginated format, ordered by most recent.\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/RecentTransactionsRequest\"\n      responses:\n        '200':\n          description: A page of the most recent transactions\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/RecentTransactionsResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/transaction/build\":\n    post:\n      summary: Build Transaction\n      description: Returns a built unsigned transaction payload, from a set of intended actions.\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TransactionBuildRequest\"\n      responses:\n        '200':\n          description: An unsigned transaction\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TransactionBuildResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/transaction/finalize\":\n    post:\n      summary: Finalize Transaction\n      description: Returns a signed transaction payload and transaction identifier, from an unsigned transaction payload and signature.\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TransactionFinalizeRequest\"\n      responses:\n        '200':\n          description: Final Signed Transaction\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TransactionFinalizeResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/transaction/submit\":\n    post:\n      summary: Submit Transaction\n      description: |\n        Submits a signed transaction payload to the network.\n        The transaction identifier from finalize or submit can then be used to track the transaction status.\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TransactionSubmitRequest\"\n      responses:\n        '200':\n          description: Successful Submission\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TransactionSubmitResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\n  \"/transaction/status\":\n    post:\n      summary: Transaction Status\n      description: |\n        Returns the status and contents of the transaction with the given transaction identifier. Transaction identifiers which aren't recognised as either belonging to a committed transaction or a transaction submitted through this Network Gateway may return a `TransactionNotFoundError`. Transaction identifiers relating to failed transactions will, after a delay, also be reported as a `TransactionNotFoundError`.\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TransactionStatusRequest\"\n      responses:\n        '200':\n          description: Transaction Status\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TransactionStatusResponse\"\n        '500':\n          description: Gateway Error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ErrorResponse\"\ncomponents:\n  schemas:\n    AccountBalancesRequest:\n      type: object\n      required:\n        - network_identifier\n        - account_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        account_identifier:\n          $ref: \"#/components/schemas/AccountIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n        account_identifier:\n          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88\n    AccountBalancesResponse:\n      type: object\n      required:\n        - ledger_state\n        - account_balances\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        account_balances:\n          $ref: \"#/components/schemas/AccountBalances\"\n    AccountBalances:\n      type: object\n      required:\n        - staked_and_unstaking_balance\n        - liquid_balances\n      properties:\n        staked_and_unstaking_balance:\n          description: The total XRD currently locked in stake or unstake positions.\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n        liquid_balances:\n          description: A list of all the token balances owned by the account.\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/TokenAmount\"\n    AccountStakesRequest:\n      type: object\n      required:\n        - network_identifier\n        - account_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        account_identifier:\n          $ref: \"#/components/schemas/AccountIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n        account_identifier:\n          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88\n    AccountStakesResponse:\n      type: object\n      required:\n        - pending_stakes\n        - stakes\n        - ledger_state\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        pending_stakes:\n          description: The stake positions which will become staked at the next epoch change.\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountStakeEntry\"\n        stakes:\n          description: The stake positions which are currently staked.\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountStakeEntry\"\n    AccountStakeEntry:\n      type: object\n      required:\n        - validator_identifier\n        - delegated_stake\n      properties:\n        validator_identifier:\n          description: The validator to which the XRD stake is delegated.\n          \"$ref\": \"#/components/schemas/ValidatorIdentifier\"\n        delegated_stake:\n          description: The amount of XRD staked.\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n    AccountUnstakesRequest:\n      type: object\n      required:\n        - network_identifier\n        - account_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        account_identifier:\n          $ref: \"#/components/schemas/AccountIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n        account_identifier:\n          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88\n    AccountUnstakesResponse:\n      type: object\n      required:\n        - ledger_state\n        - pending_unstakes\n        - unstakes\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        pending_unstakes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountUnstakeEntry\"\n        unstakes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountUnstakeEntry\"\n    AccountUnstakeEntry:\n      type: object\n      required:\n        - validator_identifier\n        - unstaking_amount\n        - epochs_until_unlocked\n      properties:\n        validator_identifier:\n          description: The validator to which the XRD stake was delegated.\n          \"$ref\": \"#/components/schemas/ValidatorIdentifier\"\n        unstaking_amount:\n          description: The amount of XRD which is being unstaked (this will be an estimate for pending unstakes).\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n        epochs_until_unlocked:\n          description: |\n            The number of epochs until the XRD in this unstake will be released back to the account. This delay is to enable stake to be slashed, if the validator misbehaves.\n          type: integer\n          format: int64\n    AccountTransactionsRequest:\n      type: object\n      required:\n        - network_identifier\n        - account_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        account_identifier:\n          $ref: \"#/components/schemas/AccountIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n        cursor:\n          description: This cursor allows forward pagination, by providing the cursor from the previous request.\n          type: string\n        limit:\n          description: The page size requested. The maximum value is 30 at present.\n          type: integer\n      example:\n        network_identifier:\n          network: mainnet\n        account_identifier:\n          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88\n        cursor: '0'\n        limit: 10\n    AccountTransactionsResponse:\n      type: object\n      required:\n        - ledger_state\n        - transactions\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        total_count:\n          description: The total number of transactions under the account.\n          type: integer\n          format: int64\n        next_cursor:\n          description: The cursor to be provided for the next page of results. If missing, this is the last page of results.\n          type: string\n        transactions:\n          description: The page of transactions.\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransactionInfo\"\n    TransferTokens:\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - from_account\n            - to_account\n            - amount\n          properties:\n            from_account:\n              \"$ref\": \"#/components/schemas/AccountIdentifier\"\n            to_account:\n              \"$ref\": \"#/components/schemas/AccountIdentifier\"\n            amount:\n              \"$ref\": \"#/components/schemas/TokenAmount\"\n    StakeTokens:\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - from_account\n            - to_validator\n            - amount\n          properties:\n            from_account:\n              \"$ref\": \"#/components/schemas/AccountIdentifier\"\n            to_validator:\n              \"$ref\": \"#/components/schemas/ValidatorIdentifier\"\n            amount:\n              \"$ref\": \"#/components/schemas/TokenAmount\"\n    UnstakeTokens:\n      description: An action to unstake tokens. Exactly one of amount or unstake_percentage is required.\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - from_validator\n            - to_account\n          properties:\n            from_validator:\n              \"$ref\": \"#/components/schemas/ValidatorIdentifier\"\n            to_account:\n              \"$ref\": \"#/components/schemas/AccountIdentifier\"\n            amount:\n              description: |\n                If present, this gives the amount of XRD to unstake. This should be no more than the maximum estimated XRD of the stake position at the corresponding LedgerState. Provide a PartialLedgerStateIdentifier matching the LedgerState of the response which provided the estimate that was shared with the user; or simply use the `unstake_percentage` option.\n              \"$ref\": \"#/components/schemas/TokenAmount\"\n            unstake_percentage:\n              description: |\n                The percentage of currently staked XRD to unstake, where the proportion is a proportion of the current active stake at the given LedgerState. To be explicit, the referenced active state does not include pending stake, pending unstake or locked unstake.\n              type: number\n              minimum: 0\n              maximum: 100\n    CreateTokenDefinition:\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - token_properties\n            - token_supply\n          properties:\n            token_properties:\n              \"$ref\": \"#/components/schemas/TokenProperties\"\n            token_supply:\n              \"$ref\": \"#/components/schemas/TokenAmount\"\n            to_account:\n              \"$ref\": \"#/components/schemas/AccountIdentifier\"\n    MintTokens:\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - to_account\n            - amount\n          properties:\n            to_account:\n              \"$ref\": \"#/components/schemas/AccountIdentifier\"\n            amount:\n              \"$ref\": \"#/components/schemas/TokenAmount\"\n    BurnTokens:\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - from_account\n            - amount\n          properties:\n            from_account:\n              \"$ref\": \"#/components/schemas/AccountIdentifier\"\n            amount:\n              \"$ref\": \"#/components/schemas/TokenAmount\"\n    RegisterValidator:\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - validator\n          properties:\n            validator:\n              description: \"The validator to register. The transaction will need to be signed by the validator's private key.\"\n              \"$ref\": \"#/components/schemas/ValidatorIdentifier\"\n    UnregisterValidator:\n      allOf:\n        - \"$ref\": \"#/components/schemas/Action\"\n        - type: object\n          required:\n            - validator\n          properties:\n            validator:\n              description: \"The validator to unregister. The transaction will need to be signed by the validator's private key.\"\n              \"$ref\": \"#/components/schemas/ValidatorIdentifier\"\n    Action:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n      discriminator:\n        propertyName: type\n        mapping:\n          CreateTokenDefinition: \"#/components/schemas/CreateTokenDefinition\"\n          TransferTokens: \"#/components/schemas/TransferTokens\"\n          StakeTokens: \"#/components/schemas/StakeTokens\"\n          UnstakeTokens: \"#/components/schemas/UnstakeTokens\"\n          MintTokens: \"#/components/schemas/MintTokens\"\n          BurnTokens: \"#/components/schemas/BurnTokens\"\n          RegisterValidator: \"#/components/schemas/RegisterValidator\"\n          UnregisterValidator: \"#/components/schemas/UnregisterValidator\"\n    TransactionRulesRequest:\n      type: object\n      required:\n        - network_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n    TransactionRulesResponse:\n      type: object\n      required:\n        - ledger_state\n        - transaction_rules\n      properties:\n        ledger_state:\n          \"$ref\": \"#/components/schemas/LedgerState\"\n        transaction_rules:\n          \"$ref\": \"#/components/schemas/TransactionRules\"\n    TransactionRules:\n      type: object\n      properties:\n        maximum_message_length:\n          type: integer\n        minimum_stake:\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n    RecentTransactionsRequest:\n      type: object\n      required:\n        - network_identifier\n        - account_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n        cursor:\n          description: This cursor allows forward pagination, by providing the cursor from the previous request.\n          type: string\n        limit:\n          description: The page size requested. The maximum value is 30 at present.\n          type: integer\n      example:\n        network_identifier:\n          network: mainnet\n        limit: 10\n    RecentTransactionsResponse:\n      type: object\n      required:\n        - ledger_state\n        - transactions\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        next_cursor:\n          description: The cursor to be provided for the next page of results. If missing, this is the last page of results.\n          type: string\n        transactions:\n          description: The page of user transactions.\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransactionInfo\"\n    TransactionBuildRequest:\n      type: object\n      required:\n        - network_identifier\n        - actions\n        - fee_payer\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n        actions:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Action\"\n        fee_payer:\n          description: The account which will pay the transaction fee, and whose private key will need to sign the transaction.\n          \"$ref\": \"#/components/schemas/AccountIdentifier\"\n        message:\n          description: The hex-encoded message bytes.\n          type: string\n        disable_token_mint_and_burn:\n          description: If true, mints and burns (aside from fee payments) are not permitted during transaction execution.\n          type: boolean\n      example:\n        network_identifier:\n          network: mainnet\n        actions:\n          - type: TransferTokens\n            from_account:\n              address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88\n            to_account:\n              address: rdx1qspcvwwuf8s549zyspz683v4n93g9kzpn6u6a9yalwzt00zghg75lmsftwv29\n            amount:\n              token_identifier:\n                rri: xrd_rr1qy5wfsfh\n              value: '123000000000000000'\n        fee_payer:\n          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88\n        disable_token_mint_and_burn: true\n    TransactionBuildResponse:\n      type: object\n      required:\n        - transaction_build\n      properties:\n        transaction_build:\n          $ref: \"#/components/schemas/TransactionBuild\"\n    TransactionBuild:\n      type: object\n      required:\n        - fee\n        - unsigned_transaction\n        - payload_to_sign\n      properties:\n        fee:\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n        unsigned_transaction:\n          description: The unsigned transaction payload, hex encoded.\n          type: string\n        payload_to_sign:\n          description: The payload which needs signing, hex encoded. This is `SHA256(SHA256(unsigned_transaction_bytes))`.\n          type: string\n    TransactionFinalizeRequest:\n      type: object\n      required:\n        - network_identifier\n        - unsigned_transaction\n        - signature\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        unsigned_transaction:\n          description: The unsigned transaction payload, hex encoded.\n          type: string\n        signature:\n          description: A signature of the payload to sign - `SHA256(SHA256(unsigned_transaction_bytes))`.\n          $ref: \"#/components/schemas/Signature\"\n        submit:\n          description: |\n            If true, the transaction is immediately submitted after finalization. However, we recommend that a transaction is submitted in a step after finalization. This ensures that you have a transaction identifier on hand to monitor the transaction status, even if the submission request failed with an uncertain error.\n          type: boolean\n      example:\n        network_identifier:\n          network: mainnet\n        unsigned_transaction: 0d00010776bf65acf2d25e9dcf4c716f5f39f201dccbfa173ad9c7f1c1dbcb8a86776b4d0000000101002100000000000000000000000000000000000000000000000000012901c1cf3900000200450600040279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798010000000000000000000000000000000000000000000000017afba303493b7ff8000800000200450600040279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798010000000000000000000000000000000000000000000000017afba303493b7f9402004506000402c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5010000000000000000000000000000000000000000000000000000000000000064000c003430303030366336663631363432303734363537333734363936653637323037343732363136653733363136333734363936663665\n        signature:\n          bytes: 3046022100cda0fcd31bf976aa65c31c180b4f595a61c866252c52898b952b8fe1d8fdcc33022100999e83036f9529c6250c07423d8b57f252dfba1b843385970bfa69f2c367658e\n          public_key:\n            hex: 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\n        submit: false\n    PublicKey:\n      type: object\n      required:\n        - hex\n      properties:\n        hex:\n          description: The compressed public key (33 bytes), hex-encoded.\n          type: string\n    Signature:\n      type: object\n      required:\n        - public_key\n        - bytes\n      properties:\n        public_key:\n          $ref: \"#/components/schemas/PublicKey\"\n        bytes:\n          description: An ECDSA signature of the payload to sign with the given `public_key`. The ECDSA signature should be created using the secp256k1 curve and should be encoded in DER format, and then encoded as a hex string.\n          type: string\n    TransactionFinalizeResponse:\n      type: object\n      required:\n        - transaction_identifier\n        - signed_transaction\n      properties:\n        signed_transaction:\n          description: The signed transaction payload which can be submitted, hex encoded.\n          type: string\n        transaction_identifier:\n          $ref: \"#/components/schemas/TransactionIdentifier\"\n    TransactionSubmitRequest:\n      type: object\n      required:\n        - network_identifier\n        - signed_transaction\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        signed_transaction:\n          description: The signed transaction payload which can be submitted, hex encoded.\n          type: string\n      example:\n        network_identifier:\n          network: mainnet\n        signed_transaction: 0d00010776bf65acf2d25e9dcf4c716f5f39f201dccbfa173ad9c7f1c1dbcb8a86776b4d0000000101002100000000000000000000000000000000000000000000000000012901c1cf3900000200450600040279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798010000000000000000000000000000000000000000000000017afba303493b7ff8000800000200450600040279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798010000000000000000000000000000000000000000000000017afba303493b7f9402004506000402c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5010000000000000000000000000000000000000000000000000000000000000064000c0034303030303663366636313634323037343635373337343639366536373230373437323631366537333631363337343639366636650b00cda0fcd31bf976aa65c31c180b4f595a61c866252c52898b952b8fe1d8fdcc33999e83036f9529c6250c07423d8b57f252dfba1b843385970bfa69f2c367658e\n    TransactionSubmitResponse:\n      type: object\n      required:\n        - transaction_identifier\n      properties:\n        transaction_identifier:\n          description: The transaction identifier of the submitted transaction.\n          $ref: \"#/components/schemas/TransactionIdentifier\"\n    GatewayRequest:\n      type: object\n      example: {}\n    GatewayResponse:\n      type: object\n      required:\n        - network_identifier\n        - gateway_api\n        - ledger_state\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        gateway_api:\n          $ref: \"#/components/schemas/GatewayApiVersions\"\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        target_ledger_state:\n          $ref: \"#/components/schemas/TargetLedgerState\"\n      example:\n        network_identifier:\n          network: mainnet\n        ledger_state:\n        target_ledger_state:\n    TokenRequest:\n      type: object\n      required:\n        - network_identifier\n        - token_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        token_identifier:\n          $ref: \"#/components/schemas/TokenIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n        token_identifier:\n          rri: hpyron_rr1qdukq6q534plnen70k95f80q45cktg0mhmzrzpfyz8jqmgqqqe\n    LedgerState:\n      description: |\n        The ledger state against which the response was generated. Can be used to detect if the Network Gateway is returning up-to-date information.\n      type: object\n      required:\n        - version\n        - timestamp\n        - epoch\n        - round\n      properties:\n        version:\n          description: The state version of the ledger. Each transaction increments the state version by 1.\n          type: integer\n          format: int64\n        timestamp:\n          description: |\n            The round timestamp of the consensus round when this transaction was committed to ledger. This is not guaranteed to be strictly increasing, as it is computed as an average across the validator set. If this is significantly behind the current timestamp, the Network Gateway is likely reporting out-dated information, or the network has stalled.\n          type: string\n        epoch:\n          description: The epoch number of the ledger at this state version.\n          type: integer\n          format: int64\n        round:\n          description: The consensus round in the epoch that this state version was committed in.\n          type: integer\n          format: int64\n    TargetLedgerState:\n      type: object\n      required:\n        - version\n      properties:\n        version:\n          description: |\n            The latest-seen state version of the tip of the network's ledger. If this is singificantly ahead of the current LedgerState version, the Network Gateway is possibly behind and may be reporting outdated information.\n          type: integer\n          format: int64\n    PartialLedgerStateIdentifier:\n      description: Optional. Allows a client to request a response referencing an earlier ledger state.\n      type: object\n      properties:\n        version:\n          description: If the version is provided, the latest ledger state \u003c= the given version is returned.\n          type: integer\n          format: int64\n        timestamp:\n          description: If a timestamp is provided, the latest ledger state \u003c= the given timestamp is returned.\n          type: string\n        epoch:\n          description: If an epoch is provided, the ledger state at the given epoch \u003c= the given round (else round 0) is returned.\n          type: integer\n          format: int64\n        round:\n          type: integer\n          format: int64\n    TokenResponse:\n      type: object\n      required:\n        - ledger_state\n        - token\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        token:\n          $ref: \"#/components/schemas/Token\"\n    TokenNativeRequest:\n      type: object\n      required:\n        - network_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n    TokenNativeResponse:\n      type: object\n      required:\n        - token\n        - ledger_state\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        token:\n          $ref: \"#/components/schemas/Token\"\n    TokenDeriveRequest:\n      type: object\n      required:\n        - network_identifier\n        - public_key\n        - symbol\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        public_key:\n          $ref: \"#/components/schemas/PublicKey\"\n        symbol:\n          type: string\n      example:\n        network_identifier:\n          network: mainnet\n        public_key:\n          hex: 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\n        symbol: yourtoken\n    TokenDeriveResponse:\n      type: object\n      required:\n        - token_identifier\n      properties:\n        token_identifier:\n          $ref: \"#/components/schemas/TokenIdentifier\"\n    AccountDeriveRequest:\n      type: object\n      required:\n        - network_identifier\n        - public_key\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        public_key:\n          $ref: \"#/components/schemas/PublicKey\"\n      example:\n        network_identifier:\n          network: mainnet\n        public_key:\n          hex: 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\n    AccountDeriveResponse:\n      type: object\n      required:\n        - account_identifier\n      properties:\n        account_identifier:\n          $ref: \"#/components/schemas/AccountIdentifier\"\n    ValidatorDeriveRequest:\n      type: object\n      required:\n        - network_identifier\n        - public_key\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        public_key:\n          $ref: \"#/components/schemas/PublicKey\"\n      example:\n        network_identifier:\n          network: mainnet\n        public_key:\n          hex: 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\n    ValidatorDeriveResponse:\n      type: object\n      required:\n        - account_identifier\n      properties:\n        account_identifier:\n          $ref: \"#/components/schemas/ValidatorIdentifier\"\n    TransactionStatusRequest:\n      type: object\n      required:\n        - network_identifier\n        - transaction_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        transaction_identifier:\n          $ref: \"#/components/schemas/TransactionIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n        transaction_identifier:\n          hash: ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842\n    TransactionStatusResponse:\n      type: object\n      required:\n        - ledger_state\n        - transaction\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        transaction:\n          $ref: \"#/components/schemas/TransactionInfo\"\n    ValidatorRequest:\n      type: object\n      required:\n        - network_identifier\n        - validator_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        validator_identifier:\n          $ref: \"#/components/schemas/ValidatorIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n        validator_identifier:\n          address: rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx\n    ValidatorResponse:\n      type: object\n      required:\n        - ledger_state\n        - validator\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        validator:\n          $ref: \"#/components/schemas/Validator\"\n    ValidatorsRequest:\n      type: object\n      required:\n        - network_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n      example:\n        network_identifier:\n          network: mainnet\n    ValidatorsResponse:\n      type: object\n      required:\n        - ledger_state\n        - validators\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        validators:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Validator\"\n    ValidatorStakesRequest:\n      type: object\n      required:\n        - network_identifier\n        - validator_identifier\n      properties:\n        network_identifier:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        at_state_identifier:\n          $ref: \"#/components/schemas/PartialLedgerStateIdentifier\"\n        validator_identifier:\n          $ref: \"#/components/schemas/ValidatorIdentifier\"\n        cursor:\n          description: This cursor allows forward pagination, by providing the cursor from the previous request.\n          type: string\n        limit:\n          description: The page size requested. The maximum value is 30 at present.\n          type: integer\n      example:\n        network_identifier:\n          network: mainnet\n        validator_identifier:\n          address: rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx\n    ValidatorStakesResponse:\n      type: object\n      required:\n        - ledger_state\n        - total_count\n        - account_stake_delegations\n      properties:\n        ledger_state:\n          $ref: \"#/components/schemas/LedgerState\"\n        total_count:\n          description: The total number of accounts delegating stake to the validator in some state.\n          type: integer\n          format: int64\n        next_cursor:\n          description: The cursor to be provided for the next page of results. If missing, this is the last page of results.\n          type: string\n        account_stake_delegations:\n          description: The page of account stake delegations.\n          type: array\n          items:\n            $ref: \"#/components/schemas/ValidatorAccountStake\"\n    ValidatorAccountStake:\n      type: object\n      required:\n        - account\n        - validator\n      properties:\n        account:\n          $ref: \"#/components/schemas/AccountIdentifier\"\n        validator:\n          $ref: \"#/components/schemas/ValidatorIdentifier\"\n        total_pending_stake:\n          $ref: \"#/components/schemas/TokenAmount\"\n          description: XRD which will become active as stake at the next epoch.\n        total_stake:\n          $ref: \"#/components/schemas/TokenAmount\"\n          description: XRD which is currently actively staked, and contributing to the validator's voting power.\n        total_pending_unstake:\n          $ref: \"#/components/schemas/TokenAmount\"\n          description: XRD which is currently actively staked, but will be moved to unstaking state at the next epoch.\n        total_unstaking:\n          $ref: \"#/components/schemas/TokenAmount\"\n          description: XRD which is currently in the unstaking state.\n    Validator:\n      type: object\n      required:\n        - validator_identifier\n        - stake\n        - info\n        - properties\n      properties:\n        validator_identifier:\n          \"$ref\": \"#/components/schemas/ValidatorIdentifier\"\n        stake:\n          description: The total XRD staked to the validator. Includes active stake and pending unstake. Excludes pending stake / locked unstake.\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n        info:\n          \"$ref\": \"#/components/schemas/ValidatorInfo\"\n        properties:\n          \"$ref\": \"#/components/schemas/ValidatorProperties\"\n      example:\n        validator_identifier:\n          address: rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx\n        stake:\n          token_identifier:\n            rri: xrd_rr1qy5wfsfh\n          value: '100000000000000000000'\n        properties:\n          url: https://learn.radixdlt.com/article/will-the-radix-foundation-operate-validator-nodes\n          validator_fee_percentage: 100\n          name: Radix Foundation eu-west-1 node0 mainnet\n          registered: true\n          owner_account_identifier:\n            address: rdx1qspldshtx0s2l2rcnaqtqpqz8vwps2y6d9se0wq25xrg92l66cmp6mcnc6pyu\n          external_stake_accepted: false\n        info:\n          owner_stake:\n            token_identifier:\n              rri: xrd_rr1qy5wfsfh\n            value: '0'\n          uptime:\n            epoch_range:\n              from: 1\n              to: 1\n            uptime_percentage: 100\n            proposals_missed: 0\n            proposals_completed: 108320\n    ValidatorProperties:\n      type: object\n      required:\n        - url\n        - validator_fee_percentage\n        - name\n        - registered\n        - owner_account_identifier\n        - external_stake_accepted\n      properties:\n        url:\n          type: string\n        validator_fee_percentage:\n          type: number\n          minimum: 0\n          maximum: 100\n        name:\n          type: string\n        registered:\n          type: boolean\n        owner_account_identifier:\n          \"$ref\": \"#/components/schemas/AccountIdentifier\"\n        external_stake_accepted:\n          type: boolean\n    ValidatorInfo:\n      type: object\n      required:\n        - owner_stake\n        - uptime\n      properties:\n        owner_stake:\n          description: The total stake delegated by the validator owner to the validator.\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n        uptime:\n          \"$ref\": \"#/components/schemas/ValidatorUptime\"\n    ValidatorUptime:\n      type: object\n      required:\n        - epoch_range\n        - uptime_percentage\n        - proposals_missed\n        - proposals_completed\n      properties:\n        epoch_range:\n          description: The epochs over which the below stats are calculated. This is up to 500 epochs.\n          \"$ref\": \"#/components/schemas/EpochRange\"\n        uptime_percentage:\n          description: The percentage of proposals completed, compared with the total of proposals completed/missed, in the given epoch range.\n          type: number\n          minimum: 0\n          maximum: 100\n        proposals_missed:\n          description: The number of proposals the validator failed to share with the network in time, in the given epoch range.\n          type: integer\n          format: int64\n          minimum: 0\n        proposals_completed:\n          description: The number of proposals the validator completed successfully, in the given epoch range.\n          type: integer\n          format: int64\n          minimum: 0\n    EpochRange:\n      type: object\n      required:\n        - from\n        - to\n      properties:\n        from:\n          description: The first epoch considered (inclusive).\n          type: integer\n          format: int64\n        to:\n          description: The last epoch considered (inclusive).\n          type: integer\n          format: int64\n    Token:\n      type: object\n      required:\n        - token_identifier\n        - token_supply\n        - info\n        - token_properties\n      properties:\n        token_identifier:\n          \"$ref\": \"#/components/schemas/TokenIdentifier\"\n        token_supply:\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n        info:\n          \"$ref\": \"#/components/schemas/TokenInfo\"\n        token_properties:\n          \"$ref\": \"#/components/schemas/TokenProperties\"\n      example:\n        token_identifier:\n          rri: xrd_rr1qy5wfsfh\n        token_supply:\n          token_identifier:\n            rri: xrd_rr1qy5wfsfh\n          value: '12014560679861300000000000000'\n        info:\n          total_burned:\n            token_identifier:\n              rri: xrd_rr1qy5wfsfh\n            value: '11437173800000000000000'\n          total_minted:\n            token_identifier:\n              rri: xrd_rr1qy5wfsfh\n            value: '12014572117035100000000000000'\n        token_properties:\n          icon_url: https://assets.radixdlt.com/icons/icon-xrd-32x32.png\n          is_supply_mutable: true\n          symbol: xrd\n          granularity: '1'\n          name: Radix\n          description: The Radix Public Network's native token, used to pay the network's\n            required transaction fees and to secure the network through staking to\n            its validator nodes.\n          url: https://tokens.radixdlt.com\n    TokenInfo:\n      type: object\n      required:\n        - total_minted\n        - total_burned\n      properties:\n        total_minted:\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n        total_burned:\n          \"$ref\": \"#/components/schemas/TokenAmount\"\n    TokenProperties:\n      type: object\n      required:\n        - symbol\n        - is_supply_mutable\n        - granularity\n        - name\n        - description\n        - url\n        - icon_url\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        icon_url:\n          type: string\n        url:\n          type: string\n        symbol:\n          type: string\n        is_supply_mutable:\n          description: If true, the token is allowed to be minted/burned by the owner.\n          type: boolean\n        granularity:\n          \"$ref\": \"#/components/schemas/BigInteger\"\n        owner:\n          \"$ref\": \"#/components/schemas/AccountIdentifier\"\n    TransactionInfo:\n      type: object\n      required:\n        - transaction_status\n        - transaction_identifier\n        - actions\n        - metadata\n        - fee_paid\n      properties:\n        transaction_status:\n          \"$ref\": \"#/components/schemas/TransactionStatus\"\n        transaction_identifier:\n          \"$ref\": \"#/components/schemas/TransactionIdentifier\"\n        actions:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Action\"\n        fee_paid:\n          $ref: \"#/components/schemas/TokenAmount\"\n        metadata:\n          \"$ref\": \"#/components/schemas/TransactionMetadata\"\n    TransactionStatus:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum:\n            - PENDING\n            - CONFIRMED\n            - FAILED\n        confirmed_time:\n          type: string\n        ledger_state_version:\n          type: integer\n          format: int64\n      example:\n        status: CONFIRMED\n        confirmed_time: \"2021-07-27T17:35:10.726Z\"\n    TransactionMetadata:\n      type: object\n      required:\n        - hex\n      properties:\n        hex:\n          description: The transaction payload, hex encoded.\n          type: string\n        message:\n          description: The message bytes, hex encoded.\n          type: string\n    TokenAmount:\n      type: object\n      required:\n        - value\n        - token_identifier\n      properties:\n        value:\n          \"$ref\": \"#/components/schemas/BigInteger\"\n        token_identifier:\n          \"$ref\": \"#/components/schemas/TokenIdentifier\"\n    BigInteger:\n      type: string\n      pattern: \"^-?[0-9]+$\"\n    GatewayApiVersions:\n      type: object\n      required:\n        - version\n        - open_api_schema_version\n      properties:\n        version:\n          description: The release that is currently deployed to the Gateway API.\n          type: string\n        open_api_schema_version:\n          description: The open api schema version that was used to generate the API models.\n          type: string\n    NetworkIdentifier:\n      type: object\n      required:\n        - network\n      properties:\n        network:\n          description: The name of the network against which the request is made.\n          type: string\n    AccountIdentifier:\n      type: object\n      required:\n        - address\n      properties:\n        address:\n          description: The radix address of the account.\n          type: string\n    ValidatorIdentifier:\n      type: object\n      required:\n        - address\n      properties:\n        address:\n          description: The radix address of the validator.\n          type: string\n    TokenIdentifier:\n      type: object\n      required:\n        - rri\n      properties:\n        rri:\n          description: The radix resource identifier of the token.\n          type: string\n    TransactionIdentifier:\n      type: object\n      required:\n        - hash\n      properties:\n        hash:\n          description: The transaction identifier hash.\n          type: string\n          pattern: \"^[0123456789abcdef]{64}$\"\n          maxLength: 64\n          minLength: 64\n    ErrorResponse:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          description: A numeric code corresponding to the given error type, roughly aligned with HTTP Status Code semantics (eg 400/404/500).\n          type: integer\n        message:\n          description: A human-readable error message.\n          type: string\n        details:\n          description: A structured/typed details object.\n          $ref: \"#/components/schemas/GatewayError\"\n        trace_id:\n          description: A GUID to be used when reporting errors, to allow correlation with the Gateway API's error logs.\n          type: string\n    GatewayError:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          description: The type of error. Each subtype may have its own additional structured fields.\n          type: string\n      discriminator:\n        propertyName: type\n        mapping:\n          NetworkNotSupportedError: \"#/components/schemas/NetworkNotSupportedError\"\n          InvalidSignatureError: \"#/components/schemas/InvalidSignatureError\"\n          InvalidTransactionError: \"#/components/schemas/InvalidTransactionError\"\n          InvalidTokenRRIError: \"#/components/schemas/InvalidTokenRRIError\"\n          InvalidAccountAddressError: \"#/components/schemas/InvalidAccountAddressError\"\n          InvalidValidatorAddressError: \"#/components/schemas/InvalidValidatorAddressError\"\n          InvalidPublicKeyError: \"#/components/schemas/InvalidPublicKeyError\"\n          InvalidTokenSymbolError: \"#/components/schemas/InvalidTokenSymbolError\"\n          InvalidActionError: \"#/components/schemas/InvalidActionError\"\n          TokenNotFoundError: \"#/components/schemas/TokenNotFoundError\"\n          TransactionNotFoundError: \"#/components/schemas/TransactionNotFoundError\"\n          NotEnoughNativeTokensForFeesError: \"#/components/schemas/NotEnoughNativeTokensForFeesError\"\n          NotEnoughTokensForTransferError: \"#/components/schemas/NotEnoughTokensForTransferError\"\n          NotEnoughTokensForStakeError: \"#/components/schemas/NotEnoughTokensForStakeError\"\n          NotEnoughTokensForUnstakeError: \"#/components/schemas/NotEnoughTokensForUnstakeError\"\n          BelowMinimumStakeError: \"#/components/schemas/BelowMinimumStakeError\"\n          CannotStakeError: \"#/components/schemas/CannotStakeError\"\n          MessageTooLongError: \"#/components/schemas/MessageTooLongError\"\n          CouldNotConstructFeesError: \"#/components/schemas/CouldNotConstructFeesError\"\n          InvalidRequestError: \"#/components/schemas/InvalidRequestError\"\n          NotSyncedUpError: \"#/components/schemas/NotSyncedUpError\"\n          InternalServerError: \"#/components/schemas/InternalServerError\"\n    InternalServerError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - exception\n            - cause\n          properties:\n            exception:\n              description: Gives an error type which occurred within the Gateway API when serving the request.\n              type: string\n            cause:\n              description: Gives a human readable message - likely just a trace ID for reporting the error.\n              type: string\n    NotSyncedUpError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - request_type\n            - current_sync_delay_seconds\n            - max_allowed_sync_delay_seconds\n          properties:\n            request_type:\n              description: The request type that triggered this exception.\n              type: string\n            current_sync_delay_seconds:\n              description: The current delay between the Gateway DB and the network ledger round timestamp.\n              type: integer\n              format: int64\n            max_allowed_sync_delay_seconds:\n              description: The maximum allowed delay between the Gateway DB and the network ledger round timestamp for this `request_type`.\n              type: integer\n              format: int64\n    InvalidRequestError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - validation_errors\n          properties:\n            validation_errors:\n              description: One or more validation errors which occurred when validating the request.\n              type: array\n              items:\n                $ref: \"#/components/schemas/ValidationErrorsAtPath\"\n    ValidationErrorsAtPath:\n      type: object\n      required:\n        - path\n        - errors\n      properties:\n        path:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n    NetworkNotSupportedError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - networks_supported\n          properties:\n            networks_supported:\n              description: The networks actually supported by the gateway - one of these needs to be used in the NetworkIdentifier of the request.\n              type: array\n              items:\n                type: string\n    InvalidActionError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_action\n          properties:\n            invalid_action:\n              description: The action which was invalid. The descriptive reason is in the main error message.\n              $ref: \"#/components/schemas/Action\"\n    InvalidSignatureError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_signature\n          properties:\n            invalid_signature:\n              description: The signature which was invalid. The descriptive reason is in the main error message.\n              $ref: \"#/components/schemas/Signature\"\n    InvalidTransactionError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_transaction\n            - message\n          properties:\n            invalid_transaction:\n              description: The transaction payload which was invalid.\n              type: string\n            message:\n              description: A descriptive reason for the invalid transaction.\n              type: string\n    NotEnoughNativeTokensForFeesError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - required_amount\n            - available_amount\n          properties:\n            required_amount:\n              description: The required amount of XRD for the fee.\n              $ref: \"#/components/schemas/TokenAmount\"\n            available_amount:\n              description: The available amount of XRD remaining at the point the fee was paid.\n              $ref: \"#/components/schemas/TokenAmount\"\n    NotEnoughTokensForTransferError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - requested_amount\n            - available_amount\n          properties:\n            requested_amount:\n              description: The requested amount of token to be transferred.\n              $ref: \"#/components/schemas/TokenAmount\"\n            available_amount:\n              description: The available amount of token remaining at the point the transfer action was attempted.\n              $ref: \"#/components/schemas/TokenAmount\"\n    NotEnoughTokensForStakeError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - requested_amount\n            - available_amount\n          properties:\n            requested_amount:\n              description: The requested amount of XRD to be staked.\n              $ref: \"#/components/schemas/TokenAmount\"\n            available_amount:\n              description: The available amount of XRD remaining at the point the stake action was attempted.\n              $ref: \"#/components/schemas/TokenAmount\"\n    NotEnoughTokensForUnstakeError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - requested_amount\n            - stake\n            - pending_stake\n          properties:\n            requested_amount:\n              description: The requested amount of XRD to be unstaked.\n              $ref: \"#/components/schemas/TokenAmount\"\n            stake:\n              description: The estimated amount of XRD that your delegated stake to this validator is worth at the point the stake action was attempted.\n              $ref: \"#/components/schemas/AccountStakeEntry\"\n            pending_stake:\n              description: The amount of XRD that you is waiting to be staked against this validator at the next epoch change, and cannot currently be unstaked.\n              $ref: \"#/components/schemas/AccountStakeEntry\"\n    BelowMinimumStakeError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - requested_amount\n            - minimum_amount\n          properties:\n            requested_amount:\n              description: The requested amount of XRD to be staked.\n              $ref: \"#/components/schemas/TokenAmount\"\n            minimum_amount:\n              description: The minimum amount of XRD you can stake.\n              $ref: \"#/components/schemas/TokenAmount\"\n    CannotStakeError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - owner\n            - user\n          properties:\n            owner:\n              description: The owner of the validator - if the validator has delegated stake disabled, only this account may stake.\n              $ref: \"#/components/schemas/AccountIdentifier\"\n            user:\n              description: The user who attempted to stake to the validator.\n              $ref: \"#/components/schemas/AccountIdentifier\"\n    MessageTooLongError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - length_limit\n            - attempted_length\n          properties:\n            length_limit:\n              description: The maximum byte length of the message, as per current transaction rules.\n              type: integer\n            attempted_length:\n              description: The byte length of the message in the transaction.\n              type: integer\n    CouldNotConstructFeesError:\n      allOf:\n        - \"$ref\": \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - attempts\n          properties:\n            attempts:\n              description: The number of attempts the system tried and failed to create a consistent transaction fee.\n              type: integer\n    InvalidPublicKeyError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_public_key\n          properties:\n            invalid_public_key:\n              description: The public key which was invalid. A descriptive reason is given in the main error message.\n              type: string\n    InvalidTokenSymbolError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_token_symbol\n          properties:\n            invalid_token_symbol:\n              description: The token symbol which was invalid. A descriptive reason is given in the main error message.\n              type: string\n    InvalidTokenRRIError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_rri\n          properties:\n            invalid_rri:\n              description: The token rri which was invalid. A descriptive reason is given in the main error message.\n              type: string\n    InvalidAccountAddressError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_account_address\n          properties:\n            invalid_account_address:\n              description: The account address which was invalid. A descriptive reason is given in the main error message.\n              type: string\n    InvalidValidatorAddressError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - invalid_validator_address\n          properties:\n            invalid_account_address:\n              description: The validator address which was invalid. A descriptive reason is given in the main error message.\n              type: string\n    TokenNotFoundError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - token_not_found\n          properties:\n            token_not_found:\n              description: The token rri which was not found.\n              $ref: \"#/components/schemas/TokenIdentifier\"\n    TransactionNotFoundError:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayError\"\n        - type: object\n          required:\n            - transaction_not_found\n          properties:\n            transaction_not_found:\n              description: The transaction identifier which was not found.\n              $ref: \"#/components/schemas/TransactionIdentifier\"\n",
			"canonicalURL": "/github.com/radixdlt/radixdlt-network-gateway@5c22fc7d28bf632fd05228f4e286ae2ff65cf983/-/blob/gateway-api-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/radixdlt/radixdlt-network-gateway/blob/5c22fc7d28bf632fd05228f4e286ae2ff65cf983/gateway-api-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}