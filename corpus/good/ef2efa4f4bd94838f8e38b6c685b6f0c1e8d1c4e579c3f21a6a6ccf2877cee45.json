{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/optim-corp/cios-golang-sdk"
		},
		"file": {
			"name": "collection-component.openapi.yml",
			"size": 0,
			"path": "openapi/components/collection-component.openapi.yml",
			"byteSize": 19478,
			"content": "openapi: 3.0.3\ninfo:\n  title: Collection Component\n  description: Component\n  version: 1.0.0\n\npaths: {}\n\ncomponents:\n  schemas:\n    CollectionLatestRequest:\n      required:\n        - resource_owner_id\n      type: object\n      properties:\n        resource_owner_id:\n          type: string\n          format: uuid\n        limit:\n          type: integer\n          format: int64\n        offset:\n          type: integer\n          format: int64\n        projection:\n          type: string\n          default: data\n          enum: [ data, thumbnail, image ]\n    CollectionLatest:\n      type: object\n      properties:\n        resource_owner_id:\n          type: string\n        location:\n          $ref: '#/components/schemas/CollectionLocation'\n        measurements:\n          type: object\n        series_id:\n          type: string\n        timestamp:\n          type: string\n        image:\n          type: string\n        image_type:\n          type: string\n          enum: [ jpeg, png ]\n    CollectionLocation:\n      type: object\n      required:\n        - coordinates\n        - type\n      properties:\n        type:\n          type: string\n          enum: [ Point ]\n          default: Point\n        coordinates:\n          type: array\n          items:\n#            anyOf:\n#              - description: 経度\n#                example: 138.5\n#                format: double\n#                maximum: 180\n#                minimum: -180\n#              - description: 緯度\n#                example: 48.2\n#                format: double\n#                maximum: 90\n#                minimum: -90\n#              - description: 高度\n#                example: 12.3\n#                format: double\n            type: number\n          maxItems: 3\n          minItems: 2\n    CollectionStatus:\n      example:\n        status: READY\n        properties:\n          status:\n            description: |-\n              状態\n\n              アーカイブ・リストア状態:\n\n              | 状態 | 内容 | 遷移理由 | 使用可能なAPI |\n              | :-- | :-- | :-- | :-- |\n              | READY | 正常 | 指定されたresource_owner_idの時系列データに対しアーカイブ操作が加えられていない、もしくはリストアが正常終了した。 | Restore 以外 |\n              | ARCHIVED | アーカイブ済み | 指定されたresource_owner_idの時系列データに対しアーカイブ操作が加えられ正常終了した。 | Restore |\n              |ARCHIVING|アーカイブ実施中|指定されたresource_owner_idの時系列データに対しアーカイブ操作が加えられ、アーカイブ実行中|-|\n              |ARCHIVE_ERROR|アーカイブ失敗|アーカイブ実行に失敗|Archive|\n              |RESTORING|リストア実施中|アーカイブされた時系列データに対しリストア操作が加えられ、リストア実行中|-|\n              |RESTORE_ERROR|リストア失敗|リストア実行に失敗|Restore|\n            enum:\n              - READY\n              - ARCHIVING\n              - ARCHIVE_ERROR\n              - ARCHIVED\n              - RESTORING\n              - RESTORE_ERROR\n            example: READY\n            type: string\n        required:\n          - status\n        type: object\n    MultipleCollectionLatest:\n      type: object\n      required:\n        - total\n        - data\n      properties:\n        total:\n          type: integer\n          format: int64\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CollectionLatest'\n        image_map:\n          type: object\n    MultipleSeriesDataLocationUnix:\n      type: object\n      required:\n        - data\n        - total\n      properties:\n        total:\n          description: 検索条件にマッチする全結果数\n          example: 1\n          format: int64\n          type: integer\n        data:\n          description: 時系列データ配列。データが0件の場合は空配列。\n          items:\n            $ref: '#/components/schemas/SeriesDataLocationUnix'\n          nullable: true\n          type: array\n    MultipleSeriesImage:\n      type: object\n      properties:\n        total:\n          description: 検索条件にマッチする全結果数\n          example: 1\n          format: int64\n          type: integer\n        data:\n          description: 画像データとタイムスタンプの配列。データが0件の場合は空配列。\n          items:\n            $ref: '#/components/schemas/SeriesImage'\n          type: array\n        image_map:\n          additionalProperties:\n            description: キーに対応する画像のindex\n            minimum: 0\n            type: integer\n          description: timestampがキーとなってdataのindexが格納されているhashmap\n          type: object\n      required:\n        - data\n        - image_map\n        - total\n    SeriesAggregationRequest:\n      type: object\n#      anyOf:\n#        - description: integer型の計測値の集計方法を指定する\n#          properties:\n#            target:\n#              description: コレクションに定義されているinteger型の計測値のプロパティをjsonpathで指定する\n#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$\n#              type: string\n#            method:\n#              description: |-\n#                計測値をintervalごとに集計する方法として、以下からいずれかの値を指定する\n#\n#                |値|集約方法|\n#                |---|---|\n#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|\n#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|\n#                |average|単位時間(interval)ごとに区切り、平均値を算出する。レスポンスは64bit浮動小数点数となる。値がnullのデータは集計に使用しない。|\n#                |max|単位時間(interval)ごとに区切り、最大値を使用する。値がnullのデータは集計に使用しない。|\n#                |min|単位時間(interval)ごとに区切り、最小値を使用する。値がnullのデータは集計に使用しない。|\n#                |sum|単位時間(interval)ごとに区切り、合計値を算出する。64bit整数の範囲を超えた場合は、64bit整数の最大値/最小値に丸められる。値がnullのデータは集計に使用しない。|\n#              enum:\n#                - first\n#                - last\n#                - average\n#                - max\n#                - min\n#                - sum\n#              type: string\n#          required:\n#            - method\n#            - target\n#          title: Aggregation(Integer)\n#          type: object\n#        - description: number型の計測値の集計方法を指定する\n#          properties:\n#            target:\n#              description: コレクションに定義されているnumber型の計測値のプロパティをjsonpathで指定する\n#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$\n#              type: string\n#            method:\n#              description: |-\n#                計測値をintervalごとに集約する方法として、以下からいずれかの値を指定する\n#\n#                |値|集約方法|\n#                |---|---|\n#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|\n#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|\n#                |average|単位時間(interval)ごとに区切り、平均値を算出する。値がnullのデータは集計に使用しない。|\n#                |max|単位時間(interval)ごとに区切り、最大値を使用する。値がnullのデータは集計に使用しない。|\n#                |min|単位時間(interval)ごとに区切り、最小値を使用する。値がnullのデータは集計に使用しない。|\n#                |sum|単位時間(interval)ごとに区切り、合計値を算出する。64bit浮動小数点数の範囲を超えた場合は、64bit浮動小数点数の最大値/最小値に丸められる。値がnullのデータは集計に使用しない。|\n#              enum:\n#                - first\n#                - last\n#                - average\n#                - max\n#                - min\n#                - sum\n#              type: string\n#          required:\n#            - method\n#            - target\n#          title: Aggregation(Number)\n#          type: object\n#        - description: string型の計測値の集計方法を指定する\n#          properties:\n#            target:\n#              description: コレクションに定義されているstring型の計測値のプロパティをjsonpathで指定する\n#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$\n#              type: string\n#            method:\n#              description: |-\n#                計測値をintervalごとに集約する方法として、以下からいずれかの値を指定する\n#\n#                |値|集約方法|\n#                |---|---|\n#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|\n#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|\n#              enum:\n#                - first\n#                - last\n#              type: string\n#          required:\n#            - method\n#            - target\n#          title: Aggregation(String)\n#          type: object\n#        - description: boolean型の計測値の集計方法を指定する\n#          properties:\n#            target:\n#              description: コレクションに定義されているboolean型の計測値のプロパティをjsonpathで指定する\n#              pattern: ^$.measurements.[a-zA-Z][a-zA-Z0-9_]{1,34}[a-zA-Z]$\n#              type: string\n#            method:\n#              description: |-\n#                位置情報をintervalごとに集約する方法として、以下からいずれかの値を指定する\n#\n#                |値|集約方法|\n#                |---|---|\n#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。先頭がnullの場合はnullとなる。|\n#                |last|単位時間(interval)ごとに区切り、末尾の値を使用する。末尾がnullの場合はnullとなる。|\n#              enum:\n#                - first\n#                - last\n#              type: string\n#          required:\n#            - method\n#            - target\n#          title: Aggregation(Boolean)\n#          type: object\n#        - description: 位置情報の集計方法を指定する\n#          properties:\n#            target:\n#              description: $.locationを指定する\n#              example: $.location\n#              pattern: ^\\$\\.location$\n#              type: string\n#            method:\n#              description: |-\n#                値をintervalごとに集約する方法として、以下からいずれかの値を指定する\n#\n#                |値|集約方法|\n#                |---|---|\n#                |first|単位時間(interval)ごとに区切り、先頭の値を使用する。データが存在しないintervalはnullとなる。|\n#                |last|単位時間(interval)ごとに区切り、先頭の値を使用する。データが存在しないintervalはnullとなる。|\n#              enum:\n#                - first\n#                - last\n#              type: string\n#          required:\n#            - method\n#            - target\n#          title: Aggregation(Location)\n#          type: object\n    SeriesRequest:\n      type: object\n      required:\n        - series_id\n        - timestamp\n      properties:\n        location:\n          $ref: '#/components/schemas/CollectionLocation'\n        measurements:\n          type: object\n          additionalProperties: true\n        series_id:\n          type: string\n          pattern: ^[a-zA-Z0-9]{1,10}:[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{1,34}[a-zA-Z0-9]{1}$\n        timestamp:\n          type: integer\n          format: int64\n    SeriesBulkRequest:\n      type: object\n      required:\n        - data\n        - series_id\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/SeriesRequest'\n    SeriesDataBulkRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          maxItems: 36000\n          description: 時系列データの配列、配列の長さ上限 36000\n          items:\n            $ref: '#/components/schemas/SeriesDataLocationUnix'\n      required:\n        - data\n    SeriesDataRequest:\n      type: object\n      properties:\n        location:\n          $ref: '#/components/schemas/SeriesDataLocation'\n        measurements:\n          type: object\n          additionalProperties: true\n          description: |-\n            計測値。送信可能なプロパティはcollectionによって異なる。\n            collectionごとの定義は[Available Collections](./docs/available-collections.html)を参照。\n\n            以下の場合はリクエスト不正となる。\n            - collectionに定義されていないプロパティがmeasurementsに含まれる場合\n            - measurementsのJSON Objectのサイズが350KB以上の場合\n    SeriesImage:\n      example:\n        image: /9j/4AAQSkZJRgABAQEAYwBjAAD/4QBaRXhpZgAA...\n        timestamp: '{}'\n        image_type: jpeg\n      properties:\n        timestamp:\n          type: string\n        image:\n          description: base64エンコードされた画像データ\n          example: /9j/4AAQSkZJRgABAQEAYwBjAAD/4QBaRXhpZgAA...\n          type: string\n        image_type:\n          description: 画像データのフォーマット\n          enum:\n            - jpeg\n            - png\n          example: jpeg\n          type: string\n      required:\n        - image\n        - image_type\n        - timestamp\n      type: object\n    SeriesDataLocationUnix:\n      type: object\n      properties:\n        location:\n          $ref: '#/components/schemas/SeriesDataLocation'\n        measurements:\n          type: object\n          additionalProperties: true\n          description: |-\n            計測値。送信可能なプロパティはcollectionによって異なる。\n            collectionごとの定義は[Available Collections](./docs/available-collections.html)を参照。\n\n            以下の場合はリクエスト不正となる。\n            - collectionに定義されていないプロパティがmeasurementsに含まれる場合\n            - measurementsのJSON Objectのサイズが350KB以上の場合\n        timestamp:\n          type: string\n    SeriesDataLocation:\n      description: デバイス位置情報。コレクションの定義に依存。schema.location_typeが”POINT“の場合必須、”NONE”の場合はlocationをリクエストに含めることはできない\n      example:\n        type: Point\n        coordinates:\n          - 138.5\n          - 48.2\n      nullable: true\n      properties:\n        type:\n          description: Point固定\n          enum:\n            - Point\n          example: Point\n          type: string\n        coordinates:\n          type: array\n          items:\n            type: number\n      required:\n        - coordinates\n        - type\n      type: object\n    SeriesAggregations:\n      type: object\n      properties:\n        intervals:\n          description: intervalの開始時刻の配列\n          items:\n            description: intervalの開始時刻。UNIXタイム(ミリ秒)\n            example: 1594282220566\n            format: int64\n            maximum: 253402300799999\n            type: integer\n          type: array\n        total_counts:\n          description: intervalごとの時系列データ件数の配列\n          items:\n            description: intervalごとの時系列データ件数\n            example: 10\n            format: int64\n            minimum: 0\n            type: integer\n          type: array\n        aggregations:\n          description: 集計結果の配列。リクエストで指定された集計対象・集計方法の順で並んでいる\n          items: {}\n#            $ref: '#/components/schemas/SeriesAggregation'\n          maxItems: 10\n          type: array\n      required:\n        - intervals\n        - total_counts\n    SeriesAggregation:\n      type: object\n      properties:\n        target:\n          description: リクエストボディで指定された集計対象項目\n          example: $.measurements.speed\n          type: string\n        method:\n          description: リクエストボディで指定された集計方法\n          enum:\n            - first\n            - last\n            - average\n            - max\n            - min\n            - sum\n          example: average\n          type: string\n        counts:\n          description: intervalごとの集計対象項目が有効だったデータ件数の配列\n          items:\n            description: intervalごとの集計対象項目が有効だったデータ件数\n            example: 8\n            format: int64\n            minimum: 0\n            type: integer\n          type: array\n        values:\n          description: intervalごとの集計結果の配列\n          type: array\n\n      #          items:\n##            anyOf:\n##              - description: integer型の計測値の集計結果\n##                type: integer\n##              - description: number型の計測値の集計結果\n##                type: number\n##              - description: string型の計測値の集計結果\n##                type: string\n##              - description: boolean型の計測値の集計結果\n##                type: boolean\n##              - description: 位置情報の集計結果\n##                items:\n##                  anyOf:\n##                    - description: 経度\n##                      example: 138.5\n##                      format: double\n##                      maximum: 180\n##                      minimum: -180\n##                    - description: 緯度\n##                      example: 48.2\n##                      format: double\n##                      maximum: 90\n##                      minimum: -90\n##                    - description: 高度\n##                      example: 12.3\n##                      format: double\n##                  type: number\n#                maxItems: 3\n#                minItems: 2\n#                title: Coordinate\n#                type: array\n      required:\n        - counts\n        - method\n        - target\n        - values\n    RecordedDates:\n      type: object\n      properties:\n        dates:\n          description: データが存在する日付のリスト Ex.[1, 20, 22, 23]\n          items:\n            description: 該当するデータ\n            example: 11\n            format: int64\n            maximum: 31\n            minimum: 1\n            type: integer\n          maxItems: 31\n          type: array\n          uniqueItems: true\n      required:\n        - dates\n",
			"canonicalURL": "/github.com/optim-corp/cios-golang-sdk@f6525e73ff22e7800c24b994a7479e4e148e35b7/-/blob/openapi/components/collection-component.openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/optim-corp/cios-golang-sdk/blob/f6525e73ff22e7800c24b994a7479e4e148e35b7/openapi/components/collection-component.openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}