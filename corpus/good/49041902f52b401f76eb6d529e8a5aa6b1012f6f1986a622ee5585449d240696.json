{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anttiviljami/openapi-client-axios"
		},
		"file": {
			"name": "example-pet-api.openapi.json",
			"size": 0,
			"path": "packages/openapi-client-axios/src/__tests__/resources/example-pet-api.openapi.json",
			"byteSize": 8494,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Example API\",\n    \"description\": \"Example CRUD API for pets\",\n    \"version\": \"1.0.0\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"pets\",\n      \"description\": \"Pet operations\"\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:8080\"\n    }\n  ],\n  \"paths\": {\n    \"/pets\": {\n      \"get\": {\n        \"operationId\": \"getPets\",\n        \"summary\": \"List pets\",\n        \"description\": \"Returns all pets in database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of pets in database\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Number of items to return\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/QueryLimit\"\n            }\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Starting offset for returning items\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/QueryOffset\"\n            }\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createPet\",\n        \"summary\": \"Create a pet\",\n        \"description\": \"Crete a new pet into the database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Pet created succesfully\"\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/PetPayload\"\n        }\n      }\n    },\n    \"/pets/{id}\": {\n      \"get\": {\n        \"operationId\": \"getPetById\",\n        \"summary\": \"Get a pet\",\n        \"description\": \"Returns a pet by its id in database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Pet object corresponding to id\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier for pet in database\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetId\"\n            }\n          }\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"replacePetById\",\n        \"summary\": \"Replace pet\",\n        \"description\": \"Replace an existing pet in the database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Pet replaced succesfully\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier for pet in database\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetId\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/PetPayload\"\n        }\n      },\n      \"patch\": {\n        \"operationId\": \"updatePetById\",\n        \"summary\": \"Update pet\",\n        \"description\": \"Update an existing pet in the database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Pet updated succesfully\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier for pet in database\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetId\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/PetPayload\"\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"deletePetById\",\n        \"summary\": \"Delete a pet\",\n        \"description\": \"Deletes a pet by its id in database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Pet deleted succesfully\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier for pet in database\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetId\"\n            }\n          }\n        ]\n      }\n    },\n    \"/pets/{id}/owner\": {\n      \"get\": {\n        \"operationId\": \"getOwnerByPetId\",\n        \"summary\": \"Get a pet's owner\",\n        \"description\": \"Get the owner for a pet\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Human corresponding pet id\"\n          },\n          \"404\": {\n            \"description\": \"Human or pet not found\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier for pet in database\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetId\"\n            }\n          }\n        ]\n      }\n    },\n    \"/pets/{petId}/owner/{ownerId}\": {\n      \"get\": {\n        \"operationId\": \"getPetOwner\",\n        \"summary\": \"Get owner by id\",\n        \"description\": \"Get the owner for a pet\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier for pet in database\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetId\"\n            }\n          },\n          {\n            \"name\": \"ownerId\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier for owner in database\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetId\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Human corresponding owner id\"\n          },\n          \"404\": {\n            \"description\": \"Human or pet not found\"\n          }\n        }\n      }\n    },\n    \"/pets/meta\": {\n      \"get\": {\n        \"operationId\": \"getPetsMeta\",\n        \"summary\": \"Get pet metadata\",\n        \"description\": \"Returns a list of metadata about pets and their relations in the database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Metadata for pets\"\n          }\n        }\n      }\n    },\n    \"/pets/relative\": {\n      \"servers\": [\n        {\n          \"url\": \"baseURLV2\"\n        }\n      ],\n      \"get\": {\n        \"operationId\": \"getPetsRelative\",\n        \"summary\": \"Get pet metadata\",\n        \"description\": \"Returns a list of metadata about pets and their relations in the database\",\n        \"tags\": [\n          \"pets\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Metadata for pets\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"PetId\": {\n        \"description\": \"Unique identifier for pet in database\",\n        \"example\": 1,\n        \"title\": \"PetId\",\n        \"type\": \"integer\"\n      },\n      \"PetPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"Name of the pet\",\n            \"example\": \"Garfield\",\n            \"title\": \"PetName\",\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"QueryLimit\": {\n        \"description\": \"Number of items to return\",\n        \"example\": 25,\n        \"title\": \"QueryLimit\",\n        \"type\": \"integer\"\n      },\n      \"QueryOffset\": {\n        \"description\": \"Starting offset for returning items\",\n        \"example\": 0,\n        \"title\": \"QueryOffset\",\n        \"type\": \"integer\",\n        \"minimum\": 0\n      }\n    },\n    \"requestBodies\": {\n      \"PetPayload\": {\n        \"description\": \"Request payload containing a pet object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PetPayload\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/anttiviljami/openapi-client-axios@ba595848a5dffeabdcfdabb9d86118fd05024c6c/-/blob/packages/openapi-client-axios/src/__tests__/resources/example-pet-api.openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/anttiviljami/openapi-client-axios/blob/ba595848a5dffeabdcfdabb9d86118fd05024c6c/packages/openapi-client-axios/src/__tests__/resources/example-pet-api.openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}