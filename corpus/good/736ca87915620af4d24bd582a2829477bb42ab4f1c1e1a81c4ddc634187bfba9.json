{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "troubleTicketNotification.api.yaml",
			"size": 0,
			"path": "productApi/troubleTicket/troubleTicketNotification.api.yaml",
			"byteSize": 24270,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    **This file forms part of MEF W124**\n\n    This API implements Business Requirements described in MEF W113\n\n    **This specification represents MEF work in progress and is subject to\n    change.** \n\n    It allows the Buyer to create, retrieve, and update Trouble Tickets as well\n    as receive notifications about Incidents' and Trouble Tickets' updates.\n    This allows managing issues and situations that are not part of normal\n    operations of the Product provided by the Seller.\n\n    List of supported use cases:\n    - Send Ticket Notification\n    - Send Incident Notification\n\n    Copyright 2021 MEF Forum and its contributors\n\n    This file includes content based on the TM Forum Trouble Ticket API (TMF621\n    v4.0.0) available at https://github.com/tmforum-apis/TMF621_TroubleTicket,\n    which is licensed by the TM Forum under the Apache License version 2.0. Such\n    content has been modified by the MEF Forum and its contributors.\n  title: Trouble Ticket Notification\n  version: 2.0.0-RC\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/troubleTicket/v2/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Buyer's URL.\ntags:\n  - description: |\n      The Buyer's endpoint to send particular event types notifications to.\n    name: Notification listeners\npaths:\n  /listener/troubleTicketAttributeValueChangeEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        TroubleTicketAttributeValueChangeEvent\n      operationId: listenToTroubleTicketAttributeValueChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/TroubleTicketEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary:\n        Client listener for entity TroubleTicketAttributeValueChangeEvent\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/troubleTicketStatusChangeEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        TroubleTicketStatusChangeEvent\n      operationId: listenToTroubleTicketStatusChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/TroubleTicketEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Client listener for entity TroubleTicketStatusChangeEvent\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/troubleTicketResolvedEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        TroubleTicketResolvedEvent\n      operationId: listenToTroubleTicketResolvedEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/TroubleTicketEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Client listener for entity TroubleTicketResolvedEvent\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/troubleTicketInformationRequiredEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        TroubleTicketInformationRequiredEvent\n      operationId: listenToTroubleTicketInformationRequiredEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/TroubleTicketEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Client listener for entity TroubleTicketInformationRequiredEvent\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/incidentCreatedEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        Incident Created Event\n      operationId: listenToIncidentCreatedEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/IncidentEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Client listener for entity Incident Created Event\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/incidentAttributeValueChangeEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        Incident Attribute Value Change Event\n      operationId: listenToIncidentAttributeValueChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/IncidentEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Client listener for entity Incident Attribute Value Change Event\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/incidentClosedEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        Incident Closed Event\n      operationId: listenToIncidentClosedEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/IncidentEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Client listener for entity Incident Closed Event\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/incidentStatusChangeEvent:\n    post:\n      description: \u003e-\n        Client listener for receiving the notification\n        Incident Status Change Event\n      operationId: listenToIncidentStatusChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/IncidentEvent'\n        description: The event data\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '408':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error408'\n          description: Request Time-out\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Client listener for entity Incident Status Change Event\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\ncomponents:\n  schemas:\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error\n\n        Not intended to be use directly. The `code` in the HTTP header is used\n        as a discriminator for the type of error returned in runtime.\n      properties:\n        reason:\n          description: \u003e-\n            Text that explains the reason for error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        message:\n          description: \u003e-\n            Text that provide mode details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: url pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingQueryParameter: The URI is missing a required\n                query-string parameter\n\n                - missingQueryValue: The URI is missing a required query-string\n                parameter value\n\n                - invalidQuery: The query section of the URI is invalid.\n\n                - invalidBody: The request has an invalid body\n              $ref: '#/components/schemas/Error400Code'\n          required:\n            - code\n          type: object\n      description:\n        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingCredentials: No credentials provided.\n\n                - invalidCredentials: Provided credentials are invalid or\n                expired\n              $ref: '#/components/schemas/Error401Code'\n          required:\n            - code\n          type: object\n      description:\n        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                This code indicates that the server understood\n                the request but refuses to authorize it because\n                of one of the following error codes:\n                - accessDenied: Access denied\n                - forbiddenRequester: Forbidden requester\n                - tooManyUsers: Too many users\n              $ref: '#/components/schemas/Error403Code'\n          required:\n            - code\n          type: object\n      description:\n        'Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)'\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error408:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                List of supported error codes:\n\n                - timeOut: Request Time-out - indicates that the server did not\n                receive a complete request message within the time that it was\n                prepared to wait.\n              enum:\n                - timeOut\n              type: string\n          required:\n            - code\n          type: object\n      description:\n        'Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)'\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Event:\n      description: \u003e-\n        Event class is used to describe information structure used for\n        notification.\n      properties:\n        eventId:\n          description: Id of the event\n          type: string\n        eventTime:\n          description: Datetime when the event occurred\n          format: date-time\n          type: string\n      required:\n        - event\n        - eventId\n        - eventTime\n        - eventType\n      type: object\n    IncidentEvent:\n      allOf:\n        - $ref: '#/components/schemas/Event'\n        - properties:\n            eventType:\n              description: |\n                Indicates the type of the event.\n              $ref: \u003e-\n                #/components/schemas/IncidentEventType\n            event:\n              description: |\n                A reference to the object that is source of the notification.\n              $ref: \u003e-\n                #/components/schemas/IncidentEventPayload\n          required:\n            - event\n            - eventType\n          type: object\n    IncidentEventPayload:\n      description:\n        The identifier of the Incident being subject of this event.\n      properties:\n        sellerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when requester entity\n            represents more than one Seller.\n          type: string\n        id:\n          description: ID of the Incident attributed by quoting system\n          type: string\n        href:\n          description: Hyperlink to access the Incident\n          type: string\n        buyerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the responding\n            represents more than one Buyer.\n          type: string\n      required:\n        - id\n      type: object\n    IncidentEventType:\n      description: Type of the Incident Event\n      enum:\n        - incidentCreatedEvent\n        - incidentAttributeValueChangeEvent\n        - incidentClosedEvent\n        - incidentStatusChangeEvent\n      type: string\n    TroubleTicketEvent:\n      allOf:\n        - $ref: '#/components/schemas/Event'\n        - properties:\n            eventType:\n              description: |\n                Indicates the type of the event.\n              $ref: \u003e-\n                #/components/schemas/TroubleTicketEventType\n            event:\n              description: |\n                A reference to the object that is source of the notification.\n              $ref: \u003e-\n                #/components/schemas/TroubleTicketEventPayload\n          required:\n            - event\n            - eventType\n          type: object\n    TroubleTicketEventPayload:\n      description:\n        The identifier of the Trouble Ticket being subject of this event.\n      properties:\n        sellerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when requester entity\n            represents more than one Seller.\n          type: string\n        id:\n          description: ID of the Trouble Ticket attributed by quoting system\n          type: string\n        href:\n          description: Hyperlink to access the Trouble Ticket\n          type: string\n        buyerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the responding\n            represents more than one Buyer.\n          type: string\n      required:\n        - id\n      type: object\n    TroubleTicketEventType:\n      description: Type of the Trouble Ticket Event\n      enum:\n        - troubleTicketAttributeValueChangeEvent\n        - troubleTicketInformationRequiredEvent\n        - troubleTicketResolvedEvent\n        - troubleTicketStatusChangeEvent\n      type: string",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/productApi/troubleTicket/troubleTicketNotification.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/productApi/troubleTicket/troubleTicketNotification.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}