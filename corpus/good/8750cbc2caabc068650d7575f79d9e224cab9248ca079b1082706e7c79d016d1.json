{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CustomerProductsandServices.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CustomerProductsandServices.yaml",
			"byteSize": 26660,
			"content": "openapi: 3.0.1\ninfo:\n  title: Customer Products and Services\n  description: This Service Domain maintains the most important details of all the products and services that a customer has acquired from the bank.\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CustomerProductsandServices/10.0.0\npaths:\n  /CustomerProductsandServices/{customerproductsandservicesId}/Control:\n    put:\n      tags:\n      - CR - CustomerProductsAndServicesDirectoryEntry\n      summary: Control Customer Products And Services Directory Entry\n      description: Control Customer Products And Services Directory Entry\n      operationId: Control\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerProductsAndServicesDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/Execute:\n    put:\n      tags:\n      - CR - CustomerProductsAndServicesDirectoryEntry\n      summary: Execute Customer Products And Services Directory Entry\n      description: Execute Customer Products And Services Directory Entry\n      operationId: Execute\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerProductsAndServicesDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/Notify:\n    get:\n      tags:\n      - CR - CustomerProductsAndServicesDirectoryEntry\n      summary: Notify Customer Products And Services Directory Entry\n      description: Notify Customer Products And Services Directory Entry\n      operationId: Notify\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/Register:\n    post:\n      tags:\n      - CR - CustomerProductsAndServicesDirectoryEntry\n      summary: Register Customer Products And Services Directory Entry\n      description: Register Customer Products And Services Directory Entry\n      operationId: Register\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerProductsAndServicesDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/Request:\n    put:\n      tags:\n      - CR - CustomerProductsAndServicesDirectoryEntry\n      summary: Request Customer Products And Services Directory Entry\n      description: Request Customer Products And Services Directory Entry\n      operationId: Request\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerProductsAndServicesDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/Retrieve:\n    get:\n      tags:\n      - CR - CustomerProductsAndServicesDirectoryEntry\n      summary: Retrieve Customer Products And Services Directory Entry\n      description: Retrieve Customer Products And Services Directory Entry\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/Update:\n    put:\n      tags:\n      - CR - CustomerProductsAndServicesDirectoryEntry\n      summary: Update Customer Products And Services Directory Entry\n      description: Update Customer Products And Services Directory Entry\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerProductsAndServicesDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Execute:\n    put:\n      tags:\n      - BQ - In-forceProductproperty\n      summary: Execute In-force Product property\n      description: Execute In-force Product property\n      operationId: ExecuteIn-forceProductproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceProductpropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceProductproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceProductproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Execute:\n    put:\n      tags:\n      - BQ - In-forceServiceproperty\n      summary: Execute In-force Service property\n      description: Execute In-force Service property\n      operationId: ExecuteIn-forceServiceproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceServicepropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceServiceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceServiceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Notify:\n    get:\n      tags:\n      - BQ - In-forceProductproperty\n      summary: Notify In-force Product property\n      description: Notify In-force Product property\n      operationId: NotifyIn-forceProductproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceProductpropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceProductproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Notify:\n    get:\n      tags:\n      - BQ - In-forceServiceproperty\n      summary: Notify In-force Service property\n      description: Notify In-force Service property\n      operationId: NotifyIn-forceServiceproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceServicepropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceServiceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/Register:\n    post:\n      tags:\n      - BQ - In-forceProductproperty\n      summary: Register In-force Product property\n      description: Register In-force Product property\n      operationId: RegisterIn-forceProductproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceProductproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceProductproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/Register:\n    post:\n      tags:\n      - BQ - In-forceServiceproperty\n      summary: Register In-force Service property\n      description: Register In-force Service property\n      operationId: RegisterIn-forceServiceproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceServiceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceServiceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Request:\n    put:\n      tags:\n      - BQ - In-forceProductproperty\n      summary: Request In-force Product property\n      description: Request In-force Product property\n      operationId: RequestIn-forceProductproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceProductpropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceProductproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceProductproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Request:\n    put:\n      tags:\n      - BQ - In-forceServiceproperty\n      summary: Request In-force Service property\n      description: Request In-force Service property\n      operationId: RequestIn-forceServiceproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceServicepropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceServiceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceServiceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Retrieve:\n    get:\n      tags:\n      - BQ - In-forceProductproperty\n      summary: Retrieve In-force Product property\n      description: Retrieve In-force Product property\n      operationId: RetrieveIn-forceProductproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceProductpropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceProductproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Retrieve:\n    get:\n      tags:\n      - BQ - In-forceServiceproperty\n      summary: Retrieve In-force Service property\n      description: Retrieve In-force Service property\n      operationId: RetrieveIn-forceServiceproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceServicepropertyID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceServiceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Update:\n    put:\n      tags:\n      - BQ - In-forceProductproperty\n      summary: Update In-force Product property\n      description: Update In-force Product property\n      operationId: UpdateIn-forceProductproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceProductpropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceProductproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceProductproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Update:\n    put:\n      tags:\n      - BQ - In-forceServiceproperty\n      summary: Update In-force Service property\n      description: Update In-force Service property\n      operationId: UpdateIn-forceServiceproperty\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductsandServicesID'\n      - $ref: '#/components/parameters/In-forceServicepropertyID'\n      requestBody:\n        $ref: '#/components/requestBodies/In-forceServiceproperty'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/In-forceServiceproperty'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CustomerProductsAndServicesDirectoryEntry:\n      type: object\n      properties:\n        CustomerProductsAndServicesDirectoryEntryDescription:\n          type: string\n        CustomerProductsAndServicesDirectoryEntrySchedule:\n          type: object\n        CustomerProductsAndServicesDirectoryEntryVersion:\n          type: string\n        CustomerProductsAndServicesDirectoryEntryStatus:\n          type: string\n        CustomerProductsAndServicesDirectoryEntryUsageLog:\n          type: string\n        CustomerProductsAndServicesDirectoryEntryUpdateLog:\n          type: string\n        CustomerProductsAndServicesDirectoryEntryServiceConfiguration:\n          type: string\n        CustomerProductsAndServicesDirectoryEntryReference:\n          type: string\n    In-forceServiceproperty:\n      type: object\n      properties:\n        Preconditions:\n          type: object\n        Schedule:\n          type: object\n        VersionNumber:\n          type: string\n        BusinessService:\n          type: object\n        CustomerProductsAndServicesDirectoryEntryReference:\n          type: string\n        In-forceServicepropertyReference:\n          type: object\n        In-forceServicepropertyType:\n          type: string\n    In-forceProductproperty:\n      type: object\n      properties:\n        Preconditions:\n          type: object\n        Schedule:\n          type: object\n        VersionNumber:\n          type: string\n        BusinessService:\n          type: object\n        CustomerProductsAndServicesDirectoryEntryReference:\n          type: string\n        In-forceProductpropertyReference:\n          type: object\n        In-forceProductpropertyType:\n          type: string\n    CustomerProductsandServicesOutcome:\n      type: object\n      properties:\n        CustomerProductsandServicesEntry:\n          type: string\n        CustomerProductsandServicesWorkProduct:\n          type: object\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n  parameters:\n    CustomerProductsandServicesID:\n      name: customerproductsandservicesId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    In-forceServicepropertyID:\n      name: in-forceservicepropertyId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    In-forceProductpropertyID:\n      name: in-forceproductpropertyId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    CustomerProductsandServicesOutcomeID:\n      name: customerproductsandservicesoutcomeId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    CustomerProductsAndServicesDirectoryEntry:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CustomerProductsAndServicesDirectoryEntry'\n    In-forceProductproperty:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/In-forceProductproperty'\n    In-forceServiceproperty:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/In-forceServiceproperty'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CustomerProductsandServices.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CustomerProductsandServices.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}