{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator"
		},
		"file": {
			"name": "selenium.yaml",
			"size": 0,
			"path": ".circleci/specifications/selenium.yaml",
			"byteSize": 69335,
			"content": "openapi: 3.0.2\ninfo:\n  title: Selenium WebDriver\n  description: '[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification'\n  version: 1.0.0\n  contact:\n    email: support@aerokube.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: '{protocol}://{host}:{port}{path}'\n    description: Selenium WebDriver API\n    variables:\n      protocol:\n        enum:\n          - http\n          - https\n        default: http\n      host:\n        default: localhost\n        description: Selenium host name\n      port:\n        description: Selenium port number\n        enum:\n          - '4444'\n          - '4445'\n        default: '4444'\n      path:\n        description: Selenium API base path\n        enum:\n          - '/wd/hub'\n          - '/'\n        default: '/wd/hub'\ntags:\n  - name: sessions\n    description: Commands to start, stop a session and adjust its settings\n  - name: timeouts\n    description: Commands to start, stop a session and adjust its settings\n  - name: navigation\n    description: Navigation commands\n  - name: contexts\n    description: Command contexts\n  - name: elements\n    description: Commands to work with page elements\n  - name: document\n    description: Document handling commands like getting page source\n  - name: cookies\n    description: Commands to work with cookies\n  - name: actions\n    description: Actions like clicking on the buttons, moving the mouse and so on\n  - name: prompts\n    description: Commands to work with alerts\n  - name: screenshots\n    description: Commands to take screenshots\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    StatusResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            ready:\n              type: boolean\n            message:\n              type: string\n    EmptyResponse:\n      type: object\n      properties:\n        value:\n          description: \"Always null value\"\n          type: string\n          nullable: true\n    StringResponse:\n      type: object\n      properties:\n        value:\n          type: string\n    NullableStringResponse:\n      type: object\n      properties:\n        value:\n          description: \"String that can sometimes have null value\"\n          type: string\n          nullable: true\n    BooleanResponse:\n      type: object\n      properties:\n        value:\n          type: boolean\n    ErrorResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            error:\n              type: string\n            message:\n              type: string\n            stacktrace:\n              type: string\n            data:\n              type: object\n              additionalProperties:\n                type: object\n    Proxy:\n      type: object\n      properties:\n        proxyType:\n          type: string\n          enum: [pac, direct, autodetect, system, manual]\n        proxyAutoconfigUrl:\n          type: string\n        ftpProxy:\n          type: string\n        httpProxy:\n          type: string\n        noProxy:\n          type: array\n          items:\n            type: string\n        sslProxy:\n          type: string\n        socksProxy:\n          type: string\n        socksVersion:\n          type: integer\n          minimum: 0\n          maximum: 255\n    StandardCapabilities:\n      type: object\n      properties:\n        browserName:\n          type: string\n        browserVersion:\n          type: string\n        platformName:\n          type: string\n        acceptInsecureCerts:\n          type: boolean\n        pageLoadStrategy:\n          type: string\n          enum: [none, eager, normal]\n        proxy:\n          $ref: '#/components/schemas/Proxy'\n        setWindowRect:\n          type: boolean\n        timeouts:\n          $ref: '#/components/schemas/Timeouts'\n        strictFileInteractability:\n          type: boolean\n        unhandledPromptBehavior:\n          type: string\n          enum: [\"dismiss\", \"accept\", \"dismiss and notify\", \"accept and notify\", \"ignore\"]\n    CapabilityValue:\n      oneOf:\n        - type: string\n        - type: integer\n        - type: boolean\n        - type: object\n    Capabilities:\n      allOf:\n        - $ref: '#/components/schemas/StandardCapabilities'\n        - type: object\n          additionalProperties:\n            $ref: '#/components/schemas/CapabilityValue'\n    NewSessionRequest:\n      type: object\n      properties:\n        capabilities:\n          type: object\n          properties:\n            alwaysMatch:\n              $ref: '#/components/schemas/Capabilities'\n            firstMatch:\n              type: array\n              items:\n                $ref: '#/components/schemas/Capabilities'\n      required:\n        - capabilities\n    NewSessionResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            sessionId:\n              type: string\n            capabilities:\n              $ref: '#/components/schemas/Capabilities'\n    Timeouts:\n      type: object\n      properties:\n        script:\n          type: integer\n        pageLoad:\n          type: integer\n        implicit:\n          type: integer\n    TimeoutsResponse:\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Timeouts'\n    UrlRequest:\n      type: object\n      properties:\n        url:\n          type: string\n      required:\n        - url\n    ScriptRequest:\n      type: object\n      properties:\n        script:\n          type: string\n        args:\n          type: array\n          items:\n            type: string\n    Cookie:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        path:\n          type: string\n        domain:\n          type: string\n        secure:\n          type: boolean\n        httpOnly:\n          type: boolean\n        expiry:\n          type: integer\n    CookiesResponse:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Cookie'\n    CookieRequest:\n      type: object\n      properties:\n        cookie:\n          $ref: '#/components/schemas/Cookie'\n      required:\n        - cookie\n    CookieResponse:\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Cookie'\n    SwitchToWindowRequest:\n      type: object\n      properties:\n        handle:\n          type: string\n      required:\n        - handle\n    GetWindowHandlesResponse:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            type: string\n    NewWindowRequest:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [tab, window]\n      required:\n        - type\n    NewWindowResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            handle:\n              type: string\n            type:\n              type: string\n              enum: [tab, window]\n    Rect:\n      type: object\n      properties:\n        x:\n          type: integer\n          minimum: 0\n        y:\n          type: integer\n          minimum: 0\n        width:\n          type: integer\n          minimum: 0\n        height:\n          type: integer\n          minimum: 0\n      required:\n        - x\n        - 'y'\n        - width\n        - height\n    LocatorStrategy:\n      type: string\n      enum: [\"css selector\", \"link text\", \"partial link text\", \"tag name\", \"xpath\"]\n      description: \"Locator strategy\"\n    FindElementRequest:\n      type: object\n      properties:\n        using:\n          $ref: '#/components/schemas/LocatorStrategy'\n        value:\n          type: string\n          description: \"Selector value\"\n      required:\n        - using\n        - value\n    FindElementResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          additionalProperties:\n            type: string\n          description: \"Web element identifier to web element reference mapping\"\n    FindElementsResponse:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: string\n          description: \"A list of web element identifier to web element reference mappings\"\n    ElementSendKeysRequest:\n      type: object\n      properties:\n        text:\n          type: string\n          description: \"Text to send to element\"\n      required:\n        - text\n    Action:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [pause, keyDown, keyUp, pointerDown, pointerUp, pointerMove, pointerCancel]\n        value:\n          type: string\n        button:\n          type: integer\n          enum: [0, 1, 2]\n          description: \"Possible values: `0` - left button, `1` - middle button, `2` - right button\"\n        duration:\n          type: integer\n        x:\n          type: integer\n        y:\n          type: integer\n        origin:\n          type: object\n          additionalProperties:\n            type: string\n    ActionSequence:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum: [key, pointer, none]\n        parameters:\n          type: object\n          properties:\n            pointerType:\n              type: string\n              enum: [mouse, pen, touch]\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Action'\n    ActionsRequest:\n      type: object\n      properties:\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ActionSequence'\n          description: \"A list of actions to be performed\"\n      required:\n        - actions\n    SendAlertTextRequest:\n      type: object\n      properties:\n        text:\n          type: string\n      required:\n        - text\npaths:\n  /status:\n    get:\n      tags:\n        - sessions\n      summary: Gets Selenium API status information\n      operationId: getStatus\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n  /session:\n    post:\n      tags:\n        - sessions\n      summary: Creates new Selenium session\n      security:\n        - BasicAuth: []\n      operationId: createSession\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewSessionRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NewSessionResponse'\n        401:\n          description: invalid username or password\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: session not created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}:\n    delete:\n      tags:\n        - sessions\n      summary: Deletes existing Selenium session\n      operationId: deleteSession\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/timeouts:\n    get:\n      tags:\n        - timeouts\n      summary: Get session timeouts\n      operationId: getTimeouts\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeoutsResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - timeouts\n      summary: Adjusts session timeouts\n      operationId: setTimeouts\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Timeouts'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/url:\n    get:\n      tags:\n        - navigation\n      summary: Returns current URL\n      operationId: getCurrentUrl\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - navigation\n      summary: Navigates to URL\n      operationId: navigateTo\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UrlRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: insecure certificate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/back:\n    post:\n      tags:\n        - navigation\n      summary: Navigates to the previous page\n      operationId: navigateBack\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/forward:\n    post:\n      tags:\n        - navigation\n      summary: Navigates to the next page\n      operationId: navigateForward\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/refresh:\n    post:\n      tags:\n        - navigation\n      summary: Reloads current page\n      operationId: refreshPage\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/title:\n    get:\n      tags:\n        - navigation\n      summary: Returns current page title\n      operationId: getPageTitle\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window:\n    get:\n      tags:\n        - contexts\n      summary: Returns current window handle\n      operationId: getWindowHandle\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - contexts\n      summary: Switches to window\n      operationId: switchToWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SwitchToWindowRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - contexts\n      summary: Closes current window\n      operationId: closeWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWindowHandlesResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/handles:\n    get:\n      tags:\n        - contexts\n      summary: Returns all window handles\n      operationId: getWindowHandles\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWindowHandlesResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/new:\n    post:\n      tags:\n        - contexts\n      summary: Creates a new window or tab\n      operationId: createNewWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewWindowRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NewWindowResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or unsupported operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/frame:\n    post:\n      tags:\n        - contexts\n      summary: Switch to frame\n      operationId: switchToFrame\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SwitchToWindowRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such frame\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/frame/parent:\n    post:\n      tags:\n        - contexts\n      summary: Switch to parent frame\n      operationId: switchToParentFrame\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/rect:\n    get:\n      tags:\n        - contexts\n      summary: Get window size\n      operationId: getWindowRect\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or unsupported operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - contexts\n      summary: Set window size\n      operationId: setWindowRect\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Rect'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/maximize:\n    post:\n      tags:\n        - contexts\n      summary: Maximize window\n      operationId: maximizeWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/minimize:\n    post:\n      tags:\n        - contexts\n      summary: Minimize window\n      operationId: minimizeWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/fullscreen:\n    post:\n      tags:\n        - contexts\n      summary: Fullscreen window\n      operationId: fullscreenWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element:\n    post:\n      tags:\n        - elements\n      summary: Find element\n      operationId: findElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/elements:\n    post:\n      tags:\n        - elements\n      summary: Find elements\n      operationId: findElements\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementsResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/element:\n    post:\n      tags:\n        - elements\n      summary: Find element from element\n      operationId: findElementFromElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/elements:\n    post:\n      tags:\n        - elements\n      summary: Find elements from element\n      operationId: findElementsFromElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementsResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/active:\n    get:\n      tags:\n        - elements\n      summary: Get active element\n      operationId: getActiveElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/selected:\n    get:\n      tags:\n        - elements\n      summary: Is element selected\n      operationId: isElementSelected\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BooleanResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/attribute/{name}:\n    get:\n      tags:\n        - elements\n      summary: Get element attribute\n      operationId: getElementAttribute\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Requested attribute name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NullableStringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/property/{name}:\n    get:\n      tags:\n        - elements\n      summary: Get element property\n      operationId: getElementProperty\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Requested property name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NullableStringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/css/{propertyName}:\n    get:\n      tags:\n        - elements\n      summary: Get element CSS value\n      operationId: getElementCSSValue\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"propertyName\"\n          in: \"path\"\n          description: \"Requested CSS property name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/text:\n    get:\n      tags:\n        - elements\n      summary: Get element text\n      operationId: getElementText\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/name:\n    get:\n      tags:\n        - elements\n      summary: Get element tag name\n      operationId: getElementTagName\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/rect:\n    get:\n      tags:\n        - elements\n      summary: Get element rect\n      operationId: getElementRect\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/enabled:\n    get:\n      tags:\n        - elements\n      summary: Is element enabled\n      operationId: isElementEnabled\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BooleanResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/click:\n    post:\n      tags:\n        - elements\n      summary: Click on element\n      operationId: elementClicks\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable or element click intercepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/clear:\n    post:\n      tags:\n        - elements\n      summary: Clear element\n      operationId: elementClear\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable or invalid element state\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/value:\n    post:\n      tags:\n        - elements\n      summary: Send keys to element\n      operationId: elementSendKeys\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ElementSendKeysRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/source:\n    get:\n      tags:\n        - document\n      summary: Get page source\n      operationId: getPageSource\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/execute/sync:\n    post:\n      tags:\n        - document\n      summary: Execute script\n      operationId: executeScript\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or script timeout or javascript error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/execute/async:\n    post:\n      tags:\n        - document\n      summary: Execute script asynchronously\n      operationId: executeScriptAsync\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or script timeout or javascript error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/cookie:\n    get:\n      tags:\n        - cookies\n      summary: Get all cookies\n      operationId: getAllCookies\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CookiesResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - cookies\n      summary: Add cookie\n      operationId: addCookie\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CookieRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or invalid cookie domain\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or unable to set cookie\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - cookies\n      summary: Delete all cookies\n      operationId: deleteAllCookies\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/cookie/{name}:\n    get:\n      tags:\n        - cookies\n      summary: Get named cookie\n      operationId: getNamedCookie\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Cookie name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CookieResponse'\n        404:\n          description: invalid session id or no such window or no such cookie\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - cookies\n      summary: Delete cookie\n      operationId: deleteCookie\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Cookie name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/actions:\n    post:\n      tags:\n        - actions\n      summary: Perform actions\n      operationId: performActions\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActionsRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - actions\n      summary: Release actions\n      operationId: releaseActions\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/alert/dismiss:\n    post:\n      tags:\n        - prompts\n      summary: Dismiss alert\n      operationId: dismissAlert\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/alert/accept:\n    post:\n      tags:\n        - prompts\n      summary: Accept alert\n      operationId: acceptAlert\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/alert/text:\n    post:\n      tags:\n        - prompts\n      summary: Send alert text\n      operationId: sendAlertText\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendAlertTextRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      tags:\n        - prompts\n      summary: Get alert text\n      operationId: getAlertText\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        400:\n          description: invalid argument or element not interactable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/screenshot:\n    get:\n      tags:\n        - screenshots\n      summary: Takes page screenshot\n      operationId: takeScreenshot\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or unable to capture screen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/screenshot:\n    get:\n      tags:\n        - screenshots\n      summary: Takes element screenshot\n      operationId: takeElementScreenshot\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Selenium element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or unable to capture screen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n",
			"canonicalURL": "/github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator@d693368c03b583c8e3098be205ee040bc437346b/-/blob/.circleci/specifications/selenium.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator/blob/d693368c03b583c8e3098be205ee040bc437346b/.circleci/specifications/selenium.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}