{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Nexmo/nexmo-oas-renderer"
		},
		"file": {
			"name": "verify.yml",
			"size": 0,
			"path": "samples/verify.yml",
			"byteSize": 46998,
			"content": "openapi: 3.0.3\nservers:\n  - url: \"https://api.nexmo.com/verify\"\ninfo:\n  title: Verify API\n  version: 1.1.4\n  description: \u003e-\n    The Verify API helps you to implement 2FA (two-factor authentication) in your applications.\n    This is useful for:\n\n\n    * Protecting against spam, by preventing spammers from creating multiple accounts\n\n    * Monitoring suspicious activity, by forcing an account user to verify ownership of a number\n\n    * Ensuring that you can reach your users at any time because you have their correct phone number\n\n    More information is available at \u003chttps://developer.nexmo.com/verify\u003e\n  contact:\n    name: Vonage DevRel\n    email: devrel@vonage.com\n    url: \"https://developer.nexmo.com/\"\n  termsOfService: \"https://www.nexmo.com/terms-of-use\"\n  license:\n    name: The MIT License (MIT)\n    url: \"https://opensource.org/licenses/MIT\"\nexternalDocs:\n  description: \"More information on the Verify product on our Developer Portal\"\n  url: \"https://developer.nexmo.com/verify\"\npaths:\n  \"/{format}\":\n    post:\n      operationId: verifyRequest\n      summary: Request a Verification\n      description: \u003e-\n        Use Verify request to generate and send a PIN to your user:\n\n\n        1. Create a request to send a verification code to your user.\n\n\n        2. Check the `status` field in the response to ensure that your request\n        was successful (zero is success).\n\n\n        3. Use the `request_id` field in the response for the Verify check.\n\n\n        *Note that this endpoint is available by `GET` request as well as `POST`.*\n      parameters:\n        - $ref: \"#/components/parameters/format\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - api_key\n                - api_secret\n                - number\n                - brand\n              properties:\n                api_key:\n                  $ref: \"#/components/schemas/api_key\"\n                api_secret:\n                  $ref: \"#/components/schemas/api_secret\"\n                number:\n                  type: string\n                  description: \u003e-\n                    The mobile or landline phone number to verify. Unless you are\n                    setting `country` explicitly, this number must be in\n                    [E.164](https://en.wikipedia.org/wiki/E.164) format.\n                  example: \"447700900000\"\n                country:\n                  description: \u003e-\n                    If you do not provide `number` in international format or you are not\n                    sure if `number` is correctly formatted, specify the two-character country\n                    code in `country`. Verify will then format the number for you.\n                  type: string\n                  example: GB\n                brand:\n                  description: \u003e-\n                    An 18-character alphanumeric string you can use to personalize the verification\n                    request SMS body, to help users identify your company or application name.\n                    For example: \"Your `Acme Inc` PIN is ...\"\n                  type: string\n                  maxLength: 18\n                  example: Acme Inc\n                sender_id:\n                  description: \u003e-\n                    An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id)\n                    of the verification request. Depending on the destination of the phone number you are sending the verification SMS to,\n                    restrictions might apply.\n                  type: string\n                  maxLength: 11\n                  default: VERIFY\n                  example: ACME\n                code_length:\n                  description: The length of the verification code.\n                  type: integer\n                  enum:\n                    - 4\n                    - 6\n                  default: 4\n                  example: 6\n                lg:\n                  description: \u003e-\n                    By default, the SMS or text-to-speech (TTS) message is generated in\n                    the locale that matches the `number`. For example, the text message\n                    or TTS message for a `33*` number is sent in French. Use this\n                    parameter to explicitly control the language used for the Verify\n                    request. A list of languages is available: \u003chttps://developer.nexmo.com/verify/guides/verify-languages\u003e\n                  example: en-us\n                  type: string\n                  default: en-us\n                  enum:\n                    - ar-xa\n                    - cs-cz\n                    - cy-cy\n                    - cy-gb\n                    - da-dk\n                    - de-de\n                    - el-gr\n                    - en-au\n                    - en-gb\n                    - en-in\n                    - en-us\n                    - es-es\n                    - es-mx\n                    - es-us\n                    - fi-fi\n                    - fil-ph\n                    - fr-ca\n                    - fr-fr\n                    - hi-in\n                    - hu-hu\n                    - id-id\n                    - is-is\n                    - it-it\n                    - ja-jp\n                    - ko-kr\n                    - nb-no\n                    - nl-nl\n                    - pl-pl\n                    - pt-br\n                    - pt-pt\n                    - ro-ro\n                    - ru-ru\n                    - sv-se\n                    - th-th\n                    - tr-tr\n                    - vi-vn\n                    - yue-cn\n                    - zh-cn\n                    - zh-tw\n                pin_expiry:\n                  description: \u003e-\n                    How long the generated verification code is valid for, in seconds.\n                    When you specify both `pin_expiry` and `next_event_wait` then\n                    `pin_expiry` must be an integer multiple of `next_event_wait`\n                    otherwise `pin_expiry` is defaulted to equal next_event_wait. See\n                    [changing the event\n                    timings](https://developer.nexmo.com/verify/guides/changing-default-timings).\n                  type: integer\n                  minimum: 60\n                  maximum: 3600\n                  default: 300\n                  example: 240\n                next_event_wait:\n                  description: \u003e-\n                    Specifies the wait time in seconds between attempts to deliver the\n                    verification code.\n                  type: integer\n                  minimum: 60\n                  maximum: 900\n                  default: 300\n                  example: 120\n                workflow_id:\n                  description: \u003e-\n                    Selects the predefined sequence of SMS and TTS (Text To Speech)\n                    actions to use in order to convey the PIN to your user. For example,\n                    an id of 1 identifies the workflow SMS - TTS - TTS. For a list of\n                    all workflows and their associated ids, please visit the [developer\n                    portal](https://developer.nexmo.com/verify/guides/workflows-and-events).\n                  type: integer\n                  default: 1\n                  enum:\n                    - 1\n                    - 2\n                    - 3\n                    - 4\n                    - 5\n                    - 6\n                    - 7\n                  example: 4\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              examples:\n                success:\n                  summary: Request was started\n                  value:\n                    request_id: abcdef0123456789abcdef0123456789\n                    status: \"0\"\n\n                throttled:\n                  summary: Request limit exceeded\n                  value:\n                    status: \"1\"\n                    error_text: Throttled\n\n                missing-param:\n                  summary: Missing a parameter\n                  value:\n                    status: \"2\"\n                    error_text: Missing api_key\n\n                invalid-param:\n                  summary: Invalid parameter\n                  value:\n                    status: \"3\"\n                    error_text: Invalid value for number\n\n                invalid-creds:\n                  summary: Invalid credentials\n                  value:\n                    status: \"4\"\n                    error_text: Invalid credentials were provided\n\n                internal-error:\n                  summary: Internal Error\n                  value:\n                    status: \"5\"\n                    error_text: Internal Error\n\n                cannot-process:\n                  summary: Unable to process message\n                  value:\n                    status: \"6\"\n                    error_text: \"The Vonage platform was unable to process this message for the following reason: The request could not be routed.\"\n\n                blacklist:\n                  summary: Blacklisted number\n                  value:\n                    status: \"7\"\n                    error_text: The number you are trying to verify is blacklisted for verification.\n\n                account-disabled:\n                  summary: Account is barred\n                  value:\n                    status: \"8\"\n                    error_text: The api_key you supplied is for an account that has been barred from submitting messages.\n\n                quota-exceeded:\n                  summary: Quota exceeded\n                  value:\n                    status: \"9\"\n                    error_text: Partner quota exceeded\n\n                concurrent:\n                  summary: Concurrent verifications\n                  value:\n                    request_id: abcdef0123456789abcdef0123456789\n                    status: \"10\"\n                    error_text: Concurrent verifications to the same number are not allowed\n\n                rejected:\n                  summary: Rejected\n                  value:\n                    status: \"15\"\n                    error_text: The destination number is not in a supported network\n\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/requestResponse\"\n                  - $ref: \"#/components/schemas/requestErrorResponse\"\n            text/xml:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/requestResponse\"\n                  - $ref: \"#/components/schemas/requestErrorResponse\"\n\n  \"/check/{format}\":\n    post:\n      description: \u003e-\n        Use Verify check to confirm that the PIN you received from your user matches the one sent by\n        Vonage in your Verify request.\n\n\n        1. Send the verification `code` that your user supplied, with the corresponding `request_id` from the Verify request.\n\n        2. Check the `status` of the response to determine if the code the user supplied matches the one sent by Vonage.\n\n\n        *Note that this endpoint is available by `GET` request as well as `POST`.*\n      operationId: verifyCheck\n      summary: Verify Check\n      parameters:\n        - $ref: \"#/components/parameters/format\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - api_key\n                - api_secret\n                - request_id\n                - code\n              properties:\n                api_key:\n                  $ref: \"#/components/schemas/api_key\"\n                api_secret:\n                  $ref: \"#/components/schemas/api_secret\"\n                request_id:\n                  description: \u003e-\n                    The Verify request to check. This is the\n                    `request_id` you received in the response to the Verify request.\n                  type: string\n                  maxLength: 32\n                  example: abcdef0123456789abcdef0123456789\n                code:\n                  description: The verification code entered by your user.\n                  type: string\n                  minLength: 4\n                  maxLength: 6\n                  example: \"1234\"\n                ip_address:\n                  description: \u003e-\n                    (This field is no longer used)\n                  type: string\n                  example: 123.0.0.255\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              examples:\n                success:\n                  summary: The supplied code is correct for this request. Verification successful.\n                  value:\n                    request_id: abcdef0123456789abcdef0123456789\n                    event_id: \"0A00000012345678\"\n                    status: \"0\"\n                    price: \"0.10000000\"\n                    currency: EUR\n                    estimated_price_messages_sent: \"0.03330000\"\n\n                throttled:\n                  summary: Request limit exceeded\n                  value:\n                    status: \"1\"\n                    error_text: Throttled\n\n                missing-param:\n                  summary: Missing a parameter\n                  value:\n                    status: \"2\"\n                    error_text: Missing api_key\n\n                invalid-param:\n                  summary: Invalid parameter\n                  value:\n                    status: \"3\"\n                    error_text: \"Invalid value for param: request_id\"\n\n                invalid-creds:\n                  summary: Invalid credentials\n                  value:\n                    status: \"4\"\n                    error_text: Bad credentials\n\n                internal-error:\n                  summary: Internal Error\n                  value:\n                    status: \"5\"\n                    error_text: Internal Error\n\n                unknown-requestid:\n                  summary: \"This request_id is unknown or inactive\"\n                  value:\n                    status: \"6\"\n                    error_text: \"The Vonage platform was unable to process this message for the following reason: Request 'abcdef0123456789abcdef0123456789' was not found or it has been verified already.\"\n\n                incorrect-code:\n                  summary: PIN code is incorrect\n                  value:\n                    status: \"16\"\n                    error_text: The code inserted does not match the expected value\n\n                too-many-fails:\n                  summary: Too many incorrect codes\n                  value:\n                    status: \"17\"\n                    error_text: The wrong code was provided too many times. Request terminated\n\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/checkResponse\"\n                  - $ref: \"#/components/schemas/checkErrorResponse\"\n            text/xml:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/checkResponse\"\n                  - $ref: \"#/components/schemas/checkErrorResponse\"\n\n  \"/search/{format}\":\n    get:\n      description: \u003e-\n        Use Verify search to check the status of past or current verification requests:\n\n\n        1. Send a Verify search request containing the `request_id`s of the\n        verification requests you are interested in.\n\n        2. Use the `status` of each verification request in the `checks` array of the response object to determine the outcome.\n\n\n        *Note that this endpoint is available by `POST` request as well as `GET`.*\n      operationId: verifySearch\n      summary: Verify Search\n      parameters:\n        - $ref: \"#/components/parameters/format\"\n        - $ref: \"#/components/parameters/api_key\"\n        - $ref: \"#/components/parameters/api_secret\"\n        - name: request_id\n          required: false\n          in: query\n          description: The `request_id` you received in the Verify Request Response.\n          schema:\n            type: string\n          example: abcdef0123456789abcdef0123456789\n        - name: request_ids\n          required: false\n          in: query\n          description: \u003e-\n            More than one `request_id`. Each `request_id` is a new parameter in\n            the Verify Search request.\n          schema:\n            type: array\n            items:\n              type: string\n              example: abcdef0123456789abcdef0123456789\n            maxItems: 10\n          style: form\n          explode: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              examples:\n                success:\n                  summary: The request was found\n                  value:\n                    request_id: abcdef0123456789abcdef0123456789\n                    account_id: abcdef01\n                    number: \"447700900000\"\n                    sender_id: verify\n                    date_submitted: \"2020-01-01 12:00:00\"\n                    date_finalized: \"2020-01-01 12:00:00\"\n                    checks:\n                      [\n                        {\n                          date_received: \"2020-01-01 12:00:00\",\n                          code: \"1111\",\n                          status: INVALID,\n                          ip_address: \"\",\n                        },\n                        {\n                          date_received: \"2020-01-01 12:02:00\",\n                          code: \"1234\",\n                          status: VALID,\n                          ip_address: \"\",\n                        },\n                      ]\n                    first_event_date: \"2020-01-01 12:00:00\"\n                    last_event_date: \"2020-01-01 12:00:00\"\n                    price: \"0.1000000\"\n                    currency: EUR\n                    status: SUCCESS\n                    estimated_price_messages_sent: \"0.06660000\"\n                    events:\n                      [\n                        { id: 0A00000012345678, type: sms },\n                        { id: 0A00000012345679, type: sms },\n                      ]\n\n                throttled:\n                  summary: Request limit exceeded\n                  value:\n                    status: \"1\"\n                    error_text: Throttled\n\n                missing-param:\n                  summary: Missing a parameter\n                  value:\n                    status: \"2\"\n                    error_text: Missing api_key\n\n                invalid-param:\n                  summary: Invalid parameter\n                  value:\n                    status: \"3\"\n                    error_text: \"Invalid value for param: request_id\"\n\n                invalid-creds:\n                  summary: Invalid credentials\n                  value:\n                    status: \"4\"\n                    error_text: Bad credentials\n\n                internal-error:\n                  summary: Internal Error\n                  value:\n                    status: \"5\"\n                    error_text: Internal Error\n\n                not-found:\n                  summary: Request not found (this also occurs immediately after completion, wait 60 seconds and try again)\n                  value:\n                    status: \"101\"\n                    error_text: No response found\n\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/searchResponse\"\n                  - $ref: \"#/components/schemas/searchErrorResponse\"\n            text/xml:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/searchResponse\"\n                  - $ref: \"#/components/schemas/searchErrorResponse\"\n\n  \"/control/{format}\":\n    post:\n      description: |-\n        Control the progress of your Verify requests. To cancel an existing Verify request, or to trigger the next verification event:\n\n\n        1. Send a Verify control request with the appropriate command (`cmd`) for what you want to achieve.\n\n        2. Check the `status` in the response.\n\n\n        *Note that this endpoint is available by `GET` request as well as `POST`.*\n      operationId: verifyControl\n      summary: Verify Control\n      parameters:\n        - $ref: \"#/components/parameters/format\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - api_key\n                - api_secret\n                - request_id\n                - cmd\n              properties:\n                api_key:\n                  $ref: \"#/components/schemas/api_key\"\n                api_secret:\n                  $ref: \"#/components/schemas/api_secret\"\n                request_id:\n                  description: \"The `request_id` you received in the response to the Verify request.\"\n                  type: string\n                  example: abcdef0123456789abcdef0123456789\n                cmd:\n                  description: \u003e-\n                    The possible commands are `cancel` to request cancellation of\n                    the verification process, or `trigger_next_event` to advance \n                    to the next verification event (if any).\n                    Cancellation is only possible 30 seconds after the start of the\n                    verification request and before the second event (either TTS or SMS)\n                    has taken place.\n                  type: string\n                  enum:\n                    - cancel\n                    - trigger_next_event\n                  example: cancel\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              examples:\n                success-cancel:\n                  summary: The request has been cancelled\n                  value:\n                    status: \"0\"\n                    command: cancel\n\n                success-trigger:\n                  summary: The next event has been triggered\n                  value:\n                    status: \"0\"\n                    command: trigger_next_event\n\n                throttled:\n                  summary: Request limit exceeded\n                  value:\n                    status: \"1\"\n                    error_text: Throttled\n\n                missing-param:\n                  summary: Missing a parameter\n                  value:\n                    status: \"2\"\n                    error_text: Missing api_key\n\n                invalid-param:\n                  summary: Invalid parameter\n                  value:\n                    status: \"3\"\n                    error_text: \"Invalid value for param: request_id\"\n\n                invalid-creds:\n                  summary: Invalid credentials\n                  value:\n                    status: \"4\"\n                    error_text: Bad credentials\n\n                internal-error:\n                  summary: Internal Error\n                  value:\n                    status: \"5\"\n                    error_text: Internal Error\n\n                cancel-early:\n                  summary: Cancellation requested less than 30 seconds into the request\n                  value:\n                    status: \"19\"\n                    error_text: \"Verification request ['abcdef0123456789abcdef0123456789'] can't be cancelled within the first 30 seconds.\"\n\n                cancel-late:\n                  summary: Cancellation requested after too many retry attempts\n                  value:\n                    status: \"19\"\n                    error_text: \"Verification request  ['abcdef0123456789abcdef0123456789'] can't be cancelled now. Too many attempts to re-deliver have already been made.\"\n\n                trigger-end:\n                  summary: No more events to trigger\n                  value:\n                    status: \"19\"\n                    error_text: \"No more events are left to execute for the request ['abcdef0123456789abcdef0123456789']\"\n\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/controlResponse\"\n                  - $ref: \"#/components/schemas/controlErrorResponse\"\n            text/xml:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/controlResponse\"\n                  - $ref: \"#/components/schemas/controlErrorResponse\"\n  \"/psd2/{format}\":\n    post:\n      operationId: verifyRequestWithPSD2\n      summary: PSD2 (Payment Services Directive 2) Request\n      description: \u003e-\n        Use Verify request to generate and send a PIN to your user to authorize a payment:\n\n        1. Create a request to send a verification code to your user.\n\n        2. Check the `status` field in the response to ensure that your request\n        was successful (zero is success).\n\n        3. Use the `request_id` field in the response for the Verify check.\n\n        (Please note that XML format is not supported for the Payment Services Directive endpoint at this time.)\n\n      parameters:\n        - $ref: \"#/components/parameters/format\"\n\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - api_key\n                - api_secret\n                - number\n                - payee\n                - amount\n              properties:\n                api_key:\n                  $ref: \"#/components/schemas/api_key\"\n                api_secret:\n                  $ref: \"#/components/schemas/api_secret\"\n                number:\n                  type: string\n                  description: \u003e-\n                    The mobile or landline phone number to verify. Unless you are\n                    setting `country` explicitly, this number must be in\n                    [E.164](https://en.wikipedia.org/wiki/E.164) format.\n                  example: \"447700900000\"\n                country:\n                  description: \u003e-\n                    If you do not provide `number` in international format or you are not\n                    sure if `number` is correctly formatted, specify the two-character country\n                    code in `country`. Verify will then format the number for you.\n                  type: string\n                  example: GB\n                payee:\n                  description: \u003e-\n                    An alphanumeric string to indicate to the user the name of the recipient\n                    that they are confirming a payment to.\n                  type: string\n                  maxLength: 18\n                  example: Acme Inc\n                amount:\n                  description: \u003e-\n                    The decimal amount of the payment to be confirmed, in Euros\n                  type: number\n                  format: float\n                  example: \"48.00\"\n                code_length:\n                  description: The length of the verification code.\n                  type: integer\n                  enum:\n                    - 4\n                    - 6\n                  default: 4\n                  example: 6\n                lg:\n                  description: \u003e-\n                    By default, the SMS or text-to-speech (TTS) message is generated in\n                    the locale that matches the `number`. For example, the text message\n                    or TTS message for a `33*` number is sent in French. Use this\n                    parameter to explicitly control the language used.\n\n                    *Note: Voice calls in English for `bg-bg`, `ee-et`, `ga-ie`, `lv-lv`, `lt-lt`, `mt-mt`, `sk-sk`, `sk-si`\n                  example: es-es\n                  type: string\n                  default: en-gb\n                  enum:\n                    - en-gb\n                    - bg-bg\n                    - cs-cz\n                    - da-dk\n                    - de-de\n                    - ee-et\n                    - el-gr\n                    - es-es\n                    - fi-fi\n                    - fr-fr\n                    - ga-ie\n                    - hu-hu\n                    - it-it\n                    - lv-lv\n                    - lt-lt\n                    - mt-mt\n                    - nl-nl\n                    - pl-pl\n                    - sk-sk\n                    - sl-si\n                    - sv-se\n                pin_expiry:\n                  description: \u003e-\n                    How long the generated verification code is valid for, in seconds.\n                    When you specify both `pin_expiry` and `next_event_wait` then\n                    `pin_expiry` must be an integer multiple of `next_event_wait`\n                    otherwise `pin_expiry` is defaulted to equal next_event_wait. See\n                    [changing the event\n                    timings](https://developer.nexmo.com/verify/guides/changing-default-timings).\n                  type: integer\n                  minimum: 60\n                  maximum: 3600\n                  default: 300\n                  example: 240\n                next_event_wait:\n                  description: \u003e-\n                    Specifies the wait time in seconds between attempts to deliver the\n                    verification code.\n                  type: integer\n                  minimum: 60\n                  maximum: 900\n                  default: 300\n                  example: 120\n                workflow_id:\n                  description: \u003e-\n                    Selects the predefined sequence of SMS and TTS (Text To Speech)\n                    actions to use in order to convey the PIN to your user. For example,\n                    an id of 1 identifies the workflow SMS - TTS - TTS. For a list of\n                    all workflows and their associated ids, please visit the [developer\n                    portal](https://developer.nexmo.com/verify/guides/workflows-and-events).\n                  type: integer\n                  default: 1\n                  enum:\n                    - 1\n                    - 2\n                    - 3\n                    - 4\n                    - 5\n                    - 6\n                    - 7\n                  example: 4\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/requestResponse\"\n                  - $ref: \"#/components/schemas/requestErrorResponse\"\ncomponents:\n  parameters:\n    format:\n      name: format\n      required: true\n      in: path\n      description: The response format.\n      schema:\n        type: string\n        enum:\n          - json\n          - xml\n      example: json\n\n    api_key:\n      name: api_key\n      required: true\n      in: query\n      schema:\n        $ref: \"#/components/schemas/api_key\"\n\n    api_secret:\n      name: api_secret\n      required: true\n      in: query\n      schema:\n        $ref: \"#/components/schemas/api_secret\"\n\n  schemas:\n    api_key:\n      type: string\n      description: \u003e-\n        You can find your API key in your [account\n        dashboard](https://dashboard.nexmo.com)\n      example: \"abcd1234\"\n\n    api_secret:\n      type: string\n      description: \u003e-\n        You can find your API secret in your [account\n        dashboard](https://dashboard.nexmo.com)\n      example: \"Sup3rS3cr3t!!\"\n\n    estimated_price_messages_sent:\n      type: string\n      description: |\n        This field may not be present, depending on your pricing model. The\n        value indicates the cost (in EUR) of the calls made and messages sent\n        for the verification process. This value may be updated during and\n        shortly after the request completes because user input events can\n        overlap with message/call events. When this field is present, the total\n        cost of the verification is the sum of this field and the `price` field.\n      example: \"0.03330000\"\n    requestResponse:\n      type: object\n      description: Success\n      xml:\n        name: verify_response\n      properties:\n        request_id:\n          type: string\n          description: \u003e-\n            The unique ID of the Verify request. You need this\n            `request_id` for the Verify check.\n          maxLength: 32\n          example: \"abcdef0123456789abcdef0123456789\"\n        status:\n          type: string\n          description: \"Indicates the outcome of the request; zero is success\"\n          example: \"0\"\n    requestErrorResponse:\n      type: object\n      description: Error\n      xml:\n        name: verify_response\n      properties:\n        request_id:\n          type: string\n          description: \u003e-\n            The unique ID of the Verify request. This may be blank in an error situation\n          maxLength: 32\n          example: \"\"\n        status:\n          type: string\n          example: \"2\"\n          enum:\n            - \"0\"\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n            - \"6\"\n            - \"7\"\n            - \"8\"\n            - \"9\"\n            - \"10\"\n            - \"15\"\n            - \"20\"\n          description: |\n            Code | Text | Description\n            -- | -- | --\n            0 | Success | The request was successfully accepted by Vonage.\n            1 | Throttled | You are trying to send more than the maximum of 30 requests per second.\n            2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.\n            3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.\n            4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.\n            5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.\n            6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.\n            7 | The number you are trying to verify is blacklisted for verification. |\n            8 | The api_key you supplied is for an account that has been barred from submitting messages. |\n            9 | Partner quota exceeded | Your account does not have sufficient credit to process this request.\n            10 | Concurrent verifications to the same number are not allowed |\n            15 | The destination number is not in a supported network | The request has been rejected. Find out more about this error in the [Knowledge Base](https://help.nexmo.com/hc/en-us/articles/360018406532-Verify-On-demand-Service-to-High-Risk-Countries)\n            20 | This account does not support the parameter: pin_code. | Only certain accounts have the ability to set the `pin_code`. Please contact your account manager for more information.\n        error_text:\n          type: string\n          description: \"If `status` is non-zero, this explains the error encountered.\"\n          example: \"Your request is incomplete and missing the mandatory parameter `number`\"\n    checkResponse:\n      type: object\n      description: Success\n      properties:\n        request_id:\n          type: string\n          description: \u003e-\n            The `request_id` that you received in the response to the Verify request and\n            used in the Verify check request.\n          example: abcdef0123456789abcdef0123456789\n        event_id:\n          type: string\n          description: The ID of the verification event, such as an SMS or TTS call.\n          example: 0A00000012345678\n        status:\n          type: string\n          description: \u003e-\n            A value of `0` indicates that your user entered the correct code. If\n            it is non-zero, check the `error_text`.\n          example: \"0\"\n        price:\n          type: string\n          description: The cost incurred for this request.\n          example: \"0.10000000\"\n        currency:\n          type: string\n          description: The currency code.\n          example: EUR\n        estimated_price_messages_sent:\n          $ref: \"#/components/schemas/estimated_price_messages_sent\"\n      xml:\n        name: verify_response\n    checkErrorResponse:\n      type: object\n      description: Error\n      properties:\n        request_id:\n          type: string\n          description: \u003e-\n            The `request_id` that you received in the response to the Verify request and\n            used in the Verify check request.\n          example: abcdef0123456789abcdef0123456789\n        status:\n          type: string\n          example: \"16\"\n          enum:\n            - \"0\"\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n            - \"6\"\n            - \"16\"\n            - \"17\"\n          description: |\n            Code | Text | Description\n            -- | -- | --\n            0 | Success | The request was successfully accepted by Vonage.\n            1 | Throttled | You are trying to send more than the maximum of 30 requests per second.\n            2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.\n            3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.\n            4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.\n            5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.\n            6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.\n            16 | The code inserted does not match the expected value |\n            17 | The wrong code was provided too many times | You can run Verify check on a specific `request_id` up to three times unless a new verification code is generated. If you check a request more than three times, it is set to FAILED and you cannot check it again.\n        error_text:\n          type: string\n          description: If the `status` is non-zero, this explains the error encountered.\n          example: The code inserted does not match the expected value\n      xml:\n        name: verify_response\n    searchResponse:\n      xml:\n        name: verify_request\n      type: object\n      description: Success\n      properties:\n        request_id:\n          type: string\n          description: \u003e-\n            The `request_id` that you received in the response to the Verify request and\n            used in the Verify search request.\n          example: abcdef0123456789abcdef0123456789\n        account_id:\n          type: string\n          description: The Vonage account ID the request was for.\n          example: abcdef01\n        status:\n          type: string\n          example: IN PROGRESS\n          enum:\n            - IN PROGRESS\n            - SUCCESS\n            - FAILED\n            - EXPIRED\n            - CANCELLED\n          description: |\n            Code | Description\n            -- | --\n            IN PROGRESS | The search is still in progress.\n            SUCCESS | Your user entered a correct verification code.\n            FAILED | Your user entered an incorrect code more than three times.\n            EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed.\n            CANCELLED | The verification process was cancelled by a Verify control request.\n        number:\n          type: string\n          description: The phone number this verification request was used for.\n          example: \"447700900000\"\n        price:\n          type: string\n          description: The cost incurred for this verification request.\n          example: \"0.10000000\"\n        currency:\n          type: string\n          description: The currency code.\n          example: EUR\n        sender_id:\n          type: string\n          description: The `sender_id` you provided in the Verify request.\n          default: verify\n          example: mySenderId\n        date_submitted:\n          type: string\n          description: \u003e-\n            The date and time the verification request was submitted, in the following format YYYY-MM-DD HH:MM:SS.\n          example: \"2020-01-01 12:00:00\"\n        date_finalized:\n          type: string\n          description: \u003e-\n            The date and time the verification request was completed. This\n            response parameter is in the following format YYYY-MM-DD HH:MM:SS.\n          example: \"2020-01-01 12:00:00\"\n        first_event_date:\n          type: string\n          description: \u003e-\n            The time the first verification attempt was made, in the\n            following format YYYY-MM-DD HH:MM:SS.\n          example: \"2020-01-01 12:00:00\"\n        last_event_date:\n          type: string\n          description: \u003e-\n            The time the last verification attempt was made, in the\n            following format YYYY-MM-DD HH:MM:SS.\n          example: \"2020-01-01 12:00:00\"\n        checks:\n          type: array\n          xml:\n            wrapped: true\n          description: The list of checks made for this verification and their outcomes.\n          items:\n            type: object\n            xml:\n              name: check\n            properties:\n              date_received:\n                type: string\n                description: The date and time this check was received (in the format YYYY-MM-DD HH:MM:SS)\n                example: \"2020-01-01 12:00:00\"\n              code:\n                type: string\n                description: The code supplied with this check request\n                example: \"987654\"\n              status:\n                type: string\n                enum:\n                  - VALID\n                  - INVALID\n              ip_address:\n                type: string\n                description: The IP address, if available (this field is no longer used).\n                example: 123.0.0.255\n        events:\n          type: array\n          xml:\n            wrapped: true\n          description: The events that have taken place to verify this number, and their unique identifiers.\n          items:\n            type: object\n            xml:\n              name: event\n            properties:\n              type:\n                type: string\n                enum:\n                  - tts\n                  - sms\n              id:\n                type: string\n        estimated_price_messages_sent:\n          $ref: \"#/components/schemas/estimated_price_messages_sent\"\n    searchErrorResponse:\n      x-examples:\n        - throttled\n        - missing-param\n      xml:\n        name: verify_request\n      type: object\n      description: Error\n      properties:\n        request_id:\n          type: string\n          description: \u003e-\n            The `request_id` that you received in the response to the Verify request and\n            used in the Verify search request. May be empty in an error situation.\n          example: abcdef0123456789abcdef0123456789\n        status:\n          type: string\n          example: \"IN PROGRESS\"\n          enum:\n            - IN PROGRESS\n            - FAILED\n            - EXPIRED\n            - CANCELLED\n            - \"101\"\n          description: |\n            Code | Description\n            -- | --\n            IN PROGRESS | The search is still in progress.\n            SUCCESS | Your user entered a correct verification code.\n            FAILED | Your user entered an incorrect code more than three times.\n            EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed.\n            CANCELLED | The verification process was cancelled by a Verify control request.\n            101 | You supplied an invalid `request_id`, or the data is not available. Note that for recently-completed requests, there can be a delay of up to 1 minute before the results are available in search.\n        error_text:\n          type: string\n          description: If `status` is not `SUCCESS`, this message explains the issue encountered.\n          example: No response found\n    controlResponse:\n      type: object\n      description: Success\n      xml:\n        name: response\n      properties:\n        status:\n          type: string\n          example: \"0\"\n          description: |\n            `cmd` | Code | Description\n            -- | -- | --\n            Any | 0 | Success\n        command:\n          type: string\n          description: The `cmd` you sent in the request.\n          enum:\n            - \"cancel\"\n            - \"trigger_next_event\"\n          example: \"cancel\"\n    controlErrorResponse:\n      type: object\n      description: Error\n      xml:\n        name: response\n      properties:\n        status:\n          type: string\n          example: \"6\"\n          enum:\n            - \"0\"\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n            - \"6\"\n            - \"8\"\n            - \"9\"\n            - \"19\"\n          description: |\n            Code | Text | Description\n            -- | -- | --\n            0 | Success | The request was successfully accepted by Vonage.\n            1 | Throttled | You are trying to send more than the maximum of 30 requests per second.\n            2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.\n            3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.\n            4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.\n            5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.\n            6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.\n            8 | The api_key you supplied is for an account that has been barred from submitting messages. |\n            9 | Partner quota exceeded | Your account does not have sufficient credit to process this request.\n            19 | For `cancel`: Either you have not waited at least 30 secs after sending a Verify request before cancelling or Verify has made too many attempts to deliver the verification code for this request and you must now wait for the process to complete. For `trigger_next_event`: All attempts to deliver the verification code for this request have completed and there are no remaining events to advance to.\n        error_text:\n          type: string\n          description: If the `status` is non-zero, this explains the error encountered.\n          example: \"The requestId 'abcdef0123456789abcdef' does not exist or its no longer active.\"\n",
			"canonicalURL": "/github.com/Nexmo/nexmo-oas-renderer@d655f943ea0ff0dcae56a3b34228a971798aa877/-/blob/samples/verify.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Nexmo/nexmo-oas-renderer/blob/d655f943ea0ff0dcae56a3b34228a971798aa877/samples/verify.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}