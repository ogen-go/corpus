{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microsoft/secure-data-sandbox"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "packages/laboratory/openapi.yml",
			"byteSize": 9125,
			"content": "openapi: 3.0.2\ninfo:\n  title: secure-data-sandbox\n  version: 0.0.1\n  license:\n    name: MIT\n    url: https://github.com/microsoft/secure-data-sandbox/blob/main/LICENSE\n  contact:\n    name: microsoft/secure-data-sandbox\n    url: https://github.com/microsoft/secure-data-sandbox\n  description: A toolkit for conducting machine learning trials against confidential data\ntags:\n- name: Benchmarks\n- name: Suites\n- name: Candidates\n- name: Runs\npaths:\n  /benchmarks:\n    get:\n      tags: [Benchmarks]\n      responses:\n        200:\n          description: Get all benchmarks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IBenchmark\"\n  /benchmarks/{name}:\n    parameters:\n    - name: name\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      tags: [Benchmarks]\n      responses:\n        200:\n          description: Get a benchmark\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IBenchmark\"\n    put:\n      tags: [Benchmarks]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IBenchmark\"\n      responses:\n        200:\n          description: Create or update a benchmark\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IBenchmark\"\n  /suites:\n    get:\n      tags: [Suites]\n      responses:\n        200:\n          description: Get all suites\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ISuite\"\n  /suites/{name}:\n    parameters:\n    - name: name\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      tags: [Suites]\n      responses:\n        200:\n          description: Get a suite\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ISuite\"\n    put:\n      tags: [Suites]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ISuite\"\n      responses:\n        200:\n          description: Create or update a suite\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ISuite\"\n  /candidates:\n    get:\n      tags: [Candidates]\n      responses:\n        200:\n          description: Get all candidates\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ICandidate\"\n  /candidates/{name}:\n    parameters:\n    - name: name\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      tags: [Candidates]\n      responses:\n        200:\n          description: Get a candidate\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ICandidate\"\n    put:\n      tags: [Candidates]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ICandidate\"\n      responses:\n        200:\n          description: Create or update a candidate\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ICandidate\"\n  /runs:\n    get:\n      tags: [Runs]\n      responses:\n        200:\n          description: Get runs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IRun\"\n    post:\n      tags: [Runs]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IRunRequest\"\n      responses:\n        202:\n          description: Schedule a run\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IRun\"\n  /runs/results:\n    get:\n      tags: [Runs]\n      parameters:\n      - name: benchmark\n        in: query\n        schema:\n          type: string\n        required: true\n      - name: suite\n        in: query\n        schema:\n          type: string\n        required: true\n      responses:\n        200:\n          description: Get run results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IResult\"\n  /runs/{name}:\n    parameters:\n    - name: name\n      in: path\n      required: true\n      schema:\n        type: string\n    get:\n      tags: [Runs]\n      responses:\n        200:\n          description: Get a single run\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IRun\"\n    patch:\n      tags: [Runs]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRunStatus\"\n      responses:\n        204:\n          description: Update a Run\n  /runs/{name}/results:\n    parameters:\n    - name: name\n      in: path\n      required: true\n      schema:\n        type: string\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReportRunResults\"\n      tags: [Runs]\n      responses:\n        204:\n          description: Add results to a run\ncomponents:\n  schemas:\n    IEntityBase:\n      type: object\n      properties:\n        name:\n          type: string\n        author:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      required:\n      - name\n      - author\n    PipelineStage:\n      type: object\n      properties:\n        name:\n          type: string\n        kind:\n          type: string\n          enum:\n          - candidate\n          - container\n        image:\n          type: string\n        volumes:\n          type: array\n          items:\n            type: object\n            properties:\n              volume:\n                type: string\n              path:\n                type: string\n            required:\n            - volume\n            - path\n      required:\n      - name\n      - kind\n    IBenchmark:\n      type: object\n      allOf:\n      - $ref: \"#/components/schemas/IEntityBase\"\n      properties:\n        stages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PipelineStage\"\n      required: \n      - stages\n    ISuite:\n      type: object\n      allOf:\n      - $ref: \"#/components/schemas/IEntityBase\"\n      properties:\n        benchmark:\n          type: string\n        volumes:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              type:\n                type: string\n              target:\n                type: string\n            required:\n            - name\n            - type\n            - target\n      required: \n      - benchmark\n      - volumes\n    ICandidate:\n      type: object\n      allOf:\n      - $ref: \"#/components/schemas/IEntityBase\"\n      properties:\n        benchmark:\n          type: string\n        image:\n          type: string\n      required: \n      - benchmark\n      - image\n    IRun:\n      type: object\n      allOf:\n      - $ref: \"#/components/schemas/IEntityBase\"\n      properties:\n        benchmark:\n          $ref: \"#/components/schemas/IBenchmark\"\n        suite:\n          $ref: \"#/components/schemas/ISuite\"\n        candidate:\n          $ref: \"#/components/schemas/ICandidate\"\n        blob:\n          type: string\n        status:\n          $ref: \"#/components/schemas/RunStatus\"\n      required:\n      - benchmark\n      - suite\n      - candidate\n      - blob\n      - status\n    IRunRequest:\n      type: object\n      properties:\n        candidate:\n          type: string\n        suite:\n          type: string\n      required:\n      - candidate\n      - suite\n    IResult:\n      type: object\n      properties:\n        benchmark:\n          type: string\n        suite:\n          type: string\n        candidate:\n          type: string\n        measures:\n          $ref: \"#/components/schemas/Measures\"\n      required:\n      - benchmark\n      - suite\n      - candidate\n      - measures\n    Measures:\n      type: object\n      additionalProperties: true\n    ReportRunResults:\n      type: object\n      properties:\n        measures:\n          $ref: \"#/components/schemas/Measures\"\n      required:\n      - measures\n    RunStatus:\n      type: string\n      enum:\n      - created\n      - running\n      - completed\n      - failed\n    UpdateRunStatus:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/RunStatus\"\n",
			"canonicalURL": "/github.com/microsoft/secure-data-sandbox@6b6df0781ebab237dface4597986d72293ff26e4/-/blob/packages/laboratory/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/microsoft/secure-data-sandbox/blob/6b6df0781ebab237dface4597986d72293ff26e4/packages/laboratory/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}