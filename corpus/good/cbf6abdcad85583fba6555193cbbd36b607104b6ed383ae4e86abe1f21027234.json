{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/azure.iotcentral/openapi.yaml",
			"byteSize": 78467,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: Azure IoT Central\n    iconPath: \"icon.png\"\n  title: Azure IoT Central\n  description: \u003e\n    This is a generated connector from [Azure IoT Central API v1.0](https://azure.microsoft.com/en-us/services/iot-central/) OpenAPI specification.\n\n    Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create an [Azure  IoT Central account](https://azure.microsoft.com/en-us/services/iot-central/) and obtain OAuth tokens following [this guide](https://docs.microsoft.com/en-us/rest/api/iotcentral/authentication#aad-bearer-token).\n  version: \"1.0\"\npaths:\n  /apiTokens:\n    get:\n      summary: Get the list of API tokens in an application. The token value will\n        never be returned for security reasons.\n      operationId: ApiTokens_List\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiTokenCollection'\n      # x-ms-examples:\n      #   List API tokens:\n      #     $ref: ./examples/apitoken_list.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /apiTokens/{tokenId}:\n    get:\n      summary: Get an API token by ID.\n      operationId: ApiTokens_Get\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: tokenId\n        in: path\n        description: Unique ID for the API token.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiToken'\n      # x-ms-examples:\n      #   Get API token by ID:\n      #     $ref: ./examples/apitoken_get.json\n    put:\n      summary: Create a new API token in the application to use in the IoT Central\n        public API. The token value will be returned in the response, and won't be\n        returned again in subsequent requests.\n      operationId: ApiTokens_Create\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: tokenId\n        in: path\n        description: Unique ID for the API token.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: API token body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApiToken'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiToken'\n      # x-ms-examples:\n      #   Create API token:\n      #     $ref: ./examples/apitoken_create.json\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete an API token.\n      operationId: ApiTokens_Remove\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: tokenId\n        in: path\n        description: Unique ID for the API token.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Success\n          content: {}\n      # x-ms-examples:\n      #   Delete API token:\n      #     $ref: ./examples/apitoken_delete.json\n  /deviceTemplates:\n    get:\n      summary: Get the list of device templates in an application\n      operationId: DeviceTemplates_List\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTemplateCollection'\n      # x-ms-examples:\n      #   List device templates:\n      #     $ref: ./examples/devicetemplates_list.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /deviceTemplates/{deviceTemplateId}:\n    get:\n      summary: Get a device template by ID\n      operationId: DeviceTemplates_Get\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceTemplateId\n        in: path\n        description: Digital Twin Model Identifier of the device template, [More Details](https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md#digital-twin-model-identifier)\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTemplate'\n      # x-ms-examples:\n      #   Get a device template by Id:\n      #     $ref: ./examples/devicetemplates_get.json\n    put:\n      summary: Publish a new device template. Default views will be automatically\n        generated for new device templates created this way.\n      operationId: DeviceTemplates_Create\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceTemplateId\n        in: path\n        description: Digital Twin Model Identifier of the device template, [More Details](https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md#digital-twin-model-identifier)\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device template body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceTemplate'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTemplate'\n      # x-ms-examples:\n      #   Create a device template:\n      #     $ref: ./examples/devicetemplates_create.json\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a device template\n      description: Delete an existing device template by device ID.\n      operationId: DeviceTemplates_Remove\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceTemplateId\n        in: path\n        description: Digital Twin Model Identifier of the device template, [More Details](https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md#digital-twin-model-identifier)\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        204:\n          description: Success\n          content: {}\n      # x-ms-examples:\n      #   Delete a device template by Id:\n      #     $ref: ./examples/devicetemplates_delete.json\n    patch:\n      summary: Update the cloud properties and overrides of an existing device template\n        via patch.\n      operationId: DeviceTemplates_Update\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceTemplateId\n        in: path\n        description: Digital Twin Model Identifier of the device template, [More Details](https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md#digital-twin-model-identifier)\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device template patch body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTemplate'\n      # x-ms-examples:\n      #   Update a device template:\n      #     $ref: ./examples/devicetemplates_create.json\n      x-codegen-request-body-name: body\n  /devices:\n    get:\n      summary: Get the list of devices in an application\n      operationId: Devices_List\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCollection'\n      # x-ms-examples:\n      #   List devices:\n      #     $ref: ./examples/devices_list.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /devices/{deviceId}:\n    get:\n      summary: Get a device by ID\n      description: Get details about an existing device by device ID.\n      operationId: Devices_Get\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n      # x-ms-examples:\n      #   Get device by Id:\n      #     $ref: ./examples/devices_get.json\n    put:\n      summary: Create or update a device\n      description: Create a new device.\n      operationId: Devices_Create\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Device'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n      # x-ms-examples:\n      #   Create device:\n      #     $ref: ./examples/devices_create.json\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a device\n      description: Delete an existing device by device ID.\n      operationId: Devices_Remove\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        204:\n          description: Success\n          content: {}\n      # x-ms-examples:\n      #   Delete device:\n      #     $ref: ./examples/devices_delete.json\n    patch:\n      summary: Update a device via patch\n      description: Update an existing device by ID.\n      operationId: Devices_Update\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device patch body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n      # x-ms-examples:\n      #   Update device:\n      #     $ref: ./examples/devices_update.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/attestation:\n    get:\n      summary: Get device attestation\n      operationId: Devices_GetAttestation\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attestation'\n      # x-ms-examples:\n      #   Get device attestation:\n      #     $ref: ./examples/devices_attestations_get.json\n    put:\n      summary: Create an individual device attestation\n      operationId: Devices_CreateAttestation\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Individual device attestation body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Attestation'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attestation'\n      # x-ms-examples:\n      #   Create or update device attestation - Symmetric Key:\n      #     $ref: ./examples/devices_attestations_set_symmetricKey.json\n      #   Create or update device attestation - TPM:\n      #     $ref: ./examples/devices_attestations_set_tpm.json\n      #   Create or update device attestation - X509:\n      #     $ref: ./examples/devices_attestations_set_x509.json\n      x-codegen-request-body-name: body\n    delete:\n      summary: Remove an individual device attestation\n      operationId: Devices_RemoveAttestation\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        204:\n          description: Success\n          content: {}\n      # x-ms-examples:\n      #   Delete device attestation:\n      #     $ref: ./examples/devices_attestations_delete.json\n    patch:\n      summary: Update an individual device attestation via patch\n      operationId: Devices_UpdateAttestation\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Individual device attestation patch body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n          application/json-patch+json:\n            schema:\n              type: object\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attestation'\n      # x-ms-examples:\n      #   Update device attestation - Symmetric Key:\n      #     $ref: ./examples/devices_attestations_set_symmetricKey.json\n      #   Update device attestation - TPM:\n      #     $ref: ./examples/devices_attestations_set_tpm.json\n      #   Update device attestation - X509:\n      #     $ref: ./examples/devices_attestations_set_x509.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/commands/{commandName}:\n    get:\n      summary: Get device command history\n      operationId: Devices_GetCommandHistory\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommandCollection'\n      # x-ms-examples:\n      #   Get command history:\n      #     $ref: ./examples/devices_commandshistory_get.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n    post:\n      summary: Run a device command\n      description: Run a command on a device.\n      operationId: Devices_RunCommand\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device command body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceCommand'\n        required: true\n      responses:\n        201:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommand'\n      # x-ms-examples:\n      #   Send command:\n      #     $ref: ./examples/devices_commands_send.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/components:\n    get:\n      summary: List the components present in a device\n      operationId: Devices_ListComponents\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collection'\n      # x-ms-examples:\n      #   List components:\n      #     $ref: ./examples/devices_components_get.json\n  /devices/{deviceId}/components/{componentName}/commands/{commandName}:\n    get:\n      summary: Get component command history\n      operationId: Devices_GetComponentCommandHistory\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommandCollection'\n      # x-ms-examples:\n      #   Get command history:\n      #     $ref: ./examples/devices_commandshistory_get.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n    post:\n      summary: Run a component command\n      description: Run a command on a component.\n      operationId: Devices_RunComponentCommand\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device command body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceCommand'\n        required: true\n      responses:\n        201:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommand'\n      # x-ms-examples:\n      #   Send command:\n      #     $ref: ./examples/devices_commands_send.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/components/{componentName}/properties:\n    get:\n      summary: Get device properties for a specific component\n      operationId: Devices_GetComponentProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Get properties on components:\n      #     $ref: ./examples/devices_properties_components_get.json\n    put:\n      summary: Replace device properties for a specific component\n      operationId: Devices_ReplaceComponentProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device properties.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceProperties'\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties on components:\n      #     $ref: ./examples/devices_properties_components_set.json\n      x-codegen-request-body-name: body\n    patch:\n      summary: Update device properties for a specific component via patch\n      operationId: Devices_UpdateComponentProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device properties patch.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n          application/json-patch+json:\n            schema:\n              type: object\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties on components:\n      #     $ref: ./examples/devices_properties_components_set.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/components/{componentName}/telemetry/{telemetryName}:\n    get:\n      summary: Get component telemetry value\n      description: Get the last telemetry value from a component.\n      operationId: Devices_GetComponentTelemetryValue\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: telemetryName\n        in: path\n        description: Name of this device telemetry.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTelemetry'\n      # x-ms-examples:\n      #   Get telemetry:\n      #     $ref: ./examples/devices_telemetry_get.json\n  /devices/{deviceId}/credentials:\n    get:\n      summary: Get device credentials\n      operationId: Devices_GetCredentials\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCredentials'\n      # x-ms-examples:\n      #   Get device credentials:\n      #     $ref: ./examples/devicecredentials_get.json\n  /devices/{deviceId}/modules:\n    get:\n      summary: List the modules present in a device\n      operationId: Devices_ListModules\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collection'\n      # x-ms-examples:\n      #   List modules:\n      #     $ref: ./examples/devices_modules_get.json\n  /devices/{deviceId}/modules/{moduleName}/commands/{commandName}:\n    get:\n      summary: Get module command history\n      operationId: Devices_GetModuleCommandHistory\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommandCollection'\n      # x-ms-examples:\n      #   Get command history within module:\n      #     $ref: ./examples/modules_commandshistory_get.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n    post:\n      summary: Run a module command\n      description: Run a command on a module.\n      operationId: Devices_RunModuleCommand\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device command body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceCommand'\n        required: true\n      responses:\n        201:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommand'\n      # x-ms-examples:\n      #   Send command to module:\n      #     $ref: ./examples/modules_commands_send.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/modules/{moduleName}/components:\n    get:\n      summary: List the components present in a module\n      operationId: Devices_ListModuleComponents\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collection'\n      # x-ms-examples:\n      #   List module components:\n      #     $ref: ./examples/devices_modules_components_get.json\n  /devices/{deviceId}/modules/{moduleName}/components/{componentName}/commands/{commandName}:\n    get:\n      summary: Get module component command history\n      operationId: Devices_GetModuleComponentCommandHistory\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommandCollection'\n      # x-ms-examples:\n      #   Get command history within module:\n      #     $ref: ./examples/modules_commandshistory_get.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n    post:\n      summary: Run a module component command\n      description: Run a command on a module.\n      operationId: Devices_RunModuleComponentCommand\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: commandName\n        in: path\n        description: Name of this device command.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device command body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceCommand'\n        required: true\n      responses:\n        201:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCommand'\n      # x-ms-examples:\n      #   Send command to module:\n      #     $ref: ./examples/modules_commands_send.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/modules/{moduleName}/components/{componentName}/properties:\n    get:\n      summary: Get module properties for a specific component\n      operationId: Devices_GetModuleComponentProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Get properties of a module:\n      #     $ref: ./examples/modules_properties_components_get.json\n    put:\n      summary: Replace module properties for a specific component\n      operationId: Devices_ReplaceModuleComponentProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Module properties.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceProperties'\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties of a module within a component:\n      #     $ref: ./examples/modules_properties_components_set.json\n      x-codegen-request-body-name: body\n    patch:\n      summary: Update module properties for a specific component via patch\n      operationId: Devices_UpdateModuleComponentProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Module properties patch.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n          application/json-patch+json:\n            schema:\n              type: object\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties of a module within a component:\n      #     $ref: ./examples/modules_properties_components_set.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/modules/{moduleName}/components/{componentName}/telemetry/{telemetryName}:\n    get:\n      summary: Get module component telemetry value\n      description: Get the last telemetry value from a module component.\n      operationId: Devices_GetModuleComponentTelemetryValue\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: componentName\n        in: path\n        description: Name of the device component.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: telemetryName\n        in: path\n        description: Name of this device telemetry.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTelemetry'\n      # x-ms-examples:\n      #   Get telemetry from module:\n      #     $ref: ./examples/modules_telemetry_get.json\n  /devices/{deviceId}/modules/{moduleName}/properties:\n    get:\n      summary: Get module properties\n      description: Get all property values of a module.\n      operationId: Devices_GetModuleProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Get properties of a module:\n      #     $ref: ./examples/modules_properties_get.json\n    put:\n      summary: Replace module properties\n      description: Replace all property values of a module.\n      operationId: Devices_ReplaceModuleProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Module properties.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceProperties'\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties of a module:\n      #     $ref: ./examples/modules_properties_update.json\n      x-codegen-request-body-name: body\n    patch:\n      summary: Update module properties via patch\n      description: Update property values of a module.\n      operationId: Devices_UpdateModuleProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Module properties patch.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n          application/json-patch+json:\n            schema:\n              type: object\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties of a module:\n      #     $ref: ./examples/modules_properties_update.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/modules/{moduleName}/telemetry/{telemetryName}:\n    get:\n      summary: Get module telemetry value\n      description: Get the last telemetry value from a module.\n      operationId: Devices_GetModuleTelemetryValue\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: moduleName\n        in: path\n        description: Name of the device module.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: telemetryName\n        in: path\n        description: Name of this device telemetry.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTelemetry'\n      # x-ms-examples:\n      #   Get telemetry from module:\n      #     $ref: ./examples/modules_telemetry_get.json\n  /devices/{deviceId}/properties:\n    get:\n      summary: Get device properties\n      description: Get all property values of a device by device ID.\n      operationId: Devices_GetProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Get properties:\n      #     $ref: ./examples/devices_properties_get.json\n    put:\n      summary: Replace device properties\n      description: Replace all property values of a device by device ID.\n      operationId: Devices_ReplaceProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device properties.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceProperties'\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties:\n      #     $ref: ./examples/devices_properties_update.json\n      x-codegen-request-body-name: body\n    patch:\n      summary: Update device properties via patch\n      description: Update property values of a device by device ID.\n      operationId: Devices_UpdateProperties\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      requestBody:\n        description: Device properties patch.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n          application/json-patch+json:\n            schema:\n              type: object\n        required: true\n      responses:\n        202:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceProperties'\n      # x-ms-examples:\n      #   Update properties:\n      #     $ref: ./examples/devices_properties_update.json\n      x-codegen-request-body-name: body\n  /devices/{deviceId}/telemetry/{telemetryName}:\n    get:\n      summary: Get device telemetry value\n      description: Get the last telemetry value from a device.\n      operationId: Devices_GetTelemetryValue\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: deviceId\n        in: path\n        description: Unique ID of the device.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      - name: telemetryName\n        in: path\n        description: Name of this device telemetry.\n        required: true\n        schema:\n          type: string\n          x-ms-parameter-location: method\n        x-ms-parameter-location: method\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceTelemetry'\n      # x-ms-examples:\n      #   Get telemetry:\n      #     $ref: ./examples/devices_telemetry_get.json\n  /roles:\n    get:\n      summary: Get the list of roles in an application.\n      operationId: Roles_List\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleCollection'\n      # x-ms-examples:\n      #   List roles:\n      #     $ref: ./examples/roles_list.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /roles/{roleId}:\n    get:\n      summary: Get a role by ID.\n      operationId: Roles_Get\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: roleId\n        in: path\n        description: Unique ID for the role.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n      # x-ms-examples:\n      #   Get role by Id:\n      #     $ref: ./examples/roles_get.json\n  /users:\n    get:\n      summary: Get the list of users in an application\n      operationId: Users_List\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCollection'\n      # x-ms-examples:\n      #   List users:\n      #     $ref: ./examples/users_list.json\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /users/{userId}:\n    get:\n      summary: Get a user by ID\n      operationId: Users_Get\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: userId\n        in: path\n        description: Unique ID of the user.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      # x-ms-examples:\n      #   Get a user by ID:\n      #     $ref: ./examples/users_get.json\n    put:\n      summary: Create a user in the application\n      operationId: Users_Create\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: userId\n        in: path\n        description: Unique ID of the user.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: User body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      # x-ms-examples:\n      #   Add or update a service principal user:\n      #     $ref: ./examples/users_set_serviceprincipal.json\n      #   Add or update an email user:\n      #     $ref: ./examples/users_set.json\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a user\n      operationId: Users_Remove\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: userId\n        in: path\n        description: Unique ID of the user.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Success\n          content: {}\n      # x-ms-examples:\n      #   Delete a user:\n      #     $ref: ./examples/users_delete.json\n    patch:\n      summary: Update a user in the application via patch\n      operationId: Users_Update\n      parameters:\n      - name: api-version\n        in: query\n        description: The version of the API being called.\n        required: true\n        schema:\n          type: string\n          default: \"1.0\"\n          x-ms-parameter-location: client\n        x-ms-parameter-location: client\n      - name: userId\n        in: path\n        description: Unique ID of the user.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: User patch body.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      # x-ms-examples:\n      #   Update a service principal user:\n      #     $ref: ./examples/users_set_serviceprincipal.json\n      #   Update an email user:\n      #     $ref: ./examples/users_set.json\n      x-codegen-request-body-name: body\ncomponents:\n  schemas:\n    ApiToken:\n      allOf:\n      - $ref: '#/components/schemas/Permission'\n    ApiTokenCollection:\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          type: array\n          description: The collection of API tokens.\n          items:\n            $ref: '#/components/schemas/ApiToken'\n        nextLink:\n          type: string\n          description: URL to get the next page of API tokens.\n    Attestation:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: Type of the attestation.\n      discriminator:\n        propertyName: type\n    Collection:\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          type: array\n          description: The collection of entities.\n          items:\n            type: object\n            properties: {}\n        nextLink:\n          type: string\n          description: URL to get the next page of entities.\n    Device:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID of the device.\n          readOnly: true\n        etag:\n          type: string\n          description: ETag used to prevent conflict in device updates.\n        displayName:\n          type: string\n          description: Display name of the device.\n        template:\n          type: string\n          description: The device template definition for the device.\n        enabled:\n          type: boolean\n          description: Whether the device connection to IoT Central has been enabled.\n        provisioned:\n          type: boolean\n          description: Whether resources have been allocated for the device.\n          readOnly: true\n        simulated:\n          type: boolean\n          description: Whether the device is simulated.\n    DeviceCollection:\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          type: array\n          description: The collection of devices.\n          items:\n            $ref: '#/components/schemas/Device'\n        nextLink:\n          type: string\n          description: URL to get the next page of devices.\n    DeviceCommand:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The request ID of the device command execution.\n          readOnly: true\n        connectionTimeout:\n          maximum: 3E+1\n          minimum: 0\n          type: integer\n          description: Connection timeout in seconds to wait for a disconnected device\n            to come online. Defaults to 0 seconds.\n        responseTimeout:\n          maximum: 3E+1\n          minimum: 5\n          type: integer\n          description: Response timeout in seconds to wait for a command completion\n            on a device. Defaults to 30 seconds.\n        request:\n          type: object\n          description: The payload for the device command.\n        response:\n          type: object\n          description: The payload of the device command response.\n          readOnly: true\n        responseCode:\n          type: integer\n          description: The status code of the device command response.\n          readOnly: true\n    DeviceCommandCollection:\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          type: array\n          description: The collection of device command executions.\n          items:\n            $ref: '#/components/schemas/DeviceCommand'\n        nextLink:\n          type: string\n          description: URL to get the next page of device command executions.\n    DeviceCredentials:\n      required:\n      - idScope\n      type: object\n      properties:\n        idScope:\n          type: string\n          description: ID scope for connecting to the IoT Central application.\n        symmetricKey:\n          $ref: '#/components/schemas/SymmetricKey'\n        x509:\n          $ref: '#/components/schemas/X509'\n        tpm:\n          $ref: '#/components/schemas/Tpm'\n    DeviceProperties:\n      type: object\n      description: Property values associated with the device.\n    DeviceTelemetry:\n      type: object\n      properties:\n        value:\n          type: object\n          description: The last known value of this device telemetry.\n        timestamp:\n          type: string\n          description: String-formatted date representing the time when the telemetry\n            value was sent.\n          format: date-time\n    DeviceTemplate:\n      required:\n      - '@type'\n      - capabilityModel\n      type: object\n      properties:\n        '@id':\n          type: string\n          description: Unique ID of the device template.\n          readOnly: true\n        '@type':\n          type: array\n          description: The JSON-LD types of this device template.\n          items:\n            type: string\n        etag:\n          type: string\n          description: ETag used to prevent conflict in device template updates.\n        displayName:\n          type: string\n          description: Display name of the device template.\n        description:\n          type: string\n          description: Detailed description of the device template.\n        capabilityModel:\n          type: object\n          properties: {}\n          description: The capability model utilized by this device template.\n    Payload:\n      type: object\n    DeviceTemplateCollection:\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          type: array\n          description: The collection of device templates.\n          items:\n            $ref: '#/components/schemas/DeviceTemplate'\n        nextLink:\n          type: string\n          description: URL to get the next page of device templates.\n    EmailUser:\n      allOf:\n      - $ref: '#/components/schemas/User'\n      x-ms-discriminator-value: email\n    Permission:\n      required:\n      - roles\n      type: object\n      properties:\n        roles:\n          minItems: 1\n          type: array\n          description: List of role assignments that specify the permissions to access\n            the application.\n          items:\n            $ref: '#/components/schemas/RoleAssignment'\n    Role:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID of the role.\n          readOnly: true\n        displayName:\n          type: string\n          description: Display name of the role.\n    RoleAssignment:\n      required:\n      - role\n      type: object\n      properties:\n        role:\n          type: string\n          description: ID of the role for this role assignment.\n    RoleCollection:\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          type: array\n          description: The collection of roles.\n          items:\n            $ref: '#/components/schemas/Role'\n        nextLink:\n          type: string\n          description: URL to get the next page of roles.\n    ServicePrincipalUser:\n      allOf:\n      - $ref: '#/components/schemas/User'\n      x-ms-discriminator-value: servicePrincipal\n    SymmetricKey:\n      required:\n      - primaryKey\n      - secondaryKey\n      type: object\n      properties:\n        primaryKey:\n          type: string\n          description: The primary key for this credential.\n        secondaryKey:\n          type: string\n          description: The secondary key for this credential.\n    SymmetricKeyAttestation:\n      allOf:\n      - $ref: '#/components/schemas/Attestation'\n      x-ms-discriminator-value: symmetricKey\n    Tpm:\n      required:\n      - endorsementKey\n      type: object\n      properties:\n        endorsementKey:\n          type: string\n          description: The TPM endorsement key for this credential.\n    TpmAttestation:\n      allOf:\n      - $ref: '#/components/schemas/Attestation'\n      x-ms-discriminator-value: tpm\n    User:\n      allOf:\n      - $ref: '#/components/schemas/Permission'\n    UserCollection:\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          type: array\n          description: The collection of users.\n          items:\n            $ref: '#/components/schemas/User'\n        nextLink:\n          type: string\n          description: URL to get the next page of users.\n    X509:\n      type: object\n      properties:\n        clientCertificates:\n          $ref: '#/components/schemas/X509Certificates'\n    X509Attestation:\n      allOf:\n      - $ref: '#/components/schemas/Attestation'\n      x-ms-discriminator-value: x509\n    X509Certificate:\n      type: object\n      properties:\n        certificate:\n          type: string\n          description: The string representation of this certificate.\n        info:\n          $ref: '#/components/schemas/X509CertificateInfo'\n    X509CertificateInfo:\n      required:\n      - sha1Thumbprint\n      type: object\n      properties:\n        sha1Thumbprint:\n          type: string\n          description: The SHA-1 hash value of the certificate.\n    X509Certificates:\n      required:\n      - primary\n      type: object\n      properties:\n        primary:\n          $ref: '#/components/schemas/X509Certificate'\n        secondary:\n          $ref: '#/components/schemas/X509Certificate'\n  parameters:\n    BaseDomain:\n      name: baseDomain\n      in: path\n      description: The base domain for all Azure IoT Central service requests.\n      required: true\n      schema:\n        type: string\n        default: azureiotcentral.com\n        x-ms-parameter-location: client\n        x-ms-skip-url-encoding: true\n      x-ms-parameter-location: client\n      x-ms-skip-url-encoding: true\n    CommandName:\n      name: commandName\n      in: path\n      description: Name of this device command.\n      required: true\n      schema:\n        type: string\n        x-ms-parameter-location: method\n      x-ms-parameter-location: method\n    ComponentName:\n      name: componentName\n      in: path\n      description: Name of the device component.\n      required: true\n      schema:\n        type: string\n        x-ms-parameter-location: method\n      x-ms-parameter-location: method\n    DeviceId:\n      name: deviceId\n      in: path\n      description: Unique ID of the device.\n      required: true\n      schema:\n        type: string\n        x-ms-parameter-location: method\n      x-ms-parameter-location: method\n    DeviceTemplateId:\n      name: deviceTemplateId\n      in: path\n      description: Digital Twin Model Identifier of the device template, [More Details](https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md#digital-twin-model-identifier)\n      required: true\n      schema:\n        type: string\n        x-ms-parameter-location: method\n      x-ms-parameter-location: method\n    ModuleName:\n      name: moduleName\n      in: path\n      description: Name of the device module.\n      required: true\n      schema:\n        type: string\n        x-ms-parameter-location: method\n      x-ms-parameter-location: method\n    Subdomain:\n      name: subdomain\n      in: path\n      description: The application subdomain.\n      required: true\n      schema:\n        type: string\n        x-ms-parameter-location: client\n      x-ms-parameter-location: client\n    TelemetryName:\n      name: telemetryName\n      in: path\n      description: Name of this device telemetry.\n      required: true\n      schema:\n        type: string\n        x-ms-parameter-location: method\n      x-ms-parameter-location: method\n    Version:\n      name: api-version\n      in: query\n      description: The version of the API being called.\n      required: true\n      schema:\n        type: string\n        default: \"1.0\"\n        x-ms-parameter-location: client\n      x-ms-parameter-location: client\n  securitySchemes:\n    azure_auth:\n      type: oauth2\n      description: Azure Active Directory OAuth2 Flow\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n# x-ms-parameterized-host:\n#   hostTemplate: '{subdomain}.{baseDomain}'\n#   parameters:\n#   - $ref: '#/parameters/BaseDomain'\n#   - $ref: '#/parameters/Subdomain'\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/azure.iotcentral/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/azure.iotcentral/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}