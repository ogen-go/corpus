{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/springframeworkguru/spring-cloud-contract-oa3"
		},
		"file": {
			"name": "contract_matchers.yml",
			"size": 0,
			"path": "src/test/resources/openapi/contract_matchers.yml",
			"byteSize": 10737,
			"content": "openapi: \"3.0.0\"\ninfo:\n    description: Contract Matchers Test\n    version: \"1.0.0\"\npaths:\n    /get/1:\n        get:\n            x-contracts:\n                -   contractId: 1\n                    name: Contract Matchers Test\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: string\n                x-contracts:\n                     -  contractId: 1\n                        headers:\n                            Content-Type: application/json\n                        cookies:\n                            foo: 2\n                            bar: 3\n                        queryParameters:\n                            limit: 10\n                            offset: 20\n                            filter: 'email'\n                            sort: name\n                            search: 55\n                            age: 99\n                            name: John.Doe\n                            email: 'bob@email.com'\n                        body:\n                            duck: 123\n                            alpha: \"abc\"\n                            number: 123\n                            aBoolean: true\n                            date: \"2017-01-01\"\n                            dateTime: \"2017-01-01T01:23:45\"\n                            time: \"01:02:34\"\n                            valueWithoutAMatcher: \"foo\"\n                            valueWithTypeMatch: \"string\"\n                            key:\n                                \"complex.key\": 'foo'\n                            nullValue: null\n                            valueWithMin:\n                                - 1\n                                - 2\n                                - 3\n                            valueWithMax:\n                                - 1\n                                - 2\n                                - 3\n                            valueWithMinMax:\n                                - 1\n                                - 2\n                                - 3\n                            valueWithMinEmpty: []\n                            valueWithMaxEmpty: []\n                        matchers:\n                            url:\n                                regex: /get/[0-9]\n                                # predefined:\n                                # execute a method\n                                #command: 'equals($it)'\n                            queryParameters:\n                                -   key: limit\n                                    type: equal_to\n                                    value: 20\n                                -   key: offset\n                                    type: containing\n                                    value: 20\n                                -   key: sort\n                                    type: equal_to\n                                    value: name\n                                -   key: search\n                                    type: not_matching\n                                    value: '^[0-9]{2}$'\n                                -   key: age\n                                    type: not_matching\n                                    value: '^\\\\w*$'\n                                -   key: name\n                                    type: matching\n                                    value: 'John.*'\n                                -   key: hello\n                                    type: absent\n                            cookies:\n                                -   key: foo\n                                    regex: '[0-9]'\n                                -   key: bar\n                                    command: 'equals($it)'\n                            headers:\n                                -   key: Content-Type\n                                    regex: \"application/json.*\"\n                            body:\n                                -   path: $.duck\n                                    type: by_regex\n                                    value: \"[0-9]{3}\"\n                                -   path: $.duck\n                                    type: by_equality\n                                -   path: $.alpha\n                                    type: by_regex\n                                    predefined: only_alpha_unicode\n                                -   path: $.alpha\n                                    type: by_equality\n                                -   path: $.number\n                                    type: by_regex\n                                    predefined: number\n                                -   path: $.aBoolean\n                                    type: by_regex\n                                    predefined: any_boolean\n                                -   path: $.date\n                                    type: by_date\n                                -   path: $.dateTime\n                                    type: by_timestamp\n                                -   path: $.time\n                                    type: by_time\n                                -   path: \"$.['key'].['complex.key']\"\n                                    type: by_equality\n                                -   path: $.nullvalue\n                                    type: by_null\n                                -   path: $.valueWithMin\n                                    type: by_type\n                                    minOccurrence: 1\n                                -   path: $.valueWithMax\n                                    type: by_type\n                                    maxOccurrence: 3\n                                -   path: $.valueWithMinMax\n                                    type: by_type\n                                    minOccurrence: 1\n                                    maxOccurrence: 3\n            responses:\n                '200':\n                    description: Good repsonse\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                    x-contracts:\n                        -   contractId: 1\n                            cookies:\n                                foo: 1\n                                bar: 2\n                            body:\n                                duck: 123\n                                alpha: \"abc\"\n                                number: 123\n                                aBoolean: true\n                                date: \"2017-01-01\"\n                                dateTime: \"2017-01-01T01:23:45\"\n                                time: \"01:02:34\"\n                                valueWithoutAMatcher: \"foo\"\n                                valueWithTypeMatch: \"string\"\n                                valueWithMin:\n                                    - 1\n                                    - 2\n                                    - 3\n                                valueWithMax:\n                                    - 1\n                                    - 2\n                                    - 3\n                                valueWithMinMax:\n                                    - 1\n                                    - 2\n                                    - 3\n                                valueWithMinEmpty: []\n                                valueWithMaxEmpty: []\n                                key:\n                                    'complex.key': 'foo'\n                                nulValue: null\n                            matchers:\n                                headers:\n                                    -   key: Content-Type\n                                        regex: \"application/json.*\"\n                                cookies:\n                                    -   key: foo\n                                        regex: '[0-9]'\n                                    -   key: bar\n                                        command: 'equals($it)'\n                                body:\n                                    -   path: $.duck\n                                        type: by_regex\n                                        value: \"[0-9]{3}\"\n                                    -   path: $.duck\n                                        type: by_equality\n                                    -   path: $.alpha\n                                        type: by_regex\n                                        predefined: only_alpha_unicode\n                                    -   path: $.alpha\n                                        type: by_equality\n                                    -   path: $.number\n                                        type: by_regex\n                                        predefined: number\n                                    -   path: $.aBoolean\n                                        type: by_regex\n                                        predefined: any_boolean\n                                    -   path: $.date\n                                        type: by_date\n                                    -   path: $.dateTime\n                                        type: by_timestamp\n                                    -   path: $.time\n                                        type: by_time\n                                    -   path: $.valueWithTypeMatch\n                                        type: by_type\n                                    -   path: $.valueWithMin\n                                        type: by_type\n                                        minOccurrence: 1\n                                    -   path: $.valueWithMax\n                                        type: by_type\n                                        maxOccurrence: 3\n                                    -   path: $.valueWithMinMax\n                                        type: by_type\n                                        minOccurrence: 1\n                                        maxOccurrence: 3\n                                    -   path: $.valueWithMinEmpty\n                                        type: by_type\n                                        minOccurrence: 0\n                                    -   path: $.valueWithMaxEmpty\n                                        type: by_type\n                                        maxOccurrence: 0\n                                    -   path: $.duck\n                                        type: by_command\n                                        value: assertThatValueIsANumber($it)\n                                    -   path: $.nullValue\n                                        type: by_null\n                                        value: null\n                            headers:\n                                Content-Type: application/json",
			"canonicalURL": "/github.com/springframeworkguru/spring-cloud-contract-oa3@20cec69a6f9b7e37d2a11e6e8b7469e73f513630/-/blob/src/test/resources/openapi/contract_matchers.yml",
			"externalURLs": [
				{
					"url": "https://github.com/springframeworkguru/spring-cloud-contract-oa3/blob/20cec69a6f9b7e37d2a11e6e8b7469e73f513630/src/test/resources/openapi/contract_matchers.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}