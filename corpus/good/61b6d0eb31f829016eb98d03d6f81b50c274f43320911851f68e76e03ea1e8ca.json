{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CloudMailin/docs.cloudmailin.com"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "api.yml",
			"byteSize": 25528,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: CloudMailin API\n  description: |\n    The CloudMailin Core API.\n\n    This is currently for private Beta, if an API key is required please\n    [contact us](https://www.cloudmailin.com/contact_us).\n\n    # Account ID.\n\n    Please note that all endpoint require sending the accountID as part of the URL.\n    This can be found on your account page in the GUI.\n\n    However, for sending email over API this ID is the Username in your SMTP credentials.\n\n    # Rate Limiting\n\n    Calls to the API are limited to 5 calls per minute.\n\n    ## Incoming Statuses\n\n    For some end points this may not be enough, specifically the `incoming_statuses` endpoint\n    returns a fixed number of results and may receive faster than the results can be fetched.\n    Please [contact us](https://www.cloudmailin.com/contact_us) if this is an issue.\n\n  version: 0.1.0\n  contact:\n    name: CloudMailin Support\n    url: https://www.cloudmailin.com/\n  x-logo:\n    url: https://assets.cloudmailin.com/assets/logo_api.png\n    backgroundColor: \"#4d7ABA\"\n    altText: \"CloudMailin logo\"\n\nservers:\n  - url: http://localhost:3000/api/v0.1/{accountID}\n    description: Developement usage\n    variables:\n      accountID:\n        description: Your account identifier\n        default: 21c3976d80ba5e42\n  - url: https://api.cloudmailin.com/api/v0.1/{accountID}\n    description: |\n      The core API server.\n      In future this may be separated for regions and may require updating.\n    variables:\n      accountID:\n        description: |\n          Your account identifier this can be found on the account page.\n\n          Please note that for sending email this is the Server's Username\n        default: aaaaaaaaaaaaaaaa\n\nsecurity:\n  - bearerAPIToken: []\n\ncomponents:\n  securitySchemes:\n    bearerAPIToken:\n      type: http\n      scheme: bearer\n      description: |\n        Authentication uses the `Authorization` HTTP Request header.\n        Your API key can be obtained by contacting CloudMailin support and is tied to a\n        specific account.\n\n        You can actually specify the account token in two ways, the default is:\n\n          `Authorization: Bearer API_TOKEN`\n\n        Additionally it's possible to use HTTP Basic Authentication for this with the key although\n        we only recommend using this if it's not possbile to use the method described above.\n\n    smtpAuth:\n      type: http\n      scheme: bearer\n      description: |\n        This authentication method is used only for the Send Message endpoint.\n        Authentication uses the `Authorization` HTTP Request header.\n        Your API Token for this method can be found with your SMTP settings.\n\n        `Authorization: Bearer SMTP_TOKEN`\n\n  schemas:\n    Address:\n      type: object\n      required:\n        - target\n        - target_format\n      additionalProperties: false\n      properties:\n        id:\n          $ref: \"#/components/schemas/addressID\"\n        target:\n          type: string\n        target_format:\n          type: string\n          enum: [json+n, multipart+n]\n        nickname:\n          type: string\n          nullable: true\n\n    Addresses:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Address\"\n\n    CustomDomain:\n      type: object\n      externalDocs:\n        url: https://docs.cloudmailin.com/receiving_email/custom_domains/\n      required:\n        - domain\n      additionalProperties: false\n      properties:\n        id:\n          $ref: \"#/components/schemas/customDomainID\"\n        domain:\n          type: string\n          example: example.com\n          description: |\n            The domain to receive email on. MX records for the domain must already be set.\n        auth_regex:\n          type: string\n          nullable: true\n          example: allowed[0-9]*@example.com\n        domain_target:\n          type: string\n          nullable: true\n          description: |\n            Domain target changes the address target for this specific Custom Domain.\n            This feature is not available to all accounts.\n          example: https://www.cloudmailin.com/target/201\n\n    CustomDomains:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CustomDomain\"\n\n    IncomingStatus:\n      type: object\n      properties:\n        message_id:\n          type: string\n          description: The message ID.\n          example: CAB=Hge+gC2LqXPu14qy82qPLk0YXcKrLeS7WZ3MPkOJJ-tMkMQ@mail.gmail.com\n          readOnly: true\n          nullable: true\n        to:\n          type: string\n          description: |\n            The message recipient email address.\n            This is the address specified in the SMTP transaction.\n          example: recipient@example.net\n          readOnly: true\n          nullable: true\n        from:\n          type: string\n          description: |\n            The message sender's email address.\n            This is the address specified in the SMTP transaction.\n          example: sender@example.net\n          readOnly: true\n          nullable: true\n        status:\n          type: string\n          description: |\n            The message status.\n            This is normally the HTTP Response code received from the server but may also\n            include server statuses such as client_timeout\n          example: 200\n          readOnly: true\n          nullable: true\n        subject:\n          type: string\n          example: Example Subject Line\n          readOnly: true\n          nullable: true\n        tls:\n          type: string\n          example: TLSv1.3\n          readOnly: true\n          nullable: true\n        # md5:\n        #   type: string\n        #   readOnly: true\n        #   nullable: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n\n    IncomingStatuses:\n      type: array\n      items:\n        $ref: \"#/components/schemas/IncomingStatus\"\n\n    MessageCommon:\n      required:\n        - from\n        - to\n      type: object\n      properties:\n        id:\n          type: string\n          example: 724b9ef2-94ee-4fb0-b722-082204633911\n          format: uuid\n          readOnly: true\n        from:\n          type: string\n          example: Sender Name \u003csender@example.com\u003e\n          description: |\n            The from addrress of the email message.\n            This is the address to be used in the SMTP transaction itself.\n            Although it will be replaced with an address used for bounce handling.\n            This must match a `from:` header in the email headers.\n        to:\n          oneOf:\n            - type: array\n              items:\n                type: string\n              example:\n                - Recipient \u003crecipient@example.com\u003e\n                - Another \u003canother@example.com\u003e\n            - type: string\n              example: Recipient \u003crecipient@example.com\u003e, Another \u003canother@example.com\u003e\n          description: |\n            The To addrress of the email message.\n            This is the address to be used in the SMTP transaction itself.\n            This must match a `To:` header in the email headers.\n        test_mode:\n          type: boolean\n          example: false\n          description: |\n            Whether to send this message in test mode.\n            This will validate the messge but no actually send it if true.\n            If the server is in test mode then it will always be in test mode\n            regardless of this value.\n        subject:\n          type: string\n          example: \"Hello from CloudMailin ðŸ˜ƒ\"\n          description: The subject of the email. This will override any subject set in headers\n            or raw messages.\n        tags:\n          oneOf:\n            - type: array\n              items:\n                type: string\n              example:\n                - api-tag\n                - cloudmailin-tag\n            - type: string\n              example: api-tag,cloudmailin-tag\n          description: |\n            Tags that help filter the messages within the dashboard\n\n    Message:\n      allOf:\n        - $ref: \"#/components/schemas/MessageCommon\"\n        - type: object\n          properties:\n            plain:\n              type: string\n              example: \"Hello Plain Text\"\n              description: |\n                The plain text part of the email message.\n                Either the plain text or the html parts are required.\n            html:\n              type: string\n              example: \u003ch1\u003eHello Html\u003c/h1\u003e\n              description: |\n                The HTML part of the email message.\n                Either the plain text or the html parts are required.\n            headers:\n              type: object\n              additionalProperties:\n                type: string\n              example:\n                x-api-test: Test\n                x-additional-header: Value\n            priority:\n              type: string\n              enum: [standard, priority, digest]\n              example: standard\n            attachments:\n              type: array\n              items:\n                $ref: \"#/components/schemas/MessageAttachment\"\n\n    MessageAttachment:\n      type: object\n      required:\n        - file_name\n        - content\n        - content_type\n      properties:\n        file_name:\n          type: string\n          example: pixel.png\n          description: The file name of the attachment\n        content:\n          type: string\n          example: iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP0rdr1HwAFHwKCk87e6gAAAABJRU5ErkJggg==\n          description: |\n            The Base64 encoded representation of the content.\n            This shouldn't contain newlines within JSON.\n        content_type:\n          type: string\n          example: image/png\n          description: The mime content type of the file such as `image/jpeg`\n        content_id:\n          type: string\n          example: logo\n          description: |\n            An optional content identifier.\n            This is used to mark the attachment as inline and would allow inline display of the\n            attachment within the html content.\n            Within the HTML render an image tag for example with cid:\n            \u003cimg src=\"cid:logo\" alt=\"Logo\" /\u003e foo\n\n    RawMessage:\n      allOf:\n        - $ref: \"#/components/schemas/MessageCommon\"\n        - type: object\n          properties:\n            raw:\n              type: string\n              description: |\n                A full raw email.\n                This should consist of both headers and a message body.\n                `To` and `From` headers must be present and match those in the request.\n                Multiple parts, text and html or other mixed content are\n                acceptable but the message must be valid and RFC822 compliant.\n\n                Any attachments intended to be sent in the Raw format must also be\n                encoded and included here.\n              example: |\n                To: Recipient \u003crecipient@example.com\u003e, Another \u003canother@example.com\u003e\n                From: Sender \u003csender@example.com\u003e\n                Subject: Test from Raw Email Message\n                Content-Type: text/html;\n                  charset=UTF-8\n\n                \u003ch1\u003e Test Message: \u003c/h1\u003e\n\n                \u003cp\u003eHi \u003cstrong\u003eThere\u003c/strong\u003e,\u003c/p\u003e\n                \u003cp\u003eThis is an example raw message.\u003c/p\u003e\n                \u003cp\u003eThanks,\u003cbr /\u003e\n                CloudMailin\u003c/p\u003e\n\n    SendingDomain:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          $ref: \"#/components/schemas/sendingDomainID\"\n        domain:\n          type: string\n          description: The domain used for sending mail\n          example: example.com\n        mta_domain:\n          type: string\n          description: |\n            The domain used for sending mail.\n            This is also the domain that requires the CNAME record.\n          example: mta.example.com\n          readOnly: true\n        dkim_selector:\n          type: string\n          description: The selector (domain prefix) we require for the DKIM TXT record.\n          example: 0e7c28e2e4cm\n          readOnly: true\n        dkim_domain:\n          type: string\n          description: The full required domain for the DKIM TXT record.\n          example: 0e7c28e2e4cm._domainkey.example.com\n          readOnly: true\n        dkim_public_record:\n          type: string\n          description: |\n            The public DKIM record that we expect to be set for the Domain.\n            Note that the record should be placed at {selector}._domainkey.{domain}.\n          # The only way I could get it to not introduce spaces was to add quotes\n          # and escape the new line\n          example: \"v=DKIM1; h=sha256; k=rsa; s=email; p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz\\\n            PzZ1k4BjmTZbaS43mhI+HJE2seKeudrExH7kd7YzQ7H0Ci3BBvzQkh6WjUGdibEUOgdo0Mm4VN4H6myc9L\\\n            vX8qpM+C4MaBNW3hr2kOG/nKSI+Gp0usSj+THc3/4u1+J7IhKBuKaZdj4k5uDKcwKw3uM3RDiwQjppVJvO\\\n            RhuvoMfsGjD296FatQf53j9XExxM4j2ugLnHdhtXtVsGfQb3DoE87Hzc2W6wg7Je3C8eZZ/w9cI2OHBFL3\\\n            xi39dgwOlbMrLUqTPtvIl+aRMikGS2RZadiGEPnXVS3Ac57ekqprDD7M7Uapyn2a0NX4A/VOtWOFceXSk6\\\n            iHBbDlM/fO3SwIDAQAB\"\n          readOnly: true\n        required_cname:\n          type: string\n          description: The CNAME record required on the MTA domain.\n          example: feedback-smtp.cloudmta.net\n          readOnly: true\n        dkim_verified:\n          type: boolean\n          description: Has the DKIM record been set\n          readOnly: true\n          nullable: true\n        return_path_verified:\n          type: boolean\n          description: |\n            Has the return path record been set\n            (this is set by the CNAME on the MTA domain)e: true\n          readOnly: true\n          nullable: true\n        spf_verified:\n          type: boolean\n          description: |\n            Has the return path record been set\n            (this is set by the CNAME on the MTA domain)\n          readOnly: true\n          nullable: true\n\n    SendingDomains:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SendingDomain\"\n\n    Error:\n      type: object\n      properties:\n        status:\n          type: integer\n          default: 404\n        error:\n          type: string\n          default: Not Found\n\n    UnauthorizedError:\n      type: object\n      properties:\n        status:\n          type: integer\n          enum: [401]\n        error:\n          type: string\n          default: Unauthorized\n\n    ForbiddenError:\n      type: object\n      properties:\n        status:\n          type: integer\n          enum: [403]\n        error:\n          type: string\n          default: Forbidden\n          enum: [Forbidden]\n\n    NotFoundError:\n      type: object\n      properties:\n        status:\n          type: integer\n          enum: [404]\n        error:\n          type: string\n          default: Not Found\n\n    UnprocessableEntityError:\n      type: object\n      properties:\n        status:\n          type: integer\n          enum: [422]\n        error:\n          type: string\n          description: The description of the failed validation\n          default: Unprocessable Entity\n\n    accountID:\n      type: string\n      description: Identifier, please be aware that the format may change\n      example: 123\n\n    addressID:\n      type: string\n      example: aaaa740b4c5c37b1aaaa\n      description: Identifier, please be aware that the format may change\n      readOnly: true\n      pattern: \"[0-9a-f]{20}\"\n\n    customDomainID:\n      $ref: \"#/components/schemas/id\"\n\n    sendingDomainID:\n      $ref: \"#/components/schemas/id\"\n\n    id:\n      type: string\n      example: 226c806f758619c5\n      pattern: \"[0-9a-f]{16}\"\n      description: Identifier, please be aware that the format may change\n      readOnly: true\n\n  parameters:\n    accountID:\n      in: path\n      name: accountID\n      required: true\n      schema:\n        $ref: \"#/components/schemas/accountID\"\n\n    addressID:\n      in: query\n      name: address_id\n      required: true\n      schema:\n        $ref: \"#/components/schemas/addressID\"\n\n    customDomainID:\n      in: path\n      name: customDomainID\n      required: true\n      schema:\n        $ref: \"#/components/schemas/customDomainID\"\n\n    sendingDomainID:\n      in: path\n      name: sendingDomainID\n      required: true\n      schema:\n        $ref: \"#/components/schemas/sendingDomainID\"\n\n    page:\n      in: query\n      name: page\n      deprecated: true\n      description: The page of results to return\n      schema:\n        type: integer\n\n  responses:\n    401:\n      description: The user is not Authorized\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnauthorizedError\"\n    403:\n      description: The user is not Authorized\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ForbiddenError\"\n    404:\n      description: Resource be found or does not belong to this account\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFoundError\"\n    422:\n      description: Unprocessable Entity, most likely your input does not pass validation\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnprocessableEntityError\"\n\npaths:\n  /addresses:\n    get:\n      summary: Get all addresses in the account\n      tags:\n        - \"Addresses\"\n      responses:\n        200:\n          description: A list of addresses\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Addresses\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n\n  /addresses/{addressID}:\n    get:\n      summary: Get a specific address\n      tags:\n        - \"Addresses\"\n      parameters:\n        - in: path\n          name: addressID\n          required: true\n          schema:\n            $ref: \"#/components/schemas/addressID\"\n      responses:\n        200:\n          description: A list of addresses\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Address\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n\n  /custom_domains:\n    get:\n      summary: Get all custom domains for a given address\n      tags:\n        - \"Inbound Domains\"\n      parameters:\n        - $ref: \"#/components/parameters/addressID\"\n        - $ref: \"#/components/parameters/page\"\n      responses:\n        200:\n          description: A list of Custom Domainis\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomDomains\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n\n    post:\n      summary: Create a custom domain for a given address\n      tags:\n        - \"Inbound Domains\"\n      parameters:\n        - $ref: \"#/components/parameters/addressID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomDomain\"\n      responses:\n        201:\n          description: The created ustom domain\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomDomain\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n        422:\n          $ref: \"#/components/responses/422\"\n\n  /custom_domains/{customDomainID}:\n    delete:\n      summary: Delete a Custom Domaiin with the given id\n      tags:\n        - \"Inbound Domains\"\n      description: Note that a 202 response is expected. Deletion may not happen immediately.\n      parameters:\n        - $ref: \"#/components/parameters/addressID\"\n        - $ref: \"#/components/parameters/customDomainID\"\n      responses:\n        202:\n          description: Custom Domain Deleted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomDomain\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n\n  /messages:\n    post:\n      summary: Create a new Email Message for a given outbound account (server)\n      operationId: sendMessage\n      tags:\n        - \"Messages\"\n      security:\n        - smtpAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Message\"\n                  - $ref: \"#/components/schemas/RawMessage\"\n      responses:\n        202:\n          description: The message has been accepted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MessageCommon\"\n        401:\n          $ref: \"#/components/responses/401\"\n        422:\n          $ref: \"#/components/responses/422\"\n\n\n  /sending_domains:\n    get:\n      summary: Get all outbound domains in the account\n      tags:\n        - \"Sending Domains\"\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n      responses:\n        200:\n          description: A list of domains\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SendingDomains\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n    post:\n      summary: Create an Outbound Sending Domain for a given account\n      tags:\n        - \"Sending Domains\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SendingDomain\"\n      responses:\n        201:\n          description: The created Domain\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SendingDomain\"\n        401:\n          $ref: \"#/components/responses/401\"\n        422:\n          $ref: \"#/components/responses/422\"\n\n  /sending_domains/{sendingDomainID}:\n    get:\n      summary: Get a specific Outbound Sending Domain\n      tags:\n        - \"Sending Domains\"\n      parameters:\n        - $ref: \"#/components/parameters/sendingDomainID\"\n      responses:\n        200:\n          description: The Domain\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SendingDomain\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n    delete:\n      summary: Delete the specified Outbound Sending Domain\n      tags:\n        - \"Sending Domains\"\n      description: Note that a 202 response is expected. Deletion may not happen immediately.\n      parameters:\n        - $ref: \"#/components/parameters/sendingDomainID\"\n      responses:\n        202:\n          description: Custom Domain Deleted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SendingDomain\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n\n  /sending_domains/{sendingDomainID}/verify:\n    post:\n      summary: Verify (Check) the DNS records have been set for the given domain\n      tags:\n        - \"Sending Domains\"\n      parameters:\n        - $ref: \"#/components/parameters/sendingDomainID\"\n      responses:\n        200:\n          description: The Sending Domain we attempted to verify\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SendingDomain\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n        422:\n          description: Details of the sending domain that failed verification\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SendingDomain\"\n\n  /incoming_statuses:\n    get:\n      summary: Get all incomming message statuses for a given address\n      tags:\n        - \"Addresses\"\n      description: |\n        Incoming statuses are ordered newest first.\n        This doesn't really help with pagination as new records will be added frequently.\n        A new scheme will be added in future to handle this issue more effectively.\n      parameters:\n        - $ref: \"#/components/parameters/addressID\"\n        - $ref: \"#/components/parameters/page\"\n        - in: query\n          name: query\n          # example: 'subject: reply, status: 200'\n          example:\n          description: A query string to search the statuses for.\n          schema:\n            type: string\n      responses:\n        200:\n          description: A list of Received Message Statuses\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomingStatuses\"\n        401:\n          $ref: \"#/components/responses/401\"\n        403:\n          $ref: \"#/components/responses/403\"\n        404:\n          $ref: \"#/components/responses/404\"\n",
			"canonicalURL": "/github.com/CloudMailin/docs.cloudmailin.com@2e06a164a78511760681e0989ab522a734f4b72d/-/blob/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudmailin/docs.cloudmailin.com/blob/2e06a164a78511760681e0989ab522a734f4b72d/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}