{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/app_registry/v1beta2/openapi.yaml",
			"byteSize": 28513,
			"content": "components:\n  parameters:\n    AppName:\n      description: App name.\n      in: path\n      name: appName\n      required: true\n      schema:\n        maxLength: 36\n        minLength: 4\n        pattern: ^[_a-z][_\\.a-z0-9]*$\n        type: string\n    ClientID:\n      description: The unique ID for a client.\n      in: path\n      name: clientID\n      required: true\n      schema:\n        type: string\n    Kind:\n      description: The kind of application.\n      in: query\n      name: kind\n      schema:\n        $ref: '#/components/schemas/AppResourceKind'\n    Tenant:\n      description: The tenant name.\n      in: path\n      name: tenant\n      required: true\n      schema:\n        maxLength: 36\n        minLength: 4\n        pattern: ^[a-z][a-z0-9]*$\n        type: string\n  schemas:\n    AppMetadataInternal:\n      properties:\n        clientId:\n          description: OAuth 2.0 Client ID.\n          readOnly: true\n          type: string\n        createdAt:\n          description: The date that the app was created.\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          description: The principal who created this app.\n          readOnly: true\n          type: string\n      type: object\n    AppMetadataPrivate:\n      properties:\n        redirectUrls:\n          description: Array of URLs that can be used for redirect after logging into the app.\n          items:\n            format: uri\n            type: string\n          maxItems: 10\n          type: array\n        setupUrl:\n          description: URL to redirect to after a subscription is created.\n          format: uri\n          type: string\n        webhookUrl:\n          description: URL that webhook events are sent to.\n          format: uri\n          type: string\n      type: object\n    AppMetadataPublic:\n      properties:\n        appPrincipalPermissions:\n          description: Array of permission templates that are used to grant permission to the app principal when a tenant subscribes.\n          items:\n            type: string\n          type: array\n        description:\n          description: Short paragraph describing the app.\n          maxLength: 1024\n          type: string\n        loginUrl:\n          description: The URL used to log in to the app.\n          format: uri\n          type: string\n        logoUrl:\n          description: The URL used to display the app's logo.\n          format: uri\n          type: string\n        title:\n          description: Human-readable title for the app.\n          maxLength: 128\n          minLength: 1\n          type: string\n        userPermissionsFilter:\n          description: Array of permission filter templates that are used to intersect with a user's permissions when using the app.\n          items:\n            type: string\n          type: array\n      type: object\n    AppMetadataSecret:\n      properties:\n        clientSecret:\n          description: OAuth 2.0 Client Secret string (used for confidential clients).\n          readOnly: true\n          type: string\n      type: object\n    AppName:\n      properties:\n        appName:\n          maxLength: 36\n          minLength: 4\n          pattern: ^[_a-z][_a-z0-9]*(?:\\.[_a-z][_a-z0-9]*)*$\n          type: string\n      required:\n      - appName\n      type: object\n    AppResource:\n      properties:\n        kind:\n          $ref: '#/components/schemas/AppResourceKind'\n          description: The kind of application.\n        name:\n          description: App name that is unique within Splunk Cloud Platform.\n          maxLength: 36\n          minLength: 4\n          pattern: ^[_a-z][_\\.a-z0-9]*$\n          type: string\n      required:\n      - name\n      - kind\n      type: object\n    AppResourceKind:\n      enum:\n      - web\n      - native\n      - service\n      type: string\n    AppResponseCreateUpdate:\n      discriminator:\n        mapping:\n          native: '#/components/schemas/NativeApp'\n          service: '#/components/schemas/ServiceApp'\n          web: '#/components/schemas/WebApp'\n        propertyName: kind\n      oneOf:\n      - $ref: '#/components/schemas/ServiceApp'\n      - $ref: '#/components/schemas/WebApp'\n      - $ref: '#/components/schemas/NativeApp'\n    AppResponseGetList:\n      discriminator:\n        mapping:\n          native: '#/components/schemas/NativeApp'\n          service: '#/components/schemas/ServiceApp'\n          web: '#/components/schemas/WebApp'\n        propertyName: kind\n      oneOf:\n      - $ref: '#/components/schemas/ServiceApp'\n      - $ref: '#/components/schemas/WebApp'\n      - $ref: '#/components/schemas/NativeApp'\n    CreateAppRequest:\n      discriminator:\n        mapping:\n          native: '#/components/schemas/NativeAppPOST'\n          service: '#/components/schemas/ServiceAppPOST'\n        propertyName: kind\n      oneOf:\n      - $ref: '#/components/schemas/ServiceAppPOST'\n      - $ref: '#/components/schemas/NativeAppPOST'\n    Error:\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    Key:\n      description: Public Key\n      properties:\n        key:\n          description: Public key used for verifying signed webhook requests.\n          readOnly: true\n          type: string\n      type: object\n    NativeApp:\n      allOf:\n      - $ref: '#/components/schemas/AppMetadataPublic'\n      - $ref: '#/components/schemas/AppResource'\n      - $ref: '#/components/schemas/AppMetadataPrivate'\n      - $ref: '#/components/schemas/AppMetadataInternal'\n      description: A native kind app.\n      required:\n      - name\n      - kind\n      - title\n      - clientId\n      - createdBy\n      - createdAt\n      type: object\n    NativeAppPOST:\n      allOf:\n      - $ref: '#/components/schemas/AppMetadataPublic'\n      - $ref: '#/components/schemas/AppResource'\n      - $ref: '#/components/schemas/AppMetadataPrivate'\n      description: Required input for creating a native kind app.\n      required:\n      - name\n      - kind\n      - title\n      type: object\n    ServiceApp:\n      allOf:\n      - $ref: '#/components/schemas/AppMetadataPublic'\n      - $ref: '#/components/schemas/AppResource'\n      - $ref: '#/components/schemas/AppMetadataPrivate'\n      - $ref: '#/components/schemas/AppMetadataInternal'\n      - $ref: '#/components/schemas/AppMetadataSecret'\n      description: A service kind app.\n      required:\n      - name\n      - kind\n      - title\n      - clientId\n      - clientSecret\n      - createdBy\n      - createdAt\n      type: object\n    ServiceAppPOST:\n      allOf:\n      - $ref: '#/components/schemas/AppMetadataPublic'\n      - $ref: '#/components/schemas/AppResource'\n      - $ref: '#/components/schemas/AppMetadataPrivate'\n      description: Required input for creating a service kind app.\n      required:\n      - name\n      - kind\n      - title\n      type: object\n    Subscription:\n      properties:\n        appName:\n          description: App name.\n          readOnly: true\n          type: string\n        createdAt:\n          description: Time of subscription creation (UTC).\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          description: The user who created the subscription.\n          readOnly: true\n          type: string\n        description:\n          description: Short paragraph describing the app.\n          maxLength: 1024\n          readOnly: true\n          type: string\n        loginUrl:\n          description: URL used to login to the app.\n          format: uri\n          readOnly: true\n          type: string\n        logoUrl:\n          description: The URL used to display the app's logo.\n          format: uri\n          readOnly: true\n          type: string\n        tenant:\n          description: The tenant that is subscribed to the app.\n          readOnly: true\n          type: string\n        title:\n          description: Human-readable name for the application.\n          readOnly: true\n          type: string\n      required:\n      - appName\n      - title\n      - description\n      - logoUrl\n      - loginUrl\n      - createdBy\n      - createdAt\n      type: object\n    UpdateAppRequest:\n      allOf:\n      - $ref: '#/components/schemas/AppMetadataPublic'\n      - $ref: '#/components/schemas/AppMetadataPrivate'\n    WebApp:\n      allOf:\n      - $ref: '#/components/schemas/AppMetadataPublic'\n      - $ref: '#/components/schemas/AppResource'\n      - $ref: '#/components/schemas/AppMetadataPrivate'\n      - $ref: '#/components/schemas/AppMetadataInternal'\n      - $ref: '#/components/schemas/AppMetadataSecret'\n      description: A web kind app.\n      required:\n      - name\n      - kind\n      - title\n      - redirectUrls\n      - clientId\n      - clientSecret\n      - createdBy\n      - createdAt\n      type: object\n  securitySchemes:\n    BearerToken:\n      scheme: bearer\n      type: http\ninfo:\n  description: With the App Registry service in Splunk Cloud Services, you can create, update, and manage your apps.\n  title: App Registry\n  version: v1beta2.0\nopenapi: 3.0.0\npaths:\n  /{tenant}/app-registry/v1beta2/apps:\n    get:\n      description: Returns a list of apps.\n      operationId: listApps\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AppResponseGetList'\n                type: array\n          description: Returns a list of apps.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 App Management\n      x-authz-scope: appregistry.apps.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    post:\n      description: Creates an app.\n      operationId: createApp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAppRequest'\n        description: Creates a new app.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponseCreateUpdate'\n          description: The app was created successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request isn't valid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The operation isn't authorized.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The provided fields aren't valid.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Too many requests.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 App Management\n      x-authz-scope: appregistry.apps.write\n  /{tenant}/app-registry/v1beta2/apps/{appName}:\n    delete:\n      description: Removes an app.\n      operationId: deleteApp\n      responses:\n        \"204\":\n          description: The app was removed successfully.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: This operation isn't authorized.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 App Management\n      x-authz-scope: appregistry.apps.write\n    get:\n      description: Returns the metadata of an app.\n      operationId: getApp\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponseGetList'\n          description: Returns a list of public, private, and internal app metadata.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn’t authenticated.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource wasn't found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 App Management\n      x-authz-scope: appregistry.apps.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - $ref: '#/components/parameters/AppName'\n    put:\n      description: Updates an app.\n      operationId: updateApp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAppRequest'\n        description: Updates app contents.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponseCreateUpdate'\n          description: The app was updated successfully.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn’t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The operation isn't authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource wasn't found.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The provided fields aren't valid.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 App Management\n      x-authz-scope: appregistry.apps.write\n  /{tenant}/app-registry/v1beta2/apps/{appName}/rotate-secret:\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - $ref: '#/components/parameters/AppName'\n    post:\n      description: Rotates the client secret for an app.\n      operationId: rotateSecret\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponseCreateUpdate'\n          description: The secret was rotated successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request isn't valid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The operation isn't authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource wasn't found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 App Management\n      x-authz-scope: appregistry.apps.write\n  /{tenant}/app-registry/v1beta2/apps/{appName}/subscriptions:\n    get:\n      description: Returns the collection of subscriptions to an app.\n      operationId: listAppSubscriptions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Subscription'\n                type: array\n          description: Returns a list of app subscriptions.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn’t authenticated.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource wasn't found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 App Management\n      x-authz-scope: appregistry.apps.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - $ref: '#/components/parameters/AppName'\n  /{tenant}/app-registry/v1beta2/subscriptions:\n    get:\n      description: Returns the tenant subscriptions.\n      operationId: listSubscriptions\n      parameters:\n      - $ref: '#/components/parameters/Kind'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Subscription'\n                type: array\n          description: Returns a list of tenant subscriptions.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The operation isn't authorized.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The provided fields aren't valid.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 Subscriptions\n      x-authz-scope: appregistry.subscriptions.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    post:\n      description: Creates a subscription.\n      operationId: createSubscription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppName'\n        description: Creates a subscription between a tenant and an app.\n        required: true\n      responses:\n        \"201\":\n          description: The subscription was created successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request isn't valid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn’t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The operation isn't authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource wasn't found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 Subscriptions\n      x-authz-scope: appregistry.subscriptions.write\n  /{tenant}/app-registry/v1beta2/subscriptions/{appName}:\n    delete:\n      description: Removes a subscription.\n      operationId: deleteSubscription\n      responses:\n        \"204\":\n          description: The subscription was removed successfully.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn't authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The operation isn't authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource wasn't found.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 Subscriptions\n      x-authz-scope: appregistry.subscriptions.write\n    get:\n      description: Returns or validates a subscription.\n      operationId: getSubscription\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: Returns the requested subscription.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The user isn't authenticated.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource wasn't found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 Subscriptions\n      x-authz-scope: appregistry.subscriptions.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - $ref: '#/components/parameters/AppName'\n  /system/app-registry/v1beta2/keys:\n    get:\n      description: Returns a list of the public keys used for verifying signed webhook requests.\n      operationId: getKeys\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Key'\n                type: array\n          description: Returns a list of active and stale public keys.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An internal service error occurred.\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A downstream service isn't available to process the request.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request could not be processed due to an internal server error.\n      tags:\n      - v1beta2 Keys\n      x-auth-required: false\nsecurity:\n- BearerToken: []\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: app-registry/v1beta2/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/app_registry/v1beta2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/app_registry/v1beta2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}