{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/raiden-network/workshop"
		},
		"file": {
			"name": "raiden_open_api.yaml",
			"size": 0,
			"path": "tools/raiden_open_api.yaml",
			"byteSize": 29090,
			"content": "openapi: \"3.0.2\"\ninfo:\n  description: \"Raiden Network client API\"\n  version: \"1.0.0\"\n  title: \"Raiden Network\"\n  contact:\n    email: \"contact@raiden.network\"\nservers:\n  - url: \"http://localhost:5001/api/1\"\n    description: \"Development server\"\ntags:\n- name: \"raiden_network\"\n  description: \"Raiden Network\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://raiden-network.readthedocs.io/en/stable/rest_api.html\"\npaths:\n  /address:\n    get:\n      tags:\n      - \"address\"\n      summary: \"Query your address\"\n      description: \"When raiden starts, you choose an ethereum address which will also be your raiden address.\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  our_address:\n                    type: \"string\"\n  /tokens/{token_address}:\n    put:\n      tags:\n      - \"tokens\"\n      summary: \"Registers a token\"\n      description: \"If a token is not registered yet (i.e.: A token network for that token does not exist in the registry), we need to register it by deploying a token network contract for that token.\"\n      parameters:\n      - name: \"token_address\"\n        in: \"path\"\n        description: \"Token address\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        201:\n          description: \"Created.A token network for the token has been successfully created\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  token_network_address:\n                    type: \"string\"\n        402:\n          description: \"Payment Required. Insufficient ETH to pay for the gas of the register on-chain transaction\"\n        404:\n          description: \"Not Found. The given token address is invalid\"\n        409:\n          description: \"Conflict. The token was already registered before, or the registering transaction failed.\"\n        501:\n          description: \"Not Implemented. Registering a token only works on testnet temporarily. On mainnet this error is returned.\"\n  /channels:\n    get:\n      tags:\n      - \"channels\"\n      summary: \"Get a list of all unsettled channels\"\n      description: \"Get a list of all unsettled channels\"\n      responses:\n        200:\n          description: \"Successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Channel\"\n        500:\n          description: \"Internal Server Error – Internal Raiden node error\"\n    put:\n      tags:\n      - \"channels\"\n      summary: \"Opens (i. e. creates) a channel\"\n      description: \"Opens (i. e. creates) a channel\"\n      requestBody:\n        description: \"Channel data payload\"\n        content:\n          'application/json':\n            schema:\n              properties:\n                partner_address:\n                  type: \"string\"\n                  description: \"The partner we want to open a channel with\"\n                token_address:\n                  type: \"string\"\n                  description: \"The token we want to be used in the channel\"\n                total_deposit:\n                  type: \"integer\"\n                  format: \"int264\"\n                  description: \"Total amount of tokens to be deposited to the channel\"\n                settle_timeout:\n                  type: \"integer\"\n                  format: \"int264\"\n                  description: \"The amount of blocks that the settle timeout should have\"\n              required:\n                - \"partner_address\"\n                - \"token_address\"\n                - \"total_deposit\"\n                - \"settle_timeout\"\n      responses:\n        201:\n          description: \"Created. Channel created successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Channel\"\n        400:\n          description: \"Bad Request. Provided JSON is in some way malformed\"\n        402:\n           description: \"Payment Required. Insufficient ETH to pay for the gas of the channel open on-chain transaction\"\n        408:\n          description: \"Request Timeout. Deposit event was not read in time by the Ethereum node\"\n        409:\n          description: \"Conflict. Invalid input, e. g. too low a settle timeout\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /channels/{token_address}:\n    get:\n      tags:\n      - \"channels\"\n      summary: \"Get a list of all unsettled channels for the given token address\"\n      description: \"Get a list of all unsettled channels for the given token address\"\n      parameters:\n      - name: \"token_address\"\n        in: \"path\"\n        description: \"Token address\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"Successful query\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Channel\"\n        404:\n          description: \"Not Found. The given token address is not a valid eip55-encoded Ethereum addres\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /channels/{token_address}/{partner_address}:\n    get:\n      tags:\n      - \"channels\"\n      summary: \"Query information about one of your channels\"\n      description: \"The channel is specified by the address of the token and the partner’s address.\"\n      parameters:\n      - name: \"token_address\"\n        in: \"path\"\n        description: \"Token address\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"partner_address\"\n        in: \"path\"\n        description: \"Token address\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"Successful query\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Channel\"\n        404:\n          description: \"Not Found. The given token address is not a valid eip55-encoded Ethereum addres or the channel does not exist\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n    patch:\n      tags:\n      - \"channel\"\n      summary: \"This request is used to close a channel or to increase the deposit in it\"\n      description: \"This request is used to close a channel or to increase the deposit in it\"\n      requestBody:\n        description: \"Channel data payload\"\n        content:\n          'application/json':\n            schema:\n              type: \"object\"\n              properties:\n                state:\n                  description: \"Desired new state; the only valid choice is 'closed'\"\n                  type: \"string\"\n                  enum: [\n                    \"closed\"\n                  ]\n                total_deposit:\n                  description: \"The increased total deposit\"\n                  type: \"string\"\n                  enum: [\n                    \"closed\"\n                  ]\n      parameters:\n        - name: \"partner_address\"\n          in: \"path\"\n          description: \"The partner we want to open a channel with\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"The token we want to be used in the channel\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n          200:\n            description: \"OK. Success\"\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Channel\"\n          400:\n            description: \"Bad Request. The provided JSON is in some way malformed, or there is nothing to do since neither state nor total_deposit have been given, or the value of state is not a valid channel state.\"\n          402:\n            description: \"Payment Required. Insufficient balance to do a deposit, or insufficient ETH to pay for the gas of the on-chain transaction\"\n          404:\n            description: \"Payment Required. Insufficient balance to do a deposit, or insufficient ETH to pay for the gas of the on-chain transaction\"\n          408:\n            description: \"Request Timeout. Deposit event was not read in time by the Ethereum node\"\n          409:\n            description: \"Conflict. Provided channel does not exist or state and total_deposit have been attempted to update in the same request or attempt to deposit token amount lower than on-chain balance of the channel attempt to deposit more tokens than the testing limit\"\n          500:\n            description: \"Internal Server Error. Internal Raiden node error\"\n  /tokens:\n    get:\n      tags:\n      - \"tokens\"\n      summary: \"Returns a list of addresses of all registered tokens\"\n      description: \"Returns a list of addresses of all registered tokens\"\n      responses:\n        200:\n          description: \"Successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: \"string\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /tokens/{token_address}/partners:\n    get:\n      tags:\n      - \"partners\"\n      summary: \"Returns a list of all partners\"\n      description: \"Returns a list of all partners with whom you have non-settled channels for a certain token\"\n      parameters:\n      - name: \"token_address\"\n        in: \"path\"\n        description: \"Token address\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"Successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: \"object\"\n                  properties:\n                    partner_address:\n                      type: \"string\"\n                      description: \"The partner we have a channel with\"\n                    channel:\n                      type: \"string\"\n                      description: \"The partner we have a channel with\"\n        300:\n          description: \"Found. If the user accesses the channel link endpoint\"\n        400:\n          description: \"Not Found. The token does not exist the token address is not a valid eip55-encoded Ethereum address\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /connections:\n    get:\n      tags:\n      - \"connections\"\n      summary: \"Query details of all joined token networks\"\n      description: \"The request will return a JSON object where each key is a token address for which you have open channels\"\n      responses:\n        200:\n          description: \"OK. Success\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Connection\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /connections/{token_address}:\n    put:\n      tags:\n      - \"connections\"\n      summary: \"Automatically join a token network\"\n      description: \"The request will only return once all blockchain calls for opening and/or depositing to a channel have completed\"\n      parameters:\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"Token address\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        description: \"Channel data payload\"\n        content:\n          'application/json':\n            schema:\n              type: \"object\"\n              properties:\n                initial_channel_target:\n                  description: \"Number of channels to open proactively\"\n                  type: \"string\"\n                joinable_funds_target:\n                  description: \"Fraction of funds that will be used to join channels opened by other participants\"\n                  type: \"number\"\n                  format: \"float\"\n                funds:\n                  description: \"Amount of funding you want to put into the network\"\n                  type: \"integer\"\n                  format: \"int264\"\n      responses:\n        204:\n          description: \"No Content. For a successful connection creation\"\n        402:\n          description: \"Payment Required. If any of the channel deposits fail due to insufficient ETH balance to pay for the gas of the on-chain transactions\"\n        404:\n          description: \"Not Found. The given token address is not a valid eip55-encoded Ethereum address\"\n        408:\n          description: \"Request Timeout. If a timeout happened during any of the transactions\"\n        409:\n          description: \"Conflict. If any of the provided input to the call is invalid\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n    delete:\n      tags:\n      - \"connections\"\n      summary: \"Leave a token network\"\n      description: \"The request will only return once all blockchain calls for closing/settling a channel have completed\"\n      parameters:\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"The partner we want to open a channel with\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"OK. For successfully leaving a token network\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                description: \"The response is a list with the addresses of all closed channels\"\n                items:\n                  type: \"string\"\n        404:\n          description: \"Not Found. The given token address is not a valid eip55-encoded Ethereum address\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /payments:\n    get:\n      tags:\n      - \"payments\"\n      summary: \"Query the payment history\"\n      description: \"This includes successful (EventPaymentSentSuccess) and failed (EventPaymentSentFailed) sent payments as well as received payments (EventPaymentReceivedSuccess)\"\n      responses:\n        200:\n          description: \"OK. For successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/PaymentEvent\"\n        404:\n          description: \"Not Found – The given token and / or partner addresses are not valid eip55-encoded Ethereum addresses\"\n        409:\n          description: \"Conflict – If the given block number or token_address arguments are invalid\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /payments/{token_address}:\n    get:\n      tags:\n      - \"payments\"\n      summary: \"Query the payment history\"\n      description: \"This includes successful (EventPaymentSentSuccess) and failed (EventPaymentSentFailed) sent payments as well as received payments (EventPaymentReceivedSuccess)\"\n      parameters:\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"Token address\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"OK. For successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/PaymentEvent\"\n        404:\n          description: \"Not Found – The given token and / or partner addresses are not valid eip55-encoded Ethereum addresses\"\n        409:\n          description: \"Conflict – If the given block number or token_address arguments are invalid\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /payments/{token_address}/{target_address}:\n    post:\n      tags:\n      - \"payments\"\n      summary: \"Initiate a payment.\"\n      description: \"The request will only return once the payment either succeeded or failed\"\n      parameters:\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"Token address\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"target_address\"\n          in: \"path\"\n          description: \"The partner we want to open a channel with\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        description: \"Channel data payload\"\n        content:\n          'application/json':\n            schema:\n              type: \"object\"\n              properties:\n                amount:\n                  description: \"Amount to be sent to the target\"\n                  type: \"integer\"\n                  format: \"int256\"\n                identifier:\n                  description: \"Identifier of the payment\"\n                  type: \"integer\"\n                  format: \"int256\"\n              required:\n                - amount\n      responses:\n        200:\n          description: \"OK. Successful payment\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  initiator_address:\n                    type: \"string\"\n                  target_address:\n                    type: \"string\"\n                  token_address:\n                    type: \"string\"\n                  amount:\n                    type: \"integer\"\n                    format: \"int256\"\n                  identifier:\n                    type: \"integer\"\n                    format: \"int256\"\n        400:\n          description: \"Bad Request – If the provided json is in some way malformed\"\n        402:\n          description: \"Payment Required – If the payment can’t start due to insufficient balance\"\n        404:\n          description: \"Not Found – The given token and / or target addresses are not valid eip55-encoded Ethereum addresses\"\n        408:\n          description: \"Request Timeout – If a timeout happened during the payment\"\n        409:\n          description: \"Conflict – If the address or the amount is invalid or if there is no path to the target, or if the identifier is already in use for a different payment\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n    get:\n      tags:\n      - \"payments\"\n      summary: \"Query the payment history\"\n      description: \"This includes successful (EventPaymentSentSuccess) and failed (EventPaymentSentFailed) sent payments as well as received payments (EventPaymentReceivedSuccess)\"\n      parameters:\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"Token address\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"target_address\"\n          in: \"path\"\n          description: \"Token address\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: \"OK. For successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/PaymentEvent\"\n        404:\n          description: \"Not Found – The given token and / or partner addresses are not valid eip55-encoded Ethereum addresses\"\n        409:\n          description: \"Conflict – If the given block number or token_address arguments are invalid\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /_debug/blockchain_events/network:\n    get:\n      tags:\n      - \"events\"\n      summary: \"Query for token network creations\"\n      description: \"Query for token network creations\"\n      parameters:\n        - name: \"from_block\"\n          in: \"query\"\n          description: \"From block\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"to_block\"\n          in: \"query\"\n          description: \"To block\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"limit\"\n          in: \"query\"\n          description: \"Limit results\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"offset\"\n          in: \"query\"\n          description: \"Offset\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        200:\n          description: \"OK. For successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: \"object\"\n                  properties:\n                    args:\n                      type: \"object\"\n                      properties:\n                        token_address:\n                          type: \"string\"\n                        token_network_address:\n                          type: \"string\"\n                    event:\n                      type: \"string\"\n                    logIndex:\n                      type: \"integer\"\n                      format: \"int64\"\n                    transactionIndex:\n                      type: \"integer\"\n                      format: \"int64\"\n                    transactionHash:\n                      type: \"string\"\n                    address:\n                      type: \"string\"\n                    blockHash:\n                      type: \"string\"\n                    block_number:\n                      type: \"integer\"\n                      format: \"int64\"\n        400:\n          description: \"Bad Request – If the provided json is in some way malformed\"\n        409:\n          description: \"Conflict – If the given block number argument is invalid\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /_debug/blockchain_events/tokens/{token_address}:\n    get:\n      tags:\n      - \"events\"\n      summary: \"Query for token network creations\"\n      description: \"Query for token network creations\"\n      parameters:\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"Token address\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"from_block\"\n          in: \"query\"\n          description: \"From block\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"to_block\"\n          in: \"query\"\n          description: \"To block\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"limit\"\n          in: \"query\"\n          description: \"Limit results\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"offset\"\n          in: \"query\"\n          description: \"Offset\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        200:\n          description: \"OK. For successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: \"object\"\n                  properties:\n                    args:\n                      type: \"object\"\n                      properties:\n                        token_address:\n                          type: \"string\"\n                        token_network_address:\n                          type: \"string\"\n                    event:\n                      type: \"string\"\n                    logIndex:\n                      type: \"integer\"\n                      format: \"int64\"\n                    transactionIndex:\n                      type: \"integer\"\n                      format: \"int64\"\n                    transactionHash:\n                      type: \"string\"\n                    address:\n                      type: \"string\"\n                    blockHash:\n                      type: \"string\"\n                    block_number:\n                      type: \"integer\"\n                      format: \"int64\"\n        404:\n          description: \"Not Found – The given token address is not a valid eip55-encoded Ethereum address or does not exist\"\n        409:\n          description: \"Conflict – If the given block number or token_address arguments are invalid\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /_debug/blockchain_events/payment_network/{token_address}/channels/{partner_address}:\n    get:\n      tags:\n      - \"events\"\n      summary: \"Query for blockchain_events\"\n      description: \"Query for blockchain_events tied to all the channels which are part of the token network. If the partner_address is not provided it will show the events for all the channels\"\n      parameters:\n        - name: \"token_address\"\n          in: \"path\"\n          description: \"Token address\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"partner_address\"\n          in: \"path\"\n          description: \"Partner address\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"from_block\"\n          in: \"query\"\n          description: \"From block\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"to_block\"\n          in: \"query\"\n          description: \"To block\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"limit\"\n          in: \"query\"\n          description: \"Limit results\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n        - name: \"offset\"\n          in: \"query\"\n          description: \"Offset\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        200:\n          description: \"OK. For successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: \"object\"\n                  properties:\n                    args:\n                      type: \"object\"\n                      properties:\n                        channel_identifier:\n                          type: \"string\"\n                        participant1_amount:\n                          type: \"integer\"\n                          format: \"int64\"\n                        participant2_amount:\n                          type: \"integer\"\n                          format: \"int64\"\n                    event:\n                      type: \"string\"\n                    logIndex:\n                      type: \"integer\"\n                      format: \"int64\"\n                    transactionIndex:\n                      type: \"integer\"\n                      format: \"int64\"\n                    transactionHash:\n                      type: \"string\"\n                    address:\n                      type: \"string\"\n                    blockHash:\n                      type: \"string\"\n                    block_number:\n                      type: \"integer\"\n                      format: \"int64\"\n        404:\n          description: \"Not Found – The given token and / or partner addresses are not valid eip55-encoded Ethereum addresses, or the channel for the given partner does not exist\"\n        409:\n          description: \"Conflict – If the given block number argument is invalid\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\n  /_debug/raiden_events:\n    get:\n      tags:\n      - \"events\"\n      summary: \"Query for Raiden internal node events\"\n      description: \"Query for Raiden internal node events\"\n      responses:\n        200:\n          description: \"OK. For successful query\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: \"object\"\n        500:\n          description: \"Internal Server Error. Internal Raiden node error\"\ncomponents:\n  schemas:\n    Channel:\n      type: \"object\"\n      properties:\n        token_network_identifier:\n          type: \"string\"\n        channel_identifier:\n          type: \"integer\"\n          format: \"int264\"\n        partner_address:\n          type: \"string\"\n        token_address:\n          type: \"string\"\n        balance:\n          type: \"integer\"\n          format: \"int264\"\n        total_deposit:\n          type: \"integer\"\n          format: \"int264\"\n        state:\n          type: \"string\"\n          description: \"Channel Status\"\n          enum:\n          - \"opened\"\n          - \"closed\"\n          - \"settled\"\n        settle_timeout:\n          type: \"integer\"\n          format: \"int264\"\n        reveal_timeout:\n          type: \"integer\"\n          format: \"int264\"\n      xml:\n        name: \"Channel\"\n    Connection:\n      type: \"object\"\n      properties: {}\n    PaymentEvent:\n      type: \"object\"\n      properties:\n        event:\n          type: \"string\"\n        amount:\n          type: \"integer\"\n          format: \"int64\"\n        initiator:\n          type: \"string\"\n        identifier:\n          type: \"integer\"\n          format: \"int64\"\n",
			"canonicalURL": "/github.com/raiden-network/workshop@804fe7e716a024aeb0d74553f647ed6bba818033/-/blob/tools/raiden_open_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/raiden-network/workshop/blob/804fe7e716a024aeb0d74553f647ed6bba818033/tools/raiden_open_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}