{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/activecampaign/openapi.yaml",
			"byteSize": 66774,
			"content": "openapi: 3.0.0\ninfo:\n  title: ActiveCampaign API v3\n  description: \u003e-\n    This is a generated connector for [ActiveCampaign API version 3](https://developers.activecampaign.com/reference/overview) OpenAPI specification. \n    ActiveCampaignis an integrated email marketing, automation, sales software, and CRM platform. It lets users perform powerful automation, email marketing, and customer relationship management. \n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create an [ActiveCampaign account](https://www.activecampaign.com) and obtain tokens by following [this guide](https://developers.activecampaign.com/reference/authentication).\n  x-ballerina-display:\n    label: ActiveCampaign\n    iconPath: \"icon.png\" \n  version: '3'\nservers:\n- url: /\n  description: The API is accessed using a base URL that is specific to your account. \n    Your API URL can be found in your account on the My Settings page under the \"Developer\" tab.\n    Generally, the URL will be in the form `https://\u003cyour-account\u003e.api-us1.com/api/3/\u003cresource\u003e`\nsecurity:\n- apiToken: []\ntags:\n- name: Accounts\n- name: Contacts\n  description: Contacts are the center of activity in ActiveCampaign and represent the people that the owner of an \n    ActiveCampaign account is marketing to or selling to.\n- name: Campaigns\n- name: Messages\n- name: Tags\n- name: Bulk\n- name: Automations\n# - name: Emails\n# - name: Addresses\n# - name: Branding\n# - name: Calendar Feeds\n# - name: Deals\n# - name: Forms\n# - name: Lists\n# - name: Notes\npaths:\n  /api/3/accounts/{id}:\n    get:\n      tags:\n      - Accounts\n      summary: Retrieve an account\n      operationId: Retrieve account\n      parameters:\n      - name: id\n        in: path\n        description: Account's ID\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Account data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountData'\n      deprecated: false\n    delete:\n      tags:\n      - Accounts\n      summary: Delete an account\n      operationId: Delete account\n      parameters:\n      - name: id\n        in: path\n        description: Account's ID\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Deletion response\n      deprecated: false\n    put:\n      tags:\n      - Accounts\n      summary: Update an account\n      operationId: Update account\n      parameters:\n      - name: id\n        in: path\n        description: Account's ID\n        required: true\n        style: simple\n        schema:\n          type: string\n      requestBody:\n        description: Update account payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccountRequest'\n        required: true\n      responses:\n        '200':\n          description: Account data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountData'\n      deprecated: false\n  /api/3/accounts:\n    post:\n      tags:\n      - Accounts\n      summary: Create an account\n      operationId: Create account\n      requestBody:\n        description: Create account payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAccountRequest'\n        required: true\n      responses:\n        '201':\n          description: Account data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountData'\n      deprecated: false\n    get:\n      tags:\n      - Accounts\n      summary: List all accounts\n      operationId: List accounts\n      parameters:\n      - in: query\n        name: search\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Search by name\n      - in: query\n        name: count_deals\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Whether to compute the contactCount and dealCount counts for the number of contacts/deals associated with each account. \n          Set it to true to include the right counts. If set to false or omitted from the call, \n          then contactCount and dealCount will not be counted and be simply displayed as 0.\n      responses:\n        '200':\n          description: Accounts\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/AccountListResponse'\n      deprecated: false\n  /api/3/accounts/{id}/notes:\n    post:\n      tags:\n      - Accounts\n      summary: Create a new note for an account\n      operationId: Create account note\n      parameters:\n      - name: id\n        in: path\n        description: Account's id to assign new note to\n        required: true\n        style: simple\n        schema:\n          type: string\n      requestBody:\n        description: Create Account Note payload \n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAccountNoteRequest'\n        required: true\n      responses:\n        '201':\n          description: Account Note data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountNoteData'\n      deprecated: false\n  /api/3/accounts/{id}/notes/{noteId}:\n    put:\n      tags:\n      - Accounts\n      summary: Update an account note\n      operationId: Update  accout note\n      parameters:\n      - name: id\n        in: path\n        description: Account's id to assign new note to\n        required: true\n        style: simple\n        schema:\n          type: string\n      - name: noteId\n        in: path\n        description: Account note's id to update\n        required: true\n        style: simple\n        schema:\n          type: string\n      requestBody:\n        description: Update Account Note payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccountNoteRequest'\n        required: true\n      responses:\n        '200':\n          description: Account Note data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountNoteData'\n      deprecated: false\n  /api/3/contacts:\n    get:\n      tags:\n      - Contacts\n      summary: List, search, and filter contacts\n      operationId: Get Contacts\n      parameters:\n      - in: query\n        name: ids\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts by ID. Can be repeated for multiple IDs.\n      - in: query\n        name: email\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts by ID. Can be repeated for multiple IDs.\n      - in: query\n        name: email_like\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts that contain the given value in the email address\n      - in: query\n        name: exclude\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Exclude from the response the contact with the given ID\n      - in: query\n        name: formid\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Filter contacts associated with the given form\n      - in: query\n        name: id_greater\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Only include contacts with an ID greater than the given ID\n      - in: query\n        name: id_less\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Only include contacts with an ID less than the given ID\n      - in: query\n        name: listid\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts associated with the given list\n      - in: query\n        name: search\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts that match the given value in the contact names, organization, phone or email\n      - in: query\n        name: segmentid\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Return only contacts that match a list segment (this param initially returns segment information, \n          when it is run a second time it will return contacts that match the segment)\n      - in: query\n        name: seriesid\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Filter contacts associated with the given automation\n      - in: query\n        name: status\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Status\n      - in: query\n        name: tagid\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Filter contacts associated with the given tag\n      - in: query\n        name: filters[created_before]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts that were created prior to this date\n      - in: query\n        name: filters[created_after]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts that were created after this date\n      - in: query\n        name: filters[updated_before]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts that were updated before this date\n      - in: query\n        name: filters[updated_after]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Filter contacts that were updated after this date\n      - in: query\n        name: waitid\n        schema:\n          type: integer\n        style: form\n        explode: true        \n        description: Filter by contacts in the wait queue of an automation block\n      - in: query\n        name: orders[cdate]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Order contacts by creation date\n      - in: query\n        name: orders[email]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Order contacts by email\n      - in: query\n        name: orders[first_name]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Order contacts by first name\n      - in: query\n        name: orders[last_name]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Order contacts by last name\n      - in: query\n        name: orders[name]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Order contacts by full name\n      - in: query\n        name: forders[score]\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Order contacts by score\n      - in: query\n        name: in_group_lists\n        schema:\n          type: string\n        style: form\n        explode: true        \n        description: Set this to \"true\" in order to return only contacts that the current user has permissions to see.\n      responses:\n        '200':\n          description: Contacts\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactListResponse'\n      deprecated: false\n    post:\n      tags:\n      - Contacts\n      summary: Create Contact\n      operationId: Create Contact\n      requestBody:\n        description: Create Contact payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateContactRequest'\n        required: true\n      responses:\n        '201':\n          description: Contact data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactReadResponse'\n      deprecated: false\n  /api/3/contacts/{contactId}:\n    get:\n      tags:\n      - Contacts\n      summary: Retrieve an existing contact\n      operationId: Get Contact by ID\n      parameters:\n      - name: contactId\n        in: path\n        description: ID of the contact\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Contact data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactReadResponse'\n      deprecated: false\n    delete:\n      tags:\n      - Contacts\n      summary: Delete Contact\n      operationId: Delete Contact\n      parameters:\n      - name: contactId\n        in: path\n        description: Delete an existing contact\n        required: true\n        style: simple\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: 'No content'          \n      deprecated: false\n  /api/3/contacts/{contactId}/contactData:\n    get:\n      tags:\n      - Contacts\n      summary: Retrieve a contact's data\n      operationId: Get Contact Data\n      parameters:\n      - name: contactId\n        in: path\n        description: ID of the contact\n        required: true\n        style: simple\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Contact data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactDataResponse'\n      deprecated: false\n### Get specific contact's data - These opeartions are already supported by `Get Contact by ID`\n  /api/3/contacts/{contactId}/bounceLogs:\n    get:\n      tags:\n      - Contacts\n      summary: Get Contact Bounce Logs\n      operationId: Get Contact Bounce Logs\n      parameters:\n      - name: contactId\n        in: path\n        description: ID of the contact\n        required: true\n        style: simple\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Bounce Log data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BounceLogResponse'\n      deprecated: false\n  /api/3/contacts/{contactId}/contactGoals:\n    get:\n      tags:\n      - Contacts\n      summary: Retrieve a contact's goals\n      operationId: Get Contact Data Goals\n      parameters:\n      - name: contactId\n        in: path\n        description: ID of the contact\n        required: true\n        style: simple\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Contact Goals data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactGoalResponse'\n      deprecated: false\n  # /api/3/contacts/{contactId}/contactLogs:\n  #   get:\n  #     tags:\n  #     - Contacts\n  #     summary: Retrieve a contact's logs\n  #     operationId: Get Contact Logs\n  #     parameters:\n  #     - name: contactId\n  #       in: path\n  #       description: ID of the contact\n  #       required: true\n  #       style: simple\n  #       schema:\n  #         type: integer\n  #         format: int32\n  #     responses:\n  #       '200':\n  #         description: ''\n  #         headers: {}\n  #     deprecated: false\n  # /api/3/contacts/{contactId}/contactDeals:\n  #   get:\n  #     tags:\n  #     - Contacts\n  #     summary: Retrieve a list of contact's deals\n  #     operationId: Get Contact Deal List\n  #     parameters:\n  #     - name: contactId\n  #       in: path\n  #       description: ID of the contact\n  #       required: true\n  #       style: simple\n  #       schema:\n  #         type: integer\n  #         format: int32\n  #     responses:\n  #       '200':\n  #         description: ''\n  #         headers: {}\n  #     deprecated: false\n  # /api/3/contacts/{contactId}/notes:\n  #   get:\n  #     tags:\n  #     - Contacts\n  #     summary: Retrieve a contacts notes\n  #     operationId: Get Contact Notes\n  #     parameters:\n  #     - name: contactId\n  #       in: path\n  #       description: ID of the contact\n  #       required: true\n  #       style: simple\n  #       schema:\n  #         type: integer\n  #         format: int32\n  #     responses:\n  #       '200':\n  #         description: ''\n  #         headers: {}\n  #     deprecated: false\n  # /api/3/contacts/{contactId}/accountContacts:\n  #   get:\n  #     tags:\n  #     - Contacts\n  #     summary: Get Contact Account Contacts\n  #     operationId: GetContactAccountContacts\n  #     parameters:\n  #     - name: contactId\n  #       in: path\n  #       description: ID of the contact\n  #       required: true\n  #       style: simple\n  #       schema:\n  #         type: integer\n  #         format: int32\n  #     responses:\n  #       '200':\n  #         description: ''\n  #         headers: {}\n  #     deprecated: false\n  # /api/3/contacts/{contactId}/automationEntryCounts:\n  #   get:\n  #     tags:\n  #     - Contacts\n  #     summary: Retrieve a contacts automation entry counts\n  #     operationId: Get Contact Automation Entry Counts\n  #     parameters:\n  #     - name: contactId\n  #       in: path\n  #       description: ID of the contact\n  #       required: true\n  #       style: simple\n  #       schema:\n  #         type: integer\n  #         format: int32\n  #     responses:\n  #       '200':\n  #         description: ''\n  #         headers: {}\n  #     deprecated: false\n  # /api/3/contacts/{contactId}/plusAppend:\n  #   get:\n  #     tags:\n  #     - Contacts\n  #     summary: Retrieve a contacts plus append\n  #     operationId: Get Contact Plus Append\n  #     parameters:\n  #     - name: contactId\n  #       in: path\n  #       description: ID of the contact\n  #       required: true\n  #       style: simple\n  #       schema:\n  #         type: integer\n  #         format: int32\n  #     responses:\n  #       '200':\n  #         description: ''\n  #         headers: {}\n  #     deprecated: false\n  # /api/3/contacts/{contactId}/trackingLogs:\n  #   get:\n  #     tags:\n  #     - Contacts\n  #     summary: Retrieve a contacts tracking logs\n  #     operationId: Get Contact Tracking Logs\n  #     parameters:\n  #     - name: contactId\n  #       in: path\n  #       description: ID of the contact\n  #       required: true\n  #       style: simple\n  #       schema:\n  #         type: integer\n  #         format: int32\n  #     responses:\n  #       '200':\n  #         description: ''\n  #         headers: {}\n  #     deprecated: false\n  /api/3/contactAutomations:\n    post:\n      tags:\n      - Contacts\n      - Automations\n      summary: Add a contact to an automation\n      operationId: Add Contact to Automation\n      requestBody:\n        description: Add Contact to Automation payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddContactAutomationRequest'\n        required: true\n      responses:\n        '201':\n          description: Contact Automation data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactAutomationResponse'\n      deprecated: false\n    get:\n      tags:\n      - Contacts\n      - Automations\n      summary: List all automations a contact is in\n      operationId: List Contact Automations\n      responses:\n        '201':\n          description: Contact Automations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactAutomationListResponse'\n      deprecated: false\n  /api/3/contactAutomations/{contactAutomationId}:\n    post:\n      tags:\n      - Contacts\n      - Automations\n      summary: Retrieve an automation a contact is in\n      operationId: Get Contact Automation\n      parameters:\n      - name: contactAutomationId\n        in: path\n        description: ID of the contactAutomation to retrieve\n        required: true\n        style: simple\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '201':\n          description: Contact Automation data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactAutomationResponse'\n      deprecated: false\n    delete:\n      tags:\n      - Contacts\n      - Automations\n      summary: Remove a contact from an automation\n      operationId: Delete Contact Automation\n      parameters:\n      - name: contactAutomationId\n        in: path\n        description: ID of the contactAutomation to delete\n        required: true\n        style: simple\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: No content\n      deprecated: false     \n  /api/3/cemailActivities:\n    get:\n      tags:\n      - Contacts\n      - Emails\n      summary: List all email activities\n      operationId: List email activities\n      parameters:\n      - name: filters[subscriberid]\n        in: query\n        description: Set this parameter to return only email activities belonging to a given subscriber.\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: integer\n      - name: filters[dealId]\n        in: query\n        description: Set this parameter to return only email activities belonging to a given deal.\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: Email Activities\n          content:\n            application/json:\n              schema:\n                {}\n      deprecated: false\n  /api/3/contact/sync:\n    post:\n      tags:\n      - Contacts\n      summary: Create or update a contact\n      operationId: Create or Update Contact\n      requestBody:\n        description: Update Contact payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactRequest'\n        required: true\n      responses:\n        '200':\n          description: Contact data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactReadResponse'\n      deprecated: false\n  /api/3/contactLists:\n    post:\n      tags:\n      - Contacts\n      summary: Subscribe a contact to a list or unsubscribe a contact from a list.\n      operationId: Subscribe or Unsubscribe contact from list\n      requestBody:\n        description: Subscribe or Unsubscribe from list payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscribeOrUnsubscribeContactRequest'\n        required: true\n      responses:\n        '200':\n          description: List subscription data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscribeOrUnsubscribeContactResponse'\n      deprecated: false\n  ## Generation Not suported in the tool\n  # /api/3/accounts/bulk_delete/{ids}:\n  #   delete:\n  #     tags:\n  #     - Accounts\n  #     - Bulk\n  #     summary: Bulk delete accounts\n  #     operationId: Bulk delete accounts\n  #     parameters:\n  #     - name: ids\n  #       in: path\n  #       description: Array with integers representing ID's of accounts to be deleted\n  #       required: true\n  #       style: simple\n  #       explode: false\n  #       schema:\n  #         type: array\n  #         items:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: Deletion response\n  #     deprecated: false\n  /api/3/import/bulk_import:\n    post:\n      tags:\n      - Contacts\n      - Bulk\n      summary: Bulk import contacts\n      operationId: Bulk import contacts\n      requestBody:\n        description: Bulk import payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BulkImportRequest'\n        required: true\n      responses:\n        '200':\n          description: Bulk import data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkImportResponse'\n      deprecated: false\n    get:\n      tags:\n      - Contacts\n      - Bulk\n      summary: Bulk import status list. After using the POST endpoint to send bulk data, you can use this endpoint to monitor progress.\n      operationId: Bulk Import Status List\n      responses:\n        '200':\n          description: BulkImport status response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkImportStatus'\n      deprecated: false\n  /api/3/import/info:\n    get:\n      tags:\n      - Contacts\n      - Bulk\n      summary: This endpoint returns a specific bulk import's status including the contact IDs of any newly created contacts, and emails of any contacts that failed to be created.\n      operationId: Bulk Import Status Info\n      parameters:\n      - name: batchId\n        in: query\n        description: Batch ID\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: BulkImport status list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkImportStatusInfo'\n      deprecated: false\n  /api/3/campaigns:\n    get:\n      tags:\n      - Campaigns\n      summary: List all campaigns\n      operationId: Get Campaigns\n      parameters:\n        - in: query\n          name: orders[sdate]\n          schema:\n            type: string\n          style: form\n          explode: true        \n          description: Order campaigns by send date\n        - in: query\n          name: orders[ldate]\n          schema:\n            type: string\n          style: form\n          explode: true        \n          description: Order campaigns by last send date\n        - in: query\n          name: filters[automation]\n          schema:\n            type: string\n          style: form\n          explode: true        \n          description: Filter to return automation campaigns          \n      responses:\n        '200':\n          description: Campaigns\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignListResponse'\n      deprecated: false\n  /api/3/campaigns/{campaignId}:\n    get:\n      tags:\n      - Campaigns\n      summary: Retrieve a campaign\n      operationId: Get Campaign by ID\n      parameters:\n      - name: campaignId\n        in: path\n        description: ID of campaign to retrieve\n        required: true\n        style: simple\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: Campaign data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignReadResponse'      \n      deprecated: false\n## Retrieve links associated to campaign \n  /api/3/messages:\n    get:\n      tags:\n      - Messages\n      summary: List all messages\n      operationId: Get Messages\n      responses:\n        '200':\n          description: Message List\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageListResponse'\n      deprecated: false\n## Create a message\n## Retrieve a message\n## Delete a message\n  /api/3/contactTags:\n    post:\n      tags:\n      - Contact\n      - Tags\n      summary: Add a tag to a contact\n      operationId: Add tag to contact\n      requestBody:\n        description: Contact tag data payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTagToContactRequest'\n        required: true\n      responses:\n        '201':\n          description: Contact Tag data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactTagReadResponse'\n      deprecated: false\n  /api/3/contactTags/{tagId}:\n    delete:\n      tags:\n      - Contact\n      - Tags\n      summary: Remove a tag from a contact\n      operationId: Remove tag from contact\n      parameters:\n      - name: tagId\n        in: path\n        description: The contactTag id\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: No Content\n      deprecated: false\n  /api/3/lists:\n    get:\n      tags:\n      - Lists\n      summary: Retrieve all lists\n      operationId: Get Lists\n      parameters:\n      - name: filters[name]\n        in: query\n        description: Filter by the name of the list\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Lists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListListResponse'\n      deprecated: false\n    post:\n      tags:\n      - Lists\n      summary: Create a list\n      operationId: Create List\n      requestBody:\n        description: Create List payload\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateListRequest'\n        required: true\n      responses:\n        '200': \n          description: List\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCreateResponse'\n      deprecated: false\n## Delete a list\n## Retrieve a list\n## Create a list group permission\n\n## Notes\n## Create a note\n## Retrieve a note\n## Update a note\n## Delete a note\ncomponents:\n  parameters:\n    accept:\n      description: The ID of your Unify application\n      in: header\n      name: Accept\n      required: true\n      schema:\n        type: string\n  schemas:\n    AccountListResponse:\n      type: object\n      properties:\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountData'\n    AccountData:\n      title: Account data\n      type: object\n      properties:\n        account:\n          type: object\n          properties:   \n            name:\n              type: string\n            accountUrl:\n              type: string\n            createdTimestamp:\n              type: string\n            updatedTimestamp:\n              type: string\n            links:\n              type: array\n              items:\n                type: string\n            id:\n              type: string\n            fields: \n              type: array\n              items:\n                $ref: '#/components/schemas/Field'\n    CreateAccountRequest:\n      title: Create Account payload\n      required:\n      - account\n      type: object\n      properties:\n        account:\n          $ref: '#/components/schemas/Account'\n    Account:\n      title: Account\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: Account's name\n        accountUrl:\n          type: string\n          description: Account's website\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n          description: Account's custom field values {customFieldId- int, fieldValue- string, fieldCurrency?-string}[]\n    UpdatableAccount:\n      title: Account\n      type: object\n      properties:\n        name:\n          type: string\n          description: Account's name\n        accountUrl:\n          type: string\n          description: Account's website\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n          description: Account's custom field values {customFieldId- int, fieldValue- string, fieldCurrency?-string}[]\n    Field:\n      title: Field\n      required:\n        - customFieldId\n        - fieldValue\n      type: object\n      properties:\n        customFieldId:\n          description: Field ID, ID of the Custom Field Meta Data\n          type: integer\n          format: int32\n        fieldValue:\n          oneOf:\n          - type: string\n          - type: integer\n            format: int32\n          description: Updated field value. For currency field, this needs to be in cents not dollars (or 100 x Base Unit).\n        fieldCurrency:\n          type: string\n          description: Required only for the currency field type. The three letter currency code for the currency value\n    UpdateAccountRequest:\n      title: Update Account payload\n      required:\n        - account\n      type: object\n      properties:\n        account:\n          $ref: '#/components/schemas/UpdatableAccount'\n    CreateAccountNoteRequest:\n      title: Create Account Note payload\n      required:\n        - note\n      type: object\n      properties:\n        note:\n          description: Account note's content\n          type: string\n    NoteData:\n      title: Note\n      type: object\n      properties:\n        note:\n          type: object\n          properties:\n            cdate:\n              type: string\n            id:\n              type: string\n            links:\n              type: object\n              properties:\n                activities:\n                  type: string\n                mentions:\n                  type: string\n                notes:\n                  type: string\n                owner:\n                  type: string\n                user:\n                  type: string\n            mdate:\n              type: string\n            note:\n              type: string\n            owner:\n              type: object\n              properties:\n                id:\n                  type: string\n                type:\n                  type: string               \n            relid:\n              type: object\n            reltype:\n              type: object\n            user:\n              type: object\n            userid:\n              type: object              \n    UpdateAccountNoteRequest:\n      title: Update Account Note payload\n      type: object\n      properties:\n        note:\n          description: Account note's content\n          type: string\n    AccountNoteData:\n      title: Account Note Data\n      type: object   \n      properties:\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountData'\n        note:\n            $ref: '#/components/schemas/NoteData'\n    CreateContactRequest:\n      title: CreateContactRequest\n      required:\n      - contact\n      type: object\n      properties:\n        contact:\n          $ref: '#/components/schemas/Contact'\n    Contact:\n      title: Contact\n      required:\n      - email\n      type: object\n      properties:\n        email:\n          type: string\n          description: Email address of the new contact. Example- 'test@example.com'\n        firstName:\n          type: string\n          description: First name of the new contact.\n        lastName:\n          type: string\n          description: Last name of the new contact.\n        phone:\n          type: integer\n          description: Phone number of the contact.\n        fieldValues:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n    ContactReadResponse:\n      type: object\n      properties:\n        contactAutomations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactAutomation'\n        contactLists:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactList'\n        deals:\n          type: array\n          items:\n            $ref: '#/components/schemas/Deal'\n        fieldValues:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n        geoAddresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoAddress'\n        geoIps:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoIp'\n        contact:\n          $ref: '#/components/schemas/ContactRead'\n    ContactListListResponse:\n      type: object\n      properties:\n        contactLists:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactList'\n    ContactList:\n      type: object\n      properties:\n        contact:\n          type: string\n        list:\n          type: string\n        form:\n          type: string\n          format: nullable\n        seriesid:\n          type: string\n        sdate:\n          type: string\n          format: nullable\n        udate:\n          type: string\n          format: nullable\n        status:\n          type: string\n        responder:\n          type: string\n        sync:\n          type: string\n        unsubreason:\n          type: string\n          format: nullable\n        campaign:\n          type: string\n          format: nullable\n        message:\n          type: string\n          format: nullable\n        first_name:\n          type: string\n        last_name:\n          type: string\n        ip4Sub:\n          type: string\n        sourceid:\n          type: string\n        autosyncLog:\n          type: string\n          format: nullable\n        ip4_last:\n          type: string\n        ip4Unsub:\n          type: string\n        unsubscribeAutomation:\n          type: string\n          format: nullable\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        automation:\n          type: string\n          format: nullable\n    ContactDataResponse:\n      type: object\n      properties:\n        contactDatum:\n          $ref: '#/components/schemas/ContactData'\n    BounceLogResponse:\n      type: object\n      properties:\n        bounceLogs:\n          type: array\n          items:\n            $ref: '#/components/schemas/BounceLog'\n    BounceLog:\n      type: object\n      properties:\n        tstamp:\n          type: string\n          format: date-time\n        bounceid:\n          type: string\n        subscriberid:\n          type: string\n        campaignid:\n          type: string\n        messageid:\n          type: string\n        codeid:\n          type: string\n        email:\n          type: string\n        error:\n          type: string\n        source:\n          type: string\n        created_timestamp:\n          type: string\n        updated_timestamp:\n          type: string\n        created_by:\n          type: string\n          format: nullable\n        updated_by:\n          type: string\n          format: nullable\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        bounce:\n          type: string\n        contact:\n          type: string\n        campaign:\n          type: string\n        message:\n          type: string\n        code:\n          type: string\n    ContactGoalResponse:\n      type: object\n      properties:   \n        contactGoals:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactGoal'\n    ContactGoal:\n      type: object\n      properties:\n        goalid:\n          type: string\n        seriesid:\n          type: string\n        subscriberid:\n          type: string\n        subscriberseriesid:\n          type: string\n        timespan:\n          type: string\n        tstamp:\n          type: string\n          format: date-time\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        goal:\n          type: string\n        automation:\n          type: string\n        contact:\n          type: string\n        contactAutomation:\n          type: string\n    ContactData:\n      type: object\n      properties:\n        contact:\n          type: string\n        tstamp:\n          type: string\n          format: date-time\n        geoTstamp:\n          type: string\n          format: nullable\n        geoIp4:\n          type: string\n        geoCountry2:\n          type: string\n        geo_country:\n          type: string\n        geoState:\n          type: string\n        geoCity:\n          type: string\n        geoZip:\n          type: string\n        geoArea:\n          type: string\n        geoLat:\n          type: string\n        geoLon:\n          type: string\n        geoTz:\n          type: string\n        geoTzOffset:\n          type: string\n        ga_campaign_source:\n          type: string\n        ga_campaign_name:\n          type: string\n        ga_campaign_medium:\n          type: string\n        ga_campaign_term:\n          type: string\n        ga_campaign_content:\n          type: string\n        ga_campaign_customsegment:\n          type: string\n        ga_first_visit:\n          type: string\n          format: nullable\n        ga_times_visited:\n          type: string\n        fb_id:\n          type: string\n        fb_name:\n          type: string\n        tw_id:\n          type: string\n        created_timestamp:\n          type: string\n        updated_timestamp:\n          type: string\n        created_by:\n          type: string\n        updated_by:\n          type: string\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string \n    Deal:\n      type: object\n      properties:\n        owner:\n          type: string\n        contact:\n          type: string\n        organization:\n          type: string\n          format: nullable\n        group:\n          type: string\n          format: nullable\n        title:\n          type: string\n        nexttaskid:\n          type: string\n        currency:\n          type: string\n        status:\n          type: string\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        nextTask:\n          type: string\n          format: nullable\n    GeoAddress:\n      type: object\n      properties:\n        ip4:\n          type: string\n        country2:\n          type: string\n        country:\n          type: string\n        state:\n          type: string\n        city:\n          type: string\n        zip:\n          type: string\n        area:\n          type: string\n        lat:\n          type: string\n        lon:\n          type: string\n        tz:\n          type: string\n        tstamp:\n          type: string\n          format: date-time\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n    GeoIp:\n      type: object\n      properties:\n        contact:\n          type: string\n        campaignid:\n          type: string\n        messageid:\n          type: string\n        geoaddrid:\n          type: string\n        ip4:\n          type: string\n        tstamp:\n          type: string\n          format: date-time\n        geoAddress:\n          type: string\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n    ContactListResponse:\n      type: object\n      properties: \n        scoreValues:\n          type: array\n          items: {}\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactRead'\n        meta:\n          $ref: '#/components/schemas/Meta'\n    ContactRead:\n      type: object\n      properties:\n        cdate:\n          type: string\n          format: date-time\n        email:\n          type: string\n        phone:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        orgid:\n          type: string\n        segmentio_id:\n          type: string\n        bounced_hard:\n          type: string\n        bounced_soft:\n          type: string\n        bounced_date:\n          type: string\n        ip:\n          type: string\n        ua:\n          type: string\n        hash:\n          type: string\n        socialdata_lastcheck:\n          type: string\n        email_local:\n          type: string\n        email_domain:\n          type: string\n        sentcnt:\n          type: string\n        rating_tstamp:\n          type: string\n        gravatar:\n          type: string\n        deleted:\n          type: string\n        anonymized:\n          type: string\n        udate:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n        scoreValues:\n          type: array\n          items: {}\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        organization:\n          type: string\n          format: nullable\n    Links:\n      type: object\n      properties:\n        bounceLogs:\n          type: string\n        contactAutomations:\n          type: string\n        contactData:\n          type: string\n        contactGoals:\n          type: string\n        contactLists:\n          type: string\n        contactLogs:\n          type: string\n        contactTags:\n          type: string\n        contactDeals:\n          type: string\n        deals:\n          type: string\n        fieldValues:\n          type: string\n        geoIps:\n          type: string\n        notes:\n          type: string\n        organization:\n          type: string\n        plusAppend:\n          type: string\n        trackingLogs:\n          type: string\n        scoreValues:\n          type: string\n    Meta:\n      type: object\n      properties:\n        total:\n          type: string\n        page_input:\n          type: object\n          properties:\n            segmentid:\n              type: integer\n              format: int32\n            formid:\n              type: integer\n              format: int32\n            listid:\n              type: integer\n              format: int32\n            tagid:\n              type: integer\n              format: int32\n            limit:\n              type: integer\n              format: int32\n            offset:\n              type: integer\n              format: int32\n            search:\n              type: string\n              format: nullable\n            sort:\n              type: string\n              format: nullable\n            seriesid:\n              type: integer\n              format: int32\n            waitid:\n              type: integer\n              format: int32\n            status:\n              type: integer\n              format: int32\n            forceQuery:\n              type: integer\n              format: int32\n            cacheid:\n              type: string\n    AddContactAutomationRequest:\n      title: Add Contact to Automation payload\n      required:\n      - contactAutomation\n      type: object\n      properties:\n        contactAutomation:\n          $ref: '#/components/schemas/ContactAutomation'\n    ContactAutomation:\n      type: object\n      properties:\n        contact:\n          type: string\n          description: Contact ID of the Contact, to be linked to the contactAutomation\n        automation:\n          type: string\n          description: Automation ID of the automation, to be linked to the contactAutomation\n    ContactAutomationResponse:\n      title: Contact Automation data\n      type: object\n      properties:\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactRead'\n        contactAutomation:\n          $ref: '#/components/schemas/ContactAutomationData'\n    ContactAutomationData:\n      type: object\n      properties:\n        contact:\n          type: string\n        seriesid:\n          type: string\n        startid:\n          type: string\n        status:\n          type: string\n        adddate:\n          type: string\n          format: date-time\n        remdate:\n          type: string\n          format: nullable\n        timespan:\n          type: string\n          format: nullable\n        lastblock:\n          type: string\n        lastdate:\n          type: string\n          format: date-time\n        completedElements:\n          type: string\n        totalElements:\n          type: string\n        completed:\n          type: integer\n          format: int32\n        completeValue:\n          type: integer\n          format: int32\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        automation:\n          type: string\n    ContactAutomationListResponse:\n      title: Contact Automation list\n      type: object\n      properties:\n        contactAutomations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactAutomationData'\n        meta:\n          $ref: '#/components/schemas/Meta'\n    UpdateContactRequest:\n      title: Create or Update Contact payload\n      required:\n      - contact\n      type: object\n      properties:\n        contact:\n          $ref: '#/components/schemas/UpdateContactData'\n    UpdateContactData:\n      title: Contact data update\n      type: object\n      properties:\n        email:\n          type: string\n          description: Email address of the contact to sync\n        firstName:\n          type: string\n          description: First name of the new contact.\n        lastName:\n          type: string\n          description: Last name of the new contact.\n        phone:\n          type: integer\n          description: Phone number of the contact.\n        fieldValues:\n          type: array\n          description: Contact's custom field values [{field, value}]\n          items:\n            $ref: '#/components/schemas/FieldValue'\n    FieldValue:\n      title: FieldValue\n      required:\n      - field\n      - value\n      type: object\n      properties:\n        field:\n          type: string\n          description: Field name\n        value:\n          type: string\n          description: Value related to field name\n    SubscribeOrUnsubscribeContactRequest:\n      title: Subscribe Or Unsubscribe Contact payload\n      required:\n      - contactList\n      type: object\n      properties:\n        contactList:\n          $ref: '#/components/schemas/ContactListData'\n    SubscribeOrUnsubscribeContactResponse:\n      title: Subscribe Or Unsubscribe Contact Response\n      type: object\n      properties:\n        contacts:\n          type: array\n          items:  \n            $ref: '#/components/schemas/ContactRead'      \n        contactList:\n            $ref: '#/components/schemas/ContactList'\n    ContactListData:\n      title: ContactList\n      required:\n      - list\n      - contact\n      - status\n      type: object\n      properties:\n        list:\n          type: integer\n          format: int32\n          description: ID of the list to subscribe the contact to\n        contact:\n          type: integer\n          format: int32\n          description: ID of the contact to subscribe to the list\n        status:\n          type: integer\n          format: int32\n          description: Set to \"1\" to subscribe the contact to the list. Set to \"2\" to unsubscribe the contact from the list.\n            WARNING- If you change a status from unsubscribed to active, you can re-subscribe a contact to a list from which they had manually unsubscribed.\n        sourceid:\n          type: integer\n          format: int32\n          description: Set to \"4\" when re-subscribing a contact to a list\n    ListCreateResponse:\n      type: object\n      properties:\n        list:\n          $ref: '#/components/schemas/ListData'\n    ListListResponse:\n      type: object\n      properties:   \n        lists:\n          type: array\n          items:\n            $ref: '#/components/schemas/ListData'\n        meta:\n          $ref: '#/components/schemas/Meta'\n    ListReadResponse:\n      type: object\n      properties:   \n        list:\n          $ref: '#/components/schemas/ListData'\n    ListData:\n      type: object\n      properties:\n        stringid:\n          type: string\n        userid:\n          type: string\n        name:\n          type: string\n        cdate:\n          type: string\n          format: date-time\n        p_use_tracking:\n          type: string\n        p_use_analytics_read:\n          type: string\n        p_use_analytics_link:\n          type: string\n        p_use_twitter:\n          type: string\n        p_use_facebook:\n          type: string\n        p_embed_image:\n          type: string\n        p_use_captcha:\n          type: string\n        send_last_broadcast:\n          type: string\n        private:\n          type: string\n        analytics_domains:\n          type: string\n          format: nullable\n        analytics_source:\n          type: string\n        analytics_ua:\n          type: string\n        twitter_token:\n          type: string\n        twitter_token_secret:\n          type: string\n        facebook_session:\n          type: string\n          format: nullable\n        carboncopy:\n          type: string\n          format: nullable\n        subscription_notify:\n          type: string\n          format: nullable\n        unsubscription_notify:\n          type: string\n          format: nullable\n        require_name:\n          type: string\n        get_unsubscribe_reason:\n          type: string\n        to_name:\n          type: string\n        optinoptout:\n          type: string\n        sender_name:\n          type: string\n        sender_addr1:\n          type: string\n        sender_addr2:\n          type: string\n        sender_city:\n          type: string\n        sender_state:\n          type: string\n        sender_zip:\n          type: string\n        sender_country:\n          type: string\n        sender_phone:\n          type: string\n        sender_url:\n          type: string\n        sender_reminder:\n          type: string\n        fulladdress:\n          type: string\n        optinmessageid:\n          type: string\n        optoutconf:\n          type: string\n        deletestamp:\n          type: string\n          format: nullable\n        udate:\n          type: string\n          format: nullable\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        user:\n          type: string\n    CampaignListResponse:\n      type: object\n      properties:   \n        campaigns:\n          type: array\n          items:\n            $ref: '#/components/schemas/CampaignData'\n        meta:\n          $ref: '#/components/schemas/Meta'\n    CampaignReadResponse:\n      type: object\n      properties:   \n        campaign:\n          $ref: '#/components/schemas/CampaignData'\n    CampaignData:\n      type: object\n      properties:\n        type:\n          type: string\n        userid:\n          type: string\n        segmentid:\n          type: string\n        bounceid:\n          type: string\n        realcid:\n          type: string\n        sendid:\n          type: string\n        threadid:\n          type: string\n        seriesid:\n          type: string\n        formid:\n          type: string\n        basetemplateid:\n          type: string\n        basemessageid:\n          type: string\n        addressid:\n          type: string\n        source:\n          type: string\n        name:\n          type: string\n        cdate:\n          type: string\n          format: date-time\n        mdate:\n          type: string\n          format: date-time\n        sdate:\n          type: string\n          format: nullable\n        ldate:\n          type: string\n          format: nullable\n        send_amt:\n          type: string\n        total_amt:\n          type: string\n        opens:\n          type: string\n        uniqueopens:\n          type: string\n        linkclicks:\n          type: string\n        uniquelinkclicks:\n          type: string\n        subscriberclicks:\n          type: string\n        forwards:\n          type: string\n        uniqueforwards:\n          type: string\n        hardbounces:\n          type: string\n        softbounces:\n          type: string\n        unsubscribes:\n          type: string\n        unsubreasons:\n          type: string\n        updates:\n          type: string\n        socialshares:\n          type: string\n        replies:\n          type: string\n        uniquereplies:\n          type: string\n        status:\n          type: string\n        public:\n          type: string\n        mail_transfer:\n          type: string\n        mail_send:\n          type: string\n        mail_cleanup:\n          type: string\n        mailer_log_file:\n          type: string\n        tracklinks:\n          type: string\n        tracklinksanalytics:\n          type: string\n        trackreads:\n          type: string\n        trackreadsanalytics:\n          type: string\n        analytics_campaign_name:\n          type: string\n        tweet:\n          type: string\n        facebook:\n          type: string\n        survey:\n          type: string\n        embed_images:\n          type: string\n        htmlunsub:\n          type: string\n        textunsub:\n          type: string\n        htmlunsubdata:\n          type: string\n          format: nullable\n        textunsubdata:\n          type: string\n          format: nullable\n        recurring:\n          type: string\n        willrecur:\n          type: string\n        split_type:\n          type: string\n        split_content:\n          type: string\n        split_offset:\n          type: string\n        split_offset_type:\n          type: string\n        split_winner_messageid:\n          type: string\n        split_winner_awaiting:\n          type: string\n        responder_offset:\n          type: string\n        responder_type:\n          type: string\n        responder_existing:\n          type: string\n        reminder_field:\n          type: string\n        reminder_format:\n          type: string\n          format: nullable\n        reminder_type:\n          type: string\n        reminder_offset:\n          type: string\n        reminder_offset_type:\n          type: string\n        reminder_offset_sign:\n          type: string\n        reminder_last_cron_run:\n          type: string\n          format: nullable\n        activerss_interval:\n          type: string\n        activerss_url:\n          type: string\n          format: nullable\n        activerss_items:\n          type: string\n        ip4:\n          type: string\n        laststep:\n          type: string\n        managetext:\n          type: string\n        schedule:\n          type: string\n        scheduleddate:\n          type: string\n          format: nullable\n        waitpreview:\n          type: string\n        deletestamp:\n          type: string\n          format: nullable\n        replysys:\n          type: string\n        links:\n          $ref: '#/components/schemas/Links'\n        id:\n          type: string\n        user:\n          type: string\n        automation:\n          type: string\n          format: nullable   \n    MessageListResponse:\n      type: object\n      properties:   \n        messages:\n          type: array\n          items:\n            $ref: '#/components/schemas/MessageData'\n        meta:\n          $ref: '#/components/schemas/Meta'\n    MessageReadResponse:\n      type: object\n      properties:   \n        message:\n          $ref: '#/components/schemas/MessageData'\n    MessageData:\n      type: object\n      properties:\n        userid:\n          type: string\n        ed_instanceid:\n          type: string\n        ed_version:\n          type: string\n        cdate:\n          type: string\n          format: date-time\n        mdate:\n          type: string\n          format: date-time\n        name:\n          type: string\n        fromname:\n          type: string\n        fromemail:\n          type: string\n        reply2:\n          type: string\n        priority:\n          type: string\n        charset:\n          type: string\n        encoding:\n          type: string\n        format:\n          type: string\n        subject:\n          type: string\n        preheader_text:\n          type: string\n        text:\n          type: string\n        html:\n          type: string\n        htmlfetch:\n          type: string\n        textfetch:\n          type: string\n        hidden:\n          type: string\n        preview_mime:\n          type: string\n        preview_data:\n          type: string\n    BulkImportRequest:\n      title: Bulk Import payload\n      required:\n      - contacts\n      type: object\n      properties:\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/BulkContactData'\n          description: ''\n        callback:\n          type: string\n          nullable: true\n    BulkContactData:\n      title: Bulk Contact Data\n      required:\n      - email\n      type: object\n      properties:\n        email:\n          type: string\n          description: The contact's email.\n        first_name:\n          type: string\n          description: The contact's first name\n        last_name:\n          type: string\n          description: The contact's last name.\n        phone:\n          type: string\n          description: The contact’s phone number.\n        customer_acct_name:\n          type: string\n          description: The name of the contact’s account.\n        tags:\n          type: array\n          items:\n            type: string\n          description: Each string in the array will be added as a single tag to the contact. New tags will be created if they do not already exist.\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n          description: A list of custom fields to apply to the contact. Each field must contain two fields- Each contact may have up to N custom fields.\n        subscribe:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscribe'\n          description: An array of lists to subscribe the contact to. Contacts may not be subscribed to lists which they have previously unsubscribed from. Each list object contains a single field.\n        unsubscribe:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscribe'\n          description: An array of lists to unsubscribe the contact to. Each list object contains a single field.\n          nullable: true\n    Subscribe:\n      title: Subscribe\n      required:\n      - listid\n      type: object\n      properties:\n        listid:\n          type: string\n          description: The ID of the list to subscribe the contact to or unsubscribe the contact from. \n            Lists must be referenced by the ID that ActiveCampaign assigns to them. \n            You can find the list ID by clicking the list in your ActiveCampaign account then viewing the URL bar. \n            It will look something like this- `/app/contacts/?listid=19\u0026status=1` You can also retrieve the ID number for a list by using the \"Retrieve all lists\" API call.\n    BulkImportResponse:\n      type: object\n      properties:\n        Success:\n          type: integer\n          format: int32\n        queued_contacts:\n          type: integer\n          format: int32\n        batchId:\n          type: string\n        message:\n          type: string\n    BulkImportStatus:\n      type: object\n      properties:\n        outstanding:\n          type: array\n          items:\n            $ref: '#/components/schemas/Batch'\n        recentlyCompleted:\n          type: array\n          items:\n            $ref: '#/components/schemas/Batch'\n    BulkImportStatusInfo:\n      type: object\n      properties:\n        status:\n          type: string\n        success:\n          type: array\n          items:\n            type: string\n        failure:\n          type: array\n          items:\n            type: string\n    Batch:\n      type: object\n      properties:\n        forDate:\n          type: string\n          format: date\n        batches:\n          type: string\n        contacts:\n          type: string\n    AddTagToContactRequest:\n      title: AddatagtoacontactRequest\n      required:\n      - contactTag\n      type: object\n      properties:\n        contactTag:\n          $ref: '#/components/schemas/ContactTag'\n    ContactTag:\n      title: ContactTag\n      type: object\n      properties:\n        contact:\n          type: string\n          description: The id of the Contact\n        tag:\n          type: string\n          description: The id of the tag\n    ContactTagReadResponse:\n      type: object\n      properties:\n        contactTag:\n          $ref: '#/components/schemas/ContactTagData'\n    ContactTagData:\n      type: object\n      properties:\n        cdate:\n          type: string\n          format: date-time\n        contact:\n          type: string\n        id:\n          type: string\n        links:\n          $ref: '#/components/schemas/Links'\n        tag:\n          type: string\n    CreateListRequest:\n      title: Create List payload\n      required:\n      - list\n      type: object\n      properties:\n        list:\n          $ref: '#/components/schemas/List'\n    List:\n      title: List\n      required:\n      - name\n      - stringid\n      - sender_url\n      - sender_reminder\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the list to create\n        stringid:\n          type: string\n          description: URL-safe list name. Example- 'list-name-sample'\n        sender_url:\n          type: string\n          description: The website URL this list is for.\n        sender_reminder:\n          type: string\n          description: A reminder for your contacts as to why they are on this list and you are messaging them.\n        user:\n          type: integer\n          description: User Id of the list owner. A list owner is able to control campaign branding. A property of list.\n            userid also exists on this object; both properties map to the same list owner field and are being maintained in the response object for backward compatibility. \n            If you post values for both list.user and list.userid, the value of list.user will be used.\n          format: int32\n        send_last_broadcast:\n          type: boolean\n          description: Boolean value indicating whether or not to send the last sent campaign to this list to a new subscriber upon subscribing. 1 = yes, 0 = no\n        carboncopy:\n          type: string\n          description: Comma-separated list of email addresses to send a copy of all mailings to upon send\n        subscription_notify:\n          type: string\n          description: Comma-separated list of email addresses to notify when a new subscriber joins this list.\n        unsubscription_notify:\n          type: string\n          description: Comma-separated list of email addresses to notify when a subscriber unsubscribes from this list.\n  securitySchemes:\n    apiToken:\n      type: apiKey\n      in: header\n      name: Api-Token\n      description: \"Provide your API Key as Api-Token. Eg: {apiToken : \u003cYour API Key\u003e}\n        Your API key can be found in your account on the Settings page under the Developer tab.\"",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/activecampaign/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/activecampaign/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}