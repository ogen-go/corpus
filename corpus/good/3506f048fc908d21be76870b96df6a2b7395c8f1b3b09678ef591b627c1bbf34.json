{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radiantearth/stac-api-spec"
		},
		"file": {
			"name": "commons.yaml",
			"size": 0,
			"path": "core/commons.yaml",
			"byteSize": 29680,
			"content": "openapi: 3.0.3\ninfo:\n  title: The SpatioTemporal Asset Catalog API - Commons\n  description: This is the OpenAPI version of the core STAC spec JSON Schemas.\n  version: 1.0.0-rc.1\npaths: {}\ncomponents:\n  responses:\n    Error:\n      description: An error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/exception'\n  schemas:\n    exception:\n      type: object\n      description: |-\n        Information about the exception: an error code plus an optional description.\n      required:\n        - code\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    conformanceClasses:\n      type: object\n      required:\n        - conformsTo\n      properties:\n        conformsTo:\n          description: \u003e-\n            A list of all conformance classes implemented by the server.\n            In addition to the STAC-specific conformance classes, all OGC-related\n            conformance classes listed at `GET /conformances` must be listed here.\n            This entry should mirror what `GET /conformances` returns, if implemented.\n          type: array\n          items:\n            type: string\n    catalog:\n      type: object\n      required:\n        - stac_version\n        - type\n        - id\n        - description\n        - links\n      properties:\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        type:\n          type: string\n        id:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n        links:\n          $ref: '#/components/schemas/links'\n    collection:\n      type: object\n      required:\n        - stac_version\n        - type\n        - id\n        - description\n        - license\n        - extent\n        - links\n      properties:\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        type:\n          type: string\n        id:\n          description: identifier of the collection used, for example, in URIs\n          type: string\n        title:\n          description: human readable title of the collection\n          type: string\n        description:\n          type: string\n          description: \u003e-\n            Detailed multi-line description to fully explain the catalog or\n            collection.\n\n            [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for\n            rich text representation.\n        keywords:\n          type: array\n          description: List of keywords describing the collection.\n          items:\n            type: string\n        license:\n          $ref: '#/components/schemas/license'\n        extent:\n          $ref: '#/components/schemas/extent'\n        providers:\n          $ref: '#/components/schemas/providers'\n        links:\n          $ref: '#/components/schemas/links'\n        summaries:\n          description: |-\n            Summaries are either a unique set of all available values *or*\n            statistics. Statistics by default only specify the range (minimum\n            and maximum values), but can optionally be accompanied by additional\n            statistical values. The range can specify the potential range of\n            values, but it is recommended to be as precise as possible. The set\n            of values must contain at least one element and it is strongly\n            recommended to list all values. It is recommended to list as many\n            properties as reasonable so that consumers get a full overview of\n            the Collection. Properties that are covered by the Collection\n            specification (e.g. `providers` and `license`) may not be repeated\n            in the summaries.\n          type: object\n          additionalProperties:\n            oneOf:\n              - type: array\n                title: Set of values\n                items:\n                  description: A value of any type.\n              - type: object\n                title: Statistics\n                description: |-\n                  By default, only ranges with a minimum and a maximum value can\n                  be specified. Ranges can be specified for ordinal values only,\n                  which means they need to have a rank order. Therefore, ranges\n                  can only be specified for numbers and some special types of\n                  strings. Examples: grades (A to F), dates or times.\n                  Implementors are free to add other derived statistical values\n                  to the object, for example `mean` or `stddev`.\n                required:\n                  - min\n                  - max\n                properties:\n                  min:\n                    anyOf:\n                      - type: string\n                      - type: number\n                  max:\n                    anyOf:\n                      - type: string\n                      - type: number\n      example:\n        stac_version: '1.0.0'\n        stac_extensions: []\n        type: Collection\n        id: Sentinel-2\n        title: 'Sentinel-2 MSI: MultiSpectral Instrument, Level-1C'\n        description: |\n          Sentinel-2 is a wide-swath, high-resolution, multi-spectral\n          imaging mission...\n        license: proprietary\n        keywords:\n          - copernicus\n          - esa\n          - eu\n          - msi\n          - radiance\n          - sentinel\n        providers:\n          - name: ESA\n            roles:\n              - producer\n              - licensor\n            url: 'https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi'\n        extent:\n          spatial:\n            bbox:\n              - - -180\n                - -56\n                - 180\n                - 83\n          temporal:\n            interval:\n              - - '2015-06-23T00:00:00Z'\n                - '2019-07-10T13:44:56Z'\n        summaries:\n          datetime:\n            min: '2015-06-23T00:00:00Z'\n            max: '2019-07-10T13:44:56Z'\n          'sci:citation':\n            - 'Copernicus Sentinel data [Year]'\n          'eo:gsd':\n            - 10\n            - 30\n            - 60\n          'platform':\n            - sentinel-2a\n            - sentinel-2b\n          'constellation':\n            - sentinel-2\n          'instruments':\n            - msi\n          'view:off_nadir':\n            min: 0\n            max: 100\n          'view:sun_elevation':\n            min: 6.78\n            max: 89.9\n          'eo:bands':\n            - - name: B1\n                common_name: coastal\n                center_wavelength: 4.439\n              - name: B2\n                common_name: blue\n                center_wavelength: 4.966\n              - name: B3\n                common_name: green\n                center_wavelength: 5.6\n              - name: B4\n                common_name: red\n                center_wavelength: 6.645\n              - name: B5\n                center_wavelength: 7.039\n              - name: B6\n                center_wavelength: 7.402\n              - name: B7\n                center_wavelength: 7.825\n              - name: B8\n                common_name: nir\n                center_wavelength: 8.351\n              - name: B8A\n                center_wavelength: 8.648\n              - name: B9\n                center_wavelength: 9.45\n              - name: B10\n                center_wavelength: 1.3735\n              - name: B11\n                common_name: swir16\n                center_wavelength: 1.6137\n              - name: B12\n                common_name: swir22\n                center_wavelength: 2.2024\n        links:\n          - rel: self\n            href: 'http://cool-sat.com/collections/Sentinel-2'\n          - rel: root\n            href: 'http://cool-sat.com/collections'\n          - rel: license\n            href: 'https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf'\n            title: Legal notice on the use of Copernicus Sentinel Data and Service Information\n    extent:\n      type: object\n      description: |-\n        The extent of the features in the collection. In the Core only spatial and temporal\n        extents are specified. Extensions may add additional members to represent other\n        extents, for example, thermal or pressure ranges.\n\n        The first item in the array describes the overall extent of\n        the data. All subsequent items describe more precise extents, \n        e.g., to identify clusters of data.\n        Clients only interested in the overall extent will only need to\n        access the first item in each array.\n      required:\n        - spatial\n        - temporal\n      properties:\n        spatial:\n          description: |-\n            The spatial extent of the features in the collection.\n          type: object\n          required:\n            - bbox\n          properties:\n            bbox:\n              description: |-\n                One or more bounding boxes that describe the spatial extent of the dataset.\n\n                The first bounding box describes the overall spatial\n                extent of the data. All subsequent bounding boxes describe \n                more precise bounding boxes, e.g., to identify clusters of data.\n                Clients only interested in the overall spatial extent will\n                only need to access the first item in each array.\n              type: array\n              minItems: 1\n              items:\n                description: |-\n                  Each bounding box is provided as four or six numbers, depending on\n                  whether the coordinate reference system includes a vertical axis\n                  (height or depth):\n\n                  * Lower left corner, coordinate axis 1\n                  * Lower left corner, coordinate axis 2\n                  * Minimum value, coordinate axis 3 (optional)\n                  * Upper right corner, coordinate axis 1\n                  * Upper right corner, coordinate axis 2\n                  * Maximum value, coordinate axis 3 (optional)\n\n                  The coordinate reference system of the values is WGS 84 longitude/latitude\n                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate\n                  reference system is specified in `crs`.\n\n                  For WGS 84 longitude/latitude the values are in most cases the sequence of\n                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.\n                  However, in cases where the box spans the antimeridian the first value\n                  (west-most box edge) is larger than the third value (east-most box edge).\n\n                  If the vertical axis is included, the third and the sixth number are\n                  the bottom and the top of the 3-dimensional bounding box.\n\n                  If a feature has multiple spatial geometry properties, it is the decision of the\n                  server whether only a single spatial geometry property is used to determine\n                  the extent or all relevant geometries.\n                type: array\n                minItems: 4\n                maxItems: 6\n                items:\n                  type: number\n                example:\n                  - -180\n                  - -90\n                  - 180\n                  - 90\n            crs:\n              description: |-\n                Coordinate reference system of the coordinates in the spatial extent\n                (property `bbox`). The default reference system is WGS 84 longitude/latitude.\n                In the Core this is the only supported coordinate reference system.\n                Extensions may support additional coordinate reference systems and add\n                additional enum values.\n              type: string\n              enum:\n                - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n              default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n        temporal:\n          description: |-\n            The temporal extent of the features in the collection.\n          type: object\n          required:\n            - interval\n          properties:\n            interval:\n              description: |-\n                One or more time intervals that describe the temporal extent of the dataset.\n\n                The first time interval describes the overall\n                temporal extent of the data. All subsequent time intervals describe \n                more precise time intervals, e.g., to identify clusters of data.\n                Clients only interested in the overall extent will only need\n                to access the first item in each array.\n              type: array\n              minItems: 1\n              items:\n                description: |-\n                  Begin and end times of the time interval. The timestamps\n                  are in the coordinate reference system specified in `trs`. By default\n                  this is the Gregorian calendar.\n\n                  The value `null` is supported and indicates an open time interval.\n                type: array\n                minItems: 2\n                maxItems: 2\n                items:\n                  type: string\n                  format: date-time\n                  nullable: true\n                example:\n                  - '2011-11-11T12:22:11Z'\n                  - null\n            trs:\n              description: |-\n                Coordinate reference system of the coordinates in the temporal extent\n                (property `interval`). The default reference system is the Gregorian calendar.\n                In the Core this is the only supported temporal reference system.\n                Extensions may support additional temporal reference systems and add\n                additional enum values.\n              type: string\n              enum:\n                - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n              default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n    links:\n      type: array\n      items:\n        $ref: '#/components/schemas/link'\n    link:\n      title: Link\n      type: object\n      required:\n        - href\n        - rel\n      properties:\n        href:\n          type: string\n          format: uri\n          description: The location of the resource\n        rel:\n          type: string\n          description: Relation type of the link\n        type:\n          type: string\n          description: The media type of the resource\n        title:\n          type: string\n          description: Title of the resource\n        method:\n          type: string\n          enum:\n            - GET\n            - POST\n          default: GET\n          description: Specifies the HTTP method that the resource expects\n        headers:\n          type: object\n          description: Object key values pairs they map to headers\n          example:\n            Accept: application/json\n        body:\n          type: object\n          description: For POST requests, the resource can specify the HTTP body as a JSON object.\n        merge:\n          type: boolean\n          default: false\n          description: |-\n            This is only valid when the server is responding to POST request.\n\n            If merge is true, the client is expected to merge the body value\n            into the current request body before following the link.\n            This avoids passing large post bodies back and forth when following\n            links, particularly for navigating pages through the `POST /search`\n            endpoint.\n\n            NOTE: To support form encoding it is expected that a client be able\n            to merge in the key value pairs specified as JSON\n            `{\"next\": \"token\"}` will become `\u0026next=token`.\n    license:\n      type: string\n      description: |-\n        License(s) of the data as a SPDX\n        [License identifier](https://spdx.org/licenses/). Alternatively, use\n        `proprietary` if the license is not on the SPDX license list or\n        `various` if multiple licenses apply. In these two cases links to the\n        license texts SHOULD be added, see the `license` link relation type.\n\n        Non-SPDX licenses SHOULD add a link to the license text with the\n        `license` relation in the links section. The license text MUST NOT be\n        provided as a value of this field. If there is no public license URL\n        available, it is RECOMMENDED to host the license text and\n        link to it.\n      example: Apache-2.0\n    providers:\n      type: array\n      description: \u003e-\n        A list of providers, which may include all organizations capturing or\n        processing the data or the hosting provider. Providers should be listed\n        in chronological order with the most recent provider being the last\n        element of the list.\n      items:\n        type: object\n        title: Provider\n        required:\n          - name\n        properties:\n          name:\n            description: The name of the organization or the individual.\n            type: string\n          description:\n            description: \u003e-\n              Multi-line description to add further provider information such as\n              processing details for processors and producers, hosting details\n              for hosts or basic contact information.\n\n\n              [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for\n              rich text representation.\n            type: string\n          roles:\n            description: |-\n              Roles of the provider.\n\n              The provider's role(s) can be one or more of the following\n              elements:\n\n              * licensor: The organization that is licensing the dataset under\n                the license specified in the collection's license field.\n              * producer: The producer of the data is the provider that\n                initially captured and processed the source data, e.g. ESA for\n                Sentinel-2 data.\n              * processor: A processor is any provider who processed data to a\n                derived product.\n              * host: The host is the actual provider offering the data on their\n                storage. There should be no more than one host, specified as last\n                element of the list.\n            type: array\n            items:\n              type: string\n              enum:\n                - producer\n                - licensor\n                - processor\n                - host\n          url:\n            description: \u003e-\n              Homepage on which the provider describes the dataset and publishes\n              contact information.\n            type: string\n            format: url\n    bbox:\n      description: |-\n        Only features that have a geometry that intersects the bounding box are\n        selected. The bounding box is provided as four or six numbers,\n        depending on whether the coordinate reference system includes a\n        vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2  \n        * Lower left corner, coordinate axis 3 (optional) \n        * Upper right corner, coordinate axis 1 \n        * Upper right corner, coordinate axis 2 \n        * Upper right corner, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n\n        For WGS84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n        If a feature has multiple spatial geometry properties, it is the\n        decision of the server whether only a single spatial geometry property\n        is used to determine the extent or all relevant geometries.\n\n        Example: The bounding box of the New Zealand Exclusive Economic Zone in\n        WGS 84 (from 160.6°E to 170°W and from 55.95°S to 25.89°S) would be\n        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as\n        `bbox=160.6,-55.95,-170,-25.89`.\n      type: array\n      minItems: 4\n      maxItems: 6\n      items:\n        type: number\n      example:\n        - -110\n        - 39.5\n        - -105\n        - 40.5\n    datetime:\n      type: string\n      format: date-time\n      nullable: true\n      description: |-\n        The searchable date and time of the assets, in UTC.\n        It is formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).\n        `null` is allowed, but requires `start_datetime` and `end_datetime` from common metadata to be set.\n      example: '2018-02-12T00:00:00Z'\n    stac_version:\n      title: STAC version\n      type: string\n      example: 1.0.0\n    stac_extensions:\n      title: STAC extensions\n      type: array\n      uniqueItems: true\n      items:\n        anyOf:\n          - title: Reference to a JSON Schema\n            type: string\n            format: uri\n          - title: Reference to a core extension\n            type: string\n    item:\n      description: A GeoJSON Feature augmented with foreign members that contain values relevant to a STAC entity\n      type: object\n      required:\n        - stac_version\n        - id\n        - type\n        - geometry\n        - bbox\n        - links\n        - properties\n        - assets\n      properties:\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        id:\n          $ref: '#/components/schemas/itemId'\n        bbox:\n          $ref: '#/components/schemas/bbox'\n        geometry:\n          $ref: '#/components/schemas/geometryGeoJSON'\n        type:\n          $ref: '#/components/schemas/itemType'\n        links:\n          $ref: '#/components/schemas/links'\n        properties:\n          $ref: '#/components/schemas/properties'\n        assets:\n          $ref: '#/components/schemas/assets'\n      example:\n        stac_version: '1.0.0'\n        stac_extensions:\n          - 'https://stac-extensions.github.io/eo/v1.0.0/schema.json'\n          - 'https://stac-extensions.github.io/view/v1.0.0/schema.json'\n          - 'https://example.com/cs-extension/1.0/schema.json'\n        type: Feature\n        id: CS3-20160503_132131_05\n        bbox:\n          - -122.59750209\n          - 37.48803556\n          - -122.2880486\n          - 37.613537207\n        geometry:\n          type: Polygon\n          coordinates:\n            - - - -122.308150179\n                - 37.488035566\n              - - -122.597502109\n                - 37.538869539\n              - - -122.576687533\n                - 37.613537207\n              - - -122.2880486\n                - 37.562818007\n              - - -122.308150179\n                - 37.488035566\n        properties:\n          datetime: '2016-05-03T13:22:30.040Z'\n          title: A CS3 item\n          license: PDDL-1.0\n          providers:\n            - name: CoolSat\n              roles:\n                - producer\n                - licensor\n              url: 'https://cool-sat.com/'\n          'view:sun_azimuth': 168.7\n          'eo:cloud_cover': 0.12\n          'view:off_nadir': 1.4\n          'platform': coolsat2\n          'instruments':\n            - cool_sensor_v1\n          'eo:bands': []\n          'view:sun_elevation': 33.4\n          'eo:gsd': 0.512\n        collection: CS3\n        links:\n          - rel: self\n            href: 'http://cool-sat.com/collections/CS3/items/20160503_132130_04'\n          - rel: root\n            href: 'http://cool-sat.com/collections'\n          - rel: parent\n            href: 'http://cool-sat.com/collections/CS3'\n          - rel: collection\n            href: 'http://cool-sat.com/collections/CS3'\n        assets:\n          analytic:\n            href: 'http://cool-sat.com/static-catalog/CS3/20160503_132130_04/analytic.tif'\n            title: 4-Band Analytic\n          thumbnail:\n            href: 'http://cool-sat.com/static-catalog/CS3/20160503_132130_04/thumbnail.png'\n            title: Thumbnail\n    itemId:\n      type: string\n      description: Provider identifier, a unique ID.\n    itemType:\n      type: string\n      description: The GeoJSON type\n      enum:\n        - Feature\n    properties:\n      type: object\n      required:\n        - datetime\n      description: provides the core metadata fields plus extensions\n      properties:\n        datetime:\n          $ref: '#/components/schemas/datetime'\n      additionalProperties:\n        description: Any additional properties added in via Item specification or extensions.\n    assets:\n      type: object\n      additionalProperties:\n        type: object\n        required:\n          - href\n        properties:\n          href:\n            type: string\n            format: url\n            description: Link to the asset object\n            example: \u003e-\n              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/thumb.png\n          title:\n            type: string\n            description: Displayed title\n            example: Thumbnail\n          description:\n            type: string\n            description: \u003e-\n              Multi-line description to explain the asset.\n\n\n              [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for\n              rich text representation.\n            example: Small 256x256px PNG thumbnail for a preview.\n          type:\n            type: string\n            description: Media type of the asset\n            example: image/png\n          roles:\n            type: array\n            items:\n              type: string\n            description: Purposes of the asset\n            example:\n              - thumbnail\n    geometryGeoJSON:\n      oneOf:\n        - $ref: '#/components/schemas/pointGeoJSON'\n        - $ref: '#/components/schemas/multipointGeoJSON'\n        - $ref: '#/components/schemas/linestringGeoJSON'\n        - $ref: '#/components/schemas/multilinestringGeoJSON'\n        - $ref: '#/components/schemas/polygonGeoJSON'\n        - $ref: '#/components/schemas/multipolygonGeoJSON'\n        - $ref: '#/components/schemas/geometrycollectionGeoJSON'\n    geometrycollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - geometries\n      properties:\n        type:\n          type: string\n          enum:\n            - GeometryCollection\n        geometries:\n          type: array\n          items:\n            $ref: '#/components/schemas/geometryGeoJSON'\n    linestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - LineString\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    multilinestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiLineString\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    multipointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPoint\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    multipolygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPolygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              type: array\n              minItems: 4\n              items:\n                type: array\n                minItems: 2\n                items:\n                  type: number\n    pointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: number\n    polygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Polygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 4\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    featureCollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - features\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/featureGeoJSON'\n    featureGeoJSON:\n      type: object\n      required:\n        - type\n        - geometry\n        - properties\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          $ref: '#/components/schemas/geometryGeoJSON'\n        properties:\n          type: object\n          nullable: true\n",
			"canonicalURL": "/github.com/radiantearth/stac-api-spec@738f4837ac6bea041dc226219e6d13b2c577fb19/-/blob/core/commons.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/radiantearth/stac-api-spec/blob/738f4837ac6bea041dc226219e6d13b2c577fb19/core/commons.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}