{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "adyen.com-RecurringService-25-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/adyen.com-RecurringService-25-openapi.yaml",
			"byteSize": 20168,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://pal-test.adyen.com/pal/servlet/Recurring/v25\ninfo:\n  contact:\n    email: support@adyen.com\n    name: Adyen Support\n    url: https://support.adyen.com/\n    x-twitter: Adyen\n  description: \u003e-\n    The Recurring APIs allow you to manage and remove your tokens or saved\n    payment details. Tokens should be created with validation during a payment\n    request.\n\n\n    For more information, refer to our [Tokenization documentation](https://docs.adyen.com/developers/features/tokenization).\n\n    ## Authentication\n\n    To connect to the Recurring API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/developers/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:\n\n\n    ```\n\n    curl\n\n    -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\\n\n    -H \"Content-Type: application/json\" \\\n\n    ...\n\n    ```\n\n    Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/developers/development-resources/live-endpoints).\n\n\n    ## Versioning\n\n    Recurring API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n\n    For example:\n\n    ```\n\n    https://pal-test.adyen.com/pal/servlet/Recurring/v25/disable\n\n    ```\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: Adyen Recurring Service\n  version: \"25\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://raw.githubusercontent.com/adyen/adyen-openapi/master/specs/3.0/RecurringService-v25.json\n      version: \"3.0\"\n  x-preferred: true\n  x-providerName: adyen.com\n  x-serviceName: RecurringService\npaths:\n  /disable:\n    post:\n      description: \u003e-\n        Disables stored payment details to stop charging a shopper with this\n        particular recurring detail ID.\n\n\n        For more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisableRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisableResult\"\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Disables stored payment details.\n      x-groupName: General\n      x-sortIndex: 2\n  /listRecurringDetails:\n    post:\n      description: \u003e-\n        Lists the stored payment details for a shopper, if there are any\n        available. The recurring detail ID can be used with a regular\n        authorisation request to charge the shopper. A summary of the payment\n        detail is returned for presentation to the shopper.\n\n\n        For more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RecurringDetailsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecurringDetailsResult\"\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Retrieves stored payment details for a shopper.\n      x-groupName: General\n      x-sortIndex: 1\ncomponents:\n  schemas:\n    Address:\n      properties:\n        city:\n          description: \u003e-\n            The name of the city.\n\n            \u003eRequired if either houseNumberOrName, street, postalCode, or stateOrProvince are provided.\n          type: string\n        country:\n          description: \u003e-\n            The two-character country code of the address\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: \u003e-\n            The postal code.\n\n            \u003eA maximum of five (5) digits for an address in the USA, or a maximum of ten (10) characters for an address in all other countries.\n\n            \u003eRequired if either houseNumberOrName, street, city, or stateOrProvince are provided.\n          type: string\n        stateOrProvince:\n          description: \u003e-\n            The abbreviation of the state or province.\n\n            \u003eTwo (2) characters for an address in the USA or Canada, or a maximum of three (3) characters for an address in all other countries.\n\n            \u003eRequired for an address in the USA or Canada if either houseNumberOrName, street, city, or postalCode are provided.\n          type: string\n        street:\n          description: \u003e-\n            The name of the street.\n\n            \u003eThe house number should not be included in this field; it should be separately provided via `houseNumberOrName`.\n\n            \u003eRequired if either houseNumberOrName, city, postalCode, or stateOrProvince are provided.\n          type: string\n      required:\n        - country\n    BankAccount:\n      properties:\n        bankAccountNumber:\n          description: The bank account number (without separators).\n          type: string\n        bankCity:\n          description: The bank city.\n          type: string\n        bankLocationId:\n          description: The location id of the bank. The field value is `nil` in most cases.\n          type: string\n        bankName:\n          description: The name of the bank.\n          type: string\n        bic:\n          description: The [Business Identifier\n            Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT\n            address assigned to a bank. The field value is `nil` in most cases.\n          type: string\n        countryCode:\n          description: |-\n            Country code where the bank is located.\n\n            A valid value is an ISO two-character country code (e.g. 'NL').\n          type: string\n        iban:\n          description: The [International Bank Account\n            Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number)\n            (IBAN).\n          type: string\n        ownerName:\n          description: \u003e-\n            The name of the bank account holder.\n\n            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:\n\n            * χ12 is converted to ch12.\n\n            * üA is converted to euA.\n\n            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\n\n            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:\n\n            * John17 - allowed.\n\n            * J17 - allowed.\n\n            * 171 - not allowed.\n\n            * John-7 - allowed.\n\n            \u003e If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.\n          type: string\n        taxId:\n          description: The bank account holder's tax ID.\n          type: string\n    Card:\n      properties:\n        cvc:\n          description: \u003e-\n            The [card verification\n            code](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid)\n            (1-20 characters). Depending on the card brand, it is known also as:\n\n            * CVV2/CVC2 – length: 3 digits\n\n            * CID – length: 4 digits\n\n            \u003e If you are using [Client-Side Encryption](https://docs.adyen.com/developers/features/client-side-encryption), the CVC code is present in the encrypted data. You must never post the card details to the server.\n\n            \u003e This field must be always present in a [one-click payment request](https://docs.adyen.com/developers/classic-integration/recurring-payments).\n\n            \u003e When this value is returned in a response, it is always empty because it is not stored.\n          maxLength: 20\n          minLength: 1\n          type: string\n        expiryMonth:\n          description: |-\n            The card expiry month.\n            Format: 2 digits, zero-padded for single digits. For example:\n            * 03 = March\n            * 11 = November\n          maxLength: 2\n          minLength: 1\n          type: string\n        expiryYear:\n          description: |-\n            The card expiry year.\n            Format: 4 digits. For example: 2020\n          maxLength: 4\n          minLength: 4\n          type: string\n        holderName:\n          description: The name of the cardholder, as printed on the card.\n          maxLength: 50\n          minLength: 1\n          type: string\n        issueNumber:\n          description: The issue number of the card (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        number:\n          description: \u003e-\n            The card number (4-19 characters). Do not use any separators.\n\n            When this value is returned in a response, only the last 4 digits of the card number are returned.\n          maxLength: 19\n          minLength: 4\n          type: string\n        startMonth:\n          description: The month component of the start date (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        startYear:\n          description: The year component of the start date (for some UK debit cards only).\n          maxLength: 4\n          minLength: 4\n          type: string\n      required:\n        - number\n        - expiryMonth\n        - expiryYear\n        - holderName\n    DisableRequest:\n      properties:\n        contract:\n          description: \u003e-\n            Specify the contract if you only want to disable a specific use.\n\n\n            This field can be set to one of the following values, or to their combination (comma-separated):\n\n            * ONECLICK\n\n            * RECURRING\n\n            * PAYOUT\n          type: string\n        merchantAccount:\n          description: The merchant account identifier with which you want to process the\n            transaction.\n          type: string\n        recurringDetailReference:\n          description: \u003e-\n            The ID that uniquely identifies the recurring detail reference.\n\n\n            If it is not provided, the whole recurring contract of the `shopperReference` will be disabled, which includes all recurring details.\n          type: string\n        shopperReference:\n          description: \u003e-\n            The ID that uniquely identifies the shopper.\n\n\n            This `shopperReference` must be the same as the `shopperReference` used in the initial payment.\n          type: string\n      required:\n        - merchantAccount\n        - shopperReference\n    DisableResult:\n      properties:\n        response:\n          description: Depending on whether a specific recurring detail was in the request,\n            result is either [detail-successfully-disabled] or\n            [all-details-successfully-disabled].\n          type: string\n    Name:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        gender:\n          description: |-\n            The gender.\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.\n          enum:\n            - MALE\n            - FEMALE\n            - UNKNOWN\n          maxLength: 1\n          minLength: 1\n          type: string\n        infix:\n          description: |-\n            The name's infix, if applicable.\n            \u003eA maximum length of twenty (20) characters is imposed.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n        - firstName\n        - lastName\n        - gender\n    Recurring:\n      properties:\n        contract:\n          description: \u003e-\n            The type of recurring contract to be used.\n\n            Possible values:\n\n            * `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid).\n\n            * `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/developers/payment-glossary#cardnotpresentcnp).\n\n            * `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.\n\n            * `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/developers/features/third-party-payouts).\n          enum:\n            - ONECLICK\n            - RECURRING\n            - PAYOUT\n          type: string\n        recurringDetailName:\n          description: A descriptive name for this detail.\n          type: string\n        tokenService:\n          description: The name of the token service.\n          enum:\n            - VISATOKENSERVICE\n            - MCTOKENSERVICE\n          type: string\n    RecurringDetail:\n      properties:\n        additionalData:\n          description: \u003e-\n            This field contains additional data, which may be returned in a\n            particular response.\n\n\n            The additionalData object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to [RecurringDetail.additionalData](https://docs.adyen.com/developers/api-reference/recurring-api#recurringdetailadditionaldata).\n          type: object\n        alias:\n          description: |-\n            The alias of the credit card number.\n\n            Applies only to recurring contracts storing credit card details\n          type: string\n        aliasType:\n          description: |-\n            The alias type of the credit card number.\n\n            Applies only to recurring contracts storing credit card details.\n          type: string\n        bank:\n          $ref: \"#/components/schemas/BankAccount\"\n          description: A container for bank account data.\n        billingAddress:\n          $ref: \"#/components/schemas/Address\"\n          description: The billing address.\n        card:\n          $ref: \"#/components/schemas/Card\"\n          description: A container for card data.\n        contractTypes:\n          description: Types of recurring contracts.\n          items:\n            type: string\n          type: array\n        creationDate:\n          description: The date when the recurring details were created.\n          format: date-time\n          type: string\n        firstPspReference:\n          description: The `pspReference` of the first recurring payment that created the\n            recurring detail.\n          type: string\n        name:\n          description: An optional descriptive name for this recurring detail.\n          type: string\n        paymentMethodVariant:\n          description: The  type or sub-brand of a payment method used, e.g. Visa Debit,\n            Visa Corporate, etc. For more information, refer to\n            [PaymentMethodVariant](https://docs.adyen.com/developers/api-reference/common-api/paymentmethodvariant).\n          type: string\n        recurringDetailReference:\n          description: The reference that uniquely identifies the recurring detail.\n          type: string\n        shopperName:\n          $ref: \"#/components/schemas/Name\"\n          description: The name of the shopper.\n        socialSecurityNumber:\n          description: A shopper's social security number (only in countries where it is\n            legal to collect).\n          type: string\n        variant:\n          description: The payment method, such as “mc\", \"visa\", \"ideal\", \"paypal\".\n          type: string\n      required:\n        - recurringDetailReference\n        - variant\n    RecurringDetailsRequest:\n      properties:\n        merchantAccount:\n          description: The merchant account identifier you want to process the\n            (transaction) request with.\n          type: string\n        recurring:\n          $ref: \"#/components/schemas/Recurring\"\n          description: \u003e-\n            A container for the type of a recurring contract to be retrieved.\n\n\n            The contract value needs to match the contract value submitted in the payment transaction used to create a recurring contract.\n\n            However, if `ONECLICK,RECURRING` is the original contract definition in the initial payment, then `contract` should take either `ONECLICK` or `RECURRING`, depending on whether or not you want the shopper to enter their card's security code when they finalize their purchase.\n        shopperReference:\n          description: The reference you use to uniquely identify the shopper (e.g. user ID\n            or account ID).\n          type: string\n      required:\n        - merchantAccount\n        - shopperReference\n    RecurringDetailsResult:\n      properties:\n        creationDate:\n          description: The date when the recurring details were created.\n          format: date-time\n          type: string\n        details:\n          description: Payment details stored for recurring payments.\n          items:\n            $ref: \"#/components/schemas/RecurringDetail\"\n          type: array\n        lastKnownShopperEmail:\n          description: The most recent email for this shopper (if available).\n          type: string\n        shopperReference:\n          description: The reference you use to uniquely identify the shopper (e.g. user ID\n            or account ID).\n          type: string\n    ScheduleAccountUpdaterRequest:\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          type: object\n        card:\n          $ref: \"#/components/schemas/Card\"\n        genericBlockId:\n          format: int64\n          type: integer\n        genericFileId:\n          format: int64\n          type: integer\n        genericLineId:\n          format: int64\n          type: integer\n        merchantAccount:\n          type: string\n        reference:\n          type: string\n        selectedRecurringDetailReference:\n          type: string\n        shopperReference:\n          type: string\n        updateAfter:\n          format: date-time\n          type: string\n      required:\n        - merchantAccount\n    ScheduleAccountUpdaterResult:\n      properties:\n        accountUpdaterAction:\n          type: string\n        newAlias:\n          type: string\n        newExpiryMonth:\n          type: string\n        newExpiryYear:\n          type: string\n        processedDate:\n          format: date-time\n          type: string\n        pspReference:\n          type: string\n        result:\n          type: string\nx-groups:\n  - General\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/adyen.com-RecurringService-25-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/adyen.com-RecurringService-25-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}