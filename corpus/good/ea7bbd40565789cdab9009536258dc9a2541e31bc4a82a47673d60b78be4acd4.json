{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/intelligent-retail/smart-store"
		},
		"file": {
			"name": "pos-service-api.yaml",
			"size": 0,
			"path": "docs/api/pos-service-api.yaml",
			"byteSize": 10812,
			"content": "openapi: 3.0.2\ninfo:\n  title: POS API\n  version: 1.0.0\n  description: POSサービスのAPI\n  license:\n    name: MIT license\n    url: https://opensource.org/licenses/mit-license.php\nservers:\n- url: 'https://{functionName}.azurewebsites.net/api/{apiVersion}'\n  description: \"Azure Functions server\"\n  variables:\n    functionName:\n      default: pos-api\n    apiVersion:\n      default: v1\n- url: http://localhost:7071/api/{apiVersion}\n  description: \"Local server\"\n  variables:\n    apiVersion:\n      default: v1\npaths:\n  /carts:\n    post:\n      operationId: createCart\n      description: 企業・店舗・端末・ユーザ情報を元にカートを作成します。\n      summary: カート作成要求\n      requestBody:\n        description: 作成するカート情報\n        content:\n          'application/json':\n            schema:\n              type: object\n              properties:\n                companyCode:\n                  type: string\n                  example: \"00100\"\n                storeCode:\n                  type: string\n                  example: \"12345\"\n                terminalNo:\n                  type: integer\n                  format: int32\n                  example: 1\n                userId:\n                  type: string\n                  example: \"1\"\n                userName:\n                  type: string\n                  example: \"テストユーザ\"\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            'application/json':\n              schema:\n                properties:\n                  cartId:\n                    type: string\n                    example: 748D99C-5338-4209-B4CF-4300580F474D\n        400:\n          description: Bad Request\n      security:\n      - api_key: []\n  /carts/{cartId}:\n    get:\n      operationId: getCart\n      description: カート状態の情報を取得します。\n      summary: カート状態取得\n      parameters:\n      - name: cartId\n        in: path\n        description: 取得したいカートID\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n                  store:\n                    $ref: \"#/components/schemas/store\"\n                  user:\n                    $ref: \"#/components/schemas/user\"\n        404:\n          description: Not Found\n      security:\n      - api_key: []\n    delete:\n      operationId: cancelTransaction\n      description: 取引を中止します。(中止取引を作成します)\n      summary: 取引中止\n      parameters:\n      - name: cartId\n        in: path\n        description: 操作対象のカートID\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      security:\n      - api_key: []\n  /carts/{cartId}/bill:\n    post:\n      operationId: bill\n      description: 取引を確定します。\n      summary: 取引確定\n      parameters:\n      - name: cartId\n        in: path\n        description: 操作対象のカートID\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      security:\n      - api_key: []\n  /carts/{cartId}/Items:\n    post:\n      operationId: addItems\n      description: 商品と数量を元にカートに商品を登録します。\n      summary: 商品追加\n      parameters:\n      - name: cartId\n        in: path\n        description: 操作対象のカートID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: 追加する商品情報\n        content:\n          'application/json':\n            schema:\n              type: object\n              properties:\n                items:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/addItems\"\n        required: true\n      responses:\n        200:\n          description: OK\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      security:\n      - api_key: []\n  /carts/{cartId}/Items/{itemCode}:\n    delete:\n      operationId: deleteItem\n      description: 商品と数量を元にカートの商品を削除します。\n      summary: 商品削除\n      parameters:\n      - name: cartId\n        in: path\n        description: 操作対象のカートID\n        required: true\n        schema:\n          type: string\n      - name: itemCode\n        in: path\n        description: 削除する商品コード\n        required: true\n        schema:\n          type: string\n      - name: quantity\n        in: query\n        description: 削除する商品数量\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      security:\n      - api_key: []\n  /carts/{cartId}/payments:\n    post:\n      operationId: payments\n      description: 支払情報を追加します。\n      summary: 支払い追加\n      parameters:\n      - name: cartId\n        in: path\n        description: 操作対象のカートID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: 追加する支払い情報\n        content:\n          'application/json':\n            schema:\n              type: object\n              properties:\n                payments:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/addPayments\"\n        required: true\n      responses:\n        200:\n          description: OK\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      security:\n      - api_key: []\n  /carts/{cartId}/subtotal:\n    post:\n      operationId: subtotal\n      description: 小計モードに遷移します。\n      summary: 小計\n      parameters:\n      - name: cartId\n        in: path\n        description: 操作対象のカートID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: 確定した商品情報\n        content:\n          'application/json':\n            schema:\n              type: object\n              properties:\n                items:\n                  type: array\n                  items: \n                    $ref: \"#/components/schemas/addItems\"\n        required: true\n      responses:\n        200:\n          description: OK\n        400:\n          description: Bad Request\n        404:\n          description: Not Found\n      security:\n      - api_key: []\ncomponents:\n  schemas: \n    addItems:\n      type: object\n      properties:\n        itemCode:\n          type: string\n          example: \"4901427401646\"\n        quantity:\n          type: integer\n          format: int32\n          example: 1\n    addPayments:\n      type: object\n      properties:\n        paymentCode:\n          type: string\n          example: \"01\"\n        amount:\n          type: integer\n          format: int32\n          example: 0\n    store:\n      type: object\n      properties:\n        storeCode:\n          type: string\n          example: 0001\n        storeName:\n          type: string\n          example: テスト店\n        terminalNo:\n          type: integer\n          format: int32\n          example: 1\n    user:\n      type: object\n      properties:\n        userId:\n          type: string\n          example: 000001\n        userName:\n          type: string\n          example: テストユーザ\n    cart:\n      type: object\n      properties:\n        cartId:\n          type: string\n          example: 748D99C-5338-4209-B4CF-4300580F474D\n        totalAmount:\n          type: number\n          format: double\n          example: 1.0\n        subtotalAmount:\n          type: number\n          format: double\n          example: 1.0\n        totalQuantity:\n          type: integer\n          format: int32\n          example: 1\n        depositAmount:\n          type: number\n          format: double\n          example: 1.0\n        changeAmount:\n          type: number\n          format: double\n          example: 1.0\n        balance:\n          type: number\n          format: double\n          example: 1.0\n        receiptNo:\n          type: integer\n          format: int64\n          example: 1\n        receiptText:\n          type: string\n          example: \n        transactionNo:\n          type: integer\n          format: int64\n          example: 1\n        cartStatus:\n          type: string\n          example: 01\n        lineItems:\n          type: array\n          items:\n            $ref: \"#/components/schemas/cartLineItems\"\n        payments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/cartPayments\"\n        taxes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/cartTaxes\" \n    cartLineItems:\n      type: object\n      properties:\n        lineNo:\n          type: integer\n          format: int32\n          example: 1\n        itemCode:\n          type: string\n          example: \"4901427401646\"\n        itemName:\n          type: string\n          example: テスト商品\n        unitPrice:\n          type: number\n          format: double\n          example: 1.0\n        quantity:\n          type: integer\n          format: int32\n          example: 1\n        amount:\n          type: number\n          format: double\n          example: 1.0\n        imageUrls:\n              type: array\n              items:\n                type: string\n              example:\n                - \"https://SmartRetail.co.jp/itemimages/12345/4901427401646.jpg\"\n    cartPayments:\n      type: object\n      properties:\n        paymentNo:\n          type: integer\n          format: int32\n          example: 1\n        paymentCode:\n          type: string\n          example: 01\n        paymentName:\n          type: string\n          example: 電子マネー\n        paymentAmount:\n          type: number\n          format: double\n          example: 1.0\n    cartTaxes:\n      type: object\n      properties:\n        taxNo:\n          type: integer\n          format: int32\n          example: 1\n        taxName:\n          type: string\n          example: 内税8%\n        taxAmount:\n          type: number\n          format: double\n          example: 1.0\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: x-functions-key\n      in: header\n",
			"canonicalURL": "/github.com/intelligent-retail/smart-store@eb3afe1fc79309e556ebe0e33316a1035acb3ec6/-/blob/docs/api/pos-service-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/intelligent-retail/smart-store/blob/eb3afe1fc79309e556ebe0e33316a1035acb3ec6/docs/api/pos-service-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}