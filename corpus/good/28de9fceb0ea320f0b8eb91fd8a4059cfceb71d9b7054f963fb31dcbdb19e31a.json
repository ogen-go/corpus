{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/hhs.gov/2/openapi.yaml",
			"byteSize": 86161,
			"content": "openapi: 3.0.0\nservers:\n  - url: /api/v2\ninfo:\n  contact:\n    email: syndicationadmin@hhs.gov\n  description: \u003cdiv class=\"swagger-ui-wrap extraFooter\"\u003e\u003ch3\u003eCommon Features / Behaviors\u003c/h3\u003e \u003cdiv class=\"features\"\u003e \u003cul\u003e \u003cli\u003e\u003cstrong\u003e* \"sort\" param:\u003c/strong\u003e supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. \u003cbr/\u003e \u003cstrong\u003e\u003cspan\u003eExamples:\u003c/span\u003e\u003c/strong\u003e \u003cul\u003e \u003cli\u003e\u003cspan class=\"example\"\u003ename\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name ascending\u003c/span\u003e\u003c/li\u003e \u003cli\u003e\u003cspan class=\"example\"\u003e-name\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name descending\u003c/span\u003e\u003c/li\u003e \u003cli\u003e\u003cspan class=\"example\"\u003e-name,id\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name descending and then by id ascending\u003c/span\u003e\u003c/li\u003e \u003cli\u003e\u003cspan class=\"example\"\u003eid,-dateContentAuthored\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by id ascending and then date descending\u003c/span\u003e\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e\u003cstrong\u003eDate formats:\u003c/strong\u003e Date input format is expected to be based on \u003ca href=\"http://www.ietf.org/rfc/rfc3339.txt\"\u003eRFC 3339\u003c/a\u003e. \u003cbr/\u003e \u003cspan\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003c/span\u003e \u003cul\u003e\u003cli\u003e2013-11-18T18:43:01Z\u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e\n  license:\n    name: GNU GENERAL PUBLIC LICENSE\n    url: http://www.gnu.org/licenses/gpl.html\n  termsOfService: http://www.hhs.gov/web/socialmedia/policies/tos.html#ready\n  title: HHS Media Services API\n  version: \"2\"\n  x-apisguru-categories:\n    - open_data\n  x-logo:\n    backgroundColor: \"#185394\"\n    url: http://www.hhs.gov/sites/all/themes/project_h/css/images/hhs_logo.png\n  x-origin:\n    - converter:\n        url: https://github.com/mermade/oas-kit\n        version: 2.6.0\n      format: openapi\n      url: https://api.digitalmedia.hhs.gov/swagger\n      version: \"3.0\"\n  x-providerName: hhs.gov\ntags:\n  - description: Information about media\n    name: media\n  - description: Information about languages\n    name: languages\n  - description: Information about media types\n    name: mediaTypes\n  - description: Information about tags\n    name: tags\n  - description: Information about campaigns\n    name: campaigns\n  - description: Information about tags\n    name: sources\n  - description: Global Search\n    name: resources\n  - description: Get media from user generated lists.\n    name: userMediaLists\npaths:\n  /resources.json:\n    get:\n      description: Global search\n      parameters:\n        - allowEmptyValue: false\n          description: The search query supplied by the user\n          explode: false\n          in: query\n          name: q\n          required: true\n          schema:\n            format: \"\"\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ResourceWrapped\"\n                title: ArrayOfResources\n                type: array\n          description: \"\\\"Returns the list of Resources matching the search query 'q'.\u003cp\u003eThe search query 'q' is a Lucene query.\u003cbr\u003eThe syntax for a Lucene query can be found \u003ca href=\\\"http://lucene.apache.org/core/2_9_4/queryparsersyntax.html\\\"\u003ehere\u003c/a\u003e.\\\"\"\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Resources by search query\n      tags:\n        - resources\n  /resources/campaigns.json:\n    get:\n      description: Media Listings for a specific campaign\n      parameters:\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The offset of the records set to return for pagination\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: \"* Set of fields to sort the records by.\"\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CampaignWrapped\"\n          description: Returns the list of Campaigns.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get Campaigns\n      tags:\n        - campaigns\n  \"/resources/campaigns/{id}.json\":\n    get:\n      description: Information about a specific campaign\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CampaignWrapped\"\n          description: Returns the Campaign identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Campaign by ID\n      tags:\n        - campaigns\n  \"/resources/campaigns/{id}/media.json\":\n    get:\n      description: Campaign Listings\n      parameters:\n        - description: The id of the campaign to find media items for\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The offset of the records set to return for pagination\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItemWrapped\"\n          description: Returns the list of MediaItems for the Campaign identified by the 'id'.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems by Campaign ID\n      tags:\n        - campaigns\n  \"/resources/campaigns/{id}/syndicate.{format}\":\n    get:\n      description: MediaItem\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: \"Method used to render an html request. Accepts one: [mv, list, feed]\"\n          explode: false\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SyndicateMarshallerWrapped\"\n          description: Renders the list of MediaItems associated with the Tag identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems for Campaign\n      tags:\n        - campaigns\n  /resources/languages.json:\n    get:\n      description: Language Listings\n      parameters:\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return records starting at the offset index.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LanguageWrapped\"\n                title: ArrayOfLanguages\n                type: array\n          description: Returns the list Languages.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get Languages\n      tags:\n        - languages\n  \"/resources/languages/{id}.json\":\n    get:\n      description: Information about a specific language\n      parameters:\n        - description: The id of the language to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LanguageWrapped\"\n                title: ArrayOfLanguages\n                type: array\n          description: Returns the Language identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Language by ID\n      tags:\n        - languages\n  /resources/media.json:\n    get:\n      description: Media Items Listings\n      parameters:\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The offset of the records set to return for pagination.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: \"* Set of fields to sort the records by.\"\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: \"* The ascending or descending order.\"\n          explode: false\n          in: query\n          name: order\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items belonging to the specified media type[s].\n          explode: false\n          in: query\n          name: mediaTypes\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items containing the provided name, case insensitive.\n          explode: false\n          in: query\n          name: name\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Restrict filtering to media items in a specific collection.\n          explode: false\n          in: query\n          name: collectionId\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items containing the partial name, case insensitive.\n          explode: false\n          in: query\n          name: nameContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items containing the provided partial description, case insensitive.\n          explode: false\n          in: query\n          name: descriptionContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items which have the provided sourceUrl, case insensitive.\n          explode: false\n          in: query\n          name: sourceUrl\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items which contain the provided partial sourceUrl, case insensitive.\n          explode: false\n          in: query\n          name: sourceUrlContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items which have the provided customThumbnailUrl, case insensitive.\n          explode: false\n          in: query\n          name: customThumbnailUrl\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items which contain the provided partial customThumbnailUrl, case insensitive.\n          explode: false\n          in: query\n          name: customThumbnailUrlContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items authored on the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: dateContentAuthored\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated on the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: dateContentUpdated\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items published on the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: dateContentPublished\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items reviewed on the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: dateContentReviewed\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items syndicated on the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: dateSyndicationCaptured\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated through the syndication system on the provided day, (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: dateSyndicationUpdated\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items authored since the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentAuthoredSinceDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items authored before the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentAuthoredBeforeDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).\n          explode: false\n          in: query\n          name: contentAuthoredInRange\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated since the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentUpdatedSinceDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated before the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentUpdatedBeforeDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated between the provided start and end days (RFC 3339, comma separated, time ignored).\n          explode: false\n          in: query\n          name: contentUpdatedInRange\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated since the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentPublishedSinceDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items published before the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentPublishedBeforeDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items published between the provided start and end days (RFC 3339, comma separated, time ignored).\n          explode: false\n          in: query\n          name: contentPublishedInRange\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items reviewed since the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentReviewedSinceDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items reviewed before the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: contentReviewedBeforeDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items reviewed between the provided start and end days (RFC 3339, comma separated, time ignored).\n          explode: false\n          in: query\n          name: contentReviewedInRange\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items authored since the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: syndicationCapturedSinceDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items authored before the provided day (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: syndicationCapturedBeforeDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).\n          explode: false\n          in: query\n          name: syndicationCapturedInRange\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated since the provided day, (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: syndicationUpdatedSinceDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated before the provided day, (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: syndicationUpdatedBeforeDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items updated between the provided start and end days, (RFC 3339, comma separated, time ignored).\n          explode: false\n          in: query\n          name: syndicationUpdatedInRange\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items visible since the provided day, (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: syndicationVisibleSinceDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items visible before the provided day, (RFC 3339, time ignored).\n          explode: false\n          in: query\n          name: syndicationVisibleBeforeDate\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items visible between the provided start and end days, (RFC 3339, comma separated, time ignored).\n          explode: false\n          in: query\n          name: syndicationVisibleInRange\n          required: false\n          schema:\n            format: date\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items written in the language specified by Id.\n          explode: false\n          in: query\n          name: languageId\n          required: false\n          schema:\n            format: int64\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items written in the language specified by name, case insensitive.\n          explode: false\n          in: query\n          name: languageName\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items written in the language specified by 639-2 isoCode , case insensitive.\n          explode: false\n          in: query\n          name: languageIsoCode\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items which match the provided hash, case insensitive.\n          explode: false\n          in: query\n          name: hash\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items which match the provided partial hash, case insensitive.\n          explode: false\n          in: query\n          name: hashContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items that belong to the source specified by Id.\n          explode: false\n          in: query\n          name: sourceId\n          required: false\n          schema:\n            format: int64\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items that belong to the source specified by name, case insensitive.\n          explode: false\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items that belong to the source specified by partial name, case insensitive.\n          explode: false\n          in: query\n          name: sourceNameContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items that belong to the source specified by acronym, case insensitive.\n          explode: false\n          in: query\n          name: sourceAcronym\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items that belong to the source specified by partial acronym, case insensitive.\n          explode: false\n          in: query\n          name: sourceAcronymContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find only media items tagged with the specified tag Ids.\n          explode: false\n          in: query\n          name: tagIds\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find only media from within the supplied list of Ids.\n          explode: false\n          in: query\n          name: restrictToSet\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Find all media items containing the createdBy value.\n          explode: false\n          in: query\n          name: createdBy\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Returns the list of MediaItems matching the specified query parameters.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems\n      tags:\n        - media\n  /resources/media/featured.json:\n    get:\n      description: Get the list of featured content in the syndication system\n      parameters:\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return records starting at the offset index.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItem\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Get the list of featured content in the syndication system\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get the list of featured content in the syndication system\n      tags:\n        - media\n  \"/resources/media/mostPopularMedia.{format}\":\n    get:\n      description: Get the media with the highest ratings.\n      parameters:\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The offset of the records set to return for pagination.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Returns the list of MediaItems with the highest ratings.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems by popularity\n      tags:\n        - media\n  /resources/media/searchResults.json:\n    get:\n      description: Full search\n      parameters:\n        - allowEmptyValue: false\n          description: The search query supplied by the user\n          explode: false\n          in: query\n          name: q\n          required: true\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The offset of the records set to return for pagination.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Returns the list of MediaItems matching the search query 'q'.\u003cp\u003ePlease enter keyword or URL in search query 'q'.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems by search query\n      tags:\n        - media\n  \"/resources/media/{id}.json\":\n    get:\n      description: Information about a specific media item\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Returns the MediaItem identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItem by ID\n      tags:\n        - media\n  \"/resources/media/{id}/content\":\n    get:\n      description: The actual media content (html, image, etc...)\n      parameters:\n        - description: The id of the media to show content for.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: The method that called this method\n          explode: false\n          in: query\n          name: calledByBuild\n          required: false\n          schema:\n            format: \"\"\n            type: boolean\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Returns the raw content (html, image, etc...) for the MediaItem identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get content for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/embed.json\":\n    get:\n      description: Get the javascript or iframe embed code for this item (to embed it on a web page).\n      parameters:\n        - description: The id of the media to get embed code for.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: Currently supports 'iframe', defaults to 'javascript'.\n          explode: false\n          in: query\n          name: flavor\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: The width of the generated iframe.\n          explode: false\n          in: query\n          name: width\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The height of the generated iframe.\n          explode: false\n          in: query\n          name: height\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The name of the iframe element\n          explode: false\n          in: query\n          name: iframeName\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Should a reference to the JQuery Library be omitted?\n          explode: false\n          in: query\n          name: excludeJquery\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: Should the div to insert content into be omitted?\n          explode: false\n          in: query\n          name: excludeDiv\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: Should the div to insert content into have a specific name?\n          explode: false\n          in: query\n          name: divId\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: \"Method used to render an html request. Accepts one: [mv, list, feed]\"\n          explode: false\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Returns the javascript or iframe embed code for the MediaItem identified by 'id'.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get embed code for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/preview.jpg\":\n    get:\n      description: Get the jpg preview of the content item where applicable.\n      parameters:\n        - description: The id of the media to get a preview for.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Returns the JPG preview, where applicable, for the MediaItem identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Tag by ID\n      tags:\n        - media\n  \"/resources/media/{id}/relatedMedia.{format}\":\n    get:\n      description: Get the media related to the current media item.\n      parameters:\n        - description: The id of the media item to get related media for\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return records starting at the offset index.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Returns the list of MediaItems related to the MediaItem identified by the 'id'.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get related MediaItems by ID\n      tags:\n        - media\n  \"/resources/media/{id}/syndicate.{format}\":\n    get:\n      description: Get syndicated content.\n      parameters:\n        - description: The id of the media to show embed code for.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: The css class to target for extraction.\n          explode: false\n          in: query\n          name: cssClass\n          required: false\n          schema:\n            default: syndicate\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Remove in-line styles from content.\n          explode: false\n          in: query\n          name: stripStyles\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: Remove script tags from content.\n          explode: false\n          in: query\n          name: stripScripts\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: Remove image tags from content.\n          explode: false\n          in: query\n          name: stripImages\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: Remove break tags from content.\n          explode: false\n          in: query\n          name: stripBreaks\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: Remove class attributes from content (except 'syndicate').\n          explode: false\n          in: query\n          name: stripClasses\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: Set font size (in points) of p, div, and span tags.\n          explode: false\n          in: query\n          name: font-size\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Accepts valid CSS float options, such as 'left' or 'right'. Will inject a style into the content before rendering.\n          explode: false\n          in: query\n          name: imageFloat\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Accepts 4 CSV values representing pixel sizes of margin similar to CSS. Default format is 'north,east,south,west' - for example '0,10,10,0' would put a 10 pixel margin on the right and bottom sides of an image. Will inject a style into the content before rendering.\n          explode: false\n          in: query\n          name: imageMargin\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: If content is a video, the embeded video will auto play when loaded.\n          explode: false\n          in: query\n          name: autoplay\n          required: false\n          schema:\n            default: true\n            format: \"\"\n            type: boolean\n          style: form\n        - allowEmptyValue: false\n          description: If content is a video, related items will be shown at the end of playback.\n          explode: false\n          in: query\n          name: rel\n          required: false\n          schema:\n            default: false\n            format: \"\"\n            type: boolean\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SyndicateMarshallerWrapped\"\n          description: Returns the syndicated content for a given MediaItem in the specified 'format' (HTML or JSON).\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get syndicated content for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/thumbnail.jpg\":\n    get:\n      description: Get the jpg thumbnail of the content item where applicable.\n      parameters:\n        - description: The id of the media to get a thumbnail for.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Returns the JPG thumbnail, where applicable, for the MediaItem identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get JPG thumbnail for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/youtubeMetaData.json\":\n    get:\n      description: Youtube meta-data for a video item.\n      parameters:\n        - description: The id of the video to show meta data for.\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  callback:\n                    type: string\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                  results:\n                    items:\n                      $ref: \"#/components/schemas/YoutubeMetadata\"\n                    type: array\n                type: object\n          description: Returns the Youtube metadata, where applicable, for the MediaItem identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Youtube metadata for MediaItem\n      tags:\n        - media\n  \"/resources/mediaTypes.{format}\":\n    get:\n      description: Information about media types\n      parameters:\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaTypeHolderWrapped\"\n                title: ArrayOfMediaTypes\n                type: array\n          description: Returns the list of available MediaTypes.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaTypes\n      tags:\n        - mediaTypes\n  /resources/sources.json:\n    get:\n      description: Source Listings\n      parameters:\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return records starting at the offset index.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SourceWrapped\"\n                title: ArrayOfSources\n                type: array\n          description: Returns the list of Sources.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Sources\n      tags:\n        - sources\n  \"/resources/sources/{id}.json\":\n    get:\n      description: Information about a specific source.\n      parameters:\n        - description: The id of the source to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SourceWrapped\"\n                title: ArrayOfSources\n                type: array\n          description: Returns the Source identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Source by ID\n      tags:\n        - sources\n  \"/resources/sources/{id}/syndicate.{format}\":\n    get:\n      description: MediaItem\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: \"Method used to render an html request. Accepts one: [mv, list, feed]\"\n          explode: false\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfSyndicatedItems\n                type: array\n          description: Renders the list of MediaItems associated with the Source identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems for Source\n      tags:\n        - sources\n  \"/resources/tags.{format}\":\n    get:\n      description: List of Tags\n      parameters:\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return records starting at the offset index.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return tags[s] matching the supplied name\n          explode: false\n          in: query\n          name: name\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Return tags which contain the supplied partial name.\n          explode: false\n          in: query\n          name: nameContains\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: Return tags associated with the supplied media id.\n          explode: false\n          in: query\n          name: mediaId\n          required: false\n          schema:\n            format: int64\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return tags belonging to the supplied tag type id.\n          explode: false\n          in: query\n          name: typeId\n          required: false\n          schema:\n            format: int64\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return tags belonging to the supplied tag type name.\n          explode: false\n          in: query\n          name: typeName\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagMarshallerWrapped\"\n                title: ArrayOfTags\n                type: array\n          description: Returns the list of Tags matching the specified query parameters in the specified 'format'.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get Tags\n      tags:\n        - tags\n  \"/resources/tags/tagLanguages.{format}\":\n    get:\n      description: List of Tag Languages\n      parameters:\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagLanguageMarshallerWrapped\"\n                title: ArrayOfTagLanguages\n                type: array\n          description: Returns the list of TagLanguages\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get TagLanguages\n      tags:\n        - tags\n  \"/resources/tags/tagTypes.{format}\":\n    get:\n      description: List of Types\n      parameters:\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagTypeMarshallerWrapped\"\n                title: ArrayOfTagTypes\n                type: array\n          description: Renders the list of MediaItems associated with the Tag identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems for Tag\n      tags:\n        - tags\n  \"/resources/tags/{id}.{format}\":\n    get:\n      description: Information about a specific tag\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagMarshallerWrapped\"\n                title: ArrayOfTags\n                type: array\n          description: Returns the Tag identified by the 'id' in the specified 'format'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get Tag by ID\n      tags:\n        - tags\n  \"/resources/tags/{id}/media.{format}\":\n    get:\n      description: MediaItem\n      parameters:\n        - description: The id of the tag to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return records starting at the offset index.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Returns the list of MediaItems associated with the Tag identified by the 'id'.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems for Tag\n      tags:\n        - tags\n  \"/resources/tags/{id}/related.{format}\":\n    get:\n      description: Information about related tags to a specific tag\n      parameters:\n        - description: The id of the tag to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: The name of the property to which sorting will be applied\n          explode: false\n          in: query\n          name: sort\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - allowEmptyValue: false\n          description: The maximum number of records to return\n          explode: false\n          in: query\n          name: max\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - allowEmptyValue: false\n          description: Return records starting at the offset index.\n          explode: false\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagMarshallerWrapped\"\n                title: ArrayOfTags\n                type: array\n          description: Returns the list of Tags related to the Tag identified by the 'id' in the specified format.\n        \"400\":\n          description: Bad Request\n        \"500\":\n          description: Internal Server Error\n      summary: Get related Tags by ID\n      tags:\n        - tags\n  \"/resources/tags/{id}/syndicate.{format}\":\n    get:\n      description: MediaItem\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: \"Method used to render an html request. Accepts one: [mv, list, feed]\"\n          explode: false\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            format: \"\"\n            type: string\n          style: form\n        - description: Automatically added\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Renders the list of MediaItems associated with the Tag identified by the 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get MediaItems for Tag\n      tags:\n        - tags\n  \"/resources/userMediaLists/{id}.json\":\n    get:\n      description: Get a specific user media list.\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n        - allowEmptyValue: false\n          description: \"Method used to render an html request. Accepts one: [mv, list, feed]\"\n          explode: false\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            format: int64\n            type: string\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MediaItemWrapped\"\n                title: ArrayOfMediaItems\n                type: array\n          description: Get a specific user media list by 'id'.\n        \"400\":\n          description: Invalid ID\n        \"500\":\n          description: Internal Server Error\n      summary: Get UserMediaList by ID\n      tags:\n        - userMediaLists\ncomponents:\n  schemas:\n    AlternateImage:\n      properties:\n        height:\n          format: int32\n          type: integer\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        url:\n          type: string\n        width:\n          format: int32\n          type: integer\n      type: object\n    AlternateImageWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/AlternateImage\"\n          type: array\n      type: object\n    Campaign:\n      properties:\n        contactEmail:\n          type: string\n        description:\n          type: string\n        endDate:\n          format: date\n          type: string\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        startDate:\n          format: date\n          type: string\n      type: object\n    CampaignWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n      type: object\n    Collection:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      type: object\n    CollectionWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Collection\"\n          type: array\n      type: object\n    ExtendedAttribute:\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        value:\n          type: string\n      type: object\n    ExtendedAttributeWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n      type: object\n    Html:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      type: object\n    HtmlWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Html\"\n          type: array\n      type: object\n    Image:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        height:\n          format: int32\n          type: integer\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n        width:\n          format: int32\n          type: integer\n      type: object\n    ImageWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n      type: object\n    Infographic:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        height:\n          format: int32\n          type: integer\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n        width:\n          format: int32\n          type: integer\n      type: object\n    InfographicWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Infographic\"\n          type: array\n      type: object\n    Language:\n      properties:\n        id:\n          format: int64\n          type: integer\n        isActive:\n          type: boolean\n        isoCode:\n          type: string\n        name:\n          type: string\n      type: object\n    LanguageWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Language\"\n          type: array\n      type: object\n    MediaItem:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      type: object\n    MediaItemWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n      type: object\n    MediaTypeHolder:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n      type: object\n    MediaTypeHolderWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/MediaTypeHolder\"\n          type: array\n      type: object\n    Message:\n      properties:\n        errorCode:\n          type: string\n        errorDetail:\n          type: string\n        errorMessage:\n          type: string\n        userMessage:\n          type: string\n      type: object\n    MessageWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Message\"\n          type: array\n      type: object\n    Meta:\n      properties:\n        messages:\n          items:\n            $ref: \"#/components/schemas/Message\"\n          type: array\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        status:\n          type: integer\n      type: object\n    MetaWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Meta\"\n          type: array\n      type: object\n    PDF:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      type: object\n    PDFWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/PDF\"\n          type: array\n      type: object\n    Pagination:\n      properties:\n        count:\n          type: integer\n        currentUrl:\n          type: string\n        max:\n          type: integer\n        nextUrl:\n          type: string\n        offset:\n          type: integer\n        pageNum:\n          type: integer\n        previousUrl:\n          type: string\n        sort:\n          type: string\n        total:\n          type: integer\n        totalPages:\n          type: integer\n      type: object\n    PaginationWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Pagination\"\n          type: array\n      type: object\n    ResourceWrapped: {}\n    Source:\n      properties:\n        acronym:\n          type: string\n        contactEmail:\n          type: string\n        id:\n          format: int64\n          type: integer\n        largeLogoUrl:\n          type: string\n        name:\n          type: string\n        smallLogoUrl:\n          type: string\n        websiteUrl:\n          type: string\n      type: object\n    SourceWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Source\"\n          type: array\n      type: object\n    SyndicateMarshaller:\n      properties:\n        content:\n          type: string\n        description:\n          type: string\n        id:\n          type: integer\n        mediaType:\n          type: string\n        name:\n          type: string\n        sourceUrl:\n          type: string\n      type: object\n    SyndicateMarshallerWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/SyndicateMarshaller\"\n          type: array\n      type: object\n    TagLanguageMarshaller:\n      properties:\n        id:\n          type: integer\n        isActive:\n          type: boolean\n        isoCode:\n          type: string\n        name:\n          type: string\n      type: object\n    TagLanguageMarshallerWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/TagLanguageMarshaller\"\n          type: array\n      type: object\n    TagMarshaller:\n      properties:\n        id:\n          type: integer\n        language:\n          $ref: \"#/components/schemas/TagLanguageMarshaller\"\n        name:\n          type: string\n        type:\n          $ref: \"#/components/schemas/TagTypeMarshaller\"\n      type: object\n    TagMarshallerWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/TagMarshaller\"\n          type: array\n      type: object\n    TagTypeMarshaller:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      type: object\n    TagTypeMarshallerWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/TagTypeMarshaller\"\n          type: array\n      type: object\n    Tweet:\n      properties:\n        account:\n          $ref: \"#/components/schemas/TwitterAccount\"\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        mediaUrl:\n          type: string\n        messageText:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n        tweetDate:\n          format: date\n          type: string\n        tweetId:\n          format: int32\n          type: integer\n        videoVariantUrl:\n          type: string\n      type: object\n    TweetWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          type: array\n      type: object\n    TwitterAccount: {}\n    Video:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          items:\n            $ref: \"#/components/schemas/ExtendedAttribute\"\n          type: array\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      type: object\n    VideoWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Video\"\n          type: array\n      type: object\n    YoutubeMetadata:\n      properties: {}\n      type: object\n    YoutubeMetadataWrapped:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/YoutubeMetadata\"\n          type: array\n      type: object\n    test: {}\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/hhs.gov/2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/hhs.gov/2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}