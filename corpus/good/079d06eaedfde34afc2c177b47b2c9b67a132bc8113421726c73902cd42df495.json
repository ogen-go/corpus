{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rocboss/paopao-ce"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "docs/openapi.json",
			"byteSize": 10900,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"paopao-ce API\",\n      \"description\": \"# The paopao-ce API documentation\\n\\nWelcome to the paopao-ce API documentation!\\n\\n\",\n      \"version\": \"0.1.0\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"https://api.paopao.info\"\n      }\n    ],\n    \"tags\": [],\n    \"paths\": {\n      \"/{bucket}\": {\n        \"post\": {\n          \"summary\": \"Upload Image\",\n          \"description\": \"Upload an image to the given bucket.\\nThe `content-type` header must be provided as well\\nas the `content-length` header otherwise the request will be rejected.\\n\\nThe uploaded file must also not exceed the given `content-length`.\",\n          \"parameters\": [\n            {\n              \"name\": \"bucket\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"in\": \"path\",\n              \"description\": \"The bucket that the image should be uploaded.\",\n              \"required\": true,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"content-length\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"format\": \"uint64\"\n              },\n              \"in\": \"header\",\n              \"description\": \"The total size of the image in bytes.\",\n              \"required\": true,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"format\",\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ImageKind\"\n              },\n              \"in\": \"query\",\n              \"description\": \"The format that the uploaded image is encoded in.\\n\\nIf not provided, lust will guess the encoding.\",\n              \"required\": false,\n              \"deprecated\": false\n            }\n          ],\n          \"requestBody\": {\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            },\n            \"required\": true\n          },\n          \"responses\": {\n            \"200\": {\n              \"description\": \"\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/UploadInfo\"\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Bucket not found\"\n            },\n            \"400\": {\n              \"description\": \"The image format was incorrect or the system was\\nunable to guess the format of the image.\"\n            },\n            \"413\": {\n              \"description\": \"The upload exceeds the configured maximum file size.\"\n            },\n            \"401\": {\n              \"description\": \"You are not authorized to complete this action.\\n\\nThis normally means the `Authorization` bearer has been left out\\nof the request or is invalid.\"\n            }\n          }\n        }\n      },\n      \"/{bucket}/{image_id}\": {\n        \"get\": {\n          \"summary\": \"Fetch Image\",\n          \"description\": \"Fetch the image from the storage backend and apply and additional affects\\nif required.\",\n          \"parameters\": [\n            {\n              \"name\": \"bucket\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"in\": \"path\",\n              \"description\": \"The bucket to try fetch the image from.\",\n              \"required\": true,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"image_id\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"in\": \"path\",\n              \"description\": \"The id of the image.\",\n              \"required\": true,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"format\",\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ImageKind\"\n              },\n              \"in\": \"query\",\n              \"description\": \"The encoding format that the image should be returned as.\",\n              \"required\": false,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"size\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"in\": \"query\",\n              \"description\": \"The size preset that should be used when returning the image.\",\n              \"required\": false,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"width\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"format\": \"uint32\"\n              },\n              \"in\": \"query\",\n              \"description\": \"A custom width to resize the returned image to.\",\n              \"required\": false,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"height\",\n              \"schema\": {\n                \"type\": \"integer\",\n                \"format\": \"uint32\"\n              },\n              \"in\": \"query\",\n              \"description\": \"A custom height to resize the returned image to.\",\n              \"required\": false,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"accept\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"in\": \"header\",\n              \"description\": \"A set of `,` seperated content-types that could be sent as a response.\\nE.g. `image/png,image/webp,image/gif`\",\n              \"required\": false,\n              \"deprecated\": false\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"\",\n              \"content\": {\n                \"application/octet-stream\": {\n                  \"schema\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              },\n              \"headers\": {\n                \"CONTENT-TYPE\": {\n                  \"required\": true,\n                  \"deprecated\": false,\n                  \"schema\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"The request is invalid with the current configuration.\\n\\nSee the detail section for more info.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/Detail\"\n                  }\n                }\n              }\n            },\n            \"404\": {\n              \"description\": \"Bucket does not exist or image does not exist.\\n\\nSee the detail section for more info.\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/Detail\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"delete\": {\n          \"summary\": \"Delete Image\",\n          \"description\": \"Delete the given image.\\nThis will purge all variants of the image including sizing presets and formats.\\n\\nImages that do not exist already will be ignored and will not return a 404.\",\n          \"parameters\": [\n            {\n              \"name\": \"bucket\",\n              \"schema\": {\n                \"type\": \"string\"\n              },\n              \"in\": \"path\",\n              \"description\": \"The bucket to try delete the image from.\",\n              \"required\": true,\n              \"deprecated\": false\n            },\n            {\n              \"name\": \"image_id\",\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"in\": \"path\",\n              \"description\": \"The image to delete try delete.\",\n              \"required\": true,\n              \"deprecated\": false\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"\"\n            },\n            \"401\": {\n              \"description\": \"You are not authorized to complete this action.\\n\\nThis normally means the `Authorization` bearer has been left out\\nof the request or is invalid.\"\n            },\n            \"404\": {\n              \"description\": \"Bucket does not exist.\"\n            }\n          }\n        }\n      }\n    },\n    \"components\": {\n      \"schemas\": {\n        \"Detail\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"detail\"\n          ],\n          \"properties\": {\n            \"detail\": {\n              \"type\": \"string\",\n              \"description\": \"Additional information regarding the response.\"\n            }\n          }\n        },\n        \"ImageKind\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"png\",\n            \"jpeg\",\n            \"webp\",\n            \"gif\"\n          ]\n        },\n        \"ImageUploadInfo\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"sizing_id\"\n          ],\n          \"properties\": {\n            \"sizing_id\": {\n              \"type\": \"integer\",\n              \"format\": \"uint32\",\n              \"description\": \"The computed image sizing id.\\n\\nThis is useful for tracking files outside of lust as this is\\ngenerally used for filtering within the storage systems.\"\n            }\n          }\n        },\n        \"UploadInfo\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"image_id\",\n            \"processing_time\",\n            \"io_time\",\n            \"checksum\",\n            \"images\",\n            \"bucket_id\"\n          ],\n          \"properties\": {\n            \"image_id\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"description\": \"The generated ID for the file.\\n\\nThis can be used to access the file for the given bucket.\"\n            },\n            \"processing_time\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"The time spent processing the image in seconds.\"\n            },\n            \"io_time\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"description\": \"The time spent uploading the image to the persistent store.\"\n            },\n            \"checksum\": {\n              \"type\": \"integer\",\n              \"format\": \"uint32\",\n              \"description\": \"The crc32 checksum of the uploaded image.\"\n            },\n            \"images\": {\n              \"type\": \"array\",\n              \"description\": \"The information that is specific to the image.\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ImageUploadInfo\"\n              }\n            },\n            \"bucket_id\": {\n              \"type\": \"integer\",\n              \"format\": \"uint32\",\n              \"description\": \"The id of the bucket the image was stored in.\\n\\nThis is useful for tracking files outside of lust as this is\\ngenerally used for filtering within the storage systems.\"\n            }\n          }\n        }\n      }\n    }\n  }",
			"canonicalURL": "/github.com/rocboss/paopao-ce@b86acf3e756e73666bcbc6bfb379d6523b6ee2d8/-/blob/docs/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/rocboss/paopao-ce/blob/b86acf3e756e73666bcbc6bfb379d6523b6ee2d8/docs/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}