{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stribny/flask-api-quickstart"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "docs/api.yaml",
			"byteSize": 6553,
			"content": "openapi: 3.0.0\ninfo:\n  title: Flask API Quickstart\n  description: API documentation\n  version: 0.0.1\npaths:\n  /ping:\n    get:\n      summary: Health endpoint\n      tags:\n        - app\n      responses:\n        \"200\":\n          description: Application is running\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    example: running\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  /protected:\n    get:\n      summary: Sample auth-protected endpoint\n      tags:\n        - app\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Example\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: Protected message\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  \"/api/v1/auth/signup\":\n    post:\n      summary: Sign up/create user account\n      tags:\n        - auth\n      requestBody:\n        description: Signup parameters (all required)\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  minLength: 5\n                  format: https://pypi.org/project/python-usernames/\n                email:\n                  type: string\n                  format: email\n                password:\n                  type: string\n                  minLength: 8\n              example:\n                username: username1\n                email: mail@example.com\n                password: Password1\n      responses:\n        \"200\":\n          description: User created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntityError\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  \"/api/v1/auth/login\":\n    post:\n      summary: Log in/issue auth token\n      tags:\n        - auth\n      requestBody:\n        description: Login parameters (all required)\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  minLength: 5\n                  format: https://pypi.org/project/python-usernames/\n                password:\n                  type: string\n                  minLength: 8\n              example:\n                username: username1\n                password: Password1\n      responses:\n        \"200\":\n          description: Token issued\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/InvalidCredentialsError\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\n  \"/api/v1/auth/logout\":\n    post:\n      summary: Log out/invalidate auth token\n      tags:\n        - auth\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Token invalidated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"500\":\n          $ref: \"#/components/responses/InternalError\"\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  responses:\n    BadRequestError:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errorCode:\n                type: string\n                enum: [BAD_REQUEST]\n                example: BAD_REQUEST\n              errorMessage:\n                type: string\n                example: XXX field is missing.\n    InvalidCredentialsError:\n      description: Username or password is wrong\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errorCode:\n                type: string\n                enum: [INVALID_CREDENTIALS]\n                example: INVALID_CREDENTIALS\n              errorMessage:\n                type: string\n                example: Invalid username or password.\n    UnauthorizedError:\n      description: Access token is missing or invalid\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errorCode:\n                type: string\n                enum: [INVALID_TOKEN, TOKEN_EXPIRED]\n                example: INVALID_TOKEN\n              errorMessage:\n                type: string\n                example: Token is invalid or missing.\n    UnprocessableEntityError:\n      description: Unprocessable entity/Validation error\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errorCode:\n                type: string\n                enum: [UNPROCESSABLE_ENTITY, INVALID_FIELD]\n                example: INVALID_FIELD\n              errorMessage:\n                type: string\n                example: Invalid 'username'. Username contains forbidden characters or is a reserved word.\n    InternalError:\n      description: Internal application error\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errorCode:\n                type: string\n                enum: [INTERNAL_ERROR]\n                example: INTERNAL_ERROR\n              errorMessage:\n                type: string\n                example: Request cannot be processed at the moment.\n",
			"canonicalURL": "/github.com/stribny/flask-api-quickstart@dfe35c24d2ffcf952280c63d1ce5ae22ef69c188/-/blob/docs/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stribny/flask-api-quickstart/blob/dfe35c24d2ffcf952280c63d1ce5ae22ef69c188/docs/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}