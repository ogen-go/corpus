{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/thorchain/midgard"
		},
		"file": {
			"name": "openapi-v1.0.0.yml",
			"size": 0,
			"path": "pkg/delivery/http/openapi-v1.0.0.yml",
			"byteSize": 33969,
			"content": "openapi: 3.0.0\ninfo:\n  title: Midgard Public API\n  version: 0.5.4\n  contact:\n    email: devs@thorchain.org\n  description: The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st and prepares information about the network to be readily available for public users. The API parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. Midgard does not hold critical information. To interact with BEPSwap and Asgardex, users should query THORChain directly.\npaths:\n  \"/v1/swagger.json\":\n    get:\n      operationId: GetSwagger\n      summary: Get Swagger\n      description: Returns human and machine readable swagger/openapi specification.\n      responses:\n        \"200\":\n          description: human and machine readable swagger/openapi specification\n      tags:\n        - Specification\n  \"/v1/doc\":\n    get:\n      operationId: GetDocs\n      summary: Get Documents\n      description: Swagger/openapi 3.0 specification generated documents.\n      responses:\n        \"200\":\n          description: swagger/openapi 3.0 spec generated docs\n      tags:\n        - Documentation\n  \"/v1/health\":\n    get:\n      operationId: GetHealth\n      summary: Get Health\n      description: Returns an object containing the health response of the API.\n      responses:\n        \"200\":\n          $ref: '#/components/responses/HealthResponse'\n  \"/v1/txs\":\n    get:\n      operationId: GetTxDetails\n      summary: Get details of a tx by address, asset or tx-id\n      description: Return an array containing the event details\n      parameters:\n        - in: query\n          name: address\n          description: Address of sender or recipient of any in/out tx in event\n          required: false\n          schema:\n            type: string\n          example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5\n        - in: query\n          name: txid\n          description: ID of any in/out tx in event\n          required: false\n          schema:\n            type: string\n          example: 2F624637DE179665BA3322B864DB9F30001FD37B4E0D22A0B6ECE6A5B078DAB4\n        - in: query\n          name: asset\n          description: Any asset used in event (CHAIN.SYMBOL)\n          required: false\n          schema:\n            type: string\n          example: BNB.TOMOB-1E1\n        - in: query\n          name: type\n          description: One or more comma separated unique types of event\n          required: false\n          schema:\n            type: string\n          example: [swap, stake, unstake, add, refund, doubleSwap]\n        - in: query\n          name: offset\n          description: pagination offset\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - in: query\n          name: limit\n          description: pagination limit\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n            maximum: 50\n      responses:\n        \"200\":\n          $ref: '#/components/responses/TxsResponse'\n  \"/v1/stats\":\n    get:\n      operationId: GetStats\n      summary: Get Global Stats\n      description: Returns an object containing global stats for all pools and all transactions.\n      responses:\n        \"200\":\n          $ref: '#/components/responses/StatsResponse'\n  \"/v1/assets\":\n    get:\n      operationId: GetAssetInfo\n      summary: Get Asset Information\n      description: Detailed information about a specific asset. Returns enough information to display a unique asset in various user interfaces, including latest price.\n      parameters:\n        - in: query\n          name: asset\n          description: One or more comma separated unique asset (CHAIN.SYMBOL)\n          required: true\n          schema:\n            type: string\n          example: [BNB.TOMOB-1E1, BNB.TCAN-014]\n      responses:\n        \"400\":\n          $ref: '#/components/responses/GeneralErrorResponse'\n        \"200\":\n          $ref: '#/components/responses/AssetsDetailedResponse'\n  \"/v1/pools\":\n    get:\n      operationId: GetPools\n      summary: Get Asset Pools\n      description: Returns an array containing all the assets supported on BEPSwap pools\n      responses:\n        \"400\":\n          $ref: '#/components/responses/GeneralErrorResponse'\n        \"200\":\n          $ref: '#/components/responses/PoolsResponse'\n  \"/v1/pools/detail\":\n    get:\n      operationId: GetPoolsDetails\n      summary: Get Pools Details\n      description: Returns an object containing all the pool details for that asset. \n      parameters:\n        - in: query\n          name: view\n          description: Specifies the returning view\n          schema:\n            type: string\n            enum: \n              - balances\n              - simple\n              - full\n            default: full\n        - in: query\n          name: asset\n          description: One or more comma separated unique asset (CHAIN.SYMBOL)\n          required: true\n          schema:\n            type: string\n          example: [BNB.TOMOB-1E1,BNB.TCAN-014]\n      responses:\n        \"200\":\n          $ref: '#/components/responses/PoolsDetailedResponse'\n\n  \"/v1/stakers\":\n    get:\n      operationId: GetStakersData\n      summary: Get Stakers\n      description: Returns an array containing the addresses for all stakers.\n      responses:\n        \"200\":\n          \"$ref\": \"#/components/responses/StakersResponse\"\n\n  \"/v1/stakers/{address}\":\n    get:\n      operationId: GetStakersAddressData\n      summary: Get Staker Data\n      description: Returns an array containing all the pools the staker is staking in.\n      parameters:\n        - in: path\n          name: address\n          description: Unique staker address\n          required: true\n          schema:\n            type: string\n          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/StakersAddressDataResponse'\n\n  \"/v1/stakers/{address}/pools\":\n    get:\n      operationId: GetStakersAddressAndAssetData\n      summary: Get Staker Pool Data\n      description: Returns an object containing staking data for the specified staker and pool.\n      parameters:\n        - in: path\n          name: address\n          description: Unique staker address\n          required: true\n          schema:\n            type: string\n          example: 'bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m'\n        - in: query\n          name: asset\n          description: One or more comma separated unique asset (CHAIN.SYMBOL)\n          required: true\n          schema:\n            type: string\n          example: [BNB.TOMOB-1E1,BNB.TCAN-014]\n      responses:\n        \"200\":\n          $ref: '#/components/responses/StakersAssetDataResponse'\n  \"/v1/thorchain/pool_addresses\":\n    get:\n      operationId: GetThorchainProxiedEndpoints\n      summary: Get the Proxied Pool Addresses\n      description: Returns a proxied endpoint for the pool_addresses endpoint from a local thornode\n      responses:\n        \"200\":\n          $ref: '#/components/responses/ThorchainEndpointsResponse'\n  \"/v1/network\":\n    get:\n      operationId: GetNetworkData\n      summary: Get Network Data\n      description: Returns an object containing Network data\n      responses:\n        \"200\":\n          \"$ref\": \"#/components/responses/NetworkResponse\"\n  \"/v1/nodes\":\n    get:\n      operationId: GetNodes\n      summary: Get Node public keys\n      description: Returns an object containing Node public keys\n      responses:\n        \"200\":\n          \"$ref\": \"#/components/responses/NodeKeyResponse\"\n  \"/v1/thorchain/constants\":\n    get:\n      operationId: GetThorchainProxiedConstants\n      summary: Get the Proxied THORChain Constants\n      description: Returns a proxied endpoint for the constants endpoint from a local thornode\n      responses:\n        \"200\":\n          $ref: '#/components/responses/ThorchainConstantsResponse'\n  \"/v1/thorchain/lastblock\":\n    get:\n      operationId: GetThorchainProxiedLastblock\n      summary: Get the Proxied THORChain Lastblock\n      description: Returns a proxied endpoint for the lastblock endpoint from a local thornode\n      responses:\n        \"200\":\n          $ref: '#/components/responses/ThorchainLastblockResponse'\n  \"/v1/thorchain/queue\":\n    get:\n      operationId: GetThorchainProxiedQueue\n      summary: Get the Proxied THORChain Queue\n      description: Returns a proxied endpoint for the queue endpoint from a local thornode\n      responses:\n        \"200\":\n          $ref: '#/components/responses/ThorchainQueueResponse'\n  \"/v1/history/total_volume\":\n    get:\n      operationId: GetTotalVolChanges\n      summary: Get Total Volume Changes\n      description: Returns total volume changes of all pools in specified interval\n      parameters:\n        - in: query\n          name: interval\n          description: Interval of calculations\n          required: true\n          schema:\n            type: string\n            enum: [\"5min\", \"hour\", \"day\", \"week\", \"month\", \"year\"]\n        - in: query\n          name: from\n          description: Start time of the query as unix timestamp\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: to\n          description: End time of the query as unix timestamp\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          $ref: '#/components/responses/TotalVolChangesResponse'\n  \"/v1/history/pools\":\n    get:\n      operationId: GetPoolAggChanges\n      summary: Get Pool Aggregated Changes\n      description: Returns historical aggregated details of the specified pool.\n      parameters:\n        - in: query\n          name: pool\n          description: Pool asset name\n          required: true\n          schema:\n            type: string\n          example: BNB.TOMOB-1E1\n        - in: query\n          name: interval\n          description: Interval of calculations\n          required: true\n          schema:\n            type: string\n            enum: [\"5min\", \"hour\", \"day\", \"week\", \"month\", \"year\"]\n        - in: query\n          name: from\n          description: Start time of the query as unix timestamp\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: to\n          description: End time of the query as unix timestamp\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          $ref: '#/components/responses/GetPoolAggChangesResponse'\n\ncomponents:\n  responses:\n    PoolsDetailedResponse:\n      description: object containing pool data for that asset\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/PoolDetail'\n\n    StatsResponse:\n      description: object containing global BEPSwap data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StatsData'\n\n    HealthResponse:\n      description: Returns an health status of Midgard\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              database:\n                type: boolean\n              scannerHeight:\n                type: integer\n                format: int64\n              catching_up:\n                type: boolean\n\n    TxsResponse:\n      description: Returns an array of transactions\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              count:\n                type: integer\n                format: int64\n              txs:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TxDetails'        \n\n    StakersAddressDataResponse:\n      description: array of all the pools the staker is staking in\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StakersAddressData'\n\n    StakersResponse:\n      description: array of all the stakers\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Stakers'\n\n    StakersAssetDataResponse:\n      description: object containing staking data for a specific staker and asset\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/StakersAssetData'\n\n    AssetsDetailedResponse:\n      description: object containing detailed asset information\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/AssetDetail'\n\n    PoolsResponse:\n      description: array of assets\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/asset'\n\n    GeneralErrorResponse:\n      description: error message\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n    ThorchainEndpointsResponse:\n      description: Get Return an object for the proxied pools_addresses endpoint.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThorchainEndpoints'\n\n    NetworkResponse:\n      description: Returns an object containing Network data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NetworkInfo'\n\n    NodeKeyResponse:\n      description: Returns an object containing Network data\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/NodeKey'\n\n    ThorchainConstantsResponse:\n      description: Get Return an object for the proxied constants endpoint.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThorchainConstants'\n\n    ThorchainLastblockResponse:\n      description: Get Return an object for the proxied lastblock endpoint.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThorchainLastblock'\n\n    ThorchainQueueResponse:\n      description: Get Return an object for the proxied queue endpoint.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThorchainQueue'\n\n    TotalVolChangesResponse:\n      description: Get Return an array of total volume changes.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TotalVolChanges'\n\n    GetPoolAggChangesResponse:\n      description: Get Return an array of pool changes.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/PoolAggChanges'\n\n  schemas:\n    TxDetails:\n      properties:\n        pool:\n          $ref: '#/components/schemas/asset'\n        type:\n          type: string\n          enum: [swap, stake, unstake, rewards, add, pool, gas, refund, doubleSwap]\n        status:\n          type: string\n          enum: [success, refund] \n        in:\n          $ref: '#/components/schemas/tx'\n        out:\n          type: array\n          items:\n            $ref: '#/components/schemas/tx'\n        date:\n          type: integer\n          format: int64\n        gas:\n          $ref: '#/components/schemas/gas'\n        options:\n          $ref: '#/components/schemas/option'\n        height:\n          type: string \n        events:\n          $ref: '#/components/schemas/event'\n\n    StatsData:\n      type: object\n      properties:\n        dailyActiveUsers:\n          type: string\n          description: Daily active users (unique addresses interacting)\n        monthlyActiveUsers:\n          type: string\n          description: Monthly active users\n        totalUsers:\n          type: string\n          description: Total unique swappers \u0026 stakers\n        dailyTx:\n          type: string\n          description: Daily transactions\n        monthlyTx:\n          type: string\n          description: Monthly transactions\n        totalTx:\n          type: string\n          description: Total transactions\n        totalVolume24hr:\n          type: string\n          description: Total (in RUNE Value) of all assets swapped in 24hrs\n        totalVolume:\n          type: string\n          description: Total (in RUNE Value) of all assets swapped since start.\n        totalStaked:\n          type: string\n          description: Total staked (in RUNE Value).\n        totalDepth:\n          type: string\n          description: Total RUNE balances\n        totalEarned:\n          type: string\n          description: Total earned (in RUNE Value).\n        poolCount:\n          type: string\n          description: Number of active pools\n        totalAssetBuys:\n          type: string\n          description: Total buying transactions\n        totalAssetSells:\n          type: string\n          description: Total selling transactions\n        totalStakeTx:\n          type: string\n          description: Total staking transactions\n        totalWithdrawTx:\n          type: string\n          description: Total withdrawing transactions\n\n    StakersAddressData:\n      type: object\n      properties:\n        poolsArray:\n          type: array\n          items:\n            $ref: '#/components/schemas/asset'\n        totalStaked:\n          type: string\n          description: Total staked (in RUNE) across all pools.\n        totalEarned:\n          type: string\n          description: Total value of earnings (in RUNE) across all pools.\n        totalROI:\n          type: string\n          description: Average of all pool ROIs.\n\n    StakersAssetData:\n      type: object\n      properties:\n        asset:\n          $ref: '#/components/schemas/asset'\n        units:\n          type: string\n          description: Represents ownership of a pool.\n        assetStaked:\n          type: string\n          description: Total of assets staked\n        assetWithdrawn:\n          type: string\n          description: Total of assets withdrawn\n        runeStaked:\n          type: string\n          description: Total of rune staked\n        runeWithdrawn:\n          type: string\n          description: Total of rune withdrawn\n        dateFirstStaked:\n          type: integer\n          format: int64\n        heightLastStaked:\n          type: integer\n          format: int64\n    Stakers:\n      type: string\n      description: Staker address\n      example: tbnb1fj2lqj8dvr5pumfchc7ntlfqd2v6zdxqwjewf5\n\n    PoolDetail:\n      type: object\n      properties:\n        asset:\n          $ref: '#/components/schemas/asset'\n        status:\n          type: string\n          enum: [bootstrapped, enabled, disabled]\n        price:\n          type: string\n          description: Price of Asset (in RUNE).\n        assetStakedTotal:\n          type: string\n          description: Total Asset staked\n        runeStakedTotal:\n          type: string\n          description: Total RUNE staked\n        poolStakedTotal:\n          type: string\n          description: Rune value staked Total\n        assetDepth:\n          type: string\n          description: Total current Asset balance\n        runeDepth:\n          type: string\n          description: Total current Rune balance\n        poolDepth:\n          type: string\n          description: Total depth of both sides (in RUNE)\n        poolUnits:\n          type: string\n          description: Total pool units outstanding\n        sellVolume:\n          type: string\n          description: Total Asset sell volume (ASSET\u003eRUNE) (in RUNE).\n        buyVolume:\n          type: string\n          description: Total Asset buy volume (RUNE-\u003eASSET) (in RUNE)\n        poolVolume:\n          type: string\n          description: Two-way volume of all-time (in RUNE)\n        poolVolume24hr:\n          type: string\n          description: Two-way volume in 24hrs (in RUNE)\n        sellTxAverage:\n          type: string\n          description: Average Asset sell transaction size (ASSET\u003eRUNE) (in RUNE)\n        buyTxAverage:\n          type: string\n          description: Average Asset buy transaction size for (RUNE-\u003eASSET) (in ASSET)\n        poolTxAverage:\n          type: string\n          description: Average pool transaction\n        sellSlipAverage:\n          type: string\n          description: Average trade slip for ASSET-\u003eRUNE in %\n        buySlipAverage:\n          type: string\n          description: Average trade slip for RUNE-\u003eASSET in %\n        poolSlipAverage:\n          type: string\n          description: Average pool slip\n        sellFeeAverage:\n          type: string\n          description: Average buy Asset fee size for ASSET-\u003eRUNE (in RUNE)\n        buyFeeAverage:\n          type: string\n          description: Average sell Asset fee size for RUNE-\u003eASSET (in ASSET)\n        poolFeeAverage:\n          type: string\n          description: Average pool fee\n        sellFeesTotal:\n          type: string\n          description: Total fees (in RUNE)\n        buyFeesTotal:\n          type: string\n          description: Total fees (in Asset)\n        poolFeesTotal:\n          type: string\n          description: Total fees\n        sellAssetCount:\n          type: string\n          description: Number of ASSET-\u003eRUNE transactions\n        buyAssetCount:\n          type: string\n          description: Number of RUNE-\u003eASSET transactions\n        swappingTxCount:\n          type: string\n          description: Number of swapping transactions in the pool (buys and sells)\n        swappersCount:\n          type: string\n          description: Number of unique swappers interacting with pool\n        stakeTxCount:\n          type: string\n          description: Number of stake transactions\n        withdrawTxCount:\n          type: string\n          description: Number of withdraw transactions\n        stakingTxCount:\n          type: string\n          description: Number of stake \u0026 withdraw transactions\n        stakersCount:\n          type: string\n          description: Number of unique stakers\n        assetROI:\n          type: string\n          description: Asset return on investment\n        runeROI:\n          type: string\n          description: RUNE return on investment\n        poolROI:\n          type: string\n          description: Pool ROI (average of RUNE and Asset ROI)\n        poolROI12:\n          type: string\n          description: Pool ROI over 12 months\n        assetEarned:\n          type: string\n          description: Amount of pool asset changed by fee and gas\n        runeEarned:\n          type: string\n          description: Amount of pool rune changed by fee,reward and gas\n        poolEarned:\n          type: string\n          description: (assetChanges * price) + runeEarned\n        poolAPY:\n          type: string\n          description: (1 + (poolEarned/poolDepth)) ^ 12 -1\n\n    AssetDetail:\n      type: object\n      properties:\n        asset:\n          $ref: '#/components/schemas/asset'\n        dateCreated:\n          type: integer\n          format: int64\n        priceRune:\n          type: string\n\n    Error:\n      required:\n        - \"error\"\n      type: object\n      properties:\n        error:\n          type: string\n    coins:\n      type: array\n      items:\n        $ref: '#/components/schemas/coin'\n    coin:\n      type: object\n      properties:\n        asset:\n          $ref: '#/components/schemas/asset'\n        amount:\n          type: string\n    asset:\n      type: string\n    tx:\n      type: object\n      properties:\n        txID:\n          type: string\n        memo:\n          type: string\n        address:\n          type: string\n        coins:\n          $ref: '#/components/schemas/coins'\n    gas:\n      type: object\n      properties:\n        asset:\n          $ref: '#/components/schemas/asset'\n        amount:\n          type: string\n    option:\n      type: object\n      properties:\n        priceTarget:\n          type: string\n        withdrawBasisPoints:\n          type: string\n        asymmetry:\n          type: string\n    event:\n      type: object\n      properties:\n        fee:\n          type: string\n        stakeUnits:\n          type: string\n        slip:\n          type: string\n\n    ThorchainEndpoint:\n      type: object\n      properties:\n        chain:\n          type: string\n        pub_key:\n          type: string\n        address:\n          type: string\n\n    ThorchainEndpoints:\n      type: object\n      properties:\n        current:\n          type: array\n          items:\n            $ref: '#/components/schemas/ThorchainEndpoint'\n\n    BondMetrics:\n      type: object\n      properties:\n        totalActiveBond:\n          type: string\n          description: Total bond of active nodes\n        averageActiveBond:\n          type: string\n          description: Average bond of active nodes\n        medianActiveBond:\n          type: string\n          description: Median bond of active nodes\n        minimumActiveBond:\n          type: string\n          description: Minumum bond of active nodes\n        maximumActiveBond:\n          type: string\n          description: Maxinum bond of active nodes\n        totalStandbyBond:\n          type: string\n          description: Total bond of standby nodes\n        averageStandbyBond:\n          type: string\n          description: Average bond of standby nodes\n        medianStandbyBond:\n          type: string\n          description: Median bond of standby nodes\n        minimumStandbyBond:\n          type: string\n          description: Minumum bond of standby nodes\n        maximumStandbyBond:\n          type: string\n          description: Maximum bond of standby nodes\n    BlockRewards:\n      type: object\n      properties:\n        blockReward:\n          type: string\n        bondReward:\n          type: string\n        stakeReward:\n          type: string\n    NetworkInfo:\n      type: object\n      properties:\n        bondMetrics:\n          $ref: '#/components/schemas/BondMetrics'\n        activeBonds:\n          type: array\n          description: Array of Active Bonds\n          items:\n            type: string\n        standbyBonds:\n          type: array\n          description: Array of Standby Bonds\n          items:\n            type: string\n        totalStaked:\n          type: string\n          description: Total Rune Staked in Pools\n        activeNodeCount:\n          type: integer\n          description: Number of Active Nodes\n        standbyNodeCount:\n          type: integer\n          description: Number of Standby Nodes\n        totalReserve:\n          type: string\n          description: Total left in Reserve\n        poolShareFactor:\n          type: string\n        blockRewards:\n          $ref: '#/components/schemas/BlockRewards'\n        bondingROI:\n          type: string\n        stakingROI:\n          type: string\n        nextChurnHeight:\n          type: string\n        poolActivationCountdown:\n          type: integer\n          format: int64\n          description: The remaining time of pool activation (in blocks)\n        liquidityAPY:\n          type: string\n          description: (1 + (stakeReward * blocksPerMonth/totalDepth of active pools)) ^ 12 -1\n        bondingAPY:\n          type: string\n          description: (1 + (bondReward * blocksPerMonth/totalActiveBond)) ^ 12 -1\n\n    NodeKey:\n      type: object\n      properties:\n        secp256k1:\n          type: string\n          description: secp256k1 public key\n        ed25519:\n          type: string\n          description: ed25519 public key\n\n    ThorchainConstants:\n        type: object\n        properties:\n          int_64_values:\n            $ref: '#/components/schemas/ThorchainInt64Constants'\n          bool_values:\n            $ref: '#/components/schemas/ThorchainBooleanConstants'\n          string_values:\n            $ref: '#/components/schemas/ThorchainStringConstants'\n\n    ThorchainInt64Constants:\n        type: object\n        properties:\n          BadValidatorRate:\n            type: integer\n            format: int64\n          BlocksPerYear:\n            type: integer\n            format: int64\n          DesireValidatorSet:\n            type: integer\n            format: int64\n          DoubleSignMaxAge:\n            type: integer\n            format: int64\n          EmissionCurve:\n            type: integer\n            format: int64\n          FailKeySignSlashPoints:\n            type: integer\n            format: int64\n          FailKeygenSlashPoints:\n            type: integer\n            format: int64\n          FundMigrationInterval:\n            type: integer\n            format: int64\n          JailTimeKeygen:\n            type: integer\n            format: int64\n          JailTimeKeysign:\n            type: integer\n            format: int64\n          LackOfObservationPenalty:\n            type: integer\n            format: int64\n          MinimumBondInRune:\n            type: integer\n            format: int64\n          MinimumNodesForBFT:\n            type: integer\n            format: int64\n          MinimumNodesForYggdrasil:\n            type: integer\n            format: int64\n          NewPoolCycle:\n            type: integer\n            format: int64\n          ObserveSlashPoints:\n            type: integer\n            format: int64\n          OldValidatorRate:\n            type: integer\n            format: int64\n          RotatePerBlockHeight:\n            type: integer\n            format: int64\n          RotateRetryBlocks:\n            type: integer\n            format: int64\n          SigningTransactionPeriod:\n            type: integer\n            format: int64\n          StakeLockUpBlocks:\n            type: integer\n            format: int64\n          TransactionFee:\n            type: integer\n            format: int64\n          ValidatorRotateInNumBeforeFull:\n            type: integer\n            format: int64\n          ValidatorRotateNumAfterFull:\n            type: integer\n            format: int64\n          ValidatorRotateOutNumBeforeFull:\n            type: integer\n            format: int64\n          WhiteListGasAsset:\n            type: integer\n            format: int64\n          YggFundLimit:\n            type: integer\n            format: int64\n\n    ThorchainBooleanConstants:\n        type: object\n        properties:\n          StrictBondStakeRatio:\n            type: boolean\n\n    ThorchainStringConstants:\n        type: object\n        properties:\n          DefaultPoolStatus:\n            type: string\n\n    ThorchainLastblock:\n        type: object\n        properties:\n          chain:\n            type: string\n          lastobservedin:\n            type: integer\n            format: int64\n          lastsignedout:\n            type: integer\n            format: int64\n          thorchain:\n            type: integer\n            format: int64\n\n    ThorchainQueue:\n      type: object\n      properties:\n        swap:\n          type: integer\n          format: int64\n        outbound:\n          type: integer\n          format: int64\n\n    TotalVolChanges:\n      type: object\n      properties:\n        time:\n          type: integer\n          format: int64\n          description: Determining end of current time bucket in unix timestamp\n        buyVolume:\n          type: string\n          description: Sum of \"rune_amount\" of buy swap events\n        sellVolume:\n          type: string\n          description: Sum of \"rune_amount\" of sell swap events\n        totalVolume:\n          type: string\n          description: buyVolume + sellVolume\n\n    PoolAggChanges:\n      type: object\n      properties:\n        time:\n          type: integer\n          format: int64\n          description: Determining end of current time bucket in unix timestamp\n        assetChanges:\n          type: string\n          description: Total changes in asset depth at this time bucket\n        assetDepth:\n          type: string\n          description: Depth of asset at the end of current time bucket\n        assetStaked:\n          type: string\n          description: Total asset staked\n        assetWithdrawn:\n          type: string\n          description: Total asset withdrawn\n        buyCount:\n          type: integer\n          format: int64\n          description: Count of buy swaps\n        buyVolume:\n          type: string\n          description: Sum of \"rune_amount\" of buy swap events\n        runeChanges:\n          type: string\n          description: Total changes in rune depth at this time bucket\n        runeDepth:\n          type: string\n          description: Depth of rune at the end of current time bucket\n        runeStaked:\n          type: string\n          description: Total rune staked\n        runeWithdrawn:\n          type: string\n          description: Total rune withdrawn\n        sellCount:\n          type: integer\n          format: int64\n          description: Count of sell swaps\n        sellVolume:\n          type: string\n          description: Sum of \"rune_amount\" of sell swap events\n        price:\n          type: string\n          description: Asset price in rune at the end of current time bucket\n        poolVolume:\n          type: string\n          description: buyVolume + sellVolume\n        unitsChanges:\n          type: string\n          description: Total changes in pool units (stakes/withdraws)\n        reward:\n          type: string\n          description: Sum of \"rewards\" events in rune\n        gasUsed:\n          type: string\n          description: Total amount of asset used as gas for network transactions (e.g. BNB.BNB, ETH.ETH)\n        gasReplenished:\n          type: string\n          description: Total amount of rune, paid by the network to neutralize \"gasUsed\" changes\n        stakeCount:\n          type: integer\n          format: int64\n          description: Count of stake events\n        withdrawCount:\n          type: integer\n          format: int64\n          description: Count of withdraw events\n\n\nservers:\n  - url: http://127.0.0.1:8080\n  - url: https://127.0.0.1:8080\n",
			"canonicalURL": "/github.com/thorchain/midgard@dfc728fcf6b49efdef1e9ca70becac808beeb227/-/blob/pkg/delivery/http/openapi-v1.0.0.yml",
			"externalURLs": [
				{
					"url": "https://github.com/thorchain/midgard/blob/dfc728fcf6b49efdef1e9ca70becac808beeb227/pkg/delivery/http/openapi-v1.0.0.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}