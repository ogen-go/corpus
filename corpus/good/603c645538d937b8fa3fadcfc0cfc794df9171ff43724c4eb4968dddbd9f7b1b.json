{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ameier38/ouroboros"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/Dog/openapi.yaml",
			"byteSize": 4642,
			"content": "openapi: 3.0.0\ninfo:\n  title: Ouroboros API\n  description: Ouroboros integration test API\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n- url: https://virtserver.swaggerhub.com/ameier38/Ouroboros/1.0.0\n  description: SwaggerHub API Auto Mocking\npaths:\n  /get:\n    post:\n      summary: get the state of a dog\n      description: get the state of a dog at a particular observation date\n      requestBody:\n        description: Dog to retrieve\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDogRequest'\n      responses:\n        200:\n          description: Successfully retrieved dog\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DogState'\n  /reverse:\n    post:\n      summary: reverse a dog event\n      description: reverse a dog event with specified event number\n      requestBody:\n        description: dog event to reverse\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReverseRequest'\n      responses:\n        200:\n          description: Successfully reversed dog event\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandResponse'\n  /create:\n    post:\n      summary: create a dog\n      description: create a new dog\n      requestBody:\n        description: Dog to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDogRequest'\n      responses:\n        200:\n          description: Created dog\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandResponse'\n  /eat:\n    post:\n      summary: command a dog to eat\n      description: command a dog to eat\n      requestBody:\n        description: Meta for eat command\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommandRequest'\n      responses:\n        200:\n          description: Dog ate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandResponse'\ncomponents:\n  schemas:\n    GetDogRequest:\n      required:\n      - dogId\n      - observationDate\n      - observationType\n      type: object\n      properties:\n        dogId:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        observationDate:\n          type: string\n          format: date-time\n        observationType:\n          type: string\n          example: of\n    ReverseRequest:\n      required:\n      - dogId\n      - effectiveDate\n      - eventNumber\n      - source\n      type: object\n      properties:\n        dogId:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        source:\n          type: string\n          example: test\n        effectiveDate:\n          type: string\n          format: date-time\n        eventNumber:\n          type: integer\n          format: int32\n          example: 1\n    CreateDogRequest:\n      required:\n      - dog\n      - dogId\n      - effectiveDate\n      - source\n      type: object\n      properties:\n        dogId:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        source:\n          type: string\n          example: test\n        effectiveDate:\n          type: string\n          format: date-time\n        dog:\n          $ref: '#/components/schemas/Dog'\n    CommandRequest:\n      required:\n      - dogId\n      - effectiveDate\n      - source\n      type: object\n      properties:\n        dogId:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        source:\n          type: string\n          example: test\n        effectiveDate:\n          type: string\n          format: date-time\n    CommandResponse:\n      required:\n      - committedEvents\n      type: object\n      properties:\n        committedEvents:\n          type: array\n          items:\n            type: string\n    Dog:\n      required:\n      - breed\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          example: Benji\n        breed:\n          type: string\n          example: Maltipoo\n    DogState:\n      required:\n      - dog\n      - state\n      type: object\n      properties:\n        state:\n          type: string\n          example: Bored\n        dog:\n          $ref: '#/components/schemas/Dog'\n",
			"canonicalURL": "/github.com/ameier38/ouroboros@e343faae794b5a96a06a14aed51f70faba61a29e/-/blob/src/Dog/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ameier38/ouroboros/blob/e343faae794b5a96a06a14aed51f70faba61a29e/src/Dog/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}