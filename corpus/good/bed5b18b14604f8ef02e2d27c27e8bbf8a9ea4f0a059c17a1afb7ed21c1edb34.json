{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/geonames/openapi.yaml",
			"byteSize": 16753,
			"content": "openapi: 3.0.0\nservers:\n  - url: http://api.geonames.org/\ninfo:\n  x-ballerina-display:\n    label: Geonames\n    iconPath: \"icon.png\"\n  description:\n    This is a generated connector for [Geonames API](https://www.geonames.org/export/JSON-webservices.html) OpenAPI specification. \n    \n    Geonames is a geographical database where users can retrieve geo location information.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create a [Geonames account](https://www.geonames.org/login) and obtain tokens by following [this guide](https://www.geonames.org/export/web-services.html). \n  title: Geonames API\n  version: 1.0.0\n  x-providerName: geonames.org\nsecurity:\n- apiKey: []\npaths:\n  /searchJSON: \n    get:\n      description: Retrieves the names found for the search term as a XML or JSON document.\n      operationId: search\n      parameters:\n        - in: query\n          name: q\n          description: The query to search over all attributes of a place.\n          schema:\n            type: string\n        - in: query\n          name: name\n          description: The place name.\n          schema:\n            type: string\n        - in: query\n          name: name_equals\n          description: The exact place name.\n          schema:\n            type: string\n        - in: query\n          name: name_startsWith\n          description: The place name starts with given characters.\n          schema:\n            type: string\n        - in: query\n          name: maxRows\n          description: The maximal number of rows in the document returned by the service.\n          schema:\n            type: integer\n        - in: query\n          name: startRow\n          description: The starting row for the result.\n          schema:\n            type: integer\n        - in: query\n          name: country\n          description: The country codes to filter the results.\n          schema:\n            type: string\n        - in: query\n          name: countryBias\n          description: The two letter country code to filter the results.\n          schema:\n            type: string\n        - in: query\n          name: continentCode\n          description: The continent code to filter the results.\n          schema:\n            type: string\n        - in: query\n          name: cities\n          description: The city population category.\n          schema:\n            type: integer\n        - in: query\n          name: operator\n          description: The the operator 'AND' searches for all terms in the placename parameter, \n            the operator 'OR' searches for any term, default = AND.\n          schema:\n            type: string\n        - in: query\n          name: charset\n          description: The encoding used for the document returned.\n          schema:\n            type: string\n        - in: query\n          name: searchlang\n          description: The search will only consider names in the specified language\n          schema:\n            type: string\n        - in: query\n          name: east\n          description: The bounding box, only features within the box are returned.\n          schema:\n            type: number\n        - in: query\n          name: west\n          description: The bounding box, only features within the box are returned.\n          schema:\n            type: number\n        - in: query\n          name: north\n          description: The bounding box, only features within the box are returned.\n          schema:\n            type: number\n        - in: query\n          name: south\t\n          description: The bounding box, only features within the box are returned.\n          schema:\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchResponse\"\n          description: The names found for the searchterm\n  /postalCodeSearchJSON:\n    get:\n      description: Retrieves a list of postal codes and places for the place name/postal code query.\n      operationId: searchPostalCode\n      parameters:\n        - in: query\n          name: postalcode\n          description: The query to search over all attributes of a place. Either postal code or place name must be given.\n          schema:\n            type: string\n        - in: query\n          name: placeName\n          description: Place name. Either postal code or place name must be given.\n          schema:\n            type: string\n        - in: query\n          name: postalcode_startsWith\n          description: Postal code starts with\n          schema:\n            type: string\n        - in: query\n          name: placename_startsWith\n          description: Place name starts with\n          schema:\n            type: string\n        - in: query\n          name: country\n          description: Default is all countries. The country parameter may occur more than once,country=FR,country=GP.\n          schema:\n            type: string\n        - in: query\n          name: countryBias\n          description: Records from the countryBias are listed first.\n          schema:\n            type: string\n        - in: query\n          name: maxRows\n          description: The maximal number of rows in the document returned by the service.\n          schema:\n            type: integer\n        - in: query\n          name: style\n          description: Style\n          schema:\n            type: string\n        - in: query\n          name: operator\n          description: Operator\n          schema:\n            type: string\n        - in: query\n          name: charset\n          description: Charset\n          schema:\n            type: string\n        - in: query\n          name: isReduced\n          description: Is reduced\n          schema:\n            type: string\n        - in: query\n          name: east\n          description: The east value for bounding box.\n          schema:\n            type: number\n        - in: query\n          name: west\n          description: The west value for bounding box.\n          schema:\n            type: number\n        - in: query\n          name: north\n          description: The north value for bounding box.\n          schema:\n            type: number\n        - in: query\n          name: south\t\n          description: The south value for bounding box.\n          schema:\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostalCodeResponse\"\n          description:  List of postalcodes and places.\n  /timezoneJSON:\n    get:\n      description: Timezone\n      operationId: getTimezone\n      parameters:\n        - in: query\n          name: lat\n          description: The latitude to retrieve nearby postal codes.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: lng\n          description: The longitude to retrieve nearby postal codes.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: lang\n          description: The language which place name and country name will be returned.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Timezone\"\n          description:  The timezone at the lat/lng\n  /postalCodeLookupJSON:\n    get:\n      description: Retrieves a list of places for the given postal code.\n      operationId: postalCodeLookup\n      parameters:\n        - in: query\n          name: postalcode\n          description: Postal code\n          schema:\n            type: integer\n        - in: query\n          name: country\n          description: Country\n          schema:\n            type: string\n        - in: query\n          name: maxRows\n          description: The maximal number of rows in the document returned by the service.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostalCodes\"\n          description:  The timezone at the lat/lng\n  /findNearbyPostalCodesJSON:\n    get:\n      description: Retrieving a list of postal codes and places for the latitude/longitude query.\n      operationId: findNearbyPostalCodes\n      parameters:\n        - in: query\n          name: postalcode\n          description: Postal code\n          schema:\n            type: integer\n          required: true\n        - in: query\n          name: country\n          description: Country\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: radius\n          description: Radius\n          schema:\n            type: integer\n        - in: query\n          name: maxRows\n          description: The maximal number of rows in the document returned by the service.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostalCodes\"\n          description:  The timezone at the lat/lng\n  /findNearByWeatherJSON:\n    get:\n      description: Retrieves a weather station with the most recent weather observation.\n      operationId: findNearByWeather\n      parameters:\n        - in: query\n          name: lat\n          description: The latitude to retrieve nearby postal codes.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: lng\n          description: The longitude to retrieve nearby postal codes.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: radius\n          description: Radius\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WeatherObservationResponse\"\n          description:  The timezone at the lat/lng\n  /weatherJSON:\n    get:\n      description: Retrieves a list of weather stations with the most recent weather observation.\n      operationId: listWeatherStations\n      parameters:\n        - in: query\n          name: north\n          description: The north value for bounding box.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: south\n          description: The south value for bounding box.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: east\n          description: The east value for bounding box.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: west\n          description: The west value for bounding box.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: maxRows\n          description: The maximal number of rows in the document returned by the service.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WeatherResponse\"\n          description: Returns a list of weather stations with the most recent weather observation\n  /earthquakesJSON:\n    get:\n      description: Retrieves a list of weather stations with the most recent weather observation.\n      operationId: listEarthquakes\n      parameters:\n        - in: query\n          name: north\n          description: The north value for bounding box\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: south\n          description: The south value for bounding box\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: east\n          description: The east value for bounding box.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: west\n          description: The west value for bounding box\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: maxRows\n          description: The maximal number of rows in the document returned by the service.\n          schema:\n            type: integer\n        - in: query\n          name: minMagnitude\n          description: Minimum magnitude\n          schema:\n            type: number\n        - in: query\n          name: date\n          description: Date\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EarthquakeResponse\"\n          description: Returns a list of earthquakes, ordered by magnitude\ncomponents:\n  schemas:\n    EarthquakeResponse:\n      type: object\n      properties:\n        earthquakes:\n          type: array\n          items: \n            $ref: \"#/components/schemas/Earthquake\"\n    Earthquake:\n      type: object\n      properties:\n        datetime:\n          type: string\n        depth: \n          type: number\n        lng: \n          type: number\n        src:\n          type: string\n        eqid:\n          type: string\n        magnitude:\n          type: number\n        lat: \n          type: number\n    PostalCodes:\n      type: object\n      properties:\n        postalcodes:\n          type: array\n          items: \n            $ref: \"#/components/schemas/PostalCode\"\n    PostalCode:\n      type: object\n      properties:\n        adminCode1:\n          type: string\n        adminCode2:\n          type: string\n        adminCode3:\n          type: string\n        adminName1: \n          type: string\n        adminName2: \n          type: string\n        adminName3:\n          type: string\n        countryCode:\n          type: string\n        distance: \n          type: string\n        lat: \n          type: number\n        lng:\n          type: number\n        placeName:\n          type: string\n        postalCode:\n          type: string\n    Timezone:\n      type: object\n      properties:\n        sunrise:\n          type: string\n        lng:\n          type: number\n        countryCode:\n          type: string\n        gmtOffset:\n          type: integer\n        rawOffset:\n          type: integer\n        sunset:\n          type: string\n        timezoneId:\n          type: string\n        dstOffset:\n          type: integer\n        countryName:\n          type: string\n        time:\n          type: string\n        lat:\n          type: number\n    PostalCodeResponse:\n      type: object\n      properties:\n        geonames:\n          $ref: \"#/components/schemas/Geonames\"\n    SearchResponse:\n      type: object\n      properties:\n        totalResultsCount:\n          type: integer\n        geonames:\n          $ref: \"#/components/schemas/Geonames\"\n    Geonames:\n      type: array\n      items:\n        type: object\n        properties:\n          ing:\n            type: string\n          geonameid:\n            type: integer\n          countrycode:\n            type: string\n          name:\n            type: string\n          fclName:\n            type: string\n          toponymName:\n            type: string\n          fcodeName:\n            type: string\n          wikipedia:\n            type: string\n          lat:\n            type: string\n          fcl: \n            type: string\n          population:\n            type: integer\n          fcode:\n            type: string\n    WeatherObservationResponse:\n      properties:\n        WeatherObservation:\n          $ref: \"#/components/schemas/WeatherObservation\"\n    WeatherResponse:\n      type: array\n      items: \n        $ref: \"#/components/schemas/WeatherObservation\"\n    WeatherObservation:\n      type: object\n      properties:\n        clouds:\n          type: string\n        cloudsCode:\n          type: string\n        countrycode:\n          type: string\n        datetime:\n          type: string\n        dewPoint:\n          type: string\n        elevation:\n          type: number\n        hectoPascAltimeter:\n          type: number\n        humidity:\n          type: number\n        ICAO:\n          type: string\n        lat:\n          type: number\n        ing:\n          type: number\n        observation:\n          type: string\n        seaLevelPressure:\n          type: number\n        stationName:\n          type: string\n        temperature:\n          type: string\n        weatherCondition:\n          type: string\n        windSpeed:\n          type: string\n        windDirection:\n          type: integer\n  securitySchemes:  \n    apiKey:\n      type: apiKey\n      name: username\n      in: query\n      description: Represents API Key `username`",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/geonames/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/geonames/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}