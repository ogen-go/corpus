{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/stream-services"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/stream-product-catalog/openapi.yaml",
			"byteSize": 39504,
			"content": "openapi: 3.0.1\ninfo:\n  title: Product Catalog API\n  version: 1.0.0\n  x-logo:\n    url: \"http://www.backbase.com/wp-content/uploads/2017/04/backbase-logo-png.png\"\n    backgroundColor: \"#FFFFFF\"\n    altText: \"Backbase logo\"\nservers:\n  - url: http://stream-product-catalog-http.proto.backbasecloud.com/\n    description: The server\npaths:\n  ###############################################\n  ## Product Catalog\n  ###############################################\n  /product-catalog:\n    get:\n      summary: Get Product Catalog\n      operationId: getProductCatalog\n      tags:\n        - product-catalog\n      description: Assemble Product Catalog\n      responses:\n        200:\n          description: The created product type\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductCatalog'\n        default:\n          description: The\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Setup a Product Catalog\n      tags:\n        - product-catalog\n      description: |\n      operationId: setupProductCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProductCatalog'\n      responses:\n        200:\n          description: The created product type\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductCatalog'\n        default:\n          description: The\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n\n\n    ###############################################\n    ## Product Catalog\n    ###############################################\n    ProductCatalog:\n      type: object\n      properties:\n        productKinds:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductKind'\n        productTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductType'\n        productStates:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductState'\n    ProductType:\n      title: Product Type\n      description: A Product Type can either have a predefined Backbase Product Kind or a custom product kind that must be created before.\n      type: object\n      properties:\n        externalProductId:\n          maxLength: 50\n          minLength: 1\n          type: string\n          description: A unique identifier for the product\n        externalProductKindId:\n          maxLength: 50\n          minLength: 1\n          type: string\n          description: The ID that is internally used to uniquely identify the kind of product\n        productKindName:\n          maxLength: 50\n          minLength: 1\n          type: string\n          description: The label that is used for the respective product kind\n        externalProductTypeId:\n          type: string\n          description: The ID that is used by the Bank to identify the Product\n        productTypeName:\n          type: string\n          description: The name that is used by the bank to label a specific product type\n        externalId:\n          maxLength: 50\n          type: string\n          description: 'A unique identifier for the product that the arrangement applies\n            to '\n        externalTypeId:\n          maxLength: 50\n          type: string\n          description: The ID that is used by the Bank to identify the specific Product type - External reference to the product Type.\n        typeName:\n          maxLength: 50\n          type: string\n          description: The label/name that is used to label a specific product type.\n        productKind:\n          $ref: '#/components/schemas/ProductKind'\n        translations:\n          type: array\n          items:\n            $ref: '#/components/schemas/TranslationItem'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    TranslationItem:\n      title: Translation item\n      type: object\n      properties:\n        locale:\n          minLength: 1\n          maxLength: 50\n          description: Defines the translation natural language as specified in ISO 639-1, and territory two-letter form of ISO 3166\n          type: string\n        localeTranslations:\n          type: array\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/LocaleTranslationItem'\n    LocaleTranslationItem:\n      title: Locale Translation item\n      type: object\n      properties:\n        fieldName:\n          type: string\n          minLength: 1\n          maxLength: 50\n          description: Defines the name of the field that is translated\n        fieldValue:\n          type: string\n          minLength: 1\n          maxLength: 50\n          description: Defines the translated value of the field\n\n    ProductKind:\n      title: Custom Product Kind\n      description: |\n        Product Type a Product is assigned to. This is used to group Products by kind (e.g. Current account, Savings account etc.)\n        The CustomProductKind is mutually exclusive with the BackbaseProductKind\n        Create a custom product kind for products that do not fit in the Backbase predefined product kinds\n          * Current Account\n          * Savings Account\n          * Term Deposit\n          * Debit Cards\n          * Credit Cards\n          * Loan\n          * Investment Account\n      type: object\n      properties:\n        externalKindId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        kindName:\n          type: string\n        kindUri:\n          type: string\n        translations:\n          type: array\n          items:\n            $ref: '#/components/schemas/TranslationItem'\n    BackbaseProductKind:\n      type: string\n      enum:\n        - \"Current Account\"\n        - \"Credit Card\"\n        - \"Debit Card\"\n        - \"Loan\"\n        - \"Savings Account\"\n        - \"Investment Account\"\n        - \"Term Deposit\"\n        - \"Custom\"\n\n    ###############################################\n    ## Products\n    ###############################################\n    BaseProduct:\n      title: Base Product\n      description: |\n        The Base product holds all common properties between differnet product types\n      type: object\n      properties:\n        externalId:\n          minLength: 1\n          maxLength: 50\n          type: string\n          description: A unique identifier for the product coming from the core banking system.\n        productTypeExternalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        legalEntities:\n          type: array\n          items:\n            $ref: '#/components/schemas/LegalEntity'\n        name:\n          type: string\n          maxLength: 50\n          description: The name that can be assigned by the bank to label a product.\n        externalTransferAllowed:\n          type: boolean\n          description: Defines if transfer to another party is allowed.\n        crossCurrencyAllowed:\n          type: boolean\n          description: Defines if cross currency transfer is allowed\n        bankAlias:\n          maxLength: 50\n          type: string\n          description: The name that can be assigned by the bank to label the product.\n        sourceId:\n          maxLength: 11\n          type: string\n          description: Indicate if the account is regular or external\n        externalParentId:\n          maxLength: 50\n          type: string\n          description: Indicate if the account has parent child relationship with another account\n        accountOpeningDate:\n          type: string\n          description: The date of activation of the account in the bank's system.\n          format: 'date-time'\n        lastUpdateDate:\n          type: string\n          format: 'date-time'\n          description: Last date of balance (or other) parameter update for the particular product\n        state:\n\n          type: object\n          properties:\n            externalStateId:\n              maxLength: 50\n              type: string\n              description: An external unique identifier for the product state object.\n            state:\n              maxLength: 50\n              type: string\n              description: Name that describes the specific product state.\n    CurrentAccount:\n\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        creditLimit:\n          $ref: '#/components/schemas/CreditLimit'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        BIC:\n          $ref: '#/components/schemas/BIC'\n        bankBranchCode:\n          $ref: '#/components/schemas/BankBranchCode'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        creditLimitUsage:\n          $ref: '#/components/schemas/CreditLimitUsage'\n        creditLimitInterestRate:\n          $ref: '#/components/schemas/CreditLimitInterestRate'\n        creditLimitExpiryDate:\n          $ref: '#/components/schemas/CreditLimitExpiryDate'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        debitCardsItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/DebitCardItem'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        minimumRequiredBalance:\n          $ref: '#/components/schemas/MinimumRequiredBalance'\n        accountHolderAddressLine1:\n          $ref: '#/components/schemas/AccountHolderAddressLine1'\n        accountHolderAddressLine2:\n          $ref: '#/components/schemas/AccountHolderAddressLine2'\n        accountHolderStreetName:\n          $ref: '#/components/schemas/AccountHolderStreetName'\n        town:\n          $ref: '#/components/schemas/Town'\n        postCode:\n          $ref: '#/components/schemas/PostCode'\n        countrySubDivision:\n          $ref: '#/components/schemas/CountrySubDivision'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        accountHolderCountry:\n          $ref: '#/components/schemas/AccountHolderCountry'\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n    SavingsAccount:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        BIC:\n          $ref: '#/components/schemas/BIC'\n        bankBranchCode:\n          $ref: '#/components/schemas/BankBranchCode'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        minimumRequiredBalance:\n          $ref: '#/components/schemas/MinimumRequiredBalance'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        termUnit:\n          $ref: '#/components/schemas/TermUnit'\n        termNumber:\n          $ref: '#/components/schemas/TermNumber'\n        maturityDate:\n          $ref: '#/components/schemas/MaturityDate'\n        maturityAmount:\n          $ref: '#/components/schemas/MaturityAmount'\n        autoRenewalIndicator:\n          $ref: '#/components/schemas/AutoRenewalIndicator'\n        interestPaymentFrequencyUnit:\n          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'\n        interestPaymentFrequencyNumber:\n          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        interestSettlementAccount:\n          $ref: '#/components/schemas/InterestSettlementAccount'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        accountHolderAddressLine1:\n          $ref: '#/components/schemas/AccountHolderAddressLine1'\n        accountHolderAddressLine2:\n          $ref: '#/components/schemas/AccountHolderAddressLine2'\n        accountHolderStreetName:\n          $ref: '#/components/schemas/AccountHolderStreetName'\n        town:\n          $ref: '#/components/schemas/Town'\n        postCode:\n          $ref: '#/components/schemas/PostCode'\n        countrySubDivision:\n          $ref: '#/components/schemas/CountrySubDivision'\n        accountHolderCountry:\n          $ref: '#/components/schemas/AccountHolderCountry'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n    DebitCard:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        number:\n          maxLength: 36\n          type: string\n          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        cardNumber:\n          $ref: '#/components/schemas/CardNumber'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        debitCardsItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/DebitCardItem'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        validThru:\n          $ref: '#/components/schemas/ValidThru'\n    CreditCard:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        creditLimit:\n          $ref: '#/components/schemas/CreditLimit'\n        number:\n          maxLength: 36\n          type: string\n          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        cardNumber:\n          $ref: '#/components/schemas/CardNumber'\n        creditCardAccountNumber:\n          $ref: '#/components/schemas/CreditCardAccountNumber'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        validThru:\n          $ref: '#/components/schemas/ValidThru'\n        applicableInterestRate:\n          $ref: '#/components/schemas/ApplicableInterestRate'\n        remainingCredit:\n          $ref: '#/components/schemas/RemainingCredit'\n        outstandingPayment:\n          $ref: '#/components/schemas/OutstandingPayment'\n        minimumPayment:\n          $ref: '#/components/schemas/MinimumPayment'\n        minimumPaymentDueDate:\n          $ref: '#/components/schemas/MinimumPaymentDueDate'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        creditLimitUsage:\n          $ref: '#/components/schemas/CreditLimitUsage'\n        creditLimitInterestRate:\n          $ref: '#/components/schemas/CreditLimitInterestRate'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n    Loan:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        productNumber:\n          $ref: '#/components/schemas/ProductNumber'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        termUnit:\n          $ref: '#/components/schemas/TermUnit'\n        termNumber:\n          $ref: '#/components/schemas/TermNumber'\n        outstandingPrincipalAmount:\n          $ref: '#/components/schemas/OutstandingPrincipalAmount'\n        outstandingPayment:\n          $ref: '#/components/schemas/OutstandingPayment'\n        monthlyInstalmentAmount:\n          $ref: '#/components/schemas/MonthlyInstalmentAmount'\n        amountInArrear:\n          $ref: '#/components/schemas/AmountInArrear'\n        interestSettlementAccount:\n          $ref: '#/components/schemas/InterestSettlementAccount'\n        minimumPaymentDueDate:\n          $ref: '#/components/schemas/MinimumPaymentDueDate'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        maturityDate:\n          $ref: '#/components/schemas/MaturityDate'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        creditLimit:\n          $ref: '#/components/schemas/CreditLimit'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n    TermDeposit:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        productNumber:\n          $ref: '#/components/schemas/ProductNumber'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        termUnit:\n          $ref: '#/components/schemas/TermUnit'\n        termNumber:\n          $ref: '#/components/schemas/TermNumber'\n        maturityDate:\n          $ref: '#/components/schemas/MaturityDate'\n        maturityAmount:\n          $ref: '#/components/schemas/MaturityAmount'\n        autoRenewalIndicator:\n          $ref: '#/components/schemas/AutoRenewalIndicator'\n        interestPaymentFrequencyUnit:\n          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'\n        interestPaymentFrequencyNumber:\n          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'\n        interestSettlementAccount:\n          $ref: '#/components/schemas/InterestSettlementAccount'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        outstandingPrincipalAmount:\n          $ref: '#/components/schemas/OutstandingPrincipalAmount'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        minimumRequiredBalance:\n          $ref: '#/components/schemas/MinimumRequiredBalance'\n    InvestmentAccount:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        currentInvestment:\n          $ref: '#/components/schemas/CurrentInvestment'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        productNumber:\n          $ref: '#/components/schemas/ProductNumber'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n    CustomProduct:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n        - $ref: '#/components/schemas/CurrentAccount'\n        - $ref: '#/components/schemas/DebitCard'\n        - $ref: '#/components/schemas/CreditCard'\n        - $ref: '#/components/schemas/Loan'\n        - $ref: '#/components/schemas/TermDeposit'\n        - $ref: '#/components/schemas/InvestmentAccount'\n      properties:\n        productTypeExternalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n\n    DebitCardItem:\n      type: object\n      properties:\n        number:\n          maxLength: 36\n          type: string\n          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk\n        expiryDate:\n          maxLength: 32\n          type: string\n          description: Expiration date of a credit card, after which is no longer valid\n          format: date-time\n        cardId:\n          maxLength: 32\n          type: string\n          description: External ID of the card\n        cardholderName:\n          maxLength: 64\n          type: string\n          description: First Name and Last Name of card holder.\n        cardType:\n          maxLength: 32\n          type: string\n          description: Card type to change card image based on it, ex. Maestro Gold\n        cardStatus:\n          maxLength: 32\n          type: string\n          description: Status of the card ex. Active, Expired etc\n\n    ###############################################\n    ## Legal Entity\n    ###############################################\n    LegalEntity:\n      title: Legal Entity\n      description: |\n        A Legal Entity is any personal or non-personal entity that is involved in a transaction or an product with the bank. Both the bank and its customers are legal entities\n\n        A Legal Entity:\n        * Has one or more users that act on its behalf.\n        * Owns one or more products.\n        * A legal entity hierarchy is a collection of parent-child relationships. For example, within the same deployment, this allows you to:\n        * Set up a holding structure for a corporate customer of the bank.\n        * Set up a structure within the bank to support country and regional offices.\n      type: object\n      properties:\n        name:\n          type: string\n        externalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        legalEntityType:\n          $ref: '#/components/schemas/LegalEntityType'\n        parentExternalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        subsidiaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/LegalEntity'\n        limit:\n          $ref: '#/components/schemas/Limit'\n        currentAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CurrentAccount'\n        savingAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SavingsAccount'\n        debitCards:\n          type: array\n          items:\n            $ref: '#/components/schemas/DebitCard'\n        creditCards:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreditCard'\n        loans:\n          type: array\n          items:\n            $ref: '#/components/schemas/Loan'\n        termDeposits:\n          type: array\n          items:\n            $ref: '#/components/schemas/TermDeposit'\n        investmentAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvestmentAccount'\n        customProducts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomProduct'\n        admininistrators:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n\n      required:\n        - name\n        - external\n        - legalEntityType\n        - administrators\n    LegalEntityType:\n      type: string\n      title: Legal Entity Type\n      description: Type of the legal entity. Bank or Customer.\n      enum:\n        - CUSTOMER\n        - BANK\n    User:\n      title: User\n      description: |\n        User that accessses the system on behalf of the Legal Entity\n        A User is a person who interacts with the bank and who uses Backbase applications on behalf of the legal entity they are representing.\n      type: object\n      properties:\n        externalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        legalEntityExternalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        email:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        limit:\n          $ref: '#/components/schemas/Limit'\n      required:\n        - externalId\n    Limit:\n      title: Limit\n      type: object\n      properties:\n        transactional:\n          $ref: '#/components/schemas/TransactionalLimit'\n        daily:\n          $ref: '#/components/schemas/DailyLimit'\n        weekly:\n          $ref: '#/components/schemas/WeeklyLimit'\n        monthly:\n          $ref: '#/components/schemas/MonthlyLimit'\n        quarterly:\n          $ref: '#/components/schemas/QuarterlyLimit'\n        yearly:\n          $ref: '#/components/schemas/YearlyLimit'\n    ServiceAgreement:\n      title:  Service Agreement\n      description: |\n        The formal vehicle that allows users of one entity to access products of that or other entities\n        A Service agreement is:\n        - A contract that includes one or more legal entities. A legal entity that is participating in a service agreement can allow a subset of its users to act through that service agreement and/or allow a subset of its products to be accessed through the service agreement. Within each service agreement, permissions to perform specific tasks are granted to users, including access to products shared by one or more legal entities (participating in that service agreement). As such, a service agreement is a way to give third party users specific access to your products.\n        - A special kind of service agreement is called the master service agreement. This service agreement has one legal entity participant and once configured, the participant cannot be changed. Important to know is that once the user is granted with administrative permissions (e.g. manage account groups), he or she has the power to execute the task in any service agreement lower in the hierarchy. For example, if the user of the bank is assigned with manage account groups permission in the master service agreement of the bank, the user can manage account groups in any service agreement lower in the hierarchy.\n        - A service agreement may be restricted in time, by setting a time bound. Permissions granted to users in the time-restricted service agreement, are active and may be consumed, only while the time bound is valid.\n\n\n\n\n\n\n\n    ###############################################\n    ## Reusable Fields\n    ###############################################\n    ExternalIdentifier:\n      title: External Identifier\n      maxLength: 64\n      minLength: 1\n      pattern: ^[^\\r\\n]{1,64}$\n      type: string\n      description: External legal entity identifier.\n    UrgentTransfer:\n      type: boolean\n      description: Defines if urgent transfer is allowed.\n    ValidThru:\n      type: string\n      format: date\n      description: Expiration date of a credit card, after which is no longer valid.\n    ValueDateBalance:\n      type: number\n      description: The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed.\n    ProductNumber:\n      maxLength: 36\n      type: string\n      description: The number identifying the contract.\n    BBAN:\n      maxLength: 50\n      type: string\n      description: Specifying the BBAN of the account.\n    BIC:\n      maxLength: 11\n      type: string\n      description: Bank Identifier Code - international bank code that identifies particular banks worldwide\n    CardNumber:\n      type: number\n    CreditCardAccountNumber:\n      maxLength: 32\n      type: string\n      description: The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)?\n    CreditLimitExpiryDate:\n      type: string\n      description: The date after which overdraft will no longer be available to the account (renewed automatically or cancelled).\n    CreditLimitInterestRate:\n      type: number\n      description: Overdraft Interest is an interest applied to the account for any time throughout the month when the account is overdrawn.\n    CreditLimitUsage:\n      type: number\n      description: Monetary amount of the used overdraft.\n    CrossCurrency:\n      type: boolean\n      description: Defines if cross currency transfer is allowed\n    AccountHolderAddressLine1:\n      maxLength: 70\n      type: string\n      description: Address of the Payer/Payee - Alternate address line for the account.\n    AccountHolderAddressLine2:\n      maxLength: 70\n      type: string\n      description: Address of the Payer/Payee - Alternate address line for the account.\n    AccountHolderCountry:\n      pattern: ^[A-Z]{2}$\n      type: string\n      description: Country of the account holder\n    AccountHolderName:\n      maxLength: 256\n      type: string\n      description: Name of the Payer/Payee i.e. Owner of the Account\n    AccountHolderStreetName:\n      maxLength: 70\n      type: string\n      description: Street name of the Payer/Payee - Alternate street name for the account.\n    AccountInterestRate:\n      type: number\n      description: The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal.\n    AccountOpeningDate:\n      type: string\n    AccruedInterest:\n      description: The interest that is earned (credit interest) or due (debit interest) but not settled yet.\n      type: number\n    AmountInArrear:\n      type: number\n      description: The part of a debt that is overdue after missing one or more required payments. The amount of the arrears is the amount accrued from the date on which the first missed payment was due.\n    ApplicableInterestRate:\n      type: number\n      description: The interest rate or rates which would be used for a particular product.\n    AutoRenewalIndicator:\n      type: boolean\n      description: Indicates whether or not an product is to be continued after maturity automatically. Usually the product is renewed using the same principal and term unless renegotiation has taken place prior to expiration.\n    RemainingCredit:\n      type: number\n      description: Amount of money the user is available to use from the Credit limit of the account\n    OutstandingPayment:\n      type: number\n      description: Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due.\n    OutstandingPrincipalAmount:\n      type: number\n      description: This IS the value date balance of the product.\n    MaturityAmount:\n      type: number\n      description: Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).\n    MaturityDate:\n      type: string\n      description: End term of a holding period.\n    MinimumPayment:\n      type: number\n      description: The minimum payment set a percentage of balance, or a fixed cash amount.\n    MinimumPaymentDueDate:\n      type: string\n      description: Minimum Payment Due Date shown on your monthly statement to remain in good standing.\n    MinimumRequiredBalance:\n      type: number\n      description: Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest.\n    MonthlyInstalmentAmount:\n      type: number\n      description: A fixed payment amount paid by a borrower to the bank at a specified date each calendar month.\n    TermNumber:\n      type: number\n      description: The number of times interest rate is paid on the settlement account.\n    TermUnit:\n      type: string\n      description: The period of time and/or the interest rate arranged between Bank and customer.\n      enum:\n        - \"Daily\"\n        - \"Weekly\"\n        - \"Monthly\"\n        - \"Quarterly\"\n        - \"Yearly\"\n    Town:\n      maxLength: 35\n      type: string\n      description: Town of the Payer/Payee - Alternate town for the account.\n    InterestSettlementAccount:\n      maxLength: 32\n      type: string\n      description: Account that provides quick access to accumulated cash to facilitate daily settlements with other businesses.\n    CreditAccount:\n      type: boolean\n      description: Indicator whether or not the product can be used in payment orders as credit account.\n    DebitAccount:\n      type: boolean\n      description: Indicator whether or not the product can be used in payment orders as debit account.\n    IBAN:\n      maxLength: 34\n      pattern: ^(AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW).*\n      type: string\n      description: Specifying the IBAN of the account.\n    BankBranchCode:\n      maxLength: 20\n      type: string\n      description: (This is to accomodate additional country specific fields like Sort Code in UK)\n    StartDate:\n      type: string\n      format: 'date-time'\n    PostCode:\n      maxLength: 16\n      type: string\n      description: Post Code of the Payer/Payee\n    CountrySubDivision:\n      maxLength: 35\n      type: string\n      description: Country SubDivision of the Payer/Payee\n    InterestPaymentFrequencyNumber:\n      type: number\n      description: Number of times per year when the accumulated interest is settled to the account on a regular basis. The frequency could be yearly, half-yearly, quarterly, monthly, weekly, daily (or not at all, until maturity)\n    InterestPaymentFrequencyUnit:\n      type: string\n      description: The period of time and/or the interest rate arranged between Bank and customer.\n      enum:\n        - \"Daily\"\n        - \"Weekly\"\n        - \"Monthly\"\n        - \"Quarterly\"\n        - \"Yearly\"\n    CurrencyCode:\n      pattern: ^[A-Z]{3}$\n      type: string\n      description: The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount\n    BookedBalance:\n      type: object\n      description: \"Booked Balance\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    AvailableBalance:\n      type: object\n      description: \"Available Balance\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    CreditLimit:\n      type: object\n      description: \"Credit Limit\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    PrincipalAmount:\n      type: object\n      description: \"The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits.\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    CurrentInvestment:\n      type: object\n      description: The total current value of all the securities kept in the account.\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    TransactionalLimit:\n      type: object\n      description: \"Transactional Limit\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    DailyLimit:\n      type: object\n      description: \"Daily Limit\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    WeeklyLimit:\n      type: object\n      description: \"Weekly Limit\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    MonthlyLimit:\n      type: object\n      description: \"Monthly Limit\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    QuarterlyLimit:\n      type: object\n      description: \"Quarterly Limit\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    YearlyLimit:\n      type: object\n      description: \"Yearly Limit\"\n      properties:\n        amount:\n          type: string\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n\n    ProductState:\n      type: object\n      properties:\n        externalStateId:\n          maxLength: 50\n          type: string\n          description: An external unique identifier for the product state object.\n        state:\n          maxLength: 50\n          type: string\n          description: Name that describes the specific product state.\n\n    ###############################################\n    ## Genenric Schemas\n    ###############################################\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            type: object\n            properties:\n              message:\n                type: string\n                description: Default Message. Any further information.\n              key:\n                type: string\n                description: '{capability-name}.api.{api-key-name}. For generated\n                  validation errors this is the path in the document the error resolves\n                  to. e.g. object name + ''.'' + field'\n              context:\n                type: object\n                description: Context can be anything used to construct localised messages.\n                x-java-type: java.util.Map\u003cString,String\u003e\n            description: A validation error\n",
			"canonicalURL": "/github.com/Backbase/stream-services@31f490c801528737906d8861c59ee6d5ddd70366/-/blob/api/stream-product-catalog/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Backbase/stream-services/blob/31f490c801528737906d8861c59ee6d5ddd70366/api/stream-product-catalog/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}