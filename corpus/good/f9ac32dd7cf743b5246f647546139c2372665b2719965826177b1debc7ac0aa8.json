{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/forwarders/v2beta1/openapi.yaml",
			"byteSize": 6814,
			"content": "components:\n  responses:\n    badRequestError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request isn't valid.\n    errorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Error response.\n    forbiddenError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The operation isn't authorized.\n    internalError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: An internal service error occurred.\n    noContentResponse:\n      description: The certificate was removed successfully.\n    notFoundError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The resource wasn't found.\n    successCertUploadResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CertificateInfo'\n      description: The certificate on the tenant slot was added successfully.\n    successListCertificateResponse:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: '#/components/schemas/CertificateInfo'\n            type: array\n      description: The list of certificates was returned successfully.\n    tooManyRequestsError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Too many requests were sent.\n    unauthorizedError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The user isn't authenticated.\n  schemas:\n    Certificate:\n      properties:\n        pem:\n          type: string\n      required:\n      - pem\n      type: object\n    CertificateInfo:\n      properties:\n        content:\n          type: string\n        hash:\n          type: string\n        issuer:\n          type: string\n        lastUpdate:\n          format: date-time\n          type: string\n        notAfter:\n          format: date-time\n          type: string\n        notBefore:\n          format: date-time\n          type: string\n        slot:\n          format: int64\n          type: integer\n        subject:\n          type: string\n      type: object\n    Error:\n      properties:\n        code:\n          type: string\n        details:\n          type: object\n        message:\n          type: string\n      type: object\ninfo:\n  description: Send data from a Splunk forwarder to the Splunk Forwarder service in\n    Splunk Cloud Services.\n  title: Splunk Forwarder Service\n  version: v2beta1.4\nopenapi: 3.0.0\npaths:\n  /{tenant}/forwarders/v2beta1/certificates:\n    delete:\n      operationId: deleteCertificates\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          $ref: '#/components/responses/noContentResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"429\":\n          $ref: '#/components/responses/tooManyRequestsError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n      summary: Removes all certificates on a tenant.\n      tags:\n      - Certificates\n      x-auth-required: true\n      x-authz-scope: forwarders.certificates.delete\n    get:\n      operationId: listCertificates\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          $ref: '#/components/responses/successListCertificateResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"429\":\n          $ref: '#/components/responses/tooManyRequestsError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n      summary: Returns a list of all certificates for a tenant.\n      tags:\n      - Certificates\n      x-auth-required: true\n      x-authz-scope: forwarders.certificates.read\n    post:\n      operationId: addCertificate\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Certificate'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/successCertUploadResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"409\":\n          $ref: '#/components/responses/badRequestError'\n        \"429\":\n          $ref: '#/components/responses/tooManyRequestsError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n      summary: Adds a certificate to a vacant slot on a tenant.\n      tags:\n      - Certificates\n      x-auth-required: true\n      x-authz-scope: forwarders.certificates.write\n  /{tenant}/forwarders/v2beta1/certificates/{slot}:\n    delete:\n      operationId: deleteCertificate\n      parameters:\n      - in: path\n        name: tenant\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: slot\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          $ref: '#/components/responses/noContentResponse'\n        \"400\":\n          $ref: '#/components/responses/badRequestError'\n        \"401\":\n          $ref: '#/components/responses/unauthorizedError'\n        \"403\":\n          $ref: '#/components/responses/forbiddenError'\n        \"404\":\n          $ref: '#/components/responses/notFoundError'\n        \"429\":\n          $ref: '#/components/responses/tooManyRequestsError'\n        \"500\":\n          $ref: '#/components/responses/internalError'\n      summary: Removes a certificate on a particular slot on a tenant.\n      tags:\n      - Certificates\n      x-auth-required: true\n      x-authz-scope: forwarders.certificates.delete\nservers:\n- url: /\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: forwarders/v2beta1/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/forwarders/v2beta1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/forwarders/v2beta1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}