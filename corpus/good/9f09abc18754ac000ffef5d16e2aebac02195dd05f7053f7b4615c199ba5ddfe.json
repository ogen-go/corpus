{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-openapi"
		},
		"file": {
			"name": "MarketPayNotificationService-v6.yaml",
			"size": 0,
			"path": "yaml/MarketPayNotificationService-v6.yaml",
			"byteSize": 177779,
			"content": "openapi: 3.1.0\ninfo:\n  version: '6'\n  x-publicVersion: true\n  title: 'Adyen for Platforms: Notifications'\n  description: 'The Notification API sends notifications to the endpoints specified\n    in a given subscription. Subscriptions are managed through the Notification Configuration\n    API. The API specifications listed here detail the format of each notification.\n\n\n    For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).'\n  x-timestamp: '2022-05-06T09:18:38Z'\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  contact:\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    email: developer-experience@adyen.com\nx-groups:\n- Account holders\n- Accounts\n- Fund management\n- Other\ntags: []\nx-staticResponse: response.json\nwebhooks:\n  /ACCOUNT_CLOSED:\n    post:\n      tags:\n      - Accounts\n      summary: Account closed\n      description: Adyen sends this webhook when [an account is closed](https://docs.adyen.com/api-explorer/#/Account/latest/post/closeAccount).\n      operationId: post-ACCOUNT_CLOSED\n      x-groupName: Accounts\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountClosed:\n                $ref: '#/components/examples/post-ACCOUNT_CLOSED-accountClosed'\n            schema:\n              $ref: '#/components/schemas/AccountCloseNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountClosed:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_CREATED:\n    post:\n      tags:\n      - Accounts\n      summary: Account created\n      description: Adyen sends this webhook when [an account is created](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccount).\n      operationId: post-ACCOUNT_CREATED\n      x-groupName: Accounts\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountCreated:\n                $ref: '#/components/examples/post-ACCOUNT_CREATED-accountCreated'\n            schema:\n              $ref: '#/components/schemas/AccountCreateNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountCreated:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_FUNDS_BELOW_THRESHOLD:\n    post:\n      tags:\n      - Fund management\n      summary: Liable account's funds are below configured threshold\n      description: Adyen sends this notification when the current funds of your liable\n        account are below the configured threshold.\n      operationId: post-ACCOUNT_FUNDS_BELOW_THRESHOLD\n      x-groupName: Fund management\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountFundsBelowThreshold:\n                $ref: '#/components/examples/post-ACCOUNT_FUNDS_BELOW_THRESHOLD-accountFundsBelowThreshold'\n            schema:\n              $ref: '#/components/schemas/AccountFundsBelowThresholdNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountFundsBelowThreshold:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_HOLDER_CREATED:\n    post:\n      tags:\n      - Account holders\n      summary: Account holder created\n      description: Adyen sends this webhook when [an account holder is created](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder).\n      operationId: post-ACCOUNT_HOLDER_CREATED\n      x-groupName: Account holders\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountHolderCreated-businesses:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-businesses'\n              accountHolderCreated-failed:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-failed'\n              accountHolderCreated-individuals:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-individuals'\n            schema:\n              $ref: '#/components/schemas/AccountHolderCreateNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountHolderCreated-businesses:\n                  $ref: '#/components/examples/WebhookAck'\n                accountHolderCreated-failed:\n                  $ref: '#/components/examples/WebhookAck'\n                accountHolderCreated-individuals:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_HOLDER_PAYOUT:\n    post:\n      tags:\n      - Fund management\n      summary: Paid out to account holder\n      description: Adyen sends this notification when a [payout request](https://docs.adyen.com/api-explorer/#/Fund/latest/post/payoutAccountHolder)\n        to an account holder is processed and the payout is scheduled.\n      operationId: post-ACCOUNT_HOLDER_PAYOUT\n      x-groupName: Fund management\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountHolderPayout-failed:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-failed'\n              accountHolderPayout-initiated:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-initiated'\n            schema:\n              $ref: '#/components/schemas/AccountHolderPayoutNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountHolderPayout-failed:\n                  $ref: '#/components/examples/WebhookAck'\n                accountHolderPayout-initiated:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_HOLDER_STATUS_CHANGE:\n    post:\n      tags:\n      - Account holders\n      summary: Account holder status changed\n      description: Adyen sends this webhook when [the status of an account holder\n        is changed](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolderState).\n      operationId: post-ACCOUNT_HOLDER_STATUS_CHANGE\n      x-groupName: Account holders\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountHolderStatusChange:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_STATUS_CHANGE-accountHolderStatusChange'\n            schema:\n              $ref: '#/components/schemas/AccountHolderStatusChangeNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountHolderStatusChange:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_HOLDER_STORE_STATUS_CHANGE:\n    post:\n      tags:\n      - Account holders\n      summary: Store status changed\n      description: Adyen sends this webhook when [the status of a store](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__reqParam_accountHolderDetails-storeDetails-status)\n        associated with an account holder is changed.\n      operationId: post-ACCOUNT_HOLDER_STORE_STATUS_CHANGE\n      x-groupName: Account holders\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountHolderStoreStatusChange:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_STORE_STATUS_CHANGE-accountHolderStoreStatusChange'\n            schema:\n              $ref: '#/components/schemas/AccountHolderStoreStatusChangeNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountHolderStoreStatusChange:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_HOLDER_UPCOMING_DEADLINE:\n    post:\n      tags:\n      - Account holders\n      summary: Upcoming deadline\n      description: Adyen sends this notification when an account holder's deadline\n        to fulfill the requirements of a specific event is coming up.\n      operationId: post-ACCOUNT_HOLDER_UPCOMING_DEADLINE\n      x-groupName: Account holders\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountHolderUpcomingDeadline:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_UPCOMING_DEADLINE-accountHolderUpcomingDeadline'\n            schema:\n              $ref: '#/components/schemas/AccountHolderUpcomingDeadlineNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountHolderUpcomingDeadline:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_HOLDER_UPDATED:\n    post:\n      tags:\n      - Account holders\n      summary: Account holder updated\n      description: Adyen sends this webhook when [an account holder is updated](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolder).\n      operationId: post-ACCOUNT_HOLDER_UPDATED\n      x-groupName: Account holders\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountHolderUpdated:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_UPDATED-accountHolderUpdated'\n            schema:\n              $ref: '#/components/schemas/AccountHolderUpdateNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountHolderUpdated:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_HOLDER_VERIFICATION:\n    post:\n      tags:\n      - Account holders\n      summary: Verification results received\n      description: Adyen sends this webhook when verification results are available.\n      operationId: post-ACCOUNT_HOLDER_VERIFICATION\n      x-groupName: Account holders\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountHolderVerification:\n                $ref: '#/components/examples/post-ACCOUNT_HOLDER_VERIFICATION-accountHolderVerification'\n            schema:\n              $ref: '#/components/schemas/AccountHolderVerificationNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountHolderVerification:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /ACCOUNT_UPDATED:\n    post:\n      tags:\n      - Accounts\n      summary: Account updated\n      description: Adyen sends this webhook when [an account is updated](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccount).\n      operationId: post-ACCOUNT_UPDATED\n      x-groupName: Accounts\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountUpdated:\n                $ref: '#/components/examples/post-ACCOUNT_UPDATED-accountUpdated'\n            schema:\n              $ref: '#/components/schemas/AccountUpdateNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                accountUpdated:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /BENEFICIARY_SETUP:\n    post:\n      tags:\n      - Fund management\n      summary: Beneficiary defined\n      description: Adyen sends this notification when a [benefactor/beneficiary relationship\n        is created](https://docs.adyen.com/api-explorer/#/Fund/latest/post/transferFunds).\n      operationId: post-BENEFICIARY_SETUP\n      x-groupName: Fund management\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              beneficiarySetup:\n                $ref: '#/components/examples/post-BENEFICIARY_SETUP-beneficiarySetup'\n            schema:\n              $ref: '#/components/schemas/BeneficiarySetupNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                beneficiarySetup:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /COMPENSATE_NEGATIVE_BALANCE:\n    post:\n      tags:\n      - Fund management\n      summary: Negative account balances compensated\n      description: Adyen sends this notification when funds are transferred from your\n        platform's liable account to an overdrawn account to compensate for the overdraft.\n      operationId: post-COMPENSATE_NEGATIVE_BALANCE\n      x-groupName: Fund management\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              compensateNegativeBalance:\n                $ref: '#/components/examples/post-COMPENSATE_NEGATIVE_BALANCE-compensateNegativeBalance'\n            schema:\n              $ref: '#/components/schemas/CompensateNegativeBalanceNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                compensateNegativeBalance:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /DIRECT_DEBIT_INITIATED:\n    post:\n      tags:\n      - Fund management\n      summary: Automated direct debit initiated\n      description: Adyen sends this notification when a [direct debit is initiated](https://docs.adyen.com/api-explorer/#/Fund/latest/post/debitAccountHolder).\n      operationId: post-DIRECT_DEBIT_INITIATED\n      x-groupName: Fund management\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              directDebitInitiated:\n                $ref: '#/components/examples/post-DIRECT_DEBIT_INITIATED-directDebitInitiated'\n            schema:\n              $ref: '#/components/schemas/DirectDebitInitiatedNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                directDebitInitiated:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /PAYMENT_FAILURE:\n    post:\n      tags:\n      - Other\n      summary: Booking for a capture or refund failed\n      description: Adyen sends this notification when a [split payment](https://docs.adyen.com/platforms/processing-payments#providing-split-information)\n        booking for a capture or refund fails. When a booking fails due to an invalid\n        account status or an unknown `accountCode`, the funds are credited or debited\n        to or fromyour platform's liable account instead of the account specified\n        in the split data.\n      operationId: post-PAYMENT_FAILURE\n      x-groupName: Other\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              paymentFailure:\n                $ref: '#/components/examples/post-PAYMENT_FAILURE-paymentFailure'\n            schema:\n              $ref: '#/components/schemas/PaymentFailureNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                paymentFailure:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /REFUND_FUNDS_TRANSFER:\n    post:\n      tags:\n      - Fund management\n      summary: Funds transfer between accounts refunded\n      description: Adyen sends this notification when [funds transferred between accounts\n        are refunded](https://docs.adyen.com/api-explorer/#/Fund/v6/latest/refundFundsTransfer).\n      operationId: post-REFUND_FUNDS_TRANSFER\n      x-groupName: Fund management\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              refundFundsTransfer:\n                $ref: '#/components/examples/post-REFUND_FUNDS_TRANSFER-refundFundsTransfer'\n            schema:\n              $ref: '#/components/schemas/RefundFundsTransferNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                refundFundsTransfer:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /REPORT_AVAILABLE:\n    post:\n      tags:\n      - Other\n      summary: Report available\n      description: Adyen sends this notification when a report has been generated\n        and it is available for download.\n      operationId: post-REPORT_AVAILABLE\n      x-groupName: Other\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              reportAvailable:\n                $ref: '#/components/examples/post-REPORT_AVAILABLE-reportAvailable'\n            schema:\n              $ref: '#/components/schemas/ReportAvailableNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                reportAvailable:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /SCHEDULED_REFUNDS:\n    post:\n      tags:\n      - Fund management\n      summary: '''Refund Transfers Not Paid Out'' call processed and refunds scheduled'\n      description: Adyen sends this notification when a request to [refund transfers\n        that are not yet paid out](https://docs.adyen.com/api-explorer/#/Fund/latest/refundNotPaidOutTransfers)\n        is processed and the associated refunds are scheduled.\n      operationId: post-SCHEDULED_REFUNDS\n      x-groupName: Fund management\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              scheduledRefunds:\n                $ref: '#/components/examples/post-SCHEDULED_REFUNDS-scheduledRefunds'\n            schema:\n              $ref: '#/components/schemas/ScheduledRefundsNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                scheduledRefunds:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\n  /TRANSFER_FUNDS:\n    post:\n      tags:\n      - Fund management\n      summary: Funds transferred between accounts\n      description: Adyen sends this notification when [funds are transferred between\n        accounts](https://docs.adyen.com/api-explorer/#/Fund/latest/post/transferFunds).\n      operationId: post-TRANSFER_FUNDS\n      x-groupName: Fund management\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              transferFunds:\n                $ref: '#/components/examples/post-TRANSFER_FUNDS-transferFunds'\n            schema:\n              $ref: '#/components/schemas/TransferFundsNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                transferFunds:\n                  $ref: '#/components/examples/WebhookAck'\n              schema:\n                $ref: '#/components/schemas/NotificationResponse'\n          description: OK - the request has succeeded.\ncomponents:\n  schemas:\n    AccountCloseNotification:\n      properties:\n        content:\n          description: The details of the Account update.\n          $ref: '#/components/schemas/CloseAccountResponse'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    AccountCreateNotification:\n      properties:\n        content:\n          description: The details of the account creation.\n          $ref: '#/components/schemas/CreateAccountResponse'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    AccountEvent:\n      properties:\n        event:\n          description: 'The event.\n\n            \u003ePermitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.\n\n            For more information, refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks).'\n          enum:\n          - InactivateAccount\n          - RefundNotPaidOutTransfers\n          type: string\n        executionDate:\n          description: The date on which the event will take place.\n          format: date-time\n          type: string\n        reason:\n          description: The reason why this event has been created.\n          type: string\n      required:\n      - event\n      - executionDate\n      - reason\n    AccountFundsBelowThresholdNotification:\n      properties:\n        content:\n          description: Details of the liable account with funds under threshold.\n          $ref: '#/components/schemas/AccountFundsBelowThresholdNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n    AccountFundsBelowThresholdNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account with funds under threshold\n          type: string\n        balanceDate:\n          description: The date of the funds were found to be below threshold.\n          $ref: '#/components/schemas/LocalDate'\n        currentFunds:\n          description: The current funds in the liable account.\n          $ref: '#/components/schemas/Amount'\n        fundThreshold:\n          description: The configured fund threshold for the liable account\n          $ref: '#/components/schemas/Amount'\n        merchantAccountCode:\n          description: The code of the merchant account.\n          type: string\n      required:\n      - accountCode\n      - merchantAccountCode\n      - fundThreshold\n    AccountHolderCreateNotification:\n      properties:\n        content:\n          description: The details of the account holder creation.\n          $ref: '#/components/schemas/CreateAccountHolderResponse'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    AccountHolderDetails:\n      properties:\n        address:\n          description: The address of the account holder.\n          $ref: '#/components/schemas/ViasAddress'\n        bankAccountDetails:\n          description: Array of bank accounts associated with the account holder.\n            For details about the required `BankAccountDetail` fields, refer to [Bank\n            account check](https://docs.adyen.com/platforms/verification-checks/bank-account-check).\n          items:\n            $ref: '#/components/schemas/BankAccountDetail'\n          type: array\n        bankAggregatorDataReference:\n          x-addedInVersion: '5'\n          description: The opaque reference value returned by the Adyen API during\n            bank account login.\n          type: string\n        businessDetails:\n          description: 'Details about the business or nonprofit account holder.\n\n            Required when creating an account holder with `legalEntity` **Business**\n            or **NonProfit**.'\n          $ref: '#/components/schemas/BusinessDetails'\n        email:\n          description: The email address of the account holder.\n          type: string\n        fullPhoneNumber:\n          description: 'The phone number of the account holder provided as a single\n            string. It will be handled as a landline phone.\n\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        individualDetails:\n          description: 'Details about the individual account holder.\n\n            Required when creating an account holder with `legalEntity` **Individual**.\n\n            '\n          $ref: '#/components/schemas/IndividualDetails'\n        lastReviewDate:\n          description: Date when you last reviewed the account holder's information,\n            in ISO-8601 YYYY-MM-DD format. For example, **2020-01-31**.\n          type: string\n        legalArrangements:\n          x-addedInVersion: '6'\n          description: An array containing information about the account holder's\n            [legal arrangements](https://docs.adyen.com/platforms/verification-checks/legal-arrangements).\n          items:\n            $ref: '#/components/schemas/LegalArrangementDetail'\n          type: array\n        merchantCategoryCode:\n          description: 'The Merchant Category Code of the account holder.\n\n            \u003e If not specified in the request, this will be derived from the platform\n            account (which is configured by Adyen).'\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: 'A set of key and value pairs for general use by the account\n            holder or merchant.\n\n            The keys do not have specific names and may be used for storing miscellaneous\n            data as desired.\n\n            \u003e The values being stored have a maximum length of eighty (80) characters\n            and will be truncated if necessary.\n\n            \u003e Note that during an update of metadata, the omission of existing key-value\n            pairs will result in the deletion of those key-value pairs.'\n          type: object\n        payoutMethods:\n          x-addedInVersion: '5'\n          description: Array of tokenized card details associated with the account\n            holder. For details about how you can use the tokens to pay out, refer\n            to [Pay out to cards](https://docs.adyen.com/platforms/payout-to-cards).\n          items:\n            $ref: '#/components/schemas/PayoutMethod'\n          type: array\n        principalBusinessAddress:\n          description: The principal business address of the account holder.\n          $ref: '#/components/schemas/ViasAddress'\n        storeDetails:\n          x-addedInVersion: '5'\n          description: Array of stores associated with the account holder. Required\n            when onboarding account holders that have an Adyen [point of sale](https://docs.adyen.com/platforms/platforms-for-pos).\n          items:\n            $ref: '#/components/schemas/StoreDetail'\n          type: array\n        webAddress:\n          description: The URL of the website of the account holder.\n          type: string\n      required:\n      - fullPhoneNumber\n      - email\n      - webAddress\n    AccountHolderPayoutNotification:\n      properties:\n        content:\n          description: Details of the payout to the Account Holder.\n          $ref: '#/components/schemas/AccountHolderPayoutNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    AccountHolderPayoutNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account from which the payout was made.\n          type: string\n        accountHolderCode:\n          description: The code of the Account Holder to which the payout was made.\n          type: string\n        amounts:\n          description: The payout amounts (per currency).\n          items:\n            $ref: '#/components/schemas/Amount'\n          type: array\n        bankAccountDetail:\n          description: Details of the Bank Account to which the payout was made.\n          $ref: '#/components/schemas/BankAccountDetail'\n        description:\n          description: A description of the payout.\n          type: string\n        estimatedArrivalDate:\n          x-addedInVersion: '5'\n          description: The estimated date of arrival.\n          $ref: '#/components/schemas/LocalDate'\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Invalid fields list.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        merchantReference:\n          x-addedInVersion: '2'\n          description: The merchant reference.\n          type: string\n        originalPspReference:\n          x-addedInVersion: '5'\n          description: The PSP reference of the original payout.\n          type: string\n        payoutAccountCountry:\n          x-addedInVersion: '6'\n          description: The country code of the bank from which the payout was initiated.\n          type: string\n        payoutAccountNumber:\n          x-addedInVersion: '6'\n          description: The account number of the bank from which the payout was initiated.\n          type: string\n        payoutBalanceAccountId:\n          x-addedInVersion: '6'\n          description: The balance account id to which payment was made\n          type: string\n        payoutBankName:\n          x-addedInVersion: '6'\n          description: The name of the bank the payout from which the payout was initiated.\n          type: string\n        payoutBranchCode:\n          x-addedInVersion: '6'\n          description: The branch code of the bank from which the payout was initiated.\n          type: string\n        payoutReference:\n          x-addedInVersion: '6'\n          description: The unique payout identifier.\n          format: int64\n          type: integer\n        payoutSpeed:\n          x-addedInVersion: '5'\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n        status:\n          description: The payout status.\n          $ref: '#/components/schemas/OperationStatus'\n      required:\n      - accountHolderCode\n      - accountCode\n    AccountHolderStatus:\n      properties:\n        events:\n          description: A list of events scheduled for the account holder.\n          items:\n            $ref: '#/components/schemas/AccountEvent'\n          type: array\n        payoutState:\n          description: The payout state of the account holder.\n          $ref: '#/components/schemas/AccountPayoutState'\n        processingState:\n          description: The processing state of the account holder.\n          $ref: '#/components/schemas/AccountProcessingState'\n        status:\n          description: 'The status of the account holder.\n\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n        statusReason:\n          description: The reason why the status was assigned to the account holder.\n          type: string\n      required:\n      - status\n    AccountHolderStatusChangeNotification:\n      properties:\n        content:\n          description: The details of the Account Holder status change.\n          $ref: '#/components/schemas/AccountHolderStatusChangeNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n    AccountHolderStatusChangeNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: in case the account holder has not been updated, contains account\n            holder fields, that did not pass the validation.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        newStatus:\n          x-addedInVersion: '2'\n          description: The new status of the account holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        oldStatus:\n          x-addedInVersion: '2'\n          description: The former status of the account holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        reason:\n          description: The reason for the status change.\n          type: string\n      required:\n      - accountHolderCode\n      - oldStatus\n      - newStatus\n    AccountHolderStoreStatusChangeNotification:\n      properties:\n        content:\n          description: The details of the Account Holder Store status change.\n          $ref: '#/components/schemas/AccountHolderStoreStatusChangeNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n    AccountHolderStoreStatusChangeNotificationContent:\n      properties:\n        accountHolderCode:\n          x-addedInVersion: '5'\n          description: The code of the account holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: In case the store status has not been updated, contains fields\n            that did not pass the validation.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        newStatus:\n          x-addedInVersion: '5'\n          description: The new status of the account holder.\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - InactiveWithModifications\n          - Pending\n          type: string\n        oldStatus:\n          x-addedInVersion: '5'\n          description: The former status of the account holder.\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - InactiveWithModifications\n          - Pending\n          type: string\n        reason:\n          x-addedInVersion: '5'\n          description: The reason for the status change.\n          type: string\n        store:\n          x-addedInVersion: '5'\n          description: Alphanumeric identifier of the store.\n          type: string\n        storeReference:\n          x-addedInVersion: '5'\n          description: Store store reference.\n          type: string\n      required:\n      - accountHolderCode\n      - store\n      - storeReference\n      - oldStatus\n      - newStatus\n    AccountHolderUpcomingDeadlineNotification:\n      properties:\n        content:\n          description: The details of the upcoming event.\n          $ref: '#/components/schemas/AccountHolderUpcomingDeadlineNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n    AccountHolderUpcomingDeadlineNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder whom the event refers to.\n          type: string\n        event:\n          description: The event name that will be trigger if no action is taken.\n          enum:\n          - AccessPii\n          - ApiTierUpdate\n          - CloseAccount\n          - CloseStores\n          - DeleteBankAccounts\n          - DeleteLiableBankAccount\n          - DeletePayoutMethods\n          - DeleteShareholders\n          - DeleteSignatories\n          - InactivateAccount\n          - KYCDeadlineExtension\n          - RecalculateAccountStatusAndProcessingTier\n          - RefundNotPaidOutTransfers\n          - ResolveEvents\n          - SaveAccountHolder\n          - SaveCriminalityAndPEPChecks\n          - SaveKYCCheckStatus\n          - SuspendAccount\n          - UnSuspendAccount\n          - UpdateAccountHolderState\n          - Verification\n          type: string\n        executionDate:\n          description: The execution date scheduled for the event.\n          format: date-time\n          type: string\n        reason:\n          description: The reason that leads to scheduling of the event.\n          type: string\n    AccountHolderUpdateNotification:\n      properties:\n        content:\n          description: The details of the Account Holder update.\n          $ref: '#/components/schemas/UpdateAccountHolderResponse'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    AccountHolderVerificationNotification:\n      properties:\n        content:\n          description: The details of the Account Holder verification.\n          $ref: '#/components/schemas/AccountHolderVerificationNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    AccountHolderVerificationNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        kycCheckStatusData:\n          x-addedInVersion: '5'\n          description: Information on the verification status\n          $ref: '#/components/schemas/KYCCheckStatusData'\n        legalArrangementCode:\n          x-addedInVersion: '6'\n          description: The unique ID of the legal arrangement that has been verified.\n          type: string\n        legalArrangementEntityCode:\n          x-addedInVersion: '6'\n          description: The unique ID of the legal arrangement entity that has been\n            verified.\n          type: string\n        payoutMethodCode:\n          x-addedInVersion: '6'\n          description: The unique code of the payout method that has been verified.\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that has been verified.\n          type: string\n        signatoryCode:\n          description: The code of the signatory that has been verified.\n          type: string\n      required:\n      - accountHolderCode\n    AccountPayoutState:\n      properties:\n        allowPayout:\n          description: Indicates whether payouts are allowed. This field is the overarching\n            payout status, and is the aggregate of multiple conditions (e.g., KYC\n            status, disabled flag, etc). If this field is false, no payouts will be\n            permitted for any of the account holder's accounts. If this field is true,\n            payouts will be permitted for any of the account holder's accounts.\n          type: boolean\n        disableReason:\n          description: The reason why payouts (to all of the account holder's accounts)\n            have been disabled (by the platform). If the `disabled` field is true,\n            this field can be used to explain why.\n          type: string\n        disabled:\n          description: Indicates whether payouts have been disabled (by the platform)\n            for all of the account holder's accounts. A platform may enable and disable\n            this field at their discretion. If this field is true, `allowPayout` will\n            be false and no payouts will be permitted for any of the account holder's\n            accounts. If this field is false, `allowPayout` may or may not be enabled,\n            depending on other factors.\n          type: boolean\n        notAllowedReason:\n          x-addedInVersion: '5'\n          description: The reason why payouts (to all of the account holder's accounts)\n            have been disabled (by Adyen). If payouts have been disabled by Adyen,\n            this field will explain why. If this field is blank, payouts have not\n            been disabled by Adyen.\n          type: string\n        payoutLimit:\n          description: The maximum amount that payouts are limited to. Only applies\n            if payouts are allowed but limited.\n          $ref: '#/components/schemas/Amount'\n        tierNumber:\n          x-addedInVersion: '3'\n          description: The payout tier that the account holder occupies.\n          format: int32\n          type: integer\n    AccountProcessingState:\n      properties:\n        disableReason:\n          description: The reason why processing has been disabled.\n          type: string\n        disabled:\n          description: Indicates whether the processing of payments is allowed.\n          type: boolean\n        processedFrom:\n          description: The lower bound of the processing tier (i.e., an account holder\n            must have processed at least this amount of money in order to be placed\n            into this tier).\n          $ref: '#/components/schemas/Amount'\n        processedTo:\n          description: The upper bound of the processing tier (i.e., an account holder\n            must have processed less than this amount of money in order to be placed\n            into this tier).\n          $ref: '#/components/schemas/Amount'\n        tierNumber:\n          x-addedInVersion: '3'\n          description: The processing tier that the account holder occupies.\n          format: int32\n          type: integer\n    AccountUpdateNotification:\n      properties:\n        content:\n          description: The details of the Account update.\n          $ref: '#/components/schemas/UpdateAccountResponse'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n      - value\n      - currency\n    BankAccountDetail:\n      properties:\n        accountNumber:\n          description: 'The bank account number (without separators).\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        accountType:\n          description: 'The type of bank account.\n\n            Only applicable to bank accounts held in the USA.\n\n            The permitted values are: `checking`, `savings`.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankAccountName:\n          description: The name of the bank account.\n          type: string\n        bankAccountReference:\n          x-addedInVersion: '5'\n          description: Merchant reference to the bank account.\n          type: string\n        bankAccountUUID:\n          description: 'The unique identifier (UUID) of the Bank Account.\n\n            \u003eIf, during an account holder create or update request, this field is\n            left blank (but other fields provided), a new Bank Account will be created\n            with a procedurally-generated UUID.\n\n\n            \u003eIf, during an account holder create request, a UUID is provided, the\n            creation of the Bank Account will fail while the creation of the account\n            holder will continue.\n\n\n            \u003eIf, during an account holder update request, a UUID that is not correlated\n            with an existing Bank Account is provided, the update of the account holder\n            will fail.\n\n\n            \u003eIf, during an account holder update request, a UUID that is correlated\n            with an existing Bank Account is provided, the existing Bank Account will\n            be updated.\n\n            '\n          type: string\n        bankBicSwift:\n          description: 'The bank identifier code.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankCity:\n          description: 'The city in which the bank branch is located.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankCode:\n          description: 'The bank code of the banking institution with which the bank\n            account is registered.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        bankName:\n          description: 'The name of the banking institution with which the bank account\n            is held.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        branchCode:\n          description: 'The branch code of the branch under which the bank account\n            is registered. The value to be specified in this parameter depends on\n            the country of the bank account:\n\n            * United States - Routing number\n\n            * United Kingdom - Sort code\n\n            * Germany - Bankleitzahl\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        checkCode:\n          description: 'The check code of the bank account.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        countryCode:\n          description: 'The two-letter country code in which the bank account is registered.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        currencyCode:\n          description: 'The currency in which the bank account deals.\n\n            \u003eThe permitted currency codes are defined in ISO-4217 (e.g. ''EUR'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        iban:\n          description: 'The international bank account number.\n\n            \u003eThe IBAN standard is defined in ISO-13616.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerCity:\n          description: 'The city of residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerCountryCode:\n          description: 'The country code of the country of residence of the bank account\n            owner.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerDateOfBirth:\n          deprecated: true\n          description: 'The date of birth of the bank account owner.\n\n            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).'\n          type: string\n        ownerHouseNumberOrName:\n          description: 'The house name or number of the residence of the bank account\n            owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerName:\n          description: 'The name of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerNationality:\n          description: 'The country code of the country of nationality of the bank\n            account owner.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerPostalCode:\n          description: 'The postal code of the residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerState:\n          description: 'The state of residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        ownerStreet:\n          description: 'The street name of the residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        primaryAccount:\n          description: If set to true, the bank account is a primary account.\n          type: boolean\n        taxId:\n          description: 'The tax ID number.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n        urlForVerification:\n          description: 'The URL to be used for bank account verification.\n\n            This may be generated on bank account creation.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\n            section for details on field requirements.'\n          type: string\n    BeneficiarySetupNotification:\n      properties:\n        content:\n          description: Details of the beneficiary setup.\n          $ref: '#/components/schemas/BeneficiarySetupNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    BeneficiarySetupNotificationContent:\n      properties:\n        destinationAccountCode:\n          description: The code of the beneficiary account.\n          type: string\n        destinationAccountHolderCode:\n          description: The code of the beneficiary Account Holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: A listing of the invalid fields which have caused the Setup\n            Beneficiary request to fail. If this is empty, the Setup Beneficiary request\n            has succeeded.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        merchantReference:\n          description: The reference provided by the merchant.\n          type: string\n        sourceAccountCode:\n          description: The code of the benefactor account.\n          type: string\n        sourceAccountHolderCode:\n          description: The code of the benefactor Account Holder.\n          type: string\n        transferDate:\n          description: The date on which the beneficiary was set up and funds transferred\n            from benefactor to beneficiary.\n          format: date-time\n          type: string\n      required:\n      - sourceAccountHolderCode\n      - sourceAccountCode\n      - destinationAccountHolderCode\n      - destinationAccountCode\n      - transferDate\n    BusinessDetails:\n      properties:\n        doingBusinessAs:\n          description: The registered name of the company (if it differs from the\n            legal name of the company).\n          type: string\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        listedUltimateParentCompany:\n          description: Information about the parent public company. Required if the\n            account holder is 100% owned by a publicly listed company.\n          items:\n            $ref: '#/components/schemas/UltimateParentCompany'\n          type: array\n        registrationNumber:\n          x-addedInVersion: '4'\n          description: The registration number of the company.\n          type: string\n        shareholders:\n          description: Array containing information about individuals associated with\n            the account holder either through ownership or control. For details about\n            how you can identify them, refer to [Identity check](https://docs.adyen.com/platforms/verification-checks/identity-check).\n          items:\n            $ref: '#/components/schemas/ShareholderContact'\n          type: array\n        signatories:\n          description: 'Signatories associated with the company.\n\n            Each array entry should represent one signatory.'\n          items:\n            $ref: '#/components/schemas/SignatoryContact'\n          type: array\n        stockExchange:\n          x-addedInVersion: '6'\n          description: Market Identifier Code (MIC).\n          type: string\n        stockNumber:\n          x-addedInVersion: '6'\n          description: International Securities Identification Number (ISIN).\n          type: string\n        stockTicker:\n          x-addedInVersion: '6'\n          description: Stock Ticker symbol.\n          type: string\n        taxId:\n          description: The tax ID of the company.\n          type: string\n    CloseAccountResponse:\n      properties:\n        accountCode:\n          x-addedInVersion: '5'\n          description: The account code of the account that is closed.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          x-addedInVersion: '2'\n          description: 'The new status of the account.\n\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n      required:\n      - status\n    CompensateNegativeBalanceNotification:\n      properties:\n        content:\n          description: Details of the negative balance compensation.\n          $ref: '#/components/schemas/CompensateNegativeBalanceNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n    CompensateNegativeBalanceNotificationContent:\n      properties:\n        records:\n          description: A list of the negative balances compensated.\n          items:\n            $ref: '#/components/schemas/CompensateNegativeBalanceNotificationRecord'\n          type: array\n      required:\n      - records\n    CompensateNegativeBalanceNotificationRecord:\n      properties:\n        accountCode:\n          description: The code of the account whose negative balance has been compensated.\n          type: string\n        amount:\n          description: The amount compensated.\n          $ref: '#/components/schemas/Amount'\n        transferDate:\n          description: The date on which the compensation took place.\n          format: date-time\n          type: string\n      required:\n      - accountCode\n      - transferDate\n      - amount\n    CreateAccountHolderResponse:\n      properties:\n        accountCode:\n          description: The code of a new account created for the account holder.\n          type: string\n        accountHolderCode:\n          description: The code of the new account holder.\n          type: string\n        accountHolderDetails:\n          description: Details of the new account holder.\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          x-addedInVersion: '2'\n          description: The status of the new account holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        description:\n          x-addedInVersion: '4'\n          description: The description of the new account holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: A list of fields that caused the `/createAccountHolder` request\n            to fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          x-addedInVersion: '4'\n          description: The type of legal entity of the new account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        primaryCurrency:\n          x-addedInVersion: '5'\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        verification:\n          x-addedInVersion: '2'\n          description: The details of KYC Verification of the account holder.\n          $ref: '#/components/schemas/KYCVerificationResult'\n        verificationProfile:\n          x-addedInVersion: '6'\n          description: The identifier of the profile that applies to this entity.\n          type: string\n      required:\n      - accountHolderCode\n      - accountHolderStatus\n      - accountHolderDetails\n      - verification\n      - legalEntity\n    CreateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the new account.\n          type: string\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '5'\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          x-addedInVersion: '4'\n          description: The description of the account.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: A list of fields that caused the `/createAccount` request to\n            fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        metadata:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: A set of key and value pairs containing metadata.\n          type: object\n        payoutMethodCode:\n          x-addedInVersion: '5'\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: The payout schedule of the account.\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          x-addedInVersion: '5'\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          x-addedInVersion: '2'\n          description: 'The status of the account.\n\n            \u003ePermitted values: `Active`.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n      required:\n      - accountHolderCode\n      - accountCode\n      - status\n    DirectDebitInitiatedNotification:\n      properties:\n        content:\n          description: Details of the direct debit.\n          $ref: '#/components/schemas/DirectDebitInitiatedNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n    DirectDebitInitiatedNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        amount:\n          description: The amount to be debited from the funding account.\n          $ref: '#/components/schemas/Amount'\n        debitInitiationDate:\n          description: The date of the debit initiation.\n          $ref: '#/components/schemas/LocalDate'\n        invalidFields:\n          description: Invalid fields list.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        merchantAccountCode:\n          description: The code of the merchant account.\n          type: string\n        splits:\n          description: The split data for the debit request.\n          items:\n            $ref: '#/components/schemas/Split'\n          type: array\n        status:\n          description: Direct debit status.\n          $ref: '#/components/schemas/OperationStatus'\n      required:\n      - amount\n      - accountCode\n      - merchantAccountCode\n    ErrorFieldType:\n      properties:\n        errorCode:\n          description: The validation error code.\n          format: int32\n          type: integer\n        errorDescription:\n          description: A description of the validation error.\n          type: string\n        fieldType:\n          description: The type of error field.\n          $ref: '#/components/schemas/FieldType'\n    FieldType:\n      properties:\n        field:\n          description: The full name of the property.\n          type: string\n        fieldName:\n          description: The type of the field.\n          enum:\n          - accountCode\n          - accountHolderCode\n          - accountHolderDetails\n          - accountNumber\n          - accountStateType\n          - accountStatus\n          - accountType\n          - address\n          - balanceAccount\n          - balanceAccountActive\n          - balanceAccountCode\n          - balanceAccountId\n          - bankAccount\n          - bankAccountCode\n          - bankAccountName\n          - bankAccountUUID\n          - bankBicSwift\n          - bankCity\n          - bankCode\n          - bankName\n          - bankStatement\n          - branchCode\n          - businessContact\n          - cardToken\n          - checkCode\n          - city\n          - companyRegistration\n          - constitutionalDocument\n          - country\n          - countryCode\n          - currency\n          - currencyCode\n          - dateOfBirth\n          - description\n          - destinationAccountCode\n          - document\n          - documentContent\n          - documentExpirationDate\n          - documentIssuerCountry\n          - documentIssuerState\n          - documentName\n          - documentNumber\n          - documentType\n          - doingBusinessAs\n          - drivingLicence\n          - drivingLicenceBack\n          - drivingLicense\n          - email\n          - firstName\n          - formType\n          - fullPhoneNumber\n          - gender\n          - hopWebserviceUser\n          - houseNumberOrName\n          - iban\n          - idCard\n          - idCardBack\n          - idCardFront\n          - idNumber\n          - identityDocument\n          - individualDetails\n          - infix\n          - jobTitle\n          - lastName\n          - lastReviewDate\n          - legalArrangement\n          - legalArrangementCode\n          - legalArrangementEntity\n          - legalArrangementEntityCode\n          - legalArrangementLegalForm\n          - legalArrangementMember\n          - legalArrangementMembers\n          - legalArrangementName\n          - legalArrangementReference\n          - legalArrangementRegistrationNumber\n          - legalArrangementTaxNumber\n          - legalArrangementType\n          - legalBusinessName\n          - legalEntity\n          - legalEntityType\n          - merchantAccount\n          - merchantCategoryCode\n          - merchantReference\n          - microDeposit\n          - name\n          - nationality\n          - originalReference\n          - ownerCity\n          - ownerCountryCode\n          - ownerDateOfBirth\n          - ownerHouseNumberOrName\n          - ownerName\n          - ownerPostalCode\n          - ownerState\n          - ownerStreet\n          - passport\n          - passportNumber\n          - payoutMethodCode\n          - payoutSchedule\n          - pciSelfAssessment\n          - personalData\n          - phoneCountryCode\n          - phoneNumber\n          - postalCode\n          - primaryCurrency\n          - reason\n          - registrationNumber\n          - returnUrl\n          - schedule\n          - shareholder\n          - shareholderCode\n          - shareholderCodeAndSignatoryCode\n          - shareholderCodeOrSignatoryCode\n          - shareholderType\n          - shopperInteraction\n          - signatory\n          - signatoryCode\n          - socialSecurityNumber\n          - sourceAccountCode\n          - splitAccount\n          - splitConfigurationUUID\n          - splitCurrency\n          - splitValue\n          - splits\n          - stateOrProvince\n          - status\n          - stockExchange\n          - stockNumber\n          - stockTicker\n          - store\n          - storeDetail\n          - storeName\n          - storeReference\n          - street\n          - taxId\n          - tier\n          - tierNumber\n          - transferCode\n          - ultimateParentCompany\n          - ultimateParentCompanyAddressDetails\n          - ultimateParentCompanyAddressDetailsCountry\n          - ultimateParentCompanyBusinessDetails\n          - ultimateParentCompanyBusinessDetailsLegalBusinessName\n          - ultimateParentCompanyBusinessDetailsRegistrationNumber\n          - ultimateParentCompanyCode\n          - ultimateParentCompanyStockExchange\n          - ultimateParentCompanyStockNumber\n          - ultimateParentCompanyStockNumberOrStockTicker\n          - ultimateParentCompanyStockTicker\n          - unknown\n          - value\n          - verificationType\n          - virtualAccount\n          - visaNumber\n          - webAddress\n          - year\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that the field belongs to. If empty,\n            the field belongs to an account holder.\n          type: string\n    IndividualDetails:\n      properties:\n        name:\n          description: 'The name of the individual.\n\n            \u003eMake sure your account holder registers using the name shown on their\n            Photo ID.'\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          description: Personal information of the individual.\n          $ref: '#/components/schemas/ViasPersonalData'\n    KYCCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n    KYCCheckStatusData:\n      properties:\n        requiredFields:\n          description: A list of the fields required for execution of the check.\n          items:\n            type: string\n          type: array\n        status:\n          description: 'The status of the check.\n\n\n            Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**,\n            **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.'\n          enum:\n          - AWAITING_DATA\n          - DATA_PROVIDED\n          - FAILED\n          - INVALID_DATA\n          - PASSED\n          - PENDING\n          - PENDING_REVIEW\n          - RETRY_LIMIT_REACHED\n          - UNCHECKED\n          type: string\n        summary:\n          description: A summary of the execution of the check.\n          $ref: '#/components/schemas/KYCCheckSummary'\n        type:\n          description: \"The type of check.\\n\\nPossible values:\\n\\n * **BANK_ACCOUNT_VERIFICATION**:\\\n            \\ Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in\\\n            \\ v6 and later.\\n\\n * **COMPANY_VERIFICATION**\\n\\n  * **CARD_VERIFICATION**\\n\\\n            \\n* **IDENTITY_VERIFICATION**\\n\\n* **LEGAL_ARRANGEMENT_VERIFICATION**\\n\\\n            \\n* **NONPROFIT_VERIFICATION**\\n\\n * **PASSPORT_VERIFICATION**\\n\\n* **PAYOUT_METHOD_VERIFICATION**:\\\n            \\ Used in v6 and later.\\n\\n* **PCI_VERIFICATION**\"\n          enum:\n          - BANK_ACCOUNT_VERIFICATION\n          - CARD_VERIFICATION\n          - COMPANY_VERIFICATION\n          - IDENTITY_VERIFICATION\n          - LEGAL_ARRANGEMENT_VERIFICATION\n          - NONPROFIT_VERIFICATION\n          - PASSPORT_VERIFICATION\n          - PAYOUT_METHOD_VERIFICATION\n          - PCI_VERIFICATION\n          type: string\n      required:\n      - type\n      - status\n    KYCCheckSummary:\n      properties:\n        kycCheckCode:\n          x-addedInVersion: '5'\n          description: The code of the check. For possible values, refer to [Verification\n            codes](https://docs.adyen.com/platforms/verification-codes).\n          format: int32\n          type: integer\n        kycCheckDescription:\n          x-addedInVersion: '5'\n          description: A description of the check.\n          type: string\n    KYCLegalArrangementCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        legalArrangementCode:\n          description: The unique ID of the legal arrangement to which the check applies.\n          type: string\n    KYCLegalArrangementEntityCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        legalArrangementCode:\n          description: The unique ID of the legal arrangement to which the entity\n            belongs.\n          type: string\n        legalArrangementEntityCode:\n          description: The unique ID of the legal arrangement entity to which the\n            check applies.\n          type: string\n    KYCPayoutMethodCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        payoutMethodCode:\n          description: The unique ID of the payoput method to which the check applies.\n          type: string\n    KYCShareholderCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        legalArrangementCode:\n          x-addedInVersion: '6'\n          description: The unique ID of the legal arrangement to which the shareholder\n            belongs, if applicable.\n          type: string\n        legalArrangementEntityCode:\n          x-addedInVersion: '6'\n          description: The unique ID of the legal arrangement entity to which the\n            shareholder belongs, if applicable.\n          type: string\n        shareholderCode:\n          description: The code of the shareholder to which the check applies.\n          type: string\n    KYCSignatoryCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        signatoryCode:\n          description: The code of the signatory to which the check applies.\n          type: string\n    KYCUltimateParentCompanyCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        ultimateParentCompanyCode:\n          x-addedInVersion: '6'\n          description: The code of the Ultimate Parent Company to which the check\n            applies.\n          type: string\n    KYCVerificationResult:\n      properties:\n        accountHolder:\n          description: The results of the checks on the account holder.\n          $ref: '#/components/schemas/KYCCheckResult'\n        legalArrangements:\n          x-addedInVersion: '6'\n          description: The results of the checks on the legal arrangements.\n          items:\n            $ref: '#/components/schemas/KYCLegalArrangementCheckResult'\n          type: array\n        legalArrangementsEntities:\n          x-addedInVersion: '6'\n          description: The results of the checks on the legal arrangement entities.\n          items:\n            $ref: '#/components/schemas/KYCLegalArrangementEntityCheckResult'\n          type: array\n        payoutMethods:\n          x-addedInVersion: '6'\n          description: The results of the checks on the payout methods.\n          items:\n            $ref: '#/components/schemas/KYCPayoutMethodCheckResult'\n          type: array\n        shareholders:\n          description: The results of the checks on the shareholders.\n          items:\n            $ref: '#/components/schemas/KYCShareholderCheckResult'\n          type: array\n        signatories:\n          description: The results of the checks on the signatories.\n          items:\n            $ref: '#/components/schemas/KYCSignatoryCheckResult'\n          type: array\n        ultimateParentCompany:\n          x-addedInVersion: '6'\n          description: The result of the check on the Ultimate Parent Company.\n          items:\n            $ref: '#/components/schemas/KYCUltimateParentCompanyCheckResult'\n          type: array\n    LegalArrangementDetail:\n      properties:\n        address:\n          description: The address of the legal arrangement.\n          $ref: '#/components/schemas/ViasAddress'\n        legalArrangementCode:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            entry, returned in the response when you create a legal arrangement. Required\n            when updating an existing legal arrangement entry in an `/updateAccountHolder`\n            request.\n          type: string\n        legalArrangementEntities:\n          description: An array containing information about other entities that are\n            part of the legal arrangement.\n          items:\n            $ref: '#/components/schemas/LegalArrangementEntityDetail'\n          type: array\n        legalArrangementReference:\n          description: Your reference for the legal arrangement. Must be between 3\n            to 128 characters.\n          type: string\n        legalForm:\n          description: 'The form of legal arrangement. Required if `type` is **Trust**\n            or **Partnership**.\n\n\n            The possible values depend on the `type`.\n\n\n            - For `type` **Trust**:  **CashManagementTrust**, **CorporateUnitTrust**,\n            **DeceasedEstate**, **DiscretionaryInvestmentTrust**, **DiscretionaryServicesManagementTrust**,\n            **DiscretionaryTradingTrust**, **FirstHomeSaverAccountsTrust**, **FixedTrust**,\n            **FixedUnitTrust**, **HybridTrust**, **ListedPublicUnitTrust**, **OtherTrust**,\n            **PooledSuperannuationTrust**, **PublicTradingTrust**, or **UnlistedPublicUnitTrust**.\n\n\n            - For `type` **Partnership**: **LimitedPartnership**, **FamilyPartnership**,\n            or **OtherPartnership**'\n          enum:\n          - CashManagementTrust\n          - CorporateUnitTrust\n          - DeceasedEstate\n          - DiscretionaryInvestmentTrust\n          - DiscretionaryServicesManagementTrust\n          - DiscretionaryTradingTrust\n          - FirstHomeSaverAccountsTrust\n          - FixedTrust\n          - FixedUnitTrust\n          - HybridTrust\n          - ListedPublicUnitTrust\n          - OtherTrust\n          - PooledSuperannuationTrust\n          - PublicTradingTrust\n          - UnlistedPublicUnitTrust\n          - LimitedPartnership\n          - FamilyPartnership\n          - OtherPartnership\n          type: string\n        name:\n          description: 'The legal name of the legal arrangement. Minimum length: 3\n            characters.'\n          type: string\n        registrationNumber:\n          description: The registration number of the legal arrangement.\n          type: string\n        taxNumber:\n          description: The tax identification number of the legal arrangement.\n          type: string\n        type:\n          description: \"The [type of legal arrangement](https://docs.adyen.com/platforms/verification-checks/legal-arrangements#types-of-legal-arrangements).\\n\\\n            \\nPossible values:\\n\\n- **Association** \\n\\n- **Partnership** \\n\\n- **SoleProprietorship**\\\n            \\ \\n\\n- **Trust** \\n\\n\"\n          enum:\n          - Association\n          - Partnership\n          - SoleProprietorship\n          - Trust\n          type: string\n      required:\n      - type\n      - name\n      - address\n    LegalArrangementEntityDetail:\n      properties:\n        address:\n          description: The address of the entity.\n          $ref: '#/components/schemas/ViasAddress'\n        businessDetails:\n          description: Required when creating an entity with `legalEntityType` **Business**,\n            **NonProfit**, **PublicCompany**, or **Partnership**.\n          $ref: '#/components/schemas/BusinessDetails'\n        email:\n          description: The e-mail address of the entity.\n          type: string\n        fullPhoneNumber:\n          description: 'The phone number of the contact provided as a single string.  It\n            will be handled as a landline phone.\n\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        individualDetails:\n          description: Required when creating an entity with `legalEntityType` **Individual**.\n          $ref: '#/components/schemas/IndividualDetails'\n        legalArrangementEntityCode:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            entry, returned in the response when you create a legal arrangement entity.\n            Required when updating an existing legal arrangement entity entry in an\n            `/updateAccountHolder` request.\n          type: string\n        legalArrangementEntityReference:\n          description: Your reference for the legal arrangement entity.\n          type: string\n        legalArrangementMembers:\n          description: 'An array containing the roles of the entity in the legal arrangement.\n\n\n            The possible values depend on the legal arrangement `type`.\n\n\n            - For `type` **Association**: **ControllingPerson** and **Shareholder**.\n\n\n            - For `type` **Partnership**: **Partner** and **Shareholder**.\n\n\n            - For `type` **Trust**: **Trustee**, **Settlor**, **Protector**, **Beneficiary**,  and\n            **Shareholder**.\n\n\n            '\n          items:\n            enum:\n            - Beneficiary\n            - ControllingPerson\n            - Partner\n            - Protector\n            - Settlor\n            - Shareholder\n            - Trustee\n            type: string\n          type: array\n        legalEntityType:\n          description: 'The legal entity type.\n\n\n            Possible values: **Business**, **Individual**, **NonProfit**, **PublicCompany**,\n            or **Partnership**. '\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        phoneNumber:\n          description: The phone number of the entity.\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        webAddress:\n          description: The URL of the website of the contact.\n          type: string\n      required:\n      - legalEntityType\n    LocalDate:\n      properties:\n        month:\n          format: int32\n          type: integer\n        year:\n          format: int32\n          type: integer\n    Message:\n      properties:\n        code:\n          description: The message code.\n          type: string\n        text:\n          description: The message text.\n          type: string\n    NotificationErrorContainer:\n      properties:\n        errorCode:\n          description: The Adyen code that is mapped to the error message.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n    NotificationResponse:\n      properties:\n        notificationResponse:\n          description: Set this parameter to **[accepted]** to acknowledge that you\n            received a notification from Adyen.\n          type: string\n    OperationStatus:\n      properties:\n        message:\n          description: The message regarding the operation status.\n          $ref: '#/components/schemas/Message'\n        statusCode:\n          description: The status code.\n          type: string\n    PaymentFailureNotification:\n      properties:\n        content:\n          description: The details of the payment failure.\n          $ref: '#/components/schemas/PaymentFailureNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    PaymentFailureNotificationContent:\n      properties:\n        errorFields:\n          description: Missing or invalid fields that caused the payment error.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        errorMessage:\n          description: The error message.\n          $ref: '#/components/schemas/Message'\n        modificationMerchantReference:\n          description: The `reference` of the capture or refund.\n          type: string\n        modificationPspReference:\n          description: The `pspReference` of the capture or refund.\n          type: string\n        paymentMerchantReference:\n          description: The `reference` of the payment.\n          type: string\n        paymentPspReference:\n          description: The `pspReference` of the payment.\n          type: string\n      required:\n      - errorMessage\n      - errorFields\n    PayoutMethod:\n      properties:\n        merchantAccount:\n          description: The [`merchantAccount`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_merchantAccount)\n            you used in the `/payments` request when you [saved the account holder's\n            card details](https://docs.adyen.com/platforms/payout-to-cards#check-and-store).\n          type: string\n        payoutMethodCode:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            payout method, returned in the response when you create a payout method.\n            Required when updating an existing payout method in an `/updateAccountHolder`\n            request.\n          type: string\n        payoutMethodReference:\n          description: Your reference for the payout method.\n          type: string\n        recurringDetailReference:\n          description: The [`recurringDetailReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-recurring-recurringDetailReference)  returned\n            in the `/payments` response when you [saved the account holder's card\n            details](https://docs.adyen.com/platforms/payout-to-cards#check-and-store).\n          type: string\n        shopperReference:\n          description: The [`shopperReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_shopperReference)\n            you sent in the `/payments` request when you [saved the account holder's\n            card details](https://docs.adyen.com/platforms/payout-to-cards#check-and-store).\n          type: string\n      required:\n      - merchantAccount\n      - shopperReference\n      - recurringDetailReference\n    PayoutScheduleResponse:\n      properties:\n        nextScheduledPayout:\n          description: The date of the next scheduled payout.\n          format: date-time\n          type: string\n        schedule:\n          description: 'The payout schedule of the account.\n\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.'\n          enum:\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n          - BI_DAILY_AU\n          - BI_DAILY_EU\n          - BI_DAILY_US\n          - DAILY\n          - DAILY_6PM\n          - DAILY_AU\n          - DAILY_EU\n          - DAILY_SG\n          - DAILY_US\n          - DEFAULT\n          - EVERY_6_HOURS_FROM_MIDNIGHT\n          - HOLD\n          - MONTHLY\n          - MONTHLY_ON_15TH_AT_MIDNIGHT\n          - WEEKLY\n          - WEEKLY_MON_TO_FRI_AU\n          - WEEKLY_MON_TO_FRI_EU\n          - WEEKLY_MON_TO_FRI_US\n          - WEEKLY_ON_TUE_FRI_MIDNIGHT\n          - WEEKLY_SUN_TO_THU_AU\n          - WEEKLY_SUN_TO_THU_US\n          - YEARLY\n          type: string\n      required:\n      - schedule\n    PersonalDocumentData:\n      properties:\n        expirationDate:\n          description: \"The expiry date of the document, \\n in ISO-8601 YYYY-MM-DD\\\n            \\ format. For example, **2000-01-31**.\"\n          type: string\n        issuerCountry:\n          description: \"The country where the document was issued, in the two-character\\\n            \\ \\n[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\\\n            \\ format. For example, **NL**.\"\n          maxLength: 2\n          minLength: 2\n          type: string\n        issuerState:\n          description: The state where the document was issued (if applicable).\n          type: string\n        number:\n          description: The number in the document.\n          type: string\n        type:\n          description: 'The type of the document. Possible values: **ID**, **DRIVINGLICENSE**,\n            **PASSPORT**, **SOCIALSECURITY**, **VISA**.\n\n\n            To delete an existing entry for a document `type`, send only the `type`\n            field in your request. '\n          enum:\n          - DRIVINGLICENSE\n          - ID\n          - PASSPORT\n          - SOCIALSECURITY\n          - VISA\n          type: string\n      required:\n      - type\n    RefundFundsTransferNotification:\n      properties:\n        content:\n          description: Details of the fund transfer refund.\n          $ref: '#/components/schemas/RefundFundsTransferNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    RefundFundsTransferNotificationContent:\n      properties:\n        amount:\n          description: The amount to be refunded.\n          $ref: '#/components/schemas/Amount'\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Invalid fields list.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        merchantReference:\n          description: A value that can be supplied at the discretion of the executing\n            user in order to link multiple transactions to one another.\n          type: string\n        originalReference:\n          description: A PSP reference of the original fund transfer.\n          type: string\n        status:\n          description: The status of the fund transfer refund.\n          $ref: '#/components/schemas/OperationStatus'\n      required:\n      - originalReference\n      - amount\n    RefundResult:\n      properties:\n        originalTransaction:\n          description: The transaction that has been refunded.\n          $ref: '#/components/schemas/Transaction'\n        pspReference:\n          description: The reference of the refund.\n          type: string\n        response:\n          description: The response indicating if the refund has been received for\n            processing.\n          type: string\n      required:\n      - pspReference\n      - originalTransaction\n    ReportAvailableNotification:\n      properties:\n        content:\n          description: Details of the report.\n          $ref: '#/components/schemas/ReportAvailableNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    ReportAvailableNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the Account to which the report applies.\n          type: string\n        accountType:\n          description: The type of Account to which the report applies.\n          type: string\n        eventDate:\n          description: The date of the event to which the report applies.\n          format: date-time\n          type: string\n        remoteAccessUrl:\n          description: The URL at which the report can be accessed.\n          type: string\n        success:\n          description: Indicates whether the event resulted in a success.\n          type: boolean\n    ScheduledRefundsNotification:\n      properties:\n        content:\n          description: Details of the scheduling of the refunds.\n          $ref: '#/components/schemas/ScheduledRefundsNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    ScheduledRefundsNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        accountHolderCode:\n          description: The code of the Account Holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Invalid fields list.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        lastPayout:\n          description: The most recent payout (after which all transactions were scheduled\n            to be refunded).\n          $ref: '#/components/schemas/Transaction'\n        refundResults:\n          description: A list of the refunds that have been scheduled and their results.\n          items:\n            $ref: '#/components/schemas/RefundResult'\n          type: array\n      required:\n      - accountHolderCode\n      - accountCode\n      - refundResults\n    ShareholderContact:\n      properties:\n        address:\n          description: The address of the person.\n          $ref: '#/components/schemas/ViasAddress'\n        email:\n          description: The e-mail address of the person.\n          type: string\n        fullPhoneNumber:\n          description: 'The phone number of the person provided as a single string.  It\n            will be handled as a landline phone.\n\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        jobTitle:\n          description: 'Job title of the person. Required when the `shareholderType`\n            is **Controller**.\n\n\n            Example values: **Chief Executive Officer**, **Chief Financial Officer**,\n            **Chief Operating Officer**, **President**, **Vice President**, **Executive\n            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,\n            or **Other**.'\n          type: string\n        name:\n          description: The name of the person.\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          description: Contains information about the person.\n          $ref: '#/components/schemas/ViasPersonalData'\n        phoneNumber:\n          description: The phone number of the person.\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        shareholderCode:\n          description: 'The unique identifier (UUID) of the shareholder entry.\n\n            \u003e**If, during an Account Holder create or update request, this field is\n            left blank (but other fields provided), a new Shareholder will be created\n            with a procedurally-generated UUID.**\n\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the\n            creation of the Shareholder will fail while the creation of the Account\n            Holder will continue.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated\n            with an existing Shareholder is provided, the update of the Shareholder\n            will fail.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated\n            with an existing Shareholder is provided, the existing Shareholder will\n            be updated.**\n\n            '\n          type: string\n        shareholderReference:\n          x-addedInVersion: '5'\n          description: Your reference for the shareholder entry.\n          type: string\n        shareholderType:\n          description: \"Specifies how the person is associated with the account holder.\\\n            \\ \\n\\nPossible values: \\n\\n* **Owner**: Individuals who directly or indirectly\\\n            \\ own 25% or more of a company.\\n\\n* **Controller**: Individuals who are\\\n            \\ members of senior management staff responsible for managing a company\\\n            \\ or organization.\"\n          enum:\n          - Controller\n          - Owner\n          - Signatory\n          type: string\n        webAddress:\n          description: The URL of the person's website.\n          type: string\n    SignatoryContact:\n      properties:\n        address:\n          description: The address of the person.\n          $ref: '#/components/schemas/ViasAddress'\n        email:\n          description: The e-mail address of the person.\n          type: string\n        fullPhoneNumber:\n          description: 'The phone number of the person provided as a single string.  It\n            will be handled as a landline phone.\n\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        jobTitle:\n          description: 'Job title of the signatory.\n\n\n            Example values: **Chief Executive Officer**, **Chief Financial Officer**,\n            **Chief Operating Officer**, **President**, **Vice President**, **Executive\n            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,\n            or **Other**.'\n          type: string\n        name:\n          description: The name of the person.\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          description: Contains information about the person.\n          $ref: '#/components/schemas/ViasPersonalData'\n        phoneNumber:\n          description: The phone number of the person.\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        signatoryCode:\n          description: 'The unique identifier (UUID) of the signatory.\n\n            \u003e**If, during an Account Holder create or update request, this field is\n            left blank (but other fields provided), a new Signatory will be created\n            with a procedurally-generated UUID.**\n\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the\n            creation of the Signatory will fail while the creation of the Account\n            Holder will continue.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated\n            with an existing Signatory is provided, the update of the Signatory will\n            fail.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated\n            with an existing Signatory is provided, the existing Signatory will be\n            updated.**\n\n            '\n          type: string\n        signatoryReference:\n          description: Your reference for the signatory.\n          type: string\n        webAddress:\n          description: The URL of the person's website.\n          type: string\n    Split:\n      properties:\n        account:\n          description: 'Unique identifier of the account where the split amount should\n            be sent. This is required if `type` is **MarketPlace** or **BalanceAccount**.\n\n\n            '\n          type: string\n        amount:\n          description: The amount of this split.\n          $ref: '#/components/schemas/SplitAmount'\n        description:\n          description: A description of this split.\n          type: string\n        reference:\n          description: 'Your reference for the split, which you can use to link the\n            split to other operations such as captures and refunds.\n\n\n            This is required if `type` is **MarketPlace** or **BalanceAccount**. For\n            the other types, we also recommend sending a reference so you can reconcile\n            the split and the associated payment in the transaction overview and in\n            the reports. If the reference is not provided, the split is reported as\n            part of the aggregated [TransferBalance record type](https://docs.adyen.com/reporting/marketpay-payments-accounting-report)\n            in Adyen for Platforms.'\n          type: string\n        type:\n          description: 'The type of split.\n\n            Possible values: **Default**, **PaymentFee**, **VAT**, **Commission**,\n            **MarketPlace**, **BalanceAccount**, **Remainder**.'\n          enum:\n          - BalanceAccount\n          - Commission\n          - Default\n          - MarketPlace\n          - PaymentFee\n          - Remainder\n          - VAT\n          - Verification\n          type: string\n      required:\n      - amount\n      - type\n    SplitAmount:\n      properties:\n        currency:\n          description: 'The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n\n\n            If this value is not provided, the currency in which the payment is made\n            will be used.'\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n      - value\n    StoreDetail:\n      properties:\n        address:\n          description: The address of the physical store where the account holder\n            will process payments from.\n          $ref: '#/components/schemas/ViasAddress'\n        fullPhoneNumber:\n          description: 'The phone number of the store provided as a single string.  It\n            will be handled as a landline phone.\n\n\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"'\n          type: string\n        merchantAccount:\n          description: The merchant account to which the store belongs.\n          type: string\n        merchantCategoryCode:\n          description: The merchant category code (MCC) that classifies the business\n            of the account holder.\n          type: string\n        phoneNumber:\n          description: The phone number of the store.\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        shopperInteraction:\n          x-addedInVersion: '5'\n          description: 'The sales channel. Possible values: **Ecommerce**, **POS**.'\n          enum:\n          - Ecommerce\n          - POS\n          type: string\n        splitConfigurationUUID:\n          x-addedInVersion: '5'\n          description: The unique reference for the split configuration, returned\n            when you configure splits in your Customer Area. When this is provided,\n            the `virtualAccount` is also required. Adyen uses the configuration and\n            the `virtualAccount` to split funds between accounts in your platform.\n          type: string\n        status:\n          description: 'The status of the store. Possible values: **Pending**, **Active**,\n            **Inactive**, **InactiveWithModifications**, **Closed**.'\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - InactiveWithModifications\n          - Pending\n          type: string\n        store:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            store, returned in the response when you create a store. Required when\n            updating an existing store in an `/updateAccountHolder` request.\n          type: string\n        storeName:\n          description: \"The name of the account holder's store. This value is shown\\\n            \\ in shopper statements.\\n\\n* Length: Between 3 to 22 characters \\n\\n\\\n            * The following characters are *not* supported: **:;}{$#@!|\u003c\u003e%^*+=\\\\\\\\\\\n            **\"\n          type: string\n        storeReference:\n          description: \"Your unique identifier for the store. The Customer Area also\\\n            \\ uses this value for the store description.\\n\\n * Length: Between 3 to\\\n            \\ 128 characters\\n\\n* The following characters are *not* supported: **:;}{$#@!|\u003c\u003e%^*+=\\\\\\\n            \\\\**\"\n          type: string\n        virtualAccount:\n          x-addedInVersion: '5'\n          description: The account holder's `accountCode` where the split amount will\n            be sent. Required when you provide the `splitConfigurationUUID`.\n          type: string\n        webAddress:\n          x-addedInVersion: '5'\n          description: URL of the ecommerce store.\n          type: string\n      required:\n      - storeReference\n      - merchantCategoryCode\n      - address\n      - merchantAccount\n    Transaction:\n      properties:\n        amount:\n          description: The amount of the transaction.\n          $ref: '#/components/schemas/Amount'\n        bankAccountDetail:\n          description: The details of the bank account to where a payout was made.\n          $ref: '#/components/schemas/BankAccountDetail'\n        captureMerchantReference:\n          description: The merchant reference of a related capture.\n          type: string\n        capturePspReference:\n          description: The psp reference of a related capture.\n          type: string\n        creationDate:\n          description: The date on which the transaction was performed.\n          format: date-time\n          type: string\n        description:\n          description: A description of the transaction.\n          type: string\n        destinationAccountCode:\n          description: The code of the account to which funds were credited during\n            an outgoing fund transfer.\n          type: string\n        disputePspReference:\n          description: The psp reference of the related dispute.\n          type: string\n        disputeReasonCode:\n          description: The reason code of a dispute.\n          type: string\n        merchantReference:\n          description: The merchant reference of a transaction.\n          type: string\n        paymentPspReference:\n          x-addedInVersion: '3'\n          description: The psp reference of the related authorisation or transfer.\n          type: string\n        payoutPspReference:\n          x-addedInVersion: '3'\n          description: The psp reference of the related payout.\n          type: string\n        pspReference:\n          description: The psp reference of a transaction.\n          type: string\n        sourceAccountCode:\n          description: The code of the account from which funds were debited during\n            an incoming fund transfer.\n          type: string\n        transactionStatus:\n          description: 'The status of the transaction.\n\n            \u003ePermitted values: `PendingCredit`, `CreditFailed`, `CreditClosed`, `CreditSuspended`,\n            `Credited`, `Converted`, `PendingDebit`, `DebitFailed`, `Debited`, `DebitReversedReceived`,\n            `DebitedReversed`, `ChargebackReceived`, `Chargeback`, `ChargebackReversedReceived`,\n            `ChargebackReversed`, `Payout`, `PayoutReversed`, `FundTransfer`, `PendingFundTransfer`,\n            `ManualCorrected`.'\n          enum:\n          - BalanceNotPaidOutTransfer\n          - Chargeback\n          - ChargebackCorrection\n          - ChargebackCorrectionReceived\n          - ChargebackReceived\n          - ChargebackReversed\n          - ChargebackReversedCorrection\n          - ChargebackReversedCorrectionReceived\n          - ChargebackReversedReceived\n          - Converted\n          - CreditClosed\n          - CreditFailed\n          - CreditReversed\n          - CreditReversedReceived\n          - CreditSuspended\n          - Credited\n          - DebitFailed\n          - DebitReversedReceived\n          - Debited\n          - DebitedReversed\n          - DepositCorrectionCredited\n          - DepositCorrectionDebited\n          - Fee\n          - FundTransfer\n          - FundTransferReversed\n          - InvoiceDeductionCredited\n          - InvoiceDeductionDebited\n          - ManualCorrected\n          - ManualCorrectionCredited\n          - ManualCorrectionDebited\n          - MerchantPayin\n          - MerchantPayinReversed\n          - Payout\n          - PayoutReversed\n          - PendingCredit\n          - PendingDebit\n          - PendingFundTransfer\n          - ReCredited\n          - ReCreditedReceived\n          - SecondChargeback\n          - SecondChargebackCorrection\n          - SecondChargebackCorrectionReceived\n          - SecondChargebackReceived\n          type: string\n        transferCode:\n          description: The transfer code of the transaction.\n          type: string\n    TransferFundsNotification:\n      properties:\n        content:\n          description: Details of the fund transfer.\n          $ref: '#/components/schemas/TransferFundsNotificationContent'\n        error:\n          x-addedInVersion: '5'\n          description: Error information of failed request. No value provided here\n            if no error occurred on processing.\n          $ref: '#/components/schemas/NotificationErrorContainer'\n        eventDate:\n          x-addedInVersion: '4'\n          description: The date and time when an event has been completed.\n          format: date-time\n          type: string\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification originated\n            from the live environment. If false, the notification originated from\n            the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n      - executingUserKey\n      - pspReference\n      - eventType\n      - live\n      - eventDate\n      - content\n    TransferFundsNotificationContent:\n      properties:\n        amount:\n          description: The amount transferred.\n          $ref: '#/components/schemas/Amount'\n        destinationAccountCode:\n          description: The code of the Account to which funds were credited.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: Invalid fields list.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        merchantReference:\n          x-addedInVersion: '2'\n          description: The reference provided by the merchant.\n          type: string\n        sourceAccountCode:\n          description: The code of the Account from which funds were debited.\n          type: string\n        status:\n          description: The status of the fund transfer.\n          $ref: '#/components/schemas/OperationStatus'\n        transferCode:\n          description: The transfer code.\n          type: string\n      required:\n      - sourceAccountCode\n      - destinationAccountCode\n      - amount\n      - transferCode\n    UltimateParentCompany:\n      properties:\n        address:\n          description: Address of the ultimate parent company.\n          $ref: '#/components/schemas/ViasAddress'\n        businessDetails:\n          description: Details about the ultimate parent company's business.\n          $ref: '#/components/schemas/UltimateParentCompanyBusinessDetails'\n        ultimateParentCompanyCode:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the\n            entry, returned in the response when you create an ultimate parent company.\n            Required when updating an existing entry in an `/updateAccountHolder`\n            request.\n          type: string\n    UltimateParentCompanyBusinessDetails:\n      properties:\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        registrationNumber:\n          description: The registration number of the company.\n          type: string\n        stockExchange:\n          description: Market Identifier Code (MIC).\n          type: string\n        stockNumber:\n          description: International Securities Identification Number (ISIN).\n          type: string\n        stockTicker:\n          description: Stock Ticker symbol.\n          type: string\n    UpdateAccountHolderResponse:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        accountHolderDetails:\n          description: Details of the account holder.\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          x-addedInVersion: '2'\n          description: The new status of the account holder.\n          $ref: '#/components/schemas/AccountHolderStatus'\n        description:\n          x-addedInVersion: '4'\n          description: The description of the account holder.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: in case the account holder has not been updated, contains account\n            holder fields, that did not pass the validation.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          x-addedInVersion: '4'\n          description: The legal entity of the account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        primaryCurrency:\n          x-addedInVersion: '5'\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        verification:\n          x-addedInVersion: '2'\n          description: The details of KYC Verification of the account holder.\n          $ref: '#/components/schemas/KYCVerificationResult'\n        verificationProfile:\n          x-addedInVersion: '6'\n          description: The identifier of the profile that applies to this entity.\n          type: string\n      required:\n      - accountHolderStatus\n      - verification\n      - legalEntity\n    UpdateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        bankAccountUUID:\n          x-addedInVersion: '5'\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          x-addedInVersion: '4'\n          description: The description of the account.\n          type: string\n        invalidFields:\n          x-addedInVersion: '5'\n          description: A list of fields that caused the `/updateAccount` request to\n            fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        metadata:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: A set of key and value pairs containing metadata.\n          type: object\n        payoutMethodCode:\n          x-addedInVersion: '5'\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: The payout schedule of the account.\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          x-addedInVersion: '5'\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - INSTANT\n          - SAME_DAY\n          - STANDARD\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountCode\n    ViasAddress:\n      properties:\n        city:\n          description: The name of the city. Required if the `houseNumberOrName`,\n            `street`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n        country:\n          description: The two-character country code of the address in ISO-3166-1\n            alpha-2 format. For example, **NL**.\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: 'The postal code. Required if the `houseNumberOrName`, `street`,\n            `city`, or `stateOrProvince` are provided.\n\n\n            Maximum length:\n\n\n            * 5 digits for addresses in the US.\n\n\n            * 10 characters for all other countries.'\n          type: string\n        stateOrProvince:\n          description: \"The abbreviation of the state or province. Required if the\\\n            \\ `houseNumberOrName`, `street`, `city`, or `postalCode` are provided.\\\n            \\ \\n\\nMaximum length:\\n\\n* 2 characters for addresses in the US or Canada.\\n\\\n            \\n* 3 characters for all other countries.\\n\"\n          type: string\n        street:\n          description: The name of the street. Required if the `houseNumberOrName`,\n            `city`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n      required:\n      - country\n    ViasName:\n      properties:\n        firstName:\n          description: The first name.\n          maxLength: 80\n          type: string\n        gender:\n          description: 'The gender.\n\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.'\n          enum:\n          - MALE\n          - FEMALE\n          - UNKNOWN\n          maxLength: 1\n          type: string\n        infix:\n          description: 'The name''s infix, if applicable.\n\n            \u003eA maximum length of twenty (20) characters is imposed.'\n          maxLength: 20\n          type: string\n        lastName:\n          description: The last name.\n          maxLength: 80\n          type: string\n      required:\n      - firstName\n      - lastName\n    ViasPersonalData:\n      properties:\n        dateOfBirth:\n          description: The person's date of birth, in ISO-8601 YYYY-MM-DD format.\n            For example, **2000-01-31**.\n          type: string\n        documentData:\n          x-addedInVersion: '3'\n          description: Array that contains information about the person's identification\n            document. You can submit only one entry per document type.\n          items:\n            $ref: '#/components/schemas/PersonalDocumentData'\n          type: array\n        nationality:\n          description: 'The nationality of the person represented by a two-character\n            country code,  in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n            format. For example, **NL**.\n\n            '\n          maxLength: 2\n          minLength: 2\n          type: string\n    ViasPhoneNumber:\n      properties:\n        phoneCountryCode:\n          description: 'The two-character country code of the phone number.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').'\n          type: string\n        phoneNumber:\n          description: 'The phone number.\n\n            \u003eThe inclusion of the phone number country code is not necessary.'\n          type: string\n        phoneType:\n          description: 'The type of the phone number.\n\n            \u003eThe following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.'\n          enum:\n          - Fax\n          - Landline\n          - Mobile\n          - SIP\n          type: string\n      required:\n      - phoneCountryCode\n      - phoneNumber\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\n  examples:\n    WebhookAck:\n      summary: Acknowledge Webhook\n      value:\n        notificationResponse: '[accepted]'\n    post-ACCOUNT_CLOSED-accountClosed:\n      summary: ACCOUNT_CLOSED example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_CLOSED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          status: Closed\n    post-ACCOUNT_CREATED-accountCreated:\n      summary: ACCOUNT_CREATED example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_CREATED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          accountCode: AC0000000001\n          accountHolderCode: AHC00000001\n          description: account description\n          metadata:\n            MetaKey: MetaValue\n          payoutSchedule:\n            nextScheduledPayout: '1970-01-02T01:00:00+01:00'\n            schedule: DAILY\n          status: Active\n    post-ACCOUNT_FUNDS_BELOW_THRESHOLD-accountFundsBelowThreshold:\n      summary: TRANSFER_FUNDS example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: TRANSFER_FUNDS\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          amount:\n            currency: EUR\n            value: 10\n          destinationAccountCode: AC0000001D\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#000001\n          sourceAccountCode: AC0000001S\n          status:\n            message:\n              code: '100'\n              text: test message\n            statusCode: Success\n          transferCode: TC0001\n    post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-businesses:\n      summary: ACCOUNT_HOLDER_CREATED for businesses example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-02T01:00:00+01:00'\n        eventType: ACCOUNT_HOLDER_CREATED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          accountCode: AC0000000001\n          accountHolderCode: AHC00000001\n          accountHolderDetails:\n            address:\n              city: Amsterdam\n              country: NL\n              houseNumberOrName: 96/A\n              postalCode: 1000AA\n              stateOrProvince: NH\n              street: Street\n            bankAccountDetails:\n            - accountNumber: '00000000'\n              accountType: checking\n              bankAccountName: Account name\n              bankAccountReference: Ref#000001\n              bankAccountUUID: 00000000-0000-0000-0000-000000000000\n              bankBicSwift: BSWFT\n              bankCity: Amsterdam\n              bankCode: '00000000'\n              bankName: Bank Name Co\n              branchCode: '00000000'\n              checkCode: '1234'\n              countryCode: NL\n              currencyCode: EUR\n              iban: NL00NONE1234123412\n              ownerCity: Amsterdam\n              ownerCountryCode: NL\n              ownerDateOfBirth: '1981-02-27'\n              ownerHouseNumberOrName: 32/B\n              ownerName: Owner Name\n              ownerNationality: NL\n              ownerPostalCode: 1000AA\n              ownerState: NH\n              ownerStreet: Owner Street\n              primaryAccount: false\n              taxId: OT#12345\n              urlForVerification: http://adyen.com\n            businessDetails:\n              doingBusinessAs: Business name\n              legalBusinessName: Legal Business Co\n              registrationNumber: Reg#1234\n              shareholders:\n              - address:\n                  city: Amsterdam\n                  country: NL\n                  houseNumberOrName: 96/A\n                  postalCode: 1000AA\n                  stateOrProvince: NH\n                  street: Street\n                email: contact@merchant.com\n                fullPhoneNumber: '+3112345678'\n                name:\n                  firstName: Firstname\n                  gender: UNKNOWN\n                  infix: infix\n                  lastName: Lastname\n                personalData:\n                  dateOfBirth: '1981-02-27'\n                  documentData:\n                  - expirationDate: '2030-12-31'\n                    issuerCountry: NL\n                    issuerState: NH\n                    number: ID#123456\n                    type: ID\n                  nationality: NL\n                phoneNumber:\n                  phoneCountryCode: NL\n                  phoneNumber: '858888138'\n                  phoneType: Landline\n                shareholderCode: SH00001\n                shareholderReference: SHREF#0000001\n                webAddress: https://www.adyen.com/\n              taxId: TaxID#1234\n            email: contact@adyen.com\n            fullPhoneNumber: '+31858888138'\n            individualDetails:\n              name:\n                firstName: Firstname\n                gender: UNKNOWN\n                infix: infix\n                lastName: Lastname\n              personalData:\n                dateOfBirth: '1981-02-27'\n                documentData:\n                - expirationDate: '2030-12-31'\n                  issuerCountry: NL\n                  issuerState: NH\n                  number: ID#123456\n                  type: ID\n                nationality: NL\n            merchantCategoryCode: '1212'\n            metadata:\n              MetaKey: MetaValue\n            payoutInstrumentTokens:\n            - merchantAccount: MA000001\n              payoutInstrumentTokenCode: PIT000001\n              payoutInstrumentTokenType: CardToken\n              recurringDetailReference: RDR0000001\n              shopperReference: SR000001\n            phoneNumber:\n              phoneCountryCode: NL\n              phoneNumber: '858888138'\n              phoneType: Landline\n            webAddress: https://adyen.com\n          accountHolderStatus:\n            status: Active\n            statusReason: Reason of status\n            processingState:\n              disabled: true\n              disableReason: Reason for disabled status\n              processedFrom:\n                currency: EUR\n                value: 10\n              processedTo:\n                currency: EUR\n                value: 100\n              tierNumber: 2\n            payoutState:\n              allowPayout: false\n              payoutLimit:\n                currency: EUR\n                value: 1000\n              disabled: true\n              disableReason: Reason for disabled status\n              tierNumber: 2\n              notAllowedReason: Reason of not allowed\n            events:\n            - event: InactivateAccount\n              executionDate: '2019-01-01T01:00:00+01:00'\n              reason: Reason of event\n          description: Description for account holder\n          legalEntity: Business\n          primaryCurrency: EUR\n          verification:\n            accountHolder:\n              checks:\n              - type: IDENTITY_VERIFICATION\n                status: PENDING\n                summary:\n                  kycCheckCode: 100\n                  kycCheckDescription: KYC check summary description\n                requiredFields:\n                - field.missing\n            shareholders:\n            - checks:\n              - type: IDENTITY_VERIFICATION\n                status: PENDING\n                summary:\n                  kycCheckCode: 100\n                  kycCheckDescription: KYC check summary description\n                requiredFields:\n                - field.missing\n              shareholderCode: SH000001\n            bankAccounts:\n            - checks:\n              - type: IDENTITY_VERIFICATION\n                status: PENDING\n                summary:\n                  kycCheckCode: 100\n                  kycCheckDescription: KYC check summary description\n                requiredFields:\n                - field.missing\n              bankAccountUUID: 00000000-0000-0000-0000-000000000000\n    post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-failed:\n      summary: ACCOUNT_HOLDER_CREATED failed example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '1970-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_HOLDER_CREATED\n        executingUserKey: executing-user-key\n        live: false\n        mimeType: genericNotification\n        pspReference: TSTPSPR0001\n        content:\n          accountHolderCode: AH000001\n          accountState:\n            allowPayout: false\n            allowProcessing: false\n            disableReason: Reason for disabled status\n            disabled: true\n            stateDeadline: '1970-01-01T01:00:00+01:00'\n            stateLimit:\n              amount: 100\n              currency: EUR\n            stateType: Processing\n            tierNumber: 2\n          amount:\n            currency: EUR\n            value: 10\n          totalAmountBeforeLimit:\n            currency: EUR\n            value: 100\n          transactionDate: '1970-01-01T01:00:00+01:00'\n          transactionFailed: false\n    post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-individuals:\n      summary: ACCOUNT_HOLDER_CREATED for individuals example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_HOLDER_CREATED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          accountCode: AC0000000001\n          accountHolderCode: AHC00000001\n          accountHolderDetails:\n            address:\n              city: Amsterdam\n              country: NL\n              houseNumberOrName: 96/A\n              postalCode: 1000AA\n              stateOrProvince: NH\n              street: Street\n            bankAccountDetails:\n            - accountNumber: '00000000'\n              accountType: checking\n              bankAccountName: Account name\n              bankAccountReference: Ref#000001\n              bankAccountUUID: 00000000-0000-0000-0000-000000000000\n              bankBicSwift: BSWFT\n              bankCity: Amsterdam\n              bankCode: '00000000'\n              bankName: Bank Name Co\n              branchCode: '00000000'\n              checkCode: '1234'\n              countryCode: NL\n              currencyCode: EUR\n              iban: NL00NONE1234123412\n              ownerCity: Amsterdam\n              ownerCountryCode: NL\n              ownerDateOfBirth: '1981-02-27'\n              ownerHouseNumberOrName: 32/B\n              ownerName: Owner Name\n              ownerNationality: NL\n              ownerPostalCode: 1000AA\n              ownerState: NH\n              ownerStreet: Owner Street\n              primaryAccount: false\n              taxId: OT#12345\n              urlForVerification: http://adyen.com\n            email: contact@adyen.com\n            fullPhoneNumber: '+31858888138'\n            individualDetails:\n              name:\n                firstName: Firstname\n                gender: UNKNOWN\n                infix: infix\n                lastName: Lastname\n              personalData:\n                dateOfBirth: '1981-02-27'\n                documentData:\n                - expirationDate: '2030-12-31'\n                  issuerCountry: NL\n                  issuerState: NH\n                  number: ID#123456\n                  type: ID\n                nationality: NL\n            merchantCategoryCode: '1212'\n            metadata:\n              MetaKey: MetaValue\n            payoutInstrumentTokens:\n            - merchantAccount: MA000001\n              payoutInstrumentTokenCode: PIT000001\n              payoutInstrumentTokenType: CardToken\n              recurringDetailReference: RDR0000001\n              shopperReference: SR000001\n            phoneNumber:\n              phoneCountryCode: NL\n              phoneNumber: '858888138'\n              phoneType: Landline\n            webAddress: https://adyen.com\n          accountHolderStatus:\n            status: Active\n            statusReason: Reason of status\n            processingState:\n              disabled: true\n              disableReason: Reason for disabled status\n              processedFrom:\n                currency: EUR\n                value: 10\n              processedTo:\n                currency: EUR\n                value: 100\n              tierNumber: 2\n            payoutState:\n              allowPayout: false\n              payoutLimit:\n                currency: EUR\n                value: 1000\n              disabled: true\n              disableReason: Reason for disabled status\n              tierNumber: 2\n              notAllowedReason: Reason of not allowed\n            events:\n            - event: InactivateAccount\n              executionDate: '2019-01-01T01:00:00+01:00'\n              reason: Reason of event\n          description: Description for account holder\n          legalEntity: Individual\n          primaryCurrency: EUR\n          verification:\n            accountHolder:\n              checks:\n              - type: IDENTITY_VERIFICATION\n                status: PENDING\n                summary:\n                  kycCheckCode: 100\n                  kycCheckDescription: KYC check summary description\n                requiredFields:\n                - field.missing\n            bankAccounts:\n            - checks:\n              - type: IDENTITY_VERIFICATION\n                status: PENDING\n                summary:\n                  kycCheckCode: 100\n                  kycCheckDescription: KYC check summary description\n                requiredFields:\n                - field.missing\n              bankAccountUUID: 00000000-0000-0000-0000-000000000000\n    post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-failed:\n      summary: ACCOUNT_HOLDER_PAYOUT failed example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_HOLDER_PAYOUT\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          accountCode: AC00000001\n          accountHolderCode: AH00000001\n          amounts:\n          - currency: EUR\n            value: 10\n          bankAccountDetail:\n            accountNumber: '00000000'\n            accountType: checking\n            bankAccountName: Account name\n            bankAccountReference: Ref#000001\n            bankAccountUUID: 00000000-0000-0000-0000-000000000000\n            bankBicSwift: BSWFT\n            bankCity: Amsterdam\n            bankCode: '00000000'\n            bankName: Bank Name Co\n            branchCode: '00000000'\n            checkCode: '1234'\n            countryCode: NL\n            currencyCode: EUR\n            iban: NL00NONE1234123412\n            ownerCity: Amsterdam\n            ownerCountryCode: NL\n            ownerDateOfBirth: '1981-02-27'\n            ownerHouseNumberOrName: 32/B\n            ownerName: Owner Name\n            ownerNationality: NL\n            ownerPostalCode: 1000AA\n            ownerState: NH\n            ownerStreet: Owner Street\n            primaryAccount: false\n            taxId: OT#12345\n            urlForVerification: http://adyen.com\n          description: description of payout\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#00000001\n          status:\n            message:\n              code: '10_069'\n              text: 'Payout has been failed for account seller1. Details: Payout has\n                been rejected by the beneficiary bank.'\n            statusCode: Failed\n    post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-initiated:\n      summary: ACCOUNT_HOLDER_PAYOUT initiated example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_HOLDER_PAYOUT\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          accountCode: AC00000001\n          accountHolderCode: AH00000001\n          amounts:\n          - currency: EUR\n            value: 10\n          bankAccountDetail:\n            accountNumber: '00000000'\n            accountType: checking\n            bankAccountName: Account name\n            bankAccountReference: Ref#000001\n            bankAccountUUID: 00000000-0000-0000-0000-000000000000\n            bankBicSwift: BSWFT\n            bankCity: Amsterdam\n            bankCode: '00000000'\n            bankName: Bank Name Co\n            branchCode: '00000000'\n            checkCode: '1234'\n            countryCode: NL\n            currencyCode: EUR\n            iban: NL00NONE1234123412\n            ownerCity: Amsterdam\n            ownerCountryCode: NL\n            ownerDateOfBirth: '1981-02-27'\n            ownerHouseNumberOrName: 32/B\n            ownerName: Owner Name\n            ownerNationality: NL\n            ownerPostalCode: 1000AA\n            ownerState: NH\n            ownerStreet: Owner Street\n            primaryAccount: false\n            taxId: OT#12345\n            urlForVerification: http://adyen.com\n          description: description of payout\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#00000001\n          status:\n            message:\n              code: '100'\n              text: test message\n            statusCode: Initiated\n    post-ACCOUNT_HOLDER_STATUS_CHANGE-accountHolderStatusChange:\n      summary: ACCOUNT_HOLDER_STATUS_CHANGE example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-02T01:00:00+01:00'\n        eventType: ACCOUNT_HOLDER_STATUS_CHANGE\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          accountHolderCode: AH000001\n          oldStatus:\n            status: Active\n            statusReason: Reason of status\n            processingState:\n              disabled: true\n              disableReason: Reason for disabled status\n              processedFrom:\n                currency: EUR\n                value: 10\n              processedTo:\n                currency: EUR\n                value: 100\n              tierNumber: 2\n            payoutState:\n              allowPayout: false\n              payoutLimit:\n                currency: EUR\n                value: 1000\n              disabled: true\n              disableReason: Reason for disabled status\n              tierNumber: 2\n              notAllowedReason: Reason of not allowed\n            events: []\n          newStatus:\n            status: Active\n            statusReason: Reason of status\n            processingState:\n              disabled: true\n              disableReason: Reason for disabled status\n              processedFrom:\n                currency: EUR\n                value: 10\n              processedTo:\n                currency: EUR\n                value: 100\n              tierNumber: 2\n            payoutState:\n              allowPayout: false\n              payoutLimit:\n                currency: EUR\n                value: 1000\n              disabled: true\n              disableReason: Reason for disabled status\n              tierNumber: 2\n              notAllowedReason: Reason of not allowed\n            events:\n            - AccountEvent:\n                event: InactivateAccount\n                executionDate: '2019-01-01T01:00:00+01:00'\n                reason: Reason of event\n          reason: status change reason\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n    post-ACCOUNT_HOLDER_STORE_STATUS_CHANGE-accountHolderStoreStatusChange:\n      summary: ACCOUNT_HOLDER_STORE_STATUS_CHANGE example\n      value:\n        eventDate: '2019-12-16T10:38:15+01:00'\n        eventType: ACCOUNT_HOLDER_STORE_STATUS_CHANGE\n        executingUserKey: Store Status Update\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          accountHolderCode: AH000001\n          store: x00x00x00-xx00-0xx0-x000-00xx00xx000000\n          storeReference: Ref#000001\n          oldStatus: Pending\n          newStatus: Active\n          reason: Store was successfully set up\n    post-ACCOUNT_HOLDER_UPCOMING_DEADLINE-accountHolderUpcomingDeadline:\n      summary: ACCOUNT_HOLDER_UPCOMING_DEADLINE example\n      value:\n        eventDate: '2019-09-25T09:52:28+02:00'\n        eventType: ACCOUNT_HOLDER_UPCOMING_DEADLINE\n        live: false\n        pspReference: '9315693979482563'\n        content:\n          accountHolderCode: testD47\n          event: InactivateAccount\n          executionDate: '2019-10-11'\n          reason: Processed more than GBP 5000.00 or equivalent, deadline triggered\n    post-ACCOUNT_HOLDER_UPDATED-accountHolderUpdated:\n      summary: ACCOUNT CLOSED example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_CLOSED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          status: Closed\n    post-ACCOUNT_HOLDER_VERIFICATION-accountHolderVerification:\n      summary: ACCOUNT_HOLDER_VERIFICATION example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_HOLDER_VERIFICATION\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          accountHolderCode: AH0000001\n          payoutMethodCode: 00000000-0000-0000-0000-000000000000\n          kycCheckStatusData:\n            type: IDENTITY_VERIFICATION\n            status: PENDING\n            summary:\n              kycCheckCode: 100\n              kycCheckDescription: KYC check summary description\n            requiredFields:\n            - field.missing\n          shareholderCode: SH00000001\n    post-ACCOUNT_UPDATED-accountUpdated:\n      summary: ACCOUNT_UPDATED example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: ACCOUNT_UPDATED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          accountCode: AC0000000001\n          description: account description\n          metadata:\n            MetaKey: MetaValue\n          payoutSchedule:\n            nextScheduledPayout: '1970-01-02T01:00:00+01:00'\n            schedule: DAILY\n    post-BENEFICIARY_SETUP-beneficiarySetup:\n      summary: BENEFICIARY_SETUP example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: BENEFICIARY_SETUP\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          destinationAccountCode: AC00000001D\n          destinationAccountHolderCode: AH00000001D\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#000000001\n          sourceAccountCode: AC0000001S\n          sourceAccountHolderCode: AH000000001S\n          transferDate: '1970-01-01T01:00:00+01:00'\n    post-COMPENSATE_NEGATIVE_BALANCE-compensateNegativeBalance:\n      summary: COMPENSATE_NEGATIVE_BALANCE example\n      value:\n        eventType: COMPENSATE_NEGATIVE_BALANCE\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          records:\n          - accountCode: AC000001\n            amount:\n              currency: EUR\n              value: 10\n            transferDate: '1970-01-01T01:00:00+01:00'\n    post-DIRECT_DEBIT_INITIATED-directDebitInitiated:\n      summary: DIRECT_DEBIT_INITIATED example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: TRANSFER_FUNDS\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          amount:\n            currency: EUR\n            value: 10\n          destinationAccountCode: AC0000001D\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#000001\n          sourceAccountCode: AC0000001S\n          status:\n            message:\n              code: '100'\n              text: test message\n            statusCode: Success\n          transferCode: TC0001\n    post-PAYMENT_FAILURE-paymentFailure:\n      summary: TRANSFER_FUNDS example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: TRANSFER_FUNDS\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          amount:\n            currency: EUR\n            value: 10\n          destinationAccountCode: AC0000001D\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#000001\n          sourceAccountCode: AC0000001S\n          status:\n            message:\n              code: '100'\n              text: test message\n            statusCode: Success\n          transferCode: TC0001\n    post-REFUND_FUNDS_TRANSFER-refundFundsTransfer:\n      summary: TRANSFER_FUNDS example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: TRANSFER_FUNDS\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          amount:\n            currency: EUR\n            value: 10\n          destinationAccountCode: AC0000001D\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#000001\n          sourceAccountCode: AC0000001S\n          status:\n            message:\n              code: '100'\n              text: test message\n            statusCode: Success\n          transferCode: TC0001\n    post-REPORT_AVAILABLE-reportAvailable:\n      summary: TRANSFER_FUNDS example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: TRANSFER_FUNDS\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          amount:\n            currency: EUR\n            value: 10\n          destinationAccountCode: AC0000001D\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#000001\n          sourceAccountCode: AC0000001S\n          status:\n            message:\n              code: '100'\n              text: test message\n            statusCode: Success\n          transferCode: TC0001\n    post-SCHEDULED_REFUNDS-scheduledRefunds:\n      summary: SCHEDULED_REFUNDS example\n      value:\n        eventType: SCHEDULED_REFUNDS\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          accountCode: AC000001\n          accountHolderCode: AH000001\n          lastPayout:\n            amount:\n              currency: EUR\n              value: 10\n            bankAccountDetail:\n              accountNumber: '00000000'\n              accountType: checking\n              bankAccountName: Account name\n              bankAccountUUID: 00000000-0000-0000-0000-000000000000\n              bankBicSwift: BSWFT\n              bankCity: Amsterdam\n              bankCode: '00000000'\n              bankName: Bank Name Co\n              branchCode: '00000000'\n              checkCode: '1234'\n              countryCode: NL\n              currencyCode: EUR\n              iban: NL00NONE1234123412\n              ownerCity: Amsterdam\n              ownerCountryCode: NL\n              ownerDateOfBirth: '1981-02-27'\n              ownerHouseNumberOrName: 32/B\n              ownerName: Owner Name\n              ownerNationality: NL\n              ownerPostalCode: 1000AA\n              ownerState: NH\n              ownerStreet: Owner Street\n              primaryAccount: false\n              taxId: OT#12345\n              urlForVerification: http://adyen.com\n            captureMerchantReference: MRef0000001C\n            capturePspReference: TSTPSPR00000001C\n            creationDate: '1970-01-01T01:00:00+01:00'\n            description: transaction description\n            destinationAccountCode: AC0000001D\n            disputePspReference: TSTPSPR00000000D\n            disputeReasonCode: DRC001\n            merchantReference: MRef#00000001\n            paymentPspReference: TSTPSPR0000000PO\n            payoutPspReference: TSTPSPR000000PI\n            pspReference: TSTPSPR000000001\n            sourceAccountCode: AC00000001S\n            transactionStatus: Debited\n            transferCode: TC0001\n          refundResults:\n          - originalTransaction:\n              amount:\n                currency: EUR\n                value: 10\n              bankAccountDetail:\n                accountNumber: '00000000'\n                accountType: checking\n                bankAccountName: Account name\n                bankAccountUUID: 00000000-0000-0000-0000-000000000000\n                bankBicSwift: BSWFT\n                bankCity: Amsterdam\n                bankCode: '00000000'\n                bankName: Bank Name Co\n                branchCode: '00000000'\n                checkCode: '1234'\n                countryCode: NL\n                currencyCode: EUR\n                iban: NL00NONE1234123412\n                ownerCity: Amsterdam\n                ownerCountryCode: NL\n                ownerDateOfBirth: '1981-02-27'\n                ownerHouseNumberOrName: 32/B\n                ownerName: Owner Name\n                ownerNationality: NL\n                ownerPostalCode: 1000AA\n                ownerState: NH\n                ownerStreet: Owner Street\n                primaryAccount: false\n                taxId: OT#12345\n                urlForVerification: http://adyen.com\n              captureMerchantReference: MRef0000001C\n              capturePspReference: TSTPSPR00000001C\n              creationDate: '1970-01-01T01:00:00+01:00'\n              description: transaction description\n              destinationAccountCode: AC0000001D\n              disputePspReference: TSTPSPR00000000D\n              disputeReasonCode: DRC001\n              merchantReference: MRef#00000001\n              paymentPspReference: TSTPSPR0000000PO\n              payoutPspReference: TSTPSPR000000PI\n              pspReference: TSTPSPR000000001\n              sourceAccountCode: AC00000001S\n              transactionStatus: Debited\n              transferCode: TC0001\n            pspReference: TSTPSPR00000001\n            response: response\n    post-TRANSFER_FUNDS-transferFunds:\n      summary: TRANSFER_FUNDS example\n      value:\n        error:\n          errorCode: '000'\n          message: test error message\n        eventDate: '2019-01-01T01:00:00+01:00'\n        eventType: TRANSFER_FUNDS\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n        content:\n          amount:\n            currency: EUR\n            value: 10\n          destinationAccountCode: AC0000001D\n          invalidFields:\n          - errorCode: 1\n            errorDescription: Field is missing\n            fieldType:\n              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n              fieldName: unknown\n              shareholderCode: SH00001\n          merchantReference: MRef#000001\n          sourceAccountCode: AC0000001S\n          status:\n            message:\n              code: '100'\n              text: test message\n            statusCode: Success\n          transferCode: TC0001\n",
			"canonicalURL": "/github.com/Adyen/adyen-openapi@1ce757e7aa9360d308ee46c57faf90dacc9aaf98/-/blob/yaml/MarketPayNotificationService-v6.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-openapi/blob/1ce757e7aa9360d308ee46c57faf90dacc9aaf98/yaml/MarketPayNotificationService-v6.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}