{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/disit/snap4city"
		},
		"file": {
			"name": "heatmap-openapiv3.yaml",
			"size": 0,
			"path": "swagger/external/heatmap-openapiv3.yaml",
			"byteSize": 10365,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"This is the heatmap server.  You can find out more about     Swagger at\n    [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).\"\n  version: 1.0.0\n  title: Heatmap\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: info@disit.org\n  license:\n    name: GNU Affero General Public License\n    url: https://www.gnu.org/licenses/agpl-3.0.en.html\npaths:\n  \"/data/{mapName}/{metricName}/{date}/{clustered}\":\n    get:\n      summary: Get heatmap data\n      description: Returns heatmap data\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataOutput\"\n        \"400\":\n          description: Invalid parameters supplied\n        \"404\":\n          description: Resource not found\n    parameters:\n      - name: mapName\n        in: path\n        required: true\n        description: The map name\n        schema:\n          type: string\n      - name: metricName\n        in: path\n        required: true\n        description: The metric's name\n        schema:\n          type: string\n      - name: date\n        in: path\n        required: true\n        description: The date\n        example: 2019-01-01T00:00:00Z\n        schema:\n          type: string\n      - name: clustered\n        in: path\n        required: true\n        description: Specify whether the heatmap data is clustered (1) or not (0)\n        schema:\n          type: integer\n          enum:\n            - 0\n            - 1\n  /list:\n    get:\n      summary: Get the maps' list\n      description: Returns the maps' list\n      responses:\n        \"200\":\n          description: Status 200\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/List\"\n  \"/dataTime/{mapName}/{metricName}/{limit}/{clustered}\":\n    get:\n      summary: Get map's timestamps\n      description: Return the timestamps of a map\n      responses:\n        \"200\":\n          description: Status 200\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/List\"\n    parameters:\n      - name: mapName\n        in: path\n        required: true\n        description: The map’s name\n        schema:\n          type: string\n      - name: metricName\n        in: path\n        required: true\n        description: The metric's name\n        schema:\n          type: string\n      - name: limit\n        in: path\n        required: true\n        description: The results’ limit\n        schema:\n          type: number\n          format: int64\n      - name: clustered\n        in: path\n        required: true\n        description: Specify whether the heatmap data is clustered (1) or not (0)\n        example: \"0\"\n        schema:\n          type: string\n  /insert:\n    post:\n      summary: Insert\n      description: Insert a map\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DataInput\"\n        required: true\n      responses:\n        \"200\":\n          description: Status 200\n  /insertArray:\n    post:\n      summary: insertArray\n      description: Insert a maps' array\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DataInput\"\n        required: true\n      responses:\n        \"200\":\n          description: Status 200\n  /interp.php:\n    get:\n      summary: Get the interpolated value of a metric from location\n      parameters:\n        - name: latitude\n          in: query\n          required: true\n          description: The location's latitude\n          example: 43.11\n          schema:\n            type: number\n        - name: longitude\n          in: query\n          required: true\n          description: The location's longitude\n          example: 11.1\n          schema:\n            type: number\n        - name: dataset\n          in: query\n          required: true\n          description: The map's name\n          schema:\n            type: string\n        - name: date\n          in: query\n          required: true\n          description: The map's date\n          example: 2019-01-01T00:00:00Z\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status 200\nservers:\n  - url: https://heatmap.snap4city.org/\ncomponents:\n  schemas:\n    DataInput:\n      type: object\n      required:\n        - date\n        - latitude\n        - longitude\n        - mapName\n        - value\n      properties:\n        id:\n          type: integer\n          format: int64\n          description: The record's id\n        mapName:\n          type: string\n          description: The map's name\n        latitude:\n          type: number\n          format: double\n          description: The geographic coordinate latitude in decimal format\n        longitude:\n          type: number\n          format: double\n          description: The geographic coordinate longitude in decimal format\n        value:\n          type: number\n          format: double\n          description: The value\n        clustered:\n          type: integer\n          format: int64\n          description: Specify whether the data is clustered (1) or not (0)\n          default: 0\n          enum:\n            - 0\n            - 1\n        days:\n          type: integer\n          format: int64\n          description: The number of days in the past since date, considered for this value\n        date:\n          type: string\n          description: The value's date\n          pattern: YYYY-mm-ddThh:mm:ssZ\n          example: 2019-01-01T00:00:00Z\n        description:\n          type: string\n          description: The map's description\n        metricName:\n          type: string\n          description: The metric's name\n      example: |-\n        {\n          \"mapName\": \"map\",\n          \"metricName\": \"metric\",\n          \"latitude\":  43.11,\n          \"longitude\": 11.10,\n          \"value\":   100,\n          \"clustered\": 0,\n          \"description\": \"a map test\",\n          \"days\": 0,\n          \"date\": \"2019-01-01T00:00:00Z\"\n        }\n    DataOutput:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              date:\n                type: string\n                description: The date\n                pattern: YYYY-mm-ddThh:mm:ssZ\n                example: 2019-01-01T00:00:00Z\n              latitude:\n                type: number\n                format: double\n                description: The geographic coordinate latitude in decimal format\n              longitude:\n                type: number\n                format: double\n                description: The geographic coordinate longitude in decimal format\n              value:\n                type: number\n                format: double\n                description: The value\n        metadata:\n          type: object\n          properties:\n            clustered:\n              type: string\n              description: Specify whether the heatmap data is clustered (1) or not (0)\n              default: \"0\"\n              enum:\n                - \"0\"\n                - \"1\"\n            date:\n              type: string\n              description: The date\n              pattern: YYYY-mm-ddThh:mm:ssZ\n              example: 2019-01-01T00:00:00Z\n            days:\n              type: number\n              format: int64\n              description: The number of days in the past since date, considered for this\n                value\n            description:\n              type: string\n              description: The map’s description\n            mapName:\n              type: string\n              description: The map’s name\n            metricName:\n              type: string\n              description: The metric's name\n      description: The returned maps' data\n      example: |-\n        {\n          \"data\": [\n            {\n              \"date\": \"2019-01-09T14:20:40Z\",\n              \"latitude\": 60.1743,\n              \"longitude\": 24.9806,\n              \"value\": 30.9361\n            },\n            {\n              \"date\": \"2019-01-09T14:20:40Z\",\n              \"latitude\": 60.1964,\n              \"longitude\": 24.952,\n              \"value\": 70.1903\n            }\n          ],\n          \"metadata\": {\n            \"clustered\": \"0\",\n            \"date\": \"2019-01-09T14:20:40Z\",\n            \"days\": \"0\",\n            \"description\": \"Average on 24H\",\n            \"mapName\": \"noiseLAeq\",\n            \"metricName\": \"noiseLAeq\"\n          }\n        }\n    List:\n      type: array\n      items:\n        type: object\n        properties:\n          clustered:\n            type: number\n            format: int64\n            description: Specify whether the heatmap data is clustered (1) or not (0)\n            enum:\n              - 0\n              - 1\n          date:\n            type: string\n            description: The date\n            pattern: YYYY-mm-ddThh:mm:ssZ\n            example: 2019-01-01T00:00:00Z\n          days:\n            type: number\n            format: int64\n            description: The number of days in the past since date, considered for this\n              value\n            default: 0\n          description:\n            type: string\n            description: The map’s description\n          mapName:\n            type: string\n            description: The map's name\n          metricsName:\n            type: string\n            description: The metric's name\n      example: |-\n        [\n          {\n            \"clustered\": 0,\n            \"date\": \"2019-01-09T14:11:16Z\",\n            \"days\": 0,\n            \"description\": \"Average on 12H\",\n            \"mapName\": \"noiseLAeq\",\n            \"metricName\": \"noiseLAeq\"\n          },\n          {\n            \"clustered\": 0,\n            \"date\": \"2019-01-09T14:10:40Z\",\n            \"days\": 0,\n            \"description\": \"Average on 12H\",\n            \"mapName\": \"noiseLAeq\",\n            \"metricName\": \"noiseLAeq\"\n          },\n          {\n            \"clustered\": 0,\n            \"date\": \"2019-01-09T14:11:29Z\",\n            \"days\": 0,\n            \"description\": \"Average on 12H\",\n            \"mapName\": \"noiseLAeq\",\n            \"metricName\": \"noiseLAeq\"\n          }\n          ]\n",
			"canonicalURL": "/github.com/disit/snap4city@523488172f08a8e700ea3a777117724aac25eb65/-/blob/swagger/external/heatmap-openapiv3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/disit/snap4city/blob/523488172f08a8e700ea3a777117724aac25eb65/swagger/external/heatmap-openapiv3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}