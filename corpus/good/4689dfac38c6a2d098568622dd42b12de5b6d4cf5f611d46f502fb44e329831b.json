{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/maistra/istio"
		},
		"file": {
			"name": "wasm.gen.json",
			"size": 0,
			"path": "vendor/istio.io/api/extensions/v1alpha1/wasm.gen.json",
			"byteSize": 4703,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Extend the functionality provided by the Istio proxy through WebAssembly filters.\",\n    \"version\": \"v1alpha1\"\n  },\n  \"components\": {\n    \"schemas\": {\n      \"istio.extensions.v1alpha1.PluginPhase\": {\n        \"description\": \"The phase in the filter chain where the plugin will be injected.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"UNSPECIFIED_PHASE\",\n          \"AUTHN\",\n          \"AUTHZ\",\n          \"STATS\"\n        ]\n      },\n      \"istio.extensions.v1alpha1.PullPolicy\": {\n        \"description\": \"The pull behaviour to be applied when fetching an OCI image, mirroring K8s behaviour.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"UNSPECIFIED_POLICY\",\n          \"IfNotPresent\",\n          \"Always\"\n        ]\n      },\n      \"istio.extensions.v1alpha1.WasmPlugin\": {\n        \"description\": \"WasmPlugins provides a mechanism to extend the functionality provided by the Istio proxy through WebAssembly filters.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"selector\": {\n            \"$ref\": \"#/components/schemas/istio.type.v1beta1.WorkloadSelector\"\n          },\n          \"url\": {\n            \"description\": \"URL of a Wasm module or OCI container. If no scheme is present, defaults to `oci://`, referencing an OCI image. Other valid schemes are `file://` for referencing .wasm module files present locally within the proxy container, and `http[s]://` for .wasm module files hosted remotely.\",\n            \"type\": \"string\"\n          },\n          \"sha256\": {\n            \"description\": \"SHA256 checksum that will be used to verify Wasm module or OCI container. If the `url` field already references a SHA256 (using the `@sha256:` notation), it must match the value of this field. If an OCI image is referenced by tag and this field is set, its checksum will be verified against the contents of this field after pulling.\",\n            \"type\": \"string\"\n          },\n          \"imagePullPolicy\": {\n            \"$ref\": \"#/components/schemas/istio.extensions.v1alpha1.PullPolicy\"\n          },\n          \"imagePullSecret\": {\n            \"description\": \"Credentials to use for OCI image pulling. Name of a K8s Secret in the same namespace as the `WasmPlugin` that contains a docker pull secret which is to be used to authenticate against the registry when pulling the image.\",\n            \"type\": \"string\"\n          },\n          \"verificationKey\": {\n            \"description\": \"Public key that will be used to verify signatures of signed OCI images or Wasm modules. Must be supplied in PEM format.\",\n            \"type\": \"string\"\n          },\n          \"pluginConfig\": {\n            \"description\": \"The configuration that will be passed on to the plugin.\",\n            \"type\": \"object\"\n          },\n          \"pluginName\": {\n            \"description\": \"The plugin name to be used in the Envoy configuration (used to be called `rootID`). Some .wasm modules might require this value to select the Wasm plugin to execute.\",\n            \"type\": \"string\"\n          },\n          \"phase\": {\n            \"$ref\": \"#/components/schemas/istio.extensions.v1alpha1.PluginPhase\"\n          },\n          \"priority\": {\n            \"description\": \"Determines ordering of `WasmPlugins` in the same `phase`. When multiple `WasmPlugins` are applied to the same workload in the same `phase`, they will be applied by priority, in descending order. If `priority` is not set, or two `WasmPlugins` exist with the same value, the ordering will be deterministically derived from name and namespace of the `WasmPlugins`. Defaults to `0`.\",\n            \"type\": \"integer\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"istio.type.v1beta1.WorkloadSelector\": {\n        \"description\": \"WorkloadSelector specifies the criteria used to determine if a policy can be applied to a proxy. The matching criteria includes the metadata associated with a proxy, workload instance info such as labels attached to the pod/VM, or any other info that the proxy provides to Istio during the initial handshake. If multiple conditions are specified, all conditions need to match in order for the workload instance to be selected. Currently, only label based selection mechanism is supported.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"matchLabels\": {\n            \"description\": \"One or more labels that indicate a specific set of pods/VMs on which a policy should be applied. The scope of label search is restricted to the configuration namespace in which the resource is present.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/maistra/istio@485dbbe382fe10bf0d2d5428e5dd52c7bbbffe2c/-/blob/vendor/istio.io/api/extensions/v1alpha1/wasm.gen.json",
			"externalURLs": [
				{
					"url": "https://github.com/maistra/istio/blob/485dbbe382fe10bf0d2d5428e5dd52c7bbbffe2c/vendor/istio.io/api/extensions/v1alpha1/wasm.gen.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}