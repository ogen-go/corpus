{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/playpauseandstop/rororo"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "examples/hobotnica/src/hobotnica/openapi.yaml",
			"byteSize": 8953,
			"content": "openapi: \"3.0.2\"\n\ninfo:\n  title: \"Hobotnica API\"\n  description: |\n    Reduced Hobotnica API schema as rororo example app.\n  version: \"1.0.0\"\n  contact:\n    name: \"Igor Davydenko (developer)\"\n    url: \"https://igordavydenko.com\"\n    email: \"iam@igordavydenko.com\"\n  license:\n    name: \"BSD-3-Clause\"\n    url: \"https://opensource.org/licenses/BSD-3-Clause\"\n\nservers:\n  - url: \"/api\"\n\nx-default-responses: \u0026default_responses\n  \"422\":\n    $ref: \"#/components/responses/ValidationError\"\n  default:\n    $ref: \"#/components/responses/DefaultResponse\"\n\npaths:\n  \"/public/references\":\n    get:\n      operationId: \"list_all_references\"\n      summary: \"List references for UI needs\"\n      tags: [\"public\"]\n      security: []\n      responses:\n        \u003c\u003c: *default_responses\n        \"200\":\n          description: \"References list\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnyObject\"\n\n  \"/repositories\":\n    get:\n      operationId: \"list_repositories\"\n      summary: \"List user repositories registered in Hobotnica\"\n      tags: [\"repositories\"]\n      security:\n        - jwt: []\n        - personalToken: []\n      parameters:\n        - $ref: \"#/components/parameters/GitHubUsername\"\n      responses:\n        \u003c\u003c: *default_responses\n        \"200\":\n          description: \"Available repositories\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Repository\"\n\n    post:\n      operationId: \"create_repository\"\n      summary: \"Add new user repository to Hobotnica\"\n      tags: [\"repositories\"]\n      parameters:\n        - $ref: \"#/components/parameters/GitHubUsername\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewRepository\"\n      responses:\n        \u003c\u003c: *default_responses\n        \"201\":\n          description: \"Added repository details\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Repository\"\n\n  \"/repositories/favorites\":\n    get:\n      operationId: \"list_favorites_repositories\"\n      summary: \"List favorites respositories for logged in user (not implemented yet)\"\n      tags: [\"repositories\"]\n      parameters:\n        - $ref: \"#/components/parameters/GitHubUsername\"\n        - $ref: \"#/components/parameters/Order\"\n      responses:\n        \u003c\u003c: *default_responses\n        \"204\":\n          description: \"Favorite repositories (not implemented yet)\"\n\n  \"/repositories/{owner}\":\n    parameters: \u0026repository_owner_parameters\n      - $ref: \"#/components/parameters/RepositoryOwner\"\n\n    get:\n      operationId: \"list_owner_repositories\"\n      summary: \"List repositories owned by user\"\n      tags: [\"repositories\"]\n      security:\n        - basic: []\n      responses:\n        \u003c\u003c: *default_responses\n        \"200\":\n          description: \"Repositories list\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/components/schemas/Repository\"\n\n  \"/repositories/{owner}/env\":\n    parameters: *repository_owner_parameters\n\n    get:\n      operationId: \"retrieve_owner_env\"\n      summary: \"Retrieve common environment vars for user\"\n      tags: [\"environment\"]\n      security:\n        - basic: []\n      responses:\n        \u003c\u003c: *default_responses\n        \"200\":\n          description: \"Owner environment vars\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnyObject\"\n\n  \"/repositories/{owner}/{name}\":\n    parameters: \u0026repository_owner_name_parameters\n      - $ref: \"#/components/parameters/RepositoryOwner\"\n      - $ref: \"#/components/parameters/RepositoryName\"\n\n    get:\n      operationId: \"retrieve_repository\"\n      summary: \"Retrieve details of user repository\"\n      tags: [\"repositories\"]\n      security:\n        - jwt: []\n          personalToken: []\n      parameters:\n        - $ref: \"#/components/parameters/GitHubUsername\"\n      responses:\n        \u003c\u003c: *default_responses\n        \"200\":\n          description: \"Repository details\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Repository\"\n\n  \"/repositories/{owner}/{name}/env\":\n    parameters: *repository_owner_name_parameters\n\n    get:\n      operationId: \"retrieve_repository_env\"\n      summary: \"Retrieve common env vars for the repository\"\n      tags: [\"environment\"]\n      parameters:\n        - $ref: \"#/components/parameters/GitHubUsername\"\n      responses:\n        \u003c\u003c: *default_responses\n        \"200\":\n          description: \"Repository environment vars\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnyObject\"\n\n  \"/webhooks/{webhook_uid}\":\n    parameters:\n      - $ref: \"#/components/parameters/WebhookUID\"\n\n    post:\n      tags: [\"webhook\"]\n      summary: \"React on GitHub webhook payload by running registered job (not yet implemented)\"\n      responses:\n        \u003c\u003c: *default_responses\n        \"200\":\n          description: \"Build details\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnyObject\"\n\ncomponents:\n  parameters:\n    GitHubUsername:\n      name: \"X-GitHub-Username\"\n      in: \"header\"\n      required: true\n      schema:\n        $ref: \"#/components/schemas/NonEmptyString\"\n\n    Order:\n      name: \"order\"\n      in: \"query\"\n      required: false\n      schema:\n        $ref: \"#/components/schemas/Order\"\n\n    RepositoryOwner:\n      name: \"owner\"\n      in: \"path\"\n      required: true\n      schema:\n        $ref: \"#/components/schemas/RepositoryOwner\"\n\n    RepositoryName:\n      name: \"name\"\n      in: \"path\"\n      required: true\n      schema:\n        $ref: \"#/components/schemas/RepositoryName\"\n\n    WebhookUID:\n      name: \"webhook_uid\"\n      in: \"path\"\n      required: true\n      schema:\n        type: \"string\"\n        format: \"uuid\"\n\n  responses:\n    DefaultResponse:\n      description: \"Default error response\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DefaultResponse\"\n\n    ValidationError:\n      description: \"Validation error response\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ValidationError\"\n\n  schemas:\n    AnyObject:\n      type: \"object\"\n      additionalProperties: true\n\n    NonEmptyString:\n      type: \"string\"\n      minLength: 1\n\n    PositiveInteger:\n      type: \"integer\"\n      format: \"int64\"\n\n    Order:\n      type: \"string\"\n      enum: [\"date\", \"status\"]\n      default: \"date\"\n\n    RepositoryOwner:\n      type: \"string\"\n      minLength: 3\n\n    RepositoryName:\n      type: \"string\"\n      minLength: 3\n\n    RepositoryJob:\n      type: \"string\"\n      enum: [\"test\", \"deploy\"]\n\n    DefaultResponse:\n      type: \"object\"\n      properties:\n        detail:\n          $ref: \"#/components/schemas/NonEmptyString\"\n      required: [\"detail\"]\n\n    ValidationErrorItem:\n      type: \"object\"\n      properties:\n        loc:\n          type: \"array\"\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/NonEmptyString\"\n              - $ref: \"#/components/schemas/PositiveInteger\"\n          minItems: 1\n        message:\n          $ref: \"#/components/schemas/NonEmptyString\"\n\n    ValidationError:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/ValidationErrorItem\"\n      minItems: 1\n      uniqueItems: true\n\n    NewRepository:\n      type: \"object\"\n      properties:\n        owner:\n          $ref: \"#/components/schemas/NonEmptyString\"\n        name:\n          $ref: \"#/components/schemas/NonEmptyString\"\n      required: [\"owner\", \"name\"]\n\n    Repository:\n      type: \"object\"\n      properties:\n        uid:\n          type: \"string\"\n          format: \"uuid\"\n        owner:\n          $ref: \"#/components/schemas/NonEmptyString\"\n        name:\n          $ref: \"#/components/schemas/NonEmptyString\"\n        jobs:\n          type: \"array\"\n          description: \"List of registered jobs for the repository\"\n          items:\n            $ref: \"#/components/schemas/RepositoryJob\"\n          minItems: 1\n        status:\n          type: \"string\"\n          enum: [\"cloning\", \"ready\", \"running\"]\n      required: [\"uid\", \"owner\", \"name\", \"jobs\", \"status\"]\n\n  securitySchemes:\n    basic:\n      type: \"http\"\n      scheme: \"basic\"\n\n    personalToken:\n      type: \"apiKey\"\n      in: \"header\"\n      name: \"X-GitHub-Personal-Token\"\n\n    jwt:\n      type: \"http\"\n      scheme: \"bearer\"\n      bearerFormat: \"JWT\"\n\nsecurity:\n  - personalToken: []\n\ntags:\n  - name: \"repositories\"\n    description: \"Repositories endpoints\"\n\n  - name: \"environment\"\n    description: \"Environment endpoints\"\n\n  - name: \"public\"\n    description: \"Public endpoints\"\n",
			"canonicalURL": "/github.com/playpauseandstop/rororo@3fd7f6595cd31986375863573a4fa82976fdca49/-/blob/examples/hobotnica/src/hobotnica/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/playpauseandstop/rororo/blob/3fd7f6595cd31986375863573a4fa82976fdca49/examples/hobotnica/src/hobotnica/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}