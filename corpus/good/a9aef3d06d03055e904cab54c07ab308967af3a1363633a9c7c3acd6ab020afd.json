{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-botservice-2018-07-12-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-botservice-2018-07-12-swagger.yaml",
			"byteSize": 91296,
			"content": "openapi: 3.0.0\ninfo:\n  description: Azure Bot Service is a platform for creating smart conversational agents.\n  title: Azure Bot Service\n  version: 2018-07-12\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/botservice/resource-manager/Microsoft.BotService/preview/2018-07-12/botservice.json\n      version: \"2.0\"\n  x-preferred: true\n  x-providerName: azure.com\n  x-serviceName: botservice\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  /providers/Microsoft.BotService/checkEnterpriseChannelNameAvailability:\n    post:\n      description: Check whether an Enterprise Channel name is available.\n      operationId: EnterpriseChannels_CheckNameAvailability\n      parameters:\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnterpriseChannelCheckNameAvailabilityReq\\\n                uest\"\n        description: The parameters to provide for the Enterprise Channel check name\n          availability request.\n        required: true\n      responses:\n        \"200\":\n          description: \u003e-\n            The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. For other errors (e.g. internal\n            errors) use the appropriate HTTP error code.\n\n            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\n\n            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnterpriseChannelCheckNameAvailabilityR\\\n                  esponse\"\n              examples:\n                Check Enterprise Channel Name Availability:\n                  $ref: \"#/components/examples/Check_Enterprise_Channel_Name_Availa\\\n                    bility\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Enterprise Channel\n  /providers/Microsoft.BotService/checkNameAvailability:\n    post:\n      description: Check whether a bot name is available.\n      operationId: Bots_GetCheckNameAvailability\n      parameters:\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CheckNameAvailabilityRequestBody\"\n        description: The request body parameters to provide for the check name availability\n          request\n        required: true\n      responses:\n        \"200\":\n          description: \u003e-\n            The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. For other errors (e.g. internal\n            errors) use the appropriate HTTP error code.\n\n            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\n\n            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckNameAvailabilityResponseBody\"\n              examples:\n                check Name Availability:\n                  $ref: \"#/components/examples/check_Name_Availability\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Bot\n  /providers/Microsoft.BotService/operations:\n    get:\n      deprecated: false\n      description: Lists all the available BotService operations.\n      operationId: Operations_List\n      parameters:\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationEntityListResult\"\n              examples:\n                Get Operations:\n                  $ref: \"#/components/examples/Get_Operations\"\n      tags:\n        - Operations\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices\":\n    get:\n      description: Returns all the resources of a particular type belonging to a\n        subscription.\n      operationId: Bots_List\n      parameters:\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \u003e-\n            The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. For other errors (e.g. internal\n            errors) use the appropriate HTTP error code.\n\n            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\n\n            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotResponseList\"\n              examples:\n                List Bots by Subscription:\n                  $ref: \"#/components/examples/List_Bots_by_Subscription\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Bot\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders\":\n    post:\n      description: Lists the available Service Providers for creating Connection Settings\n      operationId: BotConnection_ListServiceProviders\n      parameters:\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: If resource is retrieved successfully, the service should return 200\n            (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceProviderResponseList\"\n              examples:\n                List Auth Service Providers:\n                  $ref: \"#/components/examples/List_Auth_Service_Providers\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - ListServiceProviders\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices\":\n    get:\n      description: Returns all the resources of a particular type belonging to a resource\n        group\n      operationId: Bots_ListByResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      responses:\n        \"200\":\n          description: \u003e-\n            The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. For other errors (e.g. internal\n            errors) use the appropriate HTTP error code.\n\n            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\n\n            The nextLink should be implemented using following query parameters:\n\n            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n\n            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.\n\n            Implementation details:\n\n            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n\n            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \n\n            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotResponseList\"\n              examples:\n                List Bots by Resource Group:\n                  $ref: \"#/components/examples/List_Bots_by_Resource_Group\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group does not exist, 404 (NotFound) will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Bot\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}\":\n    delete:\n      description: \"Deletes a Bot Service from the resource group. \"\n      operationId: Bots_Delete\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: A 200 (OK) should be returned if the object exists and was deleted\n            successfully;\n        \"204\":\n          description: a 204 (NoContent) should be used if the resource does not exist and\n            the request is well formed.\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Bot\n    get:\n      description: Returns a BotService specified by the parameters.\n      operationId: Bots_Get\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Bot\"\n              examples:\n                Get Bot:\n                  $ref: \"#/components/examples/Get_Bot\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group *or* resource does not exist, 404 (NotFound) should be\n            returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Bot\n    patch:\n      description: Updates a Bot Service\n      operationId: Bots_Update\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Bot\"\n        description: The parameters to provide for the created bot.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: \"The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Bot\"\n              examples:\n                Update Bot:\n                  $ref: \"#/components/examples/Update_Bot\"\n        \"201\":\n          description: If resource is updated successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Bot\"\n              examples:\n                Update Bot:\n                  $ref: \"#/components/examples/Update_Bot\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group *or* resource does not exist, 404 (NotFound) should be\n            returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Bot\n    put:\n      description: Creates a Bot Service. Bot Service is a resource group wide resource\n        type.\n      operationId: Bots_Create\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Bot\"\n        description: The parameters to provide for the created bot.\n        required: true\n      responses:\n        \"200\":\n          description: If resource is created successfully or already existed, the service\n            should return 200 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Bot\"\n              examples:\n                Create Bot:\n                  $ref: \"#/components/examples/Create_Bot\"\n        \"201\":\n          description: If resource is created successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Bot\"\n              examples:\n                Create Bot:\n                  $ref: \"#/components/examples/Create_Bot\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Bot\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}\":\n    delete:\n      description: Deletes a Connection Setting registration for a Bot Service\n      operationId: BotConnection_Delete\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/connectionNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: A 200 (OK) should be returned if the object exists and was deleted\n            successfully;\n        \"204\":\n          description: a 204 (NoContent) should be used if the resource does not exist and\n            the request is well formed.\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - BotConnection\n    get:\n      description: Get a Connection Setting registration for a Bot Service\n      operationId: BotConnection_Get\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/connectionNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionSetting\"\n              examples:\n                Update Connection Setting:\n                  $ref: \"#/components/examples/Update_Connection_Setting\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group *or* resource does not exist, 404 (NotFound) should be\n            returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - BotConnection\n    patch:\n      description: Updates a Connection Setting registration for a Bot Service\n      operationId: BotConnection_Update\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/connectionNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionSetting\"\n        description: The parameters to provide for updating the Connection Setting.\n        required: true\n      responses:\n        \"200\":\n          description: If resource is created successfully or already existed, the service\n            should return 200 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionSetting\"\n              examples:\n                Update Connection Setting:\n                  $ref: \"#/components/examples/Update_Connection_Setting\"\n        \"201\":\n          description: If resource is created successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionSetting\"\n              examples:\n                Update Connection Setting:\n                  $ref: \"#/components/examples/Update_Connection_Setting\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - BotConnection\n    put:\n      description: Register a new Auth Connection for a Bot Service\n      operationId: BotConnection_Create\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/connectionNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionSetting\"\n        description: The parameters to provide for creating the Connection Setting.\n        required: true\n      responses:\n        \"200\":\n          description: If resource is created successfully or already existed, the service\n            should return 200 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionSetting\"\n              examples:\n                Create Connection Setting:\n                  $ref: \"#/components/examples/Create_Connection_Setting\"\n        \"201\":\n          description: If resource is created successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionSetting\"\n              examples:\n                Create Connection Setting:\n                  $ref: \"#/components/examples/Create_Connection_Setting\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - BotConnection\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}/listWithSecrets\":\n    post:\n      description: Get a Connection Setting registration for a Bot Service\n      operationId: BotConnection_ListWithSecrets\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/connectionNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionSetting\"\n              examples:\n                Update Connection Setting:\n                  $ref: \"#/components/examples/Update_Connection_Setting\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group *or* resource does not exist, 404 (NotFound) should be\n            returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - BotConnection\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels\":\n    get:\n      description: Returns all the Channel registrations of a particular BotService resource\n      operationId: Channels_ListByResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      responses:\n        \"200\":\n          description: \u003e-\n            The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. For other errors (e.g. internal\n            errors) use the appropriate HTTP error code.\n\n            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\n\n            The nextLink should be implemented using following query parameters:\n\n            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n\n            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.\n\n            Implementation details:\n\n            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n\n            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \n\n            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelResponseList\"\n              examples:\n                List Bots by Resource Group:\n                  $ref: \"#/components/examples/List_Bots_by_Resource_Group\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group does not exist, 404 (NotFound) will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Channel\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}\":\n    delete:\n      description: Deletes a Channel registration from a Bot Service\n      operationId: Channels_Delete\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - description: The name of the Bot resource.\n          in: path\n          name: channelName\n          required: true\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 64\n            pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\n          examples:\n            Delete Bot:\n              value: EmailChannel\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: A 200 (OK) should be returned if the object exists and was deleted\n            successfully;\n        \"204\":\n          description: a 204 (NoContent) should be used if the resource does not exist and\n            the request is well formed.\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Channel\n    get:\n      description: Returns a BotService Channel registration specified by the parameters.\n      operationId: Channels_Get\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - description: The name of the Bot resource.\n          in: path\n          name: channelName\n          required: true\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 64\n            pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\n          examples:\n            Get Bot:\n              value: EmailChannel\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotChannel\"\n              examples:\n                Get Bot:\n                  $ref: \"#/components/examples/Get_Bot\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group *or* resource does not exist, 404 (NotFound) should be\n            returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Channel\n    patch:\n      description: Updates a Channel registration for a Bot Service\n      operationId: Channels_Update\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/channelNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BotChannel\"\n        description: The parameters to provide for the created bot.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: \"The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotChannel\"\n              examples:\n                Update Bot:\n                  $ref: \"#/components/examples/Update_Bot\"\n        \"201\":\n          description: If resource is updated successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotChannel\"\n              examples:\n                Update Bot:\n                  $ref: \"#/components/examples/Update_Bot\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group *or* resource does not exist, 404 (NotFound) should be\n            returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Channel\n    put:\n      description: Creates a Channel registration for a Bot Service\n      operationId: Channels_Create\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/channelNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BotChannel\"\n        description: The parameters to provide for the created bot.\n        required: true\n      responses:\n        \"200\":\n          description: If resource is created successfully or already existed, the service\n            should return 200 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotChannel\"\n              examples:\n                Create Bot:\n                  $ref: \"#/components/examples/Create_Bot\"\n        \"201\":\n          description: If resource is created successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotChannel\"\n              examples:\n                Create Bot:\n                  $ref: \"#/components/examples/Create_Bot\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Channel\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys\":\n    post:\n      description: Lists a Channel registration for a Bot Service including secrets\n      operationId: Channels_ListWithKeys\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/channelNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: If resource is retrieved successfully, the service should return 200\n            (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BotChannel\"\n              examples:\n                List Channel:\n                  $ref: \"#/components/examples/List_Channel\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Channel\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections\":\n    get:\n      description: Returns all the Connection Settings registered to a particular\n        BotService resource\n      operationId: BotConnection_ListByBotService\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      responses:\n        \"200\":\n          description: \u003e-\n            The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. For other errors (e.g. internal\n            errors) use the appropriate HTTP error code.\n\n            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\n\n            The nextLink should be implemented using following query parameters:\n\n            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n\n            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.\n\n            Implementation details:\n\n            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n\n            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \n\n            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionSettingResponseList\"\n              examples:\n                List Connection Settings:\n                  $ref: \"#/components/examples/List_Connection_Settings\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group does not exist, 404 (NotFound) will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - BotConnection\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/enterpriseChannels\":\n    get:\n      description: Returns all the resources of a particular type belonging to a resource\n        group.\n      operationId: EnterpriseChannels_ListByResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      responses:\n        \"200\":\n          description: \u003e-\n            The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. For other errors (e.g. internal\n            errors) use the appropriate HTTP error code.\n\n            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\n\n            The nextLink should be implemented using following query parameters:\n\n            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n\n            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.\n\n            Implementation details:\n\n            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n\n            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \n\n            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnterpriseChannelResponseList\"\n              examples:\n                List Enterprise Channels by Resource Group:\n                  $ref: \"#/components/examples/List_Enterprise_Channels_by_Resource\\\n                    _Group\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group does not exist, 404 (NotFound) will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Enterprise Channel\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/enterpriseChannels/{resourceName}\":\n    delete:\n      description: Deletes an Enterprise Channel from the resource group\n      operationId: EnterpriseChannels_Delete\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: A 200 (OK) should be returned if the object exists and was deleted\n            successfully;\n        \"204\":\n          description: a 204 (NoContent) should be used if the resource does not exist and\n            the request is well formed.\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Enterprise Channel\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: azure-async-operation\n    get:\n      description: Returns an Enterprise Channel specified by the parameters.\n      operationId: EnterpriseChannels_Get\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: \"The resource provider should return 200 (OK) to indicate that the\n            operation completed successfully. \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnterpriseChannel\"\n              examples:\n                Get Enterprise Channel:\n                  $ref: \"#/components/examples/Get_Enterprise_Channel\"\n        default:\n          description: Error response describing why the operation failed. If the resource\n            group *or* resource does not exist, 404 (NotFound) should be\n            returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Enterprise Channel\n    patch:\n      description: Updates an Enterprise Channel.\n      operationId: EnterpriseChannels_Update\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnterpriseChannel\"\n        description: The parameters to provide to update the Enterprise Channel.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: If resource is created successfully or already existed, the service\n            should return 200 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnterpriseChannel\"\n              examples:\n                Update Enterprise Channel:\n                  $ref: \"#/components/examples/Update_Enterprise_Channel\"\n        \"201\":\n          description: If resource is created successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnterpriseChannel\"\n              examples:\n                Update Enterprise Channel:\n                  $ref: \"#/components/examples/Update_Enterprise_Channel\"\n        default:\n          description: Error response describing why the operation failed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Enterprise Channel\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: azure-async-operation\n    put:\n      description: Creates an Enterprise Channel.\n      operationId: EnterpriseChannels_Create\n      parameters:\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/resourceNameParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnterpriseChannel\"\n        description: The parameters to provide for the new Enterprise Channel.\n        required: true\n      responses:\n        \"200\":\n          description: If resource is created successfully or already existed, the service\n            should return 200 (OK).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnterpriseChannel\"\n              examples:\n                Create Enterprise Channel:\n                  $ref: \"#/components/examples/Create_Enterprise_Channel\"\n        \"201\":\n          description: If resource is created successfully, the service should return 201\n            (Created). Execution to continue asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnterpriseChannel\"\n              examples:\n                Create Enterprise Channel:\n                  $ref: \"#/components/examples/Create_Enterprise_Channel\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      tags:\n        - Enterprise Channel\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: azure-async-operation\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    Check_Enterprise_Channel_Name_Availability:\n      value:\n        message: custom message from server\n        valid: true\n    check_Name_Availability:\n      value:\n        message: custom message from server\n        valid: true\n    Get_Operations:\n      value:\n        value:\n          - display:\n              description: Read Bot Service\n              operation: Read Bot Service\n              provider: Microsoft Bot Service\n              resource: Bot Service\n            name: Microsoft.BotService/botService/read\n            origin: user,system\n          - display:\n              description: Writes Bot Service\n              operation: Write Bot Service\n              provider: Microsoft Bot Service\n              resource: Bot Service\n            name: Microsoft.BotService/botService/write\n            origin: user,system\n          - display:\n              description: Deletes Bot Service\n              operation: Delete Bot Service\n              provider: Microsoft Bot Service\n              resource: Bot Service\n            name: Microsoft.BotService/botService/delete\n            origin: user,system\n          - display:\n              description: Check bot name availability\n              operation: Check bot name availability\n              provider: Microsoft Bot Service\n              resource: Bot Service name availability\n            name: Microsoft.BotService/botService/botName/read\n            origin: user,system\n    List_Bots_by_Subscription:\n      value:\n        value:\n          - etag: etag1\n            id: someid\n            kind: sdk\n            location: West US\n            name: samplename\n            properties:\n              configuredChannels:\n                - facebook\n                - groupme\n              description: The description of the bot\n              developerAppInsightKey: appinsightskey\n              developerAppInsightsApplicationId: appinsightsappid\n              displayName: The Name of the bot\n              enabledChannels:\n                - facebook\n              endpoint: http://mybot.coffee\n              endpointVersion: version\n              iconUrl: http://myicon\n              luisAppIds:\n                - luisappid1\n                - luisappid2\n              msaAppId: msaappid\n            tags:\n              tag1: value1\n              tag2: value2\n            type: sampletype\n    List_Auth_Service_Providers:\n      value:\n        value:\n          - properties:\n              devPortalUrl: sampleDevPortalUrl\n              displayName: sample display name\n              iconUrl: sampleIconUrl\n              id: sampleId\n              parameters:\n                - default: sampleDefaultValue\n                  description: sampleDescription\n                  displayName: sampleDisplayName\n                  helpUrl: sampleHelpUrl\n                  name: sampleParameterName\n                  type: sampleParameterType\n              serviceProviderName: sampleServiceProvider\n    List_Bots_by_Resource_Group:\n      value:\n        value:\n          - location: global\n            properties:\n              channelName: EmailChannel\n              properties:\n                emailAddress: a@b.com\n                isEnabled: true\n                password: pwd\n          - location: global\n            properties:\n              channelName: FacebookChannel\n              properties:\n                appId: id\n                appSecret: secret\n                callbackUrl: appid\n                isEnabled: true\n                pages:\n                  - accessToken: token\n                    id: id\n                verifyToken: othertoken\n    Get_Bot:\n      value:\n        location: global\n        properties:\n          channelName: EmailChannel\n          properties:\n            emailAddress: a@b.com\n            isEnabled: true\n            password: pwd\n    Update_Bot:\n      value:\n        location: global\n        properties:\n          channelName: EmailChannel\n          properties:\n            emailAddress: a@b.com\n            isEnabled: true\n            password: pwd\n    Create_Bot:\n      value:\n        location: global\n        properties:\n          channelName: EmailChannel\n          properties:\n            emailAddress: a@b.com\n            isEnabled: true\n            password: pwd\n    Update_Connection_Setting:\n      value:\n        etag: etag1\n        id: someid\n        location: global\n        name: The Name of the Connection Setting\n        properties:\n          clientId: sampleclientid\n          clientSecret: samplesecret\n          parameters:\n            - key: key1\n              value: value1\n            - key: key2\n              value: value2\n          scopes: samplescope\n          serviceProviderDisplayName: serviceProviderDisplayName\n          serviceProviderId: serviceproviderid\n    Create_Connection_Setting:\n      value:\n        etag: etag1\n        id: someid\n        location: global\n        name: The Name of the Connection Setting\n        properties:\n          clientId: sampleclientid\n          clientSecret: samplesecret\n          parameters:\n            - key: key1\n              value: value1\n            - key: key2\n              value: value2\n          scopes: samplescope\n          serviceProviderDisplayName: serviceProviderDisplayName\n          serviceProviderId: serviceproviderid\n    List_Channel:\n      value:\n        location: global\n        properties:\n          channelName: EmailChannel\n          properties:\n            emailAddress: a@b.com\n            isEnabled: true\n            password: pwd\n    List_Connection_Settings:\n      value:\n        value:\n          - name: The Name of the Connection Setting\n            properties:\n              clientId: sampleclientid\n              clientSecret: samplesecret\n              parameters:\n                - key: key1\n                  value: value1\n                - key: key2\n                  value: value2\n              scopes: samplescope\n              serviceProviderId: serviceproviderid\n    List_Enterprise_Channels_by_Resource_Group:\n      value:\n        value:\n          - etag: etag1\n            id: someid\n            location: West US\n            properties:\n              nodes:\n                - azureLocation: WestUs\n                  azureSku: Int1\n                  id: 00000000-0000-0000-0000-000000000000\n                  name: Node 1\n                  state: Creating\n                - azureLocation: EastUs\n                  azureSku: Int1\n                  id: 00000000-0000-0000-0000-000000000001\n                  name: Node 2\n                  state: Creating\n              state: Creating\n            tags:\n              tag1: value1\n              tag2: value2\n    Get_Enterprise_Channel:\n      value:\n        etag: etag1\n        id: contoso-dl\n        location: West US\n        properties:\n          nodes:\n            - azureLocation: WestUs\n              azureSku: Int1\n              id: 00000000-0000-0000-0000-000000000000\n              name: Node 1\n              state: Stopping\n            - azureLocation: EastUs\n              azureSku: Int1\n              id: 00000000-0000-0000-0000-000000000001\n              name: Node 2\n              state: Started\n          state: Started\n        tags:\n          tag1: value1\n          tag2: value2\n    Update_Enterprise_Channel:\n      value:\n        id: someid\n        location: West US\n        properties:\n          nodes:\n            - azureLocation: WestUs\n              azureSku: Int1\n              id: 00000000-0000-0000-0000-000000000000\n              name: Node 1\n              state: Stopping\n          state: Stopping\n        tags:\n          tag1: value1\n          tag2: value2\n    Create_Enterprise_Channel:\n      value:\n        id: someid\n        location: West US\n        properties:\n          nodes:\n            - azureLocation: WestUs\n              azureSku: Int1\n              id: 00000000-0000-0000-0000-000000000000\n              name: Node 1\n              state: Creating\n          state: Creating\n        tags:\n          tag1: value1\n          tag2: value2\n  parameters:\n    apiVersionParameter:\n      description: Version of the API to be used with the client request.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        Check Enterprise Channel Name Availability:\n          value: 2018-07-12\n        check Name Availability:\n          value: 2018-07-12\n        Get Operations:\n          value: 2017-04-18\n        List Bots by Subscription:\n          value: 2017-01-01\n        List Auth Service Providers:\n          value: 2017-01-01\n        List Bots by Resource Group:\n          value: 2017-01-01\n        Delete Bot:\n          value: 2017-01-01\n        Get Bot:\n          value: 2017-01-01\n        Update Bot:\n          value: 2017-01-01\n        Create Bot:\n          value: 2017-01-01\n        Update Connection Setting:\n          value: 2017-01-01\n        Create Connection Setting:\n          value: 2017-01-01\n        List Channel:\n          value: 2017-01-01\n        List Connection Settings:\n          value: 2017-01-01\n        List Enterprise Channels by Resource Group:\n          value: 2018-07-12\n        Delete Enterprise Channel:\n          value: 2018-07-12\n        Get Enterprise Channel:\n          value: 2018-07-12\n        Update Enterprise Channel:\n          value: 2018-07-12\n        Create Enterprise Channel:\n          value: 2018-07-12\n    channelNameParameter:\n      description: The name of the Channel resource.\n      in: path\n      name: channelName\n      required: true\n      x-ms-enum:\n        modelAsString: false\n        name: channelName\n        values:\n          - value: FacebookChannel\n          - value: EmailChannel\n          - value: KikChannel\n          - value: TelegramChannel\n          - value: SlackChannel\n          - value: MsTeamsChannel\n          - value: SkypeChannel\n          - value: WebChatChannel\n          - value: DirectLineChannel\n          - value: SmsChannel\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - FacebookChannel\n          - EmailChannel\n          - KikChannel\n          - TelegramChannel\n          - SlackChannel\n          - MsTeamsChannel\n          - SkypeChannel\n          - WebChatChannel\n          - DirectLineChannel\n          - SmsChannel\n      examples:\n        Update Bot:\n          value: EmailChannel\n        Create Bot:\n          value: EmailChannel\n        List Channel:\n          value: EmailChannel\n    connectionNameParameter:\n      description: The name of the Bot Service Connection Setting resource\n      in: path\n      name: connectionName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 2\n        maxLength: 64\n        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\n      examples:\n        Update Connection Setting:\n          value: sampleConnection\n        Create Connection Setting:\n          value: sampleConnection\n    resourceGroupNameParameter:\n      description: The name of the Bot resource group in the user subscription.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 2\n        maxLength: 64\n        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\n      examples:\n        List Bots by Resource Group:\n          value: OneResourceGroupName\n        Delete Bot:\n          value: OneResourceGroupName\n        Get Bot:\n          value: OneResourceGroupName\n        Update Bot:\n          value: OneResourceGroupName\n        Create Bot:\n          value: OneResourceGroupName\n        Update Connection Setting:\n          value: OneResourceGroupName\n        Create Connection Setting:\n          value: OneResourceGroupName\n        List Channel:\n          value: OneResourceGroupName\n        List Connection Settings:\n          value: OneResourceGroupName\n        List Enterprise Channels by Resource Group:\n          value: OneResourceGroupName\n        Delete Enterprise Channel:\n          value: OneResourceGroupName\n        Get Enterprise Channel:\n          value: OneResourceGroupName\n        Update Enterprise Channel:\n          value: OneResourceGroupName\n        Create Enterprise Channel:\n          value: OneResourceGroupName\n    resourceNameParameter:\n      description: The name of the Bot resource.\n      in: path\n      name: resourceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 2\n        maxLength: 64\n        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\n      examples:\n        Delete Bot:\n          value: samplebotname\n        Get Bot:\n          value: samplebotname\n        Update Bot:\n          value: samplebotname\n        Create Bot:\n          value: samplebotname\n        Update Connection Setting:\n          value: samplebotname\n        Create Connection Setting:\n          value: samplebotname\n        List Bots by Resource Group:\n          value: samplebotname\n        List Channel:\n          value: samplebotname\n        List Connection Settings:\n          value: samplebotname\n        Delete Enterprise Channel:\n          value: contoso-dl\n        Get Enterprise Channel:\n          value: contoso-dl\n        Update Enterprise Channel:\n          value: contoso-dl\n        Create Enterprise Channel:\n          value: contoso-dl\n    subscriptionIdParameter:\n      description: Azure Subscription ID.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      examples:\n        List Bots by Subscription:\n          value: subscription-id\n        List Auth Service Providers:\n          value: subscription-id\n        List Bots by Resource Group:\n          value: subscription-id\n        Delete Bot:\n          value: subscription-id\n        Get Bot:\n          value: subscription-id\n        Update Bot:\n          value: subscription-id\n        Create Bot:\n          value: subscription-id\n        Update Connection Setting:\n          value: subscription-id\n        Create Connection Setting:\n          value: subscription-id\n        List Channel:\n          value: subscription-id\n        List Connection Settings:\n          value: subscription-id\n        List Enterprise Channels by Resource Group:\n          value: subscription-id\n        Delete Enterprise Channel:\n          value: subscription-id\n        Get Enterprise Channel:\n          value: subscription-id\n        Update Enterprise Channel:\n          value: subscription-id\n        Create Enterprise Channel:\n          value: subscription-id\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    Bot:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: Bot resource definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/BotProperties\"\n      type: object\n    BotChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: Bot channel resource definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/Channel\"\n      type: object\n    BotProperties:\n      description: The parameters to provide for the Bot.\n      properties:\n        configuredChannels:\n          description: Collection of channels for which the bot is configured\n          items:\n            type: string\n          readOnly: true\n          type: array\n        description:\n          description: The description of the bot\n          type: string\n        developerAppInsightKey:\n          description: The Application Insights key\n          type: string\n        developerAppInsightsApiKey:\n          description: The Application Insights Api Key\n          type: string\n        developerAppInsightsApplicationId:\n          description: The Application Insights App Id\n          type: string\n        displayName:\n          description: The Name of the bot\n          type: string\n        enabledChannels:\n          description: Collection of channels for which the bot is enabled\n          items:\n            type: string\n          readOnly: true\n          type: array\n        endpoint:\n          description: The bot's endpoint\n          type: string\n        endpointVersion:\n          description: The bot's endpoint version\n          readOnly: true\n          type: string\n        iconUrl:\n          description: The Icon Url of the bot\n          type: string\n        luisAppIds:\n          description: Collection of LUIS App Ids\n          items:\n            type: string\n          type: array\n        luisKey:\n          description: The LUIS Key\n          type: string\n        msaAppId:\n          description: Microsoft App Id for the bot\n          type: string\n      required:\n        - displayName\n        - endpoint\n        - msaAppId\n    BotResponseList:\n      description: The list of  bot service operation response.\n      properties:\n        nextLink:\n          description: The link used to get the next page of bot service resources.\n          type: string\n        value:\n          description: Gets the list of bot service results and their properties.\n          items:\n            $ref: \"#/components/schemas/Bot\"\n          readOnly: true\n          type: array\n    Channel:\n      description: Channel definition\n      discriminator:\n        propertyName: channelName\n      properties:\n        channelName:\n          description: The channel name\n          type: string\n      required:\n        - channelName\n      type: object\n    ChannelResponseList:\n      description: The list of bot service channel operation response.\n      properties:\n        nextLink:\n          description: The link used to get the next page of bot service channel resources.\n          type: string\n        value:\n          description: Gets the list of bot service channel results and their properties.\n          items:\n            $ref: \"#/components/schemas/BotChannel\"\n          readOnly: true\n          type: array\n    CheckNameAvailabilityRequestBody:\n      description: The request body for a request to Bot Service Management to check\n        availability of a bot name.\n      properties:\n        name:\n          description: the name of the bot for which availability needs to be checked.\n          type: string\n        type:\n          description: the type of the bot for which availability needs to be checked\n          type: string\n      type: object\n    CheckNameAvailabilityResponseBody:\n      description: The response body returned for a request to Bot Service Management to\n        check availability of a bot name.\n      properties:\n        message:\n          description: additional message from the bot management api showing why a bot\n            name is not available\n          type: string\n        valid:\n          description: indicates if the bot name is valid.\n          type: boolean\n      type: object\n    ConnectionItemName:\n      description: The display name of a connection Item Setting registered with the Bot\n      properties:\n        name:\n          description: Connection Item name that has been added in the API\n          readOnly: true\n          type: string\n    ConnectionSetting:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: Bot channel resource definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/ConnectionSettingProperties\"\n      type: object\n    ConnectionSettingParameter:\n      description: Extra Parameter in a Connection Setting Properties to indicate service\n        provider specific properties\n      properties:\n        key:\n          description: Key for the Connection Setting Parameter.\n          type: string\n        value:\n          description: Value associated with the Connection Setting Parameter.\n          type: string\n    ConnectionSettingProperties:\n      description: Properties for a Connection Setting Item\n      properties:\n        clientId:\n          description: Client Id associated with the Connection Setting.\n          type: string\n        clientSecret:\n          description: Client Secret associated with the Connection Setting\n          type: string\n        parameters:\n          description: Service Provider Parameters associated with the Connection Setting\n          items:\n            $ref: \"#/components/schemas/ConnectionSettingParameter\"\n          type: array\n        scopes:\n          description: Scopes associated with the Connection Setting\n          type: string\n        serviceProviderDisplayName:\n          description: Service Provider Display Name associated with the Connection Setting\n          type: string\n        serviceProviderId:\n          description: Service Provider Id associated with the Connection Setting\n          type: string\n        settingId:\n          description: Setting Id set by the service for the Connection Setting.\n          readOnly: true\n          type: string\n    ConnectionSettingResponseList:\n      description: The list of bot service connection settings response.\n      properties:\n        nextLink:\n          description: The link used to get the next page of bot service connection setting\n            resources.\n          type: string\n        value:\n          description: Gets the list of bot service connection settings and their\n            properties.\n          items:\n            $ref: \"#/components/schemas/ConnectionSetting\"\n          readOnly: true\n          type: array\n    DirectLineChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Direct Line channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/DirectLineChannelProperties\"\n      type: object\n      x-ms-discriminator-value: DirectLineChannel\n    DirectLineChannelProperties:\n      description: The parameters to provide for the Direct Line channel.\n      properties:\n        sites:\n          description: The list of Direct Line sites\n          items:\n            $ref: \"#/components/schemas/DirectLineSite\"\n          type: array\n    DirectLineSite:\n      description: A site for the Direct Line channel\n      properties:\n        isEnabled:\n          description: Whether this site is enabled for DirectLine channel.\n          type: boolean\n        isSecureSiteEnabled:\n          description: Whether this site is enabled for authentication with Bot Framework.\n          type: boolean\n        isV1Enabled:\n          description: Whether this site is enabled for Bot Framework V1 protocol.\n          type: boolean\n        isV3Enabled:\n          description: Whether this site is enabled for Bot Framework V1 protocol.\n          type: boolean\n        key:\n          description: Primary key. Value only returned through POST to the action Channel\n            List API, otherwise empty.\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n        key2:\n          description: Secondary key. Value only returned through POST to the action\n            Channel List API, otherwise empty.\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n        siteId:\n          description: Site Id\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n        siteName:\n          description: Site name\n          type: string\n        trustedOrigins:\n          description: List of Trusted Origin URLs for this site. This field is applicable\n            only if isSecureSiteEnabled is True.\n          items:\n            type: string\n          type: array\n      required:\n        - isV1Enabled\n        - isV3Enabled\n        - isEnabled\n        - siteName\n    EmailChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Email channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/EmailChannelProperties\"\n      type: object\n      x-ms-discriminator-value: EmailChannel\n    EmailChannelProperties:\n      description: The parameters to provide for the Email channel.\n      properties:\n        emailAddress:\n          description: The email address\n          type: string\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n        password:\n          description: The password for the email address. Value only returned through POST\n            to the action Channel List API, otherwise empty.\n          type: string\n      required:\n        - emailAddress\n        - password\n        - isEnabled\n    EnterpriseChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: Enterprise Channel resource definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/EnterpriseChannelProperties\"\n      type: object\n    EnterpriseChannelCheckNameAvailabilityRequest:\n      description: A request to Bot Service Management to check availability of an\n        Enterprise Channel name.\n      properties:\n        name:\n          description: The name of the Enterprise Channel for which availability needs to\n            be checked.\n          type: string\n      type: object\n    EnterpriseChannelCheckNameAvailabilityResponse:\n      description: A request to Bot Service Management to check availability of an\n        Enterprise Channel name.\n      properties:\n        message:\n          description: Additional information about why a bot name is not available.\n          type: string\n        valid:\n          description: Indicates if the Enterprise Channel name is valid.\n          type: boolean\n      type: object\n    EnterpriseChannelNode:\n      description: The properties specific to an Enterprise Channel Node.\n      properties:\n        azureLocation:\n          description: The location of the Enterprise Channel Node.\n          type: string\n        azureSku:\n          description: The sku of the Enterprise Channel Node.\n          type: string\n        id:\n          description: Id of Enterprise Channel Node. This is generated by the Bot\n            Framework.\n          readOnly: true\n          type: string\n        name:\n          description: The name of the Enterprise Channel Node.\n          type: string\n        state:\n          description: The current state of the Enterprise Channel Node.\n          enum:\n            - Creating\n            - CreateFailed\n            - Started\n            - Starting\n            - StartFailed\n            - Stopped\n            - Stopping\n            - StopFailed\n            - Deleting\n            - DeleteFailed\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: EnterpriseChannelNodeState\n      required:\n        - name\n        - azureSku\n        - azureLocation\n    EnterpriseChannelProperties:\n      description: The parameters to provide for the Enterprise Channel.\n      properties:\n        nodes:\n          description: The nodes associated with the Enterprise Channel.\n          items:\n            $ref: \"#/components/schemas/EnterpriseChannelNode\"\n          type: array\n        state:\n          description: The current state of the Enterprise Channel.\n          enum:\n            - Creating\n            - CreateFailed\n            - Started\n            - Starting\n            - StartFailed\n            - Stopped\n            - Stopping\n            - StopFailed\n            - Deleting\n            - DeleteFailed\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: EnterpriseChannelState\n      required:\n        - nodes\n    EnterpriseChannelResponseList:\n      description: The list of  bot service operation response.\n      properties:\n        nextLink:\n          description: The link used to get the next page of bot service resources.\n          type: string\n        value:\n          description: The list of Enterprise Channels and their properties.\n          items:\n            $ref: \"#/components/schemas/EnterpriseChannel\"\n          readOnly: true\n          type: array\n    Error:\n      description: Bot Service error object.\n      properties:\n        error:\n          $ref: \"#/components/schemas/ErrorBody\"\n    ErrorBody:\n      description: Bot Service error body.\n      properties:\n        code:\n          description: error code\n          type: string\n        message:\n          description: error message\n          type: string\n      required:\n        - code\n        - message\n    FacebookChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Facebook channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/FacebookChannelProperties\"\n      type: object\n      x-ms-discriminator-value: FacebookChannel\n    FacebookChannelProperties:\n      description: The parameters to provide for the Facebook channel.\n      properties:\n        appId:\n          description: Facebook application id\n          type: string\n        appSecret:\n          description: Facebook application secret. Value only returned through POST to the\n            action Channel List API, otherwise empty.\n          type: string\n        callbackUrl:\n          description: Callback Url\n          readOnly: true\n          type: string\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n        pages:\n          description: The list of Facebook pages\n          items:\n            $ref: \"#/components/schemas/FacebookPage\"\n          type: array\n        verifyToken:\n          description: Verify token. Value only returned through POST to the action Channel\n            List API, otherwise empty.\n          readOnly: true\n          type: string\n      required:\n        - appId\n        - appSecret\n        - isEnabled\n    FacebookPage:\n      description: A Facebook page for Facebook channel registration\n      properties:\n        accessToken:\n          description: Facebook application access token. Value only returned through POST\n            to the action Channel List API, otherwise empty.\n          type: string\n        id:\n          description: Page id\n          type: string\n      required:\n        - id\n        - accessToken\n    KikChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Kik channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/KikChannelProperties\"\n      type: object\n      x-ms-discriminator-value: KikChannel\n    KikChannelProperties:\n      description: The parameters to provide for the Kik channel.\n      properties:\n        apiKey:\n          description: Kik API key. Value only returned through POST to the action Channel\n            List API, otherwise empty.\n          type: string\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n        isValidated:\n          description: Whether this channel is validated for the bot\n          type: boolean\n        userName:\n          description: The Kik user name\n          type: string\n      required:\n        - userName\n        - apiKey\n        - isEnabled\n    Kind:\n      description: Indicates the type of bot service\n      enum:\n        - sdk\n        - designer\n        - bot\n        - function\n      type: string\n      x-ms-enum:\n        modelAsString: true\n        name: Kind\n    MsTeamsChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Microsoft Teams channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/MsTeamsChannelProperties\"\n      type: object\n      x-ms-discriminator-value: MsTeamsChannel\n    MsTeamsChannelProperties:\n      description: The parameters to provide for the Microsoft Teams channel.\n      properties:\n        callingWebHook:\n          description: Webhook for Microsoft Teams channel calls\n          type: string\n        enableCalling:\n          description: Enable calling for Microsoft Teams channel\n          type: boolean\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n      required:\n        - isEnabled\n    OperationDisplayInfo:\n      description: The operation supported by Bot Service Management.\n      properties:\n        description:\n          description: The description of the operation.\n          type: string\n        operation:\n          description: The action that users can perform, based on their permission level.\n          type: string\n        provider:\n          description: \"Service provider: Microsoft Bot Service.\"\n          type: string\n        resource:\n          description: Resource on which the operation is performed.\n          type: string\n      type: object\n    OperationEntity:\n      description: The operations supported by Bot Service Management.\n      properties:\n        display:\n          $ref: \"#/components/schemas/OperationDisplayInfo\"\n        name:\n          description: \"Operation name: {provider}/{resource}/{operation}.\"\n          type: string\n        origin:\n          description: The origin of the operation.\n          type: string\n        properties:\n          description: Additional properties.\n          type: object\n      type: object\n    OperationEntityListResult:\n      description: The list of bot service operation response.\n      properties:\n        nextLink:\n          description: The link used to get the next page of operations.\n          type: string\n        value:\n          description: The list of operations.\n          items:\n            $ref: \"#/components/schemas/OperationEntity\"\n          type: array\n      type: object\n    Resource:\n      description: Azure resource\n      properties:\n        etag:\n          description: Entity Tag\n          type: string\n        id:\n          description: Specifies the resource ID.\n          readOnly: true\n          type: string\n        kind:\n          $ref: \"#/components/schemas/Kind\"\n        location:\n          description: Specifies the location of the resource.\n          type: string\n        name:\n          description: Specifies the name of the resource.\n          readOnly: true\n          type: string\n        sku:\n          $ref: \"#/components/schemas/Sku\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Contains resource tags defined as key/value pairs.\n          type: object\n        type:\n          description: Specifies the type of the resource.\n          readOnly: true\n          type: string\n      x-ms-azure-resource: true\n    ServiceProvider:\n      description: Service Provider Definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/ServiceProviderProperties\"\n      type: object\n    ServiceProviderParameter:\n      description: Extra Parameters specific to each Service Provider\n      properties:\n        default:\n          description: Default Name for the Service Provider\n          readOnly: true\n          type: string\n        description:\n          description: Description of the Service Provider\n          readOnly: true\n          type: string\n        displayName:\n          description: Display Name of the Service Provider\n          readOnly: true\n          type: string\n        helpUrl:\n          description: Help Url for the  Service Provider\n          readOnly: true\n          type: string\n        name:\n          description: Name of the Service Provider\n          readOnly: true\n          type: string\n        type:\n          description: Type of the Service Provider\n          readOnly: true\n          type: string\n    ServiceProviderProperties:\n      description: The Object used to describe a Service Provider supported by Bot Service\n      properties:\n        devPortalUrl:\n          description: Display Name of the Service Provider\n          readOnly: true\n          type: string\n        displayName:\n          description: Display Name of the Service Provider\n          readOnly: true\n          type: string\n        iconUrl:\n          description: Display Name of the Service Provider\n          readOnly: true\n          type: string\n        id:\n          description: Id for Service Provider\n          readOnly: true\n          type: string\n        parameters:\n          description: The list of parameters for the Service Provider\n          items:\n            $ref: \"#/components/schemas/ServiceProviderParameter\"\n          type: array\n        serviceProviderName:\n          description: Display Name of the Service Provider\n          readOnly: true\n          type: string\n    ServiceProviderResponseList:\n      description: The list of bot service providers response.\n      properties:\n        nextLink:\n          description: The link used to get the next page of bot service providers.\n          type: string\n        value:\n          description: Gets the list of bot service providers and their properties.\n          items:\n            $ref: \"#/components/schemas/ServiceProvider\"\n          readOnly: true\n          type: array\n    Sku:\n      description: The SKU of the cognitive services account.\n      properties:\n        name:\n          $ref: \"#/components/schemas/SkuName\"\n        tier:\n          description: Gets the sku tier. This is based on the SKU name.\n          enum:\n            - Free\n            - Standard\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: SkuTier\n      required:\n        - name\n    SkuName:\n      description: The name of SKU.\n      enum:\n        - F0\n        - S1\n      type: string\n      x-ms-enum:\n        modelAsString: true\n        name: SkuName\n    SkypeChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Skype channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/SkypeChannelProperties\"\n      type: object\n      x-ms-discriminator-value: SkypeChannel\n    SkypeChannelProperties:\n      description: The parameters to provide for the Microsoft Teams channel.\n      properties:\n        callingWebHook:\n          description: Calling web hook for Skype channel\n          type: string\n        enableCalling:\n          description: Enable calling for Skype channel\n          type: boolean\n        enableGroups:\n          description: Enable groups for Skype channel\n          type: boolean\n        enableMediaCards:\n          description: Enable media cards for Skype channel\n          type: boolean\n        enableMessaging:\n          description: Enable messaging for Skype channel\n          type: boolean\n        enableScreenSharing:\n          description: Enable screen sharing for Skype channel\n          type: boolean\n        enableVideo:\n          description: Enable video for Skype channel\n          type: boolean\n        groupsMode:\n          description: Group mode for Skype channel\n          type: string\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n      required:\n        - isEnabled\n    SlackChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Slack channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/SlackChannelProperties\"\n      type: object\n      x-ms-discriminator-value: SlackChannel\n    SlackChannelProperties:\n      description: The parameters to provide for the Slack channel.\n      properties:\n        clientId:\n          description: The Slack client id\n          type: string\n        clientSecret:\n          description: The Slack client secret. Value only returned through POST to the\n            action Channel List API, otherwise empty.\n          type: string\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n        isValidated:\n          description: Whether this channel is validated for the bot\n          readOnly: true\n          type: boolean\n        landingPageUrl:\n          description: The Slack landing page Url\n          type: string\n        lastSubmissionId:\n          description: The Sms auth token\n          readOnly: true\n          type: string\n        redirectAction:\n          description: The Slack redirect action\n          readOnly: true\n          type: string\n        registerBeforeOAuthFlow:\n          description: Whether to register the settings before OAuth validation is\n            performed. Recommended to True.\n          readOnly: true\n          type: boolean\n        verificationToken:\n          description: The Slack verification token. Value only returned through POST to\n            the action Channel List API, otherwise empty.\n          type: string\n      required:\n        - clientId\n        - clientSecret\n        - verificationToken\n        - isEnabled\n    SmsChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Sms channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/SmsChannelProperties\"\n      type: object\n      x-ms-discriminator-value: SmsChannel\n    SmsChannelProperties:\n      description: The parameters to provide for the Sms channel.\n      properties:\n        accountSID:\n          description: The Sms account SID. Value only returned through POST to the action\n            Channel List API, otherwise empty.\n          type: string\n        authToken:\n          description: The Sms auth token. Value only returned through POST to the action\n            Channel List API, otherwise empty.\n          type: string\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n        isValidated:\n          description: Whether this channel is validated for the bot\n          type: boolean\n        phone:\n          description: The Sms phone\n          type: string\n      required:\n        - phone\n        - accountSID\n        - authToken\n        - isEnabled\n    TelegramChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Telegram channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/TelegramChannelProperties\"\n      type: object\n      x-ms-discriminator-value: TelegramChannel\n    TelegramChannelProperties:\n      description: The parameters to provide for the Telegram channel.\n      properties:\n        accessToken:\n          description: The Telegram access token. Value only returned through POST to the\n            action Channel List API, otherwise empty.\n          type: string\n        isEnabled:\n          description: Whether this channel is enabled for the bot\n          type: boolean\n        isValidated:\n          description: Whether this channel is validated for the bot\n          type: boolean\n      required:\n        - accessToken\n        - isEnabled\n    WebChatChannel:\n      allOf:\n        - $ref: \"#/components/schemas/Channel\"\n      description: Web Chat channel definition\n      properties:\n        properties:\n          $ref: \"#/components/schemas/WebChatChannelProperties\"\n      type: object\n      x-ms-discriminator-value: WebChatChannel\n    WebChatChannelProperties:\n      description: The parameters to provide for the Web Chat channel.\n      properties:\n        sites:\n          description: The list of Web Chat sites\n          items:\n            $ref: \"#/components/schemas/WebChatSite\"\n          type: array\n        webChatEmbedCode:\n          description: Web chat control embed code\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n    WebChatSite:\n      description: A site for the Webchat channel\n      properties:\n        enablePreview:\n          description: Whether this site is enabled for preview versions of Webchat\n          type: boolean\n        isEnabled:\n          description: Whether this site is enabled for DirectLine channel\n          type: boolean\n        key:\n          description: Primary key. Value only returned through POST to the action Channel\n            List API, otherwise empty.\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n        key2:\n          description: Secondary key. Value only returned through POST to the action\n            Channel List API, otherwise empty.\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n        siteId:\n          description: Site Id\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n        siteName:\n          description: Site name\n          type: string\n      required:\n        - siteName\n        - isEnabled\n        - enablePreview\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-botservice-2018-07-12-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-botservice-2018-07-12-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}