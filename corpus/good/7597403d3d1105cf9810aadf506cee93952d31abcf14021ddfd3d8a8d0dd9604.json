{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "productOrderManagement.api.yaml",
			"size": 0,
			"path": "generated/staticBinding/carrierEthernet/productOrderManagement.api.yaml",
			"byteSize": 264661,
			"content": "openapi: 3.0.1\ninfo:\n  description: \"**This file forms part of MEF W123** \\n\\n**This specification represents\\\n    \\ MEF work in progress and is subject to\\nchange.** \\n\\nThis API implements Business\\\n    \\ Requirements described in MEF W57.2\\n\\nThe scope of this API includes the following\\\n    \\ capabilities to the API:\\n\\n- Create Product Order\\n- Update Product Order by\\\n    \\ Product Order Identifier\\n- Retrieve List of Product Orders\\n- Retrieve Product\\\n    \\ Order by Product Order Identifier\\n- Modify Product Order Item Requested Delivery\\\n    \\ Date\\n- Retrieve Modify Product Order Item Requested Delivery Date List\\n- Retrieve\\\n    \\ Modify Product Order Item Requested Delivery Date by Identifier\\n- Cancel Product\\\n    \\ Order\\n- Retrieve List of Cancel Product Orders\\n- Retrieve Cancel Product Order\\\n    \\ Request by Cancel Product Order Identifier\\n- Initiate Charge\\n- Respond to\\\n    \\ Charge\\n- Retrieve List of Charges\\n- Retrieve Charge by Charge Identifier\\n\\\n    - Register for Notifications\\n- Send Notifications\\n\\nCopyright 2021 MEF Forum\\\n    \\ and its contributors.\\n\\nThis file includes content based on the TM Forum Product\\\n    \\ Order API (TMF622\\nv4.0.0) available at https://github.com/tmforum-apis/TMF622_ProductOrder,\\n\\\n    which is licensed by the TM Forum under the Apache License version 2.0. Such\\n\\\n    content has been modified by the MEF Forum and its contributors.\\n\"\n  title: Product Ordering Management\n  version: 8.0.0-RC\nservers:\n- url: \"https://{serverBase}/mefApi/sonata/productOrderingManagement/v8/\"\n  variables:\n    serverBase:\n      default: mef.net\n      description: The base of Seller's URL.\ntags:\n- name: productOrder\n- name: cancelProductOrder\n- name: charge\n- name: modifyProductOrderItemRequestedDeliveryDate\n- name: events subscription\npaths:\n  /productOrder:\n    get:\n      description: This operation list or find ProductOrder entities\n      operationId: listProductOrder\n      parameters:\n      - description: State of the Product Order\n        explode: true\n        in: query\n        name: state\n        required: false\n        schema:\n          enum:\n          - acknowledged\n          - assessingCancellation\n          - cancelled\n          - completed\n          - failed\n          - held.assessingCharge\n          - inProgress\n          - partial\n          - pending.assessingModification\n          - pendingCancellation\n          - rejected\n          type: string\n        style: form\n      - description: A number that uniquely identifies an order within the Buyer's\n          enterprise.\n        explode: true\n        in: query\n        name: externalId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: An identifier that is used to group Product Orders that represent\n          a unit of functionality that is important to a Buyer.\n        explode: true\n        in: query\n        name: projectId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Date when the order was created greater than\n        explode: true\n        in: query\n        name: orderDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Date when the order was created lesser than\n        explode: true\n        in: query\n        name: orderDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Effective completion date greater than\n        explode: true\n        in: query\n        name: completionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Effective completion date lesser than\n        explode: true\n        in: query\n        name: completionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: This is requested date to get this Product Order Item completed\n          greater than\n        explode: true\n        in: query\n        name: requestedCompletionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: This is requested date to get this Product Order Item completed\n          lesser than\n        explode: true\n        in: query\n        name: requestedCompletionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Seller planned completion date greater than\n        explode: true\n        in: query\n        name: expectedCompletionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Seller planned completion date lesser than\n        explode: true\n        in: query\n        name: expectedCompletionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: order cancellation date greater than\n        explode: true\n        in: query\n        name: orderCancellationDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: order cancellation date lesser than\n        explode: true\n        in: query\n        name: orderCancellationDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Requested index for start of item to be provided in response\n          requested by the client. Note that the index starts with \"0\".\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: Requested number of items to be provided in response requested\n          by client\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ProductOrder_Find'\n                type: array\n          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n          headers:\n            X-Pagination-Throttled:\n              description: |\n                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: |\n                The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of items included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: List or find ProductOrder objects\n      tags:\n      - productOrder\n    post:\n      description: This operation creates a ProductOrder entity.\n      operationId: createProductOrder\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOrder_Create'\n        description: The ProductOrder to be created\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOrder'\n          description: Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"422\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to the business validation problems\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Creates a ProductOrder\n      tags:\n      - productOrder\n      x-codegen-request-body-name: productOrder\n  /productOrder/{id}:\n    get:\n      description: This operation retrieves a ProductOrder entity. Attribute selection\n        is enabled for all first level attributes.\n      operationId: retrieveProductOrder\n      parameters:\n      - description: Identifier of the ProductOrder\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOrder'\n          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a ProductOrder by ID\n      tags:\n      - productOrder\n    patch:\n      description: This operation updates partially a ProductOrder entity.\n      operationId: patchProductOrder\n      parameters:\n      - description: Identifier of the ProductOrder\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOrder_Update'\n        description: The ProductOrder to be updated\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOrder'\n          description: Updated (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"409\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error409'\n          description: Conflict\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Updates partially a ProductOrder\n      tags:\n      - productOrder\n      x-codegen-request-body-name: productOrder\n  /cancelProductOrder:\n    get:\n      description: This operation list or find CancelProductOrder entities\n      operationId: listCancelProductOrder\n      parameters:\n      - explode: true\n        in: query\n        name: productOrderId\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: productOrderExternalId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Requested index for start of item to be provided in response\n          requested by client. Note that the index starts with \"0\".\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: Requested number of items to be provided in response requested\n          by client\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CancelProductOrder'\n                type: array\n          description: Success\n          headers:\n            X-Pagination-Throttled:\n              description: |\n                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: |\n                The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of items included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: List or find CancelProductOrder objects\n      tags:\n      - cancelProductOrder\n    post:\n      description: This operation creates a CancelProductOrder entity.\n      operationId: createCancelProductOrder\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/CancelProductOrder_Create'\n        description: The CancelProductOrder to be created\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/CancelProductOrder'\n          description: Created\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"422\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to the business validation problems\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Creates a CancelProductOrder\n      tags:\n      - cancelProductOrder\n      x-codegen-request-body-name: cancelProductOrder\n  /cancelProductOrder/{id}:\n    get:\n      description: This operation retrieves a CancelProductOrder entity.\n      operationId: retrieveCancelProductOrder\n      parameters:\n      - description: Identifier of the CancelProductOrder\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/CancelProductOrder'\n          description: Success\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Retrieves a CancelProductOrder by ID\n      tags:\n      - cancelProductOrder\n  /charge:\n    get:\n      description: This operation list or find Charge entities\n      operationId: listCharge\n      parameters:\n      - description: id of the Product Order this Charge relates to.\n        explode: true\n        in: query\n        name: productOrderId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: id of the Product Order Item this Charge relates to.\n        explode: true\n        in: query\n        name: productOrderItemId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The date that the Buyer must respond to the Seller's Charge.\n          If there is no response received by the Due Date the Seller will treat all\n          charges as declined (greater than)\n        explode: true\n        in: query\n        name: responseDueDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: The date that the Buyer must respond to the Seller's Charge.\n          If there is no response received by the Due Date the Seller will treat all\n          charges as declined (greater than)\n        explode: true\n        in: query\n        name: responseDueDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Requested index for start of item to be provided in response\n          requested by client. Note that the index starts with \"0\".\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: Requested number of items to be provided in response requested\n          by client\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MEFProductOrderCharge'\n                type: array\n          description: Success\n          headers:\n            X-Pagination-Throttled:\n              description: |\n                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: |\n                The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of items included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: List or find Charge objects\n      tags:\n      - charge\n  /charge/{id}:\n    get:\n      description: This operation retrieves a Charge entity.\n      operationId: retrieveCharge\n      parameters:\n      - description: Identifier of the Charge\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/MEFProductOrderCharge'\n          description: Success\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Retrieves a Charge by ID\n      tags:\n      - charge\n    patch:\n      description: This operation updates partially a Charge entity.\n      operationId: patchCharge\n      parameters:\n      - description: Identifier of the Charge\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/MEFProductOrderCharge_Update'\n        description: The Charge to be updated\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/MEFProductOrderCharge'\n          description: Updated (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"409\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error409'\n          description: Conflict\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Updates partially a Charge\n      tags:\n      - charge\n      x-codegen-request-body-name: charge\n  /hub:\n    post:\n      description: \"Sets the communication endpoint address the service instance must\\\n        \\ use to deliver information about its health state, execution state, failures\\\n        \\ and metrics.\"\n      operationId: registerListener\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/EventSubscriptionInput'\n        description: Data containing the callback endpoint to deliver the information\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description: Subscribed\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Register a listener\n      tags:\n      - events subscription\n      x-codegen-request-body-name: data\n  /hub/{id}:\n    delete:\n      description: \"Resets the communication endpoint address the service instance\\\n        \\ must use to deliver information about its health state, execution state,\\\n        \\ failures and metrics.\"\n      operationId: unregisterListener\n      parameters:\n      - description: The id of the registered listener\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Unregister a listener\n      tags:\n      - events subscription\n    get:\n      description: This operation retrieves a hub entity. Attribute selection is enabled\n        for all first level attributes.\n      operationId: retrieveHub\n      parameters:\n      - description: Identifier of the Hub\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description: Success\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Retrieves a Hub by ID\n      tags:\n      - events subscription\n  /modifyProductOrderItemRequestedDeliveryDate:\n    get:\n      description: This operation list or find ModifyProductOrderItemRequestedDeliveryDate\n        entities\n      operationId: listModifyProductOrderItemRequestedDeliveryDate\n      parameters:\n      - explode: true\n        in: query\n        name: productOrderId\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: state\n        required: false\n        schema:\n          enum:\n          - acknowledged\n          - done\n          - done.declined\n          - inProgress.assessingCharge\n          - rejected\n          type: string\n        style: form\n      - description: Indicates that expedited treatment is requested.\n        explode: true\n        in: query\n        name: expediteIndicator\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Identifies the Buyer's desired due date (requested delivery date)\n          - greater than\n        explode: true\n        in: query\n        name: requestedCompletionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Identifies the Buyer's desired due date (requested delivery date)\n          - lesser than\n        explode: true\n        in: query\n        name: requestedCompletionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: The date on which the Seller assigned the Modify Product Order\n          Item Requested Delivery Data Identifier - greater than\n        explode: true\n        in: query\n        name: creationDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: The date on which the Seller assigned the Modify Product Order\n          Item Requested Delivery Data Identifier - lesser than\n        explode: true\n        in: query\n        name: creationDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Requested index for start of item to be provided in response\n          requested by client. Note that the index starts with \"0\".\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: Requested number of items to be provided in response requested\n          by client\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MEFModifyProductOrderItemRequestedDeliveryDate'\n                type: array\n          description: Success\n          headers:\n            X-Pagination-Throttled:\n              description: |\n                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: |\n                The total number of matching items. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of items included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: List or find ModifyProductOrderItemRequestedDeliveryDate objects\n      tags:\n      - modifyProductOrderItemRequestedDeliveryDate\n    post:\n      description: This operation creates a ModifyProductOrderItemRequestedDeliveryDate\n        entity.\n      operationId: createModifyProductOrderItemRequestedDeliveryDate\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/MEFModifyProductOrderItemRequestedDeliveryDate_Create'\n        description: The ModifyProductOrderItemRequestedDeliveryDate to be created\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/MEFModifyProductOrderItemRequestedDeliveryDate'\n          description: Created\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"422\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to the business validation problems\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Creates a ModifyProductOrderItemRequestedDeliveryDate\n      tags:\n      - modifyProductOrderItemRequestedDeliveryDate\n      x-codegen-request-body-name: modifyProductOrderItemRequestedDeliveryDate\n  /modifyProductOrderItemRequestedDeliveryDate/{id}:\n    get:\n      description: This operation retrieves a ModifyProductOrderItemRequestedDeliveryDate\n        entity.\n      operationId: retrieveModifyProductOrderItemRequestedDeliveryDate\n      parameters:\n      - description: Identifier of the ModifyProductOrderItemRequestedDeliveryDate\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\n          Reference: MEF 57.2 (Sn 9.18)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/MEFModifyProductOrderItemRequestedDeliveryDate'\n          description: Success\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented.\n      summary: Retrieves a ModifyProductOrderItemRequestedDeliveryDate by ID\n      tags:\n      - modifyProductOrderItemRequestedDeliveryDate\ncomponents:\n  schemas:\n    AccessEline:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/AccessElineOvcCommon'\n      - properties:\n          enniEp:\n            $ref: '#/components/schemas/AccessElineOvcEndPoint'\n          uniEp:\n            $ref: '#/components/schemas/AccessElineOvcEndPoint'\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:sonata:access-eline:v3.0.0:all\n    AccessElineOvcCommon:\n      description: \"This class contains all of the Access E-Line OVC Services Attributes\\\n        \\ that are used in all four Business Functions (POQ, Quote, Order, Inventory).\\\n        \\ At this time, this includes all of the Access Eline OVC Service Attributes.\\\n        \\ This class is used to compose the AccessElineOvc class which has one file\\\n        \\ for each Business Function that differ in terms of the Service Attributes\\\n        \\ that are \\\"Required\\\" for the Business Function (rather than \\\"Optional\\\"\\\n        ).\"\n      properties:\n        ceVlanIdPreservation:\n          description: \"MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress\\\n            \\ Frame is Stripped or Preserved in the Egress Frame. Per MEF 51.1, the\\\n            \\ Operator must support PRESERVE and should support STRIP.\"\n          $ref: '#/components/schemas/CeVlanIdPreservation'\n        cTagPcpPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n        ovcL2cpAddressSet:\n          $ref: '#/components/schemas/L2cpAddressSet'\n        frameDisposition:\n          $ref: '#/components/schemas/FrameDisposition'\n        listOfClassOfServiceNames:\n          description: MEF 26.2 sec. 12.12 - The OVC List of Class of Service Names\n            Service Attribute is used to specify all of the Class of Service Names\n            supported by an OVC. The value of the OVC List of Class of Service Names\n            Service Attribute is a non-empty list of Class of Service Names (which\n            may include one or more of the CoS Labels defined in MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \"MEF 26.2 sec. 12.13 - Technical details of the service level\\\n            \\ in terms of Performance Objectives, agreed between the SP/SO and the\\\n            \\ Operator as part of the Service Level Agreement. For each Performance\\\n            \\ Metric included in the SLS, a Performance Objective must be included\\\n            \\ as well as the parameter values needed for the Performance Metric.\"\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \"MEF 26.2 sec. 12.6 - The max length in bytes allowed in a\\\n            \\ frame mapped to an OVC EP associated by the OVC. The length of the frame\\\n            \\ includes all bytes from the start of the destination MAC address through\\\n            \\ the Frame Check Sequence. This must be at least 1526 (1518+C-tag+S-tag).\\\n            \\ This Service Attribute must be included in POQ, Quote, and Order if\\\n            \\ the Buyer requires a value that is different than the value agreed on\\\n            \\ during the on-boarding process between the Buyer and Seller.\"\n          minimum: 1526\n          type: integer\n      type: object\n    AccessElineOvcEndPoint:\n      allOf:\n      - $ref: '#/components/schemas/AccessElineOvcEpCommon'\n      description: An OVC End Point is a logical entity at a given External Interface\n        that is associated with a distinct set of frames passing over that External\n        Interface. The OVC End Point schema is included in the definitions section\n        of the OVC schema.\n      type: object\n    AccessElineOvcEpCommon:\n      description: \"This class contains all of the Access E-Line OVC End Point Services\\\n        \\ Attributes that are used in all four Business Functions (POQ, Quote, Order,\\\n        \\ Inventory). At this time, this includes all of the Access Eline OVC End\\\n        \\ Point Service Attributes. This class is used to compose the AccessElineOvcEndPoint\\\n        \\ class which has one file for each Business Function that differ in terms\\\n        \\ of the Service Attributes that are \\\"Required\\\" for the Business Function\\\n        \\ (rather than \\\"Optional\\\").\"\n      properties:\n        identifier:\n          description: MEF 26.2 sec. 16.1 - The value of theOVC EP ID Service Attribute\n            is a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the OVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n        egressEquivalenceClassIdentifier:\n          description: \"MEF 26.2 sec. 16.9 - The mechanism that allows an Egress Equivalence\\\n            \\ Class Name to be determined for an egress EI Frame. ?F, M, P? where\\\n            \\ F is a protocol field in the egress EI Frame, M is a map that maps each\\\n            \\ possible value of the field F and the absence of the field F to an Egress\\\n            \\ Equivalence Class Name and P is a map of L2CP type to Egress Equivalence\\\n            \\ Class Name.\"\n          $ref: '#/components/schemas/CosFrom'\n        aggregationLinkDepth:\n          description: \"MEF 26.2 sec. 16.14 - A list of 2-tuples {SVID, Depth} that\\\n            \\ indicates the number of ENNI links that can carry ENNI Frames for each\\\n            \\ S-VLAN ID mapped to the OVC End Point. It indicates the level of resiliency\\\n            \\ to use for the SVID at the ENNI.\"\n          items:\n            $ref: '#/components/schemas/AggLinkDepth'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceIntermediatePoint:\n          $ref: '#/components/schemas/MegList'\n        ovcEgressMap:\n          description: \"MEF 26.2 sec. 16.8 - A set of mappings that determine the\\\n            \\ content of the S-Tag or C-Tag of an egress frame at an ENNI or UNI (respectively)\\\n            \\ based on the Class of Service Name and Frame Color of the frame. Three\\\n            \\ forms: (1) CoSName(CN) -\u003e C/S-Tag PCP or Discard, (2) CoSName and Frame\\\n            \\ Color (CC)--\u003e C/S-Tag DEI or Discard, and (3) CoSName and Frame Color\\\n            \\ (CC)--\u003e C/S-Tag PCP or Discard. A fourth form is included which combines\\\n            \\ (1) and (2) because that is a common case.\"\n          items:\n            $ref: '#/components/schemas/OvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerEndPoint:\n          description: MEF 26.2 sec. 16.11 - Bandwidth Profile Flow parameters for\n            all egress Service Frames mapped to the OVC End Point.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBwpPerEgressEquivalenceClassName:\n          description: \"MEF 26.2 sec. 16.13 - For each EEC Name listed, Bandwidth\\\n            \\ Profile Flow parameters, for all egress Service Frames mapped to that\\\n            \\ EEC Name at the OVC End Point.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        ingressBandwidthProfilePerClassOfServiceName:\n          description: \"MEF 26.2 sec. 16.12 - For each CoS Name listed, Bandwidth\\\n            \\ Profile Flow parameters for all ingress Service Frames mapped to that\\\n            \\ CoS Name at OVC End Point. This bandwidth profile flow is used to police\\\n            \\ at Ingress each CoS in an OVC individually. List of 2-tuples {cos, bwpf}.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ovcEndPointEnvelopes:\n          description: \"The Envelopes and Envelope Coupling Flag values to which Bandwidth\\\n            \\ Profile Flows for this OVC End Point can be mapped. Value is list of\\\n            \\ {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the OVC\\\n            \\ End Point Envelopes Service Attribute can be used when all of the Bandwidth\\\n            \\ Profile Flows contained in the Envelope are specific to a given OVC\\\n            \\ End Point. They are specified using one of the following OVC End Point\\\n            \\ Service Attributes: Ingress Bandwidth Profile Per OVC End Point Egress\\\n            \\ Bandwidth Profile Per OVC End Point Ingress Bandwidth Profile Per Class\\\n            \\ of Service Name Egress Bandwidth Profile Per Egress Equivalence Class\\\n            \\ Name  To create an Envelope containing Bandwidth Profile Flows for more\\\n            \\ than one OVC End Point, the UNI or ENNI Envelopes Service Attribute\\\n            \\ (as appropriate) must be used.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ovcEndPointMap:\n          description: \"MEF 26.2 sec. 16.5 - The information that determines which\\\n            \\ UNI/ENNI Frames are mapped to the OVC End Point. At the UNI and ENNI,\\\n            \\ the only allowable mapping is a LIST of VLAN IDs (CE-VLAN IDs at the\\\n            \\ UNI and S-VLAN IDs at the ENNI).\"\n          $ref: '#/components/schemas/EndPointMapForm'\n        colorMap:\n          description: \"MEF 26.2 sec. 16.7 - The OVC EP Color Map Service Attribute\\\n            \\ is the mechanism by which the Color for an Ingress External Interface\\\n            \\ Frame that is mapped to an OVC EP is indicated by the content in the\\\n            \\ frame header. The value of the OVC EP Color Map Service Attribute is\\\n            \\ a pair of the form ?F, M? where: F is one of the values ENDPOINT, DEI,\\\n            \\ PCP, or DSCP and M is a map that can be used to assign Color to each\\\n            \\ Ingress Frame. (The form of M depends on the value of F.)\"\n          $ref: '#/components/schemas/ColorFrom'\n        ovcEndPointPortConversationToAggregationLinkMap:\n          description: \"MEF 26.2 sec. 13.2 - A mapping of Port Conversation IDs (i.e.,\\\n            \\ VLAN IDs) to an ordered list of physical links if EnniService.sVlanIdControl\\\n            \\ is FULL and there are multiple physical links in the ENNI and EnniCommon.linkAggregation\\\n            \\ is ALL_ACTIVE. Only S-VLAN IDs that are listed in the AccessElineOvcEndPoint.ovcEndPointMap\\\n            \\ can be listed in this attribute.   If EnniService.sVlanIdControl is\\\n            \\ PARTIAL then the Service Provider does not have full visibility of all\\\n            \\ the S-VLAN IDs mapped to each physical link, and hence cannot pick values\\\n            \\ that avoid overloading certain links. In this case, the ENNI Port Conversation\\\n            \\ to Aggregation Link Map Common Attribute must be agreed between the\\\n            \\ relevant Operators.\"\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        ingressClassOfServiceMap:\n          description: \"MEF 26.2 sec. 16.6 - The value of the OVC EP Ingress Class\\\n            \\ of Service Map Service Attribute is a 3-tuple of the form ?F, M, P?\\\n            \\ where: F is one of the values ENDPOINT, C_TAG_PCP, S_TAG_PCP, or DSCP,\\\n            \\ M is a map that can be used to assign Class of Service Names to External\\\n            \\ Interface Frames. (The form of M depends on the value of F.), and P\\\n            \\ is a map with entries of the form ?Layer 2 Control Protocol type ? Class\\\n            \\ of Service Name? where the Layer 2 Control Protocol type is determined\\\n            \\ by the Protocol Identifier (see Section 6.2 of MEF 45.1).\"\n          $ref: '#/components/schemas/CosFrom'\n        sourceMacAddressLimit:\n          description: \"MEF 26.2 sec. 16.15 - Specifies a limit on the number of different\\\n            \\ Source MAC address over a time interval for which ingress Service Frames\\\n            \\ at this OVC End Point will be delivered. The absence of this attribute\\\n            \\ corresponds to a Service Attribute value of None. The value is {N,t}\\\n            \\ where N is an integer greater than or equal to 1 and t is a time duration.\"\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maintenanceEndPointList:\n          description: \"MEF 26.2 sec. 16.17 - A list of the MEPs instantiated at this\\\n            \\ OVC EP and the direction of each MEP, List of 2-tuples ?l, d? where\\\n            \\ l is MEG level and d is direction (Up/Down)\"\n          items:\n            $ref: '#/components/schemas/MepLevelAndDirection'\n          maxItems: 16\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    AggLinkDepth:\n      description: \"For an Operator Service, this is a pair of \u003cVLAN ID, link depth\u003e\\\n        \\ indicating that a given VLAN ID maps to a given number of links in the Port\\\n        \\ Conversation ID to Aggregation Link Map.\"\n      properties:\n        vlanID:\n          description: The VLAN ID\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagDepth:\n          description: The number of Link Aggregation links available to the VLAN\n          minimum: 1\n          type: integer\n      type: object\n    AvailableMegList:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      type: string\n    BandwidthProfilePerClassOfServiceName:\n      description: |-\n        The value is a list of pairs of the form ?x, y? For ingress, x is a Class of Service Name that is in the value of the EVC/OVC List of Class of Service Names Service Attribute (MEF 10.4 sec. 8.7 and MEF 26.2 sec. 12.12) for the EVC/OVC that associates the EVC/OVC End Point. For egress, x is a Class of Service from the EVC List of Class of Service Names Service Attribute or an Egress Equivalence Class Name (for OVC). If specified, y is a reference to a Bandwidth Profile Flow and Disabled otherwise. There is at most one pair in the list for each CoS or EEC Name (Except Discard).\n         For EVCs it is used by the EVC EP Class of Service Name Ingress\n        Bandwidth Profile Service Attribute (MEF 10.4 sec. 10.9). and EVC EP Class of Service Name Egress Bandwidth Profile Service Attribute (MEF 10.4 sec. 10.11). For OVCs it is used by the Ingress Bandwidth Profile per Class of Service Name (MEF 26.2 sec. 16.12) Egress Bandwidth Profile per Egress Equivalence Class Name (MEF 26.2 sec. 16.13).\n      properties:\n        bwpFlow:\n          description: \"The Bandwidth Profile to be applied to all items that are\\\n            \\ in the specified Class of Service or Egress Equivalence Class. If this\\\n            \\ is an empty list, it means that the Bandwidth Profile is Disabled.\"\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        classOfServiceName:\n          description: \"MEF 26.2 sec. 16.12 and 16.13 - For Ingress, this is the Name\\\n            \\ of the Class of Service that this bandwidth profile flow is applied\\\n            \\ to. This should be an item from ovc.listOfClassOfServiceNames. For Egress,\\\n            \\ this is the Class of Service for EVCs and the Egress Equivalence Class\\\n            \\ (EEC) Name for OVCs. If the specific Class of Service/ Egress Equivalence\\\n            \\ Class is not used/configured that the End Point, the Bandwidth Profile\\\n            \\ can be an empty list.\"\n          type: string\n      type: object\n    BwpFlow:\n      description: \"The Bandwidth Profile Flow, BwpFlow, object class represents the\\\n        \\ Bandwidth Profile Flow which includes the bandwidth profile parameter CIR,\\\n        \\ CIRmax, CBS, EIR, EIRmax, EBS, Coupling Flag, Color Mode, Envelope and Rank,\\\n        \\ and Token Request Offset. The BwpFlow is used with Service Attributes for\\\n        \\ CarrierEthernetOperatorUni, CarrierEthernetSubscriberUni, CarrierEthernetVuni,,\\\n        \\ and ENNI as well as OVC and EVC End Points. Reference MEF 10.4 Section 12\\\n        \\ and MEF 26.2 Section 17.\"\n      properties:\n        eirMax:\n          $ref: '#/components/schemas/InformationRate'\n        envelopeRank:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The rank in\n            the envelope of this Bandwidth Profile Flow\n          minimum: 1\n          type: integer\n        cirMax:\n          $ref: '#/components/schemas/InformationRate'\n        cbs:\n          $ref: '#/components/schemas/DataSize'\n        couplingFlag:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The couplingFlag\n            determines whether unused committed bandwidth for this Bandwidth Profile\n            Flow is made available as excess bandwidth for this Bandwidth Profile\n            Flow or as committed bandwidth for the next lower-ranked Bandwidth Profile\n            Flow. 0/FALSE means overflow green tokens are used as green tokens in\n            the next lowest BWP Flow in the Envelope. 1/TRUE means they are used as\n            yellow tokens for this BWP Flow.\n          type: boolean\n        envelopeId:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - The name of\n            the envelope that this Bandwidth Profile Flow resides in.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n        tokenRequestOffset:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - tokenRequestOffset\n            adjusts the bandwidth consumed by each External Interface Frame in the\n            Bandwidth Profile Flow by a fixed number of octets.\n          type: integer\n        ebs:\n          $ref: '#/components/schemas/DataSize'\n        colorMode:\n          description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n            whether or not External Interface Frames for this Bandwidth Profile Flow\n            that are identified as Yellow on input to the Bandwidth Profile Algorithm\n            can be declared Green.\n          $ref: '#/components/schemas/ColorMode'\n        cir:\n          $ref: '#/components/schemas/InformationRate'\n        eir:\n          $ref: '#/components/schemas/InformationRate'\n      type: object\n    CancelProductOrder:\n      description: Request for cancellation an existing product order\n      properties:\n        cancellationReason:\n          description: An optional attribute that allows the Buyer to provide additional\n            detail to the Seller on their reason for cancelling the Product Order\n          type: string\n        relatedContactInformation:\n          description: |-\n            Contact information of an individual or organization playing a role for this Cancel Product Order.\n            The rule for mapping a represented attribute\n            value to a `role` is to use the _lowerCamelCase_ pattern e.g.\n            - Cancel Product Order Contact: `role=cancelProductOrderContact`\n            - Seller Contact: `role=sellerContact`\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        productOrder:\n          $ref: '#/components/schemas/MEFProductOrderRef'\n        href:\n          description: |\n            Hyperlink to the cancellation request. Hyperlink MAY be used by the Seller in responses Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n          type: string\n        id:\n          description: Unique identifier for the Cancel Product Order that is generated\n            by the Seller when the Cancel Product Order request is acknowledged via\n            an API.\n          type: string\n        orderVersion:\n          description: The version of the Product Order. Set by the Buyer using Seller\n            specified Product Order Version of the Product Order that is to be cancelled.\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFChargeableTaskStateType'\n        cancellationDeniedReason:\n          description: \"If the Cancel Product Order is denied by the Seller, the Seller\\\n            \\ provides a reason to the Buyer using this attribute.\"\n          type: string\n        cancellationReasonType:\n          $ref: '#/components/schemas/CancellationReasonType'\n      required:\n      - id\n      - orderVersion\n      - productOrder\n      - relatedContactInformation\n      - state\n      type: object\n    CancelProductOrder_Create:\n      description: |-\n        Request for cancellation an existing product order\n        Skipped properties: id,href,state,effectiveCancellationDate\n      properties:\n        cancellationReason:\n          description: An optional attribute that allows the Buyer to provide additional\n            detail to the Seller on their reason for cancelling the Product Order\n          type: string\n        relatedContactInformation:\n          description: |-\n            Contact information of an individual or organization playing a role for this Cancel Product Order.\n            The rule for mapping a represented attribute\n            value to a `role` is to use the _lowerCamelCase_ pattern e.g.\n            - Cancel Product Order Contact: `role=cancelProductOrderContact`\n            - Seller Contact: `role=sellerContact`\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          minItems: 1\n          type: array\n        productOrder:\n          $ref: '#/components/schemas/MEFProductOrderRef'\n        orderVersion:\n          description: The version of the Product Order. Set by the Buyer using Seller\n            specified Product Order Version of the Product Order that is to be cancelled.\n          type: string\n        cancellationReasonType:\n          $ref: '#/components/schemas/CancellationReasonType'\n      required:\n      - orderVersion\n      - productOrder\n      - relatedContactInformation\n      type: object\n    CancellationReasonType:\n      description: \"Identifies the type of reason, Technical or Commercial, for the\\\n        \\ Cancellation Request\"\n      enum:\n      - technical\n      - commercial\n      type: string\n    CarrierEthernetEvcCommon:\n      description: These are the MEF 10.4 EVC Service Attributes that are common to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3.\n      properties:\n        listOfCosNames:\n          description: MEF 10.4 sec. 8.7 - The EVC List of Class of Service Names\n            Service Attribute is used to specify all of the Class of Service Names\n            supported by an EVC. The value of the EVC List of Class of Service Names\n            Service Attribute is a non-empty list of Class of Service Names (which\n            may include one or more of the CoS Labels defined in MEF 23.2).\n          items:\n            type: string\n          minItems: 1\n          type: array\n          uniqueItems: true\n        availableMegLevel:\n          $ref: '#/components/schemas/AvailableMegList'\n        carrierEthernetSls:\n          description: \"MEF 10.4 sec. 8.8 - The SLS includes technical details of\\\n            \\ the service level in terms of Performance Objectives, agreed between\\\n            \\ the Service Provider and the Subscriber or between Service Provider\\\n            \\ and the Operator as part of the Service Level Agreement. A given SLS\\\n            \\ might contain 0,1 or more Performance Objectives for each Performance\\\n            \\ Metric.\"\n          items:\n            $ref: '#/components/schemas/CarrierEthernetSls'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        maximumFrameSize:\n          description: \"MEF 10.4 sec. 8.10 - Maximum size of Service frames that can\\\n            \\ be carried over the EVC. This must be at least 1522 (1518+C-tag). This\\\n            \\ Service Attribute must be included in POQ, Quote, and Order if the Buyer\\\n            \\ requires a value that is different than the value agreed on during the\\\n            \\ on-boarding process between the Buyer and Seller.\"\n          minimum: 1522\n          type: integer\n      type: object\n    CarrierEthernetEvcEpCommon:\n      description: This set of EVC End Point Service Attributes are applicable to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4.\n      properties:\n        identifier:\n          description: MEF 10.4 sec. 10.1 - The value of the EVC EP ID Service Attribute\n            is a string that is used to allow the Subscriber and Service Provider\n            to uniquely identify the EVC EP for operations purposes.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n        subscriberMegMip:\n          $ref: '#/components/schemas/MegList'\n        egressMap:\n          description: \"MEF 10.4 sec. 10.7 - The value of the EVC EP Egress Map Service\\\n            \\ Attribute is None or a map of the form {Corresponding Ingress Service\\\n            \\ Frame Class of Service Name, Corresponding Ingress Service Frame Color}\\\n            \\ to {Egress Service Frame C-Tag PCP value, Egress Service Frame C-Tag\\\n            \\ DEI value} or Discard. If this property is not present or an empty list,\\\n            \\ the value is assumed to have the value None.\"\n          items:\n            $ref: '#/components/schemas/EvcEgressMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        colorMap:\n          description: \"MEF 10.4 sec. 10.6 - The value of the EVC EP Color Map Service\\\n            \\ Attribute is a pair of the form ?F, M? where: F is one of the values\\\n            \\ ENDPOINT, DEI, PCP, or DSCP and M is a map that can be used to assign\\\n            \\ Color to each Ingress Service Frame. (The form of M depends on the value\\\n            \\ of F.). The EVC EP Color Map Service Attribute is the mechanism by which\\\n            \\ the Color for an Ingress Service Frame that is mapped to an EVC EP is\\\n            \\ indicated by the content in the Service Frame header.\"\n          $ref: '#/components/schemas/ColorFrom'\n        ingressClassOfServiceMap:\n          description: \"MEF 10.4 sec. 10.5 and MEF 45.1 sec. 6.2 - The value of the\\\n            \\ EVC EP Ingress Class of Service Map Service Attribute is a 3-tuple of\\\n            \\ the form ?F, M, P? where: F is one of the values ENDPOINT, C_TAG_PCP,\\\n            \\ or DSCP, M is a map that can be used to assign Class of Service Names\\\n            \\ to Service Frames. (The form of M depends on the value of F.), and P\\\n            \\ is a map with entries of the form ?Layer 2 Control Protocol type ? Class\\\n            \\ of Service Name? where the Layer 2 Control Protocol type is determined\\\n            \\ by the Protocol Identifier (see Section 6.2 of MEF 45.1).\"\n          $ref: '#/components/schemas/CosFrom'\n        ingressBandwidthProfilePerClassofServiceName:\n          description: \"MEF 10.4 sec. 10.9 - The EVC EP Class of Service Name Ingress\\\n            \\ Bandwidth Profile Service Attribute is used to limit the rate of Ingress\\\n            \\ Service Frames with a given Class of Service Name at a UNI. The value\\\n            \\ is None or a non-empty list of pairs of the form ?x,y?, where x is a\\\n            \\ Class of Service Name that is in the value of the EVC List of Class\\\n            \\ of Service Names Service Attribute and y = BWP Flow Parameters. If this\\\n            \\ property is not present or an empty list, the value is assumed to have\\\n            \\ the value None.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpNotEpl:\n      description: This set of EVC End Point Service Attributes are applicable to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        sourceAddressMacLimit:\n          description: \"MEF 10.4 sec. 10.12 - The value of the EVC EP Source MAC Address\\\n            \\ Limit Service Attribute is either None or the pair ?N, t ? where N is\\\n            \\ an integer ?1 and t is a time duration. When the value of the EVC EP\\\n            \\ Source MAC Address Limit Service Attribute = ?N, t? the number of source\\\n            \\ MAC Addresses that can be used in Ingress Service Frames is limited.\\\n            \\ If this property is not present or an empty list, the value is assumed\\\n            \\ to have the value None.\"\n          items:\n            $ref: '#/components/schemas/SourceMacAddressLimit'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        egressBandwidthProfilePerClassofServiceName:\n          description: \"MEF 10.4 sec. 10.11 - The EVC EP Class of Service Name Egress\\\n            \\ Bandwidth Profile Service Attribute is used to limit the rate of all\\\n            \\ Egress Service Frames with a given Class of Service Name, as determined\\\n            \\ at the ingress UNI for each frame per the EVC EP Ingress Class of Service\\\n            \\ Map Service Attribute (MEF 10.4 Section 10.5). The value of the EVC\\\n            \\ EP Class of Service Name Egress Bandwidth Profile Service Attribute\\\n            \\ is either None or a non-empty list of pairs of the form ?x, y? where\\\n            \\ x is a Class of Service Name contained in the value of the EVC List\\\n            \\ of Class of Service Names Service Attribute (MEF 10.4 Section 8.7) but\\\n            \\ not equal to Discard and y= the 3-tuple ?CIR, CIRmax, ER? where the\\\n            \\ elements of the 3-tuple are defined in MEF 10.4 Section 12.1.2. If this\\\n            \\ property is not present or an empty list, the value is assumed to have\\\n            \\ the value None.\"\n          items:\n            $ref: '#/components/schemas/BandwidthProfilePerClassOfServiceName'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        evcEndPointEnvelopes:\n          description: \"The Envelopes and Envelope Coupling Flag values to which Bandwidth\\\n            \\ Profile Flows for this EVC End Point can be mapped. Value is list of\\\n            \\ {envelopeID, couplingFlagForIndexZero}. Envelopes listed in the EVC\\\n            \\ End Point Envelopes Service Attribute can be used when all of the Bandwidth\\\n            \\ Profile Flows contained in the Envelope are specific to a given OVC\\\n            \\ End Point. They are specified using one of the following EVC End Point\\\n            \\ Service Attributes: Ingress Bandwidth Profile Per EVC End Point Egress\\\n            \\ Bandwidth Profile Per EVC End Point Ingress Bandwidth Profile Per Class\\\n            \\ of Service Name Egress Bandwidth Profile Per Egress Equivalence Class\\\n            \\ Name  To create an Envelope containing Bandwidth Profile Flows for more\\\n            \\ than one EVC End Point, the UNI Envelopes Service Attribute must be\\\n            \\ used.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    CarrierEthernetEvcEpVirtualPrivate:\n      properties:\n        evcEndPointMap:\n          $ref: '#/components/schemas/EndPointMapEvc'\n      type: object\n    CarrierEthernetEvcNotEpl:\n      description: These are the MEF 10.4 EVC Service Attributes that are common to\n        all Subscriber (EVC-based) Ethernet Services defined in MEF 6.3 based on the\n        Service Attributes in MEF 10.4 - except EPL.\n      properties:\n        frameDisposition:\n          $ref: '#/components/schemas/FrameDisposition'\n      type: object\n    CarrierEthernetOperatorUni:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/OperatorUniCommon'\n      x-discriminator-value: urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v3.0.0:all\n    CarrierEthernetPhysicalLink:\n      description: \"A 2-tuple of the form ?id, physicalLink?. The value of id is an\\\n        \\ identifier for the physical link. The value of physicalLink is the specific\\\n        \\ Ethernet physical layer type.\"\n      properties:\n        physicalLink:\n          description: An Ethernet physical layer\n          $ref: '#/components/schemas/PhysicalLink'\n        id:\n          description: An identifier for the physical link.\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n      type: object\n    CarrierEthernetSls:\n      description: \"The Service Level Specification Service Attribute (SLS) is, as\\\n        \\ part of the Service Level Agreement, the technical details of the service\\\n        \\ level, in terms of Performance Objectives, agreed between the Service Provider\\\n        \\ and the Subscriber for Subscriber Ethernet Services and between the SP/SO\\\n        \\ and Operator for Operator Ethernet Services. . A given SLS might contain\\\n        \\ 0, 1, or more Performance Objectives for each Performance Metric. The SLS\\\n        \\ is described in section 8.8 (EVC Service Level Specification Service Attribute)\\\n        \\ of MEF 10.4 for EVCs and section 12.13 (OVC Service Level Specification\\\n        \\ Service Attribute) for OVCs. MEF 10.4 defines 10 Performance Metrics (all\\\n        \\ of which are included here). MEF 26.2 defines only 9 Performance Metrics.\\\n        \\ MEF 26.2 does not include the One Way Composite PM. The other 9 are the\\\n        \\ same.\"\n      properties:\n        slsCosNameEntry:\n          description: MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - This is a list\n            of Performance Metrics. Each entry contains a set of parameters and Performance\n            Metrics one one Class of Service.\n          items:\n            $ref: '#/components/schemas/SlsCosNameEntry'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        startTime:\n          $ref: '#/components/schemas/Time'\n        timeDuration:\n          $ref: '#/components/schemas/LongDuration'\n      type: object\n    CarrierEthernetSubscriberUni:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/SubscriberUniCommon'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.2.0:all\n    CarrierEthernetVpEvcCommon:\n      description: \"These are the MEF 10.4 EVC Service Attributes that are common\\\n        \\ to all Virtual Private Subscriber (EVC-based) Ethernet Services (EVPL, EVP-LAN,\\\n        \\ EVP_TREE) defined in MEF 6.3.\"\n      properties:\n        cTagPcpPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n        cTagDeiPreservation:\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    CcDei:\n      description: One of the possible values for the OVC Egress Map. This indicates\n        that the Color is mapped to the DEI field of the Egress Frame. Note that the\n        Enums used for the DEI values include DISCARD as a value.\n      properties:\n        deiGeen:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        deiYellow:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI\n            Frame.\n          type: string\n      type: object\n    CcPcp:\n      description: One of the possible values for the OVC Egress Map. This indicates\n        that the Class of Service and Color are mapped to the PCP field of the Egress\n        Frame. Note that the Enums used for the PCP values include DISCARD as a value.\n      properties:\n        pcpYellow:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI\n            Frame.\n          type: string\n        pcpGreen:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    CeVlanIdPreservation:\n      description: \"MEF 26.2 sec. 12.7 - Determines whether the C-tag in the Ingress\\\n        \\ Frame is Stripped or Preserved in the Egress Frame. Per MEF 51.1, the Operator\\\n        \\ must support PRESERVE and should support STRIP.\"\n      enum:\n      - PRESERVE\n      - STRIP\n      - RETAIN\n      type: string\n    CnPcp:\n      description: \"This is a 2-tuple ?x,y? where x is a Class of Service Name and\\\n        \\ y is a PCP Value or DISCARD.\"\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        cosName:\n          description: The class of service name for the corresponding Ingress EI\n            Frame.\n          type: string\n      type: object\n    ColorFrom:\n      discriminator:\n        mapping:\n          DSCP: '#/components/schemas/ColorFromDscp'\n          ENDPOINT: '#/components/schemas/ColorFromEp'\n          PCP: '#/components/schemas/ColorFromPCP'\n          DEI: '#/components/schemas/ColorFromDei'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n          - DSCP\n          - ENDPOINT\n          - PCP\n          - DEI\n          type: string\n      required:\n      - mapType\n      type: object\n    ColorFromDei:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"This Class is referenced when the color comes from the S-tag\\\n          \\ or C-tag DEI field. MEF 26.2 requires that DEI=0 means Green and DEI=1\\\n          \\ means Yellow, so no map is needed.\"\n        type: object\n      x-discriminator-value: DEI\n    ColorFromDscp:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"This Class is referenced when the color comes from the DSCP\\\n          \\ field. It is a list of DSCP Entries where each entry has three components:\\\n          \\ (1) A list of DSCP values, (2) a color for IPv4 packets with one of those\\\n          \\ DSCP values, and (3) a color for IPv6 packets with one of those DSCP values.\\\n          \\ Any DSCP value that is not specified and any Frame that does not include\\\n          \\ an IP packet is Green..\"\n        properties:\n          colorFromDscpMap:\n            items:\n              $ref: '#/components/schemas/ColorFromDscpEntry'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: DSCP\n    ColorFromDscpEntry:\n      properties:\n        ipv6Color:\n          $ref: '#/components/schemas/FrameColor'\n        dscpList:\n          description: This is a list of DSCP values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n        ipv4Color:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorFromEp:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"The color of each Ingress Frame is determined solely from the\\\n          \\ EVC or OVC End Point. In other words, the EP declares all frames GREEN\\\n          \\ or all frame YELLOW\"\n        properties:\n          epColor:\n            $ref: '#/components/schemas/FrameColor'\n        type: object\n      x-discriminator-value: ENDPOINT\n    ColorFromPCP:\n      allOf:\n      - $ref: '#/components/schemas/ColorFrom'\n      - description: \"This Class is referenced when the color comes from the S-tag\\\n          \\ or C-tag PCP field. Each of the 8 possible PCP values maps to a color.\\\n          \\ If there is no tag, the frame is Green.\"\n        properties:\n          colorFromPcpMap:\n            description: \"This is a list of 8 Color mappings, one for each PCP value.\"\n            items:\n              $ref: '#/components/schemas/ColorFromPCPMapEntry'\n            maxItems: 8\n            minItems: 8\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: PCP\n    ColorFromPCPMapEntry:\n      properties:\n        pcpValue:\n          $ref: '#/components/schemas/PcpValue'\n        pcpColor:\n          $ref: '#/components/schemas/FrameColor'\n      type: object\n    ColorMode:\n      description: MEF 26.2 sec. 17.1.2 and MEF 10.4 sec. 12.1.2 - colorMode indicates\n        whether or not External Interface Frames for this Bandwidth Profile Flow that\n        are identified as Yellow on input to the Bandwidth Profile Algorithm can be\n        declared Green.\n      enum:\n      - COLOR_BLIND\n      - COLOR_AWARE\n      type: string\n    ConversationIdRange:\n      description: \"A range of ConversationID (either a VLAN Id or 0 for untagged\\\n        \\ frames)  allowing three forms: start, start ? start, and start ? end\"\n      properties:\n        start:\n          description: The starting Conversation ID of the range or the only Conversation\n            ID if there is no end value\n          maximum: 4094\n          minimum: 0\n          type: integer\n        end:\n          description: The final Conversation ID in the range\n          maximum: 4094\n          minimum: 0\n          type: integer\n      type: object\n    ConversationIdToAggregationLinkMap:\n      description: \"This is a 2-tuple ?x,y? where x is a list of Port Conversation\\\n        \\ IDs or ranges of Port Conversation IDs (a Port Conversation ID is a VLAN\\\n        \\ ID or 0 for untagged frames) and y is a list of Link Numbers. This is used\\\n        \\ in the Port Conversation to Aggregation Link Map for the UNI and ENNI.\"\n      properties:\n        conversationIDs:\n          description: 802.1AX-2014 sec. 6.6.2.1 - A Port Conversation ID is a VLAN\n            ID (1 to 4094) or 0 to represent untagged and priority-tagged frames.\n          items:\n            $ref: '#/components/schemas/ConversationIdRange'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        aggLinkList:\n          description: 802.1AX-2014 sec. 6.6.2.1 - An ordered list of Aggregation\n            Link Numbers\n          items:\n            minimum: 1\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    CosDscpMap:\n      description: This is a list of DSCP to CoS Name Entries followed by items for\n        Not an IP Packet and All Other Values.\n      properties:\n        dscpValueCoSList:\n          description: \"This is a list of DSCP to CoS Map Entries: {ipv4DSCPs, ipv6DSCPs,\\\n            \\ CoSName}\"\n          items:\n            $ref: '#/components/schemas/CosDscpMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        notIP:\n          description: This is the CoS Name for packets that are not IP packets when\n            CoS is determined from DSCP\n          type: string\n        otherIPv6:\n          description: This is the CoS Name for IPv6 packets with DSCP values other\n            than those listed.\n          type: string\n        otherIPv4:\n          description: This is the CoS Name for IPv4 packets with DSCP values other\n            than those listed.\n          type: string\n      type: object\n    CosDscpMapEntry:\n      description: \"This is a 3-tuple {ipv4list, ipv6list, cosName}\"\n      properties:\n        ipv4List:\n          $ref: '#/components/schemas/DscpValues'\n        ipv6List:\n          $ref: '#/components/schemas/DscpValues'\n        cosName:\n          type: string\n      type: object\n    CosEnniPcpMapEntry:\n      description: \"2-tuple {PCP, CoSName} that maps a CoS Name or DISCARD to a PCP.\"\n      properties:\n        pcpVal:\n          $ref: '#/components/schemas/PcpValue'\n        pcpCosName:\n          type: string\n      type: object\n    CosFrom:\n      discriminator:\n        mapping:\n          DSCP: '#/components/schemas/CosFromDscp'\n          ENDPOINT: '#/components/schemas/CosFromEp'\n          S_TAG_PCP: '#/components/schemas/CosFromStagPcp'\n          C_TAG_PCP: '#/components/schemas/CosFromCtagPcp'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The Field that indicates F = S_TAG_PCP.\n          enum:\n          - DSCP\n          - ENDPOINT\n          - S_TAG_PCP\n          - C_TAG_PCP\n          type: string\n      required:\n      - mapType\n      type: object\n    CosFromCtagPcp:\n      allOf:\n      - $ref: '#/components/schemas/CosFrom'\n      - description: \"Ingress CoS is specified as {F,M,P}. This is when F=C_TAG_PCP.\\\n          \\ This maps each of the 8 PCP values in the C-tag to a Class of Service\\\n          \\ Name. It also maps UNTAGGED frames to a Class of Service Name.\"\n        properties:\n          map_M:\n            description: This maps each of the possible C-tag PCP values (0-7) and\n              Untagged to a specific CoS Name.\n            items:\n              $ref: '#/components/schemas/CosUniPcpMapEntry'\n            maxItems: 9\n            minItems: 9\n            type: array\n            uniqueItems: true\n          l2cp_P:\n            description: This specifies the CoS Name for L2CPs carried over the OVC.\n            items:\n              $ref: '#/components/schemas/CosL2cp'\n            minItems: 0\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: C_TAG_PCP\n    CosFromDscp:\n      allOf:\n      - $ref: '#/components/schemas/CosFrom'\n      - description: \"Ingress CoS is specified as {F,M,P}. This is when F=DSCP. This\\\n          \\ maps groups of DSCP values (independently for ipV4 and ipV6) to a Class\\\n          \\ of Service. It also provides a Class of Service mapping for DSCP values\\\n          \\ that are not specified and for frames that do not contain IP Packets.\"\n        properties:\n          map_M:\n            $ref: '#/components/schemas/CosDscpMap'\n          l2cp_P:\n            description: This specifies the CoS Names for L2CPs carried over the EVC/OVC.\n            items:\n              $ref: '#/components/schemas/CosL2cp'\n            minItems: 0\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: DSCP\n    CosFromEp:\n      allOf:\n      - $ref: '#/components/schemas/CosFrom'\n      - description: \"Ingress CoS is specified as {F,M,P}. This is when F=OVC_EP or\\\n          \\ EVC_EP as appropriate.\"\n        properties:\n          map_M:\n            description: The single CoS Name at this EVC/OVC EP\n            type: string\n          l2cp_P:\n            description: This specifies the CoS Name for L2CPs carried over the EVC/OVC.\n            items:\n              $ref: '#/components/schemas/CosL2cp'\n            minItems: 0\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: ENDPOINT\n    CosFromStagPcp:\n      allOf:\n      - $ref: '#/components/schemas/CosFrom'\n      - description: \"Ingress CoS is specified as {F,M,P}. This is when F=S_TAG_PCP.\\\n          \\ This maps each of the 8 PCP values in the S-tag to a Class of Service\\\n          \\ Name.\"\n        properties:\n          map_M:\n            description: A list of 8 PCP values and their associated CoS Names\n            items:\n              $ref: '#/components/schemas/CosEnniPcpMapEntry'\n            maxItems: 8\n            minItems: 8\n            type: array\n            uniqueItems: true\n          l2cp_P:\n            description: This specifies the CoS Name for L2CPs carried over the OVC.\n            items:\n              $ref: '#/components/schemas/CosL2cp'\n            minItems: 0\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: S_TAG_PCP\n    CosL2cp:\n      description: \"2-tuple {L2CP Ident, CoS Name}\"\n      properties:\n        l2cpIdentifier:\n          $ref: '#/components/schemas/L2cpProtocol'\n        l2cpCosName:\n          description: CoS Name String to associate with the L2CP\n          type: string\n      type: object\n    CosUniPcpMapEntry:\n      description: \"2-tuple {PCP, CoSName} that maps a PCP value (or Untagged) to\\\n        \\ a CoS Name.\"\n      properties:\n        pcpVal:\n          description: A PCP value from 0 to 7 or UNTAGGED\n          $ref: '#/components/schemas/PcpVal'\n        pcpCosName:\n          description: A CoS Name or DISCARD\n          type: string\n      type: object\n    DataSize:\n      description: A value and a unit of measure that specifies a data size for example\n        for a buffer or a burst size.\n      properties:\n        dataSizeUnits:\n          description: \"The unit of measure in the data size. For example, if a burst\\\n            \\ size is 40 KBYTES, this element is KBYTES. Note that the units indicate\\\n            \\ binary values, e.g., KBYTES is 1024 bytes.amd\"\n          $ref: '#/components/schemas/DataSizeUnits'\n        dataSizeValue:\n          description: \"The value in the data size. For example, if a burst size is\\\n            \\ 40 KBYTES, this element is 40.\"\n          type: integer\n      type: object\n    DataSizeUnits:\n      description: \"The unit of measure in the data size. For example, if a burst\\\n        \\ size is 40 KBYTES, this element is KBYTES. Note that the units indicate\\\n        \\ binary values, e.g., KBYTES is 1024 bytes.amd\"\n      enum:\n      - BYTES\n      - KBYTES\n      - MBYTES\n      - GBYTES\n      - TBYTES\n      - PBYTES\n      - EBYTES\n      - ZBYTES\n      - YBYTES\n      type: string\n    DeiFromCosColor:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: The DEI Field in the Egress EI Frame is determined from the Class\n          of Service and the Frame Color. This is a list that contains an entry for\n          Class of Service Name that includes the CoS Name and the DEI value (or DISCARD)\n          to use for Green frames and the DEI value (or DISCARD) to use for Yellow\n          Frames. For example CoS=Platinum and Color=Green --\u003e DEI = 1 and Color=Yellow\n          --\u003e DEI = 0. This affects the C-tag at the UNI and the S-tag at the ENNI.\n        properties:\n          ccDeiEntries:\n            description: \"A list of entries, one per CoS, that specifies the DEI value\\\n              \\ for Green frames and Yellow frames.\"\n            items:\n              $ref: '#/components/schemas/CcDei'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CC_DEI\n    DeiValueAndDiscard:\n      enum:\n      - \"0\"\n      - \"1\"\n      - DISCARD\n      type: string\n    DscpValues:\n      description: A list of 6 bit values\n      properties:\n        dscpValues:\n          description: A list of unique 6-bit (0-63) values\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    Duration:\n      description: \"A Duration in a given unit of time e.g. 3 hours, or 5 days.\"\n      properties:\n        amount:\n          description: \"Duration (number of seconds, minutes, hours, etc.)\"\n          type: integer\n        units:\n          $ref: '#/components/schemas/TimeUnit'\n      required:\n      - amount\n      - units\n      type: object\n    EnabledDisabled:\n      description: Enumeration to indicate Enabled/Disabled state of an attribute\n      enum:\n      - ENABLED\n      - DISABLED\n      type: string\n    EndPointMapEvc:\n      description: \"MEF 10.4 sec. 10.4 - This is specifications for which Service\\\n        \\ Frames are mapped to the EVC End Point. The allowed values in MEF 10.4 are\\\n        \\ ALL, LIST, and UT/PT. Since Private services must be ALL, the map isn't\\\n        \\ needed for those services, and therefore the type does not include ALL.\\\n        \\ If the type is LIST there must be a list of VLAN IDs specified.\"\n      properties:\n        vlanId:\n          description: A list of VLAN IDs if the value of vlanType is \"LIST\"\n          items:\n            maximum: 4094\n            minimum: 1\n            type: integer\n          maxItems: 4094\n          minItems: 1\n          type: array\n          uniqueItems: true\n        vlanType:\n          description: An indication of the type EVC End Point Map. If the value is\n            UT/PT then no additional information is required. If the value is LIST\n            then a list of C-VLAN ID values must be specified.\n          $ref: '#/components/schemas/VlanType'\n      type: object\n    EndPointMapForm:\n      discriminator:\n        mapping:\n          FORM_E: '#/components/schemas/EndPointMapFormE'\n          FORM_U: '#/components/schemas/EndPointMapFormU'\n        propertyName: mapType\n      properties:\n        mapType:\n          description: The discriminator for Map Type U\n          enum:\n          - FORM_E\n          - FORM_U\n          type: string\n      required:\n      - mapType\n      type: object\n    EndPointMapFormE:\n      allOf:\n      - $ref: '#/components/schemas/EndPointMapForm'\n      - description: MEF 10.4 sec. 16.5.1 - The value of an End Point Map of Form\n          E (E for ENNI) consists of a list of one or more SVLAN ID values. An S-Tagged\n          ENNI Frame whose S-VLAN ID value matches an entry in the list maps to the\n          OVC End Point.\n        properties:\n          ovcEndPointMapFormE:\n            description: A list of S-VLAN ID values at the ENNI.\n            items:\n              maximum: 4094\n              minimum: 1\n              type: integer\n            maxItems: 4094\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: FORM_E\n    EndPointMapFormU:\n      allOf:\n      - $ref: '#/components/schemas/EndPointMapForm'\n      - description: MEF 10.4 sec. 16.5.4 - The EndPointMapFormU object class represents\n          the OVC End Point  Map Form U (U for UNI). It is a list of one or more CE-VLAN\n          IDs.\n        properties:\n          ovcEndPointMapFormU:\n            description: A list of C-VLAN ID values at the UNI.\n            items:\n              maximum: 4094\n              minimum: 1\n              type: integer\n            maxItems: 4094\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: FORM_U\n    Envelope:\n      description: Bandwidth Profiles are organized into Envelopes. Multiple Bandwidth\n        Profiles in an envelope can share bandwidth resources. Each Envelope has a\n        name and a Coupling Flag for Index Zero (CF0) that indicates whether unused\n        green tokens are discarded or converted to yellow tokens. All Bandwidth Profile\n        Flows in the same envelope satisfy the same criterion listed in R230 of MEF\n        26.2.\n      properties:\n        couplingFlagForIndexZero:\n          description: MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - This attribute\n            denotes the coupling flag for index zero. FALSE for 0 (overflow Green\n            tokens are discarded) and TRUE for 1 (overflow Green tokens can be used\n            as Yellow tokens).\n          type: boolean\n        envelopeID:\n          description: MEF 10.4 sec. 9.12 and MEF 26.2 sec. 14.19 - The attribute\n            is a string that identifies the Envelope\n          maxLength: 45\n          minLength: 1\n          pattern: \"[ -\\x7f]+\"\n          type: string\n      type: object\n    Epl:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - properties:\n          evcEndPointA:\n            $ref: '#/components/schemas/EplEvcEndPoint'\n          evcEndPointZ:\n            $ref: '#/components/schemas/EplEvcEndPoint'\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:epl:v0.2.0:all\n    EplEvcEndPoint:\n      allOf:\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      description: An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point Service\n        Attributes are the attributes of an EVC that can be different at each UNI\n        in the EVC. These are the EVC End Point Service Attributes applicable to Ethernet\n        Private Line (EPL) Services defined in MEF 6.3 based on the Service Attributes\n        in MEF 10.4.\n    Eplan:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eplan:v0.2.0:all\n    EplanEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.2.0:all\n    Eptree:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eptree:v0.2.0:all\n    EptreeEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.2.0:all\n    Error:\n      description: |\n        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.\n      properties:\n        reason:\n          description: Text that explains the reason for the error. This can be shown\n            to a client user.\n          maxLength: 255\n          type: string\n        message:\n          description: Text that provides mode details and corrective actions related\n            to the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n      - reason\n      type: object\n    Error400:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error400Code'\n        required:\n        - code\n        type: object\n      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)\n    Error400Code:\n      description: |-\n        One of the following error codes:\n        - missingQueryParameter: The URI is missing a required query-string parameter\n        - missingQueryValue: The URI is missing a required query-string parameter value\n        - invalidQuery: The query section of the URI is invalid.\n        - invalidBody: The request has an invalid body\n      enum:\n      - missingQueryParameter\n      - missingQueryValue\n      - invalidQuery\n      - invalidBody\n      type: string\n    Error401:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error401Code'\n        required:\n        - code\n        type: object\n      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n      - missingCredentials\n      - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error403Code'\n        required:\n        - code\n        type: object\n      description: Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n      - accessDenied\n      - forbiddenRequester\n      - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - notFound: A current representation for the target resource not found\n            enum:\n            - notFound\n            type: string\n        required:\n        - code\n        type: object\n      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error409:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - conflict: The client has provided a value whose semantics are not appropriate for the property.\n            enum:\n            - conflict\n            type: string\n        required:\n        - code\n        type: object\n      description: Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)\n    Error422:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error422Code'\n          propertyPath:\n            description: |\n              A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\n              Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n            type: string\n        required:\n        - code\n        type: object\n      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n      - missingProperty\n      - invalidValue\n      - invalidFormat\n      - referenceNotFound\n      - unexpectedProperty\n      - tooManyRecords\n      - otherIssue\n      type: string\n    Error500:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.\n            enum:\n            - internalError\n            type: string\n        required:\n        - code\n        type: object\n      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Error501:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - notImplemented: Method not supported by the server\n            enum:\n            - notImplemented\n            type: string\n        required:\n        - code\n        type: object\n      description: Not Implemented. Used in case Seller is not supporting an optional\n        operation (https://tools.ietf.org/html/rfc7231#section-6.6.2)\n    EvcEgressMap:\n      description: \"This map is a table with one entries for each CosName, that includes\\\n        \\ the CoSName, a PCP value for green frames, a PCP value for yellow frames,\\\n        \\ a DEI value for green frames and a DEI value for yellow frames. Any of the\\\n        \\ values can be DISCARD (in which case they are all treated as DISCARD). This\\\n        \\ table is used at the UNI for EVCs.\"\n      properties:\n        evcEgressMapEntries:\n          items:\n            $ref: '#/components/schemas/EvcEgressMapEntry'\n          minItems: 0\n          type: array\n          uniqueItems: true\n      type: object\n    EvcEgressMapEntry:\n      description: \"A row in the EVC Egress Map. Contains a CoSName, PCPGreen, PCPYellow,\\\n        \\ DEIGreen, DEIYellow\"\n      properties:\n        pcpYellow:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n        deiYellow:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        cosName:\n          type: string\n        deiGreen:\n          $ref: '#/components/schemas/DeiValueAndDiscard'\n        pcpGreen:\n          $ref: '#/components/schemas/PcpValueAndDiscard'\n      type: object\n    EventSubscription:\n      description: |\n        This resource is used to respond to notification subscriptions.\n      properties:\n        query:\n          description: The value provided by the Buyer in `EventSubscriptionInput`\n            during notification registration\n          type: string\n        callback:\n          description: The value provided by the Buyer in `EventSubscriptionInput`\n            during notification registration\n          type: string\n        id:\n          description: An identifier of this Event Subscription assigned by the Seller\n            when a resource is created.\n          type: string\n      required:\n      - callback\n      - id\n      type: object\n    EventSubscriptionInput:\n      description: This class is used to register for Notifications.\n      properties:\n        query:\n          description: \"This attribute is used to define to which type of events to\\\n            \\ register to. Example: \\\"query\\\":\\\"eventType = productOrderStateChangeEvent\\\"\\\n            . To subscribe for more than one event type, put the values separated\\\n            \\ by comma: `eventType=productOrderStateChangeEvent,productOrderItemStateChangeEvent`.\\\n            \\ The possible values are enumerated by 'ProductOrderEventType', `CancelProductOrderEventType`\\\n            \\ in productOrderNotification.api.yaml. An empty query is treated as specifying\\\n            \\ no filters - ending in subscription for all event types.\"\n          type: string\n        callback:\n          description: \"This callback value must be set to *host* property from Buyer\\\n            \\ Product Order Notification API (productOrderNotification.api.yaml).\\\n            \\ This property is appended with the base path and notification resource\\\n            \\ path specified in that API to construct an URL to which notification\\\n            \\ is sent. E.g. for \\\"callback\\\": \\\"https://buyer.co/listenerEndpoint\\\"\\\n            , the product order state change event notification will be sent to: `https://buyer.co/listenerEndpoint/mefApi/sonata/productOrderNotification/v8/listener/productOrderStateChangeEvent`\"\n          type: string\n      required:\n      - callback\n      type: object\n    Evpl:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      - properties:\n          evcEndPointA:\n            $ref: '#/components/schemas/EvplEvcEndPoint'\n          evcEndPointZ:\n            $ref: '#/components/schemas/EvplEvcEndPoint'\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evpl:v0.2.0:all\n    EvplEvcEndPoint:\n      allOf:\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      description: An EVC End Point is a logical entity at a given UNI that is associated\n        with a distinct set of frames passing over that UNI. EVC End Point Service\n        Attributes are the attributes of an EVC that can be different at each UNI\n        in the EVC. These are the EVC End Point Service Attributes applicable to Ethernet\n        Virtual Private Line (EVPL) Services defined in MEF 6.3 based on the Service\n        Attributes in MEF 10.4.\n    Evplan:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evplan:v0.2.0:all\n    EvplanEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.2.0:all\n    Evptree:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetVpEvcCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evptree:v0.2.0:all\n    EvptreeEndpoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpCommon'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpVirtualPrivate'\n      - $ref: '#/components/schemas/CarrierEthernetEvcEpNotEpl'\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.2.0:all\n    FieldedAddress:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          country:\n            description: Country that the address is in\n            type: string\n          streetType:\n            description: \"The type of street (e.g., alley, avenue, boulevard, brae,\\\n              \\ crescent, drive, highway, lane, terrace, parade, place, tarn, way,\\\n              \\ wharf)\"\n            type: string\n          postcodeExtension:\n            description: An extension of a postal code. E.g. the part following the\n              dash in a US urban property address\n            type: string\n          city:\n            description: The city that the address is in\n            type: string\n          streetNr:\n            description: Number identifying a specific property on a public street.\n              It may be combined with streetNrLast for ranged addresses. MEF 79 defines\n              it as required however as in certain countries it is not used we make\n              it optional in API.\n            type: string\n          locality:\n            description: The locality that the address is in\n            type: string\n          postcode:\n            description: \"Descriptor for a postal delivery area, used to speed and\\\n              \\ simplify the delivery of mail (also known as zip code)\"\n            type: string\n          streetNrLast:\n            description: Last number in a range of street numbers allocated to a property\n            type: string\n          streetNrSuffix:\n            description: The first street number suffix\n            type: string\n          streetName:\n            description: Name of the street or other street type\n            type: string\n          stateOrProvince:\n            description: The State or Province that the address is in\n            type: string\n          streetNrLastSuffix:\n            description: Last street number suffix for a ranged address\n            type: string\n          geographicSubAddress:\n            $ref: '#/components/schemas/GeographicSubAddress'\n          streetSuffix:\n            description: A modifier denoting a relative direction\n            type: string\n        required:\n        - city\n        - country\n        - streetName\n        type: object\n      description: \"A type of Address that has a discrete field and value for each\\\n        \\ type of boundary or identifier down to the lowest level of detail. For example\\\n        \\ \\\"street number\\\" is one field, \\\"street name\\\" is another field, etc. Reference:\\\n        \\ MEF 79 (Sn 8.9.2)\"\n    FormattedAddress:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          country:\n            description: Country that the address is in\n            type: string\n          postcodeExtension:\n            description: An extension of a postal code. E.g. the part following the\n              dash in an US urban property address\n            type: string\n          stateOrProvince:\n            description: The State or Province that the address is in\n            type: string\n          city:\n            description: The city that the address is in\n            type: string\n          addrLine2:\n            description: The second address line in a formatted address\n            type: string\n          addrLine1:\n            description: The first address line in a formatted address\n            type: string\n          locality:\n            description: \"An area of defined or undefined boundaries within a local\\\n              \\ authority or other legislatively defined area, usually rural or semi-rural\\\n              \\ in nature\"\n            type: string\n          postcode:\n            description: \"Descriptor for a postal delivery area, used to speed and\\\n              \\ simplify the delivery of mail (also known as ZIP code)\"\n            type: string\n        required:\n        - addrLine1\n        - city\n        - country\n        type: object\n      description: \"A type of Address that has discrete fields for each type of boundary\\\n        \\ or identifier with the exception of street and more specific location details,\\\n        \\ which are combined into a maximum of two strings based on local postal addressing\\\n        \\ conventions. Reference: MEF 79 (Sn 8.9.3)\"\n    FrameColor:\n      enum:\n      - GREEN\n      - YELLOW\n      type: string\n    FrameDispEnum:\n      enum:\n      - DISCARD\n      - DELIVER_UNCONDITIONALLY\n      - DELIVER_CONDITIONALLY\n      type: string\n    FrameDisposition:\n      description: \"A 3-tuple that indicates how Unicast, Multicast, and Broadcast\\\n        \\ Frames are delivered by the service. For each, the value can be UNCONDITIONAL,\\\n        \\ the frames are delivered without condition, CONDITIONAL, the frames are\\\n        \\ delivered based on conditions agreed to between buyer and seller (e.g.,\\\n        \\ based on learned addresses), and DISCARD.\"\n      properties:\n        broadcast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        unicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n        multicast:\n          $ref: '#/components/schemas/FrameDispEnum'\n      type: object\n    GeographicAddressLabel:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          externalReferenceId:\n            description: A reference to an address by id\n            type: string\n          externalReferenceType:\n            description: Uniquely identifies the authority that specifies the addresses\n              reference and/or its type (if the authority specifies more than one\n              type of address). The value(s) to be used are to be agreed during the\n              onboarding. For North American providers this would normally be CLLI\n              (Common Language Location Identifier) code.\n            type: string\n        required:\n        - externalReferenceId\n        - externalReferenceType\n        type: object\n      description: \"A unique identifier controlled by a generally accepted independent\\\n        \\ administrative authority that specifies a fixed geographical location. \\n\\\n        Reference: MEF 79 (Sn 8.9.4)\"\n    GeographicAddressRef:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          href:\n            description: |\n              Hyperlink to the referenced GeographicAddress. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n            type: string\n          id:\n            description: Identifier of the referenced Geographic Address. This identifier\n              is assigned during a successful address validation request (Geographic\n              Address Validation API)\n            type: string\n        required:\n        - id\n        type: object\n      description: |\n        A reference to a Geographic Address resource available through Address Validation API.\n    GeographicSiteRef:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          href:\n            description: |\n              Hyperlink to the referenced GeographicSite. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n            type: string\n          id:\n            description: Identifier of the referenced Geographic Site.\n            type: string\n        required:\n        - id\n        type: object\n      description: |\n        A reference to a Geographic Site resource available through Service Site API\n    GeographicSubAddress:\n      description: \"Additional fields used to specify an address, as detailed as possible.\"\n      properties:\n        buildingName:\n          description: |\n            Allows for identification of places that require building name  as part of addressing information\n          type: string\n        subUnit:\n          description: \"Representation of a MEFSubUnit It is used for describing subunit\\\n            \\ within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\\\n            \\ WHARF.\"\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n        levelType:\n          description: Describes level types within a building\n          type: string\n        levelNumber:\n          description: \"Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\\\n            \\ 2\"\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        privateStreetName:\n          description: '\"Private streets internal to a property (e.g. a university)\n            may have internal names that are not recorded by the land title office'\n          type: string\n      type: object\n    InformationRate:\n      description: A value and a unit of measure that specifies an Information Rate.\n      properties:\n        irValue:\n          description: The value in the information rate. For example if the information\n            rate is 70 kbps this element is 70.\n          minimum: 0\n          type: number\n        irUnits:\n          description: \"The unit of measure for the Information Rate. For example\\\n            \\ if the Information Rate is 70KBPS this element is KBPS. Note that the\\\n            \\ values are decimal values. 1 KBPS is 1000 bits per second and 1MBPS\\\n            \\ is 1,000,000 bits per second.\"\n          $ref: '#/components/schemas/IrUnits'\n      type: object\n    Instantiation:\n      description: \"MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is implemented\\\n        \\ using one or more instances of a standard Physical Layer. When the value\\\n        \\ is Virtual, the physical layer is not specified.\"\n      enum:\n      - PHYSICAL\n      - VIRTUAL\n      type: string\n    IrUnits:\n      description: \"The unit of measure for the Information Rate. For example if the\\\n        \\ Information Rate is 70KBPS this element is KBPS. Note that the values are\\\n        \\ decimal values. 1 KBPS is 1000 bits per second and 1MBPS is 1,000,000 bits\\\n        \\ per second.\"\n      enum:\n      - BPS\n      - KBPS\n      - MBPS\n      - GBPS\n      - TBPS\n      - PBPS\n      - EBPS\n      - ZBPS\n      - YBPS\n      type: string\n    L2cpAddressSet:\n      enum:\n      - CTA\n      - CTB\n      - CTB2\n      type: string\n    L2cpPeering:\n      description: This specifies the L2CP Protocol Identifier and the Destination\n        Address in use by the protocol entity. Reference MEF 45.1 Section 8.2 L2CP\n        Peering Service Attribute\n      properties:\n        protocolID:\n          $ref: '#/components/schemas/L2cpProtocol'\n        destinationAddress:\n          description: The Destination MAC Address of the L2CP to be peered in the\n            standard format of 6 hex bytes separated by hyphen (-).\n          pattern: \"[0-9a-fA-F][0-9a-fA-F]([-][0-9a-fA-F][0-9a-fA-F]){5}\"\n          type: string\n        linkIdList:\n          description: Identifiers for the links on which the specified protocol will\n            be peered. If no links are specified the protocol is peered on all links.\n          items:\n            maxLength: 45\n            minLength: 1\n            pattern: \"[ -\\x7f]+\"\n            type: string\n          minItems: 0\n          type: array\n          uniqueItems: false\n      type: object\n    L2cpProtocol:\n      description: Defines a L2CP protocol LLC address type or EtherType with possible\n        subtype. Reference MEF 45.1 Section 8.2 L2CP Peering Service Attribute.\n      properties:\n        l2cpProtocolType:\n          description: The protocol field to inspect to identify the L2CP.\n          $ref: '#/components/schemas/L2cpProtocolType'\n        subType:\n          description: The EtherType can be modified by an optional sub-type.\n          minimum: 0\n          type: integer\n        llcAddressOrEtherType:\n          description: The EtherType value or LLC value\n          minimum: 0\n          type: integer\n      type: object\n    L2cpProtocolType:\n      description: The protocol field to inspect to identify the L2CP.\n      enum:\n      - ETHERTYPE\n      - LLC\n      type: string\n    LinkAggType:\n      description: Type that defines the Link Aggregation types.\n      enum:\n      - NONE\n      - 2_LINK_ACTIVE_STANDBY\n      - ALL_ACTIVE\n      - OTHER\n      type: string\n    LongDuration:\n      description: This class is used to describe durations expressed in days or larger\n        time units\n      properties:\n        longDurationUnits:\n          description: \"The unit of measure in the duration. For example, if an interval\\\n            \\ is 2 weeks, this element is WEEKS.\"\n          $ref: '#/components/schemas/LongDurationUnits'\n        longDurationValue:\n          description: \"The value of the duration. For example, if the duration is\\\n            \\ 20 days, this element is 20.\"\n          type: integer\n      type: object\n    LongDurationUnits:\n      description: \"The unit of measure in the duration. For example, if an interval\\\n        \\ is 2 weeks, this element is WEEKS.\"\n      enum:\n      - DAY\n      - WEEK\n      - MONTH\n      - YEAR\n      type: string\n    MEFAcceptedRejectedType:\n      description: Indicator of acceptance\n      enum:\n      - accepted\n      - rejected\n      type: string\n    MEFBillingAccountRef:\n      description: A reference to the Buyer's Billing Account\n      properties:\n        id:\n          description: Identifies the buyer's billing account to which the recurring\n            and non-recurring charges for this order or order item will be billed.\n            Required if the Buyer has more than one Billing Account with the Seller\n            and for all new Product Orders.\n          type: string\n      required:\n      - id\n      type: object\n    MEFBuyerSellerType:\n      description: Indicates if the note is from Buyer or Seller.\n      enum:\n      - buyer\n      - seller\n      type: string\n    MEFCancelProductOrderRef:\n      description: A reference to a Cancel Product Order instance\n      properties:\n        href:\n          description: Hyperlink to access the Cancel Product Order\n          type: string\n        id:\n          description: A unique identifier of the Cancel Product Order\n          type: string\n      required:\n      - id\n      type: object\n    MEFChargePeriod:\n      description: Used for a recurring charge to indicate period.\n      enum:\n      - hour\n      - day\n      - week\n      - month\n      - year\n      type: string\n    MEFChargeableTaskStateType:\n      description: \"The states as defined by TMF622 and extended to meet MEF requirements.\\n\\\n        \\n| Name                       | MEF 57.2 Name    | Description          \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                       |\\n| -------------------------- |\\\n        \\ ---------------- |n        \\ |\\n| inProgress.assessingCharge | ACCESSING_CHARGE | The Modify Product\\\n        \\ Order Item Requested Delivery Date request results in a Charge being initiated\\\n        \\ by the Seller. The Modify Product Order Item Requested Delivery Date remains\\\n        \\ in this state until the Charge is completed or withdrawn by the Seller.\\\n        \\ All charges within a Charge that was initiated due to a Modify Product Order\\\n        \\ Item Requested Delivery Date are considered Blocking charges. If any charge\\\n        \\ is not accepted by the Buyer, the Modify Product Order Item Requested Delivery\\\n        \\ Date moves from the `inProgress.assessingCharge` state to the `done.declined`\\\n        \\ state. |\\n| acknowledged               | ACKNOWLEDGED     | A Modify Product\\\n        \\ Order Item Requested Delivery Date request has been received and has passed\\\n        \\ basic validation. The Modify Product Order Item Requested Delivery Date\\\n        \\ Identifier is assigned in the `acknowledged` state. Validation of Modify\\\n        \\ Product Order Item Requested Delivery Date attributes as applicable is completed\\\n        \\ in the `acknowledged` state.                                           \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                              |\\n| done                       | COMPLETED\\\n        \\        | A Modify Product Order Item Requested Delivery Date request has\\\n        \\ been received, passed all validations, if a Charge is associated all Charge\\\n        \\ Items have been accepted by the Buyer, and the Product Order Item Completion\\\n        \\ Date has been updated as requested.                                    \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                            |\\n| done.declined\\\n        \\              | DECLINED         | Blocking charges associated with a Modify\\\n        \\ Product Order Item Requested Delivery Date have been declined by the Buyer.\\\n        \\ No updates are made to the Product Order Item.                         \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\                                                                        \\\n        \\               |\\n| rejected                   | REJECTED         | A Modify\\\n        \\ Product Order Item Requested Delivery Date request was submitted by the\\\n        \\ Buyer, and it has failed any validation checks the Seller performs during\\\n        \\ the `acknowledged` state. No updates are made to the referenced Product\\\n        \\ Order Item.                                                            \\\n        \\                                                                        \\\n        \\                                      \\n\"\n      enum:\n      - acknowledged\n      - done\n      - done.declined\n      - inProgress.assessingCharge\n      - rejected\n      type: string\n    MEFEndOfTermAction:\n      description: \"The action the Seller will take once the term expires. \\nRoll\\\n        \\ indicates that the Product's contract will continue on a rolling basis for\\\n        \\ the duration of the Roll Interval at the end of the Term.  \\nAuto-disconnect\\\n        \\ indicates that the Product will be disconnected at the end of the Term.\\\n        \\ \\nAuto-renew indicates that the Product's contract will be automatically\\\n        \\ renewed for the Term Duration at the end of the Term.\"\n      enum:\n      - roll\n      - autoDisconnect\n      - autoRenew\n      type: string\n    MEFGeographicPoint:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          spatialRef:\n            description: The spatial reference system used to determine the coordinates\n              (e.g. \"WGS84\"). The system used and the value of this field are to be\n              agreed during the onboarding process.\n            type: string\n          x:\n            description: The latitude expressed in the format specified by the `spacialRef`\n            type: string\n          \"y\":\n            description: The longitude expressed in the format specified by the `spacialRef`\n            type: string\n          z:\n            description: The elevation expressed in the format specified by the `spacialRef`\n            type: string\n        required:\n        - spatialRef\n        - x\n        - \"y\"\n        type: object\n      description: |\n        A MEFGeographicPoint defines a geographic point through coordinates. Reference: MEF 79 (Sn 8.9.5)\n    MEFItemTerm:\n      description: The term of the Item\n      properties:\n        duration:\n          $ref: '#/components/schemas/Duration'\n        endOfTermAction:\n          $ref: '#/components/schemas/MEFEndOfTermAction'\n        name:\n          description: Name of the term\n          type: string\n        description:\n          description: Description of the term\n          type: string\n        rollInterval:\n          $ref: '#/components/schemas/Duration'\n      type: object\n    MEFModifyProductOrderItemRequestedDeliveryDate:\n      description: A response to a request initiated by the Buyer to modify the Requested\n        Completion Date or the Expedite Indicator of a Product Order Item.\n      properties:\n        expediteIndicator:\n          default: false\n          description: \"Indicates that expedited treatment is requested. Set by the\\\n            \\ Buyer. Default Value = FALSE. If this is set to TRUE, the Buyer sets\\\n            \\ the Requested Completion Date to the expedited date\"\n          type: boolean\n        href:\n          description: |\n            Hyperlink to the modification request. Hyperlink MAY be used by the Seller in responses Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n          type: string\n        id:\n          description: Unique identifier for the MEFModifyProductOrderItemRequestedDeliveryDate\n            that is generated by the Seller when the MEFModifyProductOrderItemRequestedDeliveryDate\n            request is moved to the 'acknowledged' state.\n          type: string\n        orderVersion:\n          description: The version of the Product Order. Set by the Buyer using Seller\n            specified Product Order Version of the Product Order that is to be modified.\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFChargeableTaskStateType'\n        creationDate:\n          description: Date that the Modify Product Order Item Requested Delivery\n            Date was created in the Seller's system and the id was assigned\n          format: date-time\n          type: string\n        productOrderItem:\n          $ref: '#/components/schemas/MEFProductOrderItemRef'\n        requestedCompletionDate:\n          description: Identifies the Buyer's desired due date (requested delivery\n            date)\n          format: date-time\n          type: string\n      required:\n      - creationDate\n      - id\n      - orderVersion\n      - productOrderItem\n      - state\n      type: object\n    MEFModifyProductOrderItemRequestedDeliveryDateRef:\n      description: a reference to Modify Product Order Item Requested Delivery Date\n      properties:\n        href:\n          description: Hyperlink to access the Modify Product Order Item Requested\n            Delivery Date\n          type: string\n        id:\n          description: A unique identifier of the Modify Product Order Item Requested\n            Delivery Date\n          type: string\n      required:\n      - id\n      type: object\n    MEFModifyProductOrderItemRequestedDeliveryDate_Create:\n      description: A request initiated by the Buyer to modify the Requested Requested\n        Delivery Date or the Expedite Indicator of a Product Order Item.\n      properties:\n        expediteIndicator:\n          default: false\n          description: \"Indicates that expedited treatment is requested. Set by the\\\n            \\ Buyer. Default Value = FALSE. If this is set to TRUE, the Buyer sets\\\n            \\ the Requested Completion Date to the expedited date\"\n          type: boolean\n        orderVersion:\n          description: The version of the Product Order. Set by the Buyer using Seller\n            specified Product Order Version of the Product Order that is to be modified.\n          type: string\n        productOrderItem:\n          $ref: '#/components/schemas/MEFProductOrderItemRef'\n        requestedCompletionDate:\n          description: Identifies the Buyer's desired due date (requested delivery\n            date)\n          format: date-time\n          type: string\n      required:\n      - orderVersion\n      - productOrderItem\n      type: object\n    MEFOrderItemCoordinatedAction:\n      description: The interval after the completion of one or more related Product\n        Order Items that this Product Order Item can be started or completed\n      properties:\n        coordinationDependency:\n          $ref: '#/components/schemas/MEFOrderItemCoordinationDependencyType'\n        itemId:\n          description: Specifies Product Order Item that is to be coordinated with\n            this Product Order Item.\n          type: string\n        coordinatedActionDelay:\n          $ref: '#/components/schemas/Duration'\n      required:\n      - coordinatedActionDelay\n      - coordinationDependency\n      - itemId\n      type: object\n    MEFOrderItemCoordinationDependencyType:\n      description: |\n        Possible values of the Order Item Coordination Dependency\n\n        | OrderItemCoordinationDependencyType | MEF 57.2         | Description                                                                                             |\n        |-------------------------------------|------------------|---------------------------------------------------------------------------------------------------------|\n        | startToStart                        | START_TO_START   | Work on the specified Product Order Item begins at the same time as the related Product Order Item      |\n        | startToFinish                       | START_TO_FINISH  | Work on the specified Product Order Item begins upon the completion of the related Product Order Item   |\n        | finishToStart                       | FINISH_TO_START  | Work on the related Product Order Item begins after the completion of the specified Product Order Item |\n        | finishToFinish                      | FINISH_TO_FINISH | Work on the related Product Order Item completes at the same time as the specified Product Order Item  |\n      enum:\n      - startToStart\n      - startToFinish\n      - finishToStart\n      - finishToFinish\n      type: string\n    MEFPriceType:\n      description: Indicates if the price is for recurring or non-recurring charges.\n      enum:\n      - recurring\n      - nonRecurring\n      - usageBased\n      type: string\n    MEFProductActionType:\n      description: |\n        Action to be performed on the Product that the Order Item refers to.\n\n        | ProductActionType | MEF 57.2   |\n        | ----------------- | ---------- |\n        | add               | INSTALL    |\n        | modify            | CHANGE     |\n        | delete            | DISCONNECT |\n      enum:\n      - add\n      - modify\n      - delete\n      type: string\n    MEFProductConfiguration:\n      description: MEFProductConfiguration is used as an extension point for MEF specific\n        product/service payload.  The `@type` attribute is used as a discriminator\n      discriminator:\n        mapping:\n          urn:mef:lso:spec:cantata-sonata:eplan:v0.2.0:all: '#/components/schemas/Eplan'\n          urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.2.0:all: '#/components/schemas/EplanEndpoint'\n          urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.2.0:all: '#/components/schemas/CarrierEthernetSubscriberUni'\n          urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v3.0.0:all: '#/components/schemas/CarrierEthernetOperatorUni'\n          urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.2.0:all: '#/components/schemas/EvplanEndpoint'\n          urn:mef:lso:spec:cantata-sonata:evptree:v0.2.0:all: '#/components/schemas/Evptree'\n          urn:mef:lso:spec:cantata-sonata:epl:v0.2.0:all: '#/components/schemas/Epl'\n          urn:mef:lso:spec:cantata-sonata:evplan:v0.2.0:all: '#/components/schemas/Evplan'\n          urn:mef:lso:spec:cantata-sonata:eptree:v0.2.0:all: '#/components/schemas/Eptree'\n          urn:mef:lso:spec:sonata:access-eline:v3.0.0:all: '#/components/schemas/AccessEline'\n          urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.2.0:all: '#/components/schemas/EvptreeEndpoint'\n          urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.2.0:all: '#/components/schemas/EptreeEndpoint'\n          urn:mef:lso:spec:cantata-sonata:evpl:v0.2.0:all: '#/components/schemas/Evpl'\n        propertyName: '@type'\n      properties:\n        '@type':\n          description: \"The name of the type, defined in the JSON schema specified\\\n            \\  above, for the product that is the subject of the Product Order Request.\\\n            \\ The named type must be a subclass of MEFProductConfiguration.\"\n          enum:\n          - urn:mef:lso:spec:cantata-sonata:eplan:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:eplan-endpoint:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:carrier-ethernet-subscriber-uni:v0.2.0:all\n          - urn:mef:lso:spec:sonata:carrier-ethernet-operator-uni:v3.0.0:all\n          - urn:mef:lso:spec:cantata-sonata:evplan-endpoint:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evptree:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:epl:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evplan:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:eptree:v0.2.0:all\n          - urn:mef:lso:spec:sonata:access-eline:v3.0.0:all\n          - urn:mef:lso:spec:cantata-sonata:evptree-endpoint:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:eptree-endpoint:v0.2.0:all\n          - urn:mef:lso:spec:cantata-sonata:evpl:v0.2.0:all\n          type: string\n      required:\n      - '@type'\n      type: object\n    MEFProductOrderCharge:\n      description: \"When non-recurring or updated recurring charges are identified\\\n        \\ by the Seller during their processing of a Product Order, the Seller must\\\n        \\ communicate these charges to the Buyer and the Buyer must respond to the\\\n        \\ Seller informing the Seller if they accept or reject each charge. The Seller\\\n        \\ indicates for each charge, if the charge is Blocking or non-Blocking. If\\\n        \\ the Buyer rejects a Blocking Charge, the Seller will cancel that Product\\\n        \\ Order Item and any related Product Order Items. If the Buyer rejects a non-blocking\\\n        \\ Charge, the Seller may proceed with fulfillment of the Product Order Item.\"\n      properties:\n        cancelProductOrder:\n          $ref: '#/components/schemas/MEFCancelProductOrderRef'\n        replacedCharge:\n          $ref: '#/components/schemas/MEFProductOrderChargeRef'\n        responseDueDate:\n          description: The date that the Buyer must respond to the Seller's Charge.\n            If there is no response received by the Due Date the Seller will treat\n            all charges as declined and move them to `declinedByBuyer` status and\n            put the Charge to `completed` status.\n          format: date-time\n          type: string\n        chargeItem:\n          description: A list of Charge Items contained in the Charge\n          items:\n            $ref: '#/components/schemas/MEFProductOrderChargeItem'\n          type: array\n        productOrder:\n          $ref: '#/components/schemas/MEFProductOrderRef'\n        href:\n          description: |\n            Hyperlink to the Charge. Hyperlink MAY be used by the Seller in responses Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n          type: string\n        id:\n          description: A unique identifier of the Charge\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFProductOrderChargeStateType'\n        creationDate:\n          description: Date that the Charge was created by the Seller.\n          format: date-time\n          type: string\n        productOrderItem:\n          $ref: '#/components/schemas/MEFProductOrderItemRef'\n        modifyProductOrderItemRequestedDeliveryDate:\n          $ref: '#/components/schemas/MEFModifyProductOrderItemRequestedDeliveryDateRef'\n      required:\n      - chargeItem\n      - id\n      - responseDueDate\n      - state\n      type: object\n    MEFProductOrderChargeActivityType:\n      description: |\n        Possible values for the state of the Charge Activity Type\n      enum:\n      - new\n      - change\n      type: string\n    MEFProductOrderChargeItem:\n      description: A single component part of the Charge\n      properties:\n        acceptanceIndicator:\n          $ref: '#/components/schemas/MEFAcceptedRejectedType'\n        unitOfMeasure:\n          description: \"Unit of Measure if price depending on it is usageBased (Gb,\\\n            \\ SMS volume, etc..)\"\n          type: string\n        blocking:\n          description: \"Indicates if rejecting the charge will cause the Seller to\\\n            \\ cancel the Product Order Item, or close the Cancel Product Order or\\\n            \\ Modify Product Order Item Requested Delivery Date without action.\"\n          type: boolean\n        price:\n          $ref: '#/components/schemas/Price'\n        chargeType:\n          $ref: '#/components/schemas/MEFPriceType'\n        description:\n          $ref: '#/components/schemas/MEFProductOrderChargeItemDescription'\n        id:\n          description: An identifier that is unique among all Charge Items within\n            a Charge associated with a Product Order Item\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFProductOrderChargeItemStateType'\n        activityType:\n          $ref: '#/components/schemas/MEFProductOrderChargeActivityType'\n        recurringChargePeriod:\n          $ref: '#/components/schemas/MEFChargePeriod'\n      required:\n      - activityType\n      - blocking\n      - chargeType\n      - description\n      - id\n      - price\n      - state\n      type: object\n    MEFProductOrderChargeItemDescription:\n      description: A description of the cause of the Charge Item\n      enum:\n      - cancellation\n      - construction\n      - connection\n      - disconnect\n      - expedite\n      type: string\n    MEFProductOrderChargeItemStateType:\n      description: |\n        Possible values for the state of the Charge Item\n\n        | State               | Description                                                                                                                                       |\n        | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- |\n        | `acceptedByBuyer`   | A Charge Item identified in the Charge has been accepted by the Buyer.                                                                            |\n        | `awaitingResponse`  | A Charge Item has been identified by the Seller and awaits Buyer's acceptance.                                                                    |\n        | `declinedByBuyer`   | A Charge Item identified in the Charge has been declined by the Buyer. The referenced Product Order and Product Order Items are updated.          |\n        | `withdrawnBySeller` | The Seller determines that the Charge Item is incorrect. They withdraw the Charge Item and initiate a new Charge with the required correction(s). |\n      enum:\n      - awaitingResponse\n      - acceptedByBuyer\n      - declinedByBuyer\n      - withdrawnBySeller\n      type: string\n    MEFProductOrderChargeItem_Update:\n      description: A type used to perform Buyer's response to a Charge Item - to accept\n        or reject it.\n      properties:\n        acceptanceIndicator:\n          $ref: '#/components/schemas/MEFAcceptedRejectedType'\n        id:\n          description: \"An identifier that is unique among Charge. Used for Charge\\\n            \\ Item matching, not to be update.\"\n          type: string\n      required:\n      - acceptanceIndicator\n      - id\n      type: object\n    MEFProductOrderChargeRef:\n      description: a reference to a Charge instance\n      properties:\n        href:\n          description: Hyperlink to access the Charge\n          type: string\n        id:\n          description: A unique identifier of the Charge\n          type: string\n      required:\n      - id\n      type: object\n    MEFProductOrderChargeStateType:\n      description: |\n        Possible values for the state of the Charge\n\n        | State               | Description                                                                                                                               |\n        | ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n        | `completed`         | All Charge Items included in the Charge for a given Product Order Item have moved to either the `accepted` state or the `declined` state. |\n        | `awaitingResponse`  | A Charge has been initiated by the Buyer. The charge includes one or more charges.                                                        |\n        | `timeout`           | A response has not been received from the Buyer within the `responseDueDate`. This is treated as if the Buyer declined the Charge Items.  |\n        | `withdrawnBySeller` | The Seller determines that the Charge is incorrect. They withdraw the Charge and initiate a new Charge with the required correction(s).   |\n      enum:\n      - awaitingResponse\n      - completed\n      - timeout\n      - withdrawnBySeller\n      type: string\n    MEFProductOrderCharge_Update:\n      description: A subset of MEFProductOrderCharge that is allowed to be updated\n        by the Buyer\n      properties:\n        chargeItem:\n          description: A list of Charge Items contained in the Charge\n          items:\n            $ref: '#/components/schemas/MEFProductOrderChargeItem_Update'\n          minItems: 1\n          type: array\n      required:\n      - chargeItem\n      type: object\n    MEFProductOrderItemRef:\n      description: It's a ProductOrder item\n      properties:\n        productOrderHref:\n          description: Reference of the related ProductOrder.\n          type: string\n        productOrderItemId:\n          description: Id of an Item within the Product Order\n          type: string\n        productOrderId:\n          description: Unique identifier of a ProductOrder.\n          type: string\n      required:\n      - productOrderId\n      - productOrderItemId\n      type: object\n    MEFProductOrderItemStateChange:\n      description: \"Holds the State notification reasons and associated date the State\\\n        \\ changed, populated by the server\"\n      properties:\n        changeReason:\n          description: Additional comment related to state change.\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFProductOrderItemStateType'\n      type: object\n    MEFProductOrderItemStateType:\n      description: |\n        Possible values for the state of the Product Order Item The following\n        mapping has been used between `MEFProductOrderItemStateType` and MEF\n        57.2:\n\n        | state                 | MEF 57.2 name | Description|\n        | --------------------- | ------------- ||\n        | `acknowledged`        | ACKNOWLEDGED  | A Product Order Item has been received and has passed basic business validations. From the `acknowledged` state the Product Order Item is further validated and depending on the results of the validation and if other Product Order Items in the Product Order are also validated the Product Order Item moves to `inProgress`, `rejected.validated`, or `rejected.unassessed`.                                                                                                                                                                                                                                                                                                                                                                                                                |\n        | `cancelled`           | CANCELLED     | The Product Order has moved to the `pendingCancellation` state. All Product Order Items move to `cancelled`.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n        | `completed`           | COMPLETED     | The Product Order Item has completed provisioning. This is an end state                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n        | `failed`              | FAILED        | The fulfillment of a Product Order Item has failed. A Product Order Item may fail because the Buyer declined a Blocking charge identified via the Charge, the Buyer failed to respond to a Charge Item included in a Charge, or the Seller is unable to fulfill the Product Order Item. A Product Order Item moving to `failed` state results in the Product Order State being `failed` or `partial`. This is a terminal state.                                                                                                                                                                                                                                                                                                                                                                  |\n        | `held`                | HELD          | The Product Order Item cannot be progressed due to Charge the Seller awaiting a response from the Buyer on a Charge. The Seller stops work on the Product Order Item until the Charge has completed. Upon acceptance by the Buyer of all Blocking charges, the Product Order Item returns to `inProgress` state If the Buyer rejects a Blocking charge, the Product Order Item moves to the `failed` state.                                                                                                                                                                                                                                                                                                                                                                                      |\n        | `inProgress`          | IN_PROGRESS   | The Product Order Item has been successfully validated and fulfillment has started. If the Seller's system links validation between Product Order Items in a Product Order, a Product Order Item in this state also indicates that the other Product Order Items passed validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n        | `pending`             | PENDING       | The Product Order Item cannot be progressed due to the Seller assessing a Cancel Product Order or Modify Product Order Item Requested Delivery Date request. The Seller stops work on the Product Order Item until either the Cancel Product Order has been accepted and the Product Order state moves to `pendingCancellation` and the Product Order Item state moves to `cancelled`, the Cancel Product Order has been rejected and the Product Order Item State moves to `inProgress`, the Modify Product Order Item Requested Delivery Date has been accepted and the Product Order Item State moves to `inProgress`, or the Modify Product Order Item Requested Delivery Date moves to `done.declined` and the Product Order Item state moves to `inProgress` with original delivery dates. |\n        | `rejected`            | REJECTED      | A Product Order Item was submitted, and it has failed at least one validation checks the Seller performs during the `acknowledged` state.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n        | `rejected.unassessed` | UNASSESSED    | A Product Order was submitted and all validation checks the Seller performs during the `acknowledged` state have not been completed, but another Product Order Item in the Product Order has moved to the `rejected` state|\n        | `rejected.validated`  | VALIDATED     | A Product Order was submitted, and it has passed all validation checks the Seller performs during the `acknowledged` state, but another Product Order Item in the Product Order has moved to the `rejected` state|\n      enum:\n      - acknowledged\n      - cancelled\n      - completed\n      - failed\n      - held\n      - inProgress\n      - pending\n      - rejected\n      - rejected.validated\n      - rejected.unassessed\n      type: string\n    MEFProductOrderItem_Common:\n      description: |\n        An identified part of the order. A product order is decomposed into one or more order items.\n      properties:\n        relatedBuyerPON:\n          description: Identifies the Buyer Purchase Order Number that is related\n            to this Product Order.\n          type: string\n        note:\n          description: |\n            Free form text to clarify or explain the Product Order Item. Only new notes can be entered. The Buyer and Seller cannot modify an existing Note. The Buyer creates a Note when creating the Product Order Item or when updating it. The Seller may add notes at any time.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        product:\n          $ref: '#/components/schemas/MEFProductRefOrValueOrder'\n        relatedContactInformation:\n          description: |-\n            Contact information of an individual or organization playing a role for this Order Item.\n            The rule for mapping a represented attribute\n            value to a `role` is to use the _lowerCamelCase_ pattern e.g.\n            - Buyer Product Order Item Contact: `role=buyerProductOrderItemContact`\n            - Buyer Implementation Contact: `role=buyerImplementationContact`\n            - Buyer Technical Contact: `role=buyerTechnicalContact`\n            - Buyer Billing Contact: `role=buyerBillingContact`\n            - Buyer Fault Contact: `role=buyerFaultContact`\n            - Seller Fault Contact: `role=sellerFaultContact`\n            - Buyer GDPR Contact: `role=buyerGDPRContact`\n            - Seller GDPR Contact: `role=sellerGDPRContact`\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        requestedItemTerm:\n          $ref: '#/components/schemas/MEFItemTerm'\n        billingAccount:\n          $ref: '#/components/schemas/MEFBillingAccountRef'\n        productOrderItemRelationship:\n          description: The relationship between Product Order Items in the Product\n            Order.\n          items:\n            $ref: '#/components/schemas/OrderItemRelationship'\n          type: array\n        tspRestorationPriority:\n          description: |\n            Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook. The valid values are defined in ATIS OBF document: ATIS-0404001.\n          type: string\n        productOfferingQualificationItem:\n          $ref: '#/components/schemas/ProductOfferingQualificationItemRef'\n        coordinatedAction:\n          description: The interval after the completion of one or more related Product\n            Order Items that this Product Order Item can be started or completed\n          items:\n            $ref: '#/components/schemas/MEFOrderItemCoordinatedAction'\n          type: array\n        agreementName:\n          description: The name of the Agreement which is referenced for the Product\n            Order Item.\n          type: string\n        action:\n          $ref: '#/components/schemas/MEFProductActionType'\n        quoteItem:\n          $ref: '#/components/schemas/MEFQuoteItemRef'\n        endCustomerName:\n          description: \"The name of the End Customer, either a business name or an\\\n            \\ individual name depending on the end customer.\"\n          type: string\n        expediteIndicator:\n          default: false\n          description: \"Indicates that expedited treatment is requested. Set by the\\\n            \\ Buyer. If this is set to TRUE, the Buyer sets the Requested Completion\\\n            \\ Date to the expedited date. See MEF 57.2 section 7.3 for a description\\\n            \\ of the interaction between the Buyer and the Seller.\"\n          type: boolean\n        id:\n          description: |\n            A Buyer provided identifier to identify Product Order Items and to be able to relate them to one another. This is set by the Buyer and is unique within the Product Order. Examples of Reference Identifier could be 1, 2, 3 or A, B, C. The Reference Identifier can be reused in multiple Product Orders to identify a Product Order Item within that Product Order.\n          type: string\n        requestedCompletionDate:\n          description: Identifies the Buyer's desired due date (requested delivery\n            date)\n          format: date-time\n          type: string\n      required:\n      - action\n      - id\n      type: object\n    MEFProductOrderItem_Create:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductOrderItem_Common'\n      - description: |\n          An identified part of the order. A product order is decomposed into one or more order items.\n        type: object\n    MEFProductOrderItem_Update:\n      description: |\n        An updatable representation of the Product Order Item.\n      properties:\n        relatedBuyerPON:\n          description: This information is not used by the Seller and is maintained\n            for the convenience of the Buyer (e.g. search purposes).\n          type: string\n        note:\n          description: |\n            Free form text to clarify or explain the Product Order Item. Only new notes can be entered. The Buyer and Seller cannot modify an existing Note. The Buyer creates a Note when creating the Product Order Item or when updating it. The Seller may add notes at any time.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        relatedContactInformation:\n          description: |-\n            Contact information of an individual or organization playing a role for this Order Item. Buyer may only update the Buyer-related contacts.\n            The rule for mapping a represented attribute\n            value to a `role` is to use the _lowerCamelCase_ pattern e.g.\n            - Buyer Product Order Item Contact: `role=buyerProductOrderItemContact`\n            - Buyer Implementation Contact: `role=buyerImplementationContact`\n            - Buyer Technical Contact: `role=buyerTechnicalContact`\n            - Buyer Fault Contact: `role=buyerFaultContact`\n            - Buyer GDPR Contact: `role=buyerGDPRContact`\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        endCustomerName:\n          description: \"The name of the End Customer, either a business name or an\\\n            \\ individual name depending on the end customer.\"\n          type: string\n        id:\n          description: |\n            Identifier of the Item. This is to address the Item to be updated within the Product Order. The id itself cannot be updated.\n          type: string\n      required:\n      - id\n      type: object\n    MEFProductOrderRef:\n      description: Holds the MEF Product Order reference\n      properties:\n        productOrderHref:\n          description: Hyperlink to access the order\n          type: string\n        productOrderId:\n          description: Unique (within the ordering domain) identifier for the order\n            that is generated by the seller when the order is initially accepted.\n          type: string\n      required:\n      - productOrderId\n      type: object\n    MEFProductOrderStateChange:\n      description: \"Holds the State notification reasons and associated date the State\\\n        \\ changed, populated by the server\"\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFProductOrderStateType'\n      type: object\n    MEFProductOrderStateType:\n      description: |\n        Possible values for the state of the Product Order The following\n        mapping has been used between `MEFProductOrderStateType` and MEF 57.2:\n\n        | state                           | MEF 57.2 name          | Description|\n        | ------------------------------- | ---------------------- ||\n        | `acknowledged`                  | ACKNOWLEDGED           | A Product Order has been received by the Seller and has passed basic validation. A `productOrder.id` is assigned in the `acknowledged` state and a response is returned to the Buyer. The Product Order remains in the `acknowledged` state while validations of Product Order and Product Order Item(s) attributes as applicable is completed. If the Product Order and Product Order Item attributes are validated the Product Order moves to the `inProgress` state. If not validated, the Product Order moves to the `rejected` state.                                                                                                                                                                                                                |\n        | `assessingCancellation`         | ASSESSING_CANCELLATION | A request has been made by the Buyer to cancel the Product Order and the Product Order is currently being assessed to determine whether it can be cancelled. If there are any charges associated with the Buyer's Cancel Request, the Seller initiates a Charge which communicates the related charges to the Buyer, the Product Order remains in the `assessingCancellation` state until the Charge is completed or withdrawn by the Seller. Once the cancellation assessment is complete, the Product Order moves to the `pendingCancellation` state.                                                                                                                                                                                                   |\n        | `held.assessingCharge`          | ASSESSING_CHARGE       | A Charge has been initiated by the Seller that is not the result of a Modify Product Order Item Requested Delivery Date or Cancel Product Order request and the Seller is awaiting a Buyer response to the Charge. If a blocking or non-blocking charge is accepted by the Buyer, the Product Order moves to `inProgress`. If a non-blocking charge is declined by the Buyer, the Product Order moves to `inProgress`. If a blocking charge is declined by the Buyer and there are no unrelated Product Order Items in the Product Order, the Product Order moves to the FAILED state. If a blocking charge is declined by the Buyer and there are unrelated Product Order Items in the Product Order, the Product Order moves to the `inProgress` state. |\n        | `pending.assessingModification` | ASSESSING_MODIFICATION | A request has been made by the Buyer to modify either the `expediteIndicator` or the `requestedCompletionDate` of a Product Order Item. The Product Order Item is currently being assessed to determine whether the Modify Product Order Item Requested Delivery Date is valid. If there is a charge associated with the Modify Product Order Item Requested Delivery Date, the Product Order remains in the `pending.assessingModification` state until the Charge is completed or withdrawn by the Seller. Once the Buyer's request has been validated and any associated Charges completed, the Product Order returns to the `inProgress` state.                                                                                                       |\n        | `cancelled`                     | CANCELLED              | The Product Order has been successfully cancelled. This is a terminal state|\n        | `pendingCancellation`           | CANCELLING             | The Buyer's Cancel Request has been assessed and it has been determined that it is feasible to proceed with the cancellation. This state can also result from a Seller cancelling the Product Order within their systems without a request from the Buyer.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n        | `completed`                     | COMPLETED              | The Product Order has completed fulfillment and the Product is now active. This is a terminal state|\n        | `failed`                        | FAILED                 | All Product Order Items have failed which results in the entire Product Order failing. This is a terminal state|\n        | `inProgress`                    | IN_PROGRESS            | The Product Order has been successfully validated, and fulfillment has started|\n        | `partial`                       | PARTIAL                | Fulfillment of at least one Product Order Item has failed, and fulfillment of at least one Product Order Item has been successful. This is a terminal state|\n        | `rejected`                      | REJECTED               | A Product Order was submitted, and it has failed at least one of the validation checks the Seller performs after it reached the `acknowledged` state|\n      enum:\n      - acknowledged\n      - assessingCancellation\n      - cancelled\n      - completed\n      - failed\n      - held.assessingCharge\n      - inProgress\n      - partial\n      - pending.assessingModification\n      - pendingCancellation\n      - rejected\n      type: string\n    MEFProductRefOrValueOrder:\n      description: Used by the Buyer to point to existing and/or describe the desired\n        shape of the product. In case of `add` action - only `productConfiguration`\n        MUST be specified. For `modify` action - both `id` and `productConfiguration`\n        MUST be provided to point which product instance to update and to what state.\n        In `delete` only the `id` must be provided.\n      properties:\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          $ref: '#/components/schemas/MEFProductConfiguration'\n        productRelationship:\n          description: A list of references to existing products that are related\n            to the ordered Product.\n          items:\n            $ref: '#/components/schemas/ProductRelationship'\n          type: array\n        href:\n          description: Hyperlink to the referenced Product. Hyperlink MAY be used\n            by the Seller in responses. Hyperlink MUST be ignored by the Seller in\n            case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: The unique identifier of an in-service Product that is the\n            ordering subject. This field MUST be populated if an item `action` is\n            either `modify` or `delete`. This field MUST NOT be populated if an item\n            `action` is `add`.\n          type: string\n        place:\n          description: The relationships between this Product Order Item and one or\n            more Places as defined in the Product Specification.\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n      type: object\n    MEFQuoteItemRef:\n      description: It's a Quote item that has been executed previously.\n      properties:\n        quoteHref:\n          description: Reference of the related Quote.\n          type: string\n        id:\n          description: Id of an Quote Item\n          type: string\n        quoteId:\n          description: Unique identifier of a Quote.\n          type: string\n      required:\n      - id\n      - quoteId\n      type: object\n    MEFSubUnit:\n      description: Allows for sub unit identification\n      properties:\n        subUnitNumber:\n          description: \"The discriminator used for the subunit, often just a simple\\\n            \\ number but may also be a range.\"\n          type: string\n        subUnitType:\n          description: \"The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\\\n            \\ UNIT, WHARF.\"\n          type: string\n      required:\n      - subUnitNumber\n      - subUnitType\n      type: object\n    MegList:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      - NONE\n      type: string\n    MepDirection:\n      description: Indicates whether this is an Up MEP or Down MEP\n      enum:\n      - UP\n      - DOWN\n      type: string\n    MepLevelAndDirection:\n      description: \"A 2-tuple \u003clevel, direction\u003e that defines the MEG Level and MEP\\\n        \\ direction.\"\n      properties:\n        level:\n          description: The MEG level\n          maximum: 7\n          minimum: 0\n          type: integer\n        mepDirection:\n          description: Indicates whether this is an Up MEP or Down MEP\n          $ref: '#/components/schemas/MepDirection'\n      type: object\n    Money:\n      description: A base / value business entity used to represent money\n      properties:\n        unit:\n          description: Currency (ISO4217 norm uses 3 letters to define the currency)\n          type: string\n        value:\n          description: A positive floating point number\n          format: float\n          type: number\n      type: object\n    Note:\n      description: Extra information about a given entity. Only useful in processes\n        involving human interaction. Not applicable for the automated process.\n      properties:\n        date:\n          description: Date the Note was created\n          format: date-time\n          type: string\n        author:\n          description: Author of the note\n          type: string\n        id:\n          description: \"Identifier of the note within its containing entity (may or\\\n            \\ may not be globally unique, depending on provider implementation)\"\n          type: string\n        source:\n          $ref: '#/components/schemas/MEFBuyerSellerType'\n        text:\n          description: Text of the note\n          type: string\n      required:\n      - author\n      - date\n      - id\n      - source\n      - text\n      type: object\n    OneWayAvailabilityPmMetric:\n      description: \"MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 - One Way Availability\\\n        \\ Performance Metric consisting of 1 parameter, a list of Ordered End Point\\\n        \\ Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One Way Availability\\\n        \\ Objective for this Class of Service Name and these Ordered End Point Pairs.\"\n      properties:\n        oneWayAvailabilityObjective:\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayCompositePmMetric:\n      description: \"MEF 10.4 sec. 8.8.10 - One Way Composite Performance Metric consisting\\\n        \\ of 7 parameters, a list of Ordered End Point Pairs (referred to as S iin\\\n        \\ MEF 10.4) , a Composite Performance number (referred to as U in the MEF\\\n        \\ Standards), indicators about Composite Frame Loss, Composite Frame Delay,\\\n        \\ and Composite Frame Delay Variation (referred to as Wfl, Wfd, and Wfdv in\\\n        \\ the MEF Standards), Thresholds for Frame Delay and Delay Variation (referred\\\n        \\ to as DL and Jt in the MEF Standards) and the One Way Composite Objective\\\n        \\ for this Class of Service Name and these seven parameters. (Note: This Performance\\\n        \\ Metric is not defined for OVC services).\"\n      properties:\n        oneWayIfdvThreshold:\n          $ref: '#/components/schemas/ShortDuration'\n        cpmObjective:\n          $ref: '#/components/schemas/Percentage'\n        compositeFrameDelay:\n          description: MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame\n            Delay equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        compositeFrameDelayVariation:\n          description: MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame\n            Delay Variation equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        oneWayFdThreshold:\n          $ref: '#/components/schemas/ShortDuration'\n        compositeFrameLoss:\n          description: MEF 10.4 sec. 8.8.10 - Composite indicator for One-way Frame\n            Loss equal to 0 or 1.\n          maximum: 1\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 - The set (referred to as S in MEF 10.4)\n            of ordered pairs of EVC or OVC End Points over which this Performance\n            Metric parameters and objective apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        compositePerformanceIndicatorThreshold:\n          description: MEF 10.4 sec. 8.8.10 - Composite Performance Indicator threshold\n            which if exceeded suggests an unacceptable time interval.\n          maximum: 1\n          minimum: 0\n          type: number\n      type: object\n    OneWayConsecutiveHighLossIntervalsPmMetric:\n      description: \"MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 - One Way Frame\\\n        \\ Delay Range Performance Metric consisting of 2 parameters, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a number (referred\\\n        \\ to as p in the MEF Standards), and the One Way Consecutive High Loss Intervals\\\n        \\ Objective for this Class of Service Name and these two parameters.\"\n      properties:\n        consecutiveNumberP:\n          description: MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - The number of\n            high loss intervals that constitute a consecutive high loss interval.\n          minimum: 1\n          type: integer\n        oneWayChliObjective:\n          description: MEF 10.4 sec. 8.8.9 and MEF 26.2 sec.12.13.9 - Performance\n            Objective expressed as a non-negative integer.\n          minimum: 1\n          type: integer\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayPmMetric:\n      description: \"MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - One Way Frame\\\n        \\ Delay Performance Metric consisting of 2 parameters, a list of Ordered End\\\n        \\ Point Pairs (referred to as S in the MEF Standards) , a percentile (referred\\\n        \\ to as Pd in the MEF 10.4 and MEF 26.2), and the One Way Frame Delay Objective\\\n        \\ for this Class of Service Name and these two parameters.\"\n      properties:\n        oneWayFdObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        oneWayFdPercentile:\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayFrameDelayRangePmMetric:\n      description: \"MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 - One Way Frame\\\n        \\ Delay Range Performance Metric consisting of 2 parameters, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2) , a percentile\\\n        \\ (referred to as Pr in the MEF Standards), and the One Way Frame Delay Range\\\n        \\ Objective for this Class of Service Name and these two parameters.\"\n      properties:\n        oneWayFdrPercentile:\n          $ref: '#/components/schemas/Percentage'\n        oneWayFdrObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayFrameLostRatioPmMetric:\n      description: \"MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 - One Way Frame\\\n        \\ Loss Ratio Performance Metric consisting of 1 parameter, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One\\\n        \\ Way Frame Loss Ratio Objective for this Class of Service Name and these\\\n        \\ Ordered End Point Pairs.\"\n      properties:\n        oneWayFlrObjective:\n          $ref: '#/components/schemas/Percentage'\n        orderedPairList:\n          description: MEF 10.4 sec. 8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayHighLossIntervalPmMetric:\n      description: \"MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 - One Way High Loss\\\n        \\ Intervals Performance Metric consisting of 1 parameter, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One\\\n        \\ Way High Loss Intervals Objective for this Class of Service Name and these\\\n        \\ Ordered End Point Pairs.\"\n      properties:\n        oneWayHighLossIntervalsObjective:\n          description: MEF 10.4 sec. 8.8.8 and MEF 26.2 sec.12.13.8 - The PM Objective\n            for this Performance Metric (this CoS and these Ordered End Point Pairs)\n            expressed as a non-negative number.\n          minimum: 0\n          type: integer\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OneWayInterFrameDelayVariationPmMetric:\n      description: \"MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 - One Way Frame\\\n        \\ Inter Frame Delay Variation Performance Metric consisting of 3 parameters,\\\n        \\ a list of Ordered End Point Pairs (referred to as S in MEF 10.4 and MEF\\\n        \\ 26.2) , a time duration (referred to as ?t (the greek letter tau, not t)\\\n        \\ in the MEF Standards), a percentile (referred to as Pv in the MEF Standards),\\\n        \\ and the Inter Frame Delay Variation Objective for this Class of Service\\\n        \\ Name and these three parameters.\"\n      properties:\n        oneWayIfdvObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        oneWayIfdvPencentile:\n          $ref: '#/components/schemas/Percentage'\n        timeDuration:\n          $ref: '#/components/schemas/ShortDuration'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: false\n      type: object\n    OneWayMeanFrameDelayPmMetric:\n      description: \"MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - One Way Frame\\\n        \\ Mean Delay Performance Metric consisting of 1 parameter, a list of Ordered\\\n        \\ End Point Pairs (referred to as S in MEF 10.4 and MEF 26.2), and the One\\\n        \\ Way Mean Frame Delay Objective for this Class of Service Name and these\\\n        \\ Ordered End Point Pairs.\"\n      properties:\n        oneWayMfdObjective:\n          $ref: '#/components/schemas/ShortDuration'\n        orderedPairList:\n          description: MEF 10.4 sec.  8.8.1.1 and MEF 26.2 sec. 12.13.1.1 - The set\n            (referred to as S in MEF 10.4 and MEF 26.2) of ordered pairs of EVC or\n            OVC End Points over which this Performance Metric parameters and objective\n            apply.\n          items:\n            $ref: '#/components/schemas/OrderedPair'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OperatorUniCommon:\n      description: \"This class contains all of the Operator UNI Services Attributes\\\n        \\ that are used in all four Business Functions (POQ, Quote, Order, Inventory).\\\n        \\ At this time, this includes all of the Operator UNI Service Attributes.\\\n        \\ This class is used to compose the OperatorUNI class which has one file for\\\n        \\ each Business Function that differ in terms of the Service Attributes that\\\n        \\ are \\\"Required\\\" for the Business Function (rather than \\\"Optional\\\").\"\n      properties:\n        aggregationLinkMap:\n          description: \"MEF 26.2 sec. 14.6 and 802.1AX-2014 sec.  6.6.2.1 - A mapping\\\n            \\ of a list of Port Conversation IDs (i.e., VLAN IDs or zero for untagged\\\n            \\ frames) to an ordered list of physical links if there are multiple physical\\\n            \\ links in the UNI and the link aggregation is ALL_ACTIVE.\"\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        defaultCeVlanId:\n          description: MEF 26.2 sec. 14.9 - The value of the Operator UNI Default\n            CE-VLAN ID is an integer that is the CE-VLAN ID value assigned to Untagged\n            Service Frames and Priority Tagged Service Frames.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        maximumNumberOfEndPoints:\n          description: MEF 26.2 sec. 14.10 - The maximum number of OVC End Points\n            that the Operator CEN can support at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        ingressBandwidthProfile:\n          description: MEF 26.2 sec. 14.12 - A single set Bandwidth Profile Flow parameters\n            that covers all OVCs at the UNI. The value is either Disabled (empty array)\n            or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        lagLinkMeg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOam:\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          $ref: '#/components/schemas/LinkAggType'\n        egressBandwidthProfile:\n          description: MEF 26.2 sec. 14.13 - A single set of Bandwidth Profile Flow\n            parameters that covers all OVCs at the UNI. The value is either Disabled\n            (empty array) or a BWP.\n          items:\n            $ref: '#/components/schemas/BwpFlow'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        l2cpPeering:\n          description: \"MEF 26.2 sec. 14.21 and  and MEF 45.1 sec. 8.1 - L2CP Peering\\\n            \\ Service Attribute defined in MEF 45.1 specifies which protocols, if\\\n            \\ any, are peered at the UNI. The L2CP Peering service attribute value\\\n            \\ must be an empty list, or a list of entries identifying protocols to\\\n            \\ be Peered where each entry consists of {Destination Address, Protocol\\\n            \\ Identifier} or {Destination Address, Protocol Identifier, Link Identifier}.\"\n          items:\n            $ref: '#/components/schemas/L2cpPeering'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfCeVlanIdsPerEndPoint:\n          description: MEF 26.2 sec. 14.11 - An integer between 1 and 4094 inclusive\n            that limits the number of C-Tag VLAN IDs that can map to each OVC End\n            Point at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: MEF 26.2 sec. 14.8 - Specifies the maximum size of Service\n            Frames that can be transmitted across the UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \"MEF 26.2 sec. 14.19 - The Envelopes and Envelope Coupling\\\n            \\ Flag values to which Bandwidth Profile Flows can be mapped. Value is\\\n            \\ list of {envelopeID, couplingFlagForIndexZero}. Note: Envelopes for\\\n            \\ the UNI can also be specified at the OVC End Points associated with\\\n            \\ the UNI.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        listOfPhysicalLinks:\n          description: \"MEF 26.2 sec. 14.2, 14.3 - This Service Attribute combines\\\n            \\ several of the MEF 26.2 Objects into a single n-tuple that is consistent\\\n            \\ with the way this information is described in MEF 10.4. The value of\\\n            \\ the Operator UNI List of Physical Links Service Attribute is a list\\\n            \\ of 6-tuples of the form ?id, physicalLink, synchronousEthernet, precisionTiming,\\\n            \\ uniConnectorType,uniConnectorGender?, with one list item for each physical\\\n            \\ link. The value of id is an identifier for the physical link. The value\\\n            \\ of physicalLink is the specific Ethernet physical layer type. synchronousEthernet\\\n            \\ indicates if synchronous Ethernet is used on the physical link and has\\\n            \\ the value Enabled or Disabled. The value of precisionTiming indicates\\\n            \\ if the Precision Time Protocol is used on the physical link and has\\\n            \\ the value Enabled or Disabled. The values of uniConnectorType and uniConnectorGender\\\n            \\ specify the type of connector used. Note that the id and the physicalLink\\\n            \\ come from the CarrierEthernetPhysicalLink class.\"\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 1\n          type: array\n          uniqueItems: true\n      type: object\n    OrderItemRelationship:\n      description: The relationship between Product Order Items in the Product Order.\n      properties:\n        relationshipType:\n          description: Specifies the nature of the relationship to the related Product\n            Order Items. A string that is one of the relationship types specified\n            in the Product Specification.\n          type: string\n        id:\n          description: Id of the related Order Item (must be in the same Order).\n          type: string\n      required:\n      - id\n      - relationshipType\n      type: object\n    OrderedPair:\n      description: Performance Metrics (except for Group Availability) are specified\n        for a list of Ordered End Point Pairs. In other words a Frame Delay objective\n        (for example) is specified from ?A to B? and from ?C to D?. This class defines\n        one Ordered End Point Pair.\n      properties:\n        toCarrierEthernetServiceEndPoint:\n          description: This is the EVC End Point ID for and EVC End Point in the service\n            or OVC End Point ID for an OVC End Point in the service.\n          type: string\n        fromCarrierEthernetServiceEndPoint:\n          description: This is the EVC End Point ID for and EVC End Point in the service\n            or OVC End Point ID for an OVC End Point in the service.\n          type: string\n      type: object\n    OvcEgressMap:\n      discriminator:\n        mapping:\n          CN_PCP_CC_DEI: '#/components/schemas/PcpFromCosDeiFromCosColor'\n          CC_PCP: '#/components/schemas/PcpFromCosColor'\n          CN_PCP: '#/components/schemas/PcpFromCos'\n          CC_DEI: '#/components/schemas/DeiFromCosColor'\n        propertyName: mapType\n      properties:\n        mapType:\n          enum:\n          - CN_PCP_CC_DEI\n          - CC_PCP\n          - CN_PCP\n          - CC_DEI\n          type: string\n      required:\n      - mapType\n      type: object\n    PcpFromCos:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: The PCP Field in the Egress EI Frame is determined from the Class\n          of Service of the corresponding Ingress EI Frame. This is a list that contains\n          an entry for Class of Service Name that includes the CoS Name and the PCP\n          value  (or DISCARD) to use for that CoS. For example CoS=Platinum --\u003e PCP\n          = 6. This affects the C-tag at the UNI and the S-tag at the ENNI.\n        properties:\n          cnPcpEntries:\n            description: A list of mappings of each CoS to an egress PCP value or\n              DISCARD.\n            items:\n              $ref: '#/components/schemas/CnPcp'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CN_PCP\n    PcpFromCosColor:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: \"The PCP Field in the Egress EI Frame is determined from the\\\n          \\ Class of Service Name and the Frame Color. This is a list that contains\\\n          \\ an entry for Class of Service Name that includes the CoS Name and two\\\n          \\ PCP values (or DISCARD), one for Green frames and one for Yellow frames.\\\n          \\  For example CoS=Platinum and Color=Green --\u003e PCP = 6  and Color=Yellow\\\n          \\ --\u003e PCP = 5. This affects the C-tag at the UNI and the S-tag at the ENNI.\"\n        properties:\n          ccPcpEntries:\n            description: \"A list of entries, one per CoS that indicates the PCP value\\\n              \\ for Green Frames and the PCP value for Yellow Frames.\"\n            items:\n              $ref: '#/components/schemas/CcPcp'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CC_PCP\n    PcpFromCosDeiFromCosColor:\n      allOf:\n      - $ref: '#/components/schemas/OvcEgressMap'\n      - description: \"This is a combination of PCP from CoS and DEI from Color. The\\\n          \\ PCP Field in the Egress EI Frame is determined from the Class of Service\\\n          \\ and the DEI Field is determined from the Frame Color. This is a list that\\\n          \\ contains an entry for Class of Service Name that includes the CoS Name,\\\n          \\ PCP value to use (or DISCARD) and the DEI value to use for each color\\\n          \\ for that CoS Name. For example CoS=Platinum and Color=Green --\u003e PCP =\\\n          \\ 6/DEI = 1 and Color=Yellow --\u003e DEI=0. This affects the C-tag at the UNI\\\n          \\ and the S-tag at the ENNI.\"\n        properties:\n          cnPcpCcDeiEntries:\n            description: \"A list of entries, one per CoS, the specifies the PCP value\\\n              \\ for the CoS and the DEI values for Green and Yellow frames in the\\\n              \\ CoS.\"\n            items:\n              $ref: '#/components/schemas/PcpFromCosDeiFromCosColor'\n            minItems: 1\n            type: array\n            uniqueItems: true\n        type: object\n      x-discriminator-value: CN_PCP_CC_DEI\n    PcpVal:\n      description: A PCP value from 0 to 7 or UNTAGGED\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      - UNTAGGED\n      type: string\n    PcpValue:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      type: string\n    PcpValueAndDiscard:\n      enum:\n      - \"0\"\n      - \"1\"\n      - \"2\"\n      - \"3\"\n      - \"4\"\n      - \"5\"\n      - \"6\"\n      - \"7\"\n      - DISCARD\n      type: string\n    Percentage:\n      description: This is a number of percent - a floating point number between 0\n        and 100\n      maximum: 100\n      minimum: 0\n      type: number\n    PhysicalLink:\n      description: An Ethernet physical layer\n      enum:\n      - 1BASE5\n      - 2BASE_TL\n      - 10BASE2\n      - 10BASE5\n      - 10BASE_F\n      - 10BASE_FB\n      - 10BASE_FL\n      - 10BASE_FP\n      - 10BASE_T\n      - 10BASE_T1L\n      - 10BASE_T1S\n      - 10BASE_TE\n      - 10BROAD36\n      - 10PASS_TS\n      - 100BASE_BX10\n      - 100BASE_FX\n      - 100BASE_LX10\n      - 100BASE_T\n      - 100BASE_T1\n      - 100BASE_T2\n      - 100BASE_T4\n      - 100BASE_TX\n      - 100BASE_X\n      - 1000BASE_BX10\n      - 1000BASE_CX\n      - 1000BASE_KX\n      - 1000BASE_LX\n      - 1000BASE_LX10\n      - 1000BASE_PX10\n      - 1000BASE_PX20\n      - 1000BASE_RHA\n      - 1000BASE_RHB\n      - 1000BASE_RHC\n      - 1000BASE_SX\n      - 1000BASE_T\n      - 1000BASE_T1\n      - 1000BASE_X\n      - 2_5GBASE_KX\n      - 2_5GBASE_T\n      - 2_5GBASE_T1\n      - 5GBASE_KR\n      - 5GBASE_T\n      - 5GBASE_T1\n      - 10GBASE_CX4\n      - 10GBASE_E\n      - 10GBASE_ER\n      - 10GBASE_EW\n      - 10GBASE_KR\n      - 10GBASE_KX4\n      - 10GBASE_L\n      - 10GBASE_LR\n      - 10GBASE_LRM\n      - 10GBASE_LW\n      - 10GBASE_LX4\n      - 10GBASE_R\n      - 10GBASE_S\n      - 10GBASE_SR\n      - 10GBASE_SW\n      - 10GBASE_T\n      - 10GBASE_T1\n      - 10GBASE_W\n      - 10GBASE_X\n      - 25GBASE_CR\n      - 25GBASE_CR_S\n      - 25GBASE_ER\n      - 25GBASE_KR\n      - 25GBASE_KR_S\n      - 25GBASE_LR\n      - 25GBASE_SR\n      - 25GBASE_T\n      - 40GBASE_CR4\n      - 40GBASE_ER4\n      - 40GBASE_FR\n      - 40GBASE_KR4\n      - 40GBASE_LR4\n      - 40GBASE_R\n      - 40GBASE_SR4\n      - 40GBASE_T\n      - 50GBASE_CR\n      - 50GBASE_ER\n      - 50GBASE_FR\n      - 50GBASE_KR\n      - 50GBASE_LR\n      - 50GBASE_SR\n      - 100GBASE_CR10\n      - 100GBASE_CR2\n      - 100GBASE_CR4\n      - 100GBASE_DR\n      - 100GBASE_ER4\n      - 100GBASE_KP4\n      - 100GBASE_KR2\n      - 100GBASE_KR4\n      - 100GBASE_LR4\n      - 100GBASE_R\n      - 100GBASE_SR10\n      - 100GBASE_SR2\n      - 100GBASE_SR4\n      - 200GBASE_CR4\n      - 200GBASE_DR4\n      - 200GBASE_ER4\n      - 200GBASE_FR4\n      - 200GBASE_KR4\n      - 200GBASE_LR4\n      - 200GBASE_SR4\n      - 400GBASE_DR4\n      - 400GBASE_ER8\n      - 400GBASE_FR8\n      - 400GBASE_LR8\n      - 400GBASE_SR16\n      - 400GBASE_SR4_2\n      - 400GBASE_SR8\n      - OTHER\n      type: string\n    Price:\n      description: \"Provides all amounts (tax included, duty free, tax rate), used\\\n        \\ currency and percentage to apply for Price Alteration.\"\n      properties:\n        taxRate:\n          description: \"Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax.\"\n          format: float\n          type: number\n        taxIncludedAmount:\n          $ref: '#/components/schemas/Money'\n        dutyFreeAmount:\n          $ref: '#/components/schemas/Money'\n      type: object\n    ProductOfferingQualificationItemRef:\n      description: It's a productOfferingQualification item that has been executed\n        previously.\n      properties:\n        productOfferingQualificationId:\n          description: Unique identifier of related Product Offering Qualification\n            resource.\n          type: string\n        productOfferingQualificationHref:\n          description: Reference to a related Product Offering Qualification resource.\n          type: string\n        alternateProductOfferingProposalId:\n          description: A unique identifier for this Alternate Product Proposal assigned\n            by the Seller.\n          type: string\n        id:\n          description: Id of an item of a product offering qualification\n          type: string\n      required:\n      - id\n      - productOfferingQualificationId\n      type: object\n    ProductOfferingRef:\n      description: \"A reference to a Product Offering offered by the Seller to the\\\n        \\ Buyer.  A Product Offering contains the commercial and technical details\\\n        \\ of a Product sold by a particular Seller. A Product Offering defines all\\\n        \\ of the commercial terms and, through association with a particular Product\\\n        \\ Specification, defines all the technical attributes and behaviors of the\\\n        \\ Product. A Product Offering may constrain the allowable set of configurable\\\n        \\ technical attributes and/or behaviors specified in the associated Product\\\n        \\ Specification.\"\n      properties:\n        href:\n          description: |\n            Hyperlink to a Product Offering in Sellers catalog. In case Seller is not providing a catalog capabilities this field is not used.  The catalog API definition is provided by the Seller to the Buyer during onboarding Hyperlink MAY be used by the Seller in responses   Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n          type: string\n        id:\n          description: id of a Product Offering. It is assigned by the Seller. The\n            Buyer and the Seller exchange information about offerings' ids during\n            the onboarding process.\n          type: string\n      required:\n      - id\n      type: object\n    ProductOrder:\n      allOf:\n      - $ref: '#/components/schemas/ProductOrder_Common'\n      - description: A Product Order is a type of order which can be used to place\n          an order between a customer and a service provider or between a service\n          provider and a partner and vice versa\n        properties:\n          cancellationCharge:\n            description: Charges associated with cancelling the Product Order\n            items:\n              $ref: '#/components/schemas/MEFProductOrderChargeRef'\n            type: array\n          cancellationReason:\n            description: An optional free-form text field for the Seller to provide\n              additional information regarding the reason for the cancellation.\n            type: string\n          completionDate:\n            description: Identifies the date that all Product Order Items within the\n              Order have reached a terminal state. No further action is permitted\n              on the Product Order.\n            format: date-time\n            type: string\n          expectedCompletionDate:\n            description: |\n              Identifies the date the Seller expects to complete the Product Order.\n            format: date-time\n            type: string\n          stateChange:\n            description: State change for the Product Order\n            items:\n              $ref: '#/components/schemas/MEFProductOrderStateChange'\n            type: array\n          href:\n            description: Hyperlink to access the order\n            type: string\n          id:\n            description: Unique identifier for the Product Order that is generated\n              by the Seller when the Product Order is initially accepted via an API.\n            type: string\n          orderVersion:\n            description: \"The version of the Product Order, set by the Seller\"\n            type: string\n          state:\n            $ref: '#/components/schemas/MEFProductOrderStateType'\n          productOrderItem:\n            description: |\n              Items contained in the Product Order.\n            items:\n              $ref: '#/components/schemas/ProductOrderItem'\n            minItems: 1\n            type: array\n          orderDate:\n            description: Date when the Product Order was created in the Seller's system\n              and a Product Order Identifier was assigned\n            format: date-time\n            type: string\n          cancellationDate:\n            description: Identifies the date the Seller cancelled the Order. Set by\n              Seller when the Order is moved to the cancelled state.\n            format: date-time\n            type: string\n        required:\n        - id\n        - orderDate\n        - productOrderItem\n        - state\n        type: object\n    ProductOrderItem:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductOrderItem_Common'\n      - description: |\n          An identified part of the order. A product order is decomposed into one or more order items.\n        properties:\n          itemTerm:\n            description: Term of the Product Order Item\n            items:\n              $ref: '#/components/schemas/MEFItemTerm'\n            maxItems: 1\n            type: array\n          terminationError:\n            description: \"When the Seller cannot process the request, the Seller returns\\\n              \\ a text-based list of reasons here.\"\n            items:\n              $ref: '#/components/schemas/TerminationError'\n            type: array\n          charge:\n            description: The Charges associated to this Product Order Item\n            items:\n              $ref: '#/components/schemas/MEFProductOrderChargeRef'\n            type: array\n          completionDate:\n            description: Identifies the date the Seller completed the Product Order\n              Item. Set by Seller when all Product Order Items have reached a terminal\n              state. No further action is permitted on the Product Order after this\n              state is reached.\n            format: date-time\n            type: string\n          expectedCompletionDate:\n            description: |\n              Identifies the date the Seller expects to complete the Product Order Item.\n            format: date-time\n            type: string\n          stateChange:\n            description: State change for the Product Order Item\n            items:\n              $ref: '#/components/schemas/MEFProductOrderItemStateChange'\n            type: array\n          state:\n            $ref: '#/components/schemas/MEFProductOrderItemStateType'\n          expediteAcceptedIndicator:\n            default: false\n            description: \"Indicates if the Seller has accepted the Buyer's Expedite\\\n              \\ request. See MEF 57.2 section 7.3 for a description of the interaction\\\n              \\ between the Buyer and Seller. If this is set to true, the Seller provides\\\n              \\ the costs to expedite the Product Order in the charge attribute\"\n            type: boolean\n        type: object\n    ProductOrder_Common:\n      description: \"A Product Order is a type of order which can be used to place\\\n        \\ an order between a customer and a service provider or between a service\\\n        \\ provider and a partner and vice versa,\"\n      properties:\n        note:\n          description: |\n            Free form text to clarify or explain the Product Order. Only new notes can be entered. The Buyer and Seller cannot modify an existing Note. The Buyer creates a Note when creating the Product Order or when updating it. The Seller may add notes at any time.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        relatedContactInformation:\n          description: |-\n            Contact information of an individual or organization playing a role in this context.\n            (e.g. Product Order Contact: role=productOrderContact;\n            Seller Contact: role=sellerContact)\n            Providing the Product Order Contact in the request is mandatory.\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          minItems: 1\n          type: array\n        externalId:\n          description: An identifier for this order within the Buyer's enterprise.\n          type: string\n        projectId:\n          description: An identifier that is used to group Product Orders that is\n            important to the Buyer. A projectId can be used to relate multiple Product\n            Orders together.\n          type: string\n        requestedCompletionDate:\n          description: This is requested date to get this Product Order completed\n          format: date-time\n          type: string\n      required:\n      - relatedContactInformation\n      type: object\n    ProductOrder_Create:\n      allOf:\n      - $ref: '#/components/schemas/ProductOrder_Common'\n      - description: |\n          A Product Order is a type of order which  can  be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa, Skipped properties: id,href,completionDate,orderDate,state,stateChange,cancellationDate,cancellationReason\n        properties:\n          productOrderItem:\n            description: |\n              Items contained in the Product Order.\n            items:\n              $ref: '#/components/schemas/MEFProductOrderItem_Create'\n            minItems: 1\n            type: array\n        required:\n        - productOrderItem\n        type: object\n    ProductOrder_Find:\n      description: Structure to define GET without id response. A list of productOrder\n        matching request criteria. Provides Product order summary view.\n      properties:\n        externalId:\n          description: ID given by the consumer and only understandable by him (to\n            facilitate his searches afterward).\n          type: string\n        completionDate:\n          description: Identifies the date that all Product Order Items within the\n            Order have reached a terminal state. No further action is permitted on\n            the Product Order after this notification.\n          format: date-time\n          type: string\n        id:\n          description: Unique identifier for the order that is generated by the Seller\n            when the order is initially accepted via an API.\n          type: string\n        orderVersion:\n          description: \"The version of the Product Order, assigned by the Seller\"\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFProductOrderStateType'\n        orderDate:\n          description: Date when the Product Order was created\n          format: date-time\n          type: string\n        projectId:\n          description: An identifier that is used to group Product Orders that is\n            important to the Buyer. A projectId can be used to relate multiple Product\n            Orders together.\n          type: string\n        cancellationDate:\n          description: Identifies the date the Seller cancelled the Order. Set by\n            Seller when the Order is moved to the cancelled state.\n          format: date-time\n          type: string\n        requestedCompletionDate:\n          description: This is requested date to get this Product Order completed\n          format: date-time\n          type: string\n      required:\n      - id\n      - orderDate\n      - orderVersion\n      - state\n      type: object\n    ProductOrder_Update:\n      description: A request initiated by the Buyer to update Product Order and/or\n        Product\n      properties:\n        note:\n          description: |\n            Free form text to clarify or explain the Product Order. Only new notes can be entered. The Buyer and Seller cannot modify an existing Note. The Buyer creates a Note when creating the Product Order or when updating it. The Seller may add notes at any time.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        relatedContactInformation:\n          description: |\n            Contact information of an individual or organization playing a role in this context. The Buyer is allowed to update the Product Order Contact: role=productOrderContact;\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          minItems: 1\n          type: array\n        externalId:\n          description: An identifier for this Product Order within the Buyer's enterprise.\n          type: string\n        orderVersion:\n          description: \"The version of the Product Order. The `orderVersion` attribute\\\n            \\ cannot be updated. It is used only to identify the version of the Product\\\n            \\ Order that the Buyer wants to update. If there is a mismatch with the\\\n            \\ Seller's system, the Seller will reject the request with an error response.\"\n          type: string\n        productOrderItem:\n          description: |\n            Order Item attributes that may be updated\n          items:\n            $ref: '#/components/schemas/MEFProductOrderItem_Update'\n          type: array\n        projectId:\n          description: An identifier that is used to group Product Orders that is\n            important to the Buyer. A projectId can be used to relate multiple Product\n            Orders together.\n          type: string\n      required:\n      - orderVersion\n      type: object\n    ProductRelationship:\n      description: A relationship to an existing Product. The requirements for usage\n        for given Product are described in the Product Specification.\n      properties:\n        relationshipType:\n          description: |\n            Specifies the type (nature) of the relationship to the related Product. The nature of required relationships varies for Products of different types. For example, a UNI or ENNI Product may not have any relationships, but an Access E-Line may have two mandatory relationships (related to the UNI on one end and the ENNI on the other). More complex Products such as multipoint IP or Firewall Products may have more complex relationships. As a result, the allowed and mandatory `relationshipType` values are defined in the Product Specification.\n          type: string\n        href:\n          description: Hyperlink to the product in Seller's inventory that is referenced\n            Hyperlink MAY be used when providing a response by the Seller Hyperlink\n            MUST be ignored by the Seller in case it is provided by the Buyer in a\n            request\n          type: string\n        id:\n          description: unique identifier of the related Product\n          type: string\n      required:\n      - id\n      - relationshipType\n      type: object\n    RelatedContactInformation:\n      description: \"Contact information of an individual or organization playing a\\\n        \\ role for\\nthis Order Item. The rule for mapping a represented attribute\\\n        \\ value to a\\n`role` is to use the _lowerCamelCase_ pattern e.g. \\n- Buyer\\\n        \\ Order Item Contact: `role=buyerOrderItemContact` \\n- Buyer Implementation\\\n        \\ Contact: `role=buyerImplementationContact` \\n- Buyer Technical Contact:\\\n        \\ `role=buyerTechnicalContact`\\n\"\n      properties:\n        number:\n          description: Phone number\n          type: string\n        emailAddress:\n          description: Email address\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/FieldedAddress'\n        role:\n          description: A role the party plays in a given context.\n          type: string\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n      required:\n      - emailAddress\n      - name\n      - number\n      - role\n      type: object\n    RelatedPlaceRefOrValue:\n      description: Place defines the places where the product order must be done.\n      discriminator:\n        mapping:\n          FieldedAddress: '#/components/schemas/FieldedAddress'\n          FormattedAddress: '#/components/schemas/FormattedAddress'\n          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'\n          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'\n          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'\n          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'\n        propertyName: '@type'\n      properties:\n        role:\n          description: Role of this place\n          type: string\n        '@type':\n          description: |\n            This field is used as a discriminator and is used between different place representations. This type might discriminate for additional related place as defined in '@schemaLocation'.\n          enum:\n          - FieldedAddress\n          - FormattedAddress\n          - GeographicAddressLabel\n          - GeographicAddressRef\n          - GeographicSiteRef\n          - MEFGeographicPoint\n          type: string\n        '@schemaLocation':\n          description: A URI to a JSON-Schema file that defines additional attributes\n            and relationships. May be used to define additional related place types.\n            Usage of this attribute must be agreed upon between Buyer and Seller.\n          format: uri\n          type: string\n      required:\n      - '@type'\n      - role\n      type: object\n    ShortDuration:\n      description: This class is used to describe durations expressed in minutes or\n        smaller time units\n      properties:\n        shortDurationValue:\n          description: \"The value of the duration. For example, if the duration is\\\n            \\ 20 ms, this element is 20.\"\n          type: integer\n        shortDurationUnits:\n          description: \"The unit of measure in the duration. For example, if an interval\\\n            \\ is 2ms, this element is MS.\"\n          $ref: '#/components/schemas/ShortDurationUnits'\n      type: object\n    ShortDurationUnits:\n      description: \"The unit of measure in the duration. For example, if an interval\\\n        \\ is 2ms, this element is MS.\"\n      enum:\n      - NS\n      - US\n      - MS\n      - SEC\n      - MIN\n      type: string\n    SlsCosNameEntry:\n      description: \"This is the specification of Performance Metrics (and parameters)\\\n        \\ for one Class of Service. The first element is the CoS Name. This MUST be\\\n        \\ unique, i.e. there can not be two instances of this Class with the same\\\n        \\ CoS Name. The CoS Name is followed by three parameters and then lists of\\\n        \\ Performance Metrics.\"\n      properties:\n        thresholdC:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - thresholdC is\\\n            \\ a real number in the range [0,1] used as a threshold to determine whether\\\n            \\ a given time interval ?tk has high loss.\"\n          maximum: 1\n          minimum: 0\n          type: number\n        oneWayConsecutiveHighLossIntervalsPmMetric:\n          description: MEF 10.4 sec. 8.8.9 and MEF 26.2 sec. 12.13.9 - oneWayConsecutiveHighLossIntervalsPmMetric\n            is a reference to zero or more instances of One Way Consecutive High Loss\n            Intervals Performance Metric. Each reference contains a set of parameters\n            and performance objective for the Performance Metric. If there are 0 instances\n            then this Class of Service does not have an objective for One Way CHLI.\n            If there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayConsecutiveHighLossIntervalsPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameDelayPmMetric:\n          description: MEF 10.4 sec. 8.8.2 and MEF 26.2 sec. 12.13.2 - oneWayFrameDelayPmMetric\n            is a reference to zero or more instances of One Way Frame Delay Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Delay. If there are\n            multiple instances for this Class of Service then at least one of the\n            parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayInterFrameDelayVariationPmMetric:\n          description: MEF 10.4 sec. 8.8.5 and MEF 26.2 sec. 12.13.5 - oneWayInterFrameDelayVariationPmMetric\n            is a reference to zero or more instances of One Way Inter Frame Delay\n            Variation Performance Metric. Each reference contains a set of parameters\n            and performance objective for the Performance Metric. If there are 0 instances\n            then this Class of Service does not have an objective for One Way Inter\n            Frame Delay Variation. If there are multiple instances for this Class\n            of Service then at least one of the parameters must be different between\n            the instances.\n          items:\n            $ref: '#/components/schemas/OneWayInterFrameDelayVariationPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayMeanFrameDelayPmMetric:\n          description: MEF 10.4 sec. 8.8.3 and MEF 26.2 sec. 12.13.3 - oneWayMeanFrameDelayPmMetric\n            is a reference to zero or more instances of One Way Mean Frame Delay Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Mean Frame Delay. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayMeanFrameDelayPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayGroupAvailabilityPmMetric:\n          description: MEF 10.4 sec. 8.8.11 and MEF 26.2 sec. 12.13.10 - oneWayGroupAvailabilityPmMetric\n            is a reference to zero or more instances of One Way Group Availability\n            Performance Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then this\n            Class of Service does not have an objective for One Way Group Availability.\n            If there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayAvailabilityPmMetric:\n          description: MEF 10.4 sec. 8.8.7 and MEF 26.2 sec. 12.13.7 - oneWayAvailabilityPmMetric\n            is a reference to zero or more instances of One Way Availability Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Availability. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayAvailabilityPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayHighLossIntervalsPmMetric:\n          description: MEF 10.4 sec. 8.8.8 and MEF 26.2 sec. 12.13.8 - oneWayHighLossIntervalsPmMetric\n            is a reference to zero or more instances of One Way High Loss Intervals\n            Performance Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then this\n            Class of Service does not have an objective for One Way HLI. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayHighLossIntervalPmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayCompositePmMetric:\n          description: MEF 10.4 sec. 8.8.10 - oneWayCompositePmMetric is a reference\n            to zero or more instances of One Way Composite Performance Metric. Each\n            reference contains a set of parameters and performance objective for the\n            Performance Metric. If there are 0 instances then this Class of Service\n            does not have an objective for One Way Composite Performance. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayCompositePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        oneWayFrameLossRatioPmMetric:\n          description: MEF 10.4 sec. 8.8.6 and MEF 26.2 sec. 12.13.6 - oneWayFrameLossRatioPmMetric\n            is a reference to zero or more instances of One Way Frame Loss Ratio Performance\n            Metric. Each reference contains a set of parameters and performance objective\n            for the Performance Metric. If there are 0 instances then this Class of\n            Service does not have an objective for One Way Frame Loss Ratio. If there\n            are multiple instances for this Class of Service then at least one of\n            the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameLostRatioPmMetric'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        consecutiveIntervalN:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - consectiveIntervalN\\\n            \\ is an integer ? 1, used to identify how many consecutive ?\\U0001d461\\\n            \\U0001d458 intervals must have high loss to trigger a change in Availability.\"\n          minimum: 1\n          type: integer\n        deltaT:\n          description: \"MEF 10.4 sec. 8.8 and MEF 26.2 sec. 12.13 - deltaT is a time\\\n            \\ duration in seconds much smaller than timeInterval. This is used, primarily,\\\n            \\ in calculations associated with Availability, High Loss Intervals and\\\n            \\ Consecutive High Loss Intervals. MEF 10.4 and MEF 26.2 refer to this\\\n            \\ as ?t and the k-th interval starting at ts is referred to as ?tk (k\\\n            \\ is subscript).\"\n          minimum: 1\n          type: integer\n        oneWayFrameDelayRangePmMetric:\n          description: MEF 10.4 sec. 8.8.4 and MEF 26.2 sec. 12.13.4 - oneWayFrameDelayRangePmMetric\n            is a reference to zero or more instances of One Way Frame Delay Range\n            Performance Metric. Each reference contains a set of parameters and performance\n            objective for the Performance Metric. If there are 0 instances then this\n            Class of Service does not have an objective for One Way Frame Delay Range.\n            If there are multiple instances for this Class of Service then at least\n            one of the parameters must be different between the instances.\n          items:\n            $ref: '#/components/schemas/OneWayFrameDelayRangePmMetric'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        cosName:\n          description: This is the CoS Name for this PM Entry.\n          minLength: 1\n          type: string\n      type: object\n    SourceMacAddressLimit:\n      description: This limits the number of source MAC addresses that can be used\n        in ingress  frame mapped to the End Point of all types over a time interval.\n        It is a recommendation that each Ingress EI Frame with a source MAC address\n        that would exceed the limit be discarded by the Carrier Ethernet Network.\n      properties:\n        limit:\n          description: The number of MAC source addresses that will not subject an\n            Ingress EI Frame to discard during the time interval.\n          minimum: 1\n          type: integer\n        interval:\n          $ref: '#/components/schemas/ShortDuration'\n      type: object\n    SubscriberUniCommon:\n      description: \"This class contains all of the Subscriber UNI Services Attributes\\\n        \\ that are used in all four Business Functions (POQ, Quote, Order, Inventory).\\\n        \\ At this time, this includes all of the Subscriber UNI Service Attributes.\\\n        \\ This class is used to compose the SubscriberUNI class which has one file\\\n        \\ for each Business Function that differ in terms of the Service Attributes\\\n        \\ that are \\\"Required\\\" for the Business Function (rather than \\\"Optional\\\"\\\n        ).\"\n      properties:\n        listOfPhyLinks:\n          description: \"MEF 10.4 sec. 9.4 - The value of the Subscriber UNI List of\\\n            \\ Physical Links Service Attribute is a list of 5-tuples of the form id,\\\n            \\ ?physicalLink, synchronousEthernet, precisionTiming, demarcConnectorType?\\\n            , with one list item for each physical link. The value of id is an identifier\\\n            \\ for the physical link. The value of physicalLink is the specific Ethernet\\\n            \\ physical layer type. synchronousEthernet indicates if synchronous Ethernet\\\n            \\ is used on the physical link and has the value Enabled or Disabled.\\\n            \\ The value of precisionTiming indicates if the Precision Time Protocol\\\n            \\ is used on the physical link and has the value Enabled or Disabled.\\\n            \\ The value of demarcConnectorType specifies the type of connector used.\\\n            \\ Note that the id and the physicalLink come from the CarrierEthernetPhysicalLink\\\n            \\ class.\"\n          items:\n            $ref: '#/components/schemas/UniPhysicalLink'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        virtualFrameMap:\n          description: \"MEF 10.4 sec. 9.2 and sec. 9.3 - When the value of the Subscriber\\\n            \\ UNI Instantiation Service Attribute = Virtual there must exist a map\\\n            \\ that maps the set of Virtual Frames that cross the UNI to a sequence\\\n            \\ of pairs of the form ?s,t? where s is a standard Ethernet frame per\\\n            \\ Clause 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival time at the\\\n            \\ UNI for all bits in s. Since MEF 10.4 does not specify the contents\\\n            \\ or format of this map, it is currently defined as an arbitrary length\\\n            \\ string.\"\n          items:\n            $ref: '#/components/schemas/VirtualFrameMap'\n          maxItems: 1\n          minItems: 0\n          type: array\n          uniqueItems: true\n        portConversation:\n          description: \"MEF 10.4 sec. 9.6 - A mapping of Port Conversation IDs (i.e.,\\\n            \\ VLAN IDs or zero for untagged frames) to an ordered list of physical\\\n            \\ links if there are multiple physical links in the UNI and the link aggregation\\\n            \\ is ALL_ACTIVE.\"\n          items:\n            $ref: '#/components/schemas/ConversationIdToAggregationLinkMap'\n          minItems: 0\n          type: array\n          uniqueItems: false\n        maximumNumberOfEndPoints:\n          description: MEF 10.4 sec. 9.9 - The maximum number of OVC End Points that\n            the Operator CEN can support at the UNI.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        lagLinkMeg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        l2cpAddressSet:\n          $ref: '#/components/schemas/L2cpAddressSet'\n        linkOAM:\n          $ref: '#/components/schemas/EnabledDisabled'\n        meg:\n          $ref: '#/components/schemas/EnabledDisabled'\n        linkAggregation:\n          $ref: '#/components/schemas/LinkAggType'\n        l2cpPeering:\n          $ref: '#/components/schemas/L2cpPeering'\n        maximumNumberOfCtagVlanIdsPerEndPoint:\n          description: MEF 10.4 sec. 9.10 - An integer greater than or equal to 1\n            that limits the number of C-Tag VLAN IDs that can map to each EVC End\n            Point.\n          maximum: 4094\n          minimum: 1\n          type: integer\n        tokenShare:\n          $ref: '#/components/schemas/EnabledDisabled'\n        maximumServiceFrameSize:\n          description: MEF 10.4 sec. 9.8 - Specifies the maximum size of Service Frames\n            that can be transmitted across UNI.\n          minimum: 1522\n          type: integer\n        envelopes:\n          description: \"MEF 10.4 sec. 9.12 - The Envelopes and Envelope Coupling Flag\\\n            \\ values to which Bandwidth Profile Flows can be mapped. Value is None\\\n            \\ or non-empty list of {envelopeID, couplingFlagForIndexZero}. If this\\\n            \\ property is not present or an empty list, the value is assumed to have\\\n            \\ the value None.\"\n          items:\n            $ref: '#/components/schemas/Envelope'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        instantiation:\n          description: \"MEF 10.4 sec. 9.2 - When the value is Physical, the UNI is\\\n            \\ implemented using one or more instances of a standard Physical Layer.\\\n            \\ When the value is Virtual, the physical layer is not specified.\"\n          $ref: '#/components/schemas/Instantiation'\n      type: object\n    TerminationError:\n      description: This indicates an error that caused an Item to be terminated. The\n        code and propertyPath should be used like in Error422.\n      properties:\n        code:\n          $ref: '#/components/schemas/Error422Code'\n        propertyPath:\n          description: |\n            A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\n            Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n          type: string\n        value:\n          description: Text to describe the reason of the termination.\n          type: string\n      type: object\n    Time:\n      description: \"This Class provides full specification for a date and time: year:month:day\\\n        \\ hour:minute:sec. The time and date are UTC.\"\n      properties:\n        month:\n          maximum: 12\n          minimum: 1\n          type: integer\n        hour:\n          maximum: 23\n          minimum: 0\n          type: integer\n        year:\n          minimum: 1900\n          type: integer\n        day:\n          maximum: 31\n          minimum: 1\n          type: integer\n        minute:\n          maximum: 59\n          minimum: 0\n          type: integer\n        second:\n          maximum: 59\n          minimum: 0\n          type: integer\n      type: object\n    TimeUnit:\n      description: |\n        Represents a unit of time.\n        Reference: MEF 57.2 (Sn 9.22)\n      enum:\n      - calendarMonths\n      - calendarDays\n      - calendarHours\n      - calendarMinutes\n      - businessDays\n      - businessHours\n      - businessMinutes\n      type: string\n    UniConnectorGender:\n      description: This indicates whether the Subscriber is presented with a SOCKET\n        (common) or a PLUG (less common).\n      enum:\n      - SOCKET\n      - PLUG\n      type: string\n    UniConnectorType:\n      description: This indicates the type of connector that is presented to the Subscriber.\n      enum:\n      - SC\n      - LC\n      - RJ45\n      - FC\n      - D4\n      - OTHER\n      type: string\n    UniPhysicalLink:\n      allOf:\n      - $ref: '#/components/schemas/CarrierEthernetPhysicalLink'\n      - $ref: '#/components/schemas/UniSpecificAttributes'\n      description: \"This class describes the Physical Link attributes at a UNI. It\\\n        \\ is a 6-tuple ?id, phy, frequency sync enable, PTP enable, connector, gender?\\\n        .\"\n    UniSpecificAttributes:\n      properties:\n        uniConnectorGender:\n          description: This indicates whether the Subscriber is presented with a SOCKET\n            (common) or a PLUG (less common).\n          $ref: '#/components/schemas/UniConnectorGender'\n        synchronousEthernet:\n          $ref: '#/components/schemas/EnabledDisabled'\n        uniConnectorType:\n          description: This indicates the type of connector that is presented to the\n            Subscriber.\n          $ref: '#/components/schemas/UniConnectorType'\n        precisionTiming:\n          $ref: '#/components/schemas/EnabledDisabled'\n      type: object\n    VirtualFrameMap:\n      description: A map for virtual frame mapping.   The absence of this attribute\n        corresponds to a Service Attribute value of Not Applicable. Reference MEF\n        10.4 Section 9.3 Subscriber UNI Virtual Frame Map Service Attribute.\n      properties:\n        vfMap:\n          description: \"MEF 10.4 sec. 9.2 and sec. 9,3 - When the value of the Subscriber\\\n            \\ UNI Instantiation Service Attribute = Virtual, there must exist a map\\\n            \\ that maps the set of Virtual Frames that cross the UNI to a sequence\\\n            \\ of pairs of the form?s,t where s is a standard Ethernet frame per Clause\\\n            \\ 3 of IEEE Std 802.3 � 2015 [5] and t is the arrival time at the UNI\\\n            \\ for all bits in s. Since MEF 10.4 does not specify the contents or format\\\n            \\ of this map, it is currently defined as an arbitrary length string.\"\n          minLength: 0\n          type: string\n      type: object\n    VlanType:\n      description: An indication of the type EVC End Point Map. If the value is UT/PT\n        then no additional information is required. If the value is LIST then a list\n        of C-VLAN ID values must be specified.\n      enum:\n      - LIST\n      - UT/PT\n      type: string\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/generated/staticBinding/carrierEthernet/productOrderManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/generated/staticBinding/carrierEthernet/productOrderManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}