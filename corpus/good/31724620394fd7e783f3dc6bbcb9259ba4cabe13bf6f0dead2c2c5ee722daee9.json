{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/grassrootseconomics/cic-stack"
		},
		"file": {
			"name": "server.yml",
			"size": 0,
			"path": "apps/cic-cache/doc/openapi/server.yml",
			"byteSize": 18595,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: Grassroots Economics CIC Cache\n  description: Cache of processed transaction data from Ethereum blockchain and worker queues\n  termsOfService: bzz://grassrootseconomics.eth/terms\n  contact:\n    name: Grassroots Economics\n    url: https://www.grassrootseconomics.org\n    email: will@grassecon.org\n  license:\n    name: GPLv3\n  version: 0.2.0\n\npaths:\n  /defaultlimit:\n    summary: The default limit value of result sets.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve default limit\n      operationId: limit.default\n      responses:\n        200:\n          description: Limit query successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Limit\"\n\n  /tx:\n    summary: Bloom filter for batch of latest transactions\n    description: Generate a bloom filter of the latest transactions in the cache. The number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.latest\n      responses:\n        200:\n          description: Transaction query successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n\n\n  /tx/{limit}:\n    summary: Bloom filter for batch of latest transactions\n    description: Generate a bloom filter of the latest transactions in the cache. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.latest.limit\n      responses:\n        200:\n          description: Transaction query successful. Results are ordered from newest to oldest.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /tx/{limit}/{offset}:\n    summary: Bloom filter for batch of latest transactions\n    description: Generate a bloom filter of the latest transactions in the cache. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.latest.range\n      responses:\n        200:\n          description: Transaction query successful. Results are ordered from newest to oldest.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /tx/{limit}/{offset}/{block_offset}:\n    summary: Bloom filter for batch of transactions since a particular block.\n    description: Generate a bloom filter of the latest transactions since a particular block in the cache. The block parameter is inclusive. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.latest.range.block.offset\n      responses:\n        200:\n          description: Transaction query successful. Results are ordered from oldest to newest.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: block_offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /tx/{limit}/{offset}/{block_offset}/{block_end}:\n    summary: Bloom filter for batch of transactions within a particular block range.\n    description: Generate a bloom filter of the latest transactions within a particular block range in the cache. The block parameters are inclusive. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.latest.range.block.range\n      responses:\n        200:\n          description: Transaction query successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: block_offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: block_end\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /tx/{address}:\n    summary: Bloom filter for batch of latest transactions by account.\n    description: Generate a bloom filter of the latest transactions where a specific account is the spender or beneficiary.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.user\n      responses:\n        200:\n          description: Transaction query successful. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n\n    parameters:\n    - name: address\n      in: path\n      required: true\n      schema:\n        type: string\n\n\n  /tx/{address}/{limit}:\n    summary: Bloom filter for batch of latest transactions by account.\n    description: Generate a bloom filter of the latest transactions where a specific account is the spender or beneficiary. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.user.limit\n      responses:\n        200:\n          description: Transaction query successful. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n\n    parameters:\n    - name: address\n      in: path\n      required: true\n      schema:\n        type: string\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /tx/{address}/{limit}/{offset}:\n    summary: Bloom filter for batch of latest transactions by account\n    description: Generate a bloom filter of the latest transactions where a specific account is the spender or beneficiary. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: tx.get.user.range\n      responses:\n        200:\n          description: Transaction query successful. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlocksBloom\"\n\n    parameters:\n    - name: address\n      in: path\n      required: true\n      schema:\n        type: string\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /txa:\n    summary: Cached data for latest transactions.\n    description: Return data entries of the latest transactions in the cache. The number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.latest\n      responses:\n        200:\n          description: Transaction query successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    \n  /txa/{limit}:\n    summary: Cached data for latest transactions.\n    description: Return data entries of the latest transactions in the cache. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.latest.limit\n      responses:\n        200:\n          description: Transaction query successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /txa/{limit}/{offset}:\n    summary: Cached data for latest transactions.\n    description: Return data entries of the latest transactions in the cache. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.latest.range\n      responses:\n        200:\n          description: Transaction query successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /txa/{limit}/{offset}/{block_offset}:\n    summary: Cached data for transactions since a particular block.\n    description: Return cached data entries of transactions since a particular block. The block parameter is inclusive. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.latest.range.block.offset\n      responses:\n        200:\n          description: Transaction query successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: block_offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n  /txa/{limit}/{offset}/{block_offset}/{block_end}:\n    summary: Cached data for transactions within a particular block range.\n    description: Return cached data entries of transactions within a particular block range in the cache. The block parameters are inclusive. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.latest.range.block.range\n      responses:\n        200:\n          description: Transaction query successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    parameters:\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: block_offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: block_end\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /txa/{address}:\n    summary: Cached data for batch of latest transactions by account.\n    description: Return cached data of the latest transactions where a specific account is the spender or beneficiary.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.user\n      responses:\n        200:\n          description: Transaction query successful. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    parameters:\n    - name: address\n      in: path\n      required: true\n      schema:\n        type: string\n\n\n  /txa/{address}/{limit}:\n    summary: Cached data for batch of latest transactions by account.\n    description: Return cached data of the latest transactions where a specific account is the spender or beneficiary. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.user.limit\n      responses:\n        200:\n          description: Transaction query successful. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    parameters:\n    - name: address\n      in: path\n      required: true\n      schema:\n        type: string\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\n  /txa/{address}/{limit}/{offset}:\n    summary: Cached data for batch of latest transactions by account.\n    description: Return cached data of the latest transactions where a specific account is the spender or beneficiary. If `limit` is 0, the number of maximum number of transactions returned is returned by the `/defaultlimit` API call.\n    get:\n      tags:\n        - transactions\n      description:\n        Retrieve transactions\n      operationId: txa.get.user.range\n      responses:\n        200:\n          description: Transaction query successful. \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionList\"\n\n    parameters:\n    - name: address\n      in: path\n      required: true\n      schema:\n        type: string\n    - name: limit\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n    - name: offset\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n\n\ncomponents:\n  schemas:\n    Limit:\n      type: integer\n      format: int32\n    BlocksBloom:\n      type: object\n      properties:\n        low:\n          type: integer\n          format: int32\n          description: The lowest block number included in the filter\n        high:\n          type: integer\n          format: int32\n          description: The highest block number included in the filter\n        block_filter:\n          type: string\n          format: byte\n          description: Block number filter\n        blocktx_filter:\n          type: string\n          format: byte\n          description: Block and tx index filter\n        alg:\n          type: string\n          description: Hashing algorithm (currently only using sha256)\n        filter_rounds:\n          type: integer\n          format: int32\n          description: Number of hash rounds used to create the filter\n    TransactionList:\n      type: object\n      properties:\n        low:\n          type: integer\n          format: int32\n          description: The lowest block number included in the result set\n        high:\n          type: integer\n          format: int32\n          description: The highest block number included in the filter\n        data:\n          type: array\n          description: Cached transaction data\n          items:\n            $ref: \"#/components/schemas/Transaction\"\n    Transaction:\n      type: object\n      properties:\n        block_number:\n          type: integer\n          format: int64\n          description: Block number transaction was included in.\n        tx_hash:\n          type: string\n          description: Transaction hash, in hex.\n        date_block:\n          type: integer\n          format: int32\n          description: Block timestamp.\n        sender:\n          type: string\n          description: Spender address, in hex.\n        recipient:\n          type: string\n          description: Beneficiary address, in hex.\n        from_value:\n          type: integer\n          format: int64\n          description: Value deducted from spender's balance.\n        to_value:\n          type: integer\n          format: int64\n          description: Value added to beneficiary's balance.\n        source_token:\n          type: string\n          description: Network address of token in which `from_value` is denominated.\n        destination_token:\n          type: string\n          description: Network address of token in which `to_value` is denominated.\n        success:\n          type: boolean\n          description: Network consensus state on whether the transaction was successful or not.\n        tx_type:\n          type: string\n          enum:\n            - erc20.faucet\n            - faucet.give_to\n\n  examples:\n    data_last:\n      summary: Get the latest cached transactions, using the server's default limit. \n      value: \"/txa\"\n\n    data_limit:\n      summary: Get the last 42 cached transactions. \n      value: \"/txa/42\"\n\n    data_range:\n      summary: Get the next 42 cached transactions, starting from the 13th (zero-indexed).\n      value: \"/txa/42/13\"\n\n    data_range_block_offset:\n      summary: Get the next 42 cached transactions, starting from block 1337 (inclusive).\n      value: \"/txa/42/0/1337\"\n\n    data_range_block_offset:\n      summary: Get the next 42 cached transactions within blocks 1337 and 1453 (inclusive).\n      value: \"/txa/42/0/1337/1453\"\n\n    data_range_block_range:\n      summary: Get the next 42 cached transactions after the 13th, within blocks 1337 and 1453 (inclusive).\n      value: \"/txa/42/13/1337/1453\"\n",
			"canonicalURL": "/github.com/grassrootseconomics/cic-stack@42300a2d50be80e4735a97eba6cde9ce2c764701/-/blob/apps/cic-cache/doc/openapi/server.yml",
			"externalURLs": [
				{
					"url": "https://github.com/grassrootseconomics/cic-stack/blob/42300a2d50be80e4735a97eba6cde9ce2c764701/apps/cic-cache/doc/openapi/server.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}