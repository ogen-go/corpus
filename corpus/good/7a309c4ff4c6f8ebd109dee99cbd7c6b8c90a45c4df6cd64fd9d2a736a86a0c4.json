{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openl-tablets/openl-tablets"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "Util/openl-openapi-parser/test-resources/test.converter/data_tables/openapi.json",
			"byteSize": 27014,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"validationTest_validationTest\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/webservice/validationTest/validationTest\",\n      \"variables\": {}\n    }\n  ],\n  \"paths\": {\n    \"/PrimitiveDatatype\": {\n      \"get\": {\n        \"summary\": \"Primitive dataType test\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CircleDatatype2\": {\n      \"get\": {\n        \"summary\": \"CircleDatatype2 CircleDatatype2()\",\n        \"description\": \"Rules method: org.openl.generated.beans.CircleDatatype2 CircleDatatype2()\",\n        \"operationId\": \"CircleDatatype2\",\n        \"responses\": {\n          \"422\": {\n            \"description\": \"Custom user errors in rules or validation errors in input parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Some message\",\n                  \"type\": \"USER_ERROR\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request format e.g. missing required field, unparseable JSON value, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Cannot parse 'bar' to JSON\",\n                  \"type\": \"BAD_REQUEST\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CircleDatatype2\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Mymethod\": {\n      \"get\": {\n        \"summary\": \"MyDatatype Mymethod()\",\n        \"description\": \"Rules method: org.openl.generated.beans.MyDatatype Mymethod()\",\n        \"operationId\": \"Mymethod\",\n        \"responses\": {\n          \"422\": {\n            \"description\": \"Custom user errors in rules or validation errors in input parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Some message\",\n                  \"type\": \"USER_ERROR\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request format e.g. missing required field, unparseable JSON value, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Cannot parse 'bar' to JSON\",\n                  \"type\": \"BAD_REQUEST\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MyDatatype\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/MyDatatype3\": {\n      \"get\": {\n        \"summary\": \"MyDatatype3 MyDatatype3()\",\n        \"description\": \"Rules method: org.openl.generated.beans.MyDatatype3 MyDatatype3()\",\n        \"operationId\": \"MyDatatype3\",\n        \"responses\": {\n          \"422\": {\n            \"description\": \"Custom user errors in rules or validation errors in input parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Some message\",\n                  \"type\": \"USER_ERROR\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request format e.g. missing required field, unparseable JSON value, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Cannot parse 'bar' to JSON\",\n                  \"type\": \"BAD_REQUEST\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MyDatatype3\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/childDatatype2\": {\n      \"get\": {\n        \"summary\": \"childDatatype2 childDatatype2()\",\n        \"description\": \"Rules method: org.openl.generated.beans.childDatatype2 childDatatype2()\",\n        \"operationId\": \"childDatatype2\",\n        \"responses\": {\n          \"422\": {\n            \"description\": \"Custom user errors in rules or validation errors in input parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Some message\",\n                  \"type\": \"USER_ERROR\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request format e.g. missing required field, unparseable JSON value, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Cannot parse 'bar' to JSON\",\n                  \"type\": \"BAD_REQUEST\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/childDatatype2\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/childDatatype1\": {\n      \"get\": {\n        \"summary\": \"childDatatype1 childDatatype1()\",\n        \"description\": \"Rules method: org.openl.generated.beans.childDatatype1 childDatatype1()\",\n        \"operationId\": \"childDatatype1\",\n        \"responses\": {\n          \"422\": {\n            \"description\": \"Custom user errors in rules or validation errors in input parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Some message\",\n                  \"type\": \"USER_ERROR\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request format e.g. missing required field, unparseable JSON value, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Cannot parse 'bar' to JSON\",\n                  \"type\": \"BAD_REQUEST\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/childDatatype1\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/CircleDatatype3\": {\n      \"get\": {\n        \"summary\": \"CircleDatatype3 CircleDatatype3()\",\n        \"description\": \"Rules method: org.openl.generated.beans.CircleDatatype3 CircleDatatype3()\",\n        \"operationId\": \"CircleDatatype3\",\n        \"responses\": {\n          \"422\": {\n            \"description\": \"Custom user errors in rules or validation errors in input parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Some message\",\n                  \"type\": \"USER_ERROR\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request format e.g. missing required field, unparseable JSON value, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Cannot parse 'bar' to JSON\",\n                  \"type\": \"BAD_REQUEST\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CircleDatatype3\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/MyDatatypeArr\": {\n      \"get\": {\n        \"summary\": \"MyDatatypeArr MyDatatypeArr()\",\n        \"description\": \"Rules method: org.openl.generated.beans.MyDatatypeArr MyDatatypeArr()\",\n        \"operationId\": \"MyDatatypeArr\",\n        \"responses\": {\n          \"422\": {\n            \"description\": \"Custom user errors in rules or validation errors in input parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Some message\",\n                  \"type\": \"USER_ERROR\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request format e.g. missing required field, unparseable JSON value, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Cannot parse 'bar' to JSON\",\n                  \"type\": \"BAD_REQUEST\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JAXRSErrorResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MyDatatypeArr\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"JAXRSErrorResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"USER_ERROR\",\n              \"RULES_RUNTIME\",\n              \"COMPILATION\",\n              \"SYSTEM\",\n              \"BAD_REQUEST\",\n              \"VALIDATION\"\n            ]\n          },\n          \"details\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"CircleDatatype1\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"someField1\": {\n            \"type\": \"string\"\n          },\n          \"someField2\": {\n            \"$ref\": \"#/components/schemas/CircleDatatype2\"\n          }\n        }\n      },\n      \"CircleDatatype2\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"anotheField1\": {\n            \"type\": \"string\"\n          },\n          \"anotheField2\": {\n            \"$ref\": \"#/components/schemas/CircleDatatype1\"\n          }\n        }\n      },\n      \"DoubleRange\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"lowerBound\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"upperBound\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"lowerBoundType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INCLUDING\",\n              \"EXCLUDING\"\n            ]\n          },\n          \"upperBoundType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INCLUDING\",\n              \"EXCLUDING\"\n            ]\n          }\n        }\n      },\n      \"IntRange\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"min\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"max\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"MyDatatype\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"field2\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"field3\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"field4\": {\n            \"type\": \"string\"\n          },\n          \"field5\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"field6\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"field7\": {\n            \"type\": \"string\",\n            \"format\": \"byte\"\n          },\n          \"field8\": {\n            \"type\": \"boolean\"\n          },\n          \"field9\": {\n            \"type\": \"boolean\"\n          },\n          \"field10\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"field11\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"field12\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"field13\": {\n            \"type\": \"string\"\n          },\n          \"field14\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"field15\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"field16\": {\n            \"type\": \"string\"\n          },\n          \"field17\": {\n            \"type\": \"number\"\n          },\n          \"field18\": {\n            \"type\": \"integer\"\n          },\n          \"field19\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"field20\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"field21\": {\n            \"type\": \"number\"\n          },\n          \"field22\": {\n            \"type\": \"integer\"\n          },\n          \"field23\": {\n            \"type\": \"string\",\n            \"format\": \"byte\"\n          },\n          \"field24\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"field25\": {\n            \"$ref\": \"#/components/schemas/DoubleRange\"\n          },\n          \"field26\": {\n            \"$ref\": \"#/components/schemas/StringRange\"\n          },\n          \"field27\": {\n            \"$ref\": \"#/components/schemas/IntRange\"\n          },\n          \"field28\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"field29\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"NumericComparableString\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"StringRange\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"lowerBound\": {\n            \"$ref\": \"#/components/schemas/NumericComparableString\"\n          },\n          \"upperBound\": {\n            \"$ref\": \"#/components/schemas/NumericComparableString\"\n          },\n          \"lowerBoundType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INCLUDING\",\n              \"EXCLUDING\"\n            ]\n          },\n          \"upperBoundType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INCLUDING\",\n              \"EXCLUDING\"\n            ]\n          }\n        }\n      },\n      \"MyDatatype1\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"string\"\n          },\n          \"field2\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        }\n      },\n      \"MyDatatype2\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field11\": {\n            \"type\": \"string\"\n          },\n          \"field22\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        }\n      },\n      \"MyDatatype3\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"param1\": {\n            \"$ref\": \"#/components/schemas/MyDatatype1\"\n          },\n          \"param2\": {\n            \"$ref\": \"#/components/schemas/MyDatatype2\"\n          },\n          \"param3\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MyDatatype1\"\n            }\n          }\n        }\n      },\n      \"childDatatype1\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/parentDatatype1\"\n          }\n        ]\n      },\n      \"childDatatype2\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/parentDatatype1\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"testField\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ]\n      },\n      \"parentDatatype1\": {\n        \"required\": [\n          \"@class\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"string\"\n          },\n          \"field2\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"@class\": {\n            \"type\": \"string\"\n          }\n        },\n        \"discriminator\": {\n          \"propertyName\": \"@class\"\n        }\n      },\n      \"subchild\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/childDatatype2\"\n          }\n        ]\n      },\n      \"CircleDatatype3\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"anotheField1\": {\n            \"type\": \"string\"\n          },\n          \"anotheField2\": {\n            \"$ref\": \"#/components/schemas/CircleDatatype3\"\n          }\n        }\n      },\n      \"MyDatatypeArr\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"field1\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"field2\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\",\n              \"format\": \"double\"\n            }\n          },\n          \"field3\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\",\n              \"format\": \"float\"\n            }\n          },\n          \"field4\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"field5\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"field6\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          \"field7\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"byte\"\n            }\n          },\n          \"field8\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"boolean\"\n            }\n          },\n          \"field9\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"boolean\"\n            }\n          },\n          \"field10\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          \"field11\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"field12\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\",\n              \"format\": \"float\"\n            }\n          },\n          \"field13\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"field14\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\",\n              \"format\": \"double\"\n            }\n          },\n          \"field15\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"field16\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"field17\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"field18\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"field19\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"field20\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\",\n              \"format\": \"double\"\n            }\n          },\n          \"field21\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          },\n          \"field22\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"field23\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"byte\"\n            }\n          },\n          \"field24\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          \"field25\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DoubleRange\"\n            }\n          },\n          \"field26\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StringRange\"\n            }\n          },\n          \"field27\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/IntRange\"\n            }\n          },\n          \"field28\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/openl-tablets/openl-tablets@ced3429fe2ac07371d46d337c2e43477c07cc096/-/blob/Util/openl-openapi-parser/test-resources/test.converter/data_tables/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/openl-tablets/openl-tablets/blob/ced3429fe2ac07371d46d337c2e43477c07cc096/Util/openl-openapi-parser/test-resources/test.converter/data_tables/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}