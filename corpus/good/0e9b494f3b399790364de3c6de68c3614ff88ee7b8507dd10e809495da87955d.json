{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Web-Dev-Collaborative/Github-Based-Projects"
		},
		"file": {
			"name": "sam.yaml",
			"size": 0,
			"path": "gr/github-secrets-keeper/sam.yaml",
			"byteSize": 16248,
			"content": "AWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nDescription: Exported by architect/package@1.0.39 on 2019-08-26T06:09:52.683Z\nResources:\n  Ghsk:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: staging\n      DefinitionBody:\n        openapi: 3.0.1\n        info:\n          title:\n            Ref: AWS::StackName\n        paths:\n          /api/user/client-secrets:\n            get:\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiUserClientSecrets.Arn}/invocations\n                responses:\n                  default:\n                    statusCode: '200'\n                    contentHandling: CONVERT_TO_TEXT\n                passthroughBehavior: when_no_match\n                httpMethod: POST\n                contentHandling: CONVERT_TO_TEXT\n                type: aws_proxy\n            post:\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostApiUserClientSecrets.Arn}/invocations\n                responses:\n                  default:\n                    statusCode: '200'\n                    contentHandling: CONVERT_TO_TEXT\n                passthroughBehavior: when_no_match\n                httpMethod: POST\n                contentHandling: CONVERT_TO_TEXT\n                type: aws_proxy\n          /api/user/client-secrets/{clientId}:\n            delete:\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteApiUserClientSecretsClientId.Arn}/invocations\n                responses:\n                  default:\n                    statusCode: '200'\n                    contentHandling: CONVERT_TO_TEXT\n                passthroughBehavior: when_no_match\n                httpMethod: POST\n                contentHandling: CONVERT_TO_TEXT\n                type: aws_proxy\n          /api/{clientId}/{code}:\n            get:\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiClientIdCode.Arn}/invocations\n                responses:\n                  default:\n                    statusCode: '200'\n                    contentHandling: CONVERT_TO_TEXT\n                passthroughBehavior: when_no_match\n                httpMethod: POST\n                contentHandling: CONVERT_TO_TEXT\n                type: aws_proxy\n          /:\n            get:\n              responses:\n                '200':\n                  description: 200 response\n              x-amazon-apigateway-integration:\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations\n                responses:\n                  default:\n                    statusCode: '200'\n                    contentHandling: CONVERT_TO_TEXT\n                passthroughBehavior: when_no_match\n                httpMethod: POST\n                contentHandling: CONVERT_TO_TEXT\n                type: aws_proxy\n          /{proxy+}:\n            x-amazon-apigateway-any-method:\n              parameters:\n              - name: proxy\n                in: path\n                required: true\n                schema:\n                  type: string\n              x-amazon-apigateway-integration:\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations\n                responses:\n                  default:\n                    statusCode: '200'\n                passthroughBehavior: when_no_match\n                httpMethod: POST\n                cacheNamespace: xlr8r\n                cacheKeyParameters:\n                - method.request.path.proxy\n                contentHandling: CONVERT_TO_TEXT\n                type: aws_proxy\n          /_static/{proxy+}:\n            x-amazon-apigateway-any-method:\n              parameters:\n              - name: proxy\n                in: path\n                required: true\n                schema:\n                  type: string\n              x-amazon-apigateway-integration:\n                uri:\n                  Fn::Sub:\n                  - http://${bukkit}.s3.${AWS::Region}.amazonaws.com/{proxy}\n                  - bukkit:\n                      Ref: StaticBucket\n                responses:\n                  default:\n                    statusCode: '200'\n                requestParameters:\n                  integration.request.path.proxy: method.request.path.proxy\n                passthroughBehavior: when_no_match\n                httpMethod: ANY\n                cacheNamespace: xlr8r2\n                cacheKeyParameters:\n                - method.request.path.proxy\n                type: http_proxy\n      EndpointConfiguration: REGIONAL\n      BinaryMediaTypes:\n      - '*~1*'\n      MinimumCompressionSize: 0\n  GetApiUserClientSecrets:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://ghsc/60c24bc871fd3233963f61e05ac4778f\n      Runtime: nodejs10.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: ghsk\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n          PYTHONPATH: /var/task/vendor:/var/runtime:/opt/python\n          ARC_STATIC_BUCKET:\n            Ref: StaticBucket\n          CLIENT_ID: 06515a89ea053688c263\n          CLIENT_SECRET: 758744f36d00b8f76e0bf921dbab50d2d84909b2\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        GetApiUserClientSecretsEvent:\n          Type: Api\n          Properties:\n            Path: /api/user/client-secrets\n            Method: GET\n            RestApiId:\n              Ref: Ghsk\n  PostApiUserClientSecrets:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://ghsc/82b4aaaa4248d86828032a46b7de8bb1\n      Runtime: nodejs10.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: ghsk\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n          PYTHONPATH: /var/task/vendor:/var/runtime:/opt/python\n          ARC_STATIC_BUCKET:\n            Ref: StaticBucket\n          CLIENT_ID: 06515a89ea053688c263\n          CLIENT_SECRET: 758744f36d00b8f76e0bf921dbab50d2d84909b2\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        PostApiUserClientSecretsEvent:\n          Type: Api\n          Properties:\n            Path: /api/user/client-secrets\n            Method: POST\n            RestApiId:\n              Ref: Ghsk\n  DeleteApiUserClientSecretsClientId:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://ghsc/9eb3ba8771ae92c0884a7e7323958e62\n      Runtime: nodejs10.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: ghsk\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n          PYTHONPATH: /var/task/vendor:/var/runtime:/opt/python\n          ARC_STATIC_BUCKET:\n            Ref: StaticBucket\n          CLIENT_ID: 06515a89ea053688c263\n          CLIENT_SECRET: 758744f36d00b8f76e0bf921dbab50d2d84909b2\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        DeleteApiUserClientSecretsClientIdEvent:\n          Type: Api\n          Properties:\n            Path: /api/user/client-secrets/{clientId}\n            Method: DELETE\n            RestApiId:\n              Ref: Ghsk\n  GetApiClientIdCode:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://ghsc/4dd7c2be3020c1a9c06d2092976dd2f5\n      Runtime: nodejs10.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: ghsk\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n          PYTHONPATH: /var/task/vendor:/var/runtime:/opt/python\n          ARC_STATIC_BUCKET:\n            Ref: StaticBucket\n          CLIENT_ID: 06515a89ea053688c263\n          CLIENT_SECRET: 758744f36d00b8f76e0bf921dbab50d2d84909b2\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        GetApiClientIdCodeEvent:\n          Type: Api\n          Properties:\n            Path: /api/{clientId}/{code}\n            Method: GET\n            RestApiId:\n              Ref: Ghsk\n  GetIndex:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://ghsc/aa38e7e4a3461e1882c0f6c357c45827\n      Runtime: nodejs10.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: ghsk\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n          PYTHONPATH: /var/task/vendor:/var/runtime:/opt/python\n          ARC_STATIC_BUCKET:\n            Ref: StaticBucket\n          CLIENT_ID: 06515a89ea053688c263\n          CLIENT_SECRET: 758744f36d00b8f76e0bf921dbab50d2d84909b2\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        GetIndexEvent:\n          Type: Api\n          Properties:\n            Path: /\n            Method: GET\n            RestApiId:\n              Ref: Ghsk\n  InvokeProxyPermission:\n    Type: AWS::Lambda::Permission\n    Properties:\n      FunctionName:\n        Ref: GetIndex\n      Action: lambda:InvokeFunction\n      Principal: apigateway.amazonaws.com\n      SourceArn:\n        Fn::Sub:\n        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${restApiId}/*/*\n        - restApiId:\n            Ref: Ghsk\n  StaticBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      AccessControl: PublicRead\n      WebsiteConfiguration:\n        IndexDocument: index.html\n        ErrorDocument: 404.html\n  UsersTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      KeySchema:\n      - AttributeName: id\n        KeyType: HASH\n      AttributeDefinitions:\n      - AttributeName: id\n        AttributeType: N\n      BillingMode: PAY_PER_REQUEST\n  AppsTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      KeySchema:\n      - AttributeName: clientId\n        KeyType: HASH\n      AttributeDefinitions:\n      - AttributeName: clientId\n        AttributeType: S\n      BillingMode: PAY_PER_REQUEST\n  Role:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service: lambda.amazonaws.com\n          Action: sts:AssumeRole\n      Policies:\n      - PolicyName: ArcGlobalPolicy\n        PolicyDocument:\n          Statement:\n          - Effect: Allow\n            Action:\n            - logs:CreateLogGroup\n            - logs:CreateLogStream\n            - logs:PutLogEvents\n            - logs:DescribeLogStreams\n            Resource: arn:aws:logs:*:*:*\n      - PolicyName: ArcStaticBucketPolicy\n        PolicyDocument:\n          Statement:\n          - Effect: Allow\n            Action:\n            - s3:GetObject\n            - s3:PutObject\n            - s3:DeleteObject\n            Resource:\n              Fn::Sub:\n              - arn:aws:s3:::${bukkit}\n              - bukkit:\n                  Ref: StaticBucket\n      - PolicyName: ArcDynamoPolicy\n        PolicyDocument:\n          Statement:\n          - Effect: Allow\n            Action:\n            - dynamodb:BatchGetItem\n            - dynamodb:BatchWriteItem\n            - dynamodb:PutItem\n            - dynamodb:DeleteItem\n            - dynamodb:GetItem\n            - dynamodb:Query\n            - dynamodb:Scan\n            - dynamodb:UpdateItem\n            - dynamodb:GetRecords\n            - dynamodb:GetShardIterator\n            - dynamodb:DescribeStream\n            - dynamodb:ListStreams\n            Resource:\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}\n              - tablename:\n                  Ref: UsersTable\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*\n              - tablename:\n                  Ref: UsersTable\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*\n              - tablename:\n                  Ref: UsersTable\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}\n              - tablename:\n                  Ref: AppsTable\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*\n              - tablename:\n                  Ref: AppsTable\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*\n              - tablename:\n                  Ref: AppsTable\n  RoleReflectionPolicy:\n    Type: AWS::IAM::Policy\n    DependsOn: Role\n    Properties:\n      PolicyName: ArcRoleReflectionPolicy\n      PolicyDocument:\n        Statement:\n        - Effect: Allow\n          Action: iam:GetRolePolicy\n          Resource:\n            Fn::Sub:\n            - arn:aws:iam::${AWS::AccountId}:role/${role}\n            - role:\n                Ref: Role\n      Roles:\n      - Ref: Role\n  UsersParam:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub:\n        - /${AWS::StackName}/tables/${tablename}\n        - tablename: users\n      Value:\n        Ref: UsersTable\n  AppsParam:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub:\n        - /${AWS::StackName}/tables/${tablename}\n        - tablename: apps\n      Value:\n        Ref: AppsTable\n  StaticBucketParam:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub:\n        - /${AWS::StackName}/static/${key}\n        - key: bucket\n      Value:\n        Ref: StaticBucket\n  StaticFingerprintParam:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub:\n        - /${AWS::StackName}/static/${key}\n        - key: fingerprint\n      Value: 'false'\n  ParameterStorePolicy:\n    Type: AWS::IAM::Policy\n    DependsOn: Role\n    Properties:\n      PolicyName: ArcParameterStorePolicy\n      PolicyDocument:\n        Statement:\n        - Effect: Allow\n          Action: ssm:GetParametersByPath\n          Resource:\n            Fn::Sub:\n            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}\n            - {}\n      Roles:\n      - Ref: Role\nOutputs:\n  API:\n    Description: API Gateway\n    Value:\n      Fn::Sub:\n      - https://${restApiId}.execute-api.${AWS::Region}.amazonaws.com/staging\n      - restApiId:\n          Ref: Ghsk\n  restApiId:\n    Description: HTTP restApiId\n    Value:\n      Ref: Ghsk\n  BucketURL:\n    Description: Bucket URL\n    Value:\n      Fn::Sub:\n      - http://${bukkit}.s3-website-${AWS::Region}.amazonaws.com\n      - bukkit:\n          Ref: StaticBucket\n",
			"canonicalURL": "/github.com/Web-Dev-Collaborative/Github-Based-Projects@7f8f7189337dfcc351c3215d1b2a7b5e8252c9f0/-/blob/gr/github-secrets-keeper/sam.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Web-Dev-Collaborative/Github-Based-Projects/blob/7f8f7189337dfcc351c3215d1b2a7b5e8252c9f0/gr/github-secrets-keeper/sam.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}