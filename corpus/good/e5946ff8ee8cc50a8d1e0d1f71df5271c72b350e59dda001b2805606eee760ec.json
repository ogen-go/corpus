{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tulir/maulu"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "spec.yaml",
			"byteSize": 7833,
			"content": "openapi: 3.0.1\ninfo:\n  title: mau\\Lu\n  description: A fairly simple URL shortening backend written in Go\n  contact:\n    email: tulir@maunium.net\n  license:\n    name: GNU Affero General Public License Version 3\n    url: https://www.gnu.org/licenses/agpl-3.0.html\n  version: 2.0.0\nservers:\n  - url: https://mau.lu\ncomponents:\n  schemas:\n    ShortenRequest:\n      type: object\n      required:\n        - url\n      properties:\n        type:\n          type: string\n          description: \"The type of shortening to do\"\n          enum:\n            - url\n            - google\n            - duckduckgo\n        url:\n          type: string\n          description: \"The URL or search query to shorten\"\n          example: https://example.com\n        redirect:\n          type: string\n          description: \"The redirect type\"\n          enum:\n            - http\n            - html\n        short_code:\n          type: string\n          description: \"The requested short URL\"\n          example: foo\n    URLInfo:\n      type: object\n      properties:\n        url:\n          type: string\n          description: \"The target URL\"\n          example: https://example.com\n        redirect:\n          type: string\n          description: \"The redirect type\"\n          enum:\n            - http\n            - html\n        short_code:\n          type: string\n          description: \"The code part of the short URL\"\n          example: foo\n        short_url:\n          type: string\n          description: \"The full short URL\"\n          example: https://mau.lu/foo\n  responses:\n    ErrorBadRequestUnshorten:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errcode:\n                type: string\n                description: \"A machine-readable error code\"\n                enum:\n                  - NOT_JSON\n                  - INVALID_URL\n                  - NOT_SHORTENED\n              error:\n                type: string\n                description: \"A human-readable error message\"\n                example: Request body is not JSON\n    ErrorBadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errcode:\n                type: string\n                description: \"A machine-readable error code\"\n                enum:\n                  - NOT_JSON\n                  - MISSING_URL\n                  - UNKNOWN_REDIRECT_TYPE\n                  - ILLEGAL_CHARACTERS\n                  - ALREADY_SHORTENED\n                  - INVALID_URL\n                  - ILLEGAL_SCHEME\n              error:\n                type: string\n                description: \"A human-readable error message\"\n                example: Request body is not JSON\n    ErrorNotFound:\n      description: URL not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errcode:\n                type: string\n                description: \"A machine-readable error code\"\n                enum:\n                  - NOT_FOUND\n              error:\n                type: string\n                description: \"A human-readable error message\"\n                example: foo is not a valid short url\n    ErrorConflict:\n      description: Requested short URL already exists\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errcode:\n                type: string\n                description: \"A machine-readable error code\"\n                enum:\n                  - ALREADY_IN_USE\n              error:\n                type: string\n                description: \"A human-readable error message\"\n                example: The short url foo is already in use.\n    ErrorTooLong:\n      description: Given URL is too long\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errcode:\n                type: string\n                description: \"A machine-readable error code\"\n                enum:\n                  - TOO_LONG\n              error:\n                type: string\n                description: \"A human-readable error message\"\n                example: The URL you entered is too long\n    Exists:\n      description: Short link already existed to same target\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/URLInfo\"\n    Created:\n      description: Short link created\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/URLInfo\"\npaths:\n  /api/shorten:\n    post:\n      summary: Shorten a URL\n      operationId: shorten\n      requestBody:\n        description: The URL and extra information to shorten\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShortenRequest'\n        required: true\n      responses:\n        200:\n          $ref: \"#/components/responses/Exists\"\n        201:\n          $ref: \"#/components/responses/Created\"\n        400:\n          $ref: \"#/components/responses/ErrorBadRequest\"\n        409:\n          $ref: \"#/components/responses/ErrorConflict\"\n        413:\n          $ref: \"#/components/responses/ErrorTooLong\"\n  /api/unshorten:\n    post:\n      summary: Unshorten a URL\n      operationId: unshorten\n      requestBody:\n        description: The URL to unshorten\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - url\n              properties:\n                url:\n                  type: string\n                  description: The full shortened URL to unshorten\n                  example: https://mau.lu/foo\n      responses:\n        200:\n          description: URL found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/URLInfo\"\n        400:\n          $ref: \"#/components/responses/ErrorBadRequestUnshorten\"\n        404:\n          $ref: \"#/components/responses/ErrorNotFound\"\n  /{short}:\n    parameters:\n      - in: path\n        name: short\n        required: true\n        schema:\n          type: string\n          description: The short URL to get or create\n          pattern: \"[a-zA-Z0-9-_ ]+\"\n    get:\n      summary: Get the target of a short URL\n      operationId: unshortenDirect\n      responses:\n        200:\n          description: URL found and redirect type is HTML, or user requested JSON output.\n          content:\n            text/html:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/URLInfo\"\n        301:\n          description: URL found and redirect type is HTTP.\n          headers:\n            Location:\n              schema:\n                type: string\n              description: The target of the requested short URL\n        404:\n          $ref: \"#/components/responses/ErrorNotFound\"\n    put:\n      summary: Shorten a URL\n      operationId: shortenDirect\n      requestBody:\n        description: The URL and extra information to shorten\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShortenRequest'\n          text/plain:\n            schema:\n              type: string\n              description: The URL to shorten as plain text\n        required: true\n      responses:\n        200:\n          $ref: \"#/components/responses/Exists\"\n        201:\n          $ref: \"#/components/responses/Created\"\n        400:\n          $ref: \"#/components/responses/ErrorBadRequest\"\n        409:\n          $ref: \"#/components/responses/ErrorConflict\"\n        413:\n          $ref: \"#/components/responses/ErrorTooLong\"",
			"canonicalURL": "/github.com/tulir/maulu@ebc20dd27ecf12a43bbf3f3f5766d95728bb3df5/-/blob/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tulir/maulu/blob/ebc20dd27ecf12a43bbf3f3f5766d95728bb3df5/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}