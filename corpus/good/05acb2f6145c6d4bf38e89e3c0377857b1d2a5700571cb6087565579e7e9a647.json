{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AnderssonPeter/MiFloraSwarm"
		},
		"file": {
			"name": "open.api.schema.json",
			"size": 0,
			"path": "MiFloraGateway/ClientApp/src/app/api/rest/open.api.schema.json",
			"byteSize": 7764,
			"content": "{\n  \"x-generator\": \"NSwag v13.6.1.0 (NJsonSchema v10.1.21.0 (Newtonsoft.Json v12.0.0.0))\",\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"My Title\",\n    \"version\": \"1.0.0\"\n  },\n  \"paths\": {\n    \"/Onboarding/isSetup\": {\n      \"get\": {\n        \"tags\": [\n          \"\"\n        ],\n        \"operationId\": \"_IsSetup\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Onboarding/setup\": {\n      \"post\": {\n        \"tags\": [\n          \"\"\n        ],\n        \"operationId\": \"_Setup\",\n        \"requestBody\": {\n          \"x-name\": \"model\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SetupModel\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResult\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SuccessResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Authentication/Login/{username}/{password}\": {\n      \"post\": {\n        \"tags\": [\n          \"\"\n        ],\n        \"operationId\": \"_Login\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserModel\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Authentication/Logout\": {\n      \"post\": {\n        \"tags\": [\n          \"\"\n        ],\n        \"operationId\": \"_Logout\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Authentication/Register\": {\n      \"post\": {\n        \"tags\": [\n          \"\"\n        ],\n        \"operationId\": \"_Register\",\n        \"requestBody\": {\n          \"x-name\": \"model\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterModel\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-position\": 1\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/Authentication/GetCurrentUser\": {\n      \"get\": {\n        \"tags\": [\n          \"\"\n        ],\n        \"operationId\": \"_GetCurrentUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserModel\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ErrorResult\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"errorMessage\",\n          \"errors\"\n        ],\n        \"properties\": {\n          \"errorMessage\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorResultField\"\n            }\n          }\n        }\n      },\n      \"ErrorResultField\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"fields\",\n          \"description\"\n        ],\n        \"properties\": {\n          \"fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"code\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          }\n        }\n      },\n      \"SuccessResult\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"successMessage\"\n        ],\n        \"properties\": {\n          \"successMessage\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          }\n        }\n      },\n      \"SetupModel\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"username\",\n          \"password\",\n          \"settings\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"x-dictionaryKey\": {\n              \"$ref\": \"#/components/schemas/Settings\"\n            },\n            \"additionalProperties\": {}\n          }\n        }\n      },\n      \"Settings\": {\n        \"type\": \"integer\",\n        \"description\": \"\",\n        \"x-enumNames\": [\n          \"UpdateBatteryAndVersionCron\",\n          \"UpdateValuesCron\",\n          \"MQTTClientId\",\n          \"MQTTServerAddress\",\n          \"MQTTPort\",\n          \"MQTTUsername\",\n          \"MQTTPassword\",\n          \"MQTTUseTLS\"\n        ],\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7\n        ]\n      },\n      \"UserModel\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"username\",\n          \"isAdmin\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"isAdmin\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"RegisterModel\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"required\": [\n          \"username\",\n          \"password\",\n          \"isAdmin\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"minLength\": 1\n          },\n          \"isAdmin\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/AnderssonPeter/MiFloraSwarm@869c0f1cbee3fcf4f8b71b30b68f9f3858922c42/-/blob/MiFloraGateway/ClientApp/src/app/api/rest/open.api.schema.json",
			"externalURLs": [
				{
					"url": "https://github.com/AnderssonPeter/MiFloraSwarm/blob/869c0f1cbee3fcf4f8b71b30b68f9f3858922c42/MiFloraGateway/ClientApp/src/app/api/rest/open.api.schema.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}