{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nguyensjsu/fa19-281-kohara-hi-kohara"
		},
		"file": {
			"name": "api-design.yaml",
			"size": 0,
			"path": "api-design.yaml",
			"byteSize": 9023,
			"content": "openapi: 3.0.0\ninfo:\n  version: '1'\n  title: ''\n  description: ''\n# Added by API Auto Mocking Plugin\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/saketthakare/instagram-cmpe281/1\n\ntags: \n  - name: account\n    description: Calls related to account service\n  - name: post\n    description: Calls related to post service\n  - name: comment\n    description: Calls related to comment service\n  - name: like\n    description: Calls related to like service\n  - name: follow\n    description: Calls related to follow service\n  - name: timeline\n    description: Calls related to timeline service\n    \npaths: \n  /signup:\n    post:\n      tags:\n        - account\n      summary: User signup\n      description: Signup operation for a user\n      responses:\n        '200':\n          description: successful signup\n        '400':\n          description: bad input parameter\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n  /login:\n    post:\n      tags:\n        - account\n      summary: User login\n      description: Login operation for user\n      responses:\n        '200':\n          description: successful login\n        '400':\n          description: bad input parameter\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  description: Username\n                  type: string\n                password:\n                  description: Password\n                  type: string\n              required:\n                - username\n                - password\n  '/posts/{id}':\n    get:\n      tags:\n        - post\n      summary: Get all post for a certain user\n      description: Get all post for a certain user, this will be used for populating timeline\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          description: Posts retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TimelinePost'\n        '400':\n          description: bad input parameter\n    post:\n      tags:\n        - post\n      summary: Add new post for a user\n      description: User can upload a new post using this route\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Post'\n      responses:\n        '200':\n          description: Operation successfull\n        '400':\n          description: Bad input parameter\n  '/comments/{id}':\n    get:\n      tags:\n        - comment\n      summary: Get all comments for a certain post\n      description: Get all comments for a certain post, this will be used for populating timeline\n      parameters:\n        - $ref: '#/components/parameters/postId'\n      responses:\n        '200':\n          description: Comments retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Comment'\n        '400':\n          description: bad input parameter\n    post:\n      tags:\n        - comment\n      summary: Add new comment for a post\n      description: User can add new comment for a post\n      parameters:\n        - $ref: '#/components/parameters/postId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Comment'\n      responses:\n        '200':\n          description: Operation successfull\n        '400':\n          description: Bad input parameter\n  '/likes/{id}':\n    get:\n      tags:\n        - like\n      summary: Get all likes for a certain post\n      description: Get all likes for a certain post, this will be used for populating timeline\n      parameters:\n        - $ref: '#/components/parameters/postId'\n      responses:\n        '200':\n          description: Likes retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Like'\n        '400':\n          description: bad input parameter\n    post:\n      tags:\n        - like\n      summary: Add new like for a post\n      description: User can add new like for a post\n      parameters:\n        - $ref: '#/components/parameters/postId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Like'\n      responses:\n        '200':\n          description: Operation successfull\n        '400':\n          description: Bad input parameter\n  '/followers/{id}':\n    get:\n      tags:\n        - follow\n      summary: Get all followers for a certain user\n      description: Get all followers for a certain user, this will be used for populating timeline\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          description: Likes retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Follow'\n        '400':\n          description: bad input parameter\n  '/following/{id}':\n    get:\n      tags:\n        - follow\n      summary: Get all users whom user is following\n      description: Get list of user following, this will be used for populating timeline\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          description: Likes retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Follow'\n        '400':\n          description: bad input parameter\n  '/follow/{id}':\n    post:\n      tags:\n        - follow\n      summary: Add new follower for a user\n      description: Add new follower for a user\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Follow'\n      responses:\n        '200':\n          description: Operation successfull\n        '400':\n          description: Bad input parameter\n  '/timeline/{id}':\n    get:\n      tags:\n        - timeline\n      summary: Get timeline for a certain user\n      description: This will be used for populating timeline\n      parameters:\n        - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          description: Timeline retrieved successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TimelinePost'\n        '400':\n          description: bad input parameter\n    \ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        name:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n          format: password\n        profilePicture:\n          type: string\n      required:\n        - name\n        - username\n        - password\n        - profilePicture\n    Post:\n      type: object\n      properties:\n        Username:\n          type: string\n        Image:\n          type: string\n        Caption:\n          type: string\n      required:\n        - Username\n        - Image\n        - Caption\n    TimelinePost:\n      type: object\n      properties:\n        Username:\n          type: string\n        Image:\n          type: string\n        Caption:\n          type: string\n        Likes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Like'\n        Comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Comment'\n      required:\n        - Username\n        - Image\n        - Caption\n        - Likes\n        - Comments\n    Comment:\n      type: object\n      properties:\n        Username:\n          type: string\n        Message:\n          type: string\n      required:\n        - Username\n        - Message\n    Like:\n      type: object\n      properties:\n        Username:\n          type: string\n      required:\n        - Username\n    Follow:\n      type: object\n      properties:\n        UserId:\n          type: string\n      required:\n        - UserId\n\n  parameters:\n    userId:\n      name: id\n      in: path\n      description: ID of the user\n      required: true\n      schema:\n        type: string\n    postId:\n      name: id\n      in: path\n      description: ID of the post\n      required: true\n      schema:\n        type: string",
			"canonicalURL": "/github.com/nguyensjsu/fa19-281-kohara-hi-kohara@8a392cc18277f08eab9184ed6070ba2e5a4e5cef/-/blob/api-design.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nguyensjsu/fa19-281-kohara-hi-kohara/blob/8a392cc18277f08eab9184ed6070ba2e5a4e5cef/api-design.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}