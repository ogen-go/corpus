{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TechCafeFreedom/TODONE-server"
		},
		"file": {
			"name": "api-document.yml",
			"size": 0,
			"path": "api-document.yml",
			"byteSize": 37706,
			"content": "openapi: 3.0.0\ninfo:\n  title: TODONE api server\n  description: TODONE\n  version: 1.0.0\ntags:\n  - name: user\n    description: user data\n  - name: board\n    description: board\n  - name: todo\n    description: todo\n  - name: label\n    description: label\npaths:\n  /view/users/self:\n    get:\n      tags:\n        - user\n      summary: 自分自身のプロフィール情報取得API\n      description: ユーザ情報取得API（自分自身）\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n      responses:\n        '200':\n          description: return user profile by idp infomation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUserResponse'\n              examples:\n                example:\n                  value:\n                    name: 鈴木一郎\n                    thumbnail: 'https://google.com/ichiro.png'\n                    created_at: '2020/01/01 11:11:11'\n                    updated_at: '2020/01/01 11:11:11'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /action/users/self:\n    put:\n      tags:\n        - user\n      summary: 自分自身のユーザ情報更新API\n      description: ユーザのプロフィール情報更新API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateUser'\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                thumbnail:\n                  type: string\n        description: どちらか一方のみの更新であっても必ず両方の情報をBodyに含めること！\n      responses:\n        '200':\n          description: 更新に成功したらステータスコード（200）のみ返却\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateUserResponse'\n              examples:\n                example:\n                  value:\n                    name: 鈴木一郎\n                    thumbnail: 'https://s3.com/hoge.png'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: ''\n    post:\n      summary: 自分自身のユーザ情報登録API\n      operationId: ''\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateUserResponse'\n              examples:\n                example:\n                  value:\n                    name: 鈴木一郎\n                    thumbnail: 'https://google.com/hoge.png'\n      description: ユーザ作成API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: ユーザ名\n                thumbnail:\n                  type: string\n                  description: アイコン画像のLink\n        description: firebaseで作成したユーザ情報を自前DBに保存するAPI\n      tags:\n        - user\n  /view/boards:\n    get:\n      tags:\n        - board\n      summary: プロジェクト一覧取得API\n      description: プロジェクト一覧取得API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n      responses:\n        '200':\n          description: return boards that a request user joins\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetBoardsResponse'\n              examples:\n                example:\n                  value:\n                    - board_id: 1\n                      title: プロジェクトタイトル\n                      description: プロジェクトの説明\n                      author:\n                        name: 鈴木一郎\n                        thumbnail: 'https://google.com/hoge.png'\n                        createdAt: '2020/02/22 22:22:22'\n                        updatedAt: '2020/02/22 22:22:22'\n                      members:\n                        - name: 鈴木一郎\n                          thumbnail: 'https://google.com/hoge.png'\n                          createdAt: '2020/02/22 22:22:22'\n                          updatedAt: '2020/02/22 22:22:22'\n                        - name: 佐藤次郎\n                          thumbnail: 'https://google.com/hoge.png'\n                          createdAt: '2020/02/22 22:22:22'\n                          updatedAt: '2020/02/22 22:22:22'\n                      todos:\n                        - todo_id: sampleID\n                          title: sample title\n                          content: sample content\n                          deadline: string format\n                          state: string?\n                          author:\n                            name: 鈴木一郎\n                            thumbnail: 'https://google.com/hoge.png'\n                            createdAt: '2020/02/22 22:22:22'\n                            updatedAt: '2020/02/22 22:22:22'\n                          label:\n                            - label_id: 1\n                              name: ラベル名\n                              description: ラベルの説明\n                              color: '#bbb'\n                              createdAt: '2020/02/22 22:22:22'\n                              updatedAt: '2020/02/22 22:22:22'\n                          createdAt: '2020/02/22 22:22:22'\n                          updatedAt: '2020/02/22 22:22:22'\n                      labels:\n                        - label_id: 1\n                          name: ラベル名\n                          description: ラベルの説明\n                          color: '#bbb'\n                          createdAt: '2020/02/22 22:22:22'\n                          updatedAt: '2020/02/22 22:22:22'\n                      createdAt: '2020/02/22 22:22:22'\n                      updatedAt: '2020/02/22 22:22:22'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: ''\n  '/view/boards/{board_id}':\n    get:\n      tags:\n        - board\n      summary: プロジェクト情報取得API（プロジェクトID指定）\n      description: プロジェクトIDをして１件取得するAPI\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n      responses:\n        '200':\n          description: return a board object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBoardResponse'\n              examples:\n                example:\n                  value:\n                    board_id: 1\n                    title: プロジェクトタイトル\n                    description: プロジェクトの説明\n                    author:\n                      name: 鈴木一郎\n                      thumbnail: 'https://google.com/hoge.png'\n                      createdAt: '2020/02/22 22:22:22'\n                      updatedAt: '2020/02/22 22:22:22'\n                    members:\n                      - name: 鈴木一郎\n                        thumbnail: 'https://google.com/hoge.png'\n                        createdAt: '2020/02/22 22:22:22'\n                        updatedAt: '2020/02/22 22:22:22'\n                      - name: 佐藤次郎\n                        thumbnail: 'https://google.com/hoge.png'\n                        createdAt: '2020/02/22 22:22:22'\n                        updatedAt: '2020/02/22 22:22:22'\n                    todos:\n                      - todo_id: sampleID\n                        title: sample title\n                        content: sample content\n                        deadline: string format\n                        state: string?\n                        author:\n                          name: 鈴木一郎\n                          thumbnail: 'https://google.com/hoge.png'\n                          createdAt: '2020/02/22 22:22:22'\n                          updatedAt: '2020/02/22 22:22:22'\n                        label:\n                          - label_id: 1\n                            name: ラベル名\n                            description: ラベルの説明\n                            color: '#bbb'\n                            createdAt: '2020/02/22 22:22:22'\n                            updatedAt: '2020/02/22 22:22:22'\n                        createdAt: '2020/02/22 22:22:22'\n                        updatedAt: '2020/02/22 22:22:22'\n                    labels:\n                      - label_id: 1\n                        name: ラベル名\n                        description: ラベルの説明\n                        color: '#bbb'\n                        createdAt: '2020/02/22 22:22:22'\n                        updatedAt: '2020/02/22 22:22:22'\n                    createdAt: '2020/02/22 22:22:22'\n                    updatedAt: '2020/02/22 22:22:22'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/view/boards/{board_id}/todos':\n    get:\n      tags:\n        - todo\n      summary: todo一覧取得API（プロジェクトID指定）\n      description: 指定プロジェクトのtodo一覧取得API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n      responses:\n        '200':\n          description: return an array of todo objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetTodosResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/view/boards/{board_id}/labels':\n    get:\n      tags:\n        - label\n      summary: プロジェクト内使用可能ラベル取得API\n      description: プロジェクト内で使えるラベル一覧取得API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n      responses:\n        '200':\n          description: return array of label objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetLabelsResponse'\n              examples:\n                example:\n                  value:\n                    - label_id: 1\n                      name: ラベル名\n                      description: ラベルの説明\n                      color: '#bbb'\n                      createdAt: '2020/02/22 22:22:22'\n                      updatedAt: '2020/02/22 22:22:22'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /action/boards:\n    post:\n      tags:\n        - board\n      summary: 新規プロジェクト作成API\n      description: 新規プロジェクト作成API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateBoard'\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                description:\n                  type: string\n        description: 新規作成するプロジェクトのタイトルと説明情報\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBoardResponse'\n              examples:\n                example:\n                  value:\n                    board_id: 1\n                    title: プロジェクトタイトル\n                    description: プロジェクト説明\n                    created_at: '2020/01/01 11:11:11'\n                    updated_at: '2020/01/01 11:11:11'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/action/boards/{board_id}':\n    put:\n      tags:\n        - board\n      summary: プロジェクト情報更新API\n      description: プロジェクトのタイトル・説明を更新するAPI\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - name: board_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBoardResponse'\n              examples:\n                example:\n                  value:\n                    board_id: 1\n                    title: プロジェクトタイトル\n                    description: プロジェクト説明\n                    created_at: '2020/01/01 11:11:11'\n                    updated_at: '2020/01/01 11:11:11'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                description:\n                  type: string\n        description: タイトル・説明のどちらか片方だけの更新であっても必ず両方の情報を送信すること！\n      operationId: ''\n    delete:\n      tags:\n        - board\n      summary: プロジェクト削除API\n      description: 指定されたプロジェクトを削除する\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - name: board_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    parameters:\n      - $ref: '#/components/parameters/BoardID'\n  '/view/boards/{board_id}/todos/{todo_id}':\n    get:\n      tags:\n        - todo\n      summary: todoに付与されているラベル取得API\n      description: todo_idによるtodo情報取得API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n        - $ref: '#/components/parameters/TodoID'\n      responses:\n        '200':\n          description: return todo object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTodoResponse'\n              examples:\n                example:\n                  value:\n                    todo_id: sampleID\n                    title: sample title\n                    content: sample content\n                    deadline: string format\n                    state: string?\n                    author:\n                      name: 鈴木一郎\n                      thumbnail: 'https://google.com/hoge.png'\n                      createdAt: '2020/02/22 22:22:22'\n                      updatedAt: '2020/02/22 22:22:22'\n                    label:\n                      - label_id: 1\n                        name: ラベル名\n                        description: ラベルの説明\n                        color: '#bbb'\n                        createdAt: '2020/02/22 22:22:22'\n                        updatedAt: '2020/02/22 22:22:22'\n                    createdAt: '2020/02/22 22:22:22'\n                    updatedAt: '2020/02/22 22:22:22'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/action/boards/{board_id}/todos':\n    post:\n      tags:\n        - todo\n      summary: 新規todo作成API\n      description: 指定されたプロジェクトに紐づくtodoを作成するAPI\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - name: board_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateTodo'\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                content:\n                  type: string\n                deadline:\n                  type: string\n        description: 'todo情報（title, content, deadline）を送信する'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTodoResponse'\n              examples:\n                example:\n                  value:\n                    title: todoタイトル\n                    content: todoの内容\n                    deadline: '2020/01/01 11:11:11'\n                    state: 1\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    parameters:\n      - $ref: '#/components/parameters/BoardID'\n  '/action/boards/{board_id}/todos/{todo_id}':\n    put:\n      tags:\n        - todo\n      summary: todo情報更新API\n      description: todo情報更新API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - name: board_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: todo_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateTodo'\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: todoタイトル\n                content:\n                  type: string\n                  description: コンテンツ内容\n                deadline:\n                  type: string\n                  description: 期限日時\n                state:\n                  type: integer\n                  description: 'todo: 1 / wip: 2 / done: 3'\n        description: |-\n          todoの更新情報\n          いずれか1つだけの変更の場合でも全ての情報を送ること！\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTodoRequest'\n              examples:\n                example:\n                  value:\n                    title: todoタイトル\n                    content: todo内容\n                    deadline: '2020/01/01 11:11:11'\n                    state: 1\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: ''\n    delete:\n      tags:\n        - todo\n      summary: todo削除API\n      description: 指定されたtodoを削除する\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - name: board_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: todo_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/NoContent'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    parameters:\n      - $ref: '#/components/parameters/BoardID'\n      - $ref: '#/components/parameters/TodoID'\n  '/action/boards/{board_id}/labels':\n    post:\n      tags:\n        - label\n      summary: プロジェクト内で使えるラベル新規作成API\n      description: プロジェクトで使えるラベルを追加するAPI\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateLabel'\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: ラベル名\n                description:\n                  type: string\n                  description: ラベルの説明\n                color:\n                  type: string\n                  description: ラベルの色\n        description: 作成するラベルの情報\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLabelResponse'\n              examples:\n                example:\n                  value:\n                    name: ラベル名\n                    description: ラベル説明\n                    color: '#bbb'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      operationId: ''\n    parameters:\n      - $ref: '#/components/parameters/BoardID'\n  '/action/boards/{board_id}/labels/{label_id}':\n    put:\n      tags:\n        - label\n      summary: ラベル情報更新API\n      description: ラベル情報更新API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n        - $ref: '#/components/parameters/LabelID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateLabel'\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: ラベル名\n                description:\n                  type: string\n                  description: ラベルの説明\n                color:\n                  type: string\n                  description: ラベルの色\n      responses:\n        '200':\n          description: return a updated label\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLabelResponse'\n              examples:\n                example:\n                  value:\n                    name: ラベル名\n                    description: ラベル説明\n                    color: '#bbb'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - label\n      summary: ラベル削除API\n      description: ''\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n        - $ref: '#/components/parameters/LabelID'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    parameters:\n      - $ref: '#/components/parameters/BoardID'\n      - $ref: '#/components/parameters/LabelID'\n  '/action/boards/{board_id}/todos/{todo_id}/label':\n    post:\n      tags:\n        - label\n      summary: todoにラベルを付与するAPI\n      description: todoに付与したラベルを登録するAPI\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n        - $ref: '#/components/parameters/TodoID'\n      requestBody:\n        description: 新規作成するラベル情報\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: ラベル名\n                description:\n                  type: string\n                  description: ラベルの説明\n                color:\n                  type: string\n                  description: ラベルの色\n      responses:\n        '200':\n          description: return labels on a todo\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLabelResponse'\n              examples:\n                example:\n                  value:\n                    name: ラベル名\n                    description: ラベル説明\n                    color: '#bbb'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    parameters:\n      - $ref: '#/components/parameters/BoardID'\n      - $ref: '#/components/parameters/TodoID'\n  '/action/boards/{board_id}/todos/{todo_id}/label/{label_id}':\n    delete:\n      tags:\n        - label\n      summary: todoに登録されているラベル解除API\n      description: ''\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n        - $ref: '#/components/parameters/BoardID'\n        - $ref: '#/components/parameters/TodoID'\n        - $ref: '#/components/parameters/LabelID'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      summary: todoに付与されているラベルの情報更新API\n      operationId: ''\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLabelResponse'\n              examples:\n                example:\n                  value:\n                    name: ラベル名\n                    description: ラベル説明\n                    color: '#bbb'\n      description: ラベル情報更新API\n      parameters:\n        - $ref: '#/components/parameters/AccessToken'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: ラベル名\n                description:\n                  type: string\n                  description: ラベルの説明\n                color:\n                  type: string\n                  description: ラベルの色\n      tags:\n        - label\n    parameters:\n      - $ref: '#/components/parameters/BoardID'\n      - $ref: '#/components/parameters/TodoID'\n      - $ref: '#/components/parameters/LabelID'\ncomponents:\n  schemas:\n    AccessToken:\n      type: string\n      description: Firebaseから取得できるjwtトークン\n    UpdateUserRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        thumbnail:\n          type: string\n    UpdateBoardRequest:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n    UpdateTodoResponse:\n      type: object\n      description: todo情報更新レスポンス\n      x-tags:\n        - todo\n      title: Update todo response\n      properties:\n        id:\n          type: integer\n          description: todoID\n        title:\n          type: string\n          description: todoタイトル\n        content:\n          type: string\n          description: todoコンテンツ（内容）\n        deadline:\n          type: string\n          description: 期限日時\n        state:\n          description: 'todo: 1 / wip: 2 / done: 3'\n          type: integer\n        created_at:\n          type: string\n          description: 作成日時\n        updated_at:\n          type: string\n          description: 最終更新日時\n      x-examples: {}\n    UpdateTodoRequest:\n      type: object\n      properties:\n        title:\n          type: string\n        content:\n          type: string\n        deadline:\n          type: string\n        state:\n          type: string\n    UpdateLabelResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        color:\n          type: string\n        created_at:\n          type: string\n        updated_at:\n          type: string\n      title: Update label response\n      description: ラベル情報更新レスポンス\n      x-tags:\n        - label\n    UpdateLabelRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        color:\n          type: string\n    ErrorResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n    UpdateUserResponse:\n      title: Update user response\n      type: object\n      description: ユーザ情報更新レスポンス\n      properties:\n        name:\n          type: string\n          description: ユーザ名\n        thumbnail:\n          type: string\n          description: アイコン画像のURL\n    UpdateBoardResponse:\n      title: Update board response\n      type: object\n      properties:\n        id:\n          type: integer\n          description: プロジェクトID\n        title:\n          type: string\n          description: プロジェクトタイトル\n        description:\n          type: string\n          description: プロジェクトの説明\n        created_at:\n          type: string\n          description: 作成日\n        updated_at:\n          type: string\n          description: 最終更新日時\n      description: プロジェクト情報更新レスポンス\n    GetUserResponse:\n      title: GetUserResponse\n      type: object\n      description: ユーザリソース取得情報\n      properties:\n        name:\n          type: string\n          description: ユーザ名\n        thumbnail:\n          type: string\n          description: アイコン画像URL\n        created_at:\n          type: string\n          description: 作成日時\n        updated_at:\n          type: string\n          description: 最終更新日時\n      x-tags:\n        - user\n      x-examples:\n        example:\n          name: 鈴木一郎\n          thumbnail: 'https://google.com/ichiro.png'\n          created_at: '2020/01/01 11:11:11'\n          updated_at: '2020/01/01 11:11:11'\n    GetBoardResponse:\n      title: GetBoardResponse\n      type: object\n      description: プロジェクト取得情報\n      x-tags:\n        - board\n      x-examples: {}\n      properties:\n        board_id:\n          type: integer\n        title:\n          type: string\n        description:\n          type: string\n        author:\n          $ref: '#/components/schemas/GetUserResponse'\n        members:\n          $ref: '#/components/schemas/GetMembersResource'\n        todos:\n          $ref: '#/components/schemas/GetTodosResponse'\n    GetLabelResponse:\n      title: GetLabelResponse\n      type: object\n      properties:\n        label_id:\n          type: integer\n          description: ラベルID\n        name:\n          type: string\n          description: ラベル名\n        description:\n          type: string\n          description: ラベルの説明\n        color:\n          type: string\n          description: ラベルの色\n        created_at:\n          type: string\n          description: 作成日時\n        updated_at:\n          type: string\n          description: 最終更新日時\n      description: ラベル取得情報\n      x-tags:\n        - label\n      x-examples:\n        example:\n          label_id: 1\n          name: bug\n          description: バグ\n          color: '#FFKESD'\n          created_at: '2020/01/01 11:11:11'\n          updated_at: '2020/01/01 11:11:11'\n    GetTodoResponse:\n      title: GetTodoResponse\n      type: object\n      description: todo取得情報\n      x-tags:\n        - todo\n      properties:\n        todo_id:\n          type: integer\n        title:\n          type: string\n        content:\n          type: string\n        deadline:\n          type: string\n        state:\n          type: integer\n        author:\n          $ref: '#/components/schemas/GetUserResponse'\n        labels:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetLabelResponse'\n        created_at:\n          type: string\n        updated_at:\n          type: string\n    GetBoardsResponse:\n      title: GetBoardsResponse\n      type: array\n      description: プロジェクト一覧取得レスポンス\n      items:\n        $ref: '#/components/schemas/GetBoardResponse'\n      x-tags:\n        - board\n    GetTodosResponse:\n      title: GetTodosResponse\n      type: array\n      description: todo一覧取得API\n      items:\n        $ref: '#/components/schemas/GetTodoResponse'\n      x-tags:\n        - todo\n    GetLabelsResponse:\n      title: GetLabelsResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/GetLabelResponse'\n      description: ラベル一覧取得レスポンス\n      x-tags:\n        - label\n      x-examples: {}\n    GetMembersResource:\n      title: GetMembersResource\n      type: array\n      description: ユーザの集合を表す\n      items:\n        $ref: '#/components/schemas/GetUserResponse'\n  parameters:\n    AccessToken:\n      name: token\n      in: header\n      required: true\n      description: this token on Authorization Header\n      schema:\n        $ref: '#/components/schemas/AccessToken'\n    BoardID:\n      name: board_id\n      in: path\n      required: true\n      description: プロジェクトID\n      schema:\n        type: integer\n    TodoID:\n      name: todo_id\n      in: path\n      required: true\n      description: todoID\n      schema:\n        type: integer\n    LabelID:\n      name: label_id\n      in: path\n      required: true\n      description: ラベルID\n      schema:\n        type: integer\n  requestBodies:\n    UpdateUser:\n      description: a requestBody when making a create-user or update-user request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateUserRequest'\n    UpdateBoard:\n      description: a requestBody when making a create-board or update-board request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateBoardRequest'\n    UpdateTodo:\n      description: a requestBody when making a create-todo or update-todo request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateTodoRequest'\n    UpdateLabel:\n      description: a requestBody when making a create-label or update-label request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateLabelRequest'\n  responses:\n    NoContent:\n      description: 'success response. statusCode: 204'\n    BadRequest:\n      description: 'client error. statusCode: 400'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Unauthorized:\n      description: 'unauthorized error. statusCode: 401'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Conflict:\n      description: 'conflict error. statusCode: 409. when unique values have duplidates, this error return.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    InternalServerError:\n      description: 'internal server error. statusCode: 500'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n",
			"canonicalURL": "/github.com/TechCafeFreedom/TODONE-server@ac99d99e44ddb548444c586d5c8e8bf3cb051e47/-/blob/api-document.yml",
			"externalURLs": [
				{
					"url": "https://github.com/TechCafeFreedom/TODONE-server/blob/ac99d99e44ddb548444c586d5c8e8bf3cb051e47/api-document.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}