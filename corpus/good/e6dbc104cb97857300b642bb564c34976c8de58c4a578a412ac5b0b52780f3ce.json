{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/backbase-openapi-tools"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "boat-maven-plugin/src/it/example/boat-yard/src/main/resources/openapi/presentation-client-api/1.2.0-SNAPSHOT/openapi.yaml",
			"byteSize": 62011,
			"content": "openapi: 3.0.3\ninfo:\n  title: Wallet Test Client API\n  description: \"No description available\\n# Disclaimer\\n                        This\\\n    \\ API is converted from RAML1.0 using the boat-maven-plugin.\\n# Changelog\\n##\\\n    \\ 1.1.0-SNAPSHOT - 1.1.0-SNAPSHOT\\n**Note:** API has incompatible changes!!\\n\\\n    #### What's New\\n---\\n\\n##### `GET` /integration-api/v1/items\\n\\n\u003e Retrieve list\\\n    \\ of all items.\\n\\n#### What's Deleted\\n---\\n\\n##### `GET` /service-api/v1/wallet/admin/{userId}/paymentcards\\n\\\n    \\n\u003e Returns available payment card details for user, optionally filtered by nameOnCard.\\n\\\n    \\n##### `POST` /service-api/v1/wallet/admin/{userId}/paymentcards\\n\\n\u003e Adds a\\\n    \\ payment card to the user's wallet.\\n\\n##### `GET` /service-api/v1/wallet/admin/{userId}/paymentcards/{cardId}\\n\\\n    \\n\u003e Returns details of a specific payment card.\\n\\n##### `DELETE` /service-api/v1/wallet/admin/{userId}/paymentcards/{cardId}\\n\\\n    \\n\u003e Deletes a payment card with a given id.\\n\\n##### `GET` /service-api/v1/testQuery/required-boolean-query-param\\n\\\n    \\n\\n## 1.1.0-SNAPSHOT - 1.1.0-SNAPSHOT\\n**Note:** API has incompatible changes!!\\n\\\n    #### What's New\\n---\\n\\n##### `GET` /client-api/v1/wallet/paymentcards\\n\\n\u003e Returns\\\n    \\ available payment card details for user, optionally filtered by nameOnCard.\\n\\\n    \\n##### `POST` /client-api/v1/wallet/paymentcards\\n\\n\u003e Adds a payment card to\\\n    \\ the user's wallet.\\n\\n##### `GET` /client-api/v1/wallet/paymentcards/{cardId}\\n\\\n    \\n\u003e Returns details of a specific payment card.\\n\\n##### `DELETE` /client-api/v1/wallet/paymentcards/{cardId}\\n\\\n    \\n\u003e Deletes a payment card with a given id.\\n\\n##### `GET` /client-api/v1/bbt/build-info\\n\\\n    \\n\u003e Build Information.\\n\\n##### `PATCH` /client-api/v1/patch\\n\\n\u003e patch\\n\\n#####\\\n    \\ `GET` /client-api/v1/test/required-boolean-query-param\\n\\n\\n##### `GET` /client-api/v1/test/values\\n\\\n    \\n\\n##### `GET` /client-api/v1/test/headers\\n\\n\\n##### `GET` /client-api/v1/test/date-query-params\\n\\\n    \\n\\n#### What's Deleted\\n---\\n\\n##### `GET` /integration-api/v1/items\\n\\n\u003e Retrieve\\\n    \\ list of all items.\\n\\n## 1.1.0-SNAPSHOT - 1.2.0-SNAPSHOT\\n**Note:** API has\\\n    \\ incompatible changes!!\\n#### What's New\\n---\\n\\n##### `GET` /service-api/v1/wallet/admin/{userId}/paymentcards\\n\\\n    \\n\u003e Returns available payment card details for user, optionally filtered by nameOnCard.\\n\\\n    \\n##### `POST` /service-api/v1/wallet/admin/{userId}/paymentcards\\n\\n\u003e Adds a\\\n    \\ payment card to the user's wallet.\\n\\n##### `GET` /service-api/v1/wallet/admin/{userId}/paymentcards/{cardId}\\n\\\n    \\n\u003e Returns details of a specific payment card.\\n\\n##### `DELETE` /service-api/v1/wallet/admin/{userId}/paymentcards/{cardId}\\n\\\n    \\n\u003e Deletes a payment card with a given id.\\n\\n##### `GET` /service-api/v1/testQuery/required-boolean-query-param\\n\\\n    \\n\\n#### What's Deleted\\n---\\n\\n##### `GET` /client-api/v1/wallet/paymentcards\\n\\\n    \\n\u003e Returns available payment card details for user, optionally filtered by nameOnCard.\\n\\\n    \\n##### `POST` /client-api/v1/wallet/paymentcards\\n\\n\u003e Adds a payment card to\\\n    \\ the user's wallet.\\n\\n##### `GET` /client-api/v1/wallet/paymentcards/{cardId}\\n\\\n    \\n\u003e Returns details of a specific payment card.\\n\\n##### `DELETE` /client-api/v1/wallet/paymentcards/{cardId}\\n\\\n    \\n\u003e Deletes a payment card with a given id.\\n\\n##### `GET` /client-api/v1/bbt/build-info\\n\\\n    \\n\u003e Build Information.\\n\\n##### `PATCH` /client-api/v1/patch\\n\\n\u003e patch\\n\\n#####\\\n    \\ `GET` /client-api/v1/test/required-boolean-query-param\\n\\n\\n##### `GET` /client-api/v1/test/values\\n\\\n    \\n\\n##### `GET` /client-api/v1/test/headers\\n\\n\\n##### `GET` /client-api/v1/test/date-query-params\\n\\\n    \\n\\n## 1.2.0-SNAPSHOT - 1.2.0-SNAPSHOT\\n**Note:** API has incompatible changes!!\\n\\\n    #### What's New\\n---\\n\\n##### `GET` /integration-api/v1/items\\n\\n\u003e Retrieve list\\\n    \\ of all items.\\n\\n#### What's Deleted\\n---\\n\\n##### `GET` /service-api/v1/wallet/admin/{userId}/paymentcards\\n\\\n    \\n\u003e Returns available payment card details for user, optionally filtered by nameOnCard.\\n\\\n    \\n##### `POST` /service-api/v1/wallet/admin/{userId}/paymentcards\\n\\n\u003e Adds a\\\n    \\ payment card to the user's wallet.\\n\\n##### `GET` /service-api/v1/wallet/admin/{userId}/paymentcards/{cardId}\\n\\\n    \\n\u003e Returns details of a specific payment card.\\n\\n##### `DELETE` /service-api/v1/wallet/admin/{userId}/paymentcards/{cardId}\\n\\\n    \\n\u003e Deletes a payment card with a given id.\\n\\n##### `GET` /service-api/v1/testQuery/required-boolean-query-param\\n\\\n    \\n\\n## 1.2.0-SNAPSHOT - 1.2.0-SNAPSHOT\\n**Note:** API has incompatible changes!!\\n\\\n    #### What's New\\n---\\n\\n##### `GET` /client-api/v1/wallet/paymentcards\\n\\n\u003e Returns\\\n    \\ available payment card details for user, optionally filtered by nameOnCard.\\n\\\n    \\n##### `POST` /client-api/v1/wallet/paymentcards\\n\\n\u003e Adds a payment card to\\\n    \\ the user's wallet.\\n\\n##### `GET` /client-api/v1/wallet/paymentcards/{cardId}\\n\\\n    \\n\u003e Returns details of a specific payment card.\\n\\n##### `DELETE` /client-api/v1/wallet/paymentcards/{cardId}\\n\\\n    \\n\u003e Deletes a payment card with a given id.\\n\\n##### `GET` /client-api/v1/bbt/build-info\\n\\\n    \\n\u003e Build Information.\\n\\n##### `PATCH` /client-api/v1/patch\\n\\n\u003e patch\\n\\n#####\\\n    \\ `GET` /client-api/v1/test/required-boolean-query-param\\n\\n\\n##### `GET` /client-api/v1/test/values\\n\\\n    \\n\\n##### `GET` /client-api/v1/test/headers\\n\\n\\n##### `GET` /client-api/v1/test/date-query-params\\n\\\n    \\n\\n#### What's Deleted\\n---\\n\\n##### `GET` /integration-api/v1/items\\n\\n\u003e Retrieve\\\n    \\ list of all items.\\n\\n\"\n  version: 1.2.0-SNAPSHOT\n  x-logo:\n    altText: Backbase\n    url: http://www.backbase.com/wp-content/uploads/2017/04/backbase-logo-png.png\nservers:\n- url: /raml-service/\n  description: The server\ntags:\n- name: wallet test client api\npaths:\n  /client-api/v1/wallet/paymentcards:\n    summary: Payment Cards\n    description: No description available\n    get:\n      tags:\n      - wallet\n      summary: \"Returns available payment card details for user, optionally filtered\\\n        \\ by nameOnCard.\"\n      description: \"Returns available payment card details for user, optionally filtered\\\n        \\ by nameOnCard\"\n      operationId: getPaymentCards\n      parameters:\n      - name: nameOnCard\n        in: query\n        description: \"Filter by the cardholder's name (case-insensitive), can be the\\\n          \\ first one or more characters of one of the words/names\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n            value: Smi\n      - name: dateTimeOnly\n        in: query\n        description: Creation date in datetime-only format\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04T14:54:36\n      - name: dateTime\n        in: query\n        description: Creation date in Zoned RFC3339 Date-time format\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04T14:54:36Z\n      - name: dateTime2616\n        in: query\n        description: Zoned RFC2616 Date-time param example\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: \"Wed, 4 Jul 2001 12:08:56 PDT\"\n      - name: date\n        in: query\n        description: Date-only param example\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04\n      - name: time\n        in: query\n        description: time-only param example\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 14:54:36\n      - name: orderBy\n        in: query\n        description: \"Order by field: nameOnCard\\n\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n      - name: direction\n        in: query\n        description: Direction\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          default: DESC\n          enum:\n          - ASC\n          - DESC\n        examples:\n          example:\n            summary: example\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/inline_response_200'\n              examples:\n                example:\n                  value:\n                  - id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n                    pan: \"5434111122223333\"\n                    cvc: \"123\"\n                    startDate: \"0116\"\n                    expiryDate: \"1219\"\n                    nameOnCard: Mr Timmy Tester\n                    creationDate: 2011-05-30T12:13:14+03:00\n                    balance:\n                      amount: \"2001\"\n                      currencyCode: EUR\n                    apr: 12.75\n                  - id: d593c212-70ad-41a6-a547-d5d9232414cb\n                    pan: \"5434111122224444\"\n                    cvc: \"101\"\n                    startDate: \"0216\"\n                    expiryDate: \"0120\"\n                    nameOnCard: Mr Timmothy Tester\n                    creationDate: 2011-05-30T12:13:14+03:00\n                    balance:\n                      amount: \"4.4399999999999995\"\n                      currencyCode: GBP\n                    apr: 12.75\n                  - id: 9635966b-28e9-4479-8121-bb7bc9beeb62\n                    pan: \"5434121212121212\"\n                    cvc: \"121\"\n                    startDate: \"0115\"\n                    expiryDate: \"1218\"\n                    nameOnCard: Mr Timmy Tester\n                    creationDate: 2011-05-30T12:13:14+03:00\n                    balance:\n                      amount: \"1981\"\n                      currencyCode: EUR\n                    apr: 12.75\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n              examples:\n                example:\n                  value:\n                    message: Bad Request\n                    errors:\n                    - message: \"Value Exceeded. Must be between {min} and {max}.\"\n                      key: common.api.shoesize\n                      context:\n                        max: \"50\"\n                        min: \"1\"\n        \"406\":\n          description: NotAcceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_406'\n              examples:\n                example:\n                  value:\n                    message: Could not find acceptable representation\n                    supportedMediaTypes:\n                    - application/json\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_403'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: \"Resource access denied due to an insufficient user\\\n                        \\ quota of {quota}.\"\n                      key: common.api.quota\n                      context:\n                        quota: someQuota\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_415'\n              examples:\n                example:\n                  value:\n                    message: Unsupported media type.\n                    errors:\n                    - message: \"The request entity has a media type {mediaType} which\\\n                        \\ the resource does not support.\"\n                      key: common.api.mediaType\n                      context:\n                        mediaType: application/javascript\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_404'\n              examples:\n                example:\n                  value:\n                    message: Resource not found.\n                    errors:\n                    - message: \"Unable to find the resource requested resource: {resource}.\"\n                      key: common.api.resource\n                      context:\n                        resource: aResource\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: Resource access denied due to invalid credentials.\n                      key: common.api.token\n                      context:\n                        accessToken: expired\n      x-bb-access-control-resource: WALLET\n      x-bb-access-control-function: MANAGE_PAYMENT_CARDS\n      x-bb-access-control-privilege: READ_PAYMENT_CARD\n    post:\n      tags:\n      - wallet\n      summary: Adds a payment card to the user's wallet.\n      description: Adds a payment card to the user's wallet\n      operationId: postPaymentCards\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: Correlates HTTP requests between a client and server.\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n            value: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      requestBody:\n        description: Adds a payment card to the user's wallet\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/body'\n            examples:\n              example:\n                value:\n                  id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n                  pan: \"5434111122223333\"\n                  cvc: \"123\"\n                  startDate: \"0116\"\n                  expiryDate: \"1219\"\n                  nameOnCard: Mr Timmy Tester\n                  creationDate: 2011-05-30T12:13:14+03:00\n                  balance:\n                    amount: \"1000\"\n                    currencyCode: EUR\n                  apr: 12.75\n      responses:\n        \"201\":\n          description: request to create payment card accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_201'\n              examples:\n                example:\n                  value:\n                    id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n              examples:\n                example:\n                  value:\n                    message: Bad Request\n                    errors:\n                    - message: \"Value Exceeded. Must be between {min} and {max}.\"\n                      key: common.api.shoesize\n                      context:\n                        max: \"50\"\n                        min: \"1\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_403'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: \"Resource access denied due to an insufficient user\\\n                        \\ quota of {quota}.\"\n                      key: common.api.quota\n                      context:\n                        quota: someQuota\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_415'\n              examples:\n                example:\n                  value:\n                    message: Unsupported media type.\n                    errors:\n                    - message: \"The request entity has a media type {mediaType} which\\\n                        \\ the resource does not support.\"\n                      key: common.api.mediaType\n                      context:\n                        mediaType: application/javascript\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_404'\n              examples:\n                example:\n                  value:\n                    message: Resource not found.\n                    errors:\n                    - message: \"Unable to find the resource requested resource: {resource}.\"\n                      key: common.api.resource\n                      context:\n                        resource: aResource\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: Resource access denied due to invalid credentials.\n                      key: common.api.token\n                      context:\n                        accessToken: expired\n      x-bb-access-control-resource: WALLET\n      x-bb-access-control-function: MANAGE_PAYMENT_CARDS\n      x-bb-access-control-privilege: WRITE_PAYMENT_CARD\n  /client-api/v1/wallet/paymentcards/{cardId}:\n    summary: Payment Card\n    description: No description available\n    get:\n      tags:\n      - wallet\n      summary: Returns details of a specific payment card.\n      description: Returns details of a specific payment card\n      operationId: getPaymentCard\n      parameters:\n      - name: cardId\n        in: path\n        description: No description available\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/body'\n              examples:\n                example:\n                  value:\n                    id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n                    pan: \"5434111122223333\"\n                    cvc: \"123\"\n                    startDate: \"0116\"\n                    expiryDate: \"1219\"\n                    nameOnCard: Mr Timmy Tester\n                    creationDate: 2011-05-30T12:13:14+03:00\n                    balance:\n                      amount: \"1000\"\n                      currencyCode: EUR\n                    apr: 12.75\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n              examples:\n                example:\n                  value:\n                    message: Bad Request\n                    errors:\n                    - message: \"Value Exceeded. Must be between {min} and {max}.\"\n                      key: common.api.shoesize\n                      context:\n                        max: \"50\"\n                        min: \"1\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_403'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: \"Resource access denied due to an insufficient user\\\n                        \\ quota of {quota}.\"\n                      key: common.api.quota\n                      context:\n                        quota: someQuota\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_415'\n              examples:\n                example:\n                  value:\n                    message: Unsupported media type.\n                    errors:\n                    - message: \"The request entity has a media type {mediaType} which\\\n                        \\ the resource does not support.\"\n                      key: common.api.mediaType\n                      context:\n                        mediaType: application/javascript\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_404'\n              examples:\n                example:\n                  value:\n                    message: Resource not found.\n                    errors:\n                    - message: \"Unable to find the resource requested resource: {resource}.\"\n                      key: common.api.resource\n                      context:\n                        resource: aResource\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: Resource access denied due to invalid credentials.\n                      key: common.api.token\n                      context:\n                        accessToken: expired\n      x-bb-access-control-resource: WALLET\n      x-bb-access-control-function: MANAGE_PAYMENT_CARDS\n      x-bb-access-control-privilege: READ_PAYMENT_CARD\n    delete:\n      tags:\n      - wallet\n      summary: Deletes a payment card with a given id.\n      description: Deletes a payment card with a given id\n      operationId: deletePaymentCard\n      parameters:\n      - name: cardId\n        in: path\n        description: No description available\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n      responses:\n        \"204\":\n          description: Payment card is succesfully deleted\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n              examples:\n                example:\n                  value:\n                    message: Bad Request\n                    errors:\n                    - message: \"Value Exceeded. Must be between {min} and {max}.\"\n                      key: common.api.shoesize\n                      context:\n                        max: \"50\"\n                        min: \"1\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_403'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: \"Resource access denied due to an insufficient user\\\n                        \\ quota of {quota}.\"\n                      key: common.api.quota\n                      context:\n                        quota: someQuota\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_415'\n              examples:\n                example:\n                  value:\n                    message: Unsupported media type.\n                    errors:\n                    - message: \"The request entity has a media type {mediaType} which\\\n                        \\ the resource does not support.\"\n                      key: common.api.mediaType\n                      context:\n                        mediaType: application/javascript\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_404'\n              examples:\n                example:\n                  value:\n                    message: Resource not found.\n                    errors:\n                    - message: \"Unable to find the resource requested resource: {resource}.\"\n                      key: common.api.resource\n                      context:\n                        resource: aResource\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: Resource access denied due to invalid credentials.\n                      key: common.api.token\n                      context:\n                        accessToken: expired\n      x-bb-access-control-resource: WALLET\n      x-bb-access-control-function: MANAGE_PAYMENT_CARDS\n      x-bb-access-control-privilege: DELETE_PAYMENT_CARD\n  /client-api/v1/bbt/build-info:\n    summary: /build-info\n    description: No description available\n    get:\n      tags:\n      - bbt\n      summary: Build Information.\n      description: Build Information\n      operationId: getBuildinfo\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n              examples:\n                example:\n                  value:\n                    build-info:\n                      build.version: 1.1.111-SNAPSHOT\n  /client-api/v1/patch:\n    summary: patch\n    description: PATCH endpoint for test operations\n    patch:\n      tags:\n      - patch\n      summary: patch\n      description: Patch Test\n      operationId: patchpatch\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: Correlates HTTP requests between a client and server.\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n            value: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      responses:\n        \"200\":\n          description: No description available\n          content: {}\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n              examples:\n                example:\n                  value:\n                    message: Bad Request\n                    errors:\n                    - message: \"Value Exceeded. Must be between {min} and {max}.\"\n                      key: common.api.shoesize\n                      context:\n                        max: \"50\"\n                        min: \"1\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_403'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: \"Resource access denied due to an insufficient user\\\n                        \\ quota of {quota}.\"\n                      key: common.api.quota\n                      context:\n                        quota: someQuota\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_415'\n              examples:\n                example:\n                  value:\n                    message: Unsupported media type.\n                    errors:\n                    - message: \"The request entity has a media type {mediaType} which\\\n                        \\ the resource does not support.\"\n                      key: common.api.mediaType\n                      context:\n                        mediaType: application/javascript\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_404'\n              examples:\n                example:\n                  value:\n                    message: Resource not found.\n                    errors:\n                    - message: \"Unable to find the resource requested resource: {resource}.\"\n                      key: common.api.resource\n                      context:\n                        resource: aResource\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: Resource access denied due to invalid credentials.\n                      key: common.api.token\n                      context:\n                        accessToken: expired\n  /client-api/v1/test/required-boolean-query-param:\n    summary: required boolean query param\n    description: arbitrary tests\n    get:\n      tags:\n      - test\n      description: No description available\n      operationId: getrequiredBooleanQueryParam\n      parameters:\n      - name: bool\n        in: query\n        description: Required boolean parameter with no default value\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: boolean\n        examples:\n          example:\n            summary: example\n            value: false\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n              examples:\n                example:\n                  value:\n                    message: Bad Request\n                    errors:\n                    - message: \"Value Exceeded. Must be between {min} and {max}.\"\n                      key: common.api.shoesize\n                      context:\n                        max: \"50\"\n                        min: \"1\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_403'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: \"Resource access denied due to an insufficient user\\\n                        \\ quota of {quota}.\"\n                      key: common.api.quota\n                      context:\n                        quota: someQuota\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_415'\n              examples:\n                example:\n                  value:\n                    message: Unsupported media type.\n                    errors:\n                    - message: \"The request entity has a media type {mediaType} which\\\n                        \\ the resource does not support.\"\n                      key: common.api.mediaType\n                      context:\n                        mediaType: application/javascript\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_404'\n              examples:\n                example:\n                  value:\n                    message: Resource not found.\n                    errors:\n                    - message: \"Unable to find the resource requested resource: {resource}.\"\n                      key: common.api.resource\n                      context:\n                        resource: aResource\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n              examples:\n                example:\n                  value:\n                    message: Access to requested resource denied.\n                    errors:\n                    - message: Resource access denied due to invalid credentials.\n                      key: common.api.token\n                      context:\n                        accessToken: expired\n  /client-api/v1/test/values:\n    summary: Test Values\n    description: Test Values\n    get:\n      tags:\n      - test\n      description: No description available\n      operationId: getTestValues\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n              examples:\n                example:\n                  value:\n                    message: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n                    number: \"102.4\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n  /client-api/v1/test/headers:\n    summary: Test header propagation\n    description: Test header propagation\n    get:\n      tags:\n      - test\n      description: No description available\n      operationId: getTestHeaderPropagation\n      parameters:\n      - name: addHops\n        in: query\n        description: number of additional hops to perform\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n        examples:\n          example:\n            summary: example\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_4'\n              examples:\n                example:\n                  value:\n                    requests:\n                    - name: building-blocks-test-wallet-presentation-service\n                      url: /client-api/v1/test/headers\n                      headers:\n                        correlation-id:\n                        - 2ed475b714a3945a\n                        accept:\n                        - application/json\n                        x-bbt-test:\n                        - X-BBT-contentVal2\n                        connection:\n                        - keep-alive\n                    - name: building-blocks-test-wallet-pandp-service\n                      url: /service-api/v1/test/headers\n                      headers:\n                        authorization:\n                        - Bearer eyJh\n                        accept:\n                        - \"application/xml, text/xml, application/json, application/*+xml,\\\n                          \\ application/*+json\"\n                        content-type:\n                        - application/json\n                        x-cxt-user-token:\n                        - Bearer ey\n                        x-cxt-remote-user:\n                        - admin\n                        x-cxt-requestuuid:\n                        - 72002652-131a-4f28-bd00-16b8080932f5\n                        correlation-id:\n                        - 2ed475b714a3945a\n                        x-bbt-test:\n                        - X-BBT-contentVal2\n                    - name: building-blocks-test-wallet-pandp-service\n                      url: /service-api/v1/test/headers\n                      headers:\n                        authorization:\n                        - Bearer eyJh\n                        accept:\n                        - \"application/xml, text/xml, application/json, application/*+xml,\\\n                          \\ application/*+json\"\n                        content-type:\n                        - application/json\n                        x-cxt-user-token:\n                        - Bearer ey\n                        x-cxt-remote-user:\n                        - admin\n                        x-cxt-requestuuid:\n                        - 72002652-131a-4f28-bd00-16b8080932f5\n                        correlation-id:\n                        - 2ed475b714a3945a\n                        x-bbt-test:\n                        - X-BBT-contentVal2\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_500'\n              examples:\n                example:\n                  value:\n                    message: Description of error\n  /client-api/v1/test/date-query-params:\n    summary: dateQueryParam\n    description: |\n      Tests for date/time query parameters in service-apis.  Sends the same query parameters to the equivalent endpoint\n      in the pandp service which echoes the given values back in the response body.  Values echoed by the pandp service\n      are then returned in the response to this request.\n    get:\n      tags:\n      - test\n      description: No description available\n      operationId: getdateQueryParam\n      parameters:\n      - name: dateTimeOnly\n        in: query\n        description: Creation date in datetime-only format\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04T14:54:36\n      - name: dateTime\n        in: query\n        description: Creation date in Zoned RFC3339 Date-time format\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04T14:54:36Z\n      - name: dateTime2616\n        in: query\n        description: Zoned RFC2616 Date-time param example\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: \"Wed, 4 Jul 2001 12:08:56 PDT\"\n      - name: date\n        in: query\n        description: Date-only param example\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04\n      - name: time\n        in: query\n        description: time-only param example\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 14:54:36\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_5'\ncomponents:\n  schemas:\n    BadRequestError:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.BadRequestException\n    BbAccessControl:\n      required:\n      - function\n      - privilege\n      - resource\n      type: object\n      properties:\n        resource:\n          type: string\n          description: \"Resource being protected, e.g. 'User'\"\n        function:\n          type: string\n          description: \"Business function, e.g. 'Manage Users'\"\n        privilege:\n          type: string\n          description: \"The privilege required, e.g. 'view'\"\n    BbApiDeprecation:\n      required:\n      - deprecatedFromVersion\n      - description\n      - reason\n      - removedFromVersion\n      type: object\n      properties:\n        deprecatedFromVersion:\n          type: string\n          description: Version of the product from which the endpoint has been deprecated\n            and should no longer be used\n          deprecated: true\n        removedFromVersion:\n          type: string\n          description: Version of the product from which the API endpoint will be\n            removed\n        reason:\n          type: string\n          description: The reason the API endpoint was deprecated\n          deprecated: true\n        description:\n          type: string\n          description: \"Any further information, e.g. migration information\"\n    BbtBuild-infoGetGetResponseBody:\n      type: object\n      properties:\n        build-info:\n          type: object\n          x-java-type: \"java.util.Map\u003cString,String\u003e\"\n      example:\n        build-info:\n          build.version: 1.1.111-SNAPSHOT\n    BbtbuildInfogetgetresponsebody:\n      type: object\n      properties:\n        build-info:\n          type: object\n          x-java-type: \"java.util.Map\u003cString,String\u003e\"\n      example:\n        build-info:\n          build.version: 1.1.111-SNAPSHOT\n    Currency:\n      title: Monetary Amount\n      required:\n      - amount\n      - currencyCode\n      type: object\n      properties:\n        amount:\n          type: string\n          description: The amount in the specified currency\n          x-java-type: java.math.BigDecimal\n        currencyCode:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The alpha-3 code (complying with ISO 4217) of the currency\n            that qualifies the amount\n      description: Schema defining monetary amount in given currency.\n      x-java-type: com.backbase.rest.spec.common.types.Currency\n    DateQueryParamGetResponseBody:\n      type: object\n      properties:\n        dateTimeOnly:\n          type: string\n        dateTimeOnlyParsedValue:\n          type: string\n        dateTime:\n          type: string\n        dateTimeParsedValue:\n          type: string\n        dateTime2616:\n          type: string\n        dateTime2616ParsedValue:\n          type: string\n        date:\n          type: string\n        dateParsedValue:\n          type: string\n        time:\n          type: string\n        timeParsedValue:\n          type: string\n        formatDateTime:\n          type: string\n          description: \"The dateTime parameter formatted as 'date-time', java.util.Date\\\n            \\ or java.time.ZoneDateTime\"\n          format: date-time\n        formatDate:\n          type: string\n          description: \"The date parameter formatted as 'date', String or java.time.LocalDate\"\n          format: date\n        formatTime:\n          type: string\n          description: \"The time parameter formatted as 'time', String or java.time.LocalTime\"\n        formatUtcMillisec:\n          type: string\n          description: \"The dateTime parameter formatted as 'date', long\"\n      x-java-type: com.backbase.buildingblocks.test.data.DateTimeTestResponse\n    ErrorItem:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Default Message. Any further information.\n        key:\n          type: string\n          description: \"{capability-name}.api.{api-key-name}. For generated validation\\\n            \\ errors this is the path in the document the error resolves to. e.g.\\\n            \\ object name + '.' + field\"\n        context:\n          type: object\n          description: Context can be anything used to construct localised messages.\n          x-java-type: \"java.util.Map\u003cString,String\u003e\"\n      description: A validation error\n    ForbiddenError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.ForbiddenException\n    InternalServerError:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Further Information\n      description: Represents HTTP 500 Internal Server Error\n      x-java-type: com.backbase.buildingblocks.presentation.errors.InternalServerErrorException\n    NotAcceptableError:\n      type: object\n      properties:\n        message:\n          type: string\n        supportedMediaTypes:\n          type: array\n          description: List of supported media types for this endpoint\n          items:\n            type: string\n      x-java-type: com.backbase.buildingblocks.presentation.errors.NotAcceptableException\n    NotFoundError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.NotFoundException\n    ObjectWrappingException:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: object\n      x-java-type: com.backbase.buildingblocks.test.exceptions.ObjectWrappingException\n    PaymentCard:\n      required:\n      - cvc\n      - expiryDate\n      - id\n      - nameOnCard\n      - pan\n      - startDate\n      type: object\n      properties:\n        id:\n          type: string\n        pan:\n          maxLength: 19\n          type: string\n          description: \"Must be sixteen digits, optionally in blocks of 4 separated\\\n            \\ by a dash\"\n        cvc:\n          maxLength: 3\n          minLength: 3\n          type: string\n          description: Card Verification Code\n        startDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        expiryDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        nameOnCard:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        balance:\n          $ref: '#/components/schemas/Monetary Amount'\n        apr:\n          type: number\n          x-java-type: java.math.BigDecimal\n        cardtype:\n          type: string\n          enum:\n          - CREDIT\n          - DEBIT\n          - PREPAID\n      x-java-type: com.backbase.buildingblocks.test.data.PaymentCard\n    PaymentCards:\n      type: array\n      items:\n        $ref: '#/components/schemas/inline_response_200'\n    PaymentCardsPostResponseBody:\n      type: object\n      properties:\n        id:\n          type: string\n      example:\n        id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n    RequiredbooleanqueryparamGetResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n    TestHeadersResponseBody:\n      type: object\n      properties:\n        requests:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestHeadersResponseBody_requests'\n      x-java-type: com.backbase.buildingblocks.test.data.TestHeadersResponse\n    TestValuesGetResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n        number:\n          type: string\n          x-java-type: java.math.BigDecimal\n      example:\n        message: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n        number: \"102.4\"\n    UnauthorizedAltError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.UnauthorizedException\n    UnauthorizedError:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n    UnsupportedMediaTypeError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.UnsupportedMediaTypeException\n    Monetary Amount:\n      required:\n      - amount\n      - currencyCode\n      type: object\n      properties:\n        amount:\n          type: string\n          description: The amount in the specified currency\n          x-java-type: java.math.BigDecimal\n        currencyCode:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The alpha-3 code (complying with ISO 4217) of the currency\n            that qualifies the amount\n      description: Schema defining monetary amount in given currency.\n    inline_response_200:\n      required:\n      - cvc\n      - expiryDate\n      - id\n      - nameOnCard\n      - pan\n      - startDate\n      type: object\n      properties:\n        id:\n          type: string\n        pan:\n          maxLength: 19\n          type: string\n          description: \"Must be sixteen digits, optionally in blocks of 4 separated\\\n            \\ by a dash\"\n        cvc:\n          maxLength: 3\n          minLength: 3\n          type: string\n          description: Card Verification Code\n        startDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        expiryDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        nameOnCard:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        balance:\n          $ref: '#/components/schemas/Monetary Amount'\n        apr:\n          type: number\n          x-java-type: java.math.BigDecimal\n        cardtype:\n          type: string\n          enum:\n          - CREDIT\n          - DEBIT\n          - PREPAID\n      x-java-type: com.backbase.buildingblocks.test.data.PaymentCard\n    inline_response_400:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.BadRequestException\n    inline_response_406:\n      type: object\n      properties:\n        message:\n          type: string\n        supportedMediaTypes:\n          type: array\n          description: List of supported media types for this endpoint\n          items:\n            type: string\n      x-java-type: com.backbase.buildingblocks.presentation.errors.NotAcceptableException\n    inline_response_500:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Further Information\n      description: Represents HTTP 500 Internal Server Error\n      x-java-type: com.backbase.buildingblocks.presentation.errors.InternalServerErrorException\n    inline_response_403:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.ForbiddenException\n    inline_response_415:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.UnsupportedMediaTypeException\n    inline_response_404:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.NotFoundException\n    inline_response_401:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/BadRequestError_errors'\n      x-java-type: com.backbase.buildingblocks.presentation.errors.UnauthorizedException\n    body:\n      required:\n      - cvc\n      - expiryDate\n      - id\n      - nameOnCard\n      - pan\n      - startDate\n      type: object\n      properties:\n        id:\n          type: string\n        pan:\n          maxLength: 19\n          type: string\n          description: \"Must be sixteen digits, optionally in blocks of 4 separated\\\n            \\ by a dash\"\n        cvc:\n          maxLength: 3\n          minLength: 3\n          type: string\n          description: Card Verification Code\n        startDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        expiryDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        nameOnCard:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        balance:\n          $ref: '#/components/schemas/Monetary Amount'\n        apr:\n          type: number\n          x-java-type: java.math.BigDecimal\n        cardtype:\n          type: string\n          enum:\n          - CREDIT\n          - DEBIT\n          - PREPAID\n      x-java-type: com.backbase.buildingblocks.test.data.PaymentCard\n    inline_response_201:\n      type: object\n      properties:\n        id:\n          type: string\n      example:\n        id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n    inline_response_200_1:\n      type: object\n      properties:\n        build-info:\n          type: object\n          x-java-type: \"java.util.Map\u003cString,String\u003e\"\n      example:\n        build-info:\n          build.version: 1.1.111-SNAPSHOT\n    inline_response_200_2:\n      type: object\n      properties:\n        message:\n          type: string\n    inline_response_200_3:\n      type: object\n      properties:\n        message:\n          type: string\n        number:\n          type: string\n          x-java-type: java.math.BigDecimal\n      example:\n        message: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n        number: \"102.4\"\n    inline_response_200_4:\n      type: object\n      properties:\n        requests:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestHeadersResponseBody_requests'\n      x-java-type: com.backbase.buildingblocks.test.data.TestHeadersResponse\n    inline_response_200_5:\n      type: object\n      properties:\n        dateTimeOnly:\n          type: string\n        dateTimeOnlyParsedValue:\n          type: string\n        dateTime:\n          type: string\n        dateTimeParsedValue:\n          type: string\n        dateTime2616:\n          type: string\n        dateTime2616ParsedValue:\n          type: string\n        date:\n          type: string\n        dateParsedValue:\n          type: string\n        time:\n          type: string\n        timeParsedValue:\n          type: string\n        formatDateTime:\n          type: string\n          description: \"The dateTime parameter formatted as 'date-time', java.util.Date\\\n            \\ or java.time.ZoneDateTime\"\n          format: date-time\n        formatDate:\n          type: string\n          description: \"The date parameter formatted as 'date', String or java.time.LocalDate\"\n          format: date\n        formatTime:\n          type: string\n          description: \"The time parameter formatted as 'time', String or java.time.LocalTime\"\n        formatUtcMillisec:\n          type: string\n          description: \"The dateTime parameter formatted as 'date', long\"\n      x-java-type: com.backbase.buildingblocks.test.data.DateTimeTestResponse\n    BadRequestError_errors:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Default Message. Any further information.\n        key:\n          type: string\n          description: \"{capability-name}.api.{api-key-name}. For generated validation\\\n            \\ errors this is the path in the document the error resolves to. e.g.\\\n            \\ object name + '.' + field\"\n        context:\n          type: object\n          description: Context can be anything used to construct localised messages.\n          x-java-type: \"java.util.Map\u003cString,String\u003e\"\n      description: A validation error\n    TestHeadersResponseBody_requests:\n      type: object\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        headers:\n          type: object\n          x-java-type: \"java.util.Map\u003cString, Object\u003e\"\nx-compared: true\n",
			"canonicalURL": "/github.com/Backbase/backbase-openapi-tools@b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/-/blob/boat-maven-plugin/src/it/example/boat-yard/src/main/resources/openapi/presentation-client-api/1.2.0-SNAPSHOT/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Backbase/backbase-openapi-tools/blob/b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/boat-maven-plugin/src/it/example/boat-yard/src/main/resources/openapi/presentation-client-api/1.2.0-SNAPSHOT/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}