{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zhammer/playlist-souffle"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "swagger.yml",
			"byteSize": 5259,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://wumxvuo5nb.execute-api.us-east-1.amazonaws.com/dev'\ninfo:\n  description: \u003e\n    Souffle up your playlists, swapping out each track for another track by the\n    same artist or on the same album.\n\n\n    Instructions for obtaining an `accesstoken` to the Playlist Souffle use case endpoints can be found\n    in the Authorize popout. For more information about Spotify's Authorization Code Flow,\n    see the [official documentation](https://beta.developer.spotify.com/documentation/general/guides/authorization-guide/#authorization-code-flow).\n  version: \"1.0.0-oas3\"\n  title: Playlist Souffle\n  contact:\n    email: zach.the.hammer@gmail.com\n  license:\n    name: MIT License\n    url: 'https://opensource.org/licenses/MIT'\ntags:\n  - name: Authorization\n  - name: Use cases\npaths:\n  /refreshtoken:\n    post:\n      tags:\n        - Authorization\n      summary: Get a spotify refreshtoken and accesstoken given an authorization code.\n      security:\n        - authorizationCode: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                redirectUri:\n                  type: string\n                  description: \u003e\n                    `redirectUri` used in `accounts.spotify.com/authorize` endpoint when fetching `authorizationCode`.\n              example:\n                redirectUri: https://127.0.0.1:8100\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  refreshtoken:\n                    type: string\n                    description: Refresh token for use with the `/accesstoken` endpoint.\n                  accesstoken:\n                    type: string\n                    description: Access token for the spotify web api\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /accesstoken:\n    post:\n      tags:\n        - Authorization\n      summary: Get a spotify accesstoken given a valid refreshtoken.\n      security:\n        - refreshToken: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  accesstoken:\n                    type: string\n                    description: Access token for the spotify web api\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /souffle:\n    post:\n      tags:\n      - Use cases\n      summary: \u003e\n        Souffle a playlist. The generated playlist will be created on\n        the current user's account.\n      security:\n        - accessToken: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                playlistUri:\n                  type: string\n                  description: Uri of the playlist to be souffled.\n                souffleBy:\n                  type: string\n                  description: Type of collection to souffle by.\n                  enum: [artist, album]\n              example:\n                playlistUri: spotify:user:zachthehammer:playlist:5u1XuTMnpZqhAfkYob8X6U\n                userId: zachthehammer\n                souffleBy: album\n      responses:\n        '201':\n          description: Created\n          headers:\n            Location:\n              description: Uri of souffled playlist.\n              schema:\n                type: string\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n\n\ncomponents:\n  responses:\n    UnauthorizedError:\n      description: Bearer token is missing or invalid.\n  securitySchemes:\n    authorizationCode:\n      description: \u003e\n        A Spotify authorization code that can be exchanged for a refresh/access token.\n\n\n        Obtain an authorization code by visiting the [Spotify Accounts](https://accounts.spotify.com/authorize?client_id=b231329aba1a4c539375436a267db917\u0026response_type=code\u0026redirect_uri=https://127.0.0.1:8100\u0026scope=playlist-read-private%20playlist-modify-private%20playlist-modify-public) page.\n        The browser will redirect to an unreachable url `https://127.0.0.1:8100/?code={AUTHORIZATION_CODE}` from which the `AUTHORIZATION_CODE` can be extracted.\n        An authorization code can only be used once as a Bearer token to the `/refreshtoken` endpoint.\n      type: http\n      scheme: bearer\n    refreshToken:\n      description: \u003e\n        A Spotify refreshtoken that can be used to fetch a fresh accesstoken via the `/accesstoken` endpoint.\n\n\n        Obtain a refreshtoken via the `/refreshtoken` endpoint.\n      type: http\n      scheme: bearer\n    accessToken:\n      description: \u003e\n        A Spotify accesstoken used as a Bearer token for all requests to the\n        Spotify and Playlist Souffle APIs.\n\n\n        Obtain an accesstoken initially via the `/refreshtoken` endpoint. Obtain a fresh\n        accesstoken via the `/accesstoken` endpoint.\n      type: http\n      scheme: bearer\nexternalDocs:\n  description: Visit the github page\n  url: 'https://github.com/zhammer/playlist-souffle'\n",
			"canonicalURL": "/github.com/zhammer/playlist-souffle@6a2ef7e8bf01a77650a8dab4527072b53df8a389/-/blob/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/zhammer/playlist-souffle/blob/6a2ef7e8bf01a77650a8dab4527072b53df8a389/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}