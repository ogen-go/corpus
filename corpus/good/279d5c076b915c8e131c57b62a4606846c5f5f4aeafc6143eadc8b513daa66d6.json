{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/java-women/Ponsyukey"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/api/openapi.yaml",
			"byteSize": 15602,
			"content": "openapi: 3.0.1\ninfo:\n  title: ぽんしゅきー\n  description: ぽんしゅきーサイトで使用するバックエンドAPI\n  contact:\n    email: javawoman.tokyo@gmail.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 0.0.1\n\ntags:\n  - name: saketomo\n    description: 会員情報操作\n  - name: sake\n    description: 酒情報操作\n  - name: review\n    description: 口コミ情報操作\n\nexternalDocs:\n  description: GitHubはこちら\n  url: https://github.com/java-women/Ponsyukey\npaths:\n  /saketomo:\n    post:\n      tags:\n        - saketomo\n      summary: 会員登録API\n      operationId: createSaketomo\n      requestBody:\n        description: 会員登録に必要な情報\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createSaketomo'\n        required: true\n\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                properties:\n                  saketomo:\n                    $ref: '#/components/schemas/saketomo'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n  /saketomo/{saketomoId}:\n    get:\n      tags:\n        - saketomo\n      summary: 会員情報取得API\n      operationId: getSaketomo\n      parameters:\n        - in: path\n          name: saketomoId\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                properties:\n                  saketomo:\n                    $ref: '#/components/schemas/saketomo'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n    post:\n      tags:\n        - saketomo\n      summary: 会員編集API\n      parameters:\n        - in: path\n          name: saketomoId\n          schema:\n            type: string\n          required: true\n      operationId: updateSaketomo\n      requestBody:\n        description: 会員編集に必要な情報\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/saketomoWithAuth'\n        required: true\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                properties:\n                  saketomo:\n                    $ref: '#/components/schemas/saketomo'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n\n  /sake:\n    get:\n      tags:\n        - sake\n      summary: 酒情報一覧取得API\n      operationId: getSake\n      parameters:\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          required: true\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                properties:\n                  totalCount:\n                    type: integer\n                  sake:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/sake'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n    post:\n      tags:\n        - sake\n      summary: 酒情報登録API\n      operationId: createSake\n      requestBody:\n        description: 酒情報登録に必要な情報\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createSake'\n        required: true\n\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                properties:\n                  sake:\n                    $ref: '#/components/schemas/sake'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n\n  /sake/{sakeId}:\n    get:\n      tags:\n        - sake\n      summary: 酒情報取得API\n      operationId: getSakeDetail\n      parameters:\n        - in: path\n          name: sakeId\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sakeResponse'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n  /review:\n    get:\n      tags:\n        - review\n      summary: 口コミ情報取得API.\n      operationId: getReview\n      description: 必ず日付順（降順）でソートされる\n      parameters:\n        - in: query\n          name: sakeId\n          schema:\n            type: string\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          required: true\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                properties:\n                  review:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/review'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n    post:\n      tags:\n        - review\n      summary: 口コミ情報登録API\n      operationId: createReview\n      requestBody:\n        description: 口コミ情報登録に必要な情報\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createReview'\n        required: true\n\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n          content:\n            application/json:\n              schema:\n                properties:\n                  review:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/review'\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n\n  /review/{reviewId}:\n    post:\n      tags:\n        - review\n      summary: 口コミ情報削除API\n      operationId: deleteReview\n      parameters:\n        - in: path\n          name: reviewId\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: 口コミ情報削除に必要な情報\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deleteReview'\n        required: true\n      responses:\n        200:\n          description: http ステータスコード 200 ok。バリデーションエラー時も200でレスポンスする\n        400:\n          description: http ステータスコード 400 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        500:\n          description: http ステータスコード 500 error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n\n\ncomponents:\n  schemas:\n    error:\n      type: object\n      description: OKの場合は値を返却しない\n      properties:\n        message:\n          type: string\n          description: 画面表示用エラーメッセージ\n\n    auth:\n      type: object\n      properties:\n        password:\n          type: string\n          format: password\n          description: ハッシュ\n        email:\n          type: string\n      required:\n        - password\n        - email\n\n    saketomo:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        image:\n          type: string\n          description: 既存画像から選んでもらう(キーもしくはURL)。enumにない値もしくは空/nullの場合はバリデーションチェックでエラーにします\n          enum:\n            - icon1\n            - icon2\n            - icon3\n\n    createSaketomo:\n      type: object\n      properties:\n        saketomo:\n          type: object\n          properties:\n            name:\n              type: string\n            image:\n              type: string\n              description: 既存画像から選んでもらう(キーもしくはURL)。enumにない値もしくは空/nullの場合はバリデーションチェックでエラーにします\n              enum:\n                - icon1\n                - icon2\n                - icon3\n            auth:\n              $ref: '#/components/schemas/auth'\n          required:\n            - name\n            - image\n            - auth\n\n\n    saketomoWithAuth:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        image:\n          type: string\n          description: 既存画像から選んでもらう(キーもしくはURL)。enumにない値もしくは空/nullの場合はバリデーションチェックでエラーにします\n          enum:\n            - icon1\n            - icon2\n            - icon3\n        auth:\n          $ref: '#/components/schemas/auth'\n      required:\n        - id\n        - name\n        - image\n        - auth\n\n    sake:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        image:\n          type: string\n        brewery:\n          type: object\n          properties:\n            name:\n              type: string\n            prefecture:\n              type: string\n        alcohol:\n          type: number\n          format: float\n        polishingRatio:\n          type: number\n          format: float\n        type:\n          type: string\n          description: 特定名称 (例)吟醸酒、大吟醸など\n        description:\n          type: string\n        taste:\n          type: array\n          items:\n            type: string\n          description: 味情報は固定カラムを持たずに、自由入力。(例)ハッシュタグ\n\n    review:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        saketomo:\n          type: object\n          description: 登録者情報\n          properties:\n            id:\n              type: string\n              format: uuid\n            name:\n              type: string\n            image:\n              type: string\n              enum:\n                - icon1\n                - icon2\n                - icon3\n        createdAt:\n          type: string\n          format: date-time\n          description: 作成日時\n        rating:\n          type: integer\n        comment:\n          type: string\n\n    createReview:\n      type: object\n      properties:\n        saketomo:\n          type: object\n          description: 登録者情報\n          properties:\n            id:\n              type: string\n              format: uuid\n            name:\n              type: string\n            image:\n              type: string\n              enum:\n                - icon1\n                - icon2\n                - icon3\n        rating:\n          type: integer\n        comment:\n          type: string\n\n    deleteReview:\n      type: object\n      properties:\n        saketomoId:\n          type: string\n          format: uuid\n          description: 登録者ID\n\n    createSake:\n      type: object\n      properties:\n        name:\n          type: string\n        image:\n          type: string\n        brewery:\n          type: object\n          properties:\n            name:\n              type: string\n            prefecture:\n              type: string\n        alcohol:\n          type: number\n          format: float\n        polishingRatio:\n          type: number\n          format: float\n        type:\n          type: string\n          description: 特定名称 (例)吟醸酒、大吟醸など\n        description:\n          type: string\n        taste:\n          type: object\n          description: 味情報は固定カラムを持たずに、自由入力。(例)J-SON、ハッシュタグ\n\n    sakeResponse:\n      type: object\n      properties:\n        sake:\n          $ref: '#/components/schemas/sake'\n\n",
			"canonicalURL": "/github.com/java-women/Ponsyukey@87443a2e01cf83b7ae0d828b25d52e7dcbb19f50/-/blob/docs/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/java-women/Ponsyukey/blob/87443a2e01cf83b7ae0d828b25d52e7dcbb19f50/docs/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}