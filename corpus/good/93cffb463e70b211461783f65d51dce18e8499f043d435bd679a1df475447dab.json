{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "issue_11772.yml",
			"size": 0,
			"path": "modules/openapi-generator/src/test/resources/3_0/issue_11772.yml",
			"byteSize": 9568,
			"content": "openapi: 3.0.0\ninfo:\n  title: Extra Annotation Test\n  version: 1.0.0\ntags:\n  - name: employee\n  - name: surveyGroup\n  - name: skills\n  - name: surveySubmission\n  - name: userProfile\nservers:\n  - url: \"http://localhost:8080\"\npaths:\n  /employee:\n    get:\n      tags:\n        - employee\n      parameters:\n        - name: filterBy\n          description: Field by which to filter results.\n          in: query\n          schema:\n            type: string\n          example: name\n        - name: filter\n          description: String to filter on, query string\n          in: query\n          schema:\n            type: string\n          example: Frank\n        - name: sortBy\n          description: Field by which to sort\n          in: query\n          schema:\n            type: string\n        - name: sortOrder\n          description: Sort Order\n          in: query\n          schema:\n            type: string\n            enum:\n              - ASC\n              - DESC\n        - name: offset\n          description: Page offset\n          schema:\n            type: integer\n            format: int32\n          in: query\n        - name: maxResults\n          description: Maximum number of results to return, defaults to 20\n          schema:\n            type: integer\n            format: int32\n          example: 20\n          in: query\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Employee\"\n          description: A list resource collection of Employees.\n      operationId: getEmployees\n      summary: List all employees.\ncomponents:\n  schemas:\n    EmployeeEntity:\n      type: object\n      x-class-extra-annotation: |-\n        @javax.persistence.Entity\n        @javax.persistence.Table(\n            name = \"employees\",\n            uniqueConstraints = {\n              @javax.persistence.UniqueConstraint(columnNames = {\"email\"})\n            }\n          )\n      allOf:\n        - $ref: \"#/components/schemas/Employee\"\n      properties:\n        assignments:\n          description: Projects for which the employee has been assigned to a SurveyGroup\n          items:\n            $ref: \"#/components/schemas/EmployeeAssignment\"\n          type: array\n          x-field-extra-annotation: |-\n            @javax.persistence.OneToMany(mappedBy = \"employee\")\n    Employee:\n      type: object\n      x-class-extra-annotation: |-\n          @javax.persistence.MappedSuperclass\n      properties:\n        id:\n          description: Employee's ID\n          type: string\n          example: jsmith@openapi.com\n          x-field-extra-annotation: |-\n            @javax.persistence.Id\n        name:\n          description: Name of the employee.\n          type: string\n          example: John Smith\n        email:\n          description: The email address of the employee.\n          type: string\n          example: jsmith@openapi.com\n          x-field-extra-annotation: |-\n            @org.hibernate.annotations.Formula(\"CONCAT(id, '@openapi.com')\")\n        role:\n          description: \"The role of the employee. For example, consultant, PM, TSM, etc.\"\n          type: string\n          example: Consultant\n        hasAcceptedTerms:\n          description: Whether the employee has accepted the terms of the usage agreement.\n          type: boolean\n          example: false\n          x-field-extra-annotation: |-\n            @javax.persistence.Transient\n        dateTermsAccepted:\n          description: The date the employee accepted the terms of the usage agreement.\n          type: string\n          format: date\n          example: \"2021-02-09\"\n        termsVersionNumber:\n          description: The version number of terms of the usage agreement.\n          type: number\n          format: float\n          example: 1.0\n    SurveyGroupEntity:\n      required:\n        - opportunityId\n        - projectName\n        - projectCreatorId\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/SurveyGroup\"\n      x-class-extra-annotation: |-\n        @javax.persistence.Entity\n        @javax.persistence.Table(name = \"survey_groups\")\n      properties:\n        assignments:\n          type: array\n          x-field-extra-annotation: |-\n            @javax.persistence.OneToMany\n            @javax.persistence.JoinColumn(name = \"survey_group_id\")\n          items:\n            $ref: \"#/components/schemas/EmployeeAssignment\"\n        disabled:\n          description: A flag indicating if this Survey Group is disabled\n          type: boolean\n          x-field-extra-annotation: |-\n            @javax.persistence.Column(nullable = false)\n          default: false\n          example: false\n    SurveyGroup:\n      required:\n        - opportunityId\n        - projectName\n        - projectCreatorId\n        - tsmId\n      type: object\n      x-class-extra-annotation: |-\n        @javax.persistence.MappedSuperclass\n        @javax.persistence.EntityListeners(org.springframework.data.jpa.domain.support.AuditingEntityListener.class)\n      properties:\n        id:\n          description: A GUID that uniquely identifies the SurveyGroup.\n          type: string\n          format: uuid\n          example: f1ad7649-eb70-4499-9c82-a63fe2c6dc71\n          x-field-extra-annotation: |-\n            @javax.persistence.Id\n            @javax.persistence.GeneratedValue(generator = \"UUID\")\n            @org.hibernate.annotations.GenericGenerator(name = \"UUID\", strategy =\n              \"org.hibernate.id.UUIDGenerator\")\n            @javax.persistence.Column(name = \"id\", updatable = false, nullable =\n              false)\n        createdDate:\n          description: The date the project was created.\n          type: string\n          format: date-time\n          readOnly: true\n          example: \"2020-01-29\"\n          x-field-extra-annotation: |-\n            @org.springframework.data.annotation.CreatedDate\n        createdBy:\n          description: The employee id (Kerberos) of the user that created the project.\n          type: string\n          example: janedoe\n          x-field-extra-annotation: |-\n            @org.springframework.data.annotation.CreatedBy\n        modifiedDate:\n          description: The date the project was last modified\n          type: string\n          format: date-time\n          readOnly: true\n          example: \"2020-01-29\"\n          x-field-extra-annotation: |-\n            @org.springframework.data.annotation.LastModifiedDate\n        modifiedBy:\n          description: The employee id (Kerberos) of the user that last modifed the project.\n          type: string\n          example: janedoe\n          x-field-extra-annotation: |-\n            @org.springframework.data.annotation.LastModifiedBy\n        opportunityId:\n          description: The ID of the Opportunity from PSA.\n          type: string\n          example: 3456NAS\n          x-field-extra-annotation: |-\n            @javax.persistence.Column(unique = true)\n        projectName:\n          description: The name of the project.\n          type: string\n          example: NASA App Modernization\n        projectCreatorId:\n          description: The email address of the creator of the project.\n          type: string\n          example: janedoe@openapi.com\n        submissionStatus:\n          x-field-extra-annotation: |-\n            @javax.persistence.Transient\n          description: Returns a status of \"Complete\" or \"Incomplete\"\n          type: string\n          example: Complete\n          enum:\n            - Complete\n            - Incomplete\n    EmployeeAssignment:\n      type: object\n      x-class-extra-annotation: |-\n        @javax.persistence.Entity\n        @javax.persistence.Table(\n          name = \"employee_assignments\",\n          uniqueConstraints={\n          @javax.persistence.UniqueConstraint(columnNames={\"employee_id\", \"survey_group_id\"})\n          })\n      properties:\n        id:\n          description: A GUID that uniquely identifies the project.\n          type: string\n          format: uuid\n          example: f9238beb-9649-4983-9059-4f0ee372d56e\n          x-field-extra-annotation: |-\n            @javax.persistence.Id\n            @javax.persistence.GeneratedValue(generator = \"UUID\")\n            @org.hibernate.annotations.GenericGenerator(name = \"UUID\", strategy = \"org.hibernate.id.UUIDGenerator\")\n            @javax.persistence.Column(name = \"id\", updatable = false, nullable = false)\n        employee:\n          allOf:\n            - $ref: \"#/components/schemas/EmployeeEntity\"\n          type: object\n          x-field-extra-annotation: |-\n            @javax.persistence.ManyToOne(cascade = javax.persistence.CascadeType.REMOVE)\n            @javax.persistence.JoinColumn(name = \"employee_id\", nullable=false)\n        surveyGroup:\n          description: The unique ID of the SurveyGroup associated with the opportunity.\n          type: object\n          x-field-extra-annotation: |-\n            @javax.persistence.ManyToOne\n            @javax.persistence.JoinColumn(name = \"survey_group_id\", nullable=false)\n          allOf:\n            - $ref: \"#/components/schemas/SurveyGroupEntity\"\n        startDate:\n          description: The date the employee started the project.\n          type: string\n          format: date-time\n          example: \"2020-01-29\"\n        endDate:\n          description: The employee's end date on the project.\n          type: string\n          format: date-time\n          example: \"2020-01-29\"\n        billableRole:\n          description: Role that the employee is billed for on the project..\n          type: string\n          example: Consultant\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/-/blob/modules/openapi-generator/src/test/resources/3_0/issue_11772.yml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/modules/openapi-generator/src/test/resources/3_0/issue_11772.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}