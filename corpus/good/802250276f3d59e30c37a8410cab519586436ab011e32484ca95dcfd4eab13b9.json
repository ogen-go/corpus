{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "ritc.io-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/ritc.io-1.0.0-swagger.yaml",
			"byteSize": 88128,
			"content": "openapi: 3.0.0\ninfo:\n  description: Rules in the Cloud\n  title: Ritc\n  version: 1.0.0\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://pbs.twimg.com/profile_images/664480221534552064/CwdeYGxs_400x400.jpg\n  x-origin:\n    - format: swagger\n      url: http://www.ritc.io/openapi/ritc.swagger.json\n      version: \"2.0\"\n  x-providerName: ritc.io\npaths:\n  /actions:\n    get:\n      description: List actions\n      operationId: listActions\n      responses:\n        \"200\":\n          description: A list of actions in an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ActionShortResponse\"\n                type: array\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Actions\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a new action\n      operationId: addAction\n      requestBody:\n        $ref: \"#/components/requestBodies/Action59\"\n      responses:\n        \"200\":\n          description: An action was created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActionShortResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Actions\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/actions/{action_id}\":\n    delete:\n      description: Delete an action\n      operationId: removeAction\n      parameters:\n        - description: Id of action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The action was successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Actions\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get an action\n      operationId: getAction\n      parameters:\n        - description: Id of action_id\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about an action\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ActionFullResponse\"\n                type: array\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Actions\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update information about a specific action\n      operationId: updateAction\n      parameters:\n        - description: Id of user\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Action59\"\n      responses:\n        \"200\":\n          description: Information about the action was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActionShortResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Actions\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /admin:\n    get:\n      description: Ping the server\n      operationId: admin\n      responses:\n        \"200\":\n          description: Ritc is up\n          content:\n            application/json:\n              schema:\n                type: object\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - admin\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /admin/log:\n    post:\n      description: Log a message\n      operationId: logInRitc\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: Log message\n        required: true\n      responses:\n        \"200\":\n          description: Message logged\n          content:\n            application/json:\n              schema:\n                type: object\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - admin\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /admin/ping:\n    get:\n      description: Ping the server\n      operationId: pingRitc\n      responses:\n        \"200\":\n          description: Ritc is up\n          content:\n            application/json:\n              schema:\n                type: object\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - admin\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /apps:\n    get:\n      description: Get apps information\n      operationId: listApps\n      responses:\n        \"200\":\n          description: A list of apps in an org\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a new app\n      operationId: addApp\n      requestBody:\n        $ref: \"#/components/requestBodies/App\"\n      responses:\n        \"200\":\n          description: An app was created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /apps/channels/users:\n    get:\n      description: Get app channels\n      operationId: listAppChannels\n      responses:\n        \"200\":\n          description: List of all channels in an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppChannelResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/apps/channels/{channel_id}/users\":\n    get:\n      description: Get users of a specified channel\n      operationId: listAppChannelUsers\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about users of a specified channel\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppChannelResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/apps/channels/{channel_id}/users/{user_id}\":\n    get:\n      description: Get user of a specified channel\n      operationId: getAppChannelUser\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about a specified user of a specified channel\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppChannelResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create user channel\n      operationId: addAppChannelUser\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: User was assigned to a channel in in app\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppChannelResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /apps/ext/api/credentials:\n    get:\n      description: Get external credentials\n      operationId: listChannelExternalCredentials\n      responses:\n        \"200\":\n          description: Detailed information about external credentials\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppExternalCredentialsResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create new external credentials\n      operationId: addChannelExternalCredentials\n      requestBody:\n        $ref: \"#/components/requestBodies/AppExternalCredentials\"\n      responses:\n        \"200\":\n          description: External credentials created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppExternalCredentialsResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/apps/ext/api/credentials/{channel_id}\":\n    delete:\n      description: Delete credentials for a channel\n      operationId: removeChannelExternalCredentials\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The credentials for a channel were successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get credentials for a channel in an app\n      operationId: getChannelExternalCredentials\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Credentials for a channel in an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppExternalCredentialsResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update credentials for a channel\n      operationId: updateChannelExternalCredentials\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/AppExternalCredentials\"\n      responses:\n        \"200\":\n          description: Information about the channel credentials was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppExternalCredentialsResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/apps/rulegroup/run/{rule_id_list}\":\n    post:\n      description: Run specified rule group in the app\n      operationId: runRuleGroup\n      parameters:\n        - description: Ids of rules in the group, separated by commas, no spaces\n          in: path\n          name: rule_id_list\n          required: true\n          schema:\n            type: string\n        - description: Do not continue with remaining rules after a rule fires\n          in: query\n          name: break_when_rule_fires\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/runRuleGroupInitialData\"\n      responses:\n        \"200\":\n          description: \"Execution of specified rules in the app (for user #1)\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RuleResults\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /apps/rules/run:\n    post:\n      description: Run active app rules\n      operationId: runApp\n      parameters:\n        - description: Do not continue with remaining rules after a rule fires\n          in: query\n          name: break_when_rule_fires\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/runRuleGroupInitialData\"\n      responses:\n        \"200\":\n          description: \"Execution of active rules in the app (for user #1)\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RuleResults\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/apps/{app_id}\":\n    delete:\n      description: Delete an app\n      operationId: removeApp\n      parameters:\n        - description: Id of App\n          in: path\n          name: app_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The app was successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get app information\n      operationId: getApp\n      parameters:\n        - description: Id of App\n          in: path\n          name: app_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update an app\n      operationId: updateApp\n      parameters:\n        - description: Id of app\n          in: path\n          name: app_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/App\"\n      responses:\n        \"200\":\n          description: Information about the app was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Apps\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /channels:\n    get:\n      description: Retrieve Channels\n      operationId: listChannels\n      responses:\n        \"200\":\n          description: A list of channels available to a logged-in user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChannelResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a channel\n      operationId: addChannel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Channel\"\n        description: Channel information\n        required: true\n      responses:\n        \"200\":\n          description: A private channel was created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /channels/anonymous:\n    get:\n      description: Retrieve Channels anonymously\n      operationId: listAnonymousChannels\n      responses:\n        \"200\":\n          description: A list of channels available to an anonymous user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChannelResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/channels/{channel_id}\":\n    delete:\n      description: Delete a channel\n      operationId: removeChannel\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The channel was successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get channel information\n      operationId: getChannel\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about a channel\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChannelResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update a channel\n      operationId: updateChannel\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Rule\"\n        description: Channel information\n        required: true\n      responses:\n        \"200\":\n          description: Information about the channel was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/channels/{channel_id}/functions\":\n    get:\n      description: Retrieve Channel Functions\n      operationId: listChannelFunctions\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of functions available in a channel\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/FunctionResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a channel function\n      operationId: addChannelFunction\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Function7\"\n        description: Channel Function information\n        required: true\n      responses:\n        \"200\":\n          description: A private channel function  was created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FunctionResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/channels/{channel_id}/functions/{function_id}\":\n    get:\n      description: Get channel function information\n      operationId: getChannelFunction\n      parameters:\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Channel Function\n          in: path\n          name: function_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about a channel function\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/FunctionResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Channels\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /orgs:\n    post:\n      description: Create an org\n      operationId: addOrganization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Org\"\n        description: Org information\n        required: true\n      responses:\n        \"200\":\n          description: An org was successfully created\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OrgResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Orgs\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /orgs/me:\n    get:\n      description: Get org information\n      operationId: getMyOrganization\n      responses:\n        \"200\":\n          description: Detailed information about an org\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OrgResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Orgs\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /rules:\n    get:\n      description: List rules\n      operationId: listRules\n      responses:\n        \"200\":\n          description: A list of rules in an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RuleShortResponse\"\n                type: array\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Rules\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a new rule\n      operationId: addRule\n      requestBody:\n        $ref: \"#/components/requestBodies/Rule\"\n      responses:\n        \"200\":\n          description: A rule was created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RuleFullResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Rules\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/rules/{rule_id}\":\n    delete:\n      description: Delete a rule\n      operationId: removeRule\n      parameters:\n        - description: Id of rule\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The rule was successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Rules\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get a rule\n      operationId: getRule\n      parameters:\n        - description: Id of rule\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about a rule\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RuleFullResponse\"\n                type: array\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Rules\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update information about a specific rule\n      operationId: updateRule\n      parameters:\n        - description: Id of user\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Rule\"\n      responses:\n        \"200\":\n          description: Information about the rule was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RuleFullResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Rules\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/rules/{rule_id}/run\":\n    post:\n      description: Run a rule\n      operationId: runRule\n      parameters:\n        - description: Id of rule\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/runRuleGroupInitialData\"\n      responses:\n        \"200\":\n          description: A rule ran successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Rules\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /triggers:\n    get:\n      description: Triggers in an app\n      operationId: listTriggers\n      responses:\n        \"200\":\n          description: A list of triggers in an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TriggerShortResponse\"\n                type: array\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Triggers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a new trigger in an app\n      operationId: addTrigger\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Trigger54\"\n        description: Trigger parameters and configuration\n        required: true\n      responses:\n        \"200\":\n          description: A trigger was successfully created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TriggerShortResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Triggers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/triggers/{trigger_id}\":\n    delete:\n      description: Delete a trigger\n      operationId: removeTrigger\n      parameters:\n        - description: Id of Trigger\n          in: path\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The trigger was successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Triggers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get a trigger\n      operationId: getTrigger\n      parameters:\n        - description: Id of Trigger\n          in: path\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about a trigger\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TriggerFullResponse\"\n                type: array\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Triggers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update a trigger\n      operationId: updateTrigger\n      parameters:\n        - description: Id of user\n          in: path\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Trigger54\"\n        description: Trigger information\n        required: true\n      responses:\n        \"200\":\n          description: Information about the trigger was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TriggerShortResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Triggers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /users:\n    get:\n      description: Users\n      operationId: listAppUsers\n      responses:\n        \"200\":\n          description: A list of App Users in an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppUserResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a new App User\n      operationId: addAppUser\n      requestBody:\n        $ref: \"#/components/requestBodies/AppUser\"\n      responses:\n        \"200\":\n          description: An App User was created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppUserResponse\"\n        \"400\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /users/admin:\n    get:\n      description: Admin users\n      operationId: listAdminUsers\n      responses:\n        \"200\":\n          description: A list of admin users in an app\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AdminUserResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Create a new admin user\n      operationId: addAdminUser\n      requestBody:\n        $ref: \"#/components/requestBodies/AdminUser\"\n      responses:\n        \"200\":\n          description: An admin user was created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminUserResponse\"\n        \"400\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/admin/{user_id}\":\n    delete:\n      description: Remove an admin user\n      operationId: removeAdminUser\n      parameters:\n        - description: Id of Admin_User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The admin user was successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get an admin user\n      operationId: getAdminUser\n      parameters:\n        - description: Id of Admin_User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about an admin user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AdminUserResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update information about an admin user\n      operationId: updateAdminUser\n      parameters:\n        - description: Id of user\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/AdminUser\"\n      responses:\n        \"200\":\n          description: Information about the admin user was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdminUserResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/authenticate/{user_id}/channel/{channel_id}\":\n    post:\n      description: Authenticate a user for a channel\n      operationId: authenticateAppUserForChannel\n      parameters:\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Authorize url to be sent an authorize request\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AuthorizeUrlResponse\"\n                type: array\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/{user_id}\":\n    delete:\n      description: Remove a user\n      operationId: removeAppUser\n      parameters:\n        - description: Id of user\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The user was successfully removed\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get an App User\n      operationId: getAppUser\n      parameters:\n        - description: Id of App User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about an App User\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppUserResponse\"\n                type: array\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    patch:\n      description: Update information about an App User\n      operationId: updateAppUser\n      parameters:\n        - description: Id of user\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/AppUser\"\n      responses:\n        \"200\":\n          description: Information about the user was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppUserResponse\"\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/{user_id}/channels\":\n    get:\n      description: Channels available to a User\n      operationId: listAppUserChannels\n      parameters:\n        - description: Id of user\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of channels available to a specific user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserChannel\"\n                type: array\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Assign a channel to a user\n      operationId: addAppUserToChannel\n      parameters:\n        - description: Id of user\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: Id of Channel\n        required: true\n      responses:\n        \"200\":\n          description: A channel was assigned to a user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserChannel\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/{user_id}/channels/{channel_id}\":\n    delete:\n      description: Remove a user channel assignment\n      operationId: removeAppUserFromChannel\n      parameters:\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The channel was successfully removed from the user\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get a user channel\n      operationId: getAppUserChannel\n      parameters:\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Channel\n          in: path\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about a specific channel for a specific user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserChannel\"\n                type: array\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/{user_id}/rules\":\n    get:\n      description: Rules for a User\n      operationId: listAppUserRules\n      parameters:\n        - description: Id of user\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of rules applying to a specific user\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RuleShortResponse\"\n                type: array\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/{user_id}/rules/{rule_id}\":\n    delete:\n      description: Remove a rule user\n      operationId: removeAppUserFromRule\n      parameters:\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Rule\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The rule was successfully removed from the system\n        \"400\":\n          description: Invalid input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    get:\n      description: Get a user\n      operationId: getAppUserRule\n      parameters:\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Rule\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Detailed information about a rule\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RuleFullResponse\"\n                type: array\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n    post:\n      description: Assign a user to a rule\n      operationId: addAppUserToRule\n      parameters:\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Rule\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A rule was assigned to the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RuleShortResponse\"\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/users/{user_id}/rules/{rule_id}/run\":\n    post:\n      description: Run rule for a user\n      operationId: runRuleForAppUser\n      parameters:\n        - description: Id of User\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: Id of Rule\n          in: path\n          name: rule_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A rule ran successfully for a user\n          content:\n            application/json:\n              schema:\n                type: object\n        \"400\":\n          description: Invalid Input\n          content:\n            application/json:\n              schema: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema: {}\n      security:\n        - Authorization: []\n      tags:\n        - Users\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\nservers:\n  - url: https://api.ritc.io/\ncomponents:\n  requestBodies:\n    Action59:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Action59\"\n      description: Action information\n      required: true\n    App:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/App\"\n      description: App information\n      required: true\n    AppExternalCredentials:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AppExternalCredentials\"\n      description: App_External_Credentials information\n      required: true\n    runRuleGroupInitialData:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: Initial data\n    Rule:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Rule\"\n      description: Rule information\n      required: true\n    AppUser:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AppUser\"\n      description: App User information\n      required: true\n    AdminUser:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AdminUser\"\n      description: Admin User information\n      required: true\n  securitySchemes:\n    Authorization:\n      description: HTTP Basic Authentication/API Key. Basic Auth requires a username and a\n        password. For the username, use a valid API key. Ritc accepts the API\n        key as both plaintext and base64 encoded. Remember that you must append\n        a colon after the api key in order to avoid being prompted for a\n        password. The format is Base64encode(api-key:)\n      in: header\n      name: Authorization\n      type: apiKey\n      x-testValue: \"\"\n  schemas:\n    Action:\n      properties:\n        channelId:\n          type: string\n        createdDate:\n          description: The date the rule was created\n          type: string\n        description:\n          type: string\n        functionId:\n          type: string\n        id:\n          type: string\n        modifiedDate:\n          description: The date the rule was modified\n          type: string\n        name:\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Action\n      type: object\n    Action59:\n      properties:\n        channelId:\n          description: Id of channel used by action\n          format: int32\n          type: integer\n        codes:\n          description: Object containing named Javascript code sets\n          type: object\n        desc:\n          description: Action description\n          type: string\n        functionId:\n          description: Hash id of channel function used by action\n          type: string\n        name:\n          description: Action name\n          type: string\n        parameters:\n          description: Object containing channel-defined action parameters\n          type: object\n      required:\n        - name\n        - channelId\n        - functionId\n      title: Action59\n      type: object\n    ActionFullResponse:\n      properties:\n        channelId:\n          format: int32\n          type: integer\n        codes:\n          type: object\n        createdDate:\n          description: The date the action was created\n          type: string\n        description:\n          description: Action description\n          type: string\n        functionId:\n          type: string\n        id:\n          format: int32\n          type: integer\n        modifiedDate:\n          description: The date the action was modified\n          type: string\n        name:\n          description: Action name\n          type: string\n        parameters:\n          type: object\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Action_Full_Response\n      type: object\n    ActionShortResponse:\n      properties:\n        channelId:\n          type: string\n        createdDate:\n          description: The date the action was created\n          type: string\n        description:\n          description: Action description\n          type: string\n        functionId:\n          type: string\n        id:\n          type: string\n        modifiedDate:\n          description: The date the action was modified\n          type: string\n        name:\n          description: Action name\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Action_Short_Response\n      type: object\n    AdminUser:\n      properties:\n        email:\n          description: Admin User email address\n          type: string\n        password:\n          description: Admin User password\n          type: string\n        type:\n          $ref: \"#/components/schemas/Type41\"\n      title: Admin_User\n      type: object\n    AdminUserResponse:\n      properties:\n        createdDate:\n          description: The date the admin user was created\n          type: string\n        email:\n          description: Admin User email address\n          type: string\n        id:\n          format: int32\n          type: integer\n        modifiedDate:\n          description: The date the admin user was modified\n          type: string\n        name:\n          description: Admin User name\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Admin_User_Response\n      type: object\n    ApiType:\n      enum:\n        - Internal\n        - REST\n        - SDK\n      title: ApiType\n      type: string\n    App:\n      properties:\n        desc:\n          description: App description\n          type: string\n        name:\n          description: App name\n          type: string\n      title: App\n      type: object\n    AppChannelResponse:\n      properties:\n        channelId:\n          description: Channel Id\n          format: int32\n          type: integer\n        createdDate:\n          description: The date the user was created\n          type: string\n        id:\n          format: int32\n          type: integer\n        status:\n          $ref: \"#/components/schemas/Status\"\n        userId:\n          description: Id of App User assigned to Channel\n          format: int32\n          type: integer\n      title: App_Channel_Response\n      type: object\n    AppExternalCredentials:\n      properties:\n        authType:\n          $ref: \"#/components/schemas/AuthType\"\n        channel_id:\n          type: string\n        credentials:\n          type: object\n        name:\n          description: App external credentials api name\n          type: string\n      title: App_External_Credentials\n      type: object\n    AppExternalCredentialsResponse:\n      properties:\n        authType:\n          $ref: \"#/components/schemas/AuthType\"\n        channel_id:\n          type: string\n        credentials:\n          type: object\n        id:\n          type: string\n        name:\n          description: App external credentials api name\n          type: string\n      title: App_External_Credentials_Response\n      type: object\n    AppResponse:\n      properties:\n        apiKey:\n          description: App ApiKey\n          type: string\n        createdDate:\n          description: The date the app was created\n          type: string\n        description:\n          description: App description\n          type: string\n        id:\n          type: string\n        modifiedDate:\n          description: The date the app was modified\n          type: string\n        name:\n          description: App name\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: App_Response\n      type: object\n    AppUser:\n      properties:\n        config:\n          description: Object containing user-defined app user configuration\n          type: object\n        name:\n          description: Display name of App User\n          type: string\n        password:\n          description: App User password\n          type: string\n      title: App_User\n      type: object\n    AppUserResponse:\n      properties:\n        createdDate:\n          description: The date the user was created\n          type: string\n        description:\n          description: Description of App User\n          type: string\n        id:\n          description: Id of App User\n          type: string\n        modifiedDate:\n          description: The date the user was modified\n          type: string\n        name:\n          description: Display name of App User\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: App_User_Response\n      type: object\n    AuthType:\n      enum:\n        - apikey\n        - basic\n        - none\n        - oauth2\n      title: AuthType\n      type: string\n    AuthorizeUrlResponse:\n      properties:\n        url:\n          type: string\n      title: Authorize_Url_Response\n      type: object\n    Channel:\n      properties:\n        description:\n          description: Channel description\n          type: string\n        functions:\n          items:\n            $ref: \"#/components/schemas/Function\"\n          type: array\n        id:\n          description: Id of channel\n          type: string\n        name:\n          description: Channel name\n          type: string\n        type:\n          description: Type of channel. Choices are 'public' or 'private'. Private channels\n            are only viewable within an account, while public channels are\n            viewable to everyone in the system\n          type: object\n      title: Channel\n      type: object\n    ChannelResponse:\n      properties:\n        description:\n          description: Channel description\n          type: string\n        functions:\n          items:\n            $ref: \"#/components/schemas/Function5\"\n          type: array\n        id:\n          description: Id of channel\n          type: string\n        name:\n          description: Channel name\n          type: string\n        type:\n          description: Type of channel. Choices are 'public' or 'private'. Private channels\n            are only viewable within an account, while public channels are\n            viewable to everyone\n          type: object\n      title: Channel_Response\n      type: object\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        fields:\n          type: string\n        message:\n          type: string\n      title: Error\n      type: object\n    Function:\n      properties:\n        id:\n          type: string\n        name:\n          description: Function name\n          type: string\n        parameters:\n          items:\n            $ref: \"#/components/schemas/Parameter\"\n          type: array\n        type:\n          $ref: \"#/components/schemas/Type\"\n      title: Function\n      type: object\n    Function5:\n      properties:\n        description:\n          description: Function description\n          type: string\n        id:\n          type: string\n        name:\n          description: Function name\n          type: string\n        type:\n          $ref: \"#/components/schemas/Type\"\n      title: Function5\n      type: object\n    Function7:\n      properties:\n        apiType:\n          $ref: \"#/components/schemas/ApiType\"\n        desc:\n          description: Function description\n          type: string\n        endpoint:\n          description: Function endpoint\n          type: string\n        httpMethod:\n          $ref: \"#/components/schemas/HttpMethod\"\n        name:\n          description: Function name\n          type: string\n        requestParameters:\n          items:\n            $ref: \"#/components/schemas/RequestParameter\"\n          type: array\n        responseFormat:\n          $ref: \"#/components/schemas/ResponseFormat\"\n        type:\n          $ref: \"#/components/schemas/Type\"\n      title: Function7\n      type: object\n    FunctionResponse:\n      properties:\n        apiType:\n          $ref: \"#/components/schemas/ApiType\"\n        description:\n          description: Function description\n          type: string\n        endpoint:\n          description: Function endpoint\n          type: string\n        httpMethod:\n          $ref: \"#/components/schemas/HttpMethod\"\n        id:\n          type: string\n        name:\n          description: Function name\n          type: string\n        requestParameters:\n          items:\n            $ref: \"#/components/schemas/RequestParameter\"\n          type: array\n        responseFormat:\n          $ref: \"#/components/schemas/ResponseFormat\"\n        type:\n          $ref: \"#/components/schemas/Type\"\n      title: Function_Response\n      type: object\n    HttpMethod:\n      enum:\n        - DELETE\n        - GET\n        - PATCH\n        - POST\n      title: HttpMethod\n      type: string\n    Org:\n      properties:\n        desc:\n          description: Org description\n          type: string\n        name:\n          description: Org name\n          type: string\n        type:\n          description: Org type\n          type: string\n      required:\n        - name\n      title: Org\n      type: object\n    OrgResponse:\n      properties:\n        createdDate:\n          description: The date the org was created\n          type: string\n        id:\n          type: string\n        modifiedDate:\n          description: The date the org was modified\n          type: string\n        name:\n          description: Org name\n          type: string\n        plan:\n          $ref: \"#/components/schemas/Plan\"\n        planCat:\n          type: object\n        status:\n          description: Org name\n          type: string\n        type:\n          type: object\n      title: Org_Response\n      type: object\n    Parameter:\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      required:\n        - key\n        - value\n      title: Parameter\n      type: object\n    Plan:\n      enum:\n        - free\n        - basic\n      title: Plan\n      type: string\n    RequestParameter:\n      properties:\n        description:\n          type: string\n        fieldType:\n          type: string\n        label:\n          type: string\n        name:\n          type: string\n        schema:\n          $ref: \"#/components/schemas/Schema\"\n      title: RequestParameter\n      type: object\n    ResponseFormat:\n      enum:\n        - Html\n        - Json\n        - Text\n        - Xml\n      title: ResponseFormat\n      type: string\n    Rule:\n      properties:\n        actionIds:\n          description: Rule description\n          type: string\n        description:\n          description: Rule description\n          type: string\n        name:\n          description: Rule name\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n        triggerIds:\n          description: Rule description\n          type: string\n      title: Rule\n      type: object\n    RuleFullResponse:\n      properties:\n        actions:\n          items:\n            $ref: \"#/components/schemas/Action\"\n          type: array\n        createdDate:\n          description: The date the rule was created\n          type: string\n        description:\n          description: Rule description\n          type: string\n        id:\n          description: Rule Id\n          format: int32\n          type: integer\n        modifiedDate:\n          description: The date the rule was modified\n          type: string\n        name:\n          description: Rule name\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n        triggers:\n          items:\n            $ref: \"#/components/schemas/Trigger\"\n          type: array\n      title: Rule_Full_Response\n      type: object\n    RuleResults:\n      properties:\n        id:\n          type: string\n        name:\n          description: Name of rule results\n          type: string\n        type:\n          $ref: \"#/components/schemas/Type\"\n      title: Rule_Results\n      type: object\n    RuleShortResponse:\n      properties:\n        createdDate:\n          description: The date the rule was created\n          type: string\n        description:\n          description: Rule description\n          type: string\n        id:\n          description: Rule Id\n          format: int32\n          type: integer\n        modifiedDate:\n          description: The date the rule was modified\n          type: string\n        name:\n          description: Rule name\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Rule_Short_Response\n      type: object\n    Schema:\n      properties:\n        datatype:\n          type: object\n        default:\n          type: string\n        expose:\n          type: object\n        required:\n          type: object\n        style:\n          $ref: \"#/components/schemas/Style\"\n      title: Schema\n      type: object\n    Status:\n      enum:\n        - active\n        - inactive\n      title: Status\n      type: string\n    Style:\n      enum:\n        - postbody\n        - query\n        - template\n      title: Style\n      type: string\n    Trigger:\n      properties:\n        channelId:\n          type: string\n        createdDate:\n          description: The date the rule was created\n          type: string\n        description:\n          type: string\n        functionId:\n          type: string\n        id:\n          type: string\n        modifiedDate:\n          description: The date the rule was modified\n          type: string\n        name:\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Trigger\n      type: object\n    Trigger54:\n      properties:\n        channelId:\n          description: Id of channel used by trigger\n          format: int32\n          type: integer\n        codes:\n          description: Object containing named Javascript code sets\n          type: object\n        desc:\n          description: Trigger description\n          type: string\n        functionId:\n          description: Hash id of channel function used by trigger\n          type: string\n        name:\n          description: Trigger name\n          type: string\n        parameters:\n          description: Object containing channel-defined trigger parameters\n          type: object\n      required:\n        - name\n        - channelId\n        - functionId\n      title: Trigger54\n      type: object\n    TriggerFullResponse:\n      properties:\n        channelId:\n          format: int32\n          type: integer\n        codes:\n          type: object\n        createdDate:\n          description: The date the trigger was created\n          type: string\n        description:\n          description: Trigger description\n          type: string\n        functionId:\n          type: string\n        id:\n          format: int32\n          type: integer\n        modifiedDate:\n          description: The date the trigger was modified\n          type: string\n        name:\n          description: Trigger name\n          type: string\n        parameters:\n          type: object\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Trigger_Full_Response\n      type: object\n    TriggerShortResponse:\n      properties:\n        channelId:\n          format: int32\n          type: integer\n        createdDate:\n          description: The date the trigger was created\n          type: string\n        description:\n          description: Trigger description\n          type: string\n        functionId:\n          type: string\n        id:\n          format: int32\n          type: integer\n        modifiedDate:\n          description: The date the trigger was modified\n          type: string\n        name:\n          description: Trigger name\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      title: Trigger_Short_Response\n      type: object\n    Type:\n      enum:\n        - action\n        - trigger\n      title: Type\n      type: string\n    Type41:\n      enum:\n        - admin\n        - guest\n      title: Type41\n      type: string\n    UserChannel:\n      properties:\n        channelId:\n          format: int32\n          type: integer\n        userId:\n          format: int32\n          type: integer\n      title: User_Channel\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/ritc.io-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/ritc.io-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}