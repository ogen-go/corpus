{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anitechcs/microservices-reference-application"
		},
		"file": {
			"name": "book-openapi-spec.yml",
			"size": 0,
			"path": "book-openapi-spec.yml",
			"byteSize": 7685,
			"content": "openapi: 3.0.2\ninfo:\n  title: BookService API Specification\n  description: 'This API server exposes required endpoints for managing Books in Microservices reference application.'\n  termsOfService: https://www.anitechcs.com/terms-condition/\n  contact:\n    email: contact@anitechcs.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: v1.0.0\nexternalDocs:\n  description: Find out more about Microservices reference application\n  url: https://github.com/anitechcs/microservices-reference-application\nservers:\n  - url: 'https://mra-bookstore.tk/v1'\n    description: Book Service production server\ntags:\n- name: Book-Service\n  description: All book endpoints required for Microservices reference application\ncomponents:\n  schemas:\n    Book:\n      type: object\n      properties:\n        bookId:\n          description: Unique book Id in the system\n          type: integer\n          format: int64\n        title:\n          description: Title of the book\n          type: string\n        description:\n          description: Description about book\n          type: string\n        authors:\n          description: Book authors\n          type: array\n          items:\n            type: string\n        isbn:\n          description: ISBN of the book\n          type: string\n        language:\n          description: Language in which book is written\n          type: string\n        totalPages:\n          description: Total number of pages\n          type: integer\n          format: int32\n        publicationDate:\n          description: Book publication date\n          type: string\n          format: date\n        publisher:\n          description: Publisher of the book\n          type: string\n        genres:\n          description: Genres of the book\n          type: array\n          items:\n            type: string\n        tags:\n          description: Tags\n          type: array\n          items:\n            type: string\n        price:\n          description: Price of the book\n          type: object\n          properties:\n            currency:\n              description: Currency\n              type: string\n            amount:\n              description: Price amount\n              type: number\n              format: float\n            mrp:\n              description: MRP price\n              type: number\n              format: float\n        ratings:\n          description: Book rating details\n          type: object\n          properties:\n            rating:\n              description: Book rating\n              type: number\n              format: float\n            ratingCount:\n              description: Rating count\n              type: integer\n              format: int32\n        coverPhoto:\n          description: Book cover image\n          type: string\n        promotions:\n          description: Book promotion details\n          type: object\n          properties:\n            text:\n              description: Text to show in UI\n              type: string\n              example: '15% off'\n            color:\n              description: Color of the promotion badge in UI\n              type: string\n              example: '#0D47A1'\n    BookListSuccessResponse:\n      type: object\n      properties:\n        statusCode:\n          type: integer\n          format: int32\n        message:\n          type: string\n        total:\n          type: integer\n          format: int64\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Book'\n    BookSuccessResponse:\n      type: object\n      properties:\n        statusCode:\n          type: integer\n          format: int32\n        message:\n          type: string\n        results:\n          $ref: '#/components/schemas/Book'\n    BookErrorResponse:\n      type: object\n      properties:\n        statusCode:\n          description: Non zero error code\n          type: integer\n          format: int32\n        message:\n          description: Error message\n          type: string\n    BookGenreSuccessResponse:\n      type: object\n      properties:\n        statusCode:\n          type: integer\n          format: int32\n        message:\n          type: string\n        results:\n          type: array\n          items:\n            type: string\npaths:\n  /book:\n    summary: This end point exposes operations related to books\n    description: Book endpoints\n    get:\n      tags:\n        - Book-Service\n      description: Get All Books with Filtering, Sorting, and Pagination\n      operationId: getAllBooks\n      parameters:\n      - name: limit\n        in: query\n        description: Number of items service will return\n        required: true\n        schema:\n          type: integer\n          format: int32\n          default: 10\n          example: 10\n      - name: offset\n        in: query\n        description: Offset the results by this number\n        schema:\n          type: integer\n          format: int32\n          default: 0\n          example: 0\n      responses:\n        200:\n          description: Success response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookListSuccessResponse'\n        400:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookErrorResponse'\n        404:\n          description: No records found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookErrorResponse'\n        500:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookErrorResponse'\n  /book/{bookId}:\n    description: Get indivisual book details by Id\n    get:\n      tags:\n        - Book-Service\n      description: Get book details\n      operationId: getBookById\n      parameters:\n      - name: bookId\n        in: path\n        description: Id of book to return details\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookSuccessResponse'\n        400:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookErrorResponse'\n        404:\n          description: No records found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookErrorResponse'\n        500:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookErrorResponse'\n  /book/genres:\n    summary: This end point exposes operations related to genres\n    description: Book genres endpoints\n    get:\n      tags:\n        - Book-Service\n      description: Get All Book generes\n      operationId: getAllBookGeneres\n      responses:\n          200:\n            description: Success response\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/BookGenreSuccessResponse'\n          404:\n            description: No records found\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/BookErrorResponse'\n          500:\n            description: Server error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/BookErrorResponse'\n",
			"canonicalURL": "/github.com/anitechcs/microservices-reference-application@dec89c32025e93fb3ffbb56b9dbf7488c2b797ed/-/blob/book-openapi-spec.yml",
			"externalURLs": [
				{
					"url": "https://github.com/anitechcs/microservices-reference-application/blob/dec89c32025e93fb3ffbb56b9dbf7488c2b797ed/book-openapi-spec.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}