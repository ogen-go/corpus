{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-go-api-library"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/platformsaccount/api/openapi.yaml",
			"byteSize": 174113,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: support@adyen.com\n    name: Adyen Support\n    url: https://support.adyen.com/\n  description: |-\n    The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and KYC-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.\n\n    For more information, refer to our [documentation](https://docs.adyen.com/platforms).\n    ## Authentication\n    To connect to the Account API, you must use basic authentication credentials of your web service user. If you don't have one, please contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:\n\n    ```\n    curl\n    -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\\n    -H \"Content-Type: application/json\" \\\n    ...\n    ```\n    Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n    ## Versioning\n    The Account API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n    For example:\n    ```\n    https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder\n    ```\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: 'Adyen for Platforms: Account API'\n  version: \"6\"\nservers:\n- url: https://cal-test.adyen.com/cal/services/Account/v6\npaths:\n  /checkAccountHolder:\n    post:\n      description: This endpoint allows to trigger the verification of the account\n        holder earlier than it's required by the currently processed volume.\n      operationId: post-checkAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PerformVerificationRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Request to perform verification for an account holder.\n      x-groupName: Verification\n      x-sortIndex: 5\n  /closeAccount:\n    post:\n      description: This endpoint is used to close an existing account under an account\n        holder. If an account is closed, it may not process transactions or have its\n        funds paid out,and it may not be reopened. Any payments made to a closed account\n        will be directed to the merchant's liable account.\n      operationId: post-closeAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloseAccountRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloseAccountResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Close an existing account under an account holder.\n      x-groupName: Accounts\n      x-sortIndex: 3\n  /closeAccountHolder:\n    post:\n      description: This endpoint is used to close an existing account holder and its\n        accounts. If an account holder is closed, it may not process transactions\n        or pay out funds, and it may not be reopened. Any payments made to a closed\n        account will be directed to the merchant's liable account.\n      operationId: post-closeAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloseAccountHolderRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloseAccountHolderResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Close an existing account holder.\n      x-groupName: Account holders\n      x-sortIndex: 7\n  /createAccount:\n    post:\n      description: This endpoint is used to create an account under an existing account\n        holder. An account holder may have multiple accounts.\n      operationId: post-createAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAccountRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAccountResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Create a new account under an existing account holder.\n      x-groupName: Accounts\n      x-sortIndex: 1\n  /createAccountHolder:\n    post:\n      description: This endpoint is used to create an account holder. Each account\n        holder represents a single sub-merchant, and each sub-merchant must be represented\n        by an account holder. Depending on the legal entity type, different details\n        are required to be provided in the call to this endpoint.\n      operationId: post-createAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAccountHolderRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAccountHolderResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Create a new account holder.\n      x-groupName: Account holders\n      x-sortIndex: 1\n  /deleteBankAccounts:\n    post:\n      description: This endpoint is used to delete existing bank accounts from an\n        account holder. For this, pass the `accountHolderCode` you got on the account\n        holder creation, and one or more `bankAccountUUIDs` specifying bank accounts\n        to delete.\n      operationId: post-deleteBankAccounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteBankAccountRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Delete bank accounts of an existing account holder.\n      x-groupName: Verification\n      x-sortIndex: 3\n  /deletePayoutMethods:\n    post:\n      description: This endpoint is used to delete existing payout method from an\n        account holder. For this, pass the `accountHolderCode` you got on the account\n        holder creation, and one or more `payoutMethodCodes` specifying payout methods\n        to delete.\n      operationId: post-deletePayoutMethods\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeletePayoutMethodRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Delete payout methods of an existing account holder.\n      x-groupName: Verification\n      x-sortIndex: 3\n  /deleteShareholders:\n    post:\n      description: This endpoint is used to delete existing shareholders from an account\n        holder.\n      operationId: post-deleteShareholders\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteShareholderRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Delete shareholders of an existing account holder.\n      x-groupName: Verification\n      x-sortIndex: 4\n  /getAccountHolder:\n    post:\n      description: This endpoint is used to retrieve the details of an account holder.\n      operationId: post-getAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetAccountHolderRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountHolderResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Retrieve the details of an account holder.\n      x-groupName: Account holders\n      x-sortIndex: 2\n  /getUploadedDocuments:\n    post:\n      description: |-\n        This endpoint is used to retrieve documents previously uploaded for use in the KYC Verification of an account holder.\n\n        For further information regarding KYC Verification, please refer to [Verification checks](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks).\n      operationId: post-getUploadedDocuments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetUploadedDocumentsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUploadedDocumentsResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Retrieve the uploaded documents of an existing account holder.\n      x-groupName: Verification\n      x-sortIndex: 2\n  /suspendAccountHolder:\n    post:\n      description: This endpoint is used to suspend an existing account holder. If\n        an account holder is suspended, it may not process transactions or pay out\n        funds. Any payments made to a suspended account holder will be directed to\n        the merchant's liable account.\n      operationId: post-suspendAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SuspendAccountHolderRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuspendAccountHolderResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Suspend an existing account holder.\n      x-groupName: Account holders\n      x-sortIndex: 5\n  /unSuspendAccountHolder:\n    post:\n      description: |-\n        This endpoint is used to reinstate an existing account holder that has been suspended either through the `/suspendAccountHolder` endpoint or because a KYC deadline expired.\n\n        However, an account holder that has been suspended by Adyen because of KYC verification issues (indicated by a **FAILED** verification [`status`](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status)) cannot be reinstated through this endpoint.\n      operationId: post-unSuspendAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnSuspendAccountHolderRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnSuspendAccountHolderResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Reinstate a disabled account holder.\n      x-groupName: Account holders\n      x-sortIndex: 6\n  /updateAccount:\n    post:\n      description: This endpoint is used to update the description or payout schedule\n        of an existing account.\n      operationId: post-updateAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccountRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Update an existing account under an account holder.\n      x-groupName: Accounts\n      x-sortIndex: 2\n  /updateAccountHolder:\n    post:\n      description: |-\n        This endpoint is used to update the `accountHolderDetails` or `processingTier` of an account holder.\n\n        If updating the `accountHolderDetails`, only the details which have been provided will be updated. Other details will be left as-is with the exception of the following fields:\n        * `accountHolderDetails.address`\n        * `accountHolderDetails.fullPhoneNumber`\n        * `accountHolderDetails.bankAccountDetails.BankAccountDetail`\n        * `accountHolderDetails.businessDetails.shareholders.ShareholderContact`, which requires all fields necessary for validation (i.e. in order to update only the `accountHolderDetails.address.postalCode`, the fields `accountHolderDetails.address.country`, `.city`, `.street`, `.postalCode`, and possibly `.stateOrProvince` must be provided as well, so that the address can be properly validated).\n\n        Note that this endpoint can also be used to create new bank accounts. For this, provide details of a bank account without providing a `bankAccountUUID`.\n\n        Similarly, it can also be used to create new shareholders by providing details of a shareholder without providing a `shareholderCode`.\n        \u003e The updating of the `metadata` field will overwite all of the existing account holder metadata. In order to update an existing metadata key-value pair, all otherkey-value pairs should be provided in order to not delete them.\n      operationId: post-updateAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccountHolderRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountHolderResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Update an existing account holder.\n      x-groupName: Account holders\n      x-sortIndex: 3\n  /updateAccountHolderState:\n    post:\n      description: |-\n        This endpoint is used to disable or enable the processing or payout state of an account holder.\n\n        For more information about processing and payout states of an account holder, refer to [our documentation](https://docs.adyen.com/platforms).\n      operationId: post-updateAccountHolderState\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccountHolderStateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountHolderStatusResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Update the state of an existing account holder.\n      x-groupName: Account holders\n      x-sortIndex: 4\n  /uploadDocument:\n    post:\n      description: |-\n        This endpoint is used to upload a document for use in the KYC verification of an account holder.\n\n        For further information regarding KYC Verification, please refer to [Verification checks](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks).\n      operationId: post-uploadDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadDocumentRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountHolderResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Upload a document for an existing account holder.\n      x-groupName: Verification\n      x-sortIndex: 1\ncomponents:\n  schemas:\n    Account:\n      example:\n        accountCode: accountCode\n        metadata:\n          key: metadata\n        bankAccountUUID: bankAccountUUID\n        beneficiaryAccount: beneficiaryAccount\n        payoutMethodCode: payoutMethodCode\n        description: description\n        beneficiaryMerchantReference: beneficiaryMerchantReference\n        payoutSchedule:\n          schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          nextScheduledPayout: 2000-01-23T04:56:07.000+00:00\n        payoutSpeed: SAME_DAY\n        status: status\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        bankAccountUUID:\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        beneficiaryAccount:\n          description: The beneficiary of the account.\n          type: string\n        beneficiaryMerchantReference:\n          description: The reason that a beneficiary has been set up for this account.\n            This may have been supplied during the setup of a beneficiary at the discretion\n            of the executing user.\n          type: string\n        description:\n          description: A description of the account.\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: |-\n            A set of key and value pairs for general use by the merchant.\n            The keys do not have specific names and may be used for storing miscellaneous data as desired.\n            \u003e Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.\n          type: object\n        payoutMethodCode:\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - SAME_DAY\n          - STANDARD\n          type: string\n        status:\n          description: 'The status of the account. Possible values: `Active`, `Inactive`,\n            `Suspended`, `Closed`.'\n          type: string\n    AccountEvent:\n      example:\n        reason: reason\n        executionDate: 2000-01-23T04:56:07.000+00:00\n        event: InactivateAccount\n      properties:\n        event:\n          description: |-\n            The event.\n            \u003ePermitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.\n            For more information, refer to [Verification checks](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks).\n          enum:\n          - InactivateAccount\n          - RefundNotPaidOutTransfers\n          type: string\n        executionDate:\n          description: The date on which the event will take place.\n          format: date-time\n          type: string\n        reason:\n          description: The reason why this event has been created.\n          type: string\n      required:\n      - event\n      - executionDate\n      - reason\n    AccountHolderDetails:\n      example:\n        metadata:\n          key: metadata\n        payoutMethods:\n        - merchantAccount: merchantAccount\n          payoutMethodType: CardToken\n          payoutMethodCode: payoutMethodCode\n          recurringDetailReference: recurringDetailReference\n          shopperReference: shopperReference\n        - merchantAccount: merchantAccount\n          payoutMethodType: CardToken\n          payoutMethodCode: payoutMethodCode\n          recurringDetailReference: recurringDetailReference\n          shopperReference: shopperReference\n        address:\n          country: country\n          stateOrProvince: stateOrProvince\n          city: city\n          houseNumberOrName: houseNumberOrName\n          street: street\n          postalCode: postalCode\n        bankAccountDetails:\n        - ownerNationality: ownerNationality\n          ownerPostalCode: ownerPostalCode\n          ownerCountryCode: ownerCountryCode\n          bankName: bankName\n          bankAccountReference: bankAccountReference\n          ownerState: ownerState\n          bankAccountUUID: bankAccountUUID\n          ownerName: ownerName\n          bankBicSwift: bankBicSwift\n          countryCode: countryCode\n          ownerDateOfBirth: ownerDateOfBirth\n          ownerStreet: ownerStreet\n          bankAccountName: bankAccountName\n          ownerHouseNumberOrName: ownerHouseNumberOrName\n          bankCode: bankCode\n          accountType: accountType\n          accountNumber: accountNumber\n          primaryAccount: true\n          bankCity: bankCity\n          checkCode: checkCode\n          branchCode: branchCode\n          taxId: taxId\n          iban: iban\n          ownerCity: ownerCity\n          urlForVerification: urlForVerification\n          currencyCode: currencyCode\n        - ownerNationality: ownerNationality\n          ownerPostalCode: ownerPostalCode\n          ownerCountryCode: ownerCountryCode\n          bankName: bankName\n          bankAccountReference: bankAccountReference\n          ownerState: ownerState\n          bankAccountUUID: bankAccountUUID\n          ownerName: ownerName\n          bankBicSwift: bankBicSwift\n          countryCode: countryCode\n          ownerDateOfBirth: ownerDateOfBirth\n          ownerStreet: ownerStreet\n          bankAccountName: bankAccountName\n          ownerHouseNumberOrName: ownerHouseNumberOrName\n          bankCode: bankCode\n          accountType: accountType\n          accountNumber: accountNumber\n          primaryAccount: true\n          bankCity: bankCity\n          checkCode: checkCode\n          branchCode: branchCode\n          taxId: taxId\n          iban: iban\n          ownerCity: ownerCity\n          urlForVerification: urlForVerification\n          currencyCode: currencyCode\n        individualDetails:\n          personalData:\n            nationality: nationality\n            dateOfBirth: dateOfBirth\n            documentData:\n            - issuerCountry: issuerCountry\n              issuerState: issuerState\n              number: number\n              type: DRIVINGLICENSE\n              expirationDate: expirationDate\n            - issuerCountry: issuerCountry\n              issuerState: issuerState\n              number: number\n              type: DRIVINGLICENSE\n              expirationDate: expirationDate\n          name:\n            firstName: firstName\n            lastName: lastName\n            gender: MALE\n            infix: infix\n        webAddress: webAddress\n        merchantCategoryCode: merchantCategoryCode\n        fullPhoneNumber: fullPhoneNumber\n        businessDetails:\n          stockExchange: stockExchange\n          stockNumber: stockNumber\n          shareholders:\n          - address:\n              country: country\n              stateOrProvince: stateOrProvince\n              city: city\n              houseNumberOrName: houseNumberOrName\n              street: street\n              postalCode: postalCode\n            phoneNumber:\n              phoneType: Fax\n              phoneNumber: phoneNumber\n              phoneCountryCode: phoneCountryCode\n            webAddress: webAddress\n            personalData:\n              nationality: nationality\n              dateOfBirth: dateOfBirth\n              documentData:\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n            fullPhoneNumber: fullPhoneNumber\n            name:\n              firstName: firstName\n              lastName: lastName\n              gender: MALE\n              infix: infix\n            shareholderReference: shareholderReference\n            email: email\n            shareholderCode: shareholderCode\n          - address:\n              country: country\n              stateOrProvince: stateOrProvince\n              city: city\n              houseNumberOrName: houseNumberOrName\n              street: street\n              postalCode: postalCode\n            phoneNumber:\n              phoneType: Fax\n              phoneNumber: phoneNumber\n              phoneCountryCode: phoneCountryCode\n            webAddress: webAddress\n            personalData:\n              nationality: nationality\n              dateOfBirth: dateOfBirth\n              documentData:\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n            fullPhoneNumber: fullPhoneNumber\n            name:\n              firstName: firstName\n              lastName: lastName\n              gender: MALE\n              infix: infix\n            shareholderReference: shareholderReference\n            email: email\n            shareholderCode: shareholderCode\n          doingBusinessAs: doingBusinessAs\n          registrationNumber: registrationNumber\n          taxId: taxId\n          legalBusinessName: legalBusinessName\n          stockTicker: stockTicker\n        bankAggregatorDataReference: bankAggregatorDataReference\n        email: email\n      properties:\n        address:\n          $ref: '#/components/schemas/ViasAddress'\n        bankAccountDetails:\n          description: |-\n            Each of the bank accounts associated with the account holder.\n            \u003e Each array entry should represent one bank account.\n            \u003e For comprehensive detail regarding the required `BankAccountDetail` fields, please refer to the [KYC Verification documentation](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks).\n          items:\n            $ref: '#/components/schemas/BankAccountDetail'\n          type: array\n        bankAggregatorDataReference:\n          description: The opaque reference value returned by the Adyen API during\n            bank account login.\n          type: string\n        businessDetails:\n          $ref: '#/components/schemas/BusinessDetails'\n        email:\n          description: The email address of the account holder.\n          type: string\n        fullPhoneNumber:\n          description: |-\n            The phone number of the account holder provided as a single string. It will be handled as a landline phone.\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        individualDetails:\n          $ref: '#/components/schemas/IndividualDetails'\n        merchantCategoryCode:\n          description: |-\n            The Merchant Category Code of the account holder.\n            \u003e If not specified in the request, this will be derived from the platform account (which is configured by Adyen).\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: |-\n            A set of key and value pairs for general use by the account holder or merchant.\n            The keys do not have specific names and may be used for storing miscellaneous data as desired.\n            \u003e The values being stored have a maximum length of eighty (80) characters and will be truncated if necessary.\n            \u003e Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.\n          type: object\n        payoutMethods:\n          description: |-\n            Each of the card tokens associated with the account holder.\n            \u003e Each array entry should represent one card token.\n            \u003e For comprehensive detail regarding the required `CardToken` fields, please refer to the [KYC Verification documentation](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks).\n          items:\n            $ref: '#/components/schemas/PayoutMethod'\n          type: array\n        webAddress:\n          description: The URL of the website of the account holder.\n          type: string\n      required:\n      - email\n      - fullPhoneNumber\n      - webAddress\n    AccountHolderStatus:\n      example:\n        processingState:\n          disableReason: disableReason\n          processedTo:\n            currency: currency\n            value: 0\n          processedFrom:\n            currency: currency\n            value: 0\n          tierNumber: 1\n          disabled: true\n        statusReason: statusReason\n        payoutState:\n          disableReason: disableReason\n          notAllowedReason: notAllowedReason\n          allowPayout: true\n          tierNumber: 6\n          disabled: true\n          payoutLimit:\n            currency: currency\n            value: 0\n        events:\n        - reason: reason\n          executionDate: 2000-01-23T04:56:07.000+00:00\n          event: InactivateAccount\n        - reason: reason\n          executionDate: 2000-01-23T04:56:07.000+00:00\n          event: InactivateAccount\n        status: Active\n      properties:\n        events:\n          description: A list of events scheduled for the account holder.\n          items:\n            $ref: '#/components/schemas/AccountEvent'\n          type: array\n        payoutState:\n          $ref: '#/components/schemas/AccountPayoutState'\n        processingState:\n          $ref: '#/components/schemas/AccountProcessingState'\n        status:\n          description: |-\n            The status of the account holder.\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n        statusReason:\n          description: The reason why the status was assigned to the account holder.\n          type: string\n      required:\n      - status\n    AccountPayoutState:\n      example:\n        disableReason: disableReason\n        notAllowedReason: notAllowedReason\n        allowPayout: true\n        tierNumber: 6\n        disabled: true\n        payoutLimit:\n          currency: currency\n          value: 0\n      properties:\n        allowPayout:\n          description: Indicates whether payouts are allowed. This field is the overarching\n            payout status, and is the aggregate of multiple conditions (e.g., KYC\n            status, disabled flag, etc). If this field is false, no payouts will be\n            permitted for any of the account holder's accounts. If this field is true,\n            payouts will be permitted for any of the account holder's accounts.\n          type: boolean\n        disableReason:\n          description: The reason why payouts (to all of the account holder's accounts)\n            have been disabled (by the platform). If the `disabled` field is true,\n            this field can be used to explain why.\n          type: string\n        disabled:\n          description: Indicates whether payouts have been disabled (by the platform)\n            for all of the account holder's accounts. A platform may enable and disable\n            this field at their discretion. If this field is true, `allowPayout` will\n            be false and no payouts will be permitted for any of the account holder's\n            accounts. If this field is false, `allowPayout` may or may not be enabled,\n            depending on other factors.\n          type: boolean\n        notAllowedReason:\n          description: The reason why payouts (to all of the account holder's accounts)\n            have been disabled (by Adyen). If payouts have been disabled by Adyen,\n            this field will explain why. If this field is blank, payouts have not\n            been disabled by Adyen.\n          type: string\n        payoutLimit:\n          $ref: '#/components/schemas/Amount'\n        tierNumber:\n          description: The payout tier that the account holder occupies.\n          format: int32\n          type: integer\n    AccountProcessingState:\n      example:\n        disableReason: disableReason\n        processedTo:\n          currency: currency\n          value: 0\n        processedFrom:\n          currency: currency\n          value: 0\n        tierNumber: 1\n        disabled: true\n      properties:\n        disableReason:\n          description: The reason why processing has been disabled.\n          type: string\n        disabled:\n          description: Indicates whether the processing of payments is allowed.\n          type: boolean\n        processedFrom:\n          $ref: '#/components/schemas/Amount'\n        processedTo:\n          $ref: '#/components/schemas/Amount'\n        tierNumber:\n          description: The processing tier that the account holder occupies.\n          format: int32\n          type: integer\n    Amount:\n      example:\n        currency: currency\n        value: 0\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n      - currency\n      - value\n    BankAccountDetail:\n      example:\n        ownerNationality: ownerNationality\n        ownerPostalCode: ownerPostalCode\n        ownerCountryCode: ownerCountryCode\n        bankName: bankName\n        bankAccountReference: bankAccountReference\n        ownerState: ownerState\n        bankAccountUUID: bankAccountUUID\n        ownerName: ownerName\n        bankBicSwift: bankBicSwift\n        countryCode: countryCode\n        ownerDateOfBirth: ownerDateOfBirth\n        ownerStreet: ownerStreet\n        bankAccountName: bankAccountName\n        ownerHouseNumberOrName: ownerHouseNumberOrName\n        bankCode: bankCode\n        accountType: accountType\n        accountNumber: accountNumber\n        primaryAccount: true\n        bankCity: bankCity\n        checkCode: checkCode\n        branchCode: branchCode\n        taxId: taxId\n        iban: iban\n        ownerCity: ownerCity\n        urlForVerification: urlForVerification\n        currencyCode: currencyCode\n      properties:\n        accountNumber:\n          description: |-\n            The bank account number (without separators).\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        accountType:\n          description: |-\n            The type of bank account.\n            Only applicable to bank accounts held in the USA.\n            The permitted values are: `checking`, `savings`.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankAccountName:\n          description: The name of the bank account.\n          type: string\n        bankAccountReference:\n          description: Merchant reference to the bank account.\n          type: string\n        bankAccountUUID:\n          description: |\n            The unique identifier (UUID) of the Bank Account.\n            \u003eIf, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.\n\n            \u003eIf, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.\n\n            \u003eIf, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.\n\n            \u003eIf, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated.\n          type: string\n        bankBicSwift:\n          description: |-\n            The bank identifier code.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCity:\n          description: |-\n            The city in which the bank branch is located.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCode:\n          description: |-\n            The bank code of the banking institution with which the bank account is registered.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankName:\n          description: |-\n            The name of the banking institution with which the bank account is held.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        branchCode:\n          description: |-\n            The branch code of the branch under which the bank account is registered. The value to be specified in this parameter depends on the country of the bank account:\n            * United States - Routing number\n            * United Kingdom - Sort code\n            * Germany - Bankleitzahl\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        checkCode:\n          description: |-\n            The check code of the bank account.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        countryCode:\n          description: |-\n            The two-letter country code in which the bank account is registered.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        currencyCode:\n          description: |-\n            The currency in which the bank account deals.\n            \u003eThe permitted currency codes are defined in ISO-4217 (e.g. 'EUR').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        iban:\n          description: |-\n            The international bank account number.\n            \u003eThe IBAN standard is defined in ISO-13616.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCity:\n          description: |-\n            The city of residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCountryCode:\n          description: |-\n            The country code of the country of residence of the bank account owner.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerDateOfBirth:\n          description: |\n            The date of birth of the bank account owner.\n          type: string\n        ownerHouseNumberOrName:\n          description: |-\n            The house name or number of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerName:\n          description: |-\n            The name of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerNationality:\n          description: |-\n            The country code of the country of nationality of the bank account owner.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerPostalCode:\n          description: |-\n            The postal code of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerState:\n          description: |-\n            The state of residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerStreet:\n          description: |-\n            The street name of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        primaryAccount:\n          description: If set to true, the bank account is a primary account.\n          type: boolean\n        taxId:\n          description: |-\n            The tax ID number.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        urlForVerification:\n          description: |-\n            The URL to be used for bank account verification.\n            This may be generated on bank account creation.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n    BusinessDetails:\n      example:\n        stockExchange: stockExchange\n        stockNumber: stockNumber\n        shareholders:\n        - address:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          phoneNumber:\n            phoneType: Fax\n            phoneNumber: phoneNumber\n            phoneCountryCode: phoneCountryCode\n          webAddress: webAddress\n          personalData:\n            nationality: nationality\n            dateOfBirth: dateOfBirth\n            documentData:\n            - issuerCountry: issuerCountry\n              issuerState: issuerState\n              number: number\n              type: DRIVINGLICENSE\n              expirationDate: expirationDate\n            - issuerCountry: issuerCountry\n              issuerState: issuerState\n              number: number\n              type: DRIVINGLICENSE\n              expirationDate: expirationDate\n          fullPhoneNumber: fullPhoneNumber\n          name:\n            firstName: firstName\n            lastName: lastName\n            gender: MALE\n            infix: infix\n          shareholderReference: shareholderReference\n          email: email\n          shareholderCode: shareholderCode\n        - address:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          phoneNumber:\n            phoneType: Fax\n            phoneNumber: phoneNumber\n            phoneCountryCode: phoneCountryCode\n          webAddress: webAddress\n          personalData:\n            nationality: nationality\n            dateOfBirth: dateOfBirth\n            documentData:\n            - issuerCountry: issuerCountry\n              issuerState: issuerState\n              number: number\n              type: DRIVINGLICENSE\n              expirationDate: expirationDate\n            - issuerCountry: issuerCountry\n              issuerState: issuerState\n              number: number\n              type: DRIVINGLICENSE\n              expirationDate: expirationDate\n          fullPhoneNumber: fullPhoneNumber\n          name:\n            firstName: firstName\n            lastName: lastName\n            gender: MALE\n            infix: infix\n          shareholderReference: shareholderReference\n          email: email\n          shareholderCode: shareholderCode\n        doingBusinessAs: doingBusinessAs\n        registrationNumber: registrationNumber\n        taxId: taxId\n        legalBusinessName: legalBusinessName\n        stockTicker: stockTicker\n      properties:\n        doingBusinessAs:\n          description: The registered name of the company (if it differs from the\n            legal name of the company).\n          type: string\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        registrationNumber:\n          description: The registration number of the company.\n          type: string\n        shareholders:\n          description: |-\n            Each of the shareholders associated with the company.\n            Each array entry should represent one shareholder.\n          items:\n            $ref: '#/components/schemas/ShareholderContact'\n          type: array\n        stockExchange:\n          description: Market Identifier Code (MIC).\n          type: string\n        stockNumber:\n          description: International Securities Identification Number (ISIN).\n          type: string\n        stockTicker:\n          description: Stock Ticker symbol.\n          type: string\n        taxId:\n          description: The tax ID of the company.\n          type: string\n    CloseAccountHolderRequest:\n      example:\n        accountHolderCode: accountHolderCode\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder to be closed.\n          type: string\n      required:\n      - accountHolderCode\n    CloseAccountHolderResponse:\n      example:\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        accountHolderStatus:\n          processingState:\n            disableReason: disableReason\n            processedTo:\n              currency: currency\n              value: 0\n            processedFrom:\n              currency: currency\n              value: 0\n            tierNumber: 1\n            disabled: true\n          statusReason: statusReason\n          payoutState:\n            disableReason: disableReason\n            notAllowedReason: notAllowedReason\n            allowPayout: true\n            tierNumber: 6\n            disabled: true\n            payoutLimit:\n              currency: currency\n              value: 0\n          events:\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          status: Active\n        resultCode: resultCode\n        pspReference: pspReference\n      properties:\n        accountHolderStatus:\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderStatus\n    CloseAccountRequest:\n      example:\n        accountCode: accountCode\n      properties:\n        accountCode:\n          description: The code of account to be closed.\n          type: string\n      required:\n      - accountCode\n    CloseAccountResponse:\n      example:\n        accountCode: accountCode\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        resultCode: resultCode\n        pspReference: pspReference\n        status: Active\n      properties:\n        accountCode:\n          description: The account code of the account that is closed.\n          type: string\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The new status of the account.\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n      required:\n      - status\n    CreateAccountHolderRequest:\n      example:\n        createDefaultAccount: true\n        accountHolderCode: accountHolderCode\n        accountHolderDetails:\n          metadata:\n            key: metadata\n          payoutMethods:\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          address:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          bankAccountDetails:\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          individualDetails:\n            personalData:\n              nationality: nationality\n              dateOfBirth: dateOfBirth\n              documentData:\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n            name:\n              firstName: firstName\n              lastName: lastName\n              gender: MALE\n              infix: infix\n          webAddress: webAddress\n          merchantCategoryCode: merchantCategoryCode\n          fullPhoneNumber: fullPhoneNumber\n          businessDetails:\n            stockExchange: stockExchange\n            stockNumber: stockNumber\n            shareholders:\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            doingBusinessAs: doingBusinessAs\n            registrationNumber: registrationNumber\n            taxId: taxId\n            legalBusinessName: legalBusinessName\n            stockTicker: stockTicker\n          bankAggregatorDataReference: bankAggregatorDataReference\n          email: email\n        description: description\n        verificationProfile: verificationProfile\n        processingTier: 0\n        primaryCurrency: primaryCurrency\n        legalEntity: Business\n      properties:\n        accountHolderCode:\n          description: |-\n            The desired code of the prospective account holder.\n            \u003e Must be between three (3) and fifty (50) characters long. Only letters, digits, and hyphens (-) are permitted.\n          type: string\n        accountHolderDetails:\n          $ref: '#/components/schemas/AccountHolderDetails'\n        createDefaultAccount:\n          description: |-\n            If set to true, an account with the default options is created for this account holder.\n            **Default Value:** true\n          type: boolean\n        description:\n          description: A description of the prospective account holder, maximum 256\n            characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white\n            spaces, and underscores `_`.\n          type: string\n        legalEntity:\n          description: |-\n            The entity type.\n            Permitted values: `Business`, `Individual`\n\n            If an account holder is 'Business', then `accountHolderDetails.businessDetails` must be provided, as well as at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.\n\n            If an account holder is 'Individual', then `accountHolderDetails.individualDetails` must be provided.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        primaryCurrency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        processingTier:\n          description: The starting [processing tier](https://docs.adyen.com/platforms/onboarding-and-verification/precheck-kyc-information)\n            for the prospective account holder.\n          format: int32\n          type: integer\n        verificationProfile:\n          description: The identifier of the profile that applies to this entity.\n          type: string\n      required:\n      - accountHolderCode\n      - accountHolderDetails\n      - legalEntity\n    CreateAccountHolderResponse:\n      example:\n        accountCode: accountCode\n        accountHolderCode: accountHolderCode\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        accountHolderDetails:\n          metadata:\n            key: metadata\n          payoutMethods:\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          address:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          bankAccountDetails:\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          individualDetails:\n            personalData:\n              nationality: nationality\n              dateOfBirth: dateOfBirth\n              documentData:\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n            name:\n              firstName: firstName\n              lastName: lastName\n              gender: MALE\n              infix: infix\n          webAddress: webAddress\n          merchantCategoryCode: merchantCategoryCode\n          fullPhoneNumber: fullPhoneNumber\n          businessDetails:\n            stockExchange: stockExchange\n            stockNumber: stockNumber\n            shareholders:\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            doingBusinessAs: doingBusinessAs\n            registrationNumber: registrationNumber\n            taxId: taxId\n            legalBusinessName: legalBusinessName\n            stockTicker: stockTicker\n          bankAggregatorDataReference: bankAggregatorDataReference\n          email: email\n        accountHolderStatus:\n          processingState:\n            disableReason: disableReason\n            processedTo:\n              currency: currency\n              value: 0\n            processedFrom:\n              currency: currency\n              value: 0\n            tierNumber: 1\n            disabled: true\n          statusReason: statusReason\n          payoutState:\n            disableReason: disableReason\n            notAllowedReason: notAllowedReason\n            allowPayout: true\n            tierNumber: 6\n            disabled: true\n            payoutLimit:\n              currency: currency\n              value: 0\n          events:\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          status: Active\n        resultCode: resultCode\n        description: description\n        verificationProfile: verificationProfile\n        primaryCurrency: primaryCurrency\n        pspReference: pspReference\n        verification:\n          accountHolder:\n            checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n          payoutMethods:\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            payoutMethodCode: payoutMethodCode\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            payoutMethodCode: payoutMethodCode\n          shareholders:\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            shareholderCode: shareholderCode\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            shareholderCode: shareholderCode\n        legalEntity: Business\n      properties:\n        accountCode:\n          description: The code of a new account created for the account holder.\n          type: string\n        accountHolderCode:\n          description: The code of the new account holder.\n          type: string\n        accountHolderDetails:\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          $ref: '#/components/schemas/AccountHolderStatus'\n        description:\n          description: The description of the new account holder.\n          type: string\n        invalidFields:\n          description: A list of fields that caused the `/createAccountHolder` request\n            to fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          description: The type of legal entity of the new account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        primaryCurrency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        verification:\n          $ref: '#/components/schemas/KYCVerificationResult'\n        verificationProfile:\n          description: The identifier of the profile that applies to this entity.\n          type: string\n      required:\n      - accountHolderCode\n      - accountHolderDetails\n      - accountHolderStatus\n      - legalEntity\n      - verification\n    CreateAccountRequest:\n      example:\n        accountHolderCode: accountHolderCode\n        metadata:\n          key: metadata\n        bankAccountUUID: bankAccountUUID\n        payoutMethodCode: payoutMethodCode\n        description: description\n        payoutScheduleReason: payoutScheduleReason\n        payoutSchedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n        payoutSpeed: STANDARD\n      properties:\n        accountHolderCode:\n          description: The code of Account Holder under which to create the account.\n          type: string\n        bankAccountUUID:\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          description: A description of the account, maximum 256 characters. You can\n            use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores\n            `_`.\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: |-\n            A set of key and value pairs for general use by the merchant.\n            The keys do not have specific names and may be used for storing miscellaneous data as desired.\n            \u003e Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.\n          type: object\n        payoutMethodCode:\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          description: |-\n            The payout schedule of the prospective account.\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.\n          enum:\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n          - DAILY\n          - DAILY_6PM\n          - DAILY_AU\n          - DAILY_EU\n          - DAILY_US\n          - DEFAULT\n          - EVERY_6_HOURS_FROM_MIDNIGHT\n          - HOLD\n          - MONTHLY\n          - WEEKLY\n          - WEEKLY_ON_TUE_FRI_MIDNIGHT\n          - YEARLY\n          type: string\n        payoutScheduleReason:\n          description: |-\n            The reason for the payout schedule choice.\n            \u003eRequired if the payoutSchedule is `HOLD`.\n          type: string\n        payoutSpeed:\n          default: STANDARD\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - SAME_DAY\n          - STANDARD\n          type: string\n      required:\n      - accountHolderCode\n    CreateAccountResponse:\n      example:\n        accountCode: accountCode\n        accountHolderCode: accountHolderCode\n        metadata:\n          key: metadata\n        bankAccountUUID: bankAccountUUID\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        payoutMethodCode: payoutMethodCode\n        resultCode: resultCode\n        description: description\n        pspReference: pspReference\n        payoutSchedule:\n          schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          nextScheduledPayout: 2000-01-23T04:56:07.000+00:00\n        payoutSpeed: SAME_DAY\n        status: Active\n      properties:\n        accountCode:\n          description: The code of the new account.\n          type: string\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        bankAccountUUID:\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          description: The description of the account.\n          type: string\n        invalidFields:\n          description: A list of fields that caused the `/createAccount` request to\n            fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        metadata:\n          additionalProperties:\n            type: string\n          type: object\n        payoutMethodCode:\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - SAME_DAY\n          - STANDARD\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The status of the account.\n            \u003ePermitted values: `Active`.\n          enum:\n          - Active\n          - Closed\n          - Inactive\n          - Suspended\n          type: string\n      required:\n      - accountCode\n      - accountHolderCode\n      - status\n    DeleteBankAccountRequest:\n      example:\n        accountHolderCode: accountHolderCode\n        bankAccountUUIDs:\n        - bankAccountUUIDs\n        - bankAccountUUIDs\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder from which to delete the Bank\n            Account(s).\n          type: string\n        bankAccountUUIDs:\n          description: The code(s) of the Bank Accounts to be deleted.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - bankAccountUUIDs\n    DeletePayoutMethodRequest:\n      example:\n        accountHolderCode: accountHolderCode\n        payoutMethodCodes:\n        - payoutMethodCodes\n        - payoutMethodCodes\n      properties:\n        accountHolderCode:\n          description: The code of the account holder, from which to delete the payout\n            methods.\n          type: string\n        payoutMethodCodes:\n          description: The codes of the payout methods to be deleted.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - payoutMethodCodes\n    DeleteShareholderRequest:\n      example:\n        accountHolderCode: accountHolderCode\n        shareholderCodes:\n        - shareholderCodes\n        - shareholderCodes\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder from which to delete the Shareholders.\n          type: string\n        shareholderCodes:\n          description: The code(s) of the Shareholders to be deleted.\n          items:\n            type: string\n          type: array\n      required:\n      - accountHolderCode\n      - shareholderCodes\n    DocumentDetail:\n      example:\n        accountHolderCode: accountHolderCode\n        bankAccountUUID: bankAccountUUID\n        filename: filename\n        documentType: BANK_STATEMENT\n        description: description\n        shareholderCode: shareholderCode\n      properties:\n        accountHolderCode:\n          description: The code of account holder, to which the document applies.\n          type: string\n        bankAccountUUID:\n          description: |-\n            The unique ID of the Bank Account to which the document applies.\n            \u003eRequired if the documentType is `BANK_STATEMENT` (i.e., a document is being submitted in order to verify a bank account).\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on when a document should be submitted in order to verify a bank account.\n          type: string\n        description:\n          description: Description of the document.\n          type: string\n        documentType:\n          description: |-\n            The type of a document. Permitted values:\n            * `BANK_STATEMENT` denotes an image containing a bank statement or other document proving ownership of a specific bank account.\n            * `PASSPORT` denotes an image containing the identity page(s) of a passport.\n            * `ID_CARD_FRONT` denotes an image containing only the front of the ID card. In order for a document to be usable, both the `ID_CARD_FRONT` and `ID_CARD_BACK` must be submitted.\n            * `ID_CARD_BACK` denotes an image containing only the back of the ID card. In order for a document to be usable, both the `ID_CARD_FRONT` and `ID_CARD_BACK` must be submitted.\n            * `DRIVING_LICENCE_FRONT` denotes an image containing only the front of the driving licence. In order for a document to be usable, both the `DRIVING_LICENCE_FRONT` and `DRIVING_LICENCE_BACK` must be submitted.\n            * `DRIVING_LICENCE_BACK` denotes an image containing only the back of the driving licence. In order for a document to be usable, both the `DRIVING_LICENCE_FRONT` and `DRIVING_LICENCE_FRONT` must be submitted.\n\n            \u003ePlease refer to [Verification checks](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks) for details on when each document type should be submitted.\n          enum:\n          - BANK_STATEMENT\n          - BSN\n          - COMPANY_REGISTRATION_SCREENING\n          - DRIVING_LICENCE\n          - DRIVING_LICENCE_BACK\n          - DRIVING_LICENCE_FRONT\n          - ID_CARD\n          - ID_CARD_BACK\n          - ID_CARD_FRONT\n          - PASSPORT\n          - SSN\n          - SUPPORTING_DOCUMENTS\n          type: string\n        filename:\n          description: Filename of the document.\n          type: string\n        shareholderCode:\n          description: |-\n            The code of the shareholder, to which the document applies.\n            \u003eRequired if the account holder referred to by the `accountHolderCode` has a `legalEntity` of type `Business` and the `documentType` is either `PASSPORT`, `ID_CARD_FRONT`, `ID_CARD_BACK`, `DRIVING_LICENCE_FRONT`, `DRIVING_LICENCE_BACK` (i.e. a document is being submitted in order to verify a shareholder).\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on when a document should be submitted in order to verify a shareholder.\n          type: string\n      required:\n      - accountHolderCode\n      - documentType\n      - filename\n    ErrorFieldType:\n      example:\n        errorDescription: errorDescription\n        errorCode: 0\n        fieldType:\n          fieldName: accountCode\n          field: field\n          shareholderCode: shareholderCode\n      properties:\n        errorCode:\n          description: The validation error code.\n          format: int32\n          type: integer\n        errorDescription:\n          description: A description of the validation error.\n          type: string\n        fieldType:\n          $ref: '#/components/schemas/FieldType'\n    FieldType:\n      example:\n        fieldName: accountCode\n        field: field\n        shareholderCode: shareholderCode\n      properties:\n        field:\n          description: The full name of the property.\n          type: string\n        fieldName:\n          description: The type of the field.\n          enum:\n          - accountCode\n          - accountHolderCode\n          - accountHolderDetails\n          - accountNumber\n          - accountStateType\n          - accountStatus\n          - accountType\n          - address\n          - bankAccount\n          - bankAccountCode\n          - bankAccountName\n          - bankAccountUUID\n          - bankBicSwift\n          - bankCity\n          - bankCode\n          - bankName\n          - bankStatement\n          - branchCode\n          - businessContact\n          - cardToken\n          - checkCode\n          - city\n          - companyRegistration\n          - country\n          - countryCode\n          - currency\n          - currencyCode\n          - dateOfBirth\n          - description\n          - destinationAccountCode\n          - document\n          - documentExpirationDate\n          - documentIssuerCountry\n          - documentIssuerState\n          - documentName\n          - documentNumber\n          - documentType\n          - doingBusinessAs\n          - drivingLicence\n          - drivingLicenceBack\n          - drivingLicense\n          - email\n          - firstName\n          - formType\n          - fullPhoneNumber\n          - gender\n          - hopWebserviceUser\n          - houseNumberOrName\n          - iban\n          - idCard\n          - idCardBack\n          - idCardFront\n          - idNumber\n          - identityDocument\n          - individualDetails\n          - lastName\n          - legalBusinessName\n          - legalEntity\n          - legalEntityType\n          - merchantAccount\n          - merchantCategoryCode\n          - merchantReference\n          - microDeposit\n          - name\n          - nationality\n          - originalReference\n          - ownerCity\n          - ownerCountryCode\n          - ownerHouseNumberOrName\n          - ownerName\n          - ownerPostalCode\n          - ownerState\n          - ownerStreet\n          - passport\n          - passportNumber\n          - payoutMethodCode\n          - personalData\n          - phoneCountryCode\n          - phoneNumber\n          - postalCode\n          - primaryCurrency\n          - reason\n          - registrationNumber\n          - returnUrl\n          - schedule\n          - shareholder\n          - shareholderCode\n          - socialSecurityNumber\n          - sourceAccountCode\n          - stateOrProvince\n          - status\n          - stockExchange\n          - stockNumber\n          - stockTicker\n          - store\n          - storeDetail\n          - storeName\n          - storeReference\n          - street\n          - taxId\n          - tier\n          - tierNumber\n          - transferCode\n          - unknown\n          - value\n          - virtualAccount\n          - visaNumber\n          - webAddress\n          - year\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that the field belongs to. If empty,\n            the field belongs to an account holder.\n          type: string\n    GenericResponse:\n      example:\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        resultCode: resultCode\n        pspReference: pspReference\n      properties:\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    GetAccountHolderRequest:\n      example:\n        accountCode: accountCode\n        accountHolderCode: accountHolderCode\n        showDetails: true\n      properties:\n        accountCode:\n          description: |-\n            The code of the account of which to retrieve the details.\n            \u003e Required if no `accountHolderCode` is provided.\n          type: string\n        accountHolderCode:\n          description: |-\n            The code of the account holder of which to retrieve the details.\n            \u003e Required if no `accountCode` is provided.\n          type: string\n        showDetails:\n          description: True if the request should return the account holder details\n          type: boolean\n    GetAccountHolderResponse:\n      example:\n        accountHolderCode: accountHolderCode\n        accountHolderStatus:\n          processingState:\n            disableReason: disableReason\n            processedTo:\n              currency: currency\n              value: 0\n            processedFrom:\n              currency: currency\n              value: 0\n            tierNumber: 1\n            disabled: true\n          statusReason: statusReason\n          payoutState:\n            disableReason: disableReason\n            notAllowedReason: notAllowedReason\n            allowPayout: true\n            tierNumber: 6\n            disabled: true\n            payoutLimit:\n              currency: currency\n              value: 0\n          events:\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          status: Active\n        resultCode: resultCode\n        description: description\n        verificationProfile: verificationProfile\n        primaryCurrency: primaryCurrency\n        legalEntity: Business\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        systemUpToDateTime: 2000-01-23T04:56:07.000+00:00\n        accountHolderDetails:\n          metadata:\n            key: metadata\n          payoutMethods:\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          address:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          bankAccountDetails:\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          individualDetails:\n            personalData:\n              nationality: nationality\n              dateOfBirth: dateOfBirth\n              documentData:\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n            name:\n              firstName: firstName\n              lastName: lastName\n              gender: MALE\n              infix: infix\n          webAddress: webAddress\n          merchantCategoryCode: merchantCategoryCode\n          fullPhoneNumber: fullPhoneNumber\n          businessDetails:\n            stockExchange: stockExchange\n            stockNumber: stockNumber\n            shareholders:\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            doingBusinessAs: doingBusinessAs\n            registrationNumber: registrationNumber\n            taxId: taxId\n            legalBusinessName: legalBusinessName\n            stockTicker: stockTicker\n          bankAggregatorDataReference: bankAggregatorDataReference\n          email: email\n        accounts:\n        - accountCode: accountCode\n          metadata:\n            key: metadata\n          bankAccountUUID: bankAccountUUID\n          beneficiaryAccount: beneficiaryAccount\n          payoutMethodCode: payoutMethodCode\n          description: description\n          beneficiaryMerchantReference: beneficiaryMerchantReference\n          payoutSchedule:\n            schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n            nextScheduledPayout: 2000-01-23T04:56:07.000+00:00\n          payoutSpeed: SAME_DAY\n          status: status\n        - accountCode: accountCode\n          metadata:\n            key: metadata\n          bankAccountUUID: bankAccountUUID\n          beneficiaryAccount: beneficiaryAccount\n          payoutMethodCode: payoutMethodCode\n          description: description\n          beneficiaryMerchantReference: beneficiaryMerchantReference\n          payoutSchedule:\n            schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n            nextScheduledPayout: 2000-01-23T04:56:07.000+00:00\n          payoutSpeed: SAME_DAY\n          status: status\n        pspReference: pspReference\n        verification:\n          accountHolder:\n            checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n          payoutMethods:\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            payoutMethodCode: payoutMethodCode\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            payoutMethodCode: payoutMethodCode\n          shareholders:\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            shareholderCode: shareholderCode\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            shareholderCode: shareholderCode\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        accountHolderDetails:\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          $ref: '#/components/schemas/AccountHolderStatus'\n        accounts:\n          description: A list of the accounts under the account holder.\n          items:\n            $ref: '#/components/schemas/Account'\n          type: array\n        description:\n          description: The description of the account holder.\n          type: string\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          description: The legal entity of the account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        primaryCurrency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        systemUpToDateTime:\n          description: The time that shows how up to date is the information in the\n            response.\n          format: date-time\n          type: string\n        verification:\n          $ref: '#/components/schemas/KYCVerificationResult'\n        verificationProfile:\n          description: The identifier of the profile that applies to this entity.\n          type: string\n      required:\n      - accountHolderCode\n      - accountHolderDetails\n      - accountHolderStatus\n      - legalEntity\n      - verification\n    GetAccountHolderStatusResponse:\n      example:\n        accountHolderCode: accountHolderCode\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        accountHolderStatus:\n          processingState:\n            disableReason: disableReason\n            processedTo:\n              currency: currency\n              value: 0\n            processedFrom:\n              currency: currency\n              value: 0\n            tierNumber: 1\n            disabled: true\n          statusReason: statusReason\n          payoutState:\n            disableReason: disableReason\n            notAllowedReason: notAllowedReason\n            allowPayout: true\n            tierNumber: 6\n            disabled: true\n            payoutLimit:\n              currency: currency\n              value: 0\n          events:\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          status: Active\n        resultCode: resultCode\n        pspReference: pspReference\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder.\n          type: string\n        accountHolderStatus:\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderCode\n      - accountHolderStatus\n    GetUploadedDocumentsRequest:\n      example:\n        accountHolderCode: accountHolderCode\n        bankAccountUUID: bankAccountUUID\n        shareholderCode: shareholderCode\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder for which to retrieve the documents.\n          type: string\n        bankAccountUUID:\n          description: The code of the Bank Account for which to retrieve the documents.\n          type: string\n        shareholderCode:\n          description: The code of the Shareholder for which to retrieve the documents.\n          type: string\n      required:\n      - accountHolderCode\n    GetUploadedDocumentsResponse:\n      example:\n        documentDetails:\n        - accountHolderCode: accountHolderCode\n          bankAccountUUID: bankAccountUUID\n          filename: filename\n          documentType: BANK_STATEMENT\n          description: description\n          shareholderCode: shareholderCode\n        - accountHolderCode: accountHolderCode\n          bankAccountUUID: bankAccountUUID\n          filename: filename\n          documentType: BANK_STATEMENT\n          description: description\n          shareholderCode: shareholderCode\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        resultCode: resultCode\n        pspReference: pspReference\n      properties:\n        documentDetails:\n          description: A list of the documents and their details.\n          items:\n            $ref: '#/components/schemas/DocumentDetail'\n          type: array\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    IndividualDetails:\n      example:\n        personalData:\n          nationality: nationality\n          dateOfBirth: dateOfBirth\n          documentData:\n          - issuerCountry: issuerCountry\n            issuerState: issuerState\n            number: number\n            type: DRIVINGLICENSE\n            expirationDate: expirationDate\n          - issuerCountry: issuerCountry\n            issuerState: issuerState\n            number: number\n            type: DRIVINGLICENSE\n            expirationDate: expirationDate\n        name:\n          firstName: firstName\n          lastName: lastName\n          gender: MALE\n          infix: infix\n      properties:\n        name:\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          $ref: '#/components/schemas/ViasPersonalData'\n    KYCCheckResult:\n      example:\n        checks:\n        - summary:\n            kycCheckCode: 0\n            kycCheckDescription: kycCheckDescription\n          requiredFields:\n          - requiredFields\n          - requiredFields\n          type: BANK_ACCOUNT_VERIFICATION\n          status: AWAITING_DATA\n        - summary:\n            kycCheckCode: 0\n            kycCheckDescription: kycCheckDescription\n          requiredFields:\n          - requiredFields\n          - requiredFields\n          type: BANK_ACCOUNT_VERIFICATION\n          status: AWAITING_DATA\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n    KYCCheckStatusData:\n      example:\n        summary:\n          kycCheckCode: 0\n          kycCheckDescription: kycCheckDescription\n        requiredFields:\n        - requiredFields\n        - requiredFields\n        type: BANK_ACCOUNT_VERIFICATION\n        status: AWAITING_DATA\n      properties:\n        requiredFields:\n          description: A list of the fields required for execution of the check.\n          items:\n            type: string\n          type: array\n        status:\n          description: |-\n            The status of the check.\n            \u003ePermitted Values: `DATA_PROVIDED`, `PASSED`, `PENDING`, `AWAITING_DATA`, `RETRY_LIMIT_REACHED`, `INVALID_DATA`, `FAILED`.\n          enum:\n          - AWAITING_DATA\n          - DATA_PROVIDED\n          - FAILED\n          - INVALID_DATA\n          - PASSED\n          - PENDING\n          - PENDING_REVIEW\n          - RETRY_LIMIT_REACHED\n          - UNCHECKED\n          type: string\n        summary:\n          $ref: '#/components/schemas/KYCCheckSummary'\n        type:\n          description: |-\n            The type of check.\n            \u003ePermitted Values: `COMPANY_VERIFICATION`, `IDENTITY_VERIFICATION`, `PASSPORT_VERIFICATION`, `BANK_ACCOUNT_VERIFICATION`, `NONPROFIT_VERIFICATION`, `CARD_VERIFICATION`.\n          enum:\n          - BANK_ACCOUNT_VERIFICATION\n          - CARD_VERIFICATION\n          - COMPANY_VERIFICATION\n          - IDENTITY_VERIFICATION\n          - NONPROFIT_VERIFICATION\n          - PASSPORT_VERIFICATION\n          - PAYOUT_METHOD_VERIFICATION\n          type: string\n      required:\n      - status\n      - type\n    KYCCheckSummary:\n      example:\n        kycCheckCode: 0\n        kycCheckDescription: kycCheckDescription\n      properties:\n        kycCheckCode:\n          description: The code of the check.\n          format: int32\n          type: integer\n        kycCheckDescription:\n          description: A description of the check.\n          type: string\n    KYCPayoutMethodCheckResult:\n      example:\n        checks:\n        - summary:\n            kycCheckCode: 0\n            kycCheckDescription: kycCheckDescription\n          requiredFields:\n          - requiredFields\n          - requiredFields\n          type: BANK_ACCOUNT_VERIFICATION\n          status: AWAITING_DATA\n        - summary:\n            kycCheckCode: 0\n            kycCheckDescription: kycCheckDescription\n          requiredFields:\n          - requiredFields\n          - requiredFields\n          type: BANK_ACCOUNT_VERIFICATION\n          status: AWAITING_DATA\n        payoutMethodCode: payoutMethodCode\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        payoutMethodCode:\n          description: The unique ID of the payoput method to which the check applies.\n          type: string\n    KYCShareholderCheckResult:\n      example:\n        checks:\n        - summary:\n            kycCheckCode: 0\n            kycCheckDescription: kycCheckDescription\n          requiredFields:\n          - requiredFields\n          - requiredFields\n          type: BANK_ACCOUNT_VERIFICATION\n          status: AWAITING_DATA\n        - summary:\n            kycCheckCode: 0\n            kycCheckDescription: kycCheckDescription\n          requiredFields:\n          - requiredFields\n          - requiredFields\n          type: BANK_ACCOUNT_VERIFICATION\n          status: AWAITING_DATA\n        shareholderCode: shareholderCode\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: '#/components/schemas/KYCCheckStatusData'\n          type: array\n        shareholderCode:\n          description: The code of the shareholder to which the check applies.\n          type: string\n    KYCVerificationResult:\n      example:\n        accountHolder:\n          checks:\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n        payoutMethods:\n        - checks:\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          payoutMethodCode: payoutMethodCode\n        - checks:\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          payoutMethodCode: payoutMethodCode\n        shareholders:\n        - checks:\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          shareholderCode: shareholderCode\n        - checks:\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          - summary:\n              kycCheckCode: 0\n              kycCheckDescription: kycCheckDescription\n            requiredFields:\n            - requiredFields\n            - requiredFields\n            type: BANK_ACCOUNT_VERIFICATION\n            status: AWAITING_DATA\n          shareholderCode: shareholderCode\n      properties:\n        accountHolder:\n          $ref: '#/components/schemas/KYCCheckResult'\n        payoutMethods:\n          description: The result(s) of the checks on the payout method(s).\n          items:\n            $ref: '#/components/schemas/KYCPayoutMethodCheckResult'\n          type: array\n        shareholders:\n          description: The result(s) of the checks on the shareholder(s).\n          items:\n            $ref: '#/components/schemas/KYCShareholderCheckResult'\n          type: array\n    PayoutMethod:\n      example:\n        merchantAccount: merchantAccount\n        payoutMethodType: CardToken\n        payoutMethodCode: payoutMethodCode\n        recurringDetailReference: recurringDetailReference\n        shopperReference: shopperReference\n      properties:\n        merchantAccount:\n          type: string\n        payoutMethodCode:\n          type: string\n        payoutMethodType:\n          enum:\n          - CardToken\n          type: string\n        recurringDetailReference:\n          type: string\n        shopperReference:\n          type: string\n      required:\n      - merchantAccount\n      - recurringDetailReference\n      - shopperReference\n    PayoutScheduleResponse:\n      example:\n        schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n        nextScheduledPayout: 2000-01-23T04:56:07.000+00:00\n      properties:\n        nextScheduledPayout:\n          description: The date of the next scheduled payout.\n          format: date-time\n          type: string\n        schedule:\n          description: |-\n            The payout schedule of the account.\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.\n          enum:\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n          - DAILY\n          - DAILY_6PM\n          - DAILY_AU\n          - DAILY_EU\n          - DAILY_US\n          - DEFAULT\n          - EVERY_6_HOURS_FROM_MIDNIGHT\n          - HOLD\n          - MONTHLY\n          - WEEKLY\n          - WEEKLY_ON_TUE_FRI_MIDNIGHT\n          - YEARLY\n          type: string\n      required:\n      - nextScheduledPayout\n      - schedule\n    PerformVerificationRequest:\n      example:\n        accountStateType: LimitedPayout\n        accountHolderCode: accountHolderCode\n        tier: 0\n      properties:\n        accountHolderCode:\n          description: The code of the account holder to verify.\n          type: string\n        accountStateType:\n          description: |-\n            The state required for the account holder.\n            \u003e Permitted values: `Processing`, `Payout`.\n          enum:\n          - LimitedPayout\n          - LimitedProcessing\n          - LimitlessPayout\n          - LimitlessProcessing\n          - Payout\n          - Processing\n          type: string\n        tier:\n          description: The tier required for the account holder.\n          format: int32\n          type: integer\n      required:\n      - accountHolderCode\n      - accountStateType\n      - tier\n    PersonalDocumentData:\n      example:\n        issuerCountry: issuerCountry\n        issuerState: issuerState\n        number: number\n        type: DRIVINGLICENSE\n        expirationDate: expirationDate\n      properties:\n        expirationDate:\n          description: |-\n            The expiration date of the document.\n            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).\n          type: string\n        issuerCountry:\n          description: |-\n            The two-character country code of the issuer.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          maxLength: 2\n          minLength: 2\n          type: string\n        issuerState:\n          description: The state issued the document (if applicable)\n          type: string\n        number:\n          description: The number of the document. Delete the given type if the value\n            empty.\n          type: string\n        type:\n          description: |-\n            The type of the document. More then one item pert type does not allowed.\n            Valid values: ID, PASSPORT, VISA, DRIVINGLICENSE\n          enum:\n          - DRIVINGLICENSE\n          - ID\n          - PASSPORT\n          - SOCIALSECURITY\n          - VISA\n          type: string\n      required:\n      - type\n    ShareholderContact:\n      example:\n        address:\n          country: country\n          stateOrProvince: stateOrProvince\n          city: city\n          houseNumberOrName: houseNumberOrName\n          street: street\n          postalCode: postalCode\n        phoneNumber:\n          phoneType: Fax\n          phoneNumber: phoneNumber\n          phoneCountryCode: phoneCountryCode\n        webAddress: webAddress\n        personalData:\n          nationality: nationality\n          dateOfBirth: dateOfBirth\n          documentData:\n          - issuerCountry: issuerCountry\n            issuerState: issuerState\n            number: number\n            type: DRIVINGLICENSE\n            expirationDate: expirationDate\n          - issuerCountry: issuerCountry\n            issuerState: issuerState\n            number: number\n            type: DRIVINGLICENSE\n            expirationDate: expirationDate\n        fullPhoneNumber: fullPhoneNumber\n        name:\n          firstName: firstName\n          lastName: lastName\n          gender: MALE\n          infix: infix\n        shareholderReference: shareholderReference\n        email: email\n        shareholderCode: shareholderCode\n      properties:\n        address:\n          $ref: '#/components/schemas/ViasAddress'\n        email:\n          description: The e-mail address of the contact.\n          type: string\n        fullPhoneNumber:\n          description: |-\n            The phone number of the contact provided as a single string.  It will be handled as a landline phone.\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        name:\n          $ref: '#/components/schemas/ViasName'\n        personalData:\n          $ref: '#/components/schemas/ViasPersonalData'\n        phoneNumber:\n          $ref: '#/components/schemas/ViasPhoneNumber'\n        shareholderCode:\n          description: |\n            The unique identifier (UUID) of the Shareholder.\n            \u003e**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Shareholder will be created with a procedurally-generated UUID.**\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the creation of the Shareholder will fail while the creation of the Account Holder will continue.**\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated with an existing Shareholder is provided, the update of the Shareholder will fail.**\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated with an existing Shareholder is provided, the existing Shareholder will be updated.**\n          type: string\n        shareholderReference:\n          description: Merchant reference to the Shareholder.\n          type: string\n        webAddress:\n          description: The URL of the website of the contact.\n          type: string\n    SuspendAccountHolderRequest:\n      example:\n        accountHolderCode: accountHolderCode\n      properties:\n        accountHolderCode:\n          description: The code of the account holder to be suspended.\n          type: string\n      required:\n      - accountHolderCode\n    SuspendAccountHolderResponse:\n      example:\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        accountHolderStatus:\n          processingState:\n            disableReason: disableReason\n            processedTo:\n              currency: currency\n              value: 0\n            processedFrom:\n              currency: currency\n              value: 0\n            tierNumber: 1\n            disabled: true\n          statusReason: statusReason\n          payoutState:\n            disableReason: disableReason\n            notAllowedReason: notAllowedReason\n            allowPayout: true\n            tierNumber: 6\n            disabled: true\n            payoutLimit:\n              currency: currency\n              value: 0\n          events:\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          status: Active\n        resultCode: resultCode\n        pspReference: pspReference\n      properties:\n        accountHolderStatus:\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderStatus\n    UnSuspendAccountHolderRequest:\n      example:\n        accountHolderCode: accountHolderCode\n      properties:\n        accountHolderCode:\n          description: The code of the account holder to be reinstated.\n          type: string\n      required:\n      - accountHolderCode\n    UnSuspendAccountHolderResponse:\n      example:\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        accountHolderStatus:\n          processingState:\n            disableReason: disableReason\n            processedTo:\n              currency: currency\n              value: 0\n            processedFrom:\n              currency: currency\n              value: 0\n            tierNumber: 1\n            disabled: true\n          statusReason: statusReason\n          payoutState:\n            disableReason: disableReason\n            notAllowedReason: notAllowedReason\n            allowPayout: true\n            tierNumber: 6\n            disabled: true\n            payoutLimit:\n              currency: currency\n              value: 0\n          events:\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          status: Active\n        resultCode: resultCode\n        pspReference: pspReference\n      properties:\n        accountHolderStatus:\n          $ref: '#/components/schemas/AccountHolderStatus'\n        invalidFields:\n          description: Contains field validation errors that would prevent requests\n            from being processed.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountHolderStatus\n    UpdateAccountHolderRequest:\n      example:\n        accountHolderCode: accountHolderCode\n        accountHolderDetails:\n          metadata:\n            key: metadata\n          payoutMethods:\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          address:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          bankAccountDetails:\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          individualDetails:\n            personalData:\n              nationality: nationality\n              dateOfBirth: dateOfBirth\n              documentData:\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n            name:\n              firstName: firstName\n              lastName: lastName\n              gender: MALE\n              infix: infix\n          webAddress: webAddress\n          merchantCategoryCode: merchantCategoryCode\n          fullPhoneNumber: fullPhoneNumber\n          businessDetails:\n            stockExchange: stockExchange\n            stockNumber: stockNumber\n            shareholders:\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            doingBusinessAs: doingBusinessAs\n            registrationNumber: registrationNumber\n            taxId: taxId\n            legalBusinessName: legalBusinessName\n            stockTicker: stockTicker\n          bankAggregatorDataReference: bankAggregatorDataReference\n          email: email\n        description: description\n        verificationProfile: verificationProfile\n        processingTier: 0\n        primaryCurrency: primaryCurrency\n        legalEntity: Business\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder to be updated.\n          type: string\n        accountHolderDetails:\n          $ref: '#/components/schemas/AccountHolderDetails'\n        description:\n          description: A description of the account holder, maximum 256 characters.\n            You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and\n            underscores `_`.\n          type: string\n        legalEntity:\n          description: |-\n            The entity type.\n            Permitted values: `Business`, `Individual`\n\n            If an account holder is 'Business', then `accountHolderDetails.businessDetails` must be provided, as well as at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.\n\n            If an account holder is 'Individual', then `accountHolderDetails.individualDetails` must be provided.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        primaryCurrency:\n          description: The primary three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            to which the account holder should be updated.\n          type: string\n        processingTier:\n          description: |-\n            The processing tier to which the Account Holder should be updated.\n            \u003eThe processing tier can not be lowered through this request.\n\n            \u003eRequired if accountHolderDetails are not provided.\n          format: int32\n          type: integer\n        verificationProfile:\n          description: The identifier of the profile that applies to this entity.\n          type: string\n      required:\n      - accountHolderCode\n    UpdateAccountHolderResponse:\n      example:\n        accountHolderCode: accountHolderCode\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        accountHolderDetails:\n          metadata:\n            key: metadata\n          payoutMethods:\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          - merchantAccount: merchantAccount\n            payoutMethodType: CardToken\n            payoutMethodCode: payoutMethodCode\n            recurringDetailReference: recurringDetailReference\n            shopperReference: shopperReference\n          address:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          bankAccountDetails:\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          - ownerNationality: ownerNationality\n            ownerPostalCode: ownerPostalCode\n            ownerCountryCode: ownerCountryCode\n            bankName: bankName\n            bankAccountReference: bankAccountReference\n            ownerState: ownerState\n            bankAccountUUID: bankAccountUUID\n            ownerName: ownerName\n            bankBicSwift: bankBicSwift\n            countryCode: countryCode\n            ownerDateOfBirth: ownerDateOfBirth\n            ownerStreet: ownerStreet\n            bankAccountName: bankAccountName\n            ownerHouseNumberOrName: ownerHouseNumberOrName\n            bankCode: bankCode\n            accountType: accountType\n            accountNumber: accountNumber\n            primaryAccount: true\n            bankCity: bankCity\n            checkCode: checkCode\n            branchCode: branchCode\n            taxId: taxId\n            iban: iban\n            ownerCity: ownerCity\n            urlForVerification: urlForVerification\n            currencyCode: currencyCode\n          individualDetails:\n            personalData:\n              nationality: nationality\n              dateOfBirth: dateOfBirth\n              documentData:\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n              - issuerCountry: issuerCountry\n                issuerState: issuerState\n                number: number\n                type: DRIVINGLICENSE\n                expirationDate: expirationDate\n            name:\n              firstName: firstName\n              lastName: lastName\n              gender: MALE\n              infix: infix\n          webAddress: webAddress\n          merchantCategoryCode: merchantCategoryCode\n          fullPhoneNumber: fullPhoneNumber\n          businessDetails:\n            stockExchange: stockExchange\n            stockNumber: stockNumber\n            shareholders:\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            - address:\n                country: country\n                stateOrProvince: stateOrProvince\n                city: city\n                houseNumberOrName: houseNumberOrName\n                street: street\n                postalCode: postalCode\n              phoneNumber:\n                phoneType: Fax\n                phoneNumber: phoneNumber\n                phoneCountryCode: phoneCountryCode\n              webAddress: webAddress\n              personalData:\n                nationality: nationality\n                dateOfBirth: dateOfBirth\n                documentData:\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n                - issuerCountry: issuerCountry\n                  issuerState: issuerState\n                  number: number\n                  type: DRIVINGLICENSE\n                  expirationDate: expirationDate\n              fullPhoneNumber: fullPhoneNumber\n              name:\n                firstName: firstName\n                lastName: lastName\n                gender: MALE\n                infix: infix\n              shareholderReference: shareholderReference\n              email: email\n              shareholderCode: shareholderCode\n            doingBusinessAs: doingBusinessAs\n            registrationNumber: registrationNumber\n            taxId: taxId\n            legalBusinessName: legalBusinessName\n            stockTicker: stockTicker\n          bankAggregatorDataReference: bankAggregatorDataReference\n          email: email\n        accountHolderStatus:\n          processingState:\n            disableReason: disableReason\n            processedTo:\n              currency: currency\n              value: 0\n            processedFrom:\n              currency: currency\n              value: 0\n            tierNumber: 1\n            disabled: true\n          statusReason: statusReason\n          payoutState:\n            disableReason: disableReason\n            notAllowedReason: notAllowedReason\n            allowPayout: true\n            tierNumber: 6\n            disabled: true\n            payoutLimit:\n              currency: currency\n              value: 0\n          events:\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          - reason: reason\n            executionDate: 2000-01-23T04:56:07.000+00:00\n            event: InactivateAccount\n          status: Active\n        resultCode: resultCode\n        description: description\n        verificationProfile: verificationProfile\n        primaryCurrency: primaryCurrency\n        pspReference: pspReference\n        verification:\n          accountHolder:\n            checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n          payoutMethods:\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            payoutMethodCode: payoutMethodCode\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            payoutMethodCode: payoutMethodCode\n          shareholders:\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            shareholderCode: shareholderCode\n          - checks:\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            - summary:\n                kycCheckCode: 0\n                kycCheckDescription: kycCheckDescription\n              requiredFields:\n              - requiredFields\n              - requiredFields\n              type: BANK_ACCOUNT_VERIFICATION\n              status: AWAITING_DATA\n            shareholderCode: shareholderCode\n        legalEntity: Business\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        accountHolderDetails:\n          $ref: '#/components/schemas/AccountHolderDetails'\n        accountHolderStatus:\n          $ref: '#/components/schemas/AccountHolderStatus'\n        description:\n          description: The description of the account holder.\n          type: string\n        invalidFields:\n          description: in case the account holder has not been updated, contains account\n            holder fields, that did not pass the validation.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        legalEntity:\n          description: The legal entity of the account holder.\n          enum:\n          - Business\n          - Individual\n          - NonProfit\n          - Partnership\n          - PublicCompany\n          type: string\n        primaryCurrency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),\n            with which the prospective account holder primarily deals.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        verification:\n          $ref: '#/components/schemas/KYCVerificationResult'\n        verificationProfile:\n          description: The identifier of the profile that applies to this entity.\n          type: string\n      required:\n      - accountHolderStatus\n      - legalEntity\n      - verification\n    UpdateAccountHolderStateRequest:\n      example:\n        reason: reason\n        accountHolderCode: accountHolderCode\n        disable: true\n        stateType: LimitedPayout\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder on which to update the state.\n          type: string\n        disable:\n          description: If true, disable the requested state.  If false, enable the\n            requested state.\n          type: boolean\n        reason:\n          description: |-\n            The reason that the state is being updated.\n            \u003eRequired if the state is being disabled.\n          type: string\n        stateType:\n          description: |-\n            The state to be updated.\n            \u003ePermitted values are: `Processing`, `Payout`\n          enum:\n          - LimitedPayout\n          - LimitedProcessing\n          - LimitlessPayout\n          - LimitlessProcessing\n          - Payout\n          - Processing\n          type: string\n      required:\n      - accountHolderCode\n      - disable\n      - stateType\n    UpdateAccountRequest:\n      example:\n        accountCode: accountCode\n        metadata:\n          key: metadata\n        bankAccountUUID: bankAccountUUID\n        payoutMethodCode: payoutMethodCode\n        description: description\n        payoutSchedule:\n          reason: reason\n          schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          action: CLOSE\n        payoutSpeed: SAME_DAY\n      properties:\n        accountCode:\n          description: The code of the account to update.\n          type: string\n        bankAccountUUID:\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          description: A description of the account, maximum 256 characters.You can\n            use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores\n            `_`.\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: |-\n            A set of key and value pairs for general use by the merchant.\n            The keys do not have specific names and may be used for storing miscellaneous data as desired.\n            \u003e Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.\n          type: object\n        payoutMethodCode:\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          $ref: '#/components/schemas/UpdatePayoutScheduleRequest'\n        payoutSpeed:\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - SAME_DAY\n          - STANDARD\n          type: string\n      required:\n      - accountCode\n    UpdateAccountResponse:\n      example:\n        accountCode: accountCode\n        metadata:\n          key: metadata\n        bankAccountUUID: bankAccountUUID\n        invalidFields:\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        - errorDescription: errorDescription\n          errorCode: 0\n          fieldType:\n            fieldName: accountCode\n            field: field\n            shareholderCode: shareholderCode\n        payoutMethodCode: payoutMethodCode\n        resultCode: resultCode\n        description: description\n        pspReference: pspReference\n        payoutSchedule:\n          schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          nextScheduledPayout: 2000-01-23T04:56:07.000+00:00\n        payoutSpeed: SAME_DAY\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        bankAccountUUID:\n          description: The bankAccountUUID of the bank account held by the account\n            holder to couple the account with. Scheduled payouts in currencies matching\n            the currency of this bank account will be sent to this bank account. Payouts\n            in different currencies will be sent to a matching bank account of the\n            account holder.\n          type: string\n        description:\n          description: The description of the account.\n          type: string\n        invalidFields:\n          description: A list of fields that caused the `/updateAccount` request to\n            fail.\n          items:\n            $ref: '#/components/schemas/ErrorFieldType'\n          type: array\n        metadata:\n          additionalProperties:\n            type: string\n          type: object\n        payoutMethodCode:\n          description: The payout method code held by the account holder to couple\n            the account with. Scheduled card payouts will be sent using this payout\n            method code.\n          type: string\n        payoutSchedule:\n          $ref: '#/components/schemas/PayoutScheduleResponse'\n        payoutSpeed:\n          description: 'Speed with which payouts for this account are processed. Permitted\n            values: `STANDARD`, `SAME_DAY`.'\n          enum:\n          - SAME_DAY\n          - STANDARD\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify\n            the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n      required:\n      - accountCode\n    UpdatePayoutScheduleRequest:\n      example:\n        reason: reason\n        schedule: BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n        action: CLOSE\n      properties:\n        action:\n          description: |-\n            Direction on how to handle any payouts that have already been scheduled.\n            Permitted values:\n            * `CLOSE` will close the existing batch of payouts.\n            * `UPDATE` will reschedule the existing batch to the new schedule.\n            * `NOTHING` (**default**) will allow the payout to proceed.\n          enum:\n          - CLOSE\n          - NOTHING\n          - UPDATE\n          type: string\n        reason:\n          description: |-\n            The reason for the payout schedule update.\n            \u003e This field is required when the `schedule` parameter is set to `HOLD`.\n          type: string\n        schedule:\n          description: |-\n            The payout schedule to which the account is to be updated.\n            Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.\n            `HOLD` will prevent scheduled payouts from happening but will still allow manual payouts to occur.\n          enum:\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n          - DAILY\n          - DAILY_6PM\n          - DAILY_AU\n          - DAILY_EU\n          - DAILY_US\n          - DEFAULT\n          - EVERY_6_HOURS_FROM_MIDNIGHT\n          - HOLD\n          - MONTHLY\n          - WEEKLY\n          - WEEKLY_ON_TUE_FRI_MIDNIGHT\n          - YEARLY\n          type: string\n      required:\n      - schedule\n    UploadDocumentRequest:\n      example:\n        documentContent: documentContent\n        documentDetail:\n          accountHolderCode: accountHolderCode\n          bankAccountUUID: bankAccountUUID\n          filename: filename\n          documentType: BANK_STATEMENT\n          description: description\n          shareholderCode: shareholderCode\n      properties:\n        documentContent:\n          description: |-\n            The content of the document as represented by a Base64-encoded string.\n\n            To learn about requirements, see [Bank account check](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks/bank-account-check#requirements) and [Photo ID check](https://docs.adyen.com/platforms/onboarding-and-verification/verification-checks/photo-id-check#requirements).\n          format: byte\n          type: string\n        documentDetail:\n          $ref: '#/components/schemas/DocumentDetail'\n      required:\n      - documentContent\n      - documentDetail\n    ViasAddress:\n      example:\n        country: country\n        stateOrProvince: stateOrProvince\n        city: city\n        houseNumberOrName: houseNumberOrName\n        street: street\n        postalCode: postalCode\n      properties:\n        city:\n          description: |-\n            The name of the city.\n            \u003eRequired if either `houseNumberOrName`, `street`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n        country:\n          description: |-\n            The two-character country code of the address. The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n            \u003e If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: |-\n            The postal code.\n            \u003eA maximum of five (5) digits for an address in the USA, or a maximum of ten (10) characters for an address in all other countries.\n            \u003eRequired if either `houseNumberOrName`, `street`, `city`, or `stateOrProvince` are provided.\n          type: string\n        stateOrProvince:\n          description: |-\n            The abbreviation of the state or province.\n            \u003eTwo (2) characters for an address in the USA or Canada, or a maximum of three (3) characters for an address in all other countries.\n            \u003eRequired for an address in the USA or Canada if either `houseNumberOrName`, `street`, `city`, or `postalCode` are provided.\n          type: string\n        street:\n          description: |-\n            The name of the street.\n            \u003eThe house number should not be included in this field; it should be separately provided via `houseNumberOrName`.\n            \u003eRequired if either `houseNumberOrName`, `city`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n      required:\n      - country\n    ViasName:\n      example:\n        firstName: firstName\n        lastName: lastName\n        gender: MALE\n        infix: infix\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        gender:\n          description: |-\n            The gender.\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.\n          enum:\n          - MALE\n          - FEMALE\n          - UNKNOWN\n          maxLength: 1\n          minLength: 1\n          type: string\n        infix:\n          description: |-\n            The name's infix, if applicable.\n            \u003eA maximum length of twenty (20) characters is imposed.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n      - firstName\n      - gender\n      - lastName\n    ViasPersonalData:\n      example:\n        nationality: nationality\n        dateOfBirth: dateOfBirth\n        documentData:\n        - issuerCountry: issuerCountry\n          issuerState: issuerState\n          number: number\n          type: DRIVINGLICENSE\n          expirationDate: expirationDate\n        - issuerCountry: issuerCountry\n          issuerState: issuerState\n          number: number\n          type: DRIVINGLICENSE\n          expirationDate: expirationDate\n      properties:\n        dateOfBirth:\n          description: |-\n            The date of birth of the person.\n            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).\n          type: string\n        documentData:\n          description: Key value pairs of document type and identify numbers\n          items:\n            $ref: '#/components/schemas/PersonalDocumentData'\n          type: array\n        nationality:\n          description: |-\n            The nationality of the person represented by a two-character country code.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          maxLength: 2\n          minLength: 2\n          type: string\n    ViasPhoneNumber:\n      example:\n        phoneType: Fax\n        phoneNumber: phoneNumber\n        phoneCountryCode: phoneCountryCode\n      properties:\n        phoneCountryCode:\n          description: |-\n            The two-character country code of the phone number.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          type: string\n        phoneNumber:\n          description: |-\n            The phone number.\n            \u003eThe inclusion of the phone number country code is not necessary.\n          type: string\n        phoneType:\n          description: |-\n            The type of the phone number.\n            \u003eThe following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.\n          enum:\n          - Fax\n          - Landline\n          - Mobile\n          - SIP\n          type: string\n      required:\n      - phoneCountryCode\n      - phoneNumber\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n- Account holders\n- Accounts\n- Verification\n",
			"canonicalURL": "/github.com/Adyen/adyen-go-api-library@c686d3f8b29d214d117df7ef1e55b22b122a38f7/-/blob/src/platformsaccount/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-go-api-library/blob/c686d3f8b29d214d117df7ef1e55b22b122a38f7/src/platformsaccount/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}