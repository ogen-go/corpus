{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/molgenis/molgenis"
		},
		"file": {
			"name": "metadata-api-v3.yaml",
			"size": 0,
			"path": "docs/data/metadata-api-v3.yaml",
			"byteSize": 23644,
			"content": "openapi: 3.0.1\ninfo:\n  title: Metadata API\n  description: RESTful API to create/read/update/delete metadata.\n  version: 3.0.0-SNAPSHOT\n  license:\n    name: \"GNU LGPLv3\"\n    url: \"https://www.gnu.org/licenses/lgpl-3.0.en.html\"\ntags:\n  - name: \"Batch\"\n    description: Combines multiple API calls in one HTTP request. (seperate API)\n  - name: \"Package\"\n    description: Create, read, update and delete packages. (seperate API)\n  - name: \"Tag\"\n    description: Create, read, update and delete tags. (seperate API)\n  - name: \"Metadata\"\n    description: Create, read, update and delete metadata.\nservers:\n  - url: http://localhost:8080/api\npaths:\n  /metadata:\n    get:\n      tags:\n        - \"Metadata\"\n      summary: Retrieves the metadata in the system. (paged, queryable)\n      parameters:\n        - $ref: '#/components/parameters/number'\n        - $ref: '#/components/parameters/size'\n        - $ref: '#/components/parameters/query'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          $ref: '#/components/responses/OkAttributeCollectionResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      tags:\n        - \"Metadata\"\n      summary: Creates a new entitytype.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EntityTypeCreate'\n      responses:\n        '201':\n          $ref: '#/components/responses/Created'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - \"Metadata\"\n      summary: Deletes metadata in the system based on a query.\n      parameters:\n        - $ref: '#/components/parameters/query'\n      responses:\n        '202':\n          $ref: '#/components/responses/Accepted'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /metadata/{entityTypeId}:\n    get:\n      tags:\n        - \"Metadata\"\n      summary: Retrieves the metadata of an entitytype.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n        - $ref: '#/components/parameters/flattenAttributes'\n        - $ref: '#/components/parameters/i18n'\n      responses:\n        '200':\n          $ref: '#/components/responses/OkEntityTypeResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      tags:\n        - \"Metadata\"\n      summary: replaces entitytype metadata.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EntityTypeCreate'\n      responses:\n        '202':\n          $ref: '#/components/responses/Accepted'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    patch:\n      tags:\n        - \"Metadata\"\n      summary: updates entitytype metadata.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EntityTypePatch'\n      responses:\n        '202':\n          $ref: '#/components/responses/Accepted'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - \"Metadata\"\n      summary: Delete an entitytype.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n      responses:\n        '202':\n          $ref: '#/components/responses/Accepted'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /metadata/{entityTypeId}/attributes:\n    get:\n      tags:\n        - \"Metadata\"\n      summary: Retrieves the attributes in the system for an entity type. (paged, queryable)\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n        - $ref: '#/components/parameters/number'\n        - $ref: '#/components/parameters/size'\n        - $ref: '#/components/parameters/query'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          $ref: '#/components/responses/OkAttributeCollectionResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - \"Metadata\"\n      summary: Deletes attributes in the system based on a query\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n        - $ref: '#/components/parameters/query'\n      responses:\n        '202':\n          $ref: '#/components/responses/Accepted'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      tags:\n        - \"Metadata\"\n      summary: Create an attribute.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeCreate'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /metadata/{entityTypeId}/attributes/{attributeId}:\n    get:\n      tags:\n        - \"Metadata\"\n      summary: Retrieves an attribute from the system.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '200':\n          $ref: '#/components/responses/OkAttributeCollectionResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    put:\n      tags:\n        - \"Metadata\"\n      summary: Replace an attribute.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n        - $ref: '#/components/parameters/attributeId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeCreate'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    patch:\n      tags:\n        - \"Metadata\"\n      summary: Update an attribute.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n        - $ref: '#/components/parameters/attributeId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeCreate'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - \"Metadata\"\n      summary: Delete an attribute.\n      parameters:\n        - $ref: '#/components/parameters/entityTypeId'\n        - $ref: '#/components/parameters/attributeId'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: x-molgenis-token\n  parameters:\n    entityTypeId:\n      name: entityTypeId\n      description: Entity type identifier\n      in: path\n      required: true\n      schema:\n        type: string\n      example: my_table\n    attributeId:\n      name: attributeId\n      description: Attribute identifier\n      in: path\n      required: true\n      schema:\n        type: string\n      example: my_column\n    number:\n      name: page\n      description: Page number\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n        default: 0\n    size:\n      name: size\n      description: Page size\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 10000\n        default: 100\n    sort:\n      name: sort\n      description: Sort order\n      in: query\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n      example: id,+label,-description\n    query:\n      name: q\n      description: Query. [RSQL expression](https://github.com/jirutka/rsql-parser) where operator is '==' (equal to), '!=' (not equal to), '=lt=' or '\u003c' (less than), '=le=' or '\u003c=' (less than or equal to), '=gt=' or '\u003e' (greater than), '=ge=' or '\u003e=' (greater than or equal to), '=like=' (contains) or '=q=' (matches).\n      in: query\n      required: false\n      schema:\n        type: string\n      example: label=q=node\n    flattenAttributes:\n      name: flattenAttributes\n      description: Include attributes of parent entity types\n      in: query\n      required: false\n      schema:\n        type: boolean\n    i18n:\n      name: i18n\n      description: Include translations e.g. label/description\n      in: query\n      required: false\n      schema:\n        type: boolean\n  schemas:\n    Links:\n      type: object\n      properties:\n        previous:\n          type: string\n          format: uri\n        self:\n          type: string\n          format: uri\n        next:\n          type: string\n          format: uri\n      required:\n        - self\n      example:\n        previous: https://my.molgenis.org/api/metadata?number=0\n        self: https://my.molgenis.org/api/metadata?number=1\n        next: https://my.molgenis.org/api/metadata?number=2\n    Page:\n      type: object\n      properties:\n        size:\n          type: number\n          minimum: 0\n        totalElements:\n          type: number\n          minimum: 0\n        totalPages:\n          type: number\n          minimum: 0\n        number:\n          type: number\n          minimum: 0\n      required:\n        - size\n        - totalElements\n        - totalPages\n        - number\n      example:\n        size: 20\n        totalElements: 100\n        totalPages: 5\n        number: 1\n    EntityType:\n      type: object\n      properties:\n        href:\n          $ref: \"#/components/schemas/Links\"\n        data:\n          $ref: \"#/components/schemas/EntityTypeData\"\n    EntityTypeData:\n      type: object\n      properties:\n        id:\n          type: string\n        package:\n          $ref: \"#/components/schemas/Package\"\n        extends:\n          $ref: \"#/components/schemas/EntityType\"\n        description:\n          type: string\n        description_i18n:\n          $ref: \"#/components/schemas/I18nValue\"\n        label:\n          type: string\n        label_i18n:\n          $ref: \"#/components/schemas/I18nValue\"\n        abstract:\n          type: boolean\n        indexingDepth:\n          type: integer\n        attributes:\n          type: object\n          $ref: \"#/components/schemas/Attributes\"\n      example:\n        id: 0\n        parent: https://my.molgenis.org/api/data/Node/1\n        children: https://my.molgenis.org/api/data/Node/0/children\n    Attributes:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Attribute\"\n        links:\n          $ref: \"#/components/schemas/Links\"\n    Attribute:\n      type: object\n      properties:\n        links:\n          $ref: \"#/components/schemas/Links\"\n        data:\n          $ref: \"#/components/schemas/AttributeData\"\n    AttributeData:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        sequenceNr:\n          type: integer\n          nullable: true\n        type:\n          type: string\n          enum: [bool, categorical, categorical_mref, compound, date, date_time, decimal, email, enum, file, html, hyperlink, int, long, mref, one_to_many, script, string, text, xref]\n        maxLength:\n          type: number\n          nullable: true\n        mappedBy:\n          $ref: \"#/components/schemas/Attribute\"\n          # or nullable\n        orderBy:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttributeSort\"\n          nullable: true\n        idAttribute:\n          type: boolean\n        labelAttribute:\n          type: boolean\n        lookupAttributeIndex:\n          type: integer\n          nullable: true\n        refEntityType:\n          $ref: \"#/components/schemas/Links\"\n          # or nullable\n        description:\n          type: string\n          nullable: true\n        description_i18n:\n          $ref: \"#/components/schemas/I18nValue\"\n          # or nullable\n        label:\n          type: string\n          nullable: true\n        label_i18n:\n          $ref: \"#/components/schemas/I18nValue\"\n          # or nullable\n        nullable:\n          type: boolean\n        auto:\n          type: boolean\n        visible:\n          type: boolean\n        unique:\n          type: boolean\n        readOnly:\n          type: boolean\n        aggregatable:\n          type: boolean\n        enumOptions:\n          type: array\n          items:\n            type: string\n          nullable: true\n        categoricalOptions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CategoricalOption\"\n          nullable: true\n        range:\n          $ref: \"#/components/schemas/Range\"\n          # or nullable\n        defaultValue:\n          type: string\n          nullable: true\n        cascadeDelete:\n          type: boolean\n          nullable: true\n        parentAttribute:\n          $ref: \"#/components/schemas/Attribute\"\n        expression:\n          type: string\n          nullable: true\n        nullableExpression:\n          type: string\n          nullable: true\n        visibleExpression:\n          type: string\n          nullable: true\n        validationExpression:\n          type: string\n          nullable: true\n    Package:\n      type: object\n      properties:\n        href:\n          $ref: \"#/components/schemas/Links\"\n    EntityTypeCreate:\n      type: object\n      required: [id, attributes]\n      properties:\n        id:\n          type: string\n        package:\n          type: string\n        label:\n          $ref: \"#/components/schemas/I18nValue\"\n        description:\n          $ref: \"#/components/schemas/I18nValue\"\n        abstract:\n          type: string\n        extends:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttributeCreate\"\n    EntityTypePatch:\n      type: object\n      properties:\n        package:\n          type: string\n        label:\n          $ref: \"#/components/schemas/I18nValue\"\n        description:\n          $ref: \"#/components/schemas/I18nValue\"\n        extends:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttributeCreate\"\n    AttributeCreate:\n      type: object\n      required: [name, type]\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n          enum: [bool, categorical, categorical_mref, compound, date, date_time, decimal, email, enum, file, html, hyperlink, int, long, mref, one_to_many, script, string, text, xref]\n        maxLength:\n          type: number\n          nullable: true\n        parent:\n          description: the id of the parent attribute\n          type: string\n        refEntityType:\n          type: string\n        cascadeDelete:\n          type: boolean\n        mappedByAttribute:\n          description: the id of the 'mapped by' attribute\n          type: string\n        orderBy:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AttributeSort\"\n        expression:\n          type: string\n        nullable:\n          type: boolean\n        auto:\n          type: boolean\n        visible:\n          type: boolean\n        label:\n          $ref: \"#/components/schemas/I18nValue\"\n        description:\n          $ref: \"#/components/schemas/I18nValue\"\n        aggregatable:\n          type: boolean\n        enumOptions:\n          type: array\n          items:\n            type: string\n        range:\n          $ref: \"#/components/schemas/Range\"\n        readonly:\n          type: boolean\n        unique:\n          type: boolean\n        nullableExpression:\n          type: string\n        visibleExpression:\n          type: string\n        validationExpression:\n          type: string\n        defaultValue:\n          type: string\n        sequenceNumber:\n          type: integer\n        idAttribute:\n          type: boolean\n        labelAttribute:\n          type: boolean\n        lookupAttributeIndex:\n          type: integer\n    EntityTypeCollection:\n      type: object\n      properties:\n        links:\n          $ref: \"#/components/schemas/Links\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/EntityType\"\n        page:\n          $ref: \"#/components/schemas/Page\"\n    AttributeCollection:\n      type: object\n      properties:\n        links:\n          $ref: \"#/components/schemas/Links\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Attribute\"\n        page:\n          $ref: \"#/components/schemas/Page\"\n    AttributeSort:\n      type: array\n      properties:\n        id:\n          type: string\n        order:\n          type: string\n          enum: [ASC,DESC]\n    Range:\n      type: object\n      properties:\n        min:\n          type: integer\n        max:\n          type: integer\n    I18nValue:\n      type: object\n      properties:\n        defaultValue:\n          type: string\n        translations:\n          type: object\n    CategoricalOption:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n    Problem:\n      type: object\n      properties:\n        type:\n          type: string\n          format: uri\n          description:\n            An absolute URI that identifies the problem type.  When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          default: 'about:blank'\n          example: 'https://zalando.github.io/problem/constraint-violation'\n        title:\n          type: string\n          description:\n            A short, summary of the problem type. Written in english and readable for engineers\n            (usually not suited for non technical stakeholders and not localized).\n          example: Service Unavailable\n        status:\n          type: integer\n          format: int32\n          description:\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          minimum: 100\n          maximum: 600\n          exclusiveMaximum: true\n          example: 503\n        detail:\n          type: string\n          description:\n            A human readable explanation specific to this occurrence of the\n            problem.\n          example: Connection to database timed out\n        instance:\n          type: string\n          format: uri\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.\n        errorCode:\n          type: string\n          description:\n            The MOLGENIS error code for the thrown exception.\n\n  responses:\n    OkEntityTypeResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityType'\n    OkEntityTypeCollectionResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EntityTypeCollection'\n    OkAttributeResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Attribute'\n    OkAttributeCollectionResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AttributeCollection'\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n    Conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n    Accepted:\n      description: Accepted\n      headers:\n        Location:\n          schema:\n            type: string\n          description: The URI of the created job\n    Created:\n      description: Created\n    NoContent:\n      description: No Content\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n    InternalServerError:\n      description: Internal server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Problem'\nsecurity:\n  - ApiKeyAuth: []\n",
			"canonicalURL": "/github.com/molgenis/molgenis@e358debd6d3d7a4e6d9619664f1fc3c4dbea87a7/-/blob/docs/data/metadata-api-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/molgenis/molgenis/blob/e358debd6d3d7a4e6d9619664f1fc3c4dbea87a7/docs/data/metadata-api-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}