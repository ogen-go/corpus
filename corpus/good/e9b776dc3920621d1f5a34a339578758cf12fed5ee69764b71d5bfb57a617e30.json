{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/younglifestyle/seg-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 8689,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: \"\"\n    version: 0.0.1\npaths:\n    /api/segment/get/{tag}:\n        get:\n            tags:\n                - LeafSegmentService\n            description: 号段模式\n            operationId: LeafSegmentService_GenSegmentId\n            parameters:\n                - name: tag\n                  in: path\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/IdReply'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /api/snowflake/get:\n        get:\n            tags:\n                - LeafSnowflakeService\n            description: 雪花ID\n            operationId: LeafSnowflakeService_GenSnowflakeId\n            parameters:\n                - name: tag\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/IdReply'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /decodeSnowflakeId:\n        get:\n            tags:\n                - LeafSnowflakeService\n            description: 解析雪花ID\n            operationId: LeafSnowflakeService_DecodeSnowflakeId\n            parameters:\n                - name: id\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DecodeSnowflakeIdResp'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /monitor/cache:\n        get:\n            tags:\n                - LeafSegmentService\n            description: monitor\n            operationId: LeafSegmentService_GenSegmentCache\n            parameters:\n                - name: tag\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/SegmentBufferCacheViews'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /monitor/db:\n        get:\n            tags:\n                - LeafSegmentService\n            operationId: LeafSegmentService_GenSegmentDb\n            parameters:\n                - name: tag\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/LeafAllocDbs'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\ncomponents:\n    schemas:\n        DecodeSnowflakeIdResp:\n            type: object\n            properties:\n                workerId:\n                    type: string\n                sequenceId:\n                    type: string\n                timestamp:\n                    type: string\n        GoogleProtobufAny:\n            type: object\n            properties:\n                '@type':\n                    type: string\n                    description: The type of the serialized message.\n            additionalProperties: true\n            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.\n        IdReply:\n            type: object\n            properties:\n                id:\n                    type: string\n            description: 申请到的ID\n        LeafAllocDb:\n            type: object\n            properties:\n                bizTag:\n                    type: string\n                maxId:\n                    type: integer\n                    format: int64\n                step:\n                    type: integer\n                    format: int32\n                description:\n                    type: string\n                updatedTime:\n                    type: integer\n                    format: int64\n                createdTime:\n                    type: integer\n                    format: int64\n        LeafAllocDbs:\n            type: object\n            properties:\n                leafAllocDbs:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/LeafAllocDb'\n        SegmentBufferCacheView:\n            type: object\n            properties:\n                key:\n                    type: string\n                value0:\n                    type: integer\n                    format: int64\n                step0:\n                    type: integer\n                    format: int32\n                max0:\n                    type: integer\n                    format: int64\n                value1:\n                    type: integer\n                    format: int64\n                step1:\n                    type: integer\n                    format: int32\n                max1:\n                    type: integer\n                    format: int64\n                pos:\n                    type: integer\n                    format: int32\n                nextReady:\n                    type: boolean\n                initOk:\n                    type: boolean\n            description: 字段模式在内存中的各项数据\n        SegmentBufferCacheViews:\n            type: object\n            properties:\n                segmentBufferCacheView:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/SegmentBufferCacheView'\n        Status:\n            type: object\n            properties:\n                code:\n                    type: integer\n                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n                    format: int32\n                message:\n                    type: string\n                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n                details:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GoogleProtobufAny'\n                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.\n            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'\ntags:\n    - name: LeafSegmentService\n      description: Leaf ID生成\n    - name: LeafSnowflakeService\n      description: Leaf ID生成\n",
			"canonicalURL": "/github.com/younglifestyle/seg-server@bb6c700c0b734d27919b05d4e292a29d096bc246/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/younglifestyle/seg-server/blob/bb6c700c0b734d27919b05d4e292a29d096bc246/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}