{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "smartapi.yaml",
			"size": 0,
			"path": "text_mining/smartapi.yaml",
			"byteSize": 44439,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: william.baumgartner@cuanschutz.edu\n    name: Bill Baumgartner\n    x-id: https://github.com/bill-baumgartner/\n    x-role: responsible developer\n  description: Documentation of the Text Mining Targeted Association query web services.\n  termsOfService: https://biothings.io/about\n  title: Text Mining Targeted Association API\n  version: '1.0'\n  x-translator:\n    infores: \"infores:text-mining-provider-targeted\"\n    component: KP\n    team:\n      - Text Mining Provider\n      - Service Provider\n    biolink-version: \"2.2.8\"\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/text_mining_targeted_association\n  x-maturity: production\n- description: Production server\n  url: http://biothings.ncats.io/text_mining_targeted_association\n  x-maturity: production\ntags:\n- name: gene\n- name: chemical\n- name: disease\n- name: phenotype\n- name: association\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\n- name: biothings_graph\npaths:\n  /association:\n    post:\n      parameters:\n      - $ref: '#/components/parameters/dotfield'\n        name: dotfield\n      - $ref: '#/components/parameters/fields'\n        name: fields\n      - $ref: '#/components/parameters/email'\n        name: email\n      - $ref: '#/components/parameters/format'\n        name: format\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                ids:\n                  description: 'multiple association IDs separated by comma. Note\n                    that currently we only take the input ids up to 1000 maximum,\n                    the rest will be omitted. Type: string (list). Max: 1000.'\n                  type: string\n              required:\n              - ids\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Association'\n                type: array\n          description: A list of matching association objects\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n          description: A response indicating an improperly formatted query\n      summary: For a list of association IDs, return the matching disease object\n      tags:\n      - association\n  # /association/{associationid}:\n  #   get:\n  #     parameters:\n  #     - description: Retrieve association objects based on Association ID  Supports\n  #         JSONP and CORS as well.\n  #       example: 275bfadd2b4c60c3\n  #       in: path\n  #       name: associationid\n  #       required: true\n  #       schema:\n  #         type: string\n  #     - $ref: '#/components/parameters/dotfield'\n  #       name: dotfield\n  #     - $ref: '#/components/parameters/callback'\n  #       name: callback\n  #     - $ref: '#/components/parameters/fields'\n  #       name: fields\n  #     - $ref: '#/components/parameters/email'\n  #       name: email\n  #     - $ref: '#/components/parameters/format'\n  #       name: format\n  #     responses:\n  #       '200':\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Association'\n  #         description: A matching association object\n  #       '404':\n  #         description: A response indicating an unknown association ID\n  #     summary: Retrieve association objects based on ID\n  #     tags:\n  #     - association\n  /metadata:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/callback'\n        in: query\n        name: callback\n      responses:\n        '200':\n          description: KP metadata object\n      summary: Get metadata about the data available from the API\n      tags:\n      - metadata\n  /metadata/fields:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/search'\n        name: search\n      - $ref: '#/components/parameters/callback'\n        name: callback\n      - $ref: '#/components/parameters/prefix'\n        name: prefix\n      - $ref: '#/components/parameters/format'\n        name: format\n      responses:\n        '200':\n          description: metadata fields object\n      summary: Get metadata about the data fields available\n      tags:\n      - metadata\n  /query:\n    get:\n      parameters:\n      - description: Query string.\n        example: object.id:CHEMBL.COMPOUND\\:CHEMBL26\n        in: query\n        name: q\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/dotfield'\n        name: dotfield\n      - $ref: '#/components/parameters/fields'\n        name: fields\n      - $ref: '#/components/parameters/facet_size'\n        name: facet_size\n      - $ref: '#/components/parameters/sort'\n        name: sort\n      - $ref: '#/components/parameters/callback'\n        name: callback\n      - $ref: '#/components/parameters/email'\n        name: email\n      - $ref: '#/components/parameters/facets'\n        name: facets\n      - $ref: '#/components/parameters/size'\n        name: size\n      - $ref: '#/components/parameters/from'\n        name: from\n      - $ref: '#/components/parameters/format'\n        name: format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResult'\n          description: A query response with the \"hits\" property\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n          description: A response indicating an improperly formatted query\n      summary: Make queries and return matching association hits. Supports JSONP and\n        CORS as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - $ref: '#/components/parameters/dotfield'\n        name: dotfield\n      - $ref: '#/components/parameters/email'\n        name: email\n      - $ref: '#/components/parameters/fields'\n        name: fields\n      - $ref: '#/components/parameters/size'\n        name: size\n      - $ref: '#/components/parameters/format'\n        name: format\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                q:\n                  description: multiple query terms separated by comma (also \"+\" or\n                    whitespace).  Does not support wildcard queries\n                  type: string\n                scopes:\n                  description: 'a comma-separated list of fields as the search \"scopes\"\n                    (fields to search through for query term). The available \"fields\"\n                    that can be passed to the \"scopes\" parameter are listed in the\n                    **/metadata/fields** endpoint.string Default: \"scopes=_id\".'\n                  type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryPOSTResult'\n          description: Query response objects with the \"hits\" property\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n          description: A response indicating an improperly formatted query\n      summary: Make batch disease queries and return matching disease hits\n      tags:\n      - query\n      x-bte-kgs-operations:\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-treats-mondo\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-treats-mondo-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-treats-hp\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-treats-hp-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-treats-mondo\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-treats-mondo-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-treats-hp\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-treats-hp-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-positively_regulates-uniprotkb\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-positively_regulates-uniprotkb-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-negatively_regulates-uniprotkb\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebi-negatively_regulates-uniprotkb-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-positively_regulates-uniprotkb\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-positively_regulates-uniprotkb-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-negatively_regulates-uniprotkb\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugbank-negatively_regulates-uniprotkb-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-positively_regulates-uniprotkb\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-positively_regulates-uniprotkb-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-negatively_regulates-uniprotkb\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-negatively_regulates-uniprotkb-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-contributes_to-mondo\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-contributes_to-mondo-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-contributes_to-hp\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/uniprotkb-contributes_to-hp-rev\"\ncomponents:\n  parameters:\n    callback:\n      description: 'you can pass a \"callback\" parameter to make a JSONP call. Type:\n        string.'\n      in: query\n      name: callback\n      schema:\n        type: string\n    dotfield:\n      description: 'control the format of the returned chem object. If \"true\" or \"1\",\n        all fields will be collapsed into a single level deep object (all nested objects\n        will be a single level deep, using dotfield notation to signify the nested\n        structure) Type: boolean. Default: false.'\n      in: query\n      name: dotfield\n      schema:\n        type: boolean\n    email:\n      description: If you are regular users of our services, we encourage you to provide\n        us with an email, so that we can better track the usage or follow up with\n        you.\n      in: query\n      name: email\n      schema:\n        type: string\n    facet_size:\n      description: 'the number of facet buckets to return in the response. Type: integer.\n        Default: 10. Max: 1000.'\n      in: query\n      name: facet_size\n      schema:\n        type: integer\n    facets:\n      description: 'a comma-separated list of fields to return facets on.  In addition\n        to query hits, the fields notated in \"facets\" will be aggregated by value\n        and bucklet counts will be displayed in the \"facets\" field of the response\n        object. Type: string (list). Default: None. Max: 1000.'\n      in: query\n      name: facets\n      schema:\n        type: string\n    fields:\n      description: 'a comma-separated list of fields (in dotfield notation) used to\n        limit the fields returned from the matching chem hit(s). The supported field\n        names can be found from any chem object or from the /metadata/fields endpoint.\n        If \"fields=all\", all available fields will be returned. Type: string (list).\n        Default: all. Max: 1000.'\n      in: query\n      name: fields\n      schema:\n        type: string\n    format:\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      name: format\n      schema:\n        type: string\n    from:\n      description: 'the number of matching chem hits to skip, starting from 0.  This\n        can be useful for paging in combination with the \"size\" parameter. Type: integer.\n        Default: None.'\n      in: query\n      name: from\n      schema:\n        type: integer\n    prefix:\n      description: 'Pass a prefix string to filter the available fields. Type: string.\n        Default: None.'\n      in: query\n      name: prefix\n      schema:\n        type: string\n    search:\n      description: 'Pass a search term to filter the available fields. Type: string.\n        Default: None.'\n      in: query\n      name: search\n      schema:\n        type: string\n    size:\n      description: 'the maximum number of matching chem hits to return per batch.\n        Type: integer. Default: 10.'\n      in: query\n      name: size\n      schema:\n        type: integer\n    sort:\n      description: 'the comma-separated list of fields to sort on. Prefix each with\n        \"-\" for descending order, otherwise in ascending order. Default: sort by descending\n        score.'\n      in: query\n      name: sort\n      schema:\n        type: string\n  schemas:\n    Association:\n      properties:\n        _id:\n          type: string\n      required:\n      - _id\n      type: object\n    ErrorResult:\n      properties:\n        message:\n          type: string\n        success:\n          type: boolean\n      type: object\n    QueryPOSTResult:\n      items:\n        allOf:\n        - $ref: '#/components/schemas/Association'\n        - properties:\n            _score:\n              format: float\n              type: number\n            query:\n              type: string\n          type: object\n      type: array\n    QueryResult:\n      properties:\n        hits:\n          items:\n            $ref: '#/components/schemas/Association'\n          type: array\n        max_score:\n          format: float\n          type: number\n        took:\n          type: integer\n        total:\n          type: integer\n      type: object\n    int64_or_array:\n      oneOf:\n      - items:\n          format: int64\n          type: integer\n        type: array\n      - format: int64\n        type: integer\n    string_or_array:\n      oneOf:\n      - items:\n          type: string\n        type: array\n      - type: string\n  x-bte-kgs-operations:\n  ## - examples aren't currently formatted to the standard. See https://github.com/biothings/BioThings_Explorer_TRAPI/issues/357#issue-1054150561\n  ## - for reverse operations, some edge attributes may seem odd (reversed subj/obj)\n  ## - don't use subject.type/object.type in q, that came from SRI ID resolver and differs a lot between IDs of same namespace\n  ## - use heuristics to specify input / output type. BTE will handle any discrepancies w/ SRI ID resolver...\n  ##   - CHEBI, DRUGBANK :SmallMolecule\n  ##   - MONDO: Disease\n  ##   - HP: PhenotypicFeaure\n  ##   - UniProtKB: Gene\n  ## - currently we can't express _exists_ with this kind of query: useful for setting the output\n  ## - currently, BTE handles prefix (CHEBI / MONDO / HP keep their prefixes, DRUGBANK / UniProtKB does not).  \n  ##   in the future, could edit parser + queries to handle prefixes\n  ## - joinSafe is only needed if the delimiter isn't a comma\n    chebi-treats-mondo:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:treats AND _exists_:object.MONDO\n    ## I find 30389 records (out of 30395) have object.type:Disease\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"subject.CHEBI\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.MONDO,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: MONDO\n            semantic: Disease\n        predicate: treats\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/mondo-object\"\n        ## Examples:\n        ## - CHEBI:10034 (warfarin sodium) -\u003e MONDO:0000831 (thrombotic disease)\n        ## - CHEBI:31346 (calcium sulfate) -\u003e MONDO:0005246 (osteomyelitis (disease))\n    chebi-treats-mondo-rev:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:treats AND _exists_:object.MONDO\n    ## Not going to specify subject.type since CHEBI IDs were mapped to NamedThing, ChemicalEntity mostly (a little SmallMolecule, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: MONDO\n            semantic: Disease\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"object.MONDO\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.CHEBI,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        predicate: treated_by\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/chebi-subject\"\n        ## Examples:\n        ## - MONDO:0000831 (thrombotic disease) -\u003e CHEBI:10034 (warfarin sodium) \n        ## - MONDO:0005246 (osteomyelitis (disease)) -\u003e CHEBI:31346 (calcium sulfate) \n    chebi-treats-hp:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:treats AND _exists_:object.HP\n    ## I find only 648 records (out of 2152) have object.type:PhenotypicFeature...most are Disease (1503)\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"subject.CHEBI\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.HP,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: HP\n            semantic: PhenotypicFeature\n        predicate: treats\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/hp-object\"\n        ## Examples:\n        ## - CHEBI:3309 (calcium gluconate) -\u003e HP:0002197 (Generalized-onset seizure)\n        ## - CHEBI:5147 (formoterol) -\u003e HP:0004326 (Cachexia)\n    chebi-treats-hp-rev:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:treats AND _exists_:object.HP\n    ## Not going to specify subject.type since CHEBI IDs were mapped to NamedThing, ChemicalEntity mostly (a little SmallMolecule, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: HP\n            semantic: PhenotypicFeature\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"object.MONDO\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.CHEBI,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        predicate: treated_by\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/chebi-subject\"\n        ## Examples:\n        ## - HP:0002197 (Generalized-onset seizure) -\u003e CHEBI:3309 (calcium gluconate) \n        ## - HP:0004326 (Cachexia) -\u003e CHEBI:5147 (formoterol) \n    drugbank-treats-mondo:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:treats AND _exists_:object.MONDO\n    ## I find all records (249143) use object.type:Disease\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"subject.DRUGBANK\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.MONDO,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: MONDO\n            semantic: Disease\n        predicate: treats\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/mondo-object\"\n        ## Examples:\n        ## - DRUGBANK:DB00537 (Ciprofloxacin) -\u003e MONDO:0024314 (parasitemia)\n        ## - DRUGBANK:DB00390 (Digoxin) -\u003e MONDO:0000468 (third-degree atrioventricular block)\n    drugbank-treats-mondo-rev:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:treats AND _exists_:object.MONDO\n    ## Not going to specify subject.type since DRUGBANK IDs were mapped to SmallMolecule, NamedThing mostly (a little ChemicalEntity, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: MONDO\n            semantic: Disease\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"object.MONDO\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.DRUGBANK,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        predicate: treated_by\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/drugbank-subject\"\n        ## Examples:\n        ## - MONDO:0024314 (parasitemia) -\u003e DRUGBANK:DB00537 (Ciprofloxacin) \n        ## - MONDO:0000468 (third-degree atrioventricular block) -\u003e DRUGBANK:DB00390 (Digoxin) \n    drugbank-treats-hp:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:treats AND _exists_:object.HP\n    ## I find only 5987 records (out of 18037) have object.type:PhenotypicFeature...most are Disease (12050)\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"subject.DRUGBANK\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.HP,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: HP\n            semantic: PhenotypicFeature\n        predicate: treats\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/hp-object\"\n        ## Examples:\n        ## - DRUGBANK:DB00202 (Succinylcholine) -\u003e HP:0002153 (Hyperkalemia)\n        ## - DRUGBANK:DB00829 (Diazepam) -\u003e HP:0020219 (Motor seizure)\n    drugbank-treats-hp-rev:\n    ## https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:treats AND _exists_:object.HP\n    ## Not going to specify subject.type since DRUGBANK IDs were mapped to SmallMolecule, NamedThing mostly (a little ChemicalEntity, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: HP\n            semantic: PhenotypicFeature\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"treats\"]') }} ],\n              \"scopes\": [\"object.MONDO\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.DRUGBANK,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        predicate: treated_by\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/drugbank-subject\"\n        ## Examples:\n        ## - HP:0002153 (Hyperkalemia) -\u003e DRUGBANK:DB00202 (Succinylcholine) \n        ## - HP:0020219 (Motor seizure) -\u003e DRUGBANK:DB00829 (Diazepam) \n    chebi-positively_regulates-uniprotkb:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:entity_positively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_positively_regulates_entity\"]') }} ],\n              \"scopes\": [\"subject.CHEBI\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_positively_regulates_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-object\"\n        ## Examples:\n        ## - CHEBI:60311 (thyroid hormone) -\u003e UniProtKB:P27361 (MAPK3) \n        ## - CHEBI:3215 (bupivacaine) -\u003e UniProtKB:Q9P2L0 (WDR35)\n    chebi-positively_regulates-uniprotkb-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:entity_positively_regulates_entity AND _exists_:object.UniProtKB\n    ## Not going to specify subject.type since CHEBI IDs were mapped to NamedThing, ChemicalEntity mostly (a little SmallMolecule, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_positively_regulates_entity\"]') }} ],\n              \"scopes\": [\"object.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.CHEBI,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        predicate: entity_positively_regulated_by_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/chebi-subject\"\n        ## Examples:\n        ## - UniProtKB:P27361 (MAPK3) -\u003e CHEBI:60311 (thyroid hormone) \n        ## - UniProtKB:Q9P2L0 (WDR35) -\u003e CHEBI:3215 (bupivacaine) \n    chebi-negatively_regulates-uniprotkb:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:entity_negatively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_negatively_regulates_entity\"]') }} ],\n              \"scopes\": [\"subject.CHEBI\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_negatively_regulates_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-object\"\n        ## Examples:\n        ## - CHEBI:2659 (aminophylline) -\u003e UniProtKB:P10415 (BCL2) \n        ## - CHEBI:47519 (ketoconazole) -\u003e UniProtKB:P08684 (CYP3A4)\n    chebi-negatively_regulates-uniprotkb-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.CHEBI AND association.edge_label:entity_negatively_regulates_entity AND _exists_:object.UniProtKB\n    ## Not going to specify subject.type since CHEBI IDs were mapped to NamedThing, ChemicalEntity mostly (a little SmallMolecule, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_negatively_regulates_entity\"]') }} ],\n              \"scopes\": [\"object.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.CHEBI,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: CHEBI\n            semantic: SmallMolecule\n        predicate: entity_negatively_regulated_by_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/chebi-subject\"\n        ## Examples:\n        ## - UniProtKB:P10415 (BCL2) -\u003e CHEBI:2659 (aminophylline) \n        ## - UniProtKB:P08684 (CYP3A4) -\u003e CHEBI:47519 (ketoconazole) \n    drugbank-positively_regulates-uniprotkb:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:entity_positively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_positively_regulates_entity\"]') }} ],\n              \"scopes\": [\"subject.DRUGBANK\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_positively_regulates_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-object\"\n        ## Examples:\n        ## - DRUGBANK:DB00515 (Cisplatin) -\u003e UniProtKB:O94788 (ALDH1A2) \n        ## - DRUGBANK:DB15907 (Escin) -\u003e UniProtKB:P05177 (CYP1A2)\n    drugbank-positively_regulates-uniprotkb-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:entity_positively_regulates_entity AND _exists_:object.UniProtKB\n    ## Not going to specify subject.type since DRUGBANK IDs were mapped to SmallMolecule, NamedThing mostly (a little ChemicalEntity, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_positively_regulates_entity\"]') }} ],\n              \"scopes\": [\"object.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.DRUGBANK,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        predicate: entity_positively_regulated_by_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/drugbank-subject\"\n        ## Examples:\n        ## - UniProtKB:O94788 (ALDH1A2) -\u003e DRUGBANK:DB00515 (Cisplatin) \n        ## - UniProtKB:P05177 (CYP1A2) -\u003e DRUGBANK:DB15907 (Escin) \n    drugbank-negatively_regulates-uniprotkb:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:entity_negatively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_negatively_regulates_entity\"]') }} ],\n              \"scopes\": [\"subject.DRUGBANK\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_negatively_regulates_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-object\"\n        ## Examples:\n        ## - DRUGBANK:DB00067 (Vasopressin) -\u003e UniProtKB:P01236 (PRL) \n        ## - DRUGBANK:DB00602 (Ivermectin) -\u003e UniProtKB:O14983 (ATP2A1)\n    drugbank-negatively_regulates-uniprotkb-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.DRUGBANK AND association.edge_label:entity_negatively_regulates_entity AND _exists_:object.UniProtKB\n    ## Not going to specify subject.type since DRUGBANK IDs were mapped to SmallMolecule, NamedThing mostly (a little ChemicalEntity, MolecularMixture) \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_negatively_regulates_entity\"]') }} ],\n              \"scopes\": [\"object.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.DRUGBANK,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: DRUGBANK\n            semantic: SmallMolecule\n        predicate: entity_negatively_regulated_by_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/drugbank-subject\"\n        ## Examples:\n        ## - UniProtKB:P01236 (PRL) -\u003e DRUGBANK:DB00067 (Vasopressin) \n        ## - UniProtKB:O14983 (ATP2A1) -\u003e DRUGBANK:DB00602 (Ivermectin) \n    uniprotkb-positively_regulates-uniprotkb:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:entity_positively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_positively_regulates_entity\"]') }} ],\n              \"scopes\": [\"subject.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_positively_regulates_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-object\"\n        ## Examples:\n        ## - UniProtKB:O00429 (DNM1L) -\u003e UniProtKB:P46939 (UTRN) \n        ## - UniProtKB:P36148 (GPT2) -\u003e UniProtKB:P30531 (SLC6A1)\n    uniprotkb-positively_regulates-uniprotkb-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:entity_positively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_positively_regulates_entity\"]') }} ],\n              \"scopes\": [\"object.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_positively_regulated_by_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-subject\"\n        ## Examples:\n        ## - UniProtKB:P46939 (UTRN) -\u003e UniProtKB:O00429 (DNM1L) \n        ## - UniProtKB:P30531 (SLC6A1) -\u003e UniProtKB:P36148 (GPT2) \n    uniprotkb-negatively_regulates-uniprotkb:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:entity_negatively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_negatively_regulates_entity\"]') }} ],\n              \"scopes\": [\"subject.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_negatively_regulates_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-object\"\n        ## Examples:\n        ## - UniProtKB:P12272 (PTHLH) -\u003e UniProtKB:Q9BPZ7 (MAPKAP1) \n        ## - UniProtKB:P43004 (SLC1A2) -\u003e UniProtKB:Q13148 (TARDBP) \n    uniprotkb-negatively_regulates-uniprotkb-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:entity_negatively_regulates_entity AND _exists_:object.UniProtKB\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"entity_negatively_regulates_entity\"]') }} ],\n              \"scopes\": [\"object.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: entity_negatively_regulated_by_entity\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-subject\"\n        ## Examples:\n        ## - UniProtKB:Q9BPZ7 (MAPKAP1) -\u003e UniProtKB:P12272 (PTHLH) \n        ## - UniProtKB:Q13148 (TARDBP) -\u003e UniProtKB:P43004 (SLC1A2) \n    uniprotkb-contributes_to-mondo:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:contributes_to AND _exists_:object.MONDO\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"contributes_to\"]') }} ],\n              \"scopes\": [\"subject.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.MONDO,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: MONDO\n            semantic: Disease\n        predicate: contributes_to\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/mondo-object\"\n        ## Examples:\n        ## - UniProtKB:P01344 (IGF2) -\u003e MONDO:0005075 (thyroid gland papillary carcinoma) \n        ## - UniProtKB:P01185 (AVP) -\u003e MONDO:0009366 (normal pressure hydrocephalus) \n    uniprotkb-contributes_to-mondo-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:contributes_to AND _exists_:object.MONDO\n    ## I find almost all records (368678 / 368708) use object.type:Disease\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: MONDO\n            semantic: Disease\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"contributes_to\"]') }} ],\n              \"scopes\": [\"object.MONDO\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: contribution_from\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-subject\"\n        ## Examples:\n        ## - MONDO:0005075 (thyroid gland papillary carcinoma) -\u003e UniProtKB:P01344 (IGF2) \n        ## - MONDO:0009366 (normal pressure hydrocephalus) -\u003e UniProtKB:P01185 (AVP) \n    uniprotkb-contributes_to-hp:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:contributes_to AND _exists_:object.HP\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: UniProtKB\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"contributes_to\"]') }} ],\n              \"scopes\": [\"subject.UniProtKB\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: object.HP,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: HP\n            semantic: PhenotypicFeature\n        predicate: contributes_to\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/hp-object\"\n        ## Examples:\n        ## - UniProtKB:Q76L83 (ASXL2) -\u003e HP:0001510 (Growth delay) \n        ## - UniProtKB:P17677 (GAP43) -\u003e HP:0002197 (Generalized-onset seizure) \n    uniprotkb-contributes_to-hp-rev:\n    ##  https://biothings.ncats.io/text_mining_targeted_association/query?q=_exists_:subject.UniProtKB AND association.edge_label:contributes_to AND _exists_:object.HP\n    ## I find only 6824 records (out of 24414) use object.type:PhenotypicFeature...most use Disease (17491)\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: HP\n            semantic: PhenotypicFeature\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"contributes_to\"]') }} ],\n              \"scopes\": [\"object.HP\", \"association.edge_label\"]\n            }\n        parameters:\n          fields: subject.UniProtKB,association.edge_attributes\n          size: 1000\n        outputs:\n          - id: UniProtKB\n            semantic: Gene\n        predicate: contribution_from\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/uniprotkb-subject\"\n        ## Examples:\n        ## - HP:0001510 (Growth delay) -\u003e UniProtKB:Q76L83 (ASXL2) \n        ## - HP:0002197 (Generalized-onset seizure) -\u003e UniProtKB:P17677 (GAP43) \n  x-bte-response-mapping:\n    mondo-object:\n      MONDO: object.MONDO\n      edge-attributes: association.edge_attributes\n    chebi-subject:\n      CHEBI: subject.CHEBI\n      edge-attributes: association.edge_attributes\n    hp-object:\n      HP: object.HP\n      edge-attributes: association.edge_attributes\n    drugbank-subject:\n      DRUGBANK: subject.DRUGBANK\n      edge-attributes: association.edge_attributes\n    uniprotkb-object:\n      UniProtKB: object.UniProtKB\n      edge-attributes: association.edge_attributes\n    uniprotkb-subject:\n      UniProtKB: subject.UniProtKB\n      edge-attributes: association.edge_attributes\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/text_mining/smartapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/text_mining/smartapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}