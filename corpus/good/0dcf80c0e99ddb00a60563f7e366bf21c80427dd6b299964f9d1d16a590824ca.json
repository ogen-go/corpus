{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/j-d-carmichael/boats"
		},
		"file": {
			"name": "builtOA3_exclude.json",
			"size": 0,
			"path": "src/__tests__/buildFilesData/builtOA3_exclude.json",
			"byteSize": 10535,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.1\",\n    \"title\": \"boats\",\n    \"description\": \"A sample API\",\n    \"contact\": {\n      \"name\": \"Swagger API Team\",\n      \"email\": \"john@boats.io\",\n      \"url\": \"https://github.com/johndcarmichael/boats/\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"localhost\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"weather\",\n      \"description\": \"Weather data\"\n    }\n  ],\n  \"paths\": {\n    \"/weather\": {\n      \"get\": {\n        \"tags\": [\n          \"Weather\"\n        ],\n        \"summary\": \"weather data\",\n        \"description\": \"Get the latest temperatures\",\n        \"operationId\": \"weatherGet\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful fetch\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Weathers\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Temp not found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Weather\"\n        ],\n        \"summary\": \"weather data\",\n        \"description\": \"Create a new weather record.\",\n        \"operationId\": \"weatherPost\",\n        \"requestBody\": {\n          \"description\": \"Optional description in *Markdown*\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/WeatherPost\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful temp creation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Weather\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid form data provided\"\n          }\n        }\n      }\n    },\n    \"/weather/id/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Weather\"\n        ],\n        \"summary\": \"weather data\",\n        \"description\": \"Get the latest temperatures\",\n        \"operationId\": \"weatherIdIdGet\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PathId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful fetch\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Weather\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Temp not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Weather\"\n        ],\n        \"summary\": \"weather data\",\n        \"description\": \"Create a new weather record.\",\n        \"operationId\": \"weatherIdIdPut\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PathId\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Optional description in *Markdown*\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/WeatherPut\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful temp creation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Weather\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid form data provided\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"PathId\": {\n        \"in\": \"path\",\n        \"name\": \"id\",\n        \"schema\": {\n          \"type\": \"integer\"\n        },\n        \"required\": true,\n        \"description\": \"Numeric ID of object to fetch\"\n      },\n      \"QueryOffset\": {\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"description\": \"The number of items to skip before starting to collect the result set.\"\n      }\n    },\n    \"schemas\": {\n      \"GenericSearchMeta\": {\n        \"properties\": {\n          \"totalResultCount\": {\n            \"type\": \"number\"\n          },\n          \"offset\": {\n            \"type\": \"number\"\n          },\n          \"limit\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"LocationPatch\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"description\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LocationPicked\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"name\"\n            ],\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"description\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"location\": {\n                \"allOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"name\"\n                    ],\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"LocationPost\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"coordinates\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"coordinates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"description\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LocationPut\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"coordinates\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"description\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"location\": {\n                \"allOf\": [\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"coordinates\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"description\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"WeatherDiscriminator\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"mapping\": {\n            \"typeOne\": \"#/components/schemas/WeatherPolymorphicmodelOne\",\n            \"typeTwo\": \"#/components/schemas/WeatherPolymorphicmodelTwo\"\n          },\n          \"propertyName\": \"selector\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/WeatherPolymorphicmodelOne\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/WeatherPolymorphicmodelTwo\"\n          }\n        ]\n      },\n      \"Weather\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"cloudCoverPercentage\": {\n            \"type\": \"integer\"\n          },\n          \"humidityPercentage\": {\n            \"type\": \"integer\"\n          },\n          \"temperature\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"Weathers\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/GenericSearchMeta\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Weather\"\n            }\n          }\n        }\n      },\n      \"WeatherPolymorphicmodelOne\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"selector\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"WeatherPolymorphicmodelTwo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"selector\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"WeatherPost\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"cloudCoverPercentage\": {\n            \"type\": \"integer\"\n          },\n          \"humidityPercentage\": {\n            \"type\": \"integer\"\n          },\n          \"temperature\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"WeatherPut\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/WeatherPost\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/j-d-carmichael/boats@0e8c32eed07852bb8cc408bdd6ea29367348d390/-/blob/src/__tests__/buildFilesData/builtOA3_exclude.json",
			"externalURLs": [
				{
					"url": "https://github.com/j-d-carmichael/boats/blob/0e8c32eed07852bb8cc408bdd6ea29367348d390/src/__tests__/buildFilesData/builtOA3_exclude.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}