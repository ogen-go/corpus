{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/godaddy.agreements/openapi.yml",
			"byteSize": 9018,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: GoDaddy Agreements\n    iconPath: \"icon.png\"\n  title: GoDaddy Agreements API\n  description: \u003e-\n    This is a generated connector for [GoDaddy Agreements API\n    v1](https://developer.godaddy.com/doc/endpoint/agreements) OpenAPI\n    specification.\n\n    The GoDaddy Agreements API provides capability to access GoDaddy operations\n    related to agreements.\n  version: '1.0'\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials. \n\n    Create a [GoDaddy](https://sg.godaddy.com/) and obtain tokens by following\n    [this guide](https://developer.godaddy.com/getstarted).\nservers:\n  - url: https://api.ote-godaddy.com/\ntags:\n  - name: v1\n    description: ''\npaths:\n  /v1/agreements:\n    get:\n      tags:\n        - v1\n      summary: Retrieve Legal Agreements for provided agreements keys\n      operationId: getLegalAgreements\n      parameters:\n        - name: X-Private-Label-Id\n          in: header\n          description: PrivateLabelId to operate as, if different from JWT\n          schema:\n            type: integer\n        - name: X-Market-Id\n          in: header\n          description: \u003e-\n            Unique identifier of the Market used to retrieve/translate Legal\n            Agreements\n          schema:\n            type: string\n            format: bcp-47\n            default: en-US\n        - name: keys\n          in: query\n          description: Keys for Agreements whose details are to be retrieved\n          required: true\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            application/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            text/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalAgreement'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\nsecurity:\n  - ApiKeyAuth: []\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:       \n      type: apiKey\n      in: header  \n      name: Authorization\n      description: Represents API Key 'Authorization'\n  schemas:\n    Error:\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n    ErrorField:\n      required:\n        - code\n        - path\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        message:\n          type: string\n          description: \u003e-\n            Human-readable, English description of the problem with the contents\n            of the field\n        path:\n          type: string\n          description: \u003e-\n            \u003cul\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field\n            containing an error\u003c/li\u003e\n\n            \u003cstrong style='margin-left: 12px;'\u003eOR\u003c/strong\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field that\n            refers to an object containing an error, with more detail in\n            `pathRelated`\u003c/li\u003e\n\n            \u003c/ul\u003e\n          format: json-path\n        pathRelated:\n          type: string\n          description: \u003e-\n            JSONPath referring to a field containing an error, which is\n            referenced by `path`\n          format: json-path\n    ErrorLimit:\n      required:\n        - code\n        - retryAfterSec\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n        retryAfterSec:\n          type: integer\n          description: Number of seconds to wait before attempting a similar request\n          format: integer-positive\n    LegalAgreement:\n      required:\n        - agreementKey\n        - content\n        - title\n      type: object\n      properties:\n        agreementKey:\n          type: string\n          description: Unique identifier for the legal agreement\n        content:\n          type: string\n          description: Contents of the legal agreement, suitable for embedding\n        title:\n          type: string\n          description: Title of the legal agreement\n        url:\n          type: string\n          description: URL to a page containing the legal agreement\n          format: url\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/godaddy.agreements/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/godaddy.agreements/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}