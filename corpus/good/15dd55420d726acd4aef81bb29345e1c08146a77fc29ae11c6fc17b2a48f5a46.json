{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "invocable-scripts.yml",
			"size": 0,
			"path": "contracts/svc/invocable-scripts.yml",
			"byteSize": 8548,
			"content": "openapi: 3.0.0\ninfo:\n  title: InfluxData Invokable Scripts API\n  version: 0.1.0\n  description: |\n    Manage and execute scripts as API endpoints in InfluxDB.\n\n    An API Invokable Script assigns your custom Flux script to a new InfluxDB API endpoint for your organization.\n    Invokable scripts let you execute your script as an HTTP request to the endpoint.\n\n    Invokable scripts accept parameters. Add parameter references in your script as `params.myparameter`.\n    When you `invoke` your script, you send parameters as key-value pairs in the `params` object.\n    InfluxDB executes your script with the key-value pairs as arguments and returns the result.\n\n    For more information and examples, see [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/).\nservers:\n  - url: /\npaths:\n  /scripts:\n    get:\n      operationId: GetScripts\n      tags:\n        - Invokable Scripts\n      summary: List scripts\n      parameters:\n        - in: query\n          name: limit\n          description: The number of scripts to return.\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          description: The offset for pagination.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: The list of scripts.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scripts'\n        default:\n          description: Unexpected error\n          $ref: '#/components/responses/ServerError'\n    post:\n      operationId: PostScripts\n      tags:\n        - Invokable Scripts\n      summary: Create a script\n      requestBody:\n        description: The script to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptCreateRequest'\n      responses:\n        '201':\n          description: The created script.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Script'\n        default:\n          description: Unexpected error\n          $ref: '#/components/responses/ServerError'\n  '/scripts/{scriptID}':\n    get:\n      operationId: GetScriptsID\n      tags:\n        - Invokable Scripts\n      summary: Retrieve a script\n      description: Uses script ID to retrieve details of an invokable script.\n      parameters:\n        - in: path\n          name: scriptID\n          schema:\n            type: string\n          required: true\n          description: The script ID.\n      responses:\n        '200':\n          description: The requested script object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Script'\n        default:\n          description: Unexpected error\n          $ref: '#/components/responses/ServerError'\n    patch:\n      operationId: PatchScriptsID\n      tags:\n        - Invokable Scripts\n      summary: Update a script\n      description: |\n        Updates properties (`name`, `description`, and `script`) of an invokable script.\n      requestBody:\n        description: Script update to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptUpdateRequest'\n      parameters:\n        - in: path\n          name: scriptID\n          schema:\n            type: string\n          required: true\n          description: The script ID.\n      responses:\n        '200':\n          description: The updated script.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Script'\n        default:\n          description: Unexpected error\n          $ref: '#/components/responses/ServerError'\n    delete:\n      operationId: DeleteScriptsID\n      tags:\n        - Invokable Scripts\n      summary: Delete a script\n      description: Deletes a script and all associated records.\n      parameters:\n        - in: path\n          name: scriptID\n          schema:\n            type: string\n          required: true\n          description: The ID of the script to delete.\n      responses:\n        '204':\n          description: The script is deleted.\n        default:\n          description: Unexpected error\n          $ref: '#/components/responses/ServerError'\n  '/scripts/{scriptID}/invoke':\n    post:\n      operationId: PostScriptsIDInvoke\n      tags:\n        - Invokable Scripts\n      summary: Invoke a script\n      description: Invokes a script and substitutes `params` keys referenced in the script with `params` key-values sent in the request body.\n      parameters:\n        - in: path\n          name: scriptID\n          schema:\n            type: string\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptInvocationParams'\n      responses:\n        '200':\n          description: The result of the script execution.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptHTTPResponseData'\n        default:\n          description: Unexpected error\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  responses:\n    ServerError:\n      description: Non 2XX error response from server.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Error:\n      properties:\n        code:\n          description: code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - unprocessable entity\n            - empty value\n            - unavailable\n            - forbidden\n            - too many requests\n            - unauthorized\n            - method not allowed\n            - request too large\n            - unsupported media type\n        message:\n          readOnly: true\n          description: Human-readable message.\n          type: string\n        op:\n          readOnly: true\n          description: Describes the logical code operation when the error occurred. Useful for debugging.\n          type: string\n        err:\n          readOnly: true\n          description: Stack of errors that occurred during processing of the request. Useful for debugging.\n          type: string\n      required:\n        - code\n    Script:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        orgID:\n          type: string\n        script:\n          description: script to be executed\n          type: string\n        language:\n          $ref: '#/components/schemas/ScriptLanguage'\n        url:\n          type: string\n          description: invocation endpoint address\n        createdAt:\n          type: string\n          format: date-time\n          readOnly: true\n        updatedAt:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n        - name\n        - orgID\n        - script\n    Scripts:\n      type: object\n      properties:\n        scripts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Script'\n    ScriptCreateRequest:\n      type: object\n      properties:\n        name:\n          description: The name of the script. The name must be unique within the organization.\n          type: string\n        description:\n          type: string\n        script:\n          description: The script to execute.\n          type: string\n        language:\n          $ref: '#/components/schemas/ScriptLanguage'\n      required:\n        - name\n        - script\n        - language\n        - description\n    ScriptUpdateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        script:\n          description: script is script to be executed\n          type: string\n    ScriptHTTPResponseData:\n      description: The data sent in the response body when a script is invoked by an HTTP request. User defined and dynamic.\n      type: string\n      format: binary\n    ScriptInvocationParams:\n      type: object\n      properties:\n        params:\n          type: object\n          additionalProperties: true\n    ScriptLanguage:\n      type: string\n      enum:\n        - flux\n",
			"canonicalURL": "/github.com/influxdata/openapi@a57b04ad0d88b646a1a04bd90a03477ca945fc3b/-/blob/contracts/svc/invocable-scripts.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/a57b04ad0d88b646a1a04bd90a03477ca945fc3b/contracts/svc/invocable-scripts.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}