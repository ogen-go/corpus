{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CollActionteam/collaction_backend"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "docs/api.yaml",
			"byteSize": 14590,
			"content": "openapi: \"3.0.1\"\ninfo:\n  title: \"collaction-dev\"\n  version: \"1.0\"\nservers:\n- url: \"https://api{subdomainSuffix}.{domain}/\"\n  variables:\n    subdomainSuffix:\n      default: \"-dev\"\n    domain:\n      default: \"collaction.org\"\n\npaths:\n  /crowdactions/{crowdactionID}:\n    get:\n      tags:\n        - \"Crowdaction\"\n      summary: \"Get details of a specific crowdaction\"\n      parameters:\n        - name: \"crowdactionID\"\n          in: \"path\"\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \"Crowdaction details\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Crowdaction'\n        404:\n          description: \"Crowdaction not found\"\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"crowdaction does not exist\"\n        500:\n          description: \"Internal server error\"\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"error\"\n\n  /crowdactions:\n    get:\n      tags:\n        - \"Crowdaction\"\n      summary: \"Get list of crowdactions\"\n      parameters:\n        - name: \"status\"\n          in: \"query\"\n          required: false\n          schema:\n            type: string\n            enum: [\"featured\", \"joinable\", \"active\", \"ended\"]\n      responses:\n        default:\n          description: \"List of crowdactions\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Crowdaction'\n        404:\n          description: \"No active crowdaction found\"\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"no active crowdactions found\"\n        500:\n          description: \"Multiple internal server errors\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  example: error\n\n  /crowdactions/{crowdactionID}/participation:\n    get:\n      tags:\n        - \"Crowdaction\"\n      summary: \"Get existing participation in a particular crowdaction\"\n      parameters:\n      - name: \"crowdactionID\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        default:\n          description: \"Success message\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  userID:\n                    type: string\n                  name:\n                    type: string\n                    description: \"Displayname of the user\"\n                  crowdactionID:\n                    type: string\n                  commitments:\n                    type: array\n                    items:\n                      type: string\n                    example: [\"vegetarian\", \"no-dairy\"]\n                    description: Array of commitment ids\n                  date:\n                    type: string\n                    pattern: \\d{4}-\\d{2}-\\d{2}\n                    example: \"2006-01-02\"\n        404:\n          description: \"Not found (not participating)\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"not participating\"\n      security:\n      - FirebaseAuthorizer: []\n    delete:\n      tags:\n        - \"Crowdaction\"\n      summary: \"Stop participating in a particular crowdaction\"\n      parameters:\n      - name: \"crowdactionID\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        default:\n          description: \"Success message\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"updated\"\n        500:\n          description: \"Error message\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"not participating\"\n      security:\n      - FirebaseAuthorizer: []\n    post:\n      tags:\n        - \"Crowdaction\"\n      summary: \"Participate in a particular crowdaction\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                password:\n                  type: string\n                  example: myEvent-myCompany2021\n                  description: |\n                    Password or or empty string if none required (or do not include field)\n                    (NOTE: This field is not required for the MVP)\n                commitments:\n                  type: array\n                  items:\n                    type: string\n                  example: [\"no-meat\", \"no-dairy\"]\n\n      parameters:\n      - name: \"crowdactionID\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        default:\n          description: \"Success message\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"updated\"\n        500:\n          description: \"Error message\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"already participating\"\n      security:\n      - FirebaseAuthorizer: []\n  /profiles/{userID}:\n    post:\n      tags:\n        - \"Profile\"\n      summary: \"Create a profile for a new user\"\n      parameters:\n      - name: \"userID\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Profile'\n      responses:\n        default:\n          description: \"Profile was created successfully\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    default: \"Profile Created\"\n                  data:\n                    type: string\n                    default: \"\"\n                  status:\n                    type: integer\n                    default: 200\n      security:\n      - FirebaseAuthorizer: []\n    put:\n      tags:\n        - \"Profile\"\n      summary: \"Update the profile of an existing user\"\n      parameters:\n      - name: \"userID\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Profile'\n      security:\n      - FirebaseAuthorizer: []\n      responses:\n        default:\n          description: \"Profile was updated successfully\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    default: \"profile update successful\"\n                  data:\n                    type: string\n                    default: \"\"\n                  status:\n                    type: integer\n                    default: 200\n    get:\n      tags:\n        - \"Profile\"\n      summary: \"View the profile of a user\"\n      parameters:\n      - name: \"userID\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        default:\n          description: \"Profile was found\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    default: \"Successfully Retrieved Profile\"\n                  data:\n                    type: object\n                    properties:\n                      userid:\n                        type: string\n                        format: uuid\n                      displayname:\n                        type: string\n                        example: \"Max Murphy\"\n                      country:\n                        type: string\n                        example: \"The Netherlands\"\n                      city:\n                        type: string\n                        example: \"Amsterdam\"\n                      bio:\n                        type: string\n                        example: \"Hi, I am Max and I am trying to eat less meat to stop animal suffering.\"\n                      phone:\n                        type: string\n                        example: +31612345678\n                  status:\n                    type: integer\n                    default: 200\n        404:\n          description: \"Profile was not found\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    default: \"no user Profile found\"\n                  data:\n                    type: string\n                    default: \"\"\n                  status:\n                    type: integer\n                    default: 404\n  /upload-profile-picture:\n    get:\n      tags:\n        - \"Profile\"\n      summary: \"Fetch an upload URL (POST) for the profile picture\"\n      responses:\n        default:\n          description: \"Returns the URL where to upload (PUT) the square png image (250-1024px)\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  upload_url:\n                    type: string\n                    format: uri\n      security:\n      - FirebaseAuthorizer: []\n  /contact:\n    post:\n      tags:\n        - \"Other\"\n      summary: \"Send a message to CollAction\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Email'\n      responses:\n        default:\n          description: \"The status code indicates if the message was successfully sent\"\n        \ncomponents:\n  securitySchemes:\n    FirebaseAuthorizer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  \n  schemas:\n    Email:\n      type: object\n      properties:\n        email:\n          type: string\n          description: Email address to which the response to the inquiry should be sent\n          format: email\n        subject:\n          type: string\n          example: \"Hello world\"\n        message:\n          type: string\n          example: \"Please respond to this email :)\"\n        app_version:\n          type: string\n          pattern: '^(?:ios|android) [0-9]+\\.[0-9]+\\.[0-9]+\\+[0-9]+$'\n          example: \"android 1.0.1+1\"\n    Profile:\n      type: object\n      properties:\n        displayname:\n          type: string\n          example: \"Max Murphy\"\n        country:\n          type: string\n          example: \"The Netherlands\"\n        city:\n          type: string\n          example: \"Amsterdam\"\n        bio:\n          type: string\n          example: \"Hi, I am Max and I am trying to eat less meat to stop animal suffering.\"\n    CommitmentOption:\n      type: object\n      properties:\n        id:\n          type: string\n          example: vegetarian\n        label: \n          type: string\n          example: \"Becoming vegetarian\"\n        description:\n          type: string\n          example: \"I will not eat any meat from any animal (including fish).\"\n        requires:\n          type: array\n          description: \u003e\n            Commitments that are included in (and required by) this commitment.\n            They can also be individually selected\n          items:\n            $ref: '#/components/schemas/CommitmentOption'\n            example:\n              id: \"no-beef\"\n              label: \"Not eating beef\"\n              description: \"I will avoid eating beef (Goodbye stake).\"\n    Crowdaction:\n      type: object\n      properties:\n        crowdactionID:\n          type: string\n          example: sustainability#food#88615462-2789-4159-8659-2ecfd33ef305\n        title:\n          type: string\n        description:\n          type: string\n        category:\n          type: string\n        subcategory:\n          type: string\n        location:\n          type: string\n          example: \"NL#Amsterdam\"\n        date_start:\n          type: string\n          pattern: \\d{4}-\\d{2}-\\d{2}\n          example: \"2021-11-28\"\n        date_end:\n          type: string\n          pattern: \\d{4}-\\d{2}-\\d{2}\n          example: \"2021-11-28\"\n        date_limit_join:\n          type: string\n          pattern: \\d{4}-\\d{2}-\\d{2}\n          example: \"2021-11-28\"\n        password_join:\n          description: |\n            Password or 'required' to indicate that a password is required or empty string\n            (NOTE: This field will always contain the password or be empty for the MVP)\n          type: string\n        commitment_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommitmentOption'\n        participant_count:\n          type: integer\n        top_participants:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: \"Peter Parker\"\n              userID:\n                type: string\n                example: \"6620cf87-44ed-456e-9798-d5cbeb7fa10a\"\n        images:\n          type: object\n          properties:\n            card:\n              type: string\n            banner:\n              type: string",
			"canonicalURL": "/github.com/CollActionteam/collaction_backend@fd30c5662d73732c2d67fe2a30535db7234bc3b8/-/blob/docs/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CollActionteam/collaction_backend/blob/fd30c5662d73732c2d67fe2a30535db7234bc3b8/docs/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}