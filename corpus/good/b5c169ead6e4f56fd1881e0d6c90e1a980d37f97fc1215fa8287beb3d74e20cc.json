{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MarioCarrion/todo-api-microservice-example"
		},
		"file": {
			"name": "openapi3.yaml",
			"size": 0,
			"path": "internal/rest/openapi3.yaml",
			"byteSize": 5831,
			"content": "components:\n  requestBodies:\n    CreateTasksRequest:\n      content:\n        application/json:\n          schema:\n            properties:\n              dates:\n                $ref: '#/components/schemas/Dates'\n              description:\n                minLength: 1\n                type: string\n              priority:\n                $ref: '#/components/schemas/Priority'\n      description: Request used for creating a task.\n      required: true\n    SearchTasksRequest:\n      content:\n        application/json:\n          schema:\n            nullable: true\n            properties:\n              description:\n                minLength: 1\n                nullable: true\n                type: string\n              from:\n                default: 0\n                format: int64\n                type: integer\n              is_done:\n                default: false\n                nullable: true\n                type: boolean\n              priority:\n                $ref: '#/components/schemas/Priority'\n              size:\n                default: 10\n                format: int64\n                type: integer\n      description: Request used for searching a task.\n      required: true\n    UpdateTasksRequest:\n      content:\n        application/json:\n          schema:\n            properties:\n              dates:\n                $ref: '#/components/schemas/Dates'\n              description:\n                minLength: 1\n                type: string\n              is_done:\n                default: false\n                type: boolean\n              priority:\n                $ref: '#/components/schemas/Priority'\n      description: Request used for updating a task.\n      required: true\n  responses:\n    CreateTasksResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              task:\n                $ref: '#/components/schemas/Task'\n      description: Response returned back after creating tasks.\n    ErrorResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              error:\n                type: string\n      description: Response when errors happen.\n    ReadTasksResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              task:\n                $ref: '#/components/schemas/Task'\n      description: Response returned back after searching one task.\n    SearchTasksResponse:\n      content:\n        application/json:\n          schema:\n            properties:\n              tasks:\n                items:\n                  $ref: '#/components/schemas/Task'\n                type: array\n              total:\n                format: int64\n                type: integer\n      description: Response returned back after searching for any task.\n  schemas:\n    Dates:\n      properties:\n        due:\n          format: date-time\n          nullable: true\n          type: string\n        start:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    Priority:\n      default: none\n      enum:\n      - none\n      - low\n      - medium\n      - high\n      type: string\n    Task:\n      properties:\n        dates:\n          $ref: '#/components/schemas/Dates'\n        description:\n          type: string\n        id:\n          format: uuid\n          type: string\n        is_done:\n          type: boolean\n        priority:\n          $ref: '#/components/schemas/Priority'\n      type: object\ninfo:\n  contact:\n    url: https://github.com/MarioCarrion/todo-api-microservice-example\n  description: REST APIs used for interacting with the ToDo Service\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  title: ToDo API\n  version: 0.0.0\nopenapi: 3.0.0\npaths:\n  /search/tasks:\n    post:\n      operationId: SearchTask\n      requestBody:\n        $ref: '#/components/requestBodies/SearchTasksRequest'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/SearchTasksResponse'\n        \"400\":\n          $ref: '#/components/responses/ErrorResponse'\n        \"500\":\n          $ref: '#/components/responses/ErrorResponse'\n  /tasks:\n    post:\n      operationId: CreateTask\n      requestBody:\n        $ref: '#/components/requestBodies/CreateTasksRequest'\n      responses:\n        \"201\":\n          $ref: '#/components/responses/CreateTasksResponse'\n        \"400\":\n          $ref: '#/components/responses/ErrorResponse'\n        \"500\":\n          $ref: '#/components/responses/ErrorResponse'\n  /tasks/{taskId}:\n    delete:\n      operationId: DeleteTask\n      parameters:\n      - in: path\n        name: taskId\n        required: true\n        schema:\n          format: uuid\n          type: string\n      responses:\n        \"200\":\n          description: Task updated\n        \"404\":\n          description: Task not found\n        \"500\":\n          $ref: '#/components/responses/ErrorResponse'\n    get:\n      operationId: ReadTask\n      parameters:\n      - in: path\n        name: taskId\n        required: true\n        schema:\n          format: uuid\n          type: string\n      responses:\n        \"200\":\n          $ref: '#/components/responses/ReadTasksResponse'\n        \"404\":\n          description: Task not found\n        \"500\":\n          $ref: '#/components/responses/ErrorResponse'\n    put:\n      operationId: UpdateTask\n      parameters:\n      - in: path\n        name: taskId\n        required: true\n        schema:\n          format: uuid\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateTasksRequest'\n      responses:\n        \"200\":\n          description: Task updated\n        \"400\":\n          $ref: '#/components/responses/ErrorResponse'\n        \"404\":\n          description: Task not found\n        \"500\":\n          $ref: '#/components/responses/ErrorResponse'\nservers:\n- description: Local development\n  url: http://127.0.0.1:9234\n",
			"canonicalURL": "/github.com/MarioCarrion/todo-api-microservice-example@78235ffef7a6fa19c64a37f11edb73c61c8b2d8b/-/blob/internal/rest/openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MarioCarrion/todo-api-microservice-example/blob/78235ffef7a6fa19c64a37f11edb73c61c8b2d8b/internal/rest/openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}