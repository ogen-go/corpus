{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sheldonkwoodward/marknote"
		},
		"file": {
			"name": "marknote.yml",
			"size": 0,
			"path": "docs/marknote.yml",
			"byteSize": 10018,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://localhost:8000/marknote'\ninfo:\n  version: \"1.0\"\n  title: MarkNote Documentation\n  description: A simple note taking API for Django that supports creating notes and a\n    folder structure. Built for the purpose of learning how to use the Django\n    REST Framework to build a CRUD API.\npaths:\n  /note:\n    post:\n      summary: Create a note\n      description: A request to create a note.\n      tags:\n        - note\n      responses:\n        '200':\n          description: The note was created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Note'\n        '400':\n          description: The note could not be created as specified.\n        '403':\n          description: The user is not authenticated.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                title:\n                  description: The title of the new note.\n                  type: string\n                content:\n                  description: The content of the new note.\n                  type: string\n                container:\n                  description: The folder to put the note in.\n                  type: string\n              required:\n                - title\n    get:\n      summary: Retrieve all notes\n      description: A request to retrieve all notes and filter with query paramters.\n      tags:\n        - note\n      parameters:\n        - name: title\n          in: query\n          description: The title to search for and filter by.\n          required: false\n          schema:\n            type: string\n        - name: content\n          in: query\n          description: The content to search for and filter by.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The notes were retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  notes:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/NoteSummary'\n        '403':\n          description: The user is not authenticated.\n  '/note/{id}':\n    get:\n      summary: Retrieve a note\n      description: A request to retrieve a note.\n      tags:\n        - note\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the note to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The note was retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  note:\n                    $ref: '#/components/schemas/Note'\n        '403':\n          description: The user is not authenticated.\n        '404':\n          description: The note could not be found.\n    put:\n      summary: Update a note\n      description: A request to update a note.\n      tags:\n        - note\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the note to update.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The note was updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Note'\n        '400':\n          description: The note could not be updated as specified.\n        '403':\n          description: The user is not authenticated.\n        '404':\n          description: The note could note be found.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                title:\n                  description: The new title of the note\n                  type: string\n                content:\n                  description: The new content of the note\n                  type: string\n                container:\n                  description: The new folder of the note\n                  type: string\n              required:\n                - title\n    delete:\n      summary: Delete a note\n      description: A request to delete a note.\n      tags:\n        - note\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the note to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The note was deleted successfully.\n        '403':\n          description: The user is not authenticated.\n        '404':\n          description: The note could note be found.\n  /folder:\n    post:\n      summary: Create a folder\n      description: A request to create a folder.\n      tags:\n        - folder\n      responses:\n        '200':\n          description: The folder was created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        '400':\n          description: The folder could not be created as specified.\n        '403':\n          description: The user is not authenticated.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                title:\n                  description: The title of the new folder.\n                  type: string\n                container:\n                  description: The folder to put the folder in.\n                  type: string\n              required:\n                - title\n    get:\n      summary: Retrieve all folders\n      description: A request to retrieve all notes and filter with query paramters.\n      tags:\n        - folder\n      parameters:\n        - name: title\n          in: query\n          description: The title to search for and filter by.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The folders were retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  folders:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/FolderSummary'\n        '403':\n          description: The user is not authenticated.\n  '/folder/{id}':\n    get:\n      summary: Retrieve a folder\n      description: A request to retrieve a folder.\n      tags:\n        - folder\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the folder to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The folder was retrieved successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  note:\n                    $ref: '#/components/schemas/Folder'\n        '403':\n          description: The user is not authenticated.\n        '404':\n          description: The folder could not be found.\n    put:\n      summary: Update a folder\n      description: A request to update a folder.\n      tags:\n        - folder\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the folder to update.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The folder was updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        '400':\n          description: The folder could not be updated as specified.\n        '403':\n          description: The user is not authenticated.\n        '404':\n          description: The folder could note be found.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                title:\n                  description: The new title of the note\n                  type: string\n                container:\n                  description: The new folder of the note\n                  type: string\n    delete:\n      summary: Delete a folder\n      description: A request to delete a folder.\n      tags:\n        - folder\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the folder to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The folder was deleted successfully.\n        '403':\n          description: The user is not authenticated.\n        '404':\n          description: The folder could note be found.\ncomponents:\n  schemas:\n    Note:\n      type: object\n      properties:\n        pk:\n          type: string\n        title:\n          type: string\n        content:\n          type: string\n        timestamp:\n          type: string\n        container:\n          type: string\n    NoteSummary:\n      type: object\n      properties:\n        pk:\n          type: string\n        title:\n          type: string\n        timestamp:\n          type: string\n        container:\n          type: string\n    Folder:\n      type: object\n      properties:\n        pk:\n          type: string\n        title:\n          type: string\n        container:\n          type: string\n        notes:\n          type: array\n          items:\n            $ref: '#/components/schemas/NoteSummary'\n        folders:\n          type: array\n          items:\n            $ref: '#/components/schemas/FolderSummary'\n    FolderSummary:\n      type: object\n      properties:\n        pk:\n          type: string\n        title:\n          type: string\n        container:\n          type: string",
			"canonicalURL": "/github.com/sheldonkwoodward/marknote@d752f86b5b29416e77d38ec31090841d6119a750/-/blob/docs/marknote.yml",
			"externalURLs": [
				{
					"url": "https://github.com/sheldonkwoodward/marknote/blob/d752f86b5b29416e77d38ec31090841d6119a750/docs/marknote.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}