{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NL-AMS-LOCGOV/zaakafhandelcomponent"
		},
		"file": {
			"name": "objecttypes-openapi.yaml",
			"size": 0,
			"path": "src/main/resources/api-specificaties/or/objecttypes-openapi.yaml",
			"byteSize": 22429,
			"content": "openapi: 3.0.3\ninfo:\n  title: Objecttypes API\n  version: 2.0.0 (v2)\n  description: |+\n    An API to manage Object types.\n\n    # Introduction\n\n    An OBJECTTYPE represents a collection of objects of similar form and/or function.\n    An OBJECTTYPE includes a definition of an object, represented as a JSON schema, and\n    metadata attributes. Metadata is stored on the top level and the JSON schema itself is stored\n    in VERSIONs because the definition of an object can change over time.\n\n    ## Versions\n\n    Over time, an OBJECTTYPE can also change. This is reflected with VERSIONs.\n\n    A VERSION contains the JSON schema of an OBJECTTYPE at a certain time. Each\n    OBJECTTYPE can have several VERSIONs. A VERSION can have the `status` \"draft\" or \"published\".\n    Only draft VERSIONs are allowed to be changed. Once a VERSION is published\n    it becomes immutable, and if changes are still required a new VERSION should be created.\n\n    ## JSON schema validation\n\n    OBJECTTYPEs are created to ensure that OBJECTs in the Objects API have the same\n    well defined structure. The JSON schema makes this possible.\n    The Objects API retrieves the related OBJECTTYPE and validates the object data against\n    the JSON schema in the appropriate VERSION of the OBJECTTYPE.\n\n    **Useful links**\n\n    * [JSON schema](https://json-schema.org/)\n\n  contact:\n    url: https://github.com/maykinmedia/objecttypes-api\n  license:\n    name: EUPL-1.2\npaths:\n  /objecttypes:\n    get:\n      operationId: objecttype_list\n      description: ''\n      parameters:\n        - in: query\n          name: dataClassification\n          schema:\n            type: string\n            enum:\n              - confidential\n              - intern\n              - open\n              - strictly_confidential\n          description: Confidential level of the object type\n        - name: page\n          required: false\n          in: query\n          description: A page number within the paginated result set.\n          schema:\n            type: integer\n        - name: pageSize\n          required: false\n          in: query\n          description: Number of results to return per page.\n          schema:\n            type: integer\n      tags:\n        - Objecttypes\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedObjectTypeList'\n          description: OK\n    post:\n      operationId: objecttype_create\n      description: ''\n      parameters:\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n      tags:\n        - Objecttypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObjectType'\n        required: true\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectType'\n          description: Created\n  /objecttypes/{objecttype_uuid}/versions:\n    get:\n      operationId: objectversion_list\n      description: ''\n      parameters:\n        - in: path\n          name: objecttype_uuid\n          schema:\n            type: string\n            format: uuid\n          description: Unique identifier (UUID4)\n          required: true\n        - name: page\n          required: false\n          in: query\n          description: A page number within the paginated result set.\n          schema:\n            type: integer\n        - name: pageSize\n          required: false\n          in: query\n          description: Number of results to return per page.\n          schema:\n            type: integer\n      tags:\n        - Objecttypes\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedObjectVersionList'\n          description: OK\n    post:\n      operationId: objectversion_create\n      description: ''\n      parameters:\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - in: path\n          name: objecttype_uuid\n          schema:\n            type: string\n            format: uuid\n          description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - Objecttypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObjectVersion'\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectVersion'\n          description: Created\n  /objecttypes/{objecttype_uuid}/versions/{version}:\n    get:\n      operationId: objectversion_read\n      description: ''\n      parameters:\n        - in: path\n          name: objecttype_uuid\n          schema:\n            type: string\n            format: uuid\n          description: Unique identifier (UUID4)\n          required: true\n        - in: path\n          name: version\n          schema:\n            type: integer\n            maximum: 32767\n            description: Integer version of the OBJECTTYPE\n          required: true\n      tags:\n        - Objecttypes\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectVersion'\n          description: OK\n    put:\n      operationId: objectversion_update\n      description: ''\n      parameters:\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - in: path\n          name: objecttype_uuid\n          schema:\n            type: string\n            format: uuid\n          description: Unique identifier (UUID4)\n          required: true\n        - in: path\n          name: version\n          schema:\n            type: integer\n            maximum: 32767\n            description: Integer version of the OBJECTTYPE\n          required: true\n      tags:\n        - Objecttypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObjectVersion'\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectVersion'\n          description: OK\n    patch:\n      operationId: objectversion_partial_update\n      description: ''\n      parameters:\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - in: path\n          name: objecttype_uuid\n          schema:\n            type: string\n            format: uuid\n          description: Unique identifier (UUID4)\n          required: true\n        - in: path\n          name: version\n          schema:\n            type: integer\n            maximum: 32767\n            description: Integer version of the OBJECTTYPE\n          required: true\n      tags:\n        - Objecttypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedObjectVersion'\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectVersion'\n          description: OK\n    delete:\n      operationId: objectversion_delete\n      description: ''\n      parameters:\n        - in: path\n          name: objecttype_uuid\n          schema:\n            type: string\n            format: uuid\n          description: Unique identifier (UUID4)\n          required: true\n        - in: path\n          name: version\n          schema:\n            type: integer\n            maximum: 32767\n            description: Integer version of the OBJECTTYPE\n          required: true\n      tags:\n        - Objecttypes\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '204':\n          description: No response body\n  /objecttypes/{uuid}:\n    get:\n      operationId: objecttype_read\n      description: ''\n      parameters:\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - Objecttypes\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectType'\n          description: OK\n    put:\n      operationId: objecttype_update\n      description: ''\n      parameters:\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - Objecttypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObjectType'\n        required: true\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectType'\n          description: OK\n    patch:\n      operationId: objecttype_partial_update\n      description: ''\n      parameters:\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - Objecttypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedObjectType'\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectType'\n          description: OK\n    delete:\n      operationId: objecttype_delete\n      description: ''\n      parameters:\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - Objecttypes\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '204':\n          description: No response body\ncomponents:\n  schemas:\n    DataClassificationEnum:\n      enum:\n        - open\n        - intern\n        - confidential\n        - strictly_confidential\n      type: string\n    ObjectType:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 1000\n          description: URL reference to this object. This is the unique identification\n            and location of this object.\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          description: Unique identifier (UUID4)\n        name:\n          type: string\n          description: Name of the object type\n          maxLength: 100\n        namePlural:\n          type: string\n          description: Plural name of the object type\n          maxLength: 100\n        description:\n          type: string\n          description: The description of the object type\n          maxLength: 1000\n        dataClassification:\n          allOf:\n            - $ref: '#/components/schemas/DataClassificationEnum'\n          description: Confidential level of the object type\n        maintainerOrganization:\n          type: string\n          description: Organization which is responsible for the object type\n          maxLength: 200\n        maintainerDepartment:\n          type: string\n          description: Business department which is responsible for the object type\n          maxLength: 200\n        contactPerson:\n          type: string\n          description: Name of the person in the organization who can provide information\n            about the object type\n          maxLength: 200\n        contactEmail:\n          type: string\n          description: Email of the person in the organization who can provide information\n            about the object type\n          maxLength: 200\n        source:\n          type: string\n          description: Name of the system from which the object type originates\n          maxLength: 200\n        updateFrequency:\n          allOf:\n            - $ref: '#/components/schemas/UpdateFrequencyEnum'\n          description: Indicates how often the object type is updated\n        providerOrganization:\n          type: string\n          description: Organization which is responsible for publication of the object\n            type\n          maxLength: 200\n        documentationUrl:\n          type: string\n          format: uri\n          description: Link to the documentation for the object type\n          maxLength: 200\n        labels:\n          type: object\n          additionalProperties: { }\n          description: Key-value pairs of keywords related for the object type\n        createdAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Date when the object type was created\n        modifiedAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Last date when the object type was modified\n        versions:\n          type: array\n          items:\n            type: string\n            format: uri\n          readOnly: true\n          description: list of URLs for the OBJECTTYPE versions\n      required:\n        - name\n        - namePlural\n    ObjectVersion:\n      type: object\n      description: |-\n        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\n        of primary key relationships.  Specifically:\n\n        * A 'url' field is included instead of the 'id' field.\n        * Relationships to other instances are hyperlinks, instead of primary keys.\n\n        NOTE: this only works with DRF 3.1.0 and above.\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        version:\n          type: integer\n          readOnly: true\n          description: Integer version of the OBJECTTYPE\n        objectType:\n          type: string\n          format: uri\n          readOnly: true\n        status:\n          allOf:\n            - $ref: '#/components/schemas/StatusEnum'\n          description: Status of the object type version\n        jsonSchema:\n          type: object\n          additionalProperties: { }\n          title: JSON schema\n          description: JSON schema for Object validation\n        createdAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Date when the version was created\n        modifiedAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Last date when the version was modified\n        publishedAt:\n          type: string\n          format: date\n          readOnly: true\n          title: Published_at\n          description: Date when the version was published\n    PaginatedObjectTypeList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ObjectType'\n    PaginatedObjectVersionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ObjectVersion'\n    PatchedObjectType:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 1000\n          description: URL reference to this object. This is the unique identification\n            and location of this object.\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          description: Unique identifier (UUID4)\n        name:\n          type: string\n          description: Name of the object type\n          maxLength: 100\n        namePlural:\n          type: string\n          description: Plural name of the object type\n          maxLength: 100\n        description:\n          type: string\n          description: The description of the object type\n          maxLength: 1000\n        dataClassification:\n          allOf:\n            - $ref: '#/components/schemas/DataClassificationEnum'\n          description: Confidential level of the object type\n        maintainerOrganization:\n          type: string\n          description: Organization which is responsible for the object type\n          maxLength: 200\n        maintainerDepartment:\n          type: string\n          description: Business department which is responsible for the object type\n          maxLength: 200\n        contactPerson:\n          type: string\n          description: Name of the person in the organization who can provide information\n            about the object type\n          maxLength: 200\n        contactEmail:\n          type: string\n          description: Email of the person in the organization who can provide information\n            about the object type\n          maxLength: 200\n        source:\n          type: string\n          description: Name of the system from which the object type originates\n          maxLength: 200\n        updateFrequency:\n          allOf:\n            - $ref: '#/components/schemas/UpdateFrequencyEnum'\n          description: Indicates how often the object type is updated\n        providerOrganization:\n          type: string\n          description: Organization which is responsible for publication of the object\n            type\n          maxLength: 200\n        documentationUrl:\n          type: string\n          format: uri\n          description: Link to the documentation for the object type\n          maxLength: 200\n        labels:\n          type: object\n          additionalProperties: { }\n          description: Key-value pairs of keywords related for the object type\n        createdAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Date when the object type was created\n        modifiedAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Last date when the object type was modified\n        versions:\n          type: array\n          items:\n            type: string\n            format: uri\n          readOnly: true\n          description: list of URLs for the OBJECTTYPE versions\n    PatchedObjectVersion:\n      type: object\n      description: |-\n        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\n        of primary key relationships.  Specifically:\n\n        * A 'url' field is included instead of the 'id' field.\n        * Relationships to other instances are hyperlinks, instead of primary keys.\n\n        NOTE: this only works with DRF 3.1.0 and above.\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        version:\n          type: integer\n          readOnly: true\n          description: Integer version of the OBJECTTYPE\n        objectType:\n          type: string\n          format: uri\n          readOnly: true\n        status:\n          allOf:\n            - $ref: '#/components/schemas/StatusEnum'\n          description: Status of the object type version\n        jsonSchema:\n          type: object\n          additionalProperties: { }\n          title: JSON schema\n          description: JSON schema for Object validation\n        createdAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Date when the version was created\n        modifiedAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Last date when the version was modified\n        publishedAt:\n          type: string\n          format: date\n          readOnly: true\n          title: Published_at\n          description: Date when the version was published\n    StatusEnum:\n      enum:\n        - published\n        - draft\n        - deprecated\n      type: string\n    UpdateFrequencyEnum:\n      enum:\n        - real_time\n        - hourly\n        - daily\n        - weekly\n        - monthly\n        - yearly\n        - unknown\n      type: string\n  securitySchemes:\n    tokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\ntags:\n  - name: Objecttypes\nexternalDocs:\n  url: https://objects-and-objecttypes-api.readthedocs.io/\nservers:\n  - url: /api/v2\n",
			"canonicalURL": "/github.com/NL-AMS-LOCGOV/zaakafhandelcomponent@b32c3c1a4fa03f245589dd1ae167ab264f9d4563/-/blob/src/main/resources/api-specificaties/or/objecttypes-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NL-AMS-LOCGOV/zaakafhandelcomponent/blob/b32c3c1a4fa03f245589dd1ae167ab264f9d4563/src/main/resources/api-specificaties/or/objecttypes-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}