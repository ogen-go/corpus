{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/disit/snap4city"
		},
		"file": {
			"name": "datamanager-openapiv3.yaml",
			"size": 0,
			"path": "swagger/internal/datamanager-openapiv3.yaml",
			"byteSize": 66006,
			"content": "openapi: 3.0.1\ninfo:\n  title: Data Manager API\n  version: '1.0'\nservers:\n  - url: 'https://{hostname}/mypersonaldata/api'\n    variables:\n      hostname:\n        default: localhost\npaths:\n  '/v1/apps/{APPID}/data':\n    get:\n      tags:\n        - From IoT App\n      summary: Get DATA\n      description: \u003e-\n        It returns a JSON representation of the DATA belonging to the specified\n        _APPID_. If _APPID_ starts with http%3A%2F%2F, it is decoded.\n      security:\n        - accessToken: [] \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/from'\n        - $ref: '#/components/parameters/to'\n        - $ref: '#/components/parameters/first'\n        - $ref: '#/components/parameters/last'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/delegated'\n        - $ref: '#/components/parameters/anonymous'\n      responses:\n        '200':\n          $ref: '#/components/responses/getData'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DATA has the _APP_ID_ field not recognized.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    post:\n      tags:\n        - From IoT App\n      summary: Post DATA\n      description: \u003e\n        It stores a JSON representation of a DATA for the specified _APPID_. If\n        _APPID_ starts with http%3A%2F%2F, it is decoded. If the DATA are\n        successfully stored, it returns HTTP 200 and a JSON representation of\n        the DATA. If the DATA to store include the field _id_ an HTTP 400 is\n        returned (and an explanation is provided in the _Entity_). The fields\n        _insertTime_, _deleteTime_, _elapseTime_ are overriden by the server. If\n        the _username_ is missing, the correct data are retrieved from the\n        _APPID_.\n      security:\n        - accessToken: [] \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      requestBody:\n        required: true\n        description: A JSON object with the data to be stored.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dataTime\n                - APPID\n                - motivation\n                - variableName\n                - variableValue\n                - variableUnit\n              properties:\n                dataTime:\n                  type: integer\n                  format: int64\n                  example: 1523529262000\n                APPID:\n                  type: string\n                  example: nrz3b5r\n                motivation:\n                  type: string\n                  example: testing\n                variableName:\n                  type: string\n                  example: personaldata\n                variableValue:\n                  type: string\n                  example: 11\n                variableUnit:\n                  type: string\n                  example: float\n                username:\n                  type: string\n                  example: mypersonaldata.tester\n      responses:\n        '200':\n          $ref: '#/components/responses/postData'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DATA has the _ID_ field NOT null.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v1/apps/{APPID}/delegated':\n    get:\n      deprecated: true\n      tags:\n        - From IoT App\n      summary: Get DELEGATED v1\n      description: \u003e-\n        It returns a JSON representation of the DELEGATIONS that are given to\n        the user that owns the specified _APPID_. If _APPID_ starts with\n        http%3A%2F%2F, it is decoded. If _usernameDelegated_ is set to\n        _ANONYMOUS_, the delegation is public/anonymous. Null values for _appId_\n        and _appType_ mean the delegation is valid for an Annotation made by the\n        user (out of the IOT-APP context). It does not return the group's\n        delegations.\n      security:\n        - accessToken: [] \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n        - $ref: '#/components/parameters/groupname'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v2/apps/{APPID}/delegated':\n    get:\n      deprecated: true\n      tags:\n        - From IoT App\n      summary: Get DELEGATED v2\n      description: \u003e-\n        Same as V1, but supporting group's delegations. It returns a JSON\n        representation of the DELEGATIONS that are given to the user that owns\n        the specified _APPID_. If _APPID_ starts with http%3A%2F%2F, it is\n        decoded. If _usernameDelegated_ is set to _ANONYMOUS_, the delegation is\n        public/anonymous. Null values for _appId_ and _appType_ mean the\n        delegation is valid for an Annotation made by the user (out of the\n        IOT-APP context).\n      security:\n        - accessToken: [] \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n        - $ref: '#/components/parameters/groupname'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v3/apps/{APPID}/delegated':\n    get:\n      tags:\n        - From IoT App\n      summary: Get DELEGATED v3\n      description: \u003e-\n        Same as V2, but require the _elementType_ to be mandatory. It returns a\n        JSON representation of the DELEGATIONS that are given to the user that\n        owns the specified _APPID_. If _APPID_ starts with http%3A%2F%2F, it is\n        decoded. If _usernameDelegated_ is set to _ANONYMOUS_, the delegation is\n        public/anonymous. Null values for _appId_ and _appType_ mean the\n        delegation is valid for an Annotation made by the user (out of the\n        IOT-APP context).\n      security:\n        - accessToken: [] \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/elementType'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n        - $ref: '#/components/parameters/groupname'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v1/apps/{APPID}/delegator':\n    get:\n      deprecated: true\n      tags:\n        - From IoT App\n      summary: Get DELEGATOR v1\n      description: \u003e-\n        It returns a JSON representation of the DELEGATIONS that the specified\n        _APPID_ gave to an user. If _APPID_ starts with http%3A%2F%2F, it is\n        decoded. If _usernameDelegated_ is set to _ANONYMOUS_, the delegation is\n        public/anonymous. Null values for _appId_ and _appType_ mean the\n        delegation is valid for an Annotation made by the user (out of the\n        IOT-APP context). It does not return the group's delegations.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v2/apps/{APPID}/delegator':\n    get:\n      deprecated: true\n      tags:\n        - From IoT App\n      summary: Get DELEGATOR v2\n      description: \u003e-\n        Same as V1, but supporting group's delegations. It returns a JSON\n        representation of the DELEGATIONS that the specified _APPID_ gave to an\n        user or group. If _APPID_ starts with http%3A%2F%2F, it is decoded. If\n        _usernameDelegated_ is set to _ANONYMOUS_, the delegation is\n        public/anonymous. Null values for _appId_ and _appType_ mean the\n        delegation is valid for an Annotation made by the user (out of the\n        IOT-APP context).\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v3/apps/{APPID}/delegator':\n    get:\n      tags:\n        - From IoT App\n      summary: Get DELEGATOR v3\n      description: \u003e-\n        Same as V2, but require the _elementType_ to be mandatory. It returns a\n        JSON representation of the DELEGATIONS that the specified _APPID_ gave\n        to an user or group. If _APPID_ starts with http%3A%2F%2F, it is\n        decoded. If _usernameDelegated_ is set to _ANONYMOUS_, the delegation is\n        public/anonymous. Null values for _appId_ and _appType_ mean the\n        delegation is valid for an Annotation made by the user (out of the\n        IOT-APP context).\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/elementType'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v1/apps/{APPID}/access/check':\n    get:\n      deprecated: true\n      tags:\n        - From IoT App\n      summary: Check Access v1\n      description: \u003e\n        Check if the user specifeid in the _accessToken_ is able to access the\n        specified _APPID_ (if _APPID_ starts with http%3A%2F%2F, it is uri\n        decoded). If the access is granted, it returns a JSON messge having\n        _result_ set to _true_ and _message_ set to one of _OWNER_, _ROOTADMIN_,\n        _DELEGATED_, _GROUP-DELEGATED_, _PUBLIC_. Otherwise, it returns a JSON\n        message having _result_ set to _false_.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          $ref: '#/components/responses/accesscheck'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v3/apps/{APPID}/access/check':\n    get:\n      tags:\n        - From IoT App\n      summary: Check Access v3\n      description: \u003e\n        Same as V1, but require the _elementType_ to be mandatory. Check if the\n        user specifeid in the _accessToken_ is able to access the specified\n        _APPID_ (if _APPID_ starts with http%3A%2F%2F, it is uri decoded). If\n        the access is granted, it returns a JSON messge having _result_ set to\n        _true_ and _message_ set to one of _PUBLIC_, _DELEGATED_,\n        _GROUP-DELEGATED_, _MYGROUP-PUBLIC_, _MYGROUP-DELEGATED_, _OWNER_,\n        _ROOTADMIN_. Otherwise, it returns a JSON message having _result_ set to\n        _false_.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          $ref: '#/components/responses/accesscheck'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v1/apps/{APPID}/delegations':\n    delete:\n      deprecated: true\n      tags:\n        - From IoT App\n      summary: Delete DELEGATION v1\n      description: \u003e-\n        It deletes all the DELEGATIONS made by the specified _APPID_. If _APPID_\n        starts with http%3A%2F%2F, it is decoded.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: Deletion has been completed successfully.\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v3/apps/{APPID}/delegations':\n    delete:\n      tags:\n        - From IoT App\n      summary: Delete DELEGATION v3\n      description: \u003e-\n        It deletes all the DELEGATIONS made by the specified _APPID_. If _APPID_\n        starts with http%3A%2F%2F, it is decoded.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/elementType'\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: Deletion has been completed successfully.\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v1/username/{USERNAME}/data':\n    get:\n      tags:\n        - From Username\n      summary: Get DATA\n      description: \u003e-\n        It returns a JSON representation of the DATA belonging to the specified\n        _USERNAME_.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/from'\n        - $ref: '#/components/parameters/to'\n        - $ref: '#/components/parameters/first'\n        - $ref: '#/components/parameters/last'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/delegated'\n        - $ref: '#/components/parameters/anonymous'\n      responses:\n        '200':\n          $ref: '#/components/responses/getData'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DATA has the _APP_ID_ field not recognized.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    post:\n      tags:\n        - From Username\n      summary: Post DATA\n      description: \u003e-\n        It stores a JSON representation of a DATA for the specified _USERNAME_.\n        If the DATA are successfully stored, it returns HTTP 200 and a JSON\n        representation of the DATA. If the DATA to store include the field _id_\n        an HTTP 400 is returned (and an explanation is provided in the\n        _Entity_). Fields _insertTime_, _deleteTime_, _elapseTime_ are overriden\n        by the server.\n      security:\n        - accessToken: []\n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      requestBody:\n        required: true\n        description: A JSON object with the data to be stored.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dataTime\n                - APPID\n                - motivation\n                - variableName\n                - variableValue\n                - variableUnit\n              properties:\n                username:\n                  type: string\n                  example: mypersonaldata.tester\n                dataTime:\n                  type: integer\n                  format: int64\n                  example: 1523529262000\n                APPID:\n                  type: string\n                  example: nrz3b5r\n                motivation:\n                  type: string\n                  example: testing\n                variableName:\n                  type: string\n                  example: personaldata\n                variableValue:\n                  type: string\n                  example: 111\n                variableUnit:\n                  type: string\n                  example: float\n      responses:\n        '200':\n          $ref: '#/components/responses/postData'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DATA has the _ID_ field NOT null.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      \n  '/v1/username/{USERNAME}/delegated':\n    get:\n      deprecated: true\n      tags:\n        - From Username\n      summary: Get DELEGATED v1\n      description: \u003e-\n        It returns a JSON representation of the DELEGATIONS that are given to\n        the specified _USERNAME_ . If _usernameDelegated_ is set to _ANONYMOUS_,\n        the delegation is public/anonymous. Null values for _appId_ and\n        _appType_ mean the delegation is valid for an Annotation made by the\n        user (out of the IOT-APP context). It does not return the group's\n        delegations.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n        - $ref: '#/components/parameters/groupname'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      \n  '/v2/username/{USERNAME}/delegated':\n    get:\n      tags:\n        - From Username\n      summary: Get DELEGATED v2\n      description: \u003e-\n        Same as V1, but supporting group's delegations. It returns a JSON\n        representation of the DELEGATIONS that are given to the specified\n        _USERNAME_. If _usernameDelegated_ is set to _ANONYMOUS_, the delegation\n        is public/anonymous. Null values for _appId_ and _appType_ mean the\n        delegation is valid for an Annotation made by the user (out of the\n        IOT-APP context).\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n        - $ref: '#/components/parameters/groupname'\n        - name: elementType\n          required: false\n          in: query\n          description: elementType name filter\n          schema:\n            type: string        \n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      \n  '/v1/username/{USERNAME}/delegator':\n    get:\n      deprecated: true\n      tags:\n        - From Username\n      summary: Get DELEGATOR v1\n      description: \u003e-\n        It returns a JSON representation of the DELEGATIONS that the specified\n        _USERNAME_ has given to an user. If _usernameDelegated_ is set to\n        _ANONYMOUS_, the delegation is public/anonymous. Null values for _appId_\n        and _appType_ mean the delegation is valid for an Annotation made by the\n        user (out of the IOT-APP context). It does not return the group's\n        delegations.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      \n  '/v2/username/{USERNAME}/delegator':\n    get:\n      tags:\n        - From Username\n      summary: Get DELEGATOR v2\n      description: \u003e-\n        Same as V1, but supporting group's delegations. It returns a JSON\n        representation of the DELEGATIONS that the specified _USERNAME_ gave to\n        an user and to a group. If _usernameDelegated_ is set to _ANONYMOUS_,\n        the delegation is public/anonymous. Null values for _appId_ and\n        _appType_ mean the delegation is valid for an Annotation made by the\n        user (out of the IOT-APP context).\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/deleted'\n        - name: elementType\n          required: false\n          in: query\n          description: elementType name filter\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n\n  '/v1/username/{USERNAME}/delegations/check':\n    get:\n      deprecated: true\n      tags:\n        - From Username\n      summary: Check DELEGATIONS v1\n      description: \u003e-\n        It allows to check if a DELEGATION exist for the given _USERNAME_,\n        _elementID_ and _variableName_. If a delegation is found, a JSON messge\n        is returned with _result_ set to _true_, and _message_ set to one of\n        _DELEGATED_, _GROUP-DELEGATED_, _PUBLIC_. If no DELEGATION can be found,\n        a JSON message is returned with _result_ set to _false_.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - name: variableName\n          in: query\n          description: The variable name filter.\n          required: false\n          schema:\n            type: string\n          example: personaldata\n        - name: elementID\n          in: query\n          description: The element ID filter.\n          required: true\n          schema:\n            type: string\n          example: nr1ux28\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: \u003e-\n            If a delegation is found, a JSON messge is returned with _result_\n            set to _true_, and _message_ set to one of _OWNER_, _DELEGATED_,\n            _GROUP-DELEGATED_, _PUBLIC_. If no DELEGATION can be found, a JSON\n            message is returned with _result_ set to _false_.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - result\n                  - message\n                properties:\n                  result:\n                    type: boolean\n                    example: true\n                  message:\n                    type: string\n                    enum:\n                      - OWNER\n                      - DELEGATED\n                      - GROUP-DELEGATED\n                      - PUBLIC\n                    example: DELEGATED\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      \n  '/v3/username/{USERNAME}/delegations/check':\n    get:\n      tags:\n        - From Username\n      summary: Check DELEGATIONS v3\n      description: \u003e-\n        Same as V2, but require the _elementType_ to be mandatory. It allows to\n        check if a DELEGATION exist for the given _USERNAME_, _elementID_ and\n        _variableName_. If a delegation is found, a JSON messge is returned with\n        _result_ set to _true_, and _message_ set to one of _DELEGATED_,\n        _GROUP-DELEGATED_, _PUBLIC_. If no DELEGATION can be found, a JSON\n        message is returned with _result_ set to _false_.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/elementType'\n        - name: variableName\n          in: query\n          description: The variable name filter.\n          required: false\n          schema:\n            type: string\n          example: personaldata\n        - name: elementID\n          in: query\n          description: The element ID filter.\n          required: true\n          schema:\n            type: string\n          example: nr1ux28\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: \u003e-\n            If a delegation is found, a JSON messge is returned with _result_\n            set to _true_, and _message_ set to one of _OWNER_, _DELEGATED_,\n            _GROUP-DELEGATED_, _PUBLIC_. If no DELEGATION can be found, a JSON\n            message is returned with _result_ set to _false_.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - result\n                  - message\n                properties:\n                  result:\n                    type: boolean\n                    example: true\n                  message:\n                    type: string\n                    enum:\n                      - OWNER\n                      - DELEGATED\n                      - GROUP-DELEGATED\n                      - PUBLIC\n                    example: DELEGATED\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      \n  '/v1/username/{USERNAME}/delegation':\n    post:\n      tags:\n        - From Username\n      summary: Post DELEGATION\n      description: \u003e-\n        It stores a JSON representation of a DELEGATION for the specified\n        _USERNAME_. If the DELEGATION is successfully stored, it returns HTTP\n        200 and a JSON representation of the new DELEGATION. If the DELEGATION\n        to be stored includes the field _id_ an HTTP 400 is returned (and an\n        explanation is provided in the _Entity_). Fields _insertTime_,\n        _deleteTime_, and _elapseTime_ are overriden by the server. It is\n        checked that the username specified as DELEGATED exists in LDAP.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - usernameDelegated\n                - elementId\n                - elementType\n              properties:\n                usernameDelegated:\n                  type: string\n                  example: mypersonaldata.tester2\n                usernameDelegator:\n                  type: string\n                  example: mypersonaldata.tester\n                elementId:\n                  type: string\n                  example: nrz3b5r\n                elementType:\n                  type: string\n                  example: AppID\n      responses:\n        '200':\n          $ref: '#/components/responses/postDelegation'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DELEGATION has the ID field NOT null.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      \n  '/v1/username/{USERNAME}/delegation/{DELEGATION_ID}':\n    put:\n      tags:\n        - From Username\n      summary: Put DELEGATION\n      description: \u003e-\n        It stores an update for the JSON representation of a DELEGATION for the\n        specified _DELEGATION_ID_, belonging to the specified _USERNAME_. If the\n        DELEGATION is successfully stored, it returns an HTTP 200 and a JSON\n        representation of the new version of the DELEGATION. If the DELEGATION\n        includes the field _id_ an HTTP 400 is returned (and an explanation is\n        provided in the _Entity_). Fields _insertTime_, _deleteTime_, and\n        _elapseTime_ are overriden by the server. It is checked that the\n        username specified as DELEGATED exists in LDAP.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      requestBody:\n        $ref: '#/components/requestBodies/putDelegation'\n      responses:\n        '200':\n          $ref: '#/components/responses/postDelegation'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DELEGATION has the ID field NOT null.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    delete:\n      tags:\n        - From Username\n      summary: Delete DELEGATION\n      description: It deletes a _DELEGATION_ID_ belonging to the specified _USERNAME_.\n      security:\n        - accessToken: []\n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: \u003e-\n            If the delegation is successfully deleted, an HTTP status code 200\n            is returned.\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DELEGATION has the ID not recognized.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/USERNAME'\n      - $ref: '#/components/parameters/DELEGATION_ID'\n      \n  '/v1/apps/{APPID}/activity':\n    get:\n      deprecated: true\n      tags:\n        - Activity\n      summary: Get ACTIVITY v1\n      description: \u003e-\n        It returns a JSON representation of the activities that an _APPID_ has\n        invoked.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/activityDelegated'\n      responses:\n        '200':\n          description: \u003e-\n            It returns a JSON representation of the activities that an _APPID_\n            has invoked.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - id\n                  - time\n                  - appId\n                  - username\n                  - delegatedAppId\n                  - delegatedUsername\n                properties:\n                  id:\n                    type: integer\n                    format: int32\n                    example: 156\n                  time:\n                    type: integer\n                    format: int64\n                    example: 1526392725000\n                  appId:\n                    type: string\n                    example: \u003e-\n                      f9208f95d7a81d04e7925bb9c7ed388fb9e0c2ce94dab850f55db554cc92c299\n                  username:\n                    type: string\n                    example: badii\n                  delegatedAppId:\n                    type: string\n                    example: \u003e-\n                      244a29787d16e7ba720163890c87a76e05dfccfac835cc0fd2700ddf0480f137\n                  delegatedUsername:\n                    type: string\n                    example: PaoloNesi\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  '/v3/apps/{APPID}/activity':\n    get:\n      tags:\n        - Activity\n      summary: Get ACTIVITY v3\n      description: \u003e-\n        Same as V1, but require the _elementType_ to be mandatory. It returns a\n        JSON representation of the activities that an _APPID_ has invoked.\n      security:\n        - accessToken: []        \n      parameters:\n        - $ref: '#/components/parameters/elementType'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/activityDelegated'\n      responses:\n        '200':\n          description: \u003e-\n            It returns a JSON representation of the activities that an _APPID_\n            has invoked.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - id\n                  - time\n                  - appId\n                  - username\n                  - delegatedAppId\n                  - delegatedUsername\n                properties:\n                  id:\n                    type: integer\n                    format: int32\n                    example: 156\n                  time:\n                    type: integer\n                    format: int64\n                    example: 1526392725000\n                  appId:\n                    type: string\n                    example: \u003e-\n                      f9208f95d7a81d04e7925bb9c7ed388fb9e0c2ce94dab850f55db554cc92c299\n                  username:\n                    type: string\n                    example: badii\n                  delegatedAppId:\n                    type: string\n                    example: \u003e-\n                      244a29787d16e7ba720163890c87a76e05dfccfac835cc0fd2700ddf0480f137\n                  delegatedUsername:\n                    type: string\n                    example: PaoloNesi\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n    parameters:\n      - $ref: '#/components/parameters/APPID'\n      \n  /v1/data:\n    get:\n      tags:\n        - From Outside\n      summary: Get any DATA\n      security:\n        - accessToken: []      \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - name: last\n          in: query\n          description: \u003e-\n            If set to true, just the last value for a combined key (_username_,\n            _appId_, _motivation_, _variableName_) is returned. It defaults to\n            false.\n          required: false\n          schema:\n            type: boolean\n            default: false\n          example: true\n      responses:\n        '200':\n          $ref: '#/components/responses/getAllPublicData'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n          \n  /v1/delegation:\n    get:\n      tags:\n        - From Outside\n      summary: Get any DELEGATION\n      security:\n        - accessToken: []      \n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/lang'\n        - name: elementType\n          required: false\n          in: query\n          description: elementType name filter\n          schema:\n            type: string  \n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n      responses:\n        '200':\n          $ref: '#/components/responses/delegations'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Forbidden (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).          \n          \n  /api/v1/public/access/check:\n    get:\n      tags:\n        - From Outside\n      summary: Check if DATA is public\n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - name: elementID\n          required: true\n          in: query\n          description: The identifier of the elementID to check\n          schema:\n            type: string\n        - name: elementType\n          required: true\n          in: query\n          description: 'Type of the elementID (can be IOTID, DashboardID, AppID and so on)'\n          schema:\n            type: string\n        - name: variableName\n          required: false\n          in: query\n          description: Variable name filter\n          schema:\n            type: string\n        - name: lang\n          required: false\n          in: query\n          description: Language of the module that calls the API.\n          schema:\n            type: string\n            default: en\n      responses:\n        '200':\n          $ref: '#/components/responses/accesscheck'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: Bad request (if an error arise parsing client request).\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\n          \n  /api/v1/public/data:\n    get:\n      tags:\n        - From Outside\n      summary: Get public DATA\n      parameters:\n        - $ref: '#/components/parameters/sourceRequest'\n        - $ref: '#/components/parameters/variableName'\n        - $ref: '#/components/parameters/motivation'\n        - $ref: '#/components/parameters/from'\n        - $ref: '#/components/parameters/to'\n        - $ref: '#/components/parameters/first'\n        - $ref: '#/components/parameters/last'\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          $ref: '#/components/responses/getData'\n        '204':\n          description: No content (if no content is returned).\n        '400':\n          description: \u003e-\n            Bad request (if an error arise parsing client request). Remarkable\n            example: the passed DATA has the _APP_ID_ field not recognized.\n        '401':\n          description: \u003e-\n            Not Authorized (if an autherization error arise parsing client\n            request).\n        '500':\n          description: Internal Server Error (if an error arise on server side).\n        '501':\n          description: Not Implemented (if the invoked api is not supported anymore).\ncomponents:\n  securitySchemes:\n    accessToken:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    elementType:\n      name: elementType\n      in: path\n      description: The elementType that specify an APPID.\n      required: true\n      schema:\n        type: string\n      example: IOTID\n    APPID:\n      name: APPID\n      in: path\n      description: The identifier of the application to which the data belong.\n      required: true\n      schema:\n        type: string\n      example: nrz3b5r\n    sourceRequest:\n      name: sourceRequest\n      in: query\n      description: \u003e-\n        Name of the module that calls the api (sample values are _iotapp_,\n        _dashboardwizard_, _dashboardmanager_, and so on)\n      required: true\n      schema:\n        type: string\n      example: testing\n    accessToken:\n      name: accessToken\n      in: query\n      description: \u003e\n        The token that grants the access. It has to be valid, not elapsed and it\n        has to belong to the owner of the _APPID_ or to an user with RootAdmin\n        privileges. The use of the accessToken in the parameter is\n        __DEPRECATED__. Please pass the access token in the HTTP Header:\n        \"Authorization: Bearer _accessToken_\".\n      required: true\n      schema:\n        type: string\n    accessTokenAppidOnly:\n      name: accessToken\n      in: query\n      description: \u003e\n        The token that grants the access. It has to be valid, not elapsed and it\n        has to belong to the owner of the _APPID_. The use of the accessToken in\n        the parameter is __DEPRECATED__. Please pass the access token in the\n        HTTP Header: \"Authorization: Bearer _accessToken_\".\n      required: true\n      schema:\n        type: string\n    accessTokenUsername:\n      name: accessToken\n      in: query\n      description: \u003e\n        The token that grants the access. It has to be valid, not elapsed and it\n        has to belong to the _USERNAME_ or to an user with RootAdmin privileges.\n        The use of the accessToken in the parameter is __DEPRECATED__. Please\n        pass the access token in the HTTP Header: \"Authorization: Bearer\n        _accessToken_\".\n      required: true\n      schema:\n        type: string\n    accessTokenRootadminOnly:\n      name: accessToken\n      in: query\n      description: \u003e\n        The token that grants the access. It has to be valid, not elapsed and it\n        has to belong to an user with RootAdmin privilege. The use of the\n        accessToken in the parameter is __DEPRECATED__. Please pass the access\n        token in the HTTP Header: \"Authorization: Bearer _accessToken_\".\n      required: true\n      schema:\n        type: string\n    accessTokenBasic:\n      name: accessTokenBasic\n      in: query\n      description: \u003e\n        The token that grants the access. It has to be valid, and not elapsed.\n        The use of the accessToken in the parameter is __DEPRECATED__. Please\n        pass the access token in the HTTP Header: \"Authorization: Bearer\n        _accessToken_\".\n      required: true\n      schema:\n        type: string\n    accessTokenElementid:\n      name: accessToken\n      in: query\n      description: \u003e\n        The token that grants the access. It has to be valid, not elapsed and it\n        has to belong to the owner of the _elementID_ or to an user with\n        RootAdmin privileges. The use of the accessToken in the parameter is\n        __DEPRECATED__. Please pass the access token in the HTTP Header:\n        \"Authorization: Bearer _accessToken_\".\n      required: true\n      schema:\n        type: string\n    variableName:\n      name: variableName\n      in: query\n      description: Variable name filter.\n      required: false\n      schema:\n        type: string\n      example: personaldata\n    motivation:\n      name: motivation\n      in: query\n      description: Motivation filter.\n      required: false\n      schema:\n        type: string\n      example: testing\n    lang:\n      name: lang\n      in: query\n      description: Language of the module that calls the api. It defaults to _en_.\n      required: false\n      schema:\n        type: string\n        default: en\n      example: en\n    USERNAME:\n      name: USERNAME\n      in: path\n      description: \u003e-\n        The unique identifier of the user. An user with _RootAdmin_ privileges\n        can eventually specify the special string _ANY_ to retrieve DATA from\n        any users.\n      required: true\n      schema:\n        type: string\n      example: mypersonaldata.tester\n    from:\n      name: from\n      in: query\n      description: \u003e-\n        Lower bound time period filter. Expected format is\n        \"yyyy-MM-dd'T'HH:mm:ss\".\n      required: false\n      schema:\n        type: string\n        format: date-time\n      example: '2018-05-01T11:35:20.000Z'\n    to:\n      name: to\n      in: query\n      description: \u003e-\n        Upper bound time period filter. Expected format is\n        \"yyyy-MM-dd'T'HH:mm:ss\".\n      required: false\n      schema:\n        type: string\n        format: date-time\n      example: '2018-11-30T11:35:20.000Z'\n    first:\n      name: first\n      in: query\n      description: \u003e-\n        How many data have to be returned, from the first one, ordered by\n        _data_time_. It cannot be used with _last_. It defaults to \"0\", that\n        means no limit. The maximum allowed value is 1000.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        default: 0\n        maximum: 1000\n      example: 0\n    last:\n      name: last\n      in: query\n      description: \u003e-\n        How many data have to be returned, from the last one, ordered by\n        _data_time_. It cannot be used with _first_. It defaults to \"0\", that\n        means no limit. The maximum allowed value is 1000.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        default: 0\n        maximum: 1000\n      example: 0\n    delegated:\n      name: delegated\n      in: query\n      description: \u003e-\n        If true, the api return just the data from an APPID that has been\n        delegated. It defaults to _false_.\n      required: false\n      schema:\n        type: boolean\n        default: false\n      example: false\n    activityDelegated:\n      name: delegated\n      in: query\n      description: \u003e-\n        If set to true, just the activities in which a result included a data\n        from my container are returned.\n      required: false\n      schema:\n        type: boolean\n        default: false\n      example: false\n    anonymous:\n      name: anonymous\n      in: query\n      description: \u003e-\n        If true, the API returns just the data from an APPID that has been\n        configured as public. It defaults to _false_. To be used with\n        _delegated_ set to _true_.\n      required: false\n      schema:\n        type: boolean\n        default: false\n      example: false\n    deleted:\n      name: deleted\n      in: query\n      description: \u003e-\n        If true, delegations marked as _DELETED_ will be returned also. In those\n        delegations, the field _deleteTime_ is set that indicates the date and\n        time of deletion.\n      required: false\n      schema:\n        type: boolean\n        default: false\n      example: false\n    DELEGATION_ID:\n      name: DELEGATION_ID\n      in: path\n      description: The identifier of the delegation.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 615\n    groupname:\n      name: groupname\n      in: query\n      description: \u003e-\n        If specified, return just the delegation made from user in the specified\n        group/ou. It has to be URL Encoded. Example of groupname are:\n        (organization) ou=Firenze,dc=foo,dc=example,dc=org (group) cn=Firenze\n        Servizi,ou=Firenze,dc=foo,dc=example,dc=org\n      required: false\n      schema:\n        type: string\n        example: null\n  responses:\n    getData:\n      description: A JSON array with the retrieved data is returned.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: object\n              required:\n                - username\n                - dataTime\n                - APPName\n                - APPID\n                - motivation\n                - variableName\n                - variableValue\n                - variableUnit\n              properties:\n                username:\n                  type: string\n                  example: adifino\n                dataTime:\n                  type: integer\n                  format: int64\n                  example: 1523529262000\n                APPName:\n                  type: string\n                  example: nr28\n                APPID:\n                  type: string\n                  example: \u003e-\n                    6ff3a0ea0a5d92f345fa13c95d0b35ff77204413b9c98e3a71b1d269a26af11e\n                motivation:\n                  type: string\n                  example: Shared Position\n                variableName:\n                  type: string\n                  example: latitude_longitude\n                variableValue:\n                  type: string\n                  example: '[43.20,11.15]'\n                variableUnit:\n                  type: string\n                  example: gradi decimali\n    getAllPublicData:\n      description: A JSON array with the retrieved data is returned.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: object\n              required:\n                - id\n                - uid\n                - username\n                - dataTime\n                - APPName\n                - APPID\n                - motivation\n                - variableName\n                - variableValue\n                - variableUnit\n                - uidName\n              properties:\n                id:\n                  type: integer\n                  format: int64\n                  example: 32\n                uid:\n                  type: integer\n                  format: int64\n                  example: 66\n                username:\n                  type: string\n                  example: adifino\n                dataTime:\n                  type: integer\n                  format: int64\n                  example: 1523529262000\n                APPName:\n                  type: string\n                  example: nr28\n                APPID:\n                  type: string\n                  example: \u003e-\n                    6ff3a0ea0a5d92f345fa13c95d0b35ff77204413b9c98e3a71b1d269a26af11e\n                motivation:\n                  type: string\n                  example: TIP04\n                variableName:\n                  type: string\n                  example: LATITUDE\n                variableValue:\n                  type: string\n                  example: 50.5\n                variableUnit:\n                  type: string\n                  example: coord\n                uidName:\n                  type: string\n                  example: adifino\n    postData:\n      description: A JSON object with the stored data is returned.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - username\n              - dataTime\n              - APPName\n              - APPID\n              - motivation\n              - variableName\n              - variableValue\n              - variableUnit\n            properties:\n              username:\n                type: string\n                example: adifino\n              dataTime:\n                type: integer\n                format: int64\n                example: 1523529262000\n              APPName:\n                type: string\n                example: nr28\n              APPID:\n                type: string\n                example: \u003e-\n                  6ff3a0ea0a5d92f345fa13c95d0b35ff77204413b9c98e3a71b1d269a26af11e\n              motivation:\n                type: string\n                example: Shared Position\n              variableName:\n                type: string\n                example: latitude_longitude\n              variableValue:\n                type: string\n                example: '[43.20,11.15]'\n              variableUnit:\n                type: string\n                example: gradi decimali\n    delegations:\n      description: \u003e-\n        If delegations can be found, an HTTP status code 200 is returned, and a\n        JSON representation of the delegations is provided in the response body.\n        If _usernameDelegated_ is set to _ANONYMOUS_, it means that it is a\n        public/anonymous delegation. Also, if _appId_ and _appType_ are\n        null/missing, it means that the delegation is valid for Annotation made\n        by the user out of the IOT-APP context.\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: object\n              required:\n                - id\n                - usernameDelegator\n                - usernameDelegated\n                - variableName\n                - motivation\n                - elementId\n                - elementType\n              properties:\n                id:\n                  type: integer\n                  format: int32\n                  example: 27\n                usernameDelegator:\n                  type: string\n                  example: pb1\n                usernameDelegated:\n                  type: string\n                  example: adifino\n                variableName:\n                  type: string\n                  example: latitude_longitude\n                motivation:\n                  type: string\n                  example: Shared Position\n                elementId:\n                  type: string\n                  example: \u003e-\n                    cab5c0cbf1585a072488954723e198c1c16f6fe3bb220120ba4a25416e7ed9a3\n                elementType:\n                  type: string\n                  example: AppID\n                deleteTime:\n                  type: integer\n                  format: int64\n                  example: 1523529262000\n    postDelegation:\n      description: A JSON object with the stored delegation is returned.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - id\n              - usernameDelegator\n              - usernameDelegated\n              - elementId\n              - elementType\n            properties:\n              id:\n                type: integer\n                format: int32\n                example: 27\n              usernameDelegator:\n                type: string\n                example: pb1\n              usernameDelegated:\n                type: string\n                example: adifino\n              elementId:\n                type: string\n                example: \u003e-\n                  cab5c0cbf1585a072488954723e198c1c16f6fe3bb220120ba4a25416e7ed9a3\n              elementType:\n                type: string\n                example: AppID\n    accesscheck:\n      description: A JSON describing the access level of the user is returned.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - result\n            properties:\n              result:\n                type: boolean\n                example: true\n              message:\n                type: string\n                enum:\n                  - OWNER\n                  - ROOTADMIN\n                  - DELEGATED\n                  - GROUP-DELEGATED\n                  - PUBLIC\n  requestBodies:\n    putDelegation:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - id\n              - usernameDelegated\n              - elementId\n              - elementType\n              - motivation\n            properties:\n              id:\n                type: integer\n                format: int32\n                example: 615\n              usernameDelegator:\n                type: string\n                example: mypersonaldata.tester\n              usernameDelegated:\n                type: string\n                example: mypersonaldata.tester2\n              elementId:\n                type: string\n                example: nrz3b5r\n              elementType:\n                type: string\n                example: AppID\n              motivation:\n                type: string\n                example: testing\n",
			"canonicalURL": "/github.com/disit/snap4city@523488172f08a8e700ea3a777117724aac25eb65/-/blob/swagger/internal/datamanager-openapiv3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/disit/snap4city/blob/523488172f08a8e700ea3a777117724aac25eb65/swagger/internal/datamanager-openapiv3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}