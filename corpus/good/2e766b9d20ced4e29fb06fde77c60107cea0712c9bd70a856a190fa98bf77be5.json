{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/uclouvain/osis"
		},
		"file": {
			"name": "schema.yml",
			"size": 0,
			"path": "organisation/schema.yml",
			"byteSize": 9230,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://{environment}.osis.uclouvain.be/api/v1/organisation/\n    variables:\n      environment:\n        default: dev\n        enum:\n          - dev # Development server\n          - qa # Staging server\n          - test # Test server\n  - url: https://osis.uclouvain.be/api/v1/organisation/\n    description: 'Production server'\ninfo:\n  version: '1.3'\n  title: 'Organisations Service'\n  description: |-\n    A set of API endpoints that allow you to get information about organizations\npaths:\n  /{organisation_code}/entites/:\n    get:\n      description: 'Return all the entities of the specified organisation'\n      operationId: get_entities\n      parameters:\n        - in: path\n          name: organisation_code\n          required: true\n          schema:\n            description: Filter entities by the name of their organization\n            type: string\n            example: \"UCL\"\n        - in: query\n          name: entity_type\n          schema:\n            description: Filter result by the type of the entity\n            type: array\n            items:\n              $ref: '#/components/schemas/EntiteTypeEnum'\n          style: form\n          explode: true\n        - in: query\n          name: search\n          schema:\n            description: A search term which will look up at entity acronym or title\n            type: string\n        - in: query\n          name: year\n          schema:\n            description: Filter result by academic year\n            type: integer\n            example: 2020\n        - $ref: '#/components/parameters/Accept-Language'\n        - $ref: '#/components/parameters/X-User-FirstName'\n        - $ref: '#/components/parameters/X-User-LastName'\n        - $ref: '#/components/parameters/X-User-Email'\n        - $ref: '#/components/parameters/X-User-GlobalID'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEntites'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n      tags:\n        - entites\n  /{organisation_code}/entites/{uuid}:\n    get:\n      description: Return the detail of the entity\n      operationId: get_entity\n      parameters:\n        - in: path\n          name: organisation_code\n          required: true\n          schema:\n            description: Filter entities by the name of their organization\n            type: string\n            example: \"UCL\"\n        - in: path\n          name: uuid\n          required: true\n          schema:\n            description: Universal unique identifier in version 4\n            type: string\n        - $ref: '#/components/parameters/Accept-Language'\n        - $ref: '#/components/parameters/X-User-FirstName'\n        - $ref: '#/components/parameters/X-User-LastName'\n        - $ref: '#/components/parameters/X-User-Email'\n        - $ref: '#/components/parameters/X-User-GlobalID'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Entite'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      tags:\n        - entites\n  /{organisation_code}/entites/{uuid}/addresses:\n    get:\n      description: 'Return all the addresses of the entity specified by its uuid'\n      operationId: get_entity_addresses\n      parameters:\n        - in: path\n          name: organisation_code\n          required: true\n          schema:\n            description: Filter entities by the name of their organization\n            type: string\n            example: \"UCL\"\n        - in: path\n          name: uuid\n          required: true\n          schema:\n            description: The uuid of the EntityVersion\n            type: string\n            format: uuid\n        - $ref: '#/components/parameters/Accept-Language'\n        - $ref: '#/components/parameters/X-User-FirstName'\n        - $ref: '#/components/parameters/X-User-LastName'\n        - $ref: '#/components/parameters/X-User-Email'\n        - $ref: '#/components/parameters/X-User-GlobalID'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Address'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n      tags:\n        - entites\ncomponents:\n  securitySchemes:\n    Token:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Enter your token in the format **Token \u0026lt;token\u003e**\n  parameters:\n    PaginationLimit:\n      in: query\n      name: limit\n      description: Limit of paginated results\n      schema:\n        type: integer\n        example: 25\n    PaginationOffset:\n      in: query\n      name: offset\n      description: Offset of paginated results\n      schema:\n        type: integer\n        example: 25\n    X-User-FirstName:\n      in: header\n      name: X-User-FirstName\n      schema:\n        type: string\n      required: false\n    X-User-LastName:\n      in: header\n      name: X-User-LastName\n      schema:\n        type: string\n      required: false\n    X-User-Email:\n      in: header\n      name: X-User-Email\n      schema:\n        type: string\n      required: false\n    X-User-GlobalID:\n      in: header\n      name: X-User-GlobalID\n      schema:\n        type: string\n      required: false\n    Accept-Language:\n      in: header\n      name: Accept-Language\n      description: \u003e\n        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)\n      schema:\n        $ref: '#/components/schemas/AcceptedLanguageEnum'\n      required: false\n  responses:\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Paging:\n      type: object\n      properties:\n        count:\n          type: integer\n        next:\n          type: string\n          format: uri\n          nullable: true\n        previous:\n          type: string\n          format: uri\n          nullable: true\n    PaginatedEntites:\n      allOf:\n        - $ref: '#/components/schemas/Paging'\n        - type: object\n          properties:\n            results:\n              type: array\n              items:\n                $ref: '#/components/schemas/Entite'\n    Entite:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        organization_name:\n          type: string\n          example: \"UCLouvain\"\n        organization_acronym:\n          type: string\n          example: \"UCL\"\n        title:\n          type: string\n          example: \"Ecole d'agrégation en sciences sociales, économiques et juridiques\"\n        acronym:\n          type: string\n          example: \"AGES\"\n        entity_type:\n          $ref: '#/components/schemas/EntiteTypeEnum'\n        entity_type_text:\n          type: string\n          example: 'Ecole'\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n          nullable: true\n        logo:\n          type: string\n          format: uri\n          nullable: true\n    Address:\n      type: object\n      properties:\n        city:\n          type: string\n          example: \"Louvain-la-Neuve\"\n        location:\n          type: string\n          example: \"Rue du compas 1\"\n        street:\n          type: string\n          example: \"Rue du compas\"\n        street_number:\n          type: string\n          example: \"1\"\n        postal_code:\n          type: string\n          example: \"1348\"\n        state:\n          type: string\n        country_iso_code:\n          type: string\n          example: \"BE\"\n        is_main:\n          type: boolean\n    EntiteTypeEnum:\n      type: string\n      enum:\n        - 'SECTOR'\n        - 'FACULTY'\n        - 'SCHOOL'\n        - 'INSTITUTE'\n        - 'POLE'\n        - 'DOCTORAL_COMMISSION'\n        - 'PLATFORM'\n        - 'LOGISTICS_ENTITY'\n    AcceptedLanguageEnum:\n      type: string\n      enum:\n        - 'en'\n        - 'fr-be'\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\nsecurity:\n  - Token: [ ]",
			"canonicalURL": "/github.com/uclouvain/osis@2f6a70d9f81a16d144849b9e01d0f3f6768b8f08/-/blob/organisation/schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/uclouvain/osis/blob/2f6a70d9f81a16d144849b9e01d0f3f6768b8f08/organisation/schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}