{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "productOfferingQualificationManagement.api.yaml",
			"size": 0,
			"path": "productApi/serviceability/offeringQualification/productOfferingQualificationManagement.api.yaml",
			"byteSize": 75782,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    **This file forms part of MEF 87**\n     \n    This API implements Business Requirements described in MEF 79\n\n    The Product Offering Qualification (POQ) Management API allows a Buyer to\n    check whether the Seller can deliver a product or set of products from\n    among their product offerings at the geographic address or a service site\n    specified by the Buyer; or modify a previously purchased product.\n\n    The following use cases are managed:\n    - Create Product Offering Qualification\n    - Retrieve POQ List\n    - Retrieve POQ by Identifier\n    - Register for POQ Notifications (note: Send POQ Notification is supported by productOfferingQualificationNotification.api.yaml)\n\n    Copyright 2021 MEF Forum and its contributors\n\n    This file includes content based on the TM Forum Product Offering\n    Qualification API (TMF679 v4.0.0) available at\n    https://github.com/tmforum-apis/TMF679_ProductOfferingQualification, which\n    is licensed by the TM Forum under the Apache License version 2.0. Such\n    content has been modified by the MEF Forum and its contributors.\n  title: Product Offering Qualification Management\n  version: 7.0.1\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/productOfferingQualification/v7/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Seller's URL.\ntags:\n  - description:\n      Operations for managing the Product Offering Qualification request.\n    name: productOfferingQualification\n  - description:\n      Operations for managing the subscription for events notification.\n    name: events subscription\npaths:\n  /hub:\n    post:\n      description: \u003e-\n        A request initiated by the Buyer to instruct the Seller to send\n        notifications of POQ create, POQ and/or POQ Item state changes if the\n        Buyer has registered for these notifications. The state change\n        notifications are sent only in the Deferred response scenario as in the\n        Immediate response scenario once the response to POQ Request is\n        provided (create notification), there  will be no further state\n        changes.  Reference: MEF 79 (section 8.4.2).\n      operationId: registerListener\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity  represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/EventSubscriptionInput'\n        description: \u003e-\n          Data containing the callback endpoint to which to deliver the\n          information.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description:\n            'Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        '501':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: \u003e-\n            Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary:\n        Allows a Buyer to register to receive POQ state change notifications\n      tags:\n        - events subscription\n      x-codegen-request-body-name: data\n  '/hub/{id}':\n    delete:\n      description: |\n        This operation is used to delete an event subscription. \n        Reference: MEF 79 (Sn 8.3)\n      operationId: unregisterListener\n      parameters:\n        - description: Identifier of the EventSubscription\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      responses:\n        '204':\n          description:\n            'No Content. (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        '501':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: \u003e-\n            Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Unregister a listener\n      tags:\n        - events subscription\n  /productOfferingQualification:\n    get:\n      description: \u003e-\n        The Buyer requests a list of POQs from the Seller based on a set of POQ\n        filter criteria (as described in MEF79). For each POQ returned, the\n        Seller also provides a POQ Identifier that uniquely identifies this POQ\n        within the Seller's system. The order of the elements returned to the\n        Buyer is defined by the Seller (e.g. natural order) and does not change\n        between the pages. If criteria for attribute X are provided, all\n        returned items must match it.\n      operationId: listProductOfferingQualification\n      parameters:\n        - description: \u003e-\n            State of the POQ to be retrieved. See `MEFPOQTaskStateType`\n            definition for details\n          in: query\n          name: state\n          schema:\n            enum:\n              - acknowledged\n              - terminatedWithError\n              - inProgress\n              - done.unableToProvide\n              - done.ready\n            type: string\n        - name: externalId\n          required: false\n          in: query\n          description:\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterward)\n          schema:\n            type: string\n        - description: Identifier of Buyer project associated with POQ\n          in: query\n          name: projectId\n          schema:\n            type: string\n        - description: POQ expected response date is on or after this date\n          in: query\n          name: requestedPOQCompletionDate.gt\n          schema:\n            format: date-time\n            type: string\n        - description: POQ expected response date is on or before this date\n          in: query\n          name: requestedPOQCompletionDate.lt\n          schema:\n            format: date-time\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Buyer\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller\n          in: query\n          name: sellerId\n          schema:\n            type: string\n        - description: \u003e-\n            Requested index for the start of POQ to be provided in response\n            requested by the client. Note that the index starts with \"0\".\n          in: query\n          name: offset\n          schema:\n            format: int32\n            type: integer\n        - description: \u003e-\n            Requested number of POQ to be provided in response requested by\n            client\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ProductOfferingQualification_Find'\n                type: array\n          description:\n            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n          headers:\n            X-Pagination-Throttled:\n              description: \u003e\n                Used to indicate that result page was throttled to maximum\n                possible size  and there are additional results that can be\n                fetched\n              schema:\n                type: boolean\n            X-Total-Count:\n              description: \u003e\n                The total number of matching POQ. E.g. if there are 50 matching\n                items in total, but the request has offset=10 and limit=10,\n                then the X-Total-Count is 50.\n              schema:\n                type: integer\n            X-Result-Count:\n              description: The number of POQ included in the response\n              schema:\n                type: integer\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: \u003e-\n        Retrieve a list of ProductOfferingQualifications based on a set of\n        criteria\n      tags:\n        - productOfferingQualification\n    post:\n      description: \u003e-\n        A request initiated by the Buyer to determine whether the Seller is\n        able to deliver a product or set of products from among their product\n        offerings, at the Buyer's location(s); or modify a previously purchased\n        product. The Seller also provides estimated time intervals to complete\n        these deliveries. Reference: MEF 79 (Sn 8.4).\n      operationId: createProductOfferingQualification\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOfferingQualification_Create'\n        description: \u003e-\n          POQ content provided by the Buyer. See definition's description for\n          details.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOfferingQualification'\n          description:\n            'Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '422':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to business validation problems\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Send a request to perform product offering qualification\n      tags:\n        - productOfferingQualification\n      x-codegen-request-body-name: productOfferingQualification\n  '/productOfferingQualification/{id}':\n    get:\n      description: \u003e-\n        The Buyer requests the full details of a single Product Offering\n        Qualification based on a POQ identifier returned from  the POQ create\n        (`createProductOfferingQualification`) or POQ find\n        (`listProductOfferingQualification`)\n      operationId: retrieveProductOfferingQualification\n      parameters:\n        - description:\n            POQ identifier (matches `ProductOfferingQualification.id`)\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOfferingQualification'\n          description:\n            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a ProductOfferingQualification by ID\n      tags:\n        - productOfferingQualification\ncomponents:\n  schemas:\n    AlternateProductOfferingProposal:\n      description: \u003e\n        If in the request the Buyer has requested to have alternate product\n        proposals, then this class represents a single proposal. All properties\n        are assigned by the Seller.\n\n        Reference: MEF 79 (Sn 8.4.3.2)\n      properties:\n        installationInterval:\n          description: \u003e\n            The estimated minimum interval that the Seller requires in their\n            standard process to complete the delivery of this Product from the\n            time the order is placed and any precedents have been completed.\n          $ref: '#/components/schemas/Duration'\n        id:\n          description: \u003e\n            Identifier of the Product Offering Qualification alternate\n            proposal. Assigned by the Seller.\n          type: string\n        alternateProduct:\n          description: Alternate product proposal\n          $ref: '#/components/schemas/MEFAlternateProduct'\n      required:\n        - alternateProduct\n        - id\n        - installationInterval\n      type: object\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Duration:\n      description:\n        'A Duration in a given unit of time e.g. 3 hours, or 5 days.'\n      properties:\n        amount:\n          description: 'Duration (number of seconds, minutes, hours, etc.)'\n          type: integer\n        units:\n          description: Time unit type\n          $ref: '#/components/schemas/TimeUnit'\n      required:\n        - amount\n        - units\n      type: object\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error Not intended to be\n        used directly. The `code` in the HTTP header is used as a discriminator\n        for the type of error returned in runtime.\n      properties:\n        reason:\n          description: \u003e-\n            Text that explains the reason for the error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        message:\n          description: \u003e-\n            Text that provides mode details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingQueryParameter: The URI is missing a required\n                query-string parameter\n\n                - missingQueryValue: The URI is missing a required query-string\n                parameter value\n\n                - invalidQuery: The query section of the URI is invalid.\n\n                - invalidBody: The request has an invalid body\n              $ref: '#/components/schemas/Error400Code'\n          required:\n            - code\n          type: object\n      description:\n        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingCredentials: No credentials provided.\n\n                - invalidCredentials: Provided credentials are invalid or\n                expired\n              $ref: '#/components/schemas/Error401Code'\n          required:\n            - code\n          type: object\n      description:\n        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                This code indicates that the server understood\n                the request but refuses to authorize it because\n                of one of the following error codes:\n                - accessDenied: Access denied\n                - forbiddenRequester: Forbidden requester\n                - tooManyUsers: Too many users\n              $ref: '#/components/schemas/Error403Code'\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - notFound: A current representation for the target resource\n                not found\n              enum:\n                - notFound\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Resource for the requested path not found.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error422:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |\n                One of the following error codes:\n                  - missingProperty: The property the Seller has expected is not present in the payload\n                  - invalidValue: The property has an incorrect value\n                  - invalidFormat: The property value does not comply with the expected value format\n                  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n                  - unexpectedProperty: Additional property, not expected by the Seller has been provided\n                  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n                  - otherIssue: Other problem was identified (detailed information provided in a reason)\n              $ref: '#/components/schemas/Error422Code'\n            propertyPath:\n              description: \u003e\n                A pointer to a particular property of the payload that caused\n                the validation issue. It is highly recommended that this\n                property should be used.\n\n                Defined using JavaScript Object Notation (JSON) Pointer\n                (https://tools.ietf.org/html/rfc6901).\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Unprocessable entity due to a business validation problem.\n        (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n        - missingProperty\n        - invalidValue\n        - invalidFormat\n        - referenceNotFound\n        - unexpectedProperty\n        - tooManyRecords\n        - otherIssue\n      type: string\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Error501:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                The following error code::\n                - notImplemented: Method not supported by the server\n              enum:\n                - notImplemented\n              type: string\n          required:\n            - code\n          type: object\n      description:\n        'Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)'\n    EventSubscription:\n      description: |\n        This resource is used to manage notification subscription.\n        Reference: MEF 79 (Sn 8.3)\n      properties:\n        query:\n          description: \u003e-\n            The value provided by the Buyer in `EventSubscriptionInput` during\n            notification registration\n          type: string\n        callback:\n          description: \u003e-\n            The value provided by the Buyer in `EventSubscriptionInput` during\n            notification registration\n          type: string\n        id:\n          description: \u003e-\n            An identifier of this Event Subscription assigned by the Seller\n            when a resource is created.\n          type: string\n      required:\n        - callback\n        - id\n      type: object\n    EventSubscriptionInput:\n      description: This class is used to register for Notifications.\n      properties:\n        query:\n          description: \u003e-\n            This attribute is used to define to which type of events to\n            register to. Example: \"query\":\"eventType = poqCreateEvent\". To\n            subscribe for more than one event type, put the values separated by\n            comma: `eventType=poqCreateEvent,poqStateChangeEvent`. The possible\n            values are enumerated by the 'POQEventType' in\n            productOfferingQualificationNotification.api.yaml. An empty query\n            is treated as specifying no filters - ending in  subscription for\n            all event types.\n          type: string\n        callback:\n          description: \u003e-\n            This callback value must be set to *host* property from Buyer\n            ProductOfferingQualification Notification API\n            (productOfferingQualificationNotification.api.yaml). This property\n            is appended with the base path and notification resource path\n            specified in that API to construct an URL to which notification is\n            sent. E.g. for \"callback\": \"https://buyer.co/listenerEndpoint\", the\n            create event notification will be sent to:\n            `https://buyer.co/listenerEndpoint/mefApi/sonata/productOfferingQualificationNotification/v7/listener/poqCreateEvent`\n          type: string\n      required:\n        - callback\n      type: object\n    FieldedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            country:\n              description: Country that the address is in\n              type: string\n            streetType:\n              description: \u003e-\n                The type of street (e.g., alley, avenue, boulevard, brae,\n                crescent, drive, highway, lane, terrace, parade, place, tarn,\n                way, wharf)\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in a US urban property address\n              type: string\n            city:\n              description: The city that the address is in\n              type: string\n            streetNr:\n              description: \u003e-\n                Number identifying a specific property on a public street. It\n                may be combined with streetNrLast for ranged addresses. MEF 79\n                defines it as required for the Seller response, however in\n                certain countries it is not used, so it's optional in API.\n              type: string\n            locality:\n              description: The locality that the address is in\n              type: string\n            postcode:\n              description: \u003e-\n                A descriptor for a postal delivery area, used to speed and\n                simplify the delivery of mail (also known as zip code) MEF 79\n                defines it as required however as in certain countries it is\n                not used we make it optional in API.\n              type: string\n            streetNrLast:\n              description:\n                Last number in a range of street numbers allocated to a\n                property\n              type: string\n            streetNrSuffix:\n              description: The first street number suffix\n              type: string\n            streetName:\n              description: Name of the street or other street type\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n            streetNrLastSuffix:\n              description: Last street number suffix for a ranged address\n              type: string\n            geographicSubAddress:\n              description: \u003e-\n                Additional fields used to specify an address, as detailed as\n                possible.\n              $ref: '#/components/schemas/GeographicSubAddress'\n            streetSuffix:\n              description: A modifier denoting a relative direction\n              type: string\n          required:\n            - city\n            - country\n            - streetName\n          type: object\n      description: \u003e-\n        A type of Address that has a discrete field and value for each type of\n        boundary or identifier down to the lowest level of detail. For example\n        \"street number\" is one field, \"street name\" is another field, etc.\n        Reference: MEF 79 (Sn 8.9.2)\n    FormattedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            country:\n              description: Country that the address is in\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in a US urban property address\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n            city:\n              description: The city that the address is in\n              type: string\n            addrLine2:\n              description: The second address line in a formatted address\n              type: string\n            addrLine1:\n              description: The first address line in a formatted address\n              type: string\n            locality:\n              description: \u003e-\n                An area of defined or undefined boundaries within a local\n                authority or other legislatively defined area, usually rural or\n                semi-rural in nature\n              type: string\n            postcode:\n              description: \u003e-\n                A descriptor for a postal delivery area used to speed and\n                simplify the delivery of mail (also known as ZIP code)\n              type: string\n          required:\n            - addrLine1\n            - city\n            - country\n          type: object\n      description: \u003e-\n        A type of Address that has discrete fields for each type of boundary or\n        identifier with the exception of the street and more specific location\n        details, which are combined into a maximum of two strings based on\n        local postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)\n    GeographicAddressLabel:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            externalReferenceId:\n              description: \u003e-\n                The unique reference to an Address as provided by the\n                Administrative Authority.\n              type: string\n            externalReferenceType:\n              description: \u003e-\n                The organization or standard from the organization that\n                administers this Geographic Address Label ensuring it is unique\n                within the Administrative Authority. The value(s) to be used\n                are to be agreed upon during the onboarding. For North American\n                providers this would normally be CLLI (Common Language Location\n                Identifier) code.\n              type: string\n          required:\n            - externalReferenceId\n            - externalReferenceType\n          type: object\n      description: \u003e-\n        A unique identifier controlled by a generally accepted independent\n        administrative authority that specifies a fixed geographical location. \n\n        Reference: MEF 79 (Sn 8.9.4)\n    GeographicAddressRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced Address. Hyperlink MAY be used by\n                the Seller in responses. Hyperlink MUST be ignored by the\n                Seller in case it is provided by the Buyer in a request.\n              type: string\n            id:\n              description: \u003e-\n                Identifier of the referenced Geographic Address. This\n                identifier is assigned during a successful address validation\n                request (Geographic Address Management API)\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Address resource available through Address\n        Validation API.\n    GeographicSiteRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced Site. Hyperlink MAY be used by the\n                Seller in responses. Hyperlink MUST be ignored by the Seller in\n                case it is provided by the Buyer in a request.\n              type: string\n            id:\n              description: Identifier of the referenced Geographic Site.\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Site resource available through Service\n        Site API\n    GeographicSubAddress:\n      description:\n        'Additional fields used to specify an address, as detailed as possible.'\n      properties:\n        buildingName:\n          description: \u003e\n            Allows for identification of places that require building name  as\n            part of addressing information\n          type: string\n        subUnit:\n          description: \u003e-\n            Representation of a MEFSubUnit It is used for describing subunit\n            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n        levelType:\n          description: Describes level types within a building\n          type: string\n        levelNumber:\n          description:\n            'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\n            2'\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        privateStreetName:\n          description: \u003e-\n            Private streets internal to a property (e.g. a university) may have\n            internal names that are not recorded by the land title office\n          type: string\n      type: object\n    MEFAlternateProduct:\n      description: \u003e-\n        An alternative Product Offering that the Seller is proposing to the\n        Buyer. If 1) the Buyer has set `provideAlternate=true`;  2) the Seller\n        has determined that the POQ Confidence Level for this item is `yellow`\n        or `red`; and  3) The Seller has alternate Products (e.g. similar but\n        lower bandwidth) that may be adequate.\n      properties:\n        productSpecification:\n          description: \u003e-\n            A reference to a Product Specification of the proposed alternate\n            product\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        productOffering:\n          description: |\n            A reference to the alternate product offering.\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          description: \u003e-\n            MEFProductConfiguration is used to get MEF specific product/service\n            payload. the @type is used a a discriminator.\n          $ref: '#/components/schemas/MEFProductConfiguration'\n      required:\n        - productConfiguration\n        - productOffering\n      type: object\n    MEFGeographicPoint:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            spatialRef:\n              description: \u003e-\n                The spatial reference system used to determine the coordinates\n                (e.g. \"WGS84\"). The system used and the value of this field are\n                to be agreed during the onboarding process.\n              type: string\n            x:\n              description: \u003e-\n                The latitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            'y':\n              description: \u003e-\n                The longitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            z:\n              description: \u003e-\n                The elevation expressed in the format specified by the\n                `spacialRef`\n              type: string\n          required:\n            - spatialRef\n            - x\n            - 'y'\n          type: object\n      description: \u003e\n        A MEFGeographicPoint defines a geographic point through coordinates.\n        Reference: MEF 79 (Sn 8.9.5)\n    MEFPOQItemStateChange:\n      description: \u003e-\n        Holds the reached state, reasons, and associated date the POQ state\n        changed, populated by the Seller.\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          description: A state which was reached at change date\n          $ref: '#/components/schemas/MEFPOQItemTaskStateType'\n      required:\n        - changeDate\n        - state\n      type: object\n    MEFPOQItemTaskStateType:\n      description: |\n        POQ item states - The specific states are managed by the Seller based on\n        its processing and/or based on the Buyer's action. The following mapping\n        has been used between `MEFPOQItemTaskStateType` and MEF 79 (Sn 9.2):\n\n        | MEFPOQItemTaskStateType | MEF79                             | Description                                                                                                                  |\n        | ----------------------- | --------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n        | acknowledged            | N/A                               | A request has been received by the Seller and has passed basic validation.                                                   |\n        | done.ready              | READY                             | POQ Item response is complete. This state does not imply that Seller is able to deliver requested item                       |\n        | done.abandoned          | ABANDONED                         | Applied to a POQ Item in case the final state is not reached and any other POQ Item moved to the final state other than done |\n        | terminatedWithError     | INSUFFICIENT_INFORMATION_PROVIDED | The information provided by the Buyer is insufficient for the Seller to provide POQ Item response                            |\n        | inProgress              | IN_PROGRESS                       | The Seller is working on a POQ item response and the answer is not ready yet                                                 |\n      enum:\n        - acknowledged\n        - terminatedWithError\n        - inProgress\n        - done.abandoned\n        - done.ready\n      type: string\n    MEFPOQStateChange:\n      description: \u003e-\n        Holds the reached state, reasons, and associated date the POQ state\n        changed, populated by the Seller.\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          description: A state reached at change date\n          $ref: '#/components/schemas/MEFPOQTaskStateType'\n      required:\n        - changeDate\n        - state\n      type: object\n    MEFPOQTaskStateType:\n      description: |\n        These values represent the valid states through which the product\n        offering qualification can transition.\n\n        The following mapping has been used between `MEFPOQTaskStateType` and\n        MEF 79 (Sn 9.1):\n\n        | MEFPOQTaskStateType  | MEF 79                            | Description                                                                                                                         |\n        | -------------------- | --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------|\n        | acknowledged         | N/A                               | A request has been received by the Seller, has passed basic validation and the id was assigned.                                     |\n        | done.ready           | READY                             | Reached when all items are in `done` state                                                                                          |\n        | done.unableToProvide | UNABLE_TO_PROVIDE                 | This state is set when the Seller is unable to provide a Product Offering Qualification in the timeframe required by the Buyer.     |\n        | terminatedWithError  | INSUFFICIENT_INFORMATION_PROVIDED | This state is achieved when a well-formed POQ request has been received, but there is insufficient information to complete the POQ. |\n        | inProgress           | IN_PROGRESS                       | There is at least one POQ Item in `inProgress` state                                                                                |\n      enum:\n        - acknowledged\n        - terminatedWithError\n        - inProgress\n        - done.unableToProvide\n        - done.ready\n      type: string\n    MEFProductConfiguration:\n      description: \u003e-\n        MEFProductConfiguration is used as an extension point for MEF specific\n        product/service payload. The `@type` attribute is used as a\n        discriminator\n      discriminator:\n        propertyName: '@type'\n      properties:\n        '@type':\n          description: \u003e-\n            The name of the type that uniquely identifies the type of the\n            product that is the subject of the POQ Request. In case of MEF\n            product this is the URN provided in the Product Specification.\n          type: string\n      required:\n        - '@type'\n      type: object\n    MEFProductRefOrValue:\n      description: \u003e-\n        Used by the Buyer to point to existing and/or describe the desired\n        shape of the product. In case of `add` action - only\n        `productConfiguration` MUST be specified. For `modify` action - both\n        `id` and `productConfiguration` MUST be provided to point which product\n        instance to update and to what state. In `delete` only the `id` must be\n        provided.\n      properties:\n        productSpecification:\n          description:\n            A reference to a Product Specification used to describe the Product\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        productOffering:\n          description: \u003e\n            A reference to the product offering. \n\n            MEF 79 defines the `productOffering` as mandatory for the `add`\n            action,\n\n            however, the API allows additionally the use case of providing the\n\n            `productSpecification` instead. In this scenario, the Buyer asks if\n\n            a particular type of product can be served and gets back from the\n            Seller\n\n            a direct or alternate `productOfferings` in response. These can be\n            later used\n\n            in Quote and Product Order steps.\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          description: \u003e-\n            MEFProductConfiguration is used to specify the MEF specific product\n            payload. This field MUST be populated if an item `action` is `add`\n            or `modify`. It MUST NOT be populated when an item `action` is\n            `delete`. The @type is used as a discriminator.\n          $ref: '#/components/schemas/MEFProductConfiguration'\n        productRelationship:\n          description: \u003e-\n            A list of references to existing products that are related to the\n            Product that would be delivered to fulfill the POQ Item.\n          items:\n            $ref: '#/components/schemas/ProductRelationshipWithGrouping'\n          type: array\n        href:\n          description: \u003e\n            Hyperlink to the referenced Product. Hyperlink MAY be used by the\n            Seller in responses. Hyperlink MUST be ignored by the Seller in\n            case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: \u003e\n            The unique identifier of an in-service Product that is the\n            qualification's subject. This field MUST be populated if an item\n            `action` is either `modify` or `delete`. This field MUST NOT be\n            populated if an item `action` is `add`.\n          type: string\n        place:\n          description: \u003e-\n            A list of locations that are related to the Product. For example an\n            installation location\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n      type: object\n    MEFServiceabilityColor:\n      description: |\n        A color that indicates confidence to service the request. When the item\n        state is `done.ready` the Seller **MUST** provide a value. It **MUST\n        NOT** be populated for other states.\n\n\n        Mapping between `ServiceabilityColor` and POQ Confidence Level:\n\n\n        | ServiceabilityColor      | MEF 79       | MEF 79 semantics                                                              |\n        |------------------------- | ------------ | ----------------------------------------------------------------------------- |\n        | green                    | GREEN        |  The Seller has high confidence that this Product can be delivered            |\n        | yellow                   | YELLOW       |  The Seller believes they can deliver the Product but is not highly confident |\n        | red                      | RED          |  The Seller cannot deliver the Product as specified                           |\n\n        Reference: MEF 79 (Sn 8.4.3.1)\n      enum:\n        - green\n        - yellow\n        - red\n      type: string\n    MEFSubUnit:\n      description: Allows for sub unit identification\n      properties:\n        subUnitNumber:\n          description: \u003e-\n            The discriminator used for the subunit, often just a simple number\n            but may also be a range.\n          type: string\n        subUnitType:\n          description: \u003e-\n            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          type: string\n      required:\n        - subUnitNumber\n        - subUnitType\n      type: object\n    ProductActionType:\n      description: |\n        Action to be performed on the Product Item. The action types are\n        described in MEF 79 (Sn 8.4.1.1).\n\n        The following mapping has been used between `ProductActionType` and MEF\n        79:\n\n        | ProductActionType | MEF 79     |\n        |------------------ | ---------- |\n        | add               | INSTALL    |\n        | modify            | CHANGE     |\n        | delete            | DISCONNECT |\n      enum:\n        - add\n        - modify\n        - delete\n      type: string\n    ProductOfferingQualification:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualification_Common'\n        - properties:\n            productOfferingQualificationItem:\n              description: \u003e-\n                One or more of Product Offering Qualification Items. It MUST\n                contain exactly one entry for each item in the POQ request.\n              items:\n                $ref: '#/components/schemas/ProductOfferingQualificationItem'\n              minItems: 1\n              type: array\n            effectiveQualificationDate:\n              description: \u003e-\n                Date and time (set by the Seller) when the POQ state was set to\n                one of the completion states (done.ready,\n                done.unable_to_provide, terminated_with_error). The Seller MUST\n                NOT provide this attribute until mentioned states are achieved.\n              format: date-time\n              type: string\n            expectedPOQCompletionDate:\n              description: \u003e-\n                The date the Seller expects to provide qualification result.\n                Set by the Seller in case of providing a deferred response when\n                the POQ is in an acknowledged or inProgress state.\n              format: date-time\n              type: string\n            stateChange:\n              description: \u003e\n                A log of all state transitions for the POQ. It must be in sync\n                with the most recent POQ Request state.\n              items:\n                $ref: '#/components/schemas/MEFPOQStateChange'\n              type: array\n            href:\n              description: \u003e\n                Hyperlink to this POQ. Hyperlink MAY be used by the Seller in\n                responses. Hyperlink MUST be ignored by the Seller in case it\n                is provided by the Buyer in a request.\n              type: string\n            id:\n              description: \u003e-\n                The Serviceability Request's unique identifier assigned by the\n                Seller.\n              type: string\n            state:\n              description: The state that represents the qualification status\n              $ref: '#/components/schemas/MEFPOQTaskStateType'\n          required:\n            - id\n            - productOfferingQualificationItem\n            - state\n          type: object\n      description: \u003e\n        Represents a response to the Buyer POQ inquiry. This type defines a set\n        of attributes that are assigned by the Seller while processing the\n        request. A POQ response is a combination of attributes defined here\n        with common attributes that are sent in the request. This type is used\n        in response to an immediate request and POQ retrieval by an identifier.\n        Reference MEF 79 (Sn 8.7 and 8.4.3).\n    ProductOfferingQualificationItem:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualificationItem_Common'\n        - properties:\n            terminationError:\n              description: \u003e\n                A list of text-based reasons the Seller MUST provide when the\n                request cannot be processed. When item state is\n                `terminatedWithError` the Seller **MUST** provide at least one\n                termination error.\n              items:\n                $ref: '#/components/schemas/TerminationError'\n              type: array\n            serviceabilityConfidence:\n              description: \u003e-\n                The level of confidence of the Seller to be able to service the\n                request.  When the item state is `done.ready` the Seller\n                **MUST** provide a value. It **MUST NOT** be populated for\n                other states.\n              $ref: '#/components/schemas/MEFServiceabilityColor'\n            serviceabilityConfidenceReason:\n              description: \u003e-\n                A free text description of the reason a particular color is\n                being provided.\n              type: string\n            alternateProductOfferingProposal:\n              description: \u003e\n                A list of one or more alternative Product Offerings that the\n                Seller is proposing to the Buyer. If 1) the Buyer has set\n                `provideAlternate=true`;  2) the Seller has determined that the\n                POQ Confidence Level for this item is `yellow` or `red`;\n                and  3) The Seller has alternate Products (e.g. similar but\n                lower bandwidth) that may be adequate.\n\n                **MUST NOT** be specified if 'state' is 'terminatedWithError'\n                or 'done.abandoned'.\n              items:\n                $ref: '#/components/schemas/AlternateProductOfferingProposal'\n              type: array\n            installationInterval:\n              description: \u003e\n                The estimated minimum interval that the Seller requires in\n                their standard process to complete the delivery of this Product\n                from the time the order is placed and any precedents have been\n                completed. When attribute `serviceabilityConfidence` is set to\n                `green` or `yellow` the Seller **MUST** populate this\n                attribute. **MUST NOT** be specified if 'state' is\n                'terminatedWithError' or `done.abandoned`.\n              $ref: '#/components/schemas/Duration'\n            guaranteedUntilDate:\n              description: \u003e\n                Date until the Seller guarantees the qualification result.\n                **MUST NOT** be specified if 'state' is 'terminatedWithError'\n                or 'done.abandoned'.\n              format: date-time\n              type: string\n            stateChange:\n              description: \u003e\n                A log of all state transitions for the POQ Item. It must be in\n                sync with the most recent POQ Item's state.\n              items:\n                $ref: '#/components/schemas/MEFPOQItemStateChange'\n              type: array\n            state:\n              description: Current state of an item\n              $ref: '#/components/schemas/MEFPOQItemTaskStateType'\n          required:\n            - state\n          type: object\n      description: \u003e-\n        An individual article included in a POQ that describes a Product of a\n        particular type (Product Offering) being delivered to a specific\n        geographical location.  The objective is to determine if it is feasible\n        for the Seller to deliver this item as described and for the Seller to\n        inform the Buyer of the estimated time interval to complete this\n        delivery.\n\n        Reference: MEF 79 (Sn 8.4.3.1)\n    ProductOfferingQualificationItem_Common:\n      description: \u003e\n        Common attributes shared between a POQ request and response.  These\n        attributes are provided by the Buyer and must not be modified by the\n        Seller.\n      properties:\n        product:\n          description: \u003e\n            Used by the Buyer to point to existing and/or describe the desired\n            shape of the product. In case of `add` action - only\n            `productConfiguration` MUST be specified. For `modify` action -\n            both `id` and `productConfiguration` to point which product\n            instance to update and to what state. In `delete` only the `id`\n            must be provided.\n          $ref: '#/components/schemas/MEFProductRefOrValue'\n        qualificationItemRelationship:\n          description: |\n            A list of references to related POQ items in this POQ\n          items:\n            $ref: '#/components/schemas/QualificationItemRelationship'\n          type: array\n        relatedContactInformation:\n          description: \u003e-\n            Contact information of an individual or organization playing a role\n            for this POQ Item\n\n            (e.g. for MEF 79: POQ Item Location Contact, role=locationContact)\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        action:\n          description: Action to be qualified\n          $ref: '#/components/schemas/ProductActionType'\n        id:\n          description: \u003e\n            Id of this POQ item which is unique within the POQ. Assigned by the\n            Buyer.\n          type: string\n      required:\n        - action\n        - id\n        - product\n      type: object\n    ProductOfferingQualificationItem_Create:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualificationItem_Common'\n        - type: object\n      description: \u003e-\n        This structure serves as a request for a product offering qualification\n        item.\n\n        A product qualification item is an individual article included in a POQ\n        that describes a Product of a particular type (Product Offering) being\n        delivered to the geographic address  or a service site specified by the\n        Buyer.\n\n        The objective is to determine if it is feasible for the Seller to\n        deliver this item as described and for the Seller to inform the Buyer\n        of the estimated time interval to complete this delivery.\n\n        The modelling pattern introduces the `Common` supertype to aggregate\n        attributes that are common to both `ProductOfferingQualificationItem`\n        and `ProductOfferingQualificationItem_Create`. It happens that it is\n        the Create type has a subset of attributes of the response type and\n        does not introduce any new, thus the `Create` type has an empty\n        definition.\n\n        Reference: MEF 79 (Sn 8.4.1.1)\n    ProductOfferingQualification_Common:\n      description: \u003e\n        Defines a set of POQ attributes that might be used by the Buyer and\n        cannot be modified by the Seller. The `relatedContactInformation`\n        entries provided by the Buyer cannot be changed by the Seller, however\n        the Seller might append related contact information to that list.`\n      properties:\n        externalId:\n          type: string\n          description:\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n        instantSyncQualification:\n          default: false\n          description: \u003e-\n            If this flag is set to Yes, Buyer requests to have an instant\n            qualification to be provided in operation POST response\n          type: boolean\n        relatedContactInformation:\n          description: |-\n            Party playing a role for this qualification. MEF 79 mandates\n            providing 'Buyer Contact Information' in the request\n            ('role=buyerContactInformation') and 'Seller Contact Information'\n            in the response ('role=sellerContactInformation')\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          minItems: 1\n          type: array\n        provideAlternative:\n          default: false\n          description: \u003e-\n            Allows the Buyer to indicate if he is willing to get an alternate\n            proposal if requested product not available.\n          type: boolean\n        projectId:\n          description: \u003e-\n            This value MAY be assigned by the Buyer to identify a project the\n            serviceability request is associated with.\n          type: string\n        requestedPOQCompletionDate:\n          description: \u003e-\n            The latest date a the POQ completion is expected. This attribute is\n            required when `instantSyncQualification=false`\n          format: date-time\n          type: string\n      required:\n        - relatedContactInformation\n      type: object\n    ProductOfferingQualification_Create:\n      allOf:\n        - $ref: '#/components/schemas/ProductOfferingQualification_Common'\n        - properties:\n            productOfferingQualificationItem:\n              description: A non-empty list of POQ items\n              items:\n                $ref: '#/components/schemas/ProductOfferingQualificationItem_Create'\n              minItems: 1\n              type: array\n          required:\n            - productOfferingQualificationItem\n          type: object\n      description: \u003e\n        Represents a request formulated by the Buyer that is composed of\n        product offering qualification items.\n\n        Reference: MEF 79 (Sn 8.4)\n    ProductOfferingQualification_Find:\n      description: \u003e\n        This class represent a single list item for the response of\n        `listProductOfferingQualification` operation. \n\n        Reference: MEF 79 (Sn 8.6)\n      properties:\n        id:\n          description: The POQ Request's unique identifier.\n          type: string\n        externalId:\n          type: string\n          description:\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n        state:\n          description: Current state of the POQ\n          $ref: '#/components/schemas/MEFPOQTaskStateType'\n        projectId:\n          description:\n            'The project ID specified by the Buyer in the POQ Request, if any.'\n          type: string\n        requestedPOQCompletionDate:\n          description: \u003e\n            The latest date the POQ completion is expected by the Buyer, if\n            specified by the Buyer.\n          format: date\n          type: string\n      required:\n        - id\n        - state\n      type: object\n    ProductOfferingRef:\n      description: \u003e-\n        A reference to a Product Offering offered by the Seller to the\n        Buyer.  A Product Offering contains the commercial and technical\n        details of a Product sold by a particular Seller. A Product Offering\n        defines all of the commercial terms and, through association with a\n        particular Product Specification, defines all the technical attributes\n        and behaviors of the Product. A Product Offering may constrain the\n        allowable set of configurable technical attributes and/or behaviors\n        specified in the associated Product Specification. Defined in MEF 79\n        Section 8.4.1.1\n      properties:\n        href:\n          description: \u003e\n            Hyperlink to a Product Offering in Sellers catalog. In case Seller\n            is not providing a catalog API this field is not used. The catalog\n            is provided by the Seller to the Buyer during onboarding. Hyperlink\n            MAY be used by the Seller in responses   Hyperlink MUST be ignored\n            by the Seller in case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: \u003e-\n            id of a Product Offering. It is assigned by the Seller. The Buyer\n            and the Seller exchange information about offerings' ids during the\n            onboarding process.\n          type: string\n      required:\n        - id\n      type: object\n    ProductRelationshipWithGrouping:\n      description: \u003e-\n        A relationship to existing Product. The requirements for usage for\n        given Product are described in the Product Specification. The\n        \"WithGrouping\" flavour of the Product Relationship allows for providing\n        a list of related product identifiers within a single Product\n        Relationship. This can be later used while processing the request as\n        defined in the Product Specification. The `groupingKey` attribute is\n        used to achieve this behavior in the API by marking the list of\n        `ProductRelationshipWithGroupings` within a `product` with a common\n        key.\n      properties:\n        relationshipType:\n          description: \u003e-\n            Specifies the type (nature) of the relationship to the related\n            Product. The nature of required relationships varies for Products\n            of different types. For example, a UNI or ENNI Product may not have\n            any relationships, but an Access E-Line may have two mandatory\n            relationships (related to the UNI on one end and the ENNI on the\n            other). More complex Products such as multipoint IP or Firewall\n            Products may have more complex relationships. As a result, the\n            allowed and mandatory `relationshipType` values are defined in the\n            Product Specification.\n          type: string\n        href:\n          description: \u003e\n            Hyperlink to the product in Seller's inventory that is referenced\n            Hyperlink MAY be set by the Seller in responses. Hyperlink MUST be\n            ignored by the Seller in case it is provided by the Buyer in a\n            request.\n          type: string\n        id:\n          description: unique identifier of a Product that is referenced\n          type: string\n        groupingKey:\n          description: \u003e\n            MEF 79.0.1. Introduces a list of related ids for the\n            ProductRelationship. For sake of TMF compliance, a `groupingKey` is\n            introduced to retain id as a simple attribute. Ids from\n            relationships having the same `groupingKey` and `relationshipType`\n            MUST be treated as a list of identifiers.\n\n            Reference: MEF 79.0.1 (Sn 7)\n          type: string\n      required:\n        - id\n        - relationshipType\n      type: object\n    ProductSpecificationRef:\n      description: \u003e-\n        A reference to a structured set of well-defined technical attributes\n        and/or behaviors that are used to construct a Product Offering for sale\n        to a market.\n      properties:\n        href:\n          description: \u003e\n            Hyperlink to a Product Specification in Sellers catalog. In case\n            Seller is not providing a catalog API this field is not used. The\n            catalog is provided by the Seller to the Buyer during onboarding.\n            Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be\n            ignored by the Seller in case it is provided by the Buyer in a\n            request.\n          type: string\n        id:\n          description: Unique identifier of the product specification\n          type: string\n      required:\n        - id\n      type: object\n    QualificationItemRelationship:\n      description: \u003e-\n        The relationship between product offering qualification items that can\n        be used to validate business rules between POQ items.\n\n        Reference: MEF 79.0.1 (Sn 6)\n      properties:\n        relationshipType:\n          description: \u003e\n            One of the relationship types defined in the Product Specification.\n            For example: \"relies on\".\n          type: string\n        id:\n          description:\n            An identifier of the targeted POQ item within the same POQ request\n          type: string\n      required:\n        - id\n        - relationshipType\n      type: object\n    RelatedContactInformation:\n      description: \u003e-\n        Contact data for a person or organization that is involved in the\n        product offering qualification. In a given context it is always\n        specified by the Seller (e.g. Seller Contact Information) or by the\n        Buyer. \n\n        Reference: MEF 79 (Sn 8.11)\n      properties:\n        number:\n          description: Phone number\n          type: string\n        emailAddress:\n          description: Email address\n          type: string\n        role:\n          description: A role of the particular contact in the request\n          type: string\n        postalAddress:\n          description: \u003e-\n            Identifies the postal address of the person or office to be\n            contacted.\n          $ref: '#/components/schemas/FieldedAddress'\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n      required:\n        - emailAddress\n        - name\n        - number\n        - role\n      type: object\n    RelatedPlaceRefOrValue:\n      description: \u003e-\n        Place defines the places (locations) where the products being subject\n        of this qualification are to be provided.\n      discriminator:\n        mapping:\n          FieldedAddress: '#/components/schemas/FieldedAddress'\n          FormattedAddress: '#/components/schemas/FormattedAddress'\n          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'\n          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'\n          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'\n          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'\n        propertyName: '@type'\n      properties:\n        role:\n          description: \u003e-\n            Role of this place. The values that can be specified here are\n            described by Product Specification (e.g. \"INSTALL_LOCATION\").\n          type: string\n        '@type':\n          description: \u003e\n            This field is used as discriminator. The value is the name of one\n            of the types that inherit from it using 'allOf', i.e. one of\n            FieldedAddress, FormattedAddress, GeographicAddressLabel,\n            MEFGeographicPoint, GeographicAddressRef, GeographicSiteRef.\n            Moreover, it might discriminate for an additional related place as\n            defined in '@schemaLocation'.\n          type: string\n        '@schemaLocation':\n          description: \u003e-\n            A URL to a JSON-Schema file that defines additional attributes and\n            relationships. May be used to define additional related place\n            types. Usage of this attribute must be agreed between Buyer and\n            Seller.\n          format: uri\n          type: string\n      required:\n        - '@type'\n        - role\n      type: object\n    TerminationError:\n      description: \u003e-\n        This indicates an error that caused an Item to be terminated. The code\n        and propertyPath should be used like in Error422.\n      properties:\n        code:\n          description: |\n            One of the following error codes:\n              - missingProperty: The property the Seller has expected is not present in the payload\n              - invalidValue: The property has an incorrect value\n              - invalidFormat: The property value does not comply with the expected value format\n              - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n              - unexpectedProperty: Additional property, not expected by the Seller has been provided\n              - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n              - otherIssue: Other problem was identified (detailed information provided in a reason)\n          $ref: '#/components/schemas/Error422Code'\n        propertyPath:\n          description: \u003e\n            A pointer to a particular property of the payload that caused the\n            validation issue. It is highly recommended that this property\n            should be used.\n\n            Defined using JavaScript Object Notation (JSON) Pointer\n            (https://tools.ietf.org/html/rfc6901).\n          type: string\n        value:\n          description: Text to describe the reason of the termination.\n          type: string\n      type: object\n    TimeUnit:\n      description: |\n        Represents a unit of time.\n        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)\n      enum:\n        - calendarMonths\n        - calendarDays\n        - calendarHours\n        - calendarMinutes\n        - businessDays\n        - businessHours\n        - businessMinutes\n      type: string\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/productApi/serviceability/offeringQualification/productOfferingQualificationManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/productApi/serviceability/offeringQualification/productOfferingQualificationManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}