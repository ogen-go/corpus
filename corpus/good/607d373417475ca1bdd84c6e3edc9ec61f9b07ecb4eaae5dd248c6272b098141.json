{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/pocketsmith.com/2.0/openapi.yaml",
			"byteSize": 76691,
			"content": "openapi: 3.0.1\nservers:\n  - description: Production\n    url: https://api.pocketsmith.com/v2\ninfo:\n  contact:\n    email: api@pocketsmith.com\n    name: API Support\n  description: The public PocketSmith API\n  title: PocketSmith\n  version: \"2.0\"\n  x-apisguru-categories:\n    - financial\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/pocketsmith/api/master/openapi.json\n      version: \"3.0\"\n  x-providerName: pocketsmith.com\nsecurity:\n  - developerKey: []\npaths:\n  \"/accounts/{id}\":\n    delete:\n      description: Deletes an account and all its data by ID, optionally merge scenarios into another account.\n      parameters:\n        - description: The unique identifier of the account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Delete account\n      tags:\n        - Accounts\n    get:\n      description: Gets an account by its ID.\n      parameters:\n        - description: The unique identifier of the account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Get account\n      tags:\n        - Accounts\n    put:\n      description: Updates and returns an account by its ID.\n      parameters:\n        - description: The unique identifier of the account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                currency_code:\n                  description: A new currency code for the account.\n                  example: NZD\n                  type: string\n                title:\n                  description: A new title for the account.\n                  example: Savings\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Update account\n      tags:\n        - Accounts\n  \"/accounts/{id}/transactions\":\n    get:\n      description: Lists transactions belonging to an account by its ID.\n      parameters:\n        - description: The unique identifier of the account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Return only transactions on or after this date. Required if end_date is provided. If not provided, defaults to the furtherest date allowed by the user's subscription.\n          example: 2016-11-01\n          in: query\n          name: start_date\n          required: false\n          schema:\n            type: string\n        - description: Return transactions that fall on or before this date. Required if start_date is provided. If not provided, defaults to today's date.\n          example: 2016-11-30\n          in: query\n          name: end_date\n          required: false\n          schema:\n            type: string\n        - description: If set, will return only uncategorised results.\n          example: 1\n          in: query\n          name: only_uncategorised\n          required: false\n          schema:\n            type: integer\n        - description: Only return transactions of this type.\n          example: debit\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - debit\n              - credit\n            type: string\n        - description: Return transactions matching a keyword search string. The provided string is matched against the transaction amount, account name, payee, category title, note, labels, and the date in yyyy-mm-dd format.\n          example: Paypal\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: Choose a particular page of the results.\n          example: 3\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n                type: array\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List transactions in account\n      tags:\n        - Transactions\n  \"/attachments/{id}\":\n    delete:\n      description: Deletes a particular attachment by its ID.\n      parameters:\n        - description: The unique identifier of the attachment.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Delete attachment\n      tags:\n        - Attachments\n    get:\n      description: Gets a particular attachment by its ID.\n      parameters:\n        - description: The unique identifier of the attachment.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Get attachment\n      tags:\n        - Attachments\n    put:\n      description: Updates the title of the attachment.\n      parameters:\n        - description: The unique identifier of the attachment.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                title:\n                  description: The new title of the attachment. If the title is blank or not provided, the server will derive a title from the file name.\n                  example: Invoice for taxi\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Update attachment\n      tags:\n        - Attachments\n  \"/categories/{id}\":\n    delete:\n      description: Deletes a particular category by its ID. This will delete all budgets within the category, and uncategorize all transactions assigned to the category.\n      parameters:\n        - description: The unique identifier of the category.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Delete category\n      tags:\n        - Categories\n    get:\n      description: Gets a particular category by its ID.\n      parameters:\n        - description: The unique identifier of the category.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Get category\n      tags:\n        - Categories\n    put:\n      description: Updates the title, colour or parent of the category.\n      parameters:\n        - description: The unique identifier of the category.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                colour:\n                  description: A new CSS-style hex colour for the category.\n                  example: \"#e0e7ff\"\n                  type: string\n                parent_id:\n                  description: The unique identifier of a parent category for the category, making this category a child of that category.\n                  example: 42\n                  type: integer\n                title:\n                  description: A new title for the category.\n                  example: Food\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Update category\n      tags:\n        - Categories\n  \"/categories/{id}/category_rules\":\n    post:\n      description: Creates a rule to allocate a category to transactions.\n      parameters:\n        - description: The unique identifier of the category.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                apply_to_all:\n                  description: Apply the created category rule to all transactions.\n                  example: false\n                  type: boolean\n                apply_to_uncategorised:\n                  description: Apply the created category rule to all uncategorised transactions.\n                  example: true\n                  type: boolean\n                payee_matches:\n                  description: The keyword/s to match the transaction payees.\n                  example: Countdown\n                  type: string\n              required:\n                - category_id\n                - payee_matches\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryRule\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Create category rule in category\n      tags:\n        - Category Rules\n  \"/institutions/{id}\":\n    delete:\n      description: Deletes an institution and all data within. Alternatively, another institution can be provided to merge the data into to avoid losing it.\n      parameters:\n        - description: The unique identifier of the institution.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Delete institution\n      tags:\n        - Institutions\n    get:\n      description: Gets an institution by its ID.\n      parameters:\n        - description: The unique identifier of the institution.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Institution\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Get institution\n      tags:\n        - Institutions\n    put:\n      description: Updates the title and currency code for an institution.\n      parameters:\n        - description: The unique identifier of the institution.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                currency_code:\n                  description: A new currency code for the institution.\n                  example: NZD\n                  type: string\n                title:\n                  description: A new title for the institution.\n                  example: Bank of Foo\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Institution\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Update institution\n      tags:\n        - Institutions\n  \"/institutions/{id}/accounts\":\n    get:\n      description: Lists accounts belonging to an institution by its ID.\n      parameters:\n        - description: The unique identifier of the institution.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Account\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List accounts in institution\n      tags:\n        - Accounts\n  /me:\n    get:\n      description: Gets the user that corresponds to the access token used in the request.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Success\n      summary: Get the authorised user\n      tags:\n        - Users\n  \"/transaction_accounts/{id}\":\n    get:\n      description: Gets a transaction account by its ID.\n      parameters:\n        - description: The unique identifier of the transaction account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionAccount\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Get transaction account\n      tags:\n        - Transaction Accounts\n    put:\n      description: Change which institution the transaction account belongs to.\n      parameters:\n        - description: The unique identifier of the transaction account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                institution_id:\n                  description: The unique identifier of a new institution for the transaction account.\n                  example: 42\n                  type: integer\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionAccount\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Update transaction account\n      tags:\n        - Transaction Accounts\n  \"/transaction_accounts/{id}/transactions\":\n    get:\n      description: Lists transactions belonging to a transaction account by its ID.\n      parameters:\n        - description: The unique identifier of the transaction account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Return only transactions on or after this date. Required if `end_date` is provided. If not provided, defaults to the furtherest date allowed by the user's subscription.\n          example: 2016-11-01\n          in: query\n          name: start_date\n          required: false\n          schema:\n            type: string\n        - description: Return transactions that fall on or before this date. Required if `start_date` is provided. If not provided, defaults to today's date.\n          example: 2016-11-30\n          in: query\n          name: end_date\n          required: false\n          schema:\n            type: string\n        - description: If set, will return only uncategorised results.\n          example: 1\n          in: query\n          name: only_uncategorised\n          required: false\n          schema:\n            type: integer\n        - description: Only return transactions of this type.\n          example: debit\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - debit\n              - credit\n            type: string\n        - description: Return transactions matching a keyword search string. The provided string is matched against the transaction amount, account name, payee, category title, note, labels, and the date in yyyy-mm-dd format.\n          example: Paypal\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: Choose a particular page of the results.\n          example: 3\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n                type: array\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List transactions in transaction account\n      tags:\n        - Transactions\n    post:\n      description: Creates a transaction in a transaction account by its ID.\n      parameters:\n        - description: The unique identifier of the transaction account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                amount:\n                  description: The amount of the transaction. A positive amount is a credit, and a negative amount is a debit.\n                  example: 11.5\n                  type: number\n                category_id:\n                  description: The unique identifier of a category for the transaction.\n                  example: 42\n                  type: integer\n                cheque_number:\n                  description: A cheque number for the transaction.\n                  type: string\n                date:\n                  description: The date when the transaction occurred.\n                  example: 2018-02-27\n                  type: string\n                is_transfer:\n                  description: Whether the transaction should be indicated as a transfer.\n                  example: false\n                  type: boolean\n                labels:\n                  description: A set of comma-separated labels for the transaction.\n                  example: lunch,mexican\n                  type: string\n                memo:\n                  description: A memo for the transaction.\n                  type: string\n                note:\n                  description: A note for the transaction.\n                  example: I really enjoyed the loaded corn chips\n                  type: string\n                payee:\n                  description: The payee/merchant of the transaction.\n                  example: Tex Otago\n                  type: string\n              required:\n                - payee\n                - amount\n                - date\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Create a transaction in transaction account\n      tags:\n        - Transactions\n  \"/transactions/{id}\":\n    get:\n      description: Gets a transaction by its ID.\n      parameters:\n        - description: The unique identifier of the transaction.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Get a transaction\n      tags:\n        - Transactions\n    put:\n      description: Updates a transaction by its ID.\n      parameters:\n        - description: A new set of labels for the transaction.\n          example: foo,bar,baz\n          in: query\n          name: labels\n          required: false\n          schema:\n            description: A new comma-separated set of labels for the transaction.\n            type: string\n        - description: The unique identifier of the transaction.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                amount:\n                  description: A new amount for the transaction.\n                  example: 225\n                  type: number\n                category_id:\n                  description: The unique identifier of a new category for the transaction.\n                  example: 42\n                  type: integer\n                cheque_number:\n                  description: A new cheque number for the transaction.\n                  example: \"503113643691\"\n                  type: string\n                date:\n                  description: A new date for the transaction.\n                  example: 2018-02-27\n                  type: string\n                is_transfer:\n                  description: Whether the transaction is a transfer or not.\n                  example: false\n                  type: boolean\n                memo:\n                  description: A new memo for the transaction.\n                  example: Rent\n                  type: string\n                note:\n                  description: A new note for the transaction.\n                  type: string\n                payee:\n                  description: A new payee for the transaction.\n                  example: Bill\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Update a transaction\n      tags:\n        - Transactions\n  \"/transactions/{id}/attachments\":\n    get:\n      description: Lists attachments belonging to a transaction by their ID.\n      parameters:\n        - description: The unique identifier of the transaction.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Attachment\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List attachments in transaction\n      tags:\n        - Attachments\n    post:\n      description: Assigns an attachment to the transaction by their ID.\n      parameters:\n        - description: The unique identifier of the transaction.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                attachment_id:\n                  description: The unique identifier of the attachment.\n                  example: 1438154\n                  type: integer\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Assigns attachment to transaction\n      tags:\n        - Attachments\n  \"/transactions/{transaction_id}/attachments/{attachment_id}\":\n    delete:\n      description: Unassigns a particular attachment by its ID from the transaction ID. This does not delete the attachment, it only removes its association from the transaction.\n      parameters:\n        - description: The unique identifier of the transaction.\n          example: 42\n          in: path\n          name: transaction_id\n          required: true\n          schema:\n            type: integer\n        - description: The unique identifier of the attachment.\n          example: 1438154\n          in: path\n          name: attachment_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Unassigns attachment in transaction\n      tags:\n        - Attachments\n  \"/users/{id}\":\n    get:\n      description: Gets a user by ID. You must be authorised as the target user in order to make this request.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Success\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Get user\n      tags:\n        - Users\n    put:\n      description: Updates the user by their ID. You must be authorised as the target user in order to make this request.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                always_show_base_currency:\n                  description: Whether the user wishes to have all monetary values converted to their base currency.\n                  example: true\n                  type: boolean\n                base_currency_code:\n                  description: A new base currency code for the user.\n                  example: nzd\n                  type: string\n                beta_user:\n                  description: Whether the user is a beta user, and wishes to try out new features.\n                  example: true\n                  type: boolean\n                email:\n                  description: A new email address for the user.\n                  example: foo@bar.com\n                  type: string\n                name:\n                  description: A new name for the user.\n                  example: John Appleseed\n                  type: string\n                time_zone:\n                  description: A new time zone for the user.\n                  example: Auckland\n                  type: string\n                week_start_day:\n                  description: The day of the week the user wishes their calendars to start on. A number between 0 and 6, where 0 is Sunday and 6 is Saturday.\n                  example: 1\n                  type: integer\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Update user\n      tags:\n        - Users\n  \"/users/{id}/accounts\":\n    get:\n      description: Lists all accounts belonging to the user by their ID.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Account\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List accounts in user\n      tags:\n        - Accounts\n    post:\n      description: Creates and returns an account belonging to the user by their ID.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                currency_code:\n                  description: A currency code for the account.\n                  example: NZD\n                  type: string\n                institution_id:\n                  description: The ID of the institution to create this account in.\n                  example: 42\n                  type: integer\n                title:\n                  description: A title for the account.\n                  example: Foo\n                  type: string\n                type:\n                  description: The type of the account.\n                  enum:\n                    - bank\n                    - credits\n                    - loans\n                    - mortgage\n                    - stocks\n                    - vehicle\n                    - property\n                    - other_asset\n                    - other_liability\n                  example: bank\n                  type: string\n              required:\n                - institution_id\n                - title\n                - currency_code\n                - type\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Create an account in user\n      tags:\n        - Accounts\n    put:\n      description: Updates the display order of accounts belonging to the user, by accepting an array of accounts in their new display order.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                accounts:\n                  description: List the account objects in their new display order.\n                  items:\n                    $ref: \"#/components/schemas/Account\"\n                  type: array\n              required:\n                - accounts\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Account\"\n                type: array\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Update the display order of accounts in user\n      tags:\n        - Accounts\n  \"/users/{id}/attachments\":\n    get:\n      description: Lists attachments belonging to a user by their ID.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: If set, returns unassigned attachments, that are available for assigning to a transaction.\n          example: 1\n          in: query\n          name: unassigned\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Attachment\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: Lists attachments in user\n      tags:\n        - Attachments\n    post:\n      description: Creates an attachment belonging to the user by their ID.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                file_data:\n                  description: The base64-encoded contents of the source file. The supported file types are png, jpg, pdf, xls, xlsx, doc, docx.\n                  format: base64\n                  type: string\n                file_name:\n                  description: The file name of the attachment.\n                  example: taxi.png\n                  type: string\n                title:\n                  description: The title of the attachment. If the title is blank or not provided, the title will derived from the file name.\n                  example: Invoice for taxi\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Create attachment in user\n      tags:\n        - Attachments\n  \"/users/{id}/budget\":\n    get:\n      description: Lists the user's budget, consisting of one or more budget analysis packages, one per category. Akin to the list on the Budget page in PocketSmith.\n      parameters:\n        - description: The unique identifier of the account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Whether parent categories should have their children rolled up into them. When used, the children will still appear in the collection on their own, but their actual and forecast figures will be rolled up to the root parent.\n          example: true\n          in: query\n          name: roll_up\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BudgetAnalysisPackage\"\n                type: array\n          description: Success\n      summary: List budget for user\n      tags:\n        - Budgeting\n  \"/users/{id}/budget_summary\":\n    get:\n      description: Get the user's budget summary, containing an expense and income analysis for all categories (excluding transfer categories) for the given period and date range. Akin to the overall budget shown on the Budget page in PocketSmith.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible.\n          example: weeks\n          in: query\n          name: period\n          required: true\n          schema:\n            enum:\n              - weeks\n              - months\n              - years\n              - event\n            type: string\n        - description: The period interval, e.g. if the interval is 2 and the period is weeks, the budget will be analysed fortnightly.\n          example: 2\n          in: query\n          name: interval\n          required: true\n          schema:\n            type: integer\n        - description: The date to start analysing the budget from. This will be bumped out to make full periods as necessary.\n          example: 2016-11-01\n          in: query\n          name: start_date\n          required: true\n          schema:\n            type: string\n        - description: The date to stop analysing the budget from. This will be bumped out to make full periods as necessary.\n          example: 2016-11-30\n          in: query\n          name: end_date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BudgetAnalysisPackage\"\n                type: array\n          description: Success\n      summary: Get budget summary for user\n      tags:\n        - Budgeting\n  \"/users/{id}/categories\":\n    get:\n      description: Lists all categories belonging to a user by their ID.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Category\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List categories in user\n      tags:\n        - Categories\n    post:\n      description: Creates a category belonging to the user by their ID.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                colour:\n                  description: A CSS-style hex colour for the category.\n                  example: \"#e0e7ff\"\n                  type: string\n                parent_id:\n                  description: The unique identifier of a category to be the parent of this category.\n                  example: 42\n                  type: integer\n                title:\n                  description: A title for the category.\n                  example: Food\n                  type: string\n              required:\n                - title\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Create category in user\n      tags:\n        - Categories\n  \"/users/{id}/category_rules\":\n    get:\n      description: Lists all category rules belonging to a user by their ID.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoryRule\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List category rules in user\n      tags:\n        - Category Rules\n  \"/users/{id}/institutions\":\n    get:\n      description: Lists all the institutions belonging to the user.\n      parameters:\n        - description: The unique identifier of the user\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Institution\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List institutions in user\n      tags:\n        - Institutions\n    post:\n      description: Creates an institution belonging to a user.\n      parameters:\n        - description: The unique identifier of the user\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                currency_code:\n                  description: A currency code for the institution.\n                  example: NZD\n                  type: string\n                title:\n                  description: A title for the institution.\n                  example: Bank of Foo\n                  type: string\n              required:\n                - title\n                - currency_code\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Institution\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"422\":\n          $ref: \"#/components/responses/422\"\n      summary: Create institution in user\n      tags:\n        - Institutions\n  \"/users/{id}/transaction_accounts\":\n    get:\n      description: List all transaction accounts belonging to a user.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TransactionAccount\"\n                type: array\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List transaction accounts in user\n      tags:\n        - Transaction Accounts\n  \"/users/{id}/transactions\":\n    get:\n      description: Lists transactions belonging to a user by their ID.\n      parameters:\n        - description: The unique identifier of the account.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Return only transactions on or after this date. Required if end_date is provided. If not provided, defaults to the furtherest date allowed by the user's subscription.\n          example: 2016-11-01\n          in: query\n          name: start_date\n          required: false\n          schema:\n            type: string\n        - description: Return transactions that fall on or before this date. Required if start_date is provided. If not provided, defaults to today's date.\n          example: 2016-11-30\n          in: query\n          name: end_date\n          required: false\n          schema:\n            type: string\n        - description: If set, will return only uncategorised results.\n          example: 1\n          in: query\n          name: only_uncategorised\n          required: false\n          schema:\n            type: integer\n        - description: Only return transactions of this type.\n          example: debit\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - debit\n              - credit\n            type: string\n        - description: Return transactions matching a keyword search string. The provided string is matched against the transaction amount, account name, payee, category title, note, labels, and the date in yyyy-mm-dd format.\n          example: Paypal\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: Choose a particular page of the results.\n          example: 3\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n                type: array\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      summary: List transactions in user\n      tags:\n        - Transactions\n  \"/users/{id}/trend_analysis\":\n    get:\n      description: Get an income and/or expense budget analysis for the given date range and period across any number of categories and scenarios. Akin to the Trends page in PocketSmith.\n      parameters:\n        - description: The unique identifier of the user.\n          example: 42\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible.\n          example: weeks\n          in: query\n          name: period\n          required: true\n          schema:\n            enum:\n              - weeks\n              - months\n              - years\n              - event\n            type: string\n        - description: The period interval, e.g. if the interval is 2 and the period is weeks, the budget will be analysed fortnightly.\n          example: true\n          in: query\n          name: interval\n          required: true\n          schema:\n            type: integer\n        - description: The date to start analysing the budget from. This will be bumped out to make full periods as necessary.\n          example: 2016-11-01\n          in: query\n          name: start_date\n          required: true\n          schema:\n            type: string\n        - description: The date to stop analysing the budget from. This will be bumped out to make full periods as necessary.\n          example: 2016-11-30\n          in: query\n          name: end_date\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of category IDs to analyse.\n          example: 42,49\n          in: query\n          name: categories\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of scenario IDs to analyse. You're likely going to want to include all a user's scenarios here, unless you have reason to only analyse for a subset of scenarios. Regardless of what scenarios are analysed, all actuals (transactions) across all accounts will be included.\n          example: 11,29\n          in: query\n          name: scenarios\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BudgetAnalysisPackage\"\n                type: array\n          description: Success\n      summary: Get trend analysis for user\n      tags:\n        - Budgeting\ncomponents:\n  responses:\n    \"400\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Bad Request\n    \"403\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Not Allowed\n    \"404\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Not Found\n    \"422\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Validation Error\n  schemas:\n    Account:\n      properties:\n        created_at:\n          description: When the account was created.\n          example: 2018-02-27\n          type: string\n        currency_code:\n          description: The currency code for the account.\n          example: NZD\n          type: string\n        current_balance:\n          description: The current balance of the account.\n          example: 2694.39\n          type: number\n        current_balance_date:\n          description: The date of the current balance.\n          example: 2018-02-27\n          type: string\n        current_balance_exchange_rate:\n          description: The exchange rate between the account's currency and the user's base currency, when different. If the currencies are the same, null is returned.\n          example: 1.5\n          type: number\n        current_balance_in_base_currency:\n          description: The current balance of the account in the user's base currency.\n          example: 4041.59\n          type: number\n        id:\n          description: The unique identifier of the account.\n          example: 42\n          type: integer\n        is_net_worth:\n          description: Whether the account is a net worth asset.\n          example: false\n          type: boolean\n        primary_scenario:\n          $ref: \"#/components/schemas/Scenario\"\n        primary_transaction_account:\n          $ref: \"#/components/schemas/TransactionAccount\"\n        safe_balance:\n          description: The current safe balance, if safe balance is activated on the account. If safe balance is not activated, then null is returned.\n          example: 2694.39\n          type: number\n        safe_balance_in_base_currency:\n          description: The current safe balance in the user's base currency, if safe balance is activated on the account. If safe balance is not activated, then null is returned.\n          example: 4041.59\n          type: number\n        scenarios:\n          description: All scenarios that compose the account, including the primary.\n          items:\n            $ref: \"#/components/schemas/Scenario\"\n          type: array\n        title:\n          description: The title of the account.\n          example: Bank of Foo\n          type: string\n        transaction_accounts:\n          description: All transaction accounts that compose the account, including the primary.\n          items:\n            $ref: \"#/components/schemas/TransactionAccount\"\n          type: array\n        type:\n          description: The type of the account.\n          enum:\n            - bank\n            - credits\n            - cash\n            - stocks\n            - mortgage\n            - loans\n            - vehicle\n            - property\n            - insurance\n            - other_liability\n          example: bank\n          type: string\n        updated_at:\n          description: When the account was last updated.\n          example: 2018-02-27\n          type: string\n      type: object\n    Attachment:\n      properties:\n        content_type:\n          description: The content type of the attachment.\n          example: image/png\n          type: string\n        content_type_meta:\n          properties:\n            description:\n              description: The content type description of the attachment\n              example: PNG image\n              type: string\n            extension:\n              description: The extension type of the attachment\n              example: png\n              type: string\n            title:\n              description: The content type title of the attachment\n              example: PNG\n              type: string\n          type: object\n        created_at:\n          description: When the attachment was created\n          example: 2015-08-16T02:17:02Z\n          format: ISO 8601 datetime format\n          type: string\n        file_name:\n          description: The file name of the attachment\n          example: taxi.png\n          type: string\n        id:\n          description: The unique identifier of the attachment\n          example: 1438154\n          type: integer\n        original_url:\n          description: The url of the attachment\n          example: https://image.com/image.png\n          type: string\n        title:\n          description: The title of the attachment. If blank or not provided, the title will be derived from the file name.\n          example: Invoice for taxi\n          type: string\n        type:\n          description: The type of attachment\n          example: image\n          type: string\n        updated_at:\n          description: When the attachment was last updated\n          example: 2015-08-16T02:17:02Z\n          format: ISO 8601 datetime format\n          type: string\n        variants:\n          properties:\n            large_url:\n              description: The url of the large version of the attachment\n              example: https://image.com/image.png\n              type: string\n            thumb_url:\n              description: The url of the thumb version of the attachment\n              example: https://image.com/image.png\n              type: string\n          type: object\n      type: object\n    BudgetAnalysis:\n      properties:\n        average_actual_amount:\n          description: The average actual (transactions) amount across all periods.\n          example: -42.3\n          type: number\n        average_forecast_amount:\n          description: The average budgeted amount across all periods.\n          example: -60\n          type: number\n        end_date:\n          description: The end date of the budget analysis.\n          example: 2016-11-30\n          type: string\n        periods:\n          description: The period analyses that this budget analysis comprises.\n          items:\n            $ref: \"#/components/schemas/Period\"\n          type: array\n        start_date:\n          description: The start date of the budget analysis.\n          example: 2016-11-01\n          type: string\n        total_actual_amount:\n          description: The total actual (transactions) amount across all periods.\n          example: -42.3\n          type: number\n        total_forecast_amount:\n          description: The total budgeted amount across all periods.\n          example: -60\n          type: number\n        total_over_by:\n          description: The total amount the budget was exceeded across all periods.\n          example: 0\n          type: number\n        total_under_by:\n          description: The total amount the budget was under by across all periods.\n          example: 17.7\n          type: number\n      type: object\n    BudgetAnalysisPackage:\n      properties:\n        category:\n          $ref: \"#/components/schemas/Category\"\n        expense:\n          $ref: \"#/components/schemas/BudgetAnalysis\"\n        income:\n          $ref: \"#/components/schemas/BudgetAnalysis\"\n        is_transfer:\n          description: Whether the expense budget analysis looks like a transfer to the income budget analysis, based on a number of heuristics.\n          example: false\n          type: boolean\n      type: object\n    Category:\n      properties:\n        children:\n          description: The category's child categories.\n          items:\n            $ref: \"#/components/schemas/Category\"\n          type: array\n        colour:\n          description: The colour for the category.\n          example: \"#00ff00\"\n          format: CSS-style hex triplet\n          type: string\n        created_at:\n          description: When the category was created.\n          example: 2015-08-16T02:17:02Z\n          format: ISO 8601 datetime format\n          type: string\n        id:\n          description: The unique identifier of the category.\n          example: 1438154\n          type: integer\n        is_transfer:\n          description: Whether this category has been marked as a transfer category.\n          example: false\n          type: boolean\n        parent_id:\n          description: The unique identifier of the parent category of this category, or null if this category has no parent (i.e. is a top-level category)\n          example: 42\n          type: integer\n        title:\n          description: The title of the category.\n          example: Beer\n          type: string\n        updated_at:\n          description: When the category was last updated.\n          example: 2015-08-16T02:17:02Z\n          format: ISO 8601 datetime format\n          type: string\n      type: object\n    CategoryRule:\n      properties:\n        category:\n          $ref: \"#/components/schemas/Category\"\n        created_at:\n          description: When the category rule was created.\n          example: 2019-07-09T10:06:02Z\n          format: ISO 8601 datetime format\n          type: string\n        id:\n          description: The unique identifier of the category rule.\n          example: 1438154\n          type: integer\n        payee_matches:\n          description: The keyword/s to match the transactions payees.\n          example: Countdown\n          type: string\n        updated_at:\n          description: When the category rule was last updated.\n          example: 2019-07-09T10:06:02Z\n          format: ISO 8601 datetime format\n          type: string\n      type: object\n    Error:\n      properties:\n        error:\n          description: A message describing the error that occurred.\n          example: A message describing the error that occurred.\n          type: string\n      type: object\n    Institution:\n      properties:\n        created_at:\n          description: When the institution was created.\n          example: 2015-04-21T22:42:22Z\n          type: string\n        currency_code:\n          description: The currency code of the institution.\n          example: NZD\n          type: string\n        id:\n          description: The unique identifier of the institution.\n          example: 57\n          type: integer\n        title:\n          description: The title of the institution.\n          example: Bank of Foo\n          type: string\n        updated_at:\n          description: When the institution was last updated.\n          example: 2015-04-21T22:42:22Z\n          type: string\n      type: object\n    Period:\n      properties:\n        actual_amount:\n          description: The sum of all actuals (transactions) in the period.\n          example: -42.3\n          type: number\n        current:\n          description: Whether this period is current, such that the current date (in the user's time zone) falls within the date range.\n          example: true\n          type: boolean\n        end_date:\n          description: The end date of the period.\n          example: 2016-11-30\n          type: string\n        forecast_amount:\n          description: The sum of all forecast sources (budget events) in the period, for comparison against the actual amount.\n          example: -60\n          type: number\n        over_budget:\n          description: Whether the budget has been exceeded in the period.\n          example: false\n          type: boolean\n        over_by:\n          description: How much the budget has been exceeded by in the period.\n          example: 0\n          type: number\n        percentage_used:\n          description: The percentage of the budget that has been used in the period.\n          example: 70.5\n          type: number\n        refund_amound:\n          description: This attribute tracks the amount that has been refunded or deducted to the actual amount. When a category is set to \"always expense\", any credit transactions are treated as refunds and when set to \"always income\", any debit transactions are treated as deductions.\n          example: 5.6\n          type: number\n        start_date:\n          description: The start date of the period.\n          example: 2016-11-01\n          type: string\n        under_budget:\n          description: Whether the budget has not been exceeded in the period.\n          example: true\n          type: boolean\n        under_by:\n          description: How much there is left in the budget for the period.\n          example: 17.7\n          type: number\n      type: object\n    Scenario:\n      properties:\n        achieve_date:\n          description: For goals, the date that they should be achieved by.\n          type: string\n        closing_balance:\n          description: The closing balance of the scenario.\n          example: 5431.2\n          type: number\n        closing_balance_date:\n          description: The date of the closing balance.\n          example: 2018-02-27\n          type: string\n        created_at:\n          description: When the scenario was created.\n          example: 2015-04-21T22:42:22Z\n          type: string\n        current_balance:\n          description: The current balance of the scenario.\n          example: 5431.2\n          type: number\n        current_balance_date:\n          description: The date of the current balance.\n          example: 2018-02-27\n          type: string\n        current_balance_exchange_rate:\n          description: The exchange rate between the scenario's currency and the user's base currency, when different. If the currencies are the same, null is returned.\n          example: 1.5\n          type: number\n        current_balance_in_base_currency:\n          description: The current balance of the scenario in the user's base currency.\n          example: 8146.8\n          type: number\n        description:\n          description: A short description of what the scenario is modelling.\n          type: string\n        id:\n          description: The unique identifier of the scenario.\n          example: 42\n          type: integer\n        interest_rate:\n          description: The amount of interest to apply to the balance. Will apply periodically depending on what `interest_rate_repeat_id` is set to.\n          example: 2.4\n          type: number\n        interest_rate_repeat_id:\n          description: A number representing how often the interest should be applied. 0 is used for no interest, 2 is weekly, 3 is fortnightly, 4 is monthly, 5 is yearly and 7 for quarterly.\n          example: 4\n          type: integer\n        maximum-value:\n          example: 42\n          type: number\n        minimum-value:\n          example: 4000\n          type: number\n        safe_balance:\n          description: The current safe balance in the user's base currency, if safe balance is activated on the account associated with the scenario. If safe balance is not activated, then null is returned.\n          example: 5431.2\n          type: number\n        safe_balance_in_base_currency:\n          description: The current safe balance in the user's base currency, if safe balance is activated on the account associated with the scenario. If safe balance is not available, then null is returned.\n          example: 8146.8\n          type: number\n        starting_balance:\n          description: The starting balance of the scenario.\n          example: 2450\n          type: number\n        starting_balance_date:\n          description: The date of the starting balance.\n          example: 2018-02-27\n          type: string\n        title:\n          description: The title of the scenario.\n          example: Wedding\n          type: string\n        type:\n          description: The type of the scenario.\n          enum:\n            - no-interest\n            - savings\n            - debt\n          example: no-interest\n          type: string\n        updated_at:\n          description: When the scenario was last updated.\n          example: 2015-04-21T22:42:22Z\n          type: string\n      type: object\n    Transaction:\n      properties:\n        amount:\n          example: 34.6\n          type: number\n        category:\n          $ref: \"#/components/schemas/Category\"\n        cheque_number:\n          example: \"503113643691\"\n          type: string\n        closing_balance:\n          description: The closing balance of the account at the transaction.\n          example: 4312.32\n          type: number\n        date:\n          description: The date the transaction took place.\n          example: 2018-02-27\n          type: string\n        id:\n          description: The unique identifier of the transaction.\n          example: 42\n          type: integer\n        is_transfer:\n          description: Whether the transaction was a transfer.\n          example: false\n          type: boolean\n        labels:\n          example:\n            - foo\n            - bar\n            - baz\n          items:\n            type: string\n          type: array\n        memo:\n          example: An example memo\n          type: string\n        note:\n          example: I spent way too much on cheese here\n          type: string\n        original_payee:\n          description: The payee the transaction was created with.\n          example: CARD4083ST MARTINS NEW WORLD CHRISTCHURCH\n          type: string\n        payee:\n          description: The payee/merchant of the transaction.\n          example: St Martins New World\n          type: string\n        status:\n          description: The status of the transaction. Pending transactions are temporary and may be superseded later by their posted counterparts, which are permanent.\n          enum:\n            - pending\n            - posted\n          type: string\n        transaction_account:\n          $ref: \"#/components/schemas/TransactionAccount\"\n        type:\n          description: Whether the transaction is a debit or a credit\n          enum:\n            - debit\n            - credit\n          example: credit\n          type: string\n        upload_source:\n          description: Where the transaction came from.\n          example: file\n          type: string\n      type: object\n    TransactionAccount:\n      properties:\n        created_at:\n          example: 2015-03-17T02:42:10Z\n          type: string\n        currency_code:\n          description: The currency that the account is in. This is determined by the account that the transaction account belongs to.\n          example: NZD\n          type: string\n        current_balance:\n          example: 2694.39\n          type: number\n        current_balance_date:\n          example: 2015-07-03\n          type: string\n        current_balance_exchange_rate:\n          description: The exchange rate between the transaction account's currency and the user's base currency, when different. If the currencies are the same, null is returned.\n          example: 1.5\n          type: number\n        current_balance_in_base_currency:\n          description: The current balance of the transaction account in the user's base currency.\n          example: 4041.59\n          type: number\n        id:\n          example: 96027\n          type: integer\n        institution:\n          $ref: \"#/components/schemas/Institution\"\n        name:\n          example: Sample Credit\n          type: string\n        number:\n          example: ASBCRD44554\n          type: string\n        safe_balance:\n          description: The current safe balance, if safe balance is activated and available for the transaction account. If safe balance is not available, then null is returned.\n          example: 2694.39\n          type: number\n        safe_balance_in_base_currency:\n          description: The current safe balance in the user's base currency, if safe balance is activated and available for the transaction account. If safe balance is not available, then null is returned.\n          example: 4041.59\n          type: number\n        starting_balance:\n          example: 3547.45\n          type: number\n        starting_balance_date:\n          example: 2015-03-15\n          type: string\n        type:\n          description: The type of the transaction account.\n          enum:\n            - bank\n            - credits\n            - cash\n            - stocks\n            - mortgage\n            - loans\n            - vehicle\n            - property\n            - insurance\n            - other_liability\n          example: bank\n          type: string\n        updated_at:\n          example: 2015-07-02T22:14:49Z\n          type: string\n      type: object\n    User:\n      properties:\n        always_show_base_currency:\n          description: Whether the user wants to see all accounts in their base currency instead of the native account currency.\n          example: false\n          type: boolean\n        avatar_url:\n          description: The URL to the user's avatar.\n          example: https://image.com/image.png\n          type: string\n        base_currency_code:\n          description: The user's base currency.\n          example: NZD\n          type: string\n        beta_user:\n          description: Whether the user has opted in to beta features.\n          example: true\n          type: boolean\n        created_at:\n          description: When the user signed up.\n          example: 2015-07-02T22:14:49Z\n          type: string\n        email:\n          description: The user's email address.\n          example: user69@sample.com\n          type: string\n        id:\n          description: The unique identifier of the user.\n          example: 42\n          type: integer\n        last_activity_at:\n          description: When the user last interacted with PocketSmith, via any application or the API.\n          example: 2015-07-02T22:14:49Z\n          type: string\n        last_logged_in_at:\n          description: When the user last logged into PocketSmith.\n          example: 2015-07-02T22:14:49Z\n          type: string\n        login:\n          description: The user's username.\n          example: sampleuser69\n          type: string\n        name:\n          description: The full name of the user, although not all users will have a name set.\n          example: Foo Barrington\n          type: string\n        time_zone:\n          description: The user's time zone.\n          example: Auckland\n          type: string\n        updated_at:\n          description: When the user was last updated.\n          example: 2015-07-02T22:14:49Z\n          type: string\n        using_multiple_currencies:\n          description: Whether the user has multiple currencies in use across their account.\n          example: true\n          type: boolean\n        week_start_day:\n          description: The day of the week the user wishes their calendars to start on. A number between 0 and 6, where 0 is Sunday and 6 is Saturday.\n          example: 1\n          type: integer\n      type: object\n  securitySchemes:\n    developerKey:\n      description: If you want to build a tool just for yourself, be it a desktop widget to display your balances or a tool to import transactions from a bank without a bank feed, you can use our developer keys feature. You can issue yourself a key which will give you persistent API access to just your account. You should rotate your keys regularly.\n      in: header\n      name: X-Developer-Key\n      type: apiKey\n    oauth2:\n      description: If you want to a create an app for PocketSmith that other PocketSmith users can use, you'll be using OAuth 2. To register an app with PocketSmith, please email us on api@pocketsmith.com. Let us know a bit about yourself and what you plan on building. When approved, you will be provided with your client_id and client_secret to start using OAuth. Then, check out our guide for integrating OAuth to get started.\n      flows:\n        authorizationCode:\n          authorizationUrl: https://my.pocketsmith.com/oauth/authorize\n          scopes:\n            accounts.read: Access to list and view transaction accounts\n            accounts.write: Access to update and delete transaction accounts\n            attachments.read: Access to view attachments\n            attachments.write: Ability to create, update and delete attachments\n            categories.read: Access to view categories\n            categories.write: Ability to edit and delete categories\n            transactions.read: Access to list and view accounts and transactions\n            transactions.write: Access to create, update and delete transactions\n            user.read: Access the user's details and preferences\n            user.write: Access to change the user's details and preferences\n          tokenUrl: https://api.pocketsmith.com/v2/oauth/access_token\n      type: oauth2\nx-samples-languages:\n  - curl\n  - node\n  - javascript\n  - php\n  - python\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/pocketsmith.com/2.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/pocketsmith.com/2.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}