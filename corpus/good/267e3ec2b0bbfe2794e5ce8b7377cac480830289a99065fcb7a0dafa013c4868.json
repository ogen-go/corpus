{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/datawhalechina/whale-web"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 11991,
			"content": "openapi: 3.0.3\ninfo:\n  title: Bluewhale\n  description: 'This is API specifications for bluewhale site'\n  version: 1.0.0\nservers:\n  - url: http://127.0.0.1:4010\npaths:\n  \"/api/v1/me\":\n    get:\n      summary: get current user's profile\n      responses:\n        '200':\n          description: current user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/User\"\n                  code:\n                    type: integer\n  \"/api/v1/login\":\n    options:\n      summary: get csrf token\n      responses:\n        '200':\n          description: options\n    post:\n      summary: login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LoginForm\"\n      responses:\n        '200':\n          description: success login\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/User\"\n                  code:\n                    type: integer\n  \"/api/v1/logout\":\n    post:\n      summary: logout\n      responses:\n        '200':\n          description: success logout\n  \"/api/v1/send-verification\":\n    post:\n      summary: send verification mail\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SendVerificationForm\"\n      responses:\n        '200':\n          description: success send verification\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: integer\n                  code:\n                    type: integer\n  \"/api/v1/verify/{token}\":\n    get:\n      summary: get verified email from token\n      parameters:\n        - in: path\n          name: token\n          schema:\n            type: string\n          required: true\n          description: string token\n      responses:\n        '200':\n          description: success get verified token\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: string\n                    format: email\n                  code:\n                    type: integer\n  \"/api/v1/register\":\n    post:\n      summary: register user by token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n                password:\n                  type: string\n      responses:\n        '201':\n          description: success register user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/User\"\n                  code:\n                    type: integer\n  \"/api/v1/articles\":\n    get:\n      summary: get list of articles\n      responses:\n        '200':\n          description: success get articles\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Article\"\n                  code:\n                    type: integer\n    post:\n      summary: post one article\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Article\"\n      responses:\n        '201':\n          description: success post one article\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Article\"\n                  code:\n                    type: integer\n  \"/api/v1/articles/{pk}\":\n    summary: fetch/edit/delete one article\n    parameters:\n      - in: path\n        name: pk\n        schema:\n          type: string\n        required: true\n        description: primary key\n    get:\n      summary: fetch one article\n      responses:\n        '200':\n          description: success get one article\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Article\"\n                  code:\n                    type: integer\n    put:\n      summary: edit one article\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Article\"\n      responses:\n        '200':\n          description: success edit one article\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Article\"\n    delete:\n      summary: delete one article\n      responses:\n        '204':\n          description: success delete one article\n  \"/api/v1/users\":\n    get:\n      summary: get list of users\n      responses:\n        '200':\n          description: success get users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/User\"\n                  code:\n                    type: integer\n    post:\n      summary: add one user by admin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n      responses:\n        '201':\n          description: success add one user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/User\"\n                  code:\n                    type: integer\n  \"/api/v1/users/{pk}\":\n    summary: fetch/edit/delete one user\n    parameters:\n      - in: path\n        name: pk\n        schema:\n          type: integer\n        required: true\n        description: primary key\n    get:\n      summary: fetch one user\n      responses:\n        '200':\n          description: success get one user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/User\"\n                  code:\n                    type: integer\n    put:\n      summary: edit one user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n      responses:\n        '200':\n          description: success edit one user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n    delete:\n      summary: delete one user\n      responses:\n        '204':\n          description: success delete one user\n  \"/api/v1/competitions\":\n    get:\n      summary: get list of competitions\n      responses:\n        '200':\n          description: success get competitions\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Competition\"\n                  code:\n                    type: integer\n    post:\n      summary: post one competition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Competition\"\n      responses:\n        '201':\n          description: success post one competition\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Competition\"\n                  code:\n                    type: integer\n  \"/api/v1/competitions/{pk}\":\n    summary: fetch/edit/delete one competition\n    parameters:\n      - in: path\n        name: pk\n        schema:\n          type: string\n        required: true\n        description: primary key\n    get:\n      summary: fetch one competition\n      responses:\n        '200':\n          description: success get one competition\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Competition\"\n                  code:\n                    type: integer\n    put:\n      summary: edit one competition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Competition\"\n      responses:\n        '200':\n          description: success edit one competition\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Competition\"\n    delete:\n      summary: delete one competition\n      responses:\n        '204':\n          description: success delete one competition\ncomponents:\n  schemas:\n    CommonResponse: # common response which has data and code properties\n      type: object\n      properties:\n        data:\n          type: object\n        code:\n          type: integer\n    LoginForm:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        password:\n          type: string\n          format: password\n    SendVerificationForm:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          minimum: 1\n        email:\n          type: string\n          format: email\n        phone:\n          type: string\n        nickname:\n          type: string\n        date_joined:\n          type: string\n          format: date-time\n        last_login:\n          type: string\n          format: date-time\n        last_login_ip:\n          type: string\n          format: ipv4\n        description:\n          type: string\n        avatar: # 头像\n          type: string\n        school: # 学校\n          type: string\n        speciality: # 专业\n          type: string\n        wechat: # 微信号\n          type: string\n        company: # 公司\n          type: string\n        title: # 职位\n          type: string\n        groups:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Group\"\n    Group:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          minimum: 1\n        name:\n          type: string\n    Article:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        author:\n          type: string\n          format: email\n        title:\n          type: string\n        content:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        status:\n          type: integer\n          enum: [0,1,2]\n    Competition:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        author:\n          type: string\n          format: email\n        title:\n          type: string\n        content:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        status:\n          type: integer\n          enum: [0,1,2]\n",
			"canonicalURL": "/github.com/datawhalechina/whale-web@76f22496327bacc26c0fe56160cfaf0f213bb322/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/datawhalechina/whale-web/blob/76f22496327bacc26c0fe56160cfaf0f213bb322/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}