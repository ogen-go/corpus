{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ncov19-us/back-end"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "openapi.json",
			"byteSize": 33323,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"ncov19.us API\",\n        \"description\": \"API Support: ncov19us@gmail.com | URL: https://github.com/ncov19-us/back-end | [GNU GENERAL PUBLIC LICENSE](https://github.com/ncov19-us/back-end/blob/master/LICENSE)\",\n        \"version\": \"0.1.5\"\n    },\n    \"paths\": {\n        \"/\": {\n            \"get\": {\n                \"summary\": \"Root\",\n                \"description\": \"Root URL, reporting version and status.\\n    \",\n                \"operationId\": \"root__get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RootOutput\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/news\": {\n            \"get\": {\n                \"summary\": \"Get Gnews\",\n                \"description\": \"Fetch US news from Google News API and return the results in JSON\\n    \",\n                \"operationId\": \"get_gnews_news_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NewsOut\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Post Gnews\",\n                \"description\": \"Fetch specific state and topic news from Google News API and return the\\nresults in JSON\\n\\nInput: NewsInput object schema, with state and topic attribute string\\nOutput: JSONResponse of the topics fetched\",\n                \"operationId\": \"post_gnews_news_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/NewsInput\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NewsOut\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/twitter\": {\n            \"get\": {\n                \"summary\": \"Get Twitter\",\n                \"description\": \"Fetch and return Twitter data from MongoDB connection.\\n\\n:param: none\\n:return: str\",\n                \"operationId\": \"get_twitter_twitter_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TwitterOutput\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Post Twitter\",\n                \"description\": \"Fetch and return Twitter data from MongoDB connection.\\n\\n:param: none. Two letter state abbreviation.\\n:return: str\",\n                \"operationId\": \"post_twitter_twitter_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TwitterInput\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TwitterOutput\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/county\": {\n            \"get\": {\n                \"summary\": \"Get County Data\",\n                \"description\": \"Get all US county data and return it as a big fat json string. Respond with\\n404 if run into error.\\n- Retrieves county locations, cached for 1 hour.\\n\\n:param: none.\\n:return: JSONResponse\",\n                \"operationId\": \"get_county_data_county_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CountyOut\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Post County\",\n                \"description\": \"Get all US county data and return it as a big fat json string. Respond with\\n404 if run into error.\\n- Retrieves county locations, cached for 1 hour.\\n\\n:param: none.\\n:return: JSONResponse\",\n                \"operationId\": \"post_county_county_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/CountyInput\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CountyOut\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/state\": {\n            \"post\": {\n                \"summary\": \"Post State\",\n                \"description\": \"Fetch state level data time series for a single state, ignoring the \\nunattributed and out of state cases.\\n\\nInput: two letter states code\",\n                \"operationId\": \"post_state_state_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/StateInput\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/StateOutput\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/country\": {\n            \"post\": {\n                \"summary\": \"Get Country\",\n                \"description\": \"Fetch country level data time series for a single country\\n\\nInput: Two letter country alpha2Code\",\n                \"operationId\": \"get_country_country_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/CountryInput\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CountryOutput\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/stats\": {\n            \"get\": {\n                \"summary\": \"Get Stats\",\n                \"description\": \"Get overall tested, confirmed, and deaths stats from the database\\nand return it as a json string. For the top bar.\\n\\n:param: none.\\n:return: JSONResponse\",\n                \"operationId\": \"get_stats_stats_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/StatsOutput\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Post Stats\",\n                \"description\": \"Get overall tested, confirmed, and deaths stats from the database\\nand return it as a json string. For the top bar.\\n\\n:param: Stats\\n:return: JSONResponse\",\n                \"operationId\": \"post_stats_stats_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/StatsInput\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/StatsOutput\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Message\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"Country\": {\n                \"title\": \"Country\",\n                \"required\": [\n                    \"Date\",\n                    \"Confirmed\",\n                    \"Deaths\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Date\": {\n                        \"title\": \"Date\",\n                        \"type\": \"string\"\n                    },\n                    \"Confirmed\": {\n                        \"title\": \"Confirmed\",\n                        \"type\": \"integer\"\n                    },\n                    \"Deaths\": {\n                        \"title\": \"Deaths\",\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"CountryInput\": {\n                \"title\": \"CountryInput\",\n                \"required\": [\n                    \"alpha2Code\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"alpha2Code\": {\n                        \"title\": \"Alpha2Code\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"CountryOutput\": {\n                \"title\": \"CountryOutput\",\n                \"required\": [\n                    \"success\",\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                        \"title\": \"Message\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Country\"\n                        }\n                    }\n                }\n            },\n            \"County\": {\n                \"title\": \"County\",\n                \"required\": [\n                    \"confirmed\",\n                    \"new\",\n                    \"death\",\n                    \"new_death\",\n                    \"latitude\",\n                    \"longitude\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"county_name\": {\n                        \"title\": \"County Name\",\n                        \"type\": \"string\",\n                        \"default\": \"New York\"\n                    },\n                    \"state_name\": {\n                        \"title\": \"State Name\",\n                        \"type\": \"string\",\n                        \"default\": \"New York\"\n                    },\n                    \"confirmed\": {\n                        \"title\": \"Confirmed\",\n                        \"type\": \"integer\"\n                    },\n                    \"new\": {\n                        \"title\": \"New\",\n                        \"type\": \"integer\"\n                    },\n                    \"death\": {\n                        \"title\": \"Death\",\n                        \"type\": \"integer\"\n                    },\n                    \"new_death\": {\n                        \"title\": \"New Death\",\n                        \"type\": \"integer\"\n                    },\n                    \"fatality_rate\": {\n                        \"title\": \"Fatality Rate\",\n                        \"type\": \"string\",\n                        \"default\": \"1.2%\"\n                    },\n                    \"latitude\": {\n                        \"title\": \"Latitude\",\n                        \"type\": \"number\"\n                    },\n                    \"longitude\": {\n                        \"title\": \"Longitude\",\n                        \"type\": \"number\"\n                    },\n                    \"last_update\": {\n                        \"title\": \"Last Update\",\n                        \"type\": \"string\",\n                        \"default\": \"2020-03-30 22:53 EDT\"\n                    }\n                }\n            },\n            \"CountyInput\": {\n                \"title\": \"CountyInput\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"state\": {\n                        \"title\": \"State\",\n                        \"type\": \"string\",\n                        \"default\": \"CA\"\n                    },\n                    \"county\": {\n                        \"title\": \"County\",\n                        \"type\": \"string\",\n                        \"default\": \"Orange\"\n                    }\n                }\n            },\n            \"CountyOut\": {\n                \"title\": \"CountyOut\",\n                \"required\": [\n                    \"success\",\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                        \"title\": \"Message\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/County\"\n                        }\n                    }\n                }\n            },\n            \"HTTPValidationError\": {\n                \"title\": \"HTTPValidationError\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"detail\": {\n                        \"title\": \"Detail\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ValidationError\"\n                        }\n                    }\n                }\n            },\n            \"Message\": {\n                \"title\": \"Message\",\n                \"required\": [\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"title\": \"Message\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"News\": {\n                \"title\": \"News\",\n                \"required\": [\n                    \"title\",\n                    \"url\",\n                    \"published\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"title\": {\n                        \"title\": \"Title\",\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"title\": \"Url\",\n                        \"type\": \"string\"\n                    },\n                    \"published\": {\n                        \"title\": \"Published\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"NewsInput\": {\n                \"title\": \"NewsInput\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"state\": {\n                        \"title\": \"State\",\n                        \"type\": \"string\",\n                        \"default\": \"CA\"\n                    },\n                    \"topic\": {\n                        \"title\": \"Topic\",\n                        \"type\": \"string\",\n                        \"default\": \"Coronavirus\"\n                    }\n                }\n            },\n            \"NewsOut\": {\n                \"title\": \"NewsOut\",\n                \"required\": [\n                    \"success\",\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                        \"title\": \"Message\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/News\"\n                        }\n                    }\n                }\n            },\n            \"RootOutput\": {\n                \"title\": \"RootOutput\",\n                \"required\": [\n                    \"success\",\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                        \"title\": \"Message\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"State\": {\n                \"title\": \"State\",\n                \"required\": [\n                    \"Date\",\n                    \"Confirmed\",\n                    \"Deaths\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Date\": {\n                        \"title\": \"Date\",\n                        \"type\": \"string\"\n                    },\n                    \"Confirmed\": {\n                        \"title\": \"Confirmed\",\n                        \"type\": \"integer\"\n                    },\n                    \"Deaths\": {\n                        \"title\": \"Deaths\",\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"StateInput\": {\n                \"title\": \"StateInput\",\n                \"required\": [\n                    \"stateAbbr\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"stateAbbr\": {\n                        \"title\": \"Stateabbr\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"StateOutput\": {\n                \"title\": \"StateOutput\",\n                \"required\": [\n                    \"success\",\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                        \"title\": \"Message\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/State\"\n                        }\n                    }\n                }\n            },\n            \"Stats\": {\n                \"title\": \"Stats\",\n                \"required\": [\n                    \"tested\",\n                    \"todays_tested\",\n                    \"confirmed\",\n                    \"todays_confirmed\",\n                    \"deaths\",\n                    \"todays_deaths\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"tested\": {\n                        \"title\": \"Tested\",\n                        \"type\": \"integer\"\n                    },\n                    \"todays_tested\": {\n                        \"title\": \"Todays Tested\",\n                        \"type\": \"integer\"\n                    },\n                    \"confirmed\": {\n                        \"title\": \"Confirmed\",\n                        \"type\": \"integer\"\n                    },\n                    \"todays_confirmed\": {\n                        \"title\": \"Todays Confirmed\",\n                        \"type\": \"integer\"\n                    },\n                    \"deaths\": {\n                        \"title\": \"Deaths\",\n                        \"type\": \"integer\"\n                    },\n                    \"todays_deaths\": {\n                        \"title\": \"Todays Deaths\",\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"StatsInput\": {\n                \"title\": \"StatsInput\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"state\": {\n                        \"title\": \"State\",\n                        \"type\": \"string\",\n                        \"default\": \"CA\"\n                    }\n                }\n            },\n            \"StatsOutput\": {\n                \"title\": \"StatsOutput\",\n                \"required\": [\n                    \"success\",\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                        \"$ref\": \"#/components/schemas/Stats\"\n                    }\n                }\n            },\n            \"Tweets\": {\n                \"title\": \"Tweets\",\n                \"required\": [\n                    \"tweet_id\",\n                    \"full_text\",\n                    \"created_at\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"tweet_id\": {\n                        \"title\": \"Tweet Id\",\n                        \"type\": \"integer\"\n                    },\n                    \"full_text\": {\n                        \"title\": \"Full Text\",\n                        \"type\": \"string\"\n                    },\n                    \"created_at\": {\n                        \"title\": \"Created At\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    }\n                }\n            },\n            \"TwitterInput\": {\n                \"title\": \"TwitterInput\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"state\": {\n                        \"title\": \"State\",\n                        \"type\": \"string\",\n                        \"default\": \"CA\"\n                    }\n                }\n            },\n            \"TwitterOutput\": {\n                \"title\": \"TwitterOutput\",\n                \"required\": [\n                    \"success\",\n                    \"message\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"success\": {\n                        \"title\": \"Success\",\n                        \"type\": \"boolean\"\n                    },\n                    \"message\": {\n                        \"$ref\": \"#/components/schemas/UserTweets\"\n                    }\n                }\n            },\n            \"UserTweets\": {\n                \"title\": \"UserTweets\",\n                \"required\": [\n                    \"username\",\n                    \"full_name\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"username\": {\n                        \"title\": \"Username\",\n                        \"type\": \"string\"\n                    },\n                    \"full_name\": {\n                        \"title\": \"Full Name\",\n                        \"type\": \"string\"\n                    },\n                    \"tweets\": {\n                        \"title\": \"Tweets\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Tweets\"\n                        }\n                    }\n                }\n            },\n            \"ValidationError\": {\n                \"title\": \"ValidationError\",\n                \"required\": [\n                    \"loc\",\n                    \"msg\",\n                    \"type\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"loc\": {\n                        \"title\": \"Location\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"msg\": {\n                        \"title\": \"Message\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"title\": \"Error Type\",\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/ncov19-us/back-end@914d9436df4c88b8365fb6c1f5348d3dcbe1af03/-/blob/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/ncov19-us/back-end/blob/914d9436df4c88b8365fb6c1f5348d3dcbe1af03/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}