{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "letmc.com-customer-v2-customer-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/letmc.com-customer-v2-customer-swagger.yaml",
			"byteSize": 41599,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: agentOSSoftware\n  title: LetMC Api V2, Customer Login\n  version: v2-customer\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://twitter.com/agentOSSoftware/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://live-api.letmc.com/swagger/docs/v2-customer\n      version: \"2.0\"\n  x-providerName: letmc.com\n  x-serviceName: customer\npaths:\n  \"/v2/customer/{shortName}/branch/branches\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n      summary: All branches defined for a company\n      tags:\n        - BranchController\n  \"/v2/customer/{shortName}/branch/branches/{branchID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Branch\n          in: path\n          name: branchID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n      summary: Get a specific branch given its unique Object ID (OID)\n      tags:\n        - BranchController\n  \"/v2/customer/{shortName}/landlord/accounting\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetAccounts\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordAccountingModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordAccountingModel\"\n      summary: Get the accounting details for the landlord.\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/document\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetDocument\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The Document ID\n          in: query\n          name: ID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Download a Document\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/inventory\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetInvetoryReport\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The Tenancy ID\n          in: query\n          name: tenancyID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Generate a Inventory PDF for a tenancy\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/invoice\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetInvoice\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The invoice ID to load.\n          in: query\n          name: invoiceID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Get an invoice pdf belonging to the landlord.\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/landlordcrmentries\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetLandlordCrmEntries\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LandlordCrmEntry\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LandlordCrmEntry\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LandlordCrmEntry\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LandlordCrmEntry\"\n                type: array\n      summary: Retrieve landlord's CRM ID\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/maintenance\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetMaintenanceJobs\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordMaintenanceModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordMaintenanceModel\"\n      summary: Get Active maintenance jobs.\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/profitloss\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetProfitLossReport\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordProfitLossModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordProfitLossModel\"\n      summary: Generate a Profit and Loss Report\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/rentarrears\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetRentArrears\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordRentArrearsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordRentArrearsModel\"\n      summary: Rent Arrears\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/sas\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetSASReport\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The Tax Year End.\n          in: query\n          name: yearEnd\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Generate a Self Assessment Tax Report\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/settings\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetSettings\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordSettingsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordSettingsModel\"\n      summary: Get contact details of all linked landlords.\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/summary\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetSummaryDetails\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordSummaryModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordSummaryModel\"\n      summary: Get the summary details for the landlord.\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/tenancy\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetTenancy\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The Tenancy ID\n          in: query\n          name: tenancyID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordTenancyModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordTenancyModel\"\n      summary: Get tenancy details.\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/landlord/tenancyagreement\":\n    get:\n      deprecated: false\n      operationId: LandlordController_GetTenancyAgreementReport\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The Tenancy ID\n          in: query\n          name: tenancyID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Generate a Tenancy Agreement Copy (PDF)\n      tags:\n        - LandlordController\n  \"/v2/customer/{shortName}/photo/download\":\n    get:\n      deprecated: false\n      operationId: PhotoController_GetPhotoDownload\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the photo on the property\n          in: query\n          name: photoID\n          required: true\n          schema:\n            type: string\n        - description: An optional parameter specifying the image width\n          in: query\n          name: width\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: An optional parameter specifying the image height\n          in: query\n          name: height\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Downloads the photo of a property given the photo ID.\n      tags:\n        - PhotoController\n  \"/v2/customer/{shortName}/property/{propertyID}/photos\":\n    get:\n      deprecated: false\n      operationId: PropertyController_GetPropertiesPhotos\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Property\n          in: path\n          name: propertyID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordPhotoModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LandlordPhotoModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/LandlordPhotoModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/LandlordPhotoModelResults\"\n      summary: A collection showing all the photos linked to a specific block, property\n        or room\n      tags:\n        - PropertyController\n  \"/v2/customer/{shortName}/session\":\n    delete:\n      deprecated: false\n      operationId: SessionController_Logout\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      summary: Logout a customer previously logged in via the Login endpoint.\n      tags:\n        - SessionController\n    get:\n      deprecated: false\n      operationId: SessionController_GetSessionInfo\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n      summary: Gets information about the currently logged on customer.\n      tags:\n        - SessionController\n    post:\n      deprecated: false\n      operationId: SessionController_Login\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The user's username.\n          in: query\n          name: username\n          required: true\n          schema:\n            type: string\n        - description: The user's password.\n          in: query\n          name: password\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n      summary: Login as a customer given their username and password.\n      tags:\n        - SessionController\n  \"/v2/customer/{shortName}/session/createlandlordlogin\":\n    post:\n      deprecated: false\n      operationId: SessionController_CreateLandlordLogin\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The email address of the landlord\n          in: query\n          name: email\n          required: true\n          schema:\n            type: string\n        - description: The title of the landlord\n          in: query\n          name: title\n          required: true\n          schema:\n            type: string\n        - description: The forename of the landlord\n          in: query\n          name: forename\n          required: true\n          schema:\n            type: string\n        - description: The surname of the landlord\n          in: query\n          name: surname\n          required: true\n          schema:\n            type: string\n        - description: Address of the property linked to the landlord\n          in: query\n          name: propertyAdresss\n          required: true\n          schema:\n            type: string\n        - description: Contact details of the landlord\n          in: query\n          name: contactDetails\n          required: true\n          schema:\n            type: string\n        - description: (Optional) The branch ID linked to the login. This will determine\n            which in tray the request display in\n          in: query\n          name: branchID\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      summary: Send a request to the in-tray to create a landlord login.\n      tags:\n        - SessionController\n  \"/v2/customer/{shortName}/session/password\":\n    put:\n      deprecated: false\n      operationId: SessionController_ChangePassword\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login token returned from the /session POST call\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The customer's existing password.\n          in: query\n          name: oldPassword\n          required: true\n          schema:\n            type: string\n        - description: The customer's new password.\n          in: query\n          name: newPassword\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      summary: Change the password of a customer given their existing and new password.\n      tags:\n        - SessionController\n  \"/v2/customer/{shortName}/session/resetpassword\":\n    post:\n      deprecated: false\n      operationId: SessionController_ResetPassword\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The login Email Address.\n          in: query\n          name: email\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      summary: Reset the customer's password. An email will be sent out to reset.\n      tags:\n        - SessionController\nservers:\n  - url: https://live-api.letmc.com\ncomponents:\n  securitySchemes:\n    apiKey:\n      description: ApiKey Authentication\n      in: header\n      name: ApiKey\n      type: apiKey\n    basic:\n      description: Basic HTTP Authentication\n      type: http\n      scheme: basic\n  schemas:\n    BranchModel:\n      description: Defines a single branch of a client.\n      properties:\n        Address1:\n          description: Branch address line 1.\n          type: string\n        Address2:\n          description: Branch address line 2.\n          type: string\n        Address3:\n          description: Branch address line 3.\n          type: string\n        Address4:\n          description: Branch address line 4.\n          type: string\n        CompanyName:\n          description: The relevant company name, if not the one specified on the branch\n            then the one on company.\n          type: string\n        County:\n          description: County\n          type: string\n        EMailAddress:\n          description: Branch email address.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        FaxPhone:\n          description: Branch fax phone number.\n          type: string\n        LandPhone:\n          description: Branch land phone number.\n          type: string\n        Name:\n          description: The branch name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        Postcode:\n          description: Branch address postcode.\n          type: string\n        WebAddress:\n          description: Branch web address.\n          type: string\n      type: object\n    BranchModelResults:\n      description: Holds results from a paged query returning BranchModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/BranchModel\"\n          type: array\n      type: object\n    LandlordAccountingEntryModel:\n      description: Landlord Accounting - Finance Entry\n      properties:\n        Amount:\n          description: Amount\n          format: double\n          type: number\n        Date:\n          description: Payment Date\n          format: date-time\n          type: string\n        Description:\n          description: Description.\n          type: string\n        TransactionNumber:\n          description: Transaction Number\n          format: int32\n          type: integer\n      type: object\n    LandlordAccountingInvoiceModel:\n      description: Invoices\n      properties:\n        Date:\n          description: Payment Date\n          format: date-time\n          type: string\n        InvoiceID:\n          description: Transaction Number\n          type: string\n        IsMaintenanceInvoice:\n          description: Does this invoice contain contractor payments?\n          type: boolean\n      type: object\n    LandlordAccountingModel:\n      description: Landlord Accounting\n      properties:\n        AccountBalance:\n          description: Account Balance\n          format: double\n          type: number\n        LastPayment:\n          description: Last Payment Made\n          format: date-time\n          type: string\n        PaymentHistory:\n          description: Payment History\n          items:\n            $ref: \"#/components/schemas/LandlordAccountingEntryModel\"\n          type: array\n        Statements:\n          description: Statements\n          items:\n            $ref: \"#/components/schemas/LandlordAccountingInvoiceModel\"\n          type: array\n      type: object\n    LandlordChaseNoteModel:\n      description: Landlord Arrears Chase Note.\n      properties:\n        Date:\n          description: Created Date\n          format: date-time\n          type: string\n        Note:\n          description: Note.\n          type: string\n        NoteType:\n          description: Note Type\n          type: string\n        TenantID:\n          description: Tenant\n          type: string\n      type: object\n    LandlordCrmEntry:\n      description: Class for Landlord CRM Entries\n      properties:\n        BranchID:\n          type: string\n        GlobalReference:\n          type: string\n        Name:\n          type: string\n        OID:\n          type: string\n      type: object\n    LandlordDetailsModel:\n      description: Landlord Details\n      properties:\n        Address:\n          description: Address\n          type: string\n        Email:\n          description: Email\n          type: string\n        GlobalReference:\n          description: User Friendly ID\n          type: string\n        ID:\n          description: ID\n          type: string\n        Mobile:\n          description: Mobile\n          type: string\n        Name:\n          description: Name\n          type: string\n        Phone:\n          description: Phone\n          type: string\n      type: object\n    LandlordLettingsInspectionModel:\n      description: Lettings Inspection\n      properties:\n        InspectionDate:\n          description: InspectionDate\n          format: date-time\n          type: string\n        Notes:\n          description: Notes\n          type: string\n      type: object\n    LandlordMaintenanceCertificateModel:\n      description: Maintenance Certificate\n      properties:\n        Due:\n          description: Due\n          format: date-time\n          type: string\n        Files:\n          description: Files\n          items:\n            $ref: \"#/components/schemas/LettingsLandlordDocument\"\n          type: array\n        Status:\n          description: Status.\n          type: string\n        Type:\n          description: Type\n          type: string\n      type: object\n    LandlordMaintenanceJobModel:\n      description: Maintenance Job\n      properties:\n        AssignedTo:\n          description: AssignedTo\n          type: string\n        Description:\n          description: Description\n          type: string\n        Property:\n          description: Property\n          type: string\n        Reported:\n          description: Reported\n          format: date-time\n          type: string\n        Status:\n          description: Status\n          type: string\n      type: object\n    LandlordMaintenanceModel:\n      description: Landlord Maintenance\n      properties:\n        Jobs:\n          description: Maintenance Jobs.\n          items:\n            $ref: \"#/components/schemas/LandlordMaintenanceJobModel\"\n          type: array\n      type: object\n    LandlordMaintenancePreferenceModel:\n      description: Maintenance Preference\n      properties:\n        Name:\n          description: Name\n          type: string\n        Notes:\n          description: Notes.\n          type: string\n        Type:\n          description: Type\n          type: string\n      type: object\n    LandlordPhotoModel:\n      description: Stores a photo related to a property structure.\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        FileName:\n          description: The file name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        PhotoType:\n          description: The photo type.\n          enum:\n            - Photo\n            - Map\n            - FloorPlan\n            - SiteMap\n            - AerialPhoto\n          type: string\n      type: object\n    LandlordPhotoModelResults:\n      description: Holds results from a paged query returning LandlordPhotoModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/LandlordPhotoModel\"\n          type: array\n      type: object\n    LandlordProfitLossModel:\n      description: Class to represent proffit loss report.\n      properties:\n        DirectCosts:\n          $ref: \"#/components/schemas/LandlordProfitLossSectionModel\"\n        GrossProfitLoss:\n          $ref: \"#/components/schemas/LandlordProfitLossSectionModel\"\n        Income:\n          $ref: \"#/components/schemas/LandlordProfitLossSectionModel\"\n      type: object\n    LandlordProfitLossRowModel:\n      description: Class for a group of entries.\n      properties:\n        MonthTotals:\n          description: Month Totals\n          items:\n            $ref: \"#/components/schemas/KeyValuePair_String_String_\"\n          type: array\n        NominalCode:\n          description: Nominal Code\n          type: string\n        Title:\n          description: Title of the values.\n          type: string\n        Total:\n          description: Total for all months.\n          type: string\n      type: object\n    LandlordProfitLossSectionModel:\n      description: Class for a group of entries.\n      properties:\n        Rows:\n          description: Rows.\n          items:\n            $ref: \"#/components/schemas/LandlordProfitLossRowModel\"\n          type: array\n      type: object\n    LandlordRentArrearsModel:\n      description: Landlord Rent Arrears.\n      properties:\n        ChaseNotes:\n          description: Chase Notes\n          items:\n            $ref: \"#/components/schemas/LandlordChaseNoteModel\"\n          type: array\n        RentCollected:\n          description: Rent Collected\n          format: double\n          type: number\n        RentOutstanding:\n          description: Outstanding Rent\n          items:\n            $ref: \"#/components/schemas/LandlordRentOustandingItem\"\n          type: array\n        TotalRentArrears:\n          description: Rent Arrears\n          format: double\n          type: number\n      type: object\n    LandlordRentOustandingItem:\n      description: Outstanding Rent\n      properties:\n        DebtDays:\n          description: Days since the tenant went into arrears\n          format: int32\n          type: integer\n        OutstandingRent:\n          description: Outstanding Rent\n          format: double\n          type: number\n        Property:\n          description: Property\n          type: string\n        Tenant:\n          description: Tenant\n          type: string\n        TenantID:\n          description: TenantID\n          type: string\n      type: object\n    LandlordSettingsModel:\n      description: Landlord Settings\n      properties:\n        LinkedAccounts:\n          description: Linked Accounts\n          items:\n            $ref: \"#/components/schemas/LandlordDetailsModel\"\n          type: array\n      type: object\n    LandlordSummaryModel:\n      description: Landlord Summary - Landing Page.\n      properties:\n        AccountBalance:\n          description: Account Balance\n          format: double\n          type: number\n        LastPayment:\n          description: Last Payment Made\n          format: date-time\n          type: string\n        Tenancies:\n          description: Tenancies\n          items:\n            $ref: \"#/components/schemas/LandlordSummaryTenancyModel\"\n          type: array\n        TotalRentArrears:\n          description: Rent Arrears\n          format: double\n          type: number\n      type: object\n    LandlordSummaryTenancyModel:\n      description: Landlord Summary - Landing Page.\n      properties:\n        Bond:\n          description: Bomd\n          format: double\n          type: number\n        Description:\n          description: Description.\n          type: string\n        GlobalReference:\n          description: User Friendly ID\n          type: string\n        ID:\n          description: ID\n          type: string\n        MaintenanceJobs:\n          description: Maintenance Jobs.\n          format: int32\n          type: integer\n        ManagedRent:\n          description: State of the tenancy\n          type: boolean\n        PropertyAddress:\n          description: Display Property Address\n          type: string\n        Rent:\n          description: Rent\n          type: string\n        RentArrears:\n          description: Rent Arrears\n          format: double\n          type: number\n        RentCollected:\n          description: Rent Arrears\n          format: double\n          type: number\n        TenancyProperty:\n          description: Tenancy Property\n          type: string\n        TenancyState:\n          description: State of the tenancy\n          type: string\n      type: object\n    LandlordTenancyModel:\n      description: Landlord Tenancy Model.\n      properties:\n        ActualEndDate:\n          description: Actual End Date\n          format: date-time\n          type: string\n        Beds:\n          description: Beds\n          format: int32\n          type: integer\n        Bond:\n          description: Bond\n          format: double\n          type: number\n        Certificates:\n          description: Maintenance Certificates.\n          items:\n            $ref: \"#/components/schemas/LandlordMaintenanceCertificateModel\"\n          type: array\n        FixedDate:\n          description: Fixed Date\n          format: date-time\n          type: string\n        GlobalReference:\n          description: User Friendly ID\n          type: string\n        ID:\n          description: ID\n          type: string\n        Inspections:\n          description: Inspections\n          items:\n            $ref: \"#/components/schemas/LandlordLettingsInspectionModel\"\n          type: array\n        ManagedRent:\n          description: State of the tenancy\n          type: boolean\n        Preferences:\n          description: Maintenance Preferences.\n          items:\n            $ref: \"#/components/schemas/LandlordMaintenancePreferenceModel\"\n          type: array\n        PreviousRentAmount:\n          description: Previous Rent Amount\n          format: double\n          type: number\n        PropertyAddress:\n          description: Display Property Address\n          type: string\n        Rent:\n          description: Rent\n          type: string\n        RentAmount:\n          description: Rent Amount\n          format: double\n          type: number\n        StartDate:\n          description: Start Date\n          format: date-time\n          type: string\n        TenancyProperty:\n          description: Tenancy Property\n          type: string\n        TenancyState:\n          description: State of the tenancy\n          type: string\n        Tenants:\n          description: Tenants\n          items:\n            type: string\n          type: array\n      type: object\n    LettingsLandlordDocument:\n      description: Document details.\n      properties:\n        FileName:\n          description: File Name\n          type: string\n        FileSize:\n          description: File Size Bytes\n          format: int32\n          type: integer\n        ID:\n          description: ID\n          type: string\n        MIMEType:\n          description: MIME Type\n          type: string\n      type: object\n    Object:\n      properties: {}\n      type: object\n    KeyValuePair_String_String_:\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/letmc.com-customer-v2-customer-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/letmc.com-customer-v2-customer-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}