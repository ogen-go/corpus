{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "greenpeace.org-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/greenpeace.org-1.0.0-swagger.yaml",
			"byteSize": 12162,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Greenpeace International contact\n    url: http://www.greenpeace.org/international/en/about/contactus/\n    x-twitter: Greenpeace\n  description: Greenpeace Greenwire allows you connect with other volunteers, activists and\n    groups working on environmental campaigns all across the world!\n  license:\n    name: MIT\n    url: http://opensource.org/licenses/MIT\n  termsOfService: http://www.greenpeace.org/international/en/Help/copyright2/\n  title: Greenwire Public\n  version: 1.0.0\n  x-apisguru-categories:\n    - collaboration\n  x-logo:\n    url: https://twitter.com/Greenpeace/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/greenpeace/ggw_api_test/master/swagger.yaml\n      version: \"2.0\"\n  x-providerName: greenpeace.org\npaths:\n  /events:\n    get:\n      description: Return the upcoming events (e.g. start date \u003e= today). Gets an array of\n        `Event` object. Mandatory query param of **domain** determines the site\n        / country the event belongs to.\n      parameters:\n        - description: \"the site the groups belongs to, example: netherlands\"\n          in: query\n          name: domain\n          required: true\n          schema:\n            type: string\n        - description: the number of desired records\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  body:\n                    items:\n                      $ref: \"#/components/schemas/Event\"\n                    type: array\n                  header:\n                    $ref: \"#/components/schemas/HeaderSuccess\"\n  \"/events/{UUID}\":\n    get:\n      description: Get one `Event` object by specifying its UUID in the url path.\n      parameters:\n        - in: path\n          name: UUID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Event\"\n                  header:\n                    $ref: \"#/components/schemas/HeaderSuccess\"\n        \"400\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                properties:\n                  body:\n                    type: object\n                  header:\n                    $ref: \"#/components/schemas/HeaderError\"\n  /groups:\n    get:\n      description: Gets an array of `Group` object. Mandatory query param of **domain**\n        determines the site / country the group belongs to.\n      parameters:\n        - description: \"the site the groups belongs to, example: netherlands\"\n          in: query\n          name: domain\n          required: true\n          schema:\n            type: string\n        - description: the number of desired records\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  body:\n                    items:\n                      $ref: \"#/components/schemas/Group\"\n                    type: array\n                  header:\n                    $ref: \"#/components/schemas/HeaderSuccess\"\n  \"/groups/{UUID}\":\n    get:\n      description: Get one `Group` object by specifying its UUID in the url path.\n      parameters:\n        - in: path\n          name: UUID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Group\"\n                  header:\n                    $ref: \"#/components/schemas/HeaderSuccess\"\n        \"400\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                properties:\n                  body:\n                    type: object\n                  header:\n                    $ref: \"#/components/schemas/HeaderError\"\n  /volunteers:\n    get:\n      description: Gets an array of `Volunteer` object. Mandatory query param of **domain**\n        determines the site / country the volunteers are from.\n      parameters:\n        - description: \"the site the users are registered on, example: netherlands\"\n          in: query\n          name: domain\n          required: true\n          schema:\n            type: string\n        - description: the number of desired records. Default is 5.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: 1 or 0. filter on people that have the default avatar or not.\n          in: query\n          name: must_have_default_avatar\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  body:\n                    items:\n                      $ref: \"#/components/schemas/Volunteer\"\n                    type: array\n                  header:\n                    $ref: \"#/components/schemas/HeaderSuccess\"\n  \"/volunteers/{UUID}\":\n    get:\n      description: Get one specific `Volunteer` object by specifying its UUID in the url\n        path.\n      parameters:\n        - in: path\n          name: UUID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  body:\n                    $ref: \"#/components/schemas/Volunteer\"\n                  header:\n                    $ref: \"#/components/schemas/HeaderSuccess\"\n        \"400\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                properties:\n                  body:\n                    type: object\n                  header:\n                    $ref: \"#/components/schemas/HeaderError\"\nservers:\n  - url: https://greenwire.greenpeace.org/api/public\ncomponents:\n  schemas:\n    Coordinates:\n      properties:\n        latitude:\n          description: \"Signed decimal format, example: 52.1234\"\n          type: string\n        longitude:\n          description: Signed decimal format, example -77.022223\n          type: string\n      type: object\n    DateTime:\n      description: \"The date in YYYY-MM-DD HH:MM:SS format, example: 2015-12-31 23:59:59\"\n      type: string\n    Event:\n      properties:\n        created:\n          $ref: \"#/components/schemas/DateTime\"\n        description:\n          $ref: \"#/components/schemas/HTML\"\n        end_date:\n          $ref: \"#/components/schemas/DateTime\"\n        groups:\n          items:\n            $ref: \"#/components/schemas/GroupLite\"\n          type: array\n        location:\n          $ref: \"#/components/schemas/Location\"\n        modified:\n          $ref: \"#/components/schemas/DateTime\"\n        name:\n          type: string\n        organizers:\n          items:\n            $ref: \"#/components/schemas/VolunteerLite\"\n          type: array\n        picture:\n          $ref: \"#/components/schemas/URL\"\n        serial:\n          $ref: \"#/components/schemas/Serial\"\n        start_date:\n          $ref: \"#/components/schemas/DateTime\"\n        uuid:\n          $ref: \"#/components/schemas/UUID\"\n      type: object\n    Group:\n      properties:\n        created:\n          $ref: \"#/components/schemas/DateTime\"\n        description:\n          $ref: \"#/components/schemas/HTML\"\n        group_type:\n          $ref: \"#/components/schemas/GroupType\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        mission:\n          type: string\n        modified:\n          $ref: \"#/components/schemas/DateTime\"\n        name:\n          type: string\n        picture:\n          $ref: \"#/components/schemas/URL\"\n        serial:\n          $ref: \"#/components/schemas/Serial\"\n        uuid:\n          $ref: \"#/components/schemas/UUID\"\n      type: object\n    GroupLite:\n      properties:\n        name:\n          type: string\n        serial:\n          $ref: \"#/components/schemas/Serial\"\n        uuid:\n          $ref: \"#/components/schemas/UUID\"\n      type: object\n    GroupType:\n      enum:\n        - Country group\n        - Campaign Project group\n        - Local group\n        - Discussion group\n        - Interest group\n        - Skills-based group\n      type: string\n    HTML:\n      description: A string containing sanitized HTML code\n      type: string\n    HTTP_Code:\n      description: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n      type: string\n    HTTP_Status:\n      description: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n      type: integer\n    HeaderError:\n      properties:\n        code:\n          $ref: \"#/components/schemas/HTTP_Code\"\n        error:\n          description: the error message\n          type: string\n        id:\n          description: transaction nonce\n          type: integer\n        pagination:\n          type: object\n        resources:\n          $ref: \"#/components/schemas/ResourceType\"\n        status:\n          $ref: \"#/components/schemas/HTTP_Status\"\n      type: object\n    HeaderSuccess:\n      properties:\n        code:\n          $ref: \"#/components/schemas/HTTP_Code\"\n        error:\n          nullable: true\n        id:\n          description: transaction nonce\n          type: integer\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        resources:\n          $ref: \"#/components/schemas/ResourceType\"\n        status:\n          $ref: \"#/components/schemas/HTTP_Status\"\n      type: object\n    ISO_3166-1_alpha-2:\n      description: Country code see. https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n      type: string\n    Location:\n      properties:\n        city:\n          type: string\n        coordinates:\n          $ref: \"#/components/schemas/Coordinates\"\n        country:\n          type: string\n        postcode:\n          type: string\n        state:\n          type: string\n        streetname:\n          type: string\n      type: object\n    LocationSimple:\n      properties:\n        country:\n          $ref: \"#/components/schemas/ISO_3166-1_alpha-2\"\n      type: object\n    Pagination:\n      properties:\n        limit:\n          description: the nubmer of items per page\n          type: integer\n        page:\n          description: the current page\n          type: integer\n        total:\n          description: the total number of pages\n          type: integer\n      type: object\n    ResourceType:\n      description: The name of the requested object/model/resource. Plural if a collection.\n      enum:\n        - group\n        - groups\n        - event\n        - events\n        - volunteer\n        - volunteers\n      type: string\n    Serial:\n      description: The primary key in Drupal, e.g the entity/node id\n      type: string\n    URL:\n      description: \"A resource location, example: https://greenwire.greenpeace.org\"\n      type: string\n    UUID:\n      description: \"Universally unique identifier in canonical format, example:\n        de305d54-75b4-431b-adb2-eb6b9e546014\"\n      type: string\n    Volunteer:\n      properties:\n        avatar:\n          $ref: \"#/components/schemas/URL\"\n        locations:\n          items:\n            $ref: \"#/components/schemas/LocationSimple\"\n          type: array\n        uuid:\n          $ref: \"#/components/schemas/UUID\"\n      type: object\n    VolunteerLite:\n      properties:\n        serial:\n          $ref: \"#/components/schemas/Serial\"\n        uuid:\n          $ref: \"#/components/schemas/UUID\"\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/greenpeace.org-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/greenpeace.org-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}