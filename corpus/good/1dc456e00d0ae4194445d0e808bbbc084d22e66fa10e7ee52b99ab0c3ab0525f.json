{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anttiviljami/openapi-backend"
		},
		"file": {
			"name": "example-pet-api.openapi.yml",
			"size": 0,
			"path": "__tests__/resources/example-pet-api.openapi.yml",
			"byteSize": 4914,
			"content": "openapi: 3.0.0\ninfo:\n  title: Example API\n  description: Example CRUD API for pets\n  version: 1.0.0\ntags:\n  - name: pets\n    description: Pet operations\npaths:\n  /pets:\n    get:\n      operationId: getPets\n      summary: List pets\n      description: Returns all pets in database\n      tags:\n        - pets\n      responses:\n        '200':\n          description: List of pets in database\n      parameters:\n        - name: limit\n          in: query\n          description: Number of items to return\n          required: false\n          schema:\n            $ref: '#/components/schemas/QueryLimit'\n        - name: offset\n          in: query\n          description: Starting offset for returning items\n          required: false\n          schema:\n            $ref: '#/components/schemas/QueryOffset'\n    post:\n      operationId: createPet\n      summary: Create a pet\n      description: Crete a new pet into the database\n      tags:\n        - pets\n      responses:\n        '201':\n          description: Pet created succesfully\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/PetPayload'\n  '/pets/{id}':\n    get:\n      operationId: getPetById\n      summary: Get a pet\n      description: Returns a pet by its id in database\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Pet object corresponding to id\n        '404':\n          description: Pet not found\n      parameters:\n        - name: id\n          in: path\n          description: Unique identifier for pet in database\n          required: true\n          schema:\n            $ref: '#/components/schemas/PetId'\n    put:\n      operationId: replacePetById\n      summary: Replace pet\n      description: Replace an existing pet in the database\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Pet replaced succesfully\n        '404':\n          description: Pet not found\n      parameters:\n        - name: id\n          in: path\n          description: Unique identifier for pet in database\n          required: true\n          schema:\n            $ref: '#/components/schemas/PetId'\n      requestBody:\n        $ref: '#/components/requestBodies/PetPayload'\n    patch:\n      operationId: updatePetById\n      summary: Update pet\n      description: Update an existing pet in the database\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Pet updated succesfully\n        '404':\n          description: Pet not found\n      parameters:\n        - name: id\n          in: path\n          description: Unique identifier for pet in database\n          required: true\n          schema:\n            $ref: '#/components/schemas/PetId'\n      requestBody:\n        $ref: '#/components/requestBodies/PetPayload'\n    delete:\n      operationId: deletePetById\n      summary: Delete a pet\n      description: Deletes a pet by its id in database\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Pet deleted succesfully\n        '404':\n          description: Pet not found\n      parameters:\n        - name: id\n          in: path\n          description: Unique identifier for pet in database\n          required: true\n          schema:\n            $ref: '#/components/schemas/PetId'\n  '/pets/{id}/human':\n    get:\n      operationId: getHumanByPetId\n      summary: Get a pet's human\n      description: Get the human for a pet\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Human corresponding pet id\n        '404':\n          description: Human or pet not found\n      parameters:\n        - name: id\n          in: path\n          description: Unique identifier for pet in database\n          required: true\n          schema:\n            $ref: '#/components/schemas/PetId'\n  /pets/meta:\n    get:\n      operationId: getPetsMeta\n      summary: Get pet metadata\n      description: Returns a list of metadata about pets and their relations in the database\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Metadata for pets\ncomponents:\n  schemas:\n    PetId:\n      description: Unique identifier for pet in database\n      example: 1\n      title: PetId\n      type: integer\n    PetPayload:\n      type: object\n      properties:\n        name:\n          description: Name of the pet\n          example: Garfield\n          title: PetName\n          type: string\n      additionalProperties: false\n      required:\n        - name\n    QueryLimit:\n      description: Number of items to return\n      example: 25\n      title: QueryLimit\n      type: integer\n    QueryOffset:\n      description: Starting offset for returning items\n      example: 0\n      title: QueryOffset\n      type: integer\n      minimum: 0\n  requestBodies:\n    PetPayload:\n      description: 'Request payload containing a pet object'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PetPayload'\n",
			"canonicalURL": "/github.com/anttiviljami/openapi-backend@acf5a1e0b2d1c5fa013bf44de7be65fc81d56851/-/blob/__tests__/resources/example-pet-api.openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/anttiviljami/openapi-backend/blob/acf5a1e0b2d1c5fa013bf44de7be65fc81d56851/__tests__/resources/example-pet-api.openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}