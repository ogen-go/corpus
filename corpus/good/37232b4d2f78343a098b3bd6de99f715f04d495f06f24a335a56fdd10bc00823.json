{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kheriox-technologies/yt-lambda-rest-api-iac"
		},
		"file": {
			"name": "api-def-v1.yaml",
			"size": 0,
			"path": "terraform/files/api-def-v1.yaml",
			"byteSize": 4105,
			"content": "openapi: 3.0.1\npaths:\n  '/getdata':\n    post:\n      responses:\n        '200':\n          description: 200 response\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/APIResponse'\n      security:\n        - ApiKeyAuth: []\n      x-amazon-apigateway-integration:\n        credentials: '${api_gateway_execution_role}'\n        uri: '${get_data_uri}'\n        responses:\n          default:\n            statusCode: '200'\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        contentHandling: CONVERT_TO_TEXT\n        type: aws\n    options:\n      responses:\n        '200':\n          description: 200 response\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/Empty'\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: '200'\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'OPTIONS,POST'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: when_no_match\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        type: mock\n  '/putdata':\n    post:\n      responses:\n        '200':\n          description: 200 response\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/APIResponse'\n      security:\n        - ApiKeyAuth: []\n      x-amazon-apigateway-integration:\n        credentials: '${api_gateway_execution_role}'\n        uri: '${put_data_uri}'\n        responses:\n          default:\n            statusCode: '200'\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        contentHandling: CONVERT_TO_TEXT\n        type: aws\n    options:\n      responses:\n        '200':\n          description: 200 response\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                '$ref': '#/components/schemas/Empty'\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: '200'\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'OPTIONS,POST'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: when_no_match\n        requestTemplates:\n          application/json: '{\"statusCode\": 200}'\n        type: mock\ncomponents:\n  schemas:\n    Empty:\n      title: Empty Schema\n      type: object\n    APIResponse:\n      type: object\n      properties:\n        status:\n          type: string\n        message:\n          type: string\n        data:\n          type: array\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      name: x-api-key\n      in: header\n",
			"canonicalURL": "/github.com/kheriox-technologies/yt-lambda-rest-api-iac@c9402c2be91aab2ed7b7cee51fe4187706a95bc5/-/blob/terraform/files/api-def-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kheriox-technologies/yt-lambda-rest-api-iac/blob/c9402c2be91aab2ed7b7cee51fe4187706a95bc5/terraform/files/api-def-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}