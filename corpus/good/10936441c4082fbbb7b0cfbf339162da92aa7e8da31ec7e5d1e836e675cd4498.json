{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mariasantosdev/e-commerce-database"
		},
		"file": {
			"name": "openAPI.yml",
			"size": 0,
			"path": "docs/openAPI.yml",
			"byteSize": 18903,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: LoveLace\n  version: '1.0'\n  description: \u003e-\n    REST API da plataforma de ecommerce de banco de dados\n  contact:\n    email: contato@lovelace.com\n    name: LoveLace\n    url: 'https://lovelace.com'\n\nservers:\n  - description: Ambiente local de desenvolvimento\n    url: 'http://localhost:8080'\n  - description: Ambiente de produção\n    url: 'https://api.lovelace.com'\n\ncomponents:\n  schemas:\n    Page:\n      type: object\n      required:\n        - number\n        - size\n        - totalPages\n        - totalElements\n        - content\n      properties:\n        number:\n          type: integer\n          format: int32\n          example: 2\n        size:\n          type: number\n          format: int32\n          example: 9\n        totalPages:\n          type: integer\n          format: int32\n          example: 15\n        totalElements:\n          type: number\n          format: int32\n          example: 442\n    ProblemObject:\n      type: object\n      required:\n        - type\n        - userMessage\n      properties:\n        name:\n          type: string\n          example: amount\n        userMessage:\n          type: string\n          example: O valor é obrigatório\n      title: ProblemObject\n    Problem:\n      title: Problem\n      type: object\n      required:\n        - status\n        - timestamp\n        - type\n        - title\n        - detail\n      description: \u003e\n        Representa um problema na comunicação com a API.\n        Este modelo de representação é baseado na RFC 7807 (Problem Details for HTTP APIs)\n      properties:\n        status:\n          type: integer\n          format: int32\n          example: 400\n        timestamp:\n          type: string\n          format: date-time\n          example: '2020-12-01T18:09:02Z'\n        type:\n          type: string\n          example: 'https://lovelace.com/dados-invalidos'\n        title:\n          type: string\n          example: Dados inválidos\n        detail:\n          type: string\n          example: Um ou mais campos estão inválidos. Faça o preenchimento correto e tente novamente.\n        # userMessage:\n        #   type: string\n        #   example: Um ou mais campos estão inválidos. Faça o preenchimento correto e tente novamente.\n        objects:\n          type: array\n          description: Lista de objetos ou campos que geraram o erro (opcional)\n          items:\n            $ref: '#/components/schemas/ProblemObject'\n    ProductResponse:\n      required:\n        - id\n        - name\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: 'Maria db'\n    \n    NewProductRequest:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Maria db'\n    PlanId:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n\n    UpdateProductRequest:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Maria db'\n\n    UpdateOrderRequest:\n      required:\n        - subtotal\n        - customer\n      type: object\n      properties:\n        subtotal:\n          type: number\n          format: double\n          example: 10.8\n        customer:\n          type: integer\n          format: int64\n          example: 1\n\n    NewOrderRequest:\n      required:\n        - subtotal\n        - customer\n        - plans\n      type: object\n      properties:\n        subtotal:\n          type: number\n          format: double\n          example: 250.40\n        customer:\n          type: integer\n          format: int64\n          example: 1\n        plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanId'\n\n    OrderResponse:\n      required:\n        - id\n        - subtotal\n        - customer\n        - plans\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        subtotal:\n          type: number\n          format: double\n          example: 10.8\n        customer:\n          $ref: '#/components/schemas/CustomerId'\n        plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanId'\n\n    CustomerId:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n\n    UserResponse:\n      required:\n        - id\n        - email\n        - password\n        - phone\n        - cpf\n        - role\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        email:\n          type: string\n          example: 'Maria db'\n        password:\n          type: string\n          example: 'Test#01*' \n        phone:\n          type: string\n          example: '(61)3300-5564'   \n        cpf:\n          type: string\n          example: '000.001.005-81'  \n        role:\n          type: string\n          enum: [ADMIN, CLIENT]\n          example: 'CLIENT' \n\n    NewUserRequest:\n      required:\n        - id\n        - email\n        - password\n        - phone\n        - cpf\n        - role\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        email:\n          type: string\n          example: 'Maria db'\n        password:\n          type: string\n          example: 'Test#01*' \n        phone:\n          type: string\n          example: '(61)3300-5564'   \n        cpf:\n          type: string\n          example: '000.001.005-81'  \n        role:\n          type: string\n          enum: [ADMIN, CLIENT]\n          example: 'CLIENT'\n\n    UpdateUserRequest:\n      required:\n        - id\n        - email\n        - password\n        - phone\n        - cpf\n        - role\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        email:\n          type: string\n          example: 'Maria db'\n        password:\n          type: string\n          example: 'Test#01*' \n        phone:\n          type: string\n          example: '(61)3300-5564'   \n        cpf:\n          type: string\n          example: '000.001.005-81'  \n        role:\n          type: string\n          enum: [ADMIN, CLIENT]\n          example: 'ADMIN'\n    \n    PlanResponse:\n      required:\n        - id\n        - price\n        - name\n        - description\n        - characteristic\n        - storage\n        - limitOfConnections\n        - limitOfUsers\n        - product\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        price:\n          type: number\n          format: double\n          example: 150.8\n        name:\n          type: string\n          example: 'Basico' \n        description:\n          type: string\n          example: 'Plano Básico - Sem servidor'   \n        characteristic:\n          type: string\n          example: 'Ideal para uso em aplicativos sem servidor e com tráfego baixo ou variável.'  \n        storage:\n          type: integer\n          format: int64\n          example: 1\n        limitOfConnections:\n          type: integer\n          format: int64\n          example: 10    \n        limitOfUsers:\n          type: integer\n          format: int64\n          example: 5\n        product:\n          type: integer\n          format: int64\n          example: 1   \n\n    NewPlanRequest:\n      required:\n        - id\n        - price\n        - name\n        - description\n        - characteristic\n        - storage\n        - limitOfConnections\n        - limitOfUsers\n        - product\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        price:\n          type: number\n          format: double\n          example: 150.8\n        name:\n          type: string\n          example: 'Basico' \n        description:\n          type: string\n          example: 'Plano Básico - Sem servidor'   \n        characteristic:\n          type: string\n          example: 'Ideal para uso em aplicativos sem servidor e com tráfego baixo ou variável.'  \n        storage:\n          type: integer\n          format: int64\n          example: 1\n        limitOfConnections:\n          type: integer\n          format: int64\n          example: 10    \n        limitOfUsers:\n          type: integer\n          format: int64\n          example: 5\n        product:\n          type: integer\n          format: int64\n          example: 1 \n\n    UpdatePlanRequest:\n      required:\n        - id\n        - price\n        - name\n        - description\n        - characteristic\n        - storage\n        - limitOfConnections\n        - limitOfUsers\n        - product\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        price:\n          type: number\n          format: double\n          example: 150.8\n        name:\n          type: string\n          example: 'Basico' \n        description:\n          type: string\n          example: 'Plano Básico - Sem servidor'   \n        characteristic:\n          type: string\n          example: 'Ideal para uso em aplicativos sem servidor e com tráfego baixo ou variável.'  \n        storage:\n          type: integer\n          format: int64\n          example: 1\n        limitOfConnections:\n          type: integer\n          format: int64\n          example: 10    \n        limitOfUsers:\n          type: integer\n          format: int64\n          example: 5\n        product:\n          type: integer\n          format: int64\n          example: 1             \n        \n\n\n  responses:\n    NotFound:\n      description: Recurso não encontrado\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n    BadRequest:\n      description: Requisição inválida\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\npaths:\n  /products:\n    get:\n      operationId: getProducts\n      summary: Listagem de Produtos\n      tags:\n        - Products\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductResponse'\n    post:\n      operationId: postProducts\n      summary: Cadastro de Produtos\n      tags:\n        - Products\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewProductRequest'\n      responses:\n        '201':\n          description: Produto criado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /products/{productId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: productId\n        in: path\n        required: true\n    get:\n      operationId: getProduct\n      summary: Busca um Produto\n      tags:\n        - Products\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductResponse'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      operationId: putProducts\n      summary: Atualização de Produtos\n      tags:\n        - Products\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProductRequest'\n      responses:\n        '200':\n          description: Produto atualizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    delete:\n      operationId: deleteProduct\n      summary: Deleta um Produto\n      tags:\n        - Products\n      responses:\n        '204':\n          description: Produto deletado\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /orders:\n    get:\n      operationId: getOrders\n      summary: Listagem de Pedidos\n      tags:\n        - Orders\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderResponse'\n\n    post:\n      operationId: postOrders\n      summary: Cadastro de Pedidos\n      tags:\n        - Orders\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewOrderRequest'\n      responses:\n        '201':\n          description: Pedido criado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /orders/{orderId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: orderId\n        in: path\n        required: true\n    get:\n      operationId: getOrder\n      summary: Busca um Pedido\n      tags:\n        - Orders\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderResponse'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    \n    put:\n      operationId: putOrders\n      summary: Atualização de Pedido\n      tags:\n        - Orders\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateOrderRequest'\n      responses:\n        '200':\n          description: Pedido atualizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    \n    delete:\n      operationId: deleteOrder\n      summary: Deleta um Pedido\n      tags:\n        - Orders\n      responses:\n        '204':\n          description: Pedido deletado\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /user: \n    get:\n      operationId: getUsers\n      summary: Listagem de Usuarios\n      tags:\n        - Users\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserResponse'      \n    post:\n      operationId: postUsers\n      summary: Cadastro de Usuarios\n      tags:\n        - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewUserRequest'\n      responses:\n        '201':\n          description: Usuario criado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /user/{userId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: userId\n        in: path\n        required: true\n    get:\n      operationId: getUser\n      summary: Busca um Usuario\n      tags:\n        - Users\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      operationId: putUsers\n      summary: Atualização de Usuario\n      tags:\n        - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n      responses:\n        '200':\n          description: Usuario atualizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    \n    delete:\n      operationId: deleteUser\n      summary: Deleta um usuario\n      tags:\n        - Users\n      responses:\n        '204':\n          description: Usuario deletado\n        '404':\n          $ref: '#/components/responses/NotFound'      \n\n  /plan: \n    get:\n      operationId: getPlans\n      summary: Listagem de Planos\n      tags:\n        - Plans\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PlanResponse'      \n    post:\n      operationId: postPlans\n      summary: Cadastro de Planos\n      tags:\n        - Plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewPlanRequest'\n      responses:\n        '201':\n          description: Plano criado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /plan/{planId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: planId\n        in: path\n        required: true\n    get:\n      operationId: getPlan\n      summary: Busca um Plano\n      tags:\n        - Plans\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanResponse'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      operationId: putPlans\n      summary: Atualização de Plano\n      tags:\n        - Plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePlanRequest'\n      responses:\n        '200':\n          description: Plano atualizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    \n    delete:\n      operationId: deletePlan\n      summary: Deleta um Plano\n      tags:\n        - Plans\n      responses:\n        '204':\n          description: Plano deletado\n        '404':\n          $ref: '#/components/responses/NotFound'              \n\n\ntags:\n  - name: Products\n    description: Produtos\n  - name: Orders\n    description: Pedidos  \n  - name: Plans\n    description: Planos  \n  - name: Users\n    description: Usuarios",
			"canonicalURL": "/github.com/mariasantosdev/e-commerce-database@18df1636cbde9391a30fa3e918cb761e2ddf7c87/-/blob/docs/openAPI.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mariasantosdev/e-commerce-database/blob/18df1636cbde9391a30fa3e918cb761e2ddf7c87/docs/openAPI.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}