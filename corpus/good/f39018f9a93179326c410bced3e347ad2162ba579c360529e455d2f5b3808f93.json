{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codando-community/coderslab"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "server/src/subject/swagger.yaml",
			"byteSize": 6508,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    Documentation\n  version: '1.0'\n  title: 'Coderslab'\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: Davi Fonseca\n    email: davi.brandao.fonseca@gmail.com\n    url: https://github.com/davibrandao18\n#  license:\n#    name: Apache 2.0\n#    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Subject\n    description: everything about subject integration for Coderslab\npaths:\n# Subject\n  /subject/create:\n    post:\n      tags:\n        - Subject\n      summary: API\n      description: API de criação de subject\n      operationId: subject_create\n      responses:\n        '201':\n          description: Subject created\n        '403':\n          description: Subject already exists\n        '400':\n          description: Bad Request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/subject_create.Request'\n        required: true\n  /subject/read/byId/{id}:\n      get:\n        summary: Retorna o subject com base em um ID.\n        parameters:\n          - name: id\n            in: path\n            required: true\n            description: Id do subject gerado pelo MongoDB.\n            schema:\n              type : string\n              format: uuid\n              minimum: 1\n        tags:\n          - Subject\n        description: API para retorno de um subject\n        operationId: subjects_byId\n        responses:\n          '200':\n            description: OK\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/subject_read.Response'\n          '400':\n            description: Bad Request\n          '404':\n            description: Not Found\n  /subject/read/byLabel/{label}:\n      get:\n        summary: Retorna o subject com base em uma Label.\n        parameters:\n          - name: label\n            in: path\n            required: true\n            description: Rótulo atribuido ao subject.\n            schema:\n              type : string\n              minimum: 1\n        tags:\n          - Subject\n        description: API para retorno do array de subjects\n        operationId: subjects_byLabel\n        responses:\n          '200':\n            description: OK\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/subject_read.Response'\n          '400':\n            description: Bad Request\n          '404':\n            description: Not Found\n  /subject/read/all:\n      get:\n        tags:\n          - Subject\n        summary: API\n        description: API para retorno do array de subjects\n        operationId: subjects_all\n        responses:\n          '200':\n            description: successful operation\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/subject_all.Response'\n          '400':\n            description: Bad Request\n  /subject/update/{id}:\n    put:\n      summary: Atualiza as categories de um subject com base no ID.\n      parameters:\n          - name: id\n            in: path\n            required: true\n            description: Id do subject gerado pelo MongoDB.\n            schema:\n              type : string\n              format: uuid\n              minimum: 1\n      tags:\n        - Subject\n      description: API para update de um subject\n      operationId: subject_update\n      responses:\n        '200':\n          description: Subject updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subject_read.Response'\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/subject_update.Request'\n        required: true\n  /subject/delete/{id}:\n    delete:\n      summary: Deleta um subject com base em seu ID.\n      parameters:\n          - name: id\n            in: path\n            required: true\n            description: Id do subject gerado pelo MongoDB.\n            schema:\n              type : string\n              format: uuid\n              minimum: 1\n      tags:\n        - Subject\n      description: API para deletar um subject com base em seu id\n      operationId: subject_delete\n      responses:\n        '204':\n          description: Subject deleted\n        '400':\n          description: Bad request\n        '404':\n            description: Not Found\nservers:\n# Added by API Auto Mocking Plugin\n  - url: 'https://cluster.prod.com.br/coderslab'\n    description: Link do cluster produtivo - External URL PRD\ncomponents:\n  schemas:\n    subject_create.Request:\n        title: subject.Request\n        description: 'Object for subject'\n        type: object\n        properties:\n          label:\n            type: string\n            description: 'Rotúlo para o assunto Ex: NodeJs'\n          categories:\n            type: array\n            items:\n              type: string\n              description: 'Array de categorias Ex: [Web, Mobile]'\n\n    subject_update.Request:\n        title: subject.Request\n        description: 'Object for subject'\n        type: object\n        properties:\n          categories:\n            type: array\n            items:\n              type: string\n              description: 'Array de categorias Ex: [Web, Mobile]'\n\n    subject_all.Response:\n        title: subject_read_all.Response\n        description: 'Array for subjects'\n        type: array\n        items:\n          type: object\n          properties:\n            id:\n              type: string\n              description: 'Id gerado pelo MongoDB'\n            label:\n              type: string\n              description: 'Rotúlo para o assunto Ex: NodeJs'\n            categories:\n              type: array\n              items:\n                type: string\n                description: 'Array de categorias Ex: [Web, Mobile]'\n\n    subject_read.Response:\n        title: subject_read.Response\n        description: 'Object for subject'\n        type: object\n        properties:\n          id:\n            type: string\n            description: 'Id gerado pelo MongoDB'\n          label:\n            type: string\n            description: 'Rotúlo para o assunto Ex: NodeJs'\n          categories:\n            type: array\n            items:\n              type: string\n              description: 'Array de categorias Ex: [Web, Mobile]'\n",
			"canonicalURL": "/github.com/codando-community/coderslab@e640aa22b99c4af5353d7f0e4db10cde2e8bda51/-/blob/server/src/subject/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codando-community/coderslab/blob/e640aa22b99c4af5353d7f0e4db10cde2e8bda51/server/src/subject/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}