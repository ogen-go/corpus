{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/OCWA"
		},
		"file": {
			"name": "api-docs.yaml",
			"size": 0,
			"path": "microservices/requestApi/routes/v1/spec/api-docs.yaml",
			"byteSize": 5385,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 2.0.0\n  title: Request API\n  description: |\n    This is a request api that provides access to requests, for the OCWA it manages comments ands files as well.\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Brandon Sharratt\nservers:\n  - url: /v1\n    description: This Server\npaths:\n  /:\n    get:\n      summary: List all requests\n      operationId: listRequests\n      tags:\n        - Requests\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: page\n          in: query\n          description: Which page to start on (relative to limit)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of requests that the user has access to\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Requests\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a request\n      operationId: createRequest\n      tags:\n        - Request\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestPost\"\n      responses:\n        '200':\n          description: Success Message\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  schemas:\n    Request:\n      required:\n        - _id\n        - name\n        - state\n        - files\n        - __v\n      properties:\n        _id:\n          type: string\n          description: Object id\n        name:\n          type: string\n          description: Name of the request for user convinience (not required to be unique)\n        state:\n          type: number\n          description: Number reflecting the state of the request, 0 is draft, 1 is wip, 2 is awaiting review, 3 is in review, 4 is approved, 5 is denied, 6 is cancelled\n        tags:\n          type: array\n          items:\n            type: string\n          description: Array of strings containing the tags currently applied to the request.\n        files:\n          type: array\n          items:\n            type: string\n          description: Array of file ids that the request knows about\n        supportingFiles:\n          type: array\n          items:\n            type: string\n          description: Array of file ids that the request knows about as supporting files\n        purpose:\n          type: string\n          description: Purpose of the request\n        variableDescriptions:\n          type: string\n          description: Description of variables in the request\n        selectionCriteria:\n          type: string\n          description: Selection criteria and sample size description for the request\n        steps:\n          type: string\n          description: Annotation of steps taken\n        freq:\n          type: string\n          description: Weighted results and unweighted frequencies\n        confidentiality:\n          type: string\n          description: Confidentiality disclosure to describe how it's upheld when criteria isn't met\n        author:\n          type: string\n          description: Author of the request\n        __v:\n          type: string\n          description: version of the request (increments with changes)\n    Requests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Request\"\n\n    RequestPost:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: Name of the request for user convinience (not required to be unique)\n        tags:\n          type: array\n          items:\n            type: string\n          description: Array of strings containing the tags currently applied to the request.\n        purpose:\n          type: string\n          description: Purpose of the request\n        variableDescriptions:\n          type: string\n          description: Description of variables in the request\n        selectionCriteria:\n          type: string\n          description: Selection criteria and sample size description for the request\n        steps:\n          type: string\n          description: Annotation of steps taken\n        freq:\n          type: string\n          description: Weighted results and unweighted frequencies\n        confidentiality:\n          type: string\n          description: Confidentiality disclosure to describe how it's upheld when criteria isn't met\n\n    Success:\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          description: Contains message about the success, normally \"Written successfully\"\n    Error:\n      required:\n        - error\n      properties:\n        error:\n          type: string\n          description: contains a message about the failure",
			"canonicalURL": "/github.com/bcgov/OCWA@e0bd0763ed1e3c0acc498cb1689778b4e22a475c/-/blob/microservices/requestApi/routes/v1/spec/api-docs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bcgov/OCWA/blob/e0bd0763ed1e3c0acc498cb1689778b4e22a475c/microservices/requestApi/routes/v1/spec/api-docs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}