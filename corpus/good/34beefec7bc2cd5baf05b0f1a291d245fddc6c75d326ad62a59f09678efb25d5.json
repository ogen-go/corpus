{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatInsights/rhsm-subscriptions"
		},
		"file": {
			"name": "prometheus-api-spec.yaml",
			"size": 0,
			"path": "clients/prometheus-client/prometheus-api-spec.yaml",
			"byteSize": 3770,
			"content": "# This is a file maintained by the rhsm-subscriptions project and describes\n# a portion of the Prometheus Query API.\nopenapi: \"3.0.2\"\ninfo:\n  title: \"prometheus-query-api\"\n  description: \"Third-party specification for Prometheus Query API\"\n  version: 1.0.0\n\npaths:\n  /query:\n    description: \"Evaluates an instant query at a single point in time\"\n    parameters:\n      - name: query\n        description: \"Prometheus expression query string\"\n        required: true\n        in: query\n        schema:\n          type: string\n      - name: time\n        description: \"Evaluation timestamp.\"\n        in: query\n        schema:\n            type: string\n            format: date-time\n      - name: timeout\n        description: \"Evaluation timeout. Optional. Defaults to and is capped by the value of the -query.timeout flag.\"\n        in: query\n        schema:\n          type: integer\n\n    get:\n      summary: \"Evaluates an instant query at a single point in time\"\n      operationId: \"Query\"\n      tags:\n        - query\n      responses:\n        '200':\n          description: \"The operation completed successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResult'\n\n  /query_range:\n    description: \" Evaluates an expression query over a range of time\"\n    parameters:\n      - name: query\n        description: \"Prometheus expression query string\"\n        required: true\n        in: query\n        schema:\n          type: string\n      - name: start\n        description: \"Start Date (linux timestamp).\"\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: end\n        description: \"End Date (linux timestamp).\"\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: step\n        description: \"Query resolution step width in duration format or float number of seconds.\"\n        in: query\n        schema:\n          type: string\n      - name: timeout\n        description: \"Evaluation timeout. Optional. Defaults to and is capped by the value of the -query.timeout flag.\"\n        in: query\n        schema:\n          type: integer\n    get:\n      summary: \"Evaluates an instant query at a single point in time\"\n      operationId: \"QueryRange\"\n      tags:\n        - query_range\n      responses:\n        '200':\n          description: \"The operation completed successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResult'\ncomponents:\n  schemas:\n    ResultType:\n      type: string\n      enum:\n        - matrix\n        - vector\n        - scalar\n        - string\n    StatusType:\n      type: string\n      enum:\n        - success\n        - error\n    QueryResult:\n      properties:\n        status:\n          $ref: \"#/components/schemas/StatusType\"\n        data:\n          type: object\n          properties:\n            resultType:\n              $ref: \"#/components/schemas/ResultType\"\n            result:\n              type: array\n              items:\n                type: object\n                properties:\n                  metric:\n                    type: object\n                    additionalProperties:\n                      type: string\n                  value:\n                    type: array\n                    items:\n                      type: number\n                  values:\n                    type: array\n                    items:\n                      type: array\n                      items:\n                        type: number\n        errorType:\n          type: string\n        error:\n          type: string\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: token\n\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/RedHatInsights/rhsm-subscriptions@71bc894e45397955d5759b6af5914e6a8c735113/-/blob/clients/prometheus-client/prometheus-api-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/RedHatInsights/rhsm-subscriptions/blob/71bc894e45397955d5759b6af5914e6a8c735113/clients/prometheus-client/prometheus-api-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}