{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hotmeteor/spectator"
		},
		"file": {
			"name": "Test.v2.json",
			"size": 0,
			"path": "tests/Fixtures/Test.v2.json",
			"byteSize": 5542,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Test.v2\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/users\": {\n      \"get\": {\n        \"summary\": \"Get users\",\n        \"tags\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"number\",\n                        \"description\": \"User ID\",\n                        \"example\": 1\n                      },\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"User name\",\n                        \"example\": \"Adam Campbell\"\n                      },\n                      \"email\": {\n                        \"type\": \"string\",\n                        \"description\": \"User email address\",\n                        \"format\": \"email\",\n                        \"example\": \"test@test.com\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"example-1\": {\n                    \"value\": [\n                      {\n                        \"id\": 1,\n                        \"name\": \"Adam Campbell\",\n                        \"email\": \"test@test.com\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"get-users\",\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"name\",\n                \"email\"\n              ]\n            },\n            \"in\": \"query\",\n            \"name\": \"order\",\n            \"allowEmptyValue\": true\n          }\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create user\",\n        \"tags\": [],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\"\n          }\n        },\n        \"operationId\": \"post-users\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Adam Campbell\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\",\n                    \"example\": \"test@test.com\"\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"email\"\n                ]\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/path-without-operationId\": {\n      \"get\": {\n        \"summary\": \"Get route without operationId\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"int\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tags\": {\n      \"get\": {\n        \"summary\": \"List all tags.\",\n        \"tags\": [\n          \"tags\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"example\": \"success\",\n                      \"minLength\": 0,\n                      \"maxLength\": 255\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"minLength\": 36,\n                            \"maxLength\": 36,\n                            \"format\": \"uuid\",\n                            \"example\": \"00000000-0000-4000-8000-000000000000\"\n                          },\n                          \"name\": {\n                            \"type\": \"string\",\n                            \"example\": \"Photography\",\n                            \"minLength\": 1,\n                            \"maxLength\": 255\n                          },\n                          \"slug\": {\n                            \"type\": \"string\",\n                            \"example\": \"photography\",\n                            \"minLength\": 1,\n                            \"maxLength\": 255,\n                            \"nullable\": true\n                          }\n                        },\n                        \"required\": [\n                          \"id\",\n                          \"name\"\n                        ]\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"status\",\n                    \"data\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {}\n  }\n}",
			"canonicalURL": "/github.com/hotmeteor/spectator@06bdf2c95fac4ead0af663a8390ed2b15b19b1e7/-/blob/tests/Fixtures/Test.v2.json",
			"externalURLs": [
				{
					"url": "https://github.com/hotmeteor/spectator/blob/06bdf2c95fac4ead0af663a8390ed2b15b19b1e7/tests/Fixtures/Test.v2.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}