{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/greenmail-mail-test/greenmail"
		},
		"file": {
			"name": "greenmail-openapi.yml",
			"size": 0,
			"path": "greenmail-standalone/src/main/resources/greenmail-openapi.yml",
			"byteSize": 8973,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n    version: \"${project.version}\"\n    title: GreenMail OpenAPI\n    description: \u003cp\u003eRESTful API for GreenMail\u003c/p\u003e\n    license:\n        name: Apache 2.0\n        url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\npaths:\n    /api/configuration:\n        get:\n            description: Gets current GreenMail configuration\n            operationId: get_configuration\n            responses:\n                '200':\n                    description: Current configuration\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Configuration\"\n                default:\n                    description: Unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ErrorResponse\"\n    /api/user:\n        get:\n            description: Gets current GreenMail users\n            operationId: get_all_user\n            responses:\n                '200':\n                    description: List of users\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Users\"\n                default:\n                    description: Unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ErrorResponse\"\n        post:\n            description: Creates a new GreenMail users\n            operationId: create_user\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            required:\n                                - email\n                                - login\n                                - password\n                            properties:\n                                email:\n                                    type: string\n                                login:\n                                    type: string\n                                password:\n                                    type: string\n            responses:\n                '200':\n                    description: Newly created user\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/User\"\n                default:\n                    description: Unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ErrorResponse\"\n    /api/user/{id}:\n        parameters:\n            -   in: path\n                name: id\n                description: Either user login or user email as identifier\n                required: true\n                schema:\n                    type: string\n        delete:\n            description: Deletes given GreenMail user\n            operationId: delete_user\n            responses:\n                '200':\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/SuccessResponse\"\n                '400':\n                    description: User not found\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ErrorResponse\"\n    /api/service/readiness:\n        get:\n            description: Checks GreenMail readiness (if service up and available)\n            operationId: readiness\n            responses:\n                '200':\n                    description: Service is ready\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/SuccessResponse\"\n                '503':\n                    description: Service is not ready\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/SuccessResponse\"\n                default:\n                    description: Unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ErrorResponse\"\n    /api/service/reset:\n        post:\n            description: Restarts GreenMail using current configuration.\n            operationId: reset\n            responses:\n                '200':\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/SuccessResponse\"\n                default:\n                    description: Unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ErrorResponse\"\n    /api/mail/purge:\n        post:\n            description: Purges all mails\n            operationId: purge\n            responses:\n                '200':\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/SuccessResponse\"\n                default:\n                    description: Unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ErrorResponse\"\n\ncomponents:\n    schemas:\n        Configuration:\n            type: object\n            properties:\n                defaultHostname:\n                    type: string\n                portOffset:\n                    type: integer\n                    format: int32\n                serverSetups:\n                    type: array\n                    items:\n                        $ref: \"#/components/schemas/ServerSetup\"\n            required:\n                - serviceConfigurations\n        Users:\n            type: \"array\"\n            description: Configured users for authentication\n            items:\n                $ref: \"#/components/schemas/User\"\n        User:\n            type: object\n            required:\n                - login\n                - email\n            properties:\n                login:\n                    type: string\n                email:\n                    type: string\n        ServerSetup:\n            type: object\n            properties:\n                port:\n                    description: Service port\n                    type: integer\n                    format: int32\n                address:\n                    description: Service address\n                    type: string\n                protocol:\n                    description: Service protocol for receiving or sending emails.\n                    type: string\n                    enum:\n                        - pop3\n                        - pop3s\n                        - imap\n                        - imaps\n                        - smtp\n                        - smtps\n                isSecure:\n                    description: Flag if secure transport (TLS) should be enabled\n                    type: boolean\n                readTimeout:\n                    description: Service socket read timeout in ms\n                    type: integer\n                    format: int32\n                writeTimeout:\n                    description: Service socket write timeout in ms\n                    type: integer\n                    format: int32\n                connectionTimeout:\n                    description: Service socket connection timeout in ms\n                    type: integer\n                    format: int32\n                serverStartupTimeout:\n                    description: Service startup timeout in ms\n                    type: integer\n                    format: int32\n                isDynamicPort:\n                    description: Flag if port should be automatically determined\n                    type: boolean\n            required:\n                - address\n                - port\n                - protocol\n                - isSecure\n        ErrorResponse:\n            properties:\n                message:\n                    type: string\n            required:\n                - message\n        SuccessResponse:\n            properties:\n                message:\n                    type: string\n            required:\n                - message\n",
			"canonicalURL": "/github.com/greenmail-mail-test/greenmail@b5c92fce954929c72b7e15aa936dae1b4cbfee50/-/blob/greenmail-standalone/src/main/resources/greenmail-openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/greenmail-mail-test/greenmail/blob/b5c92fce954929c72b7e15aa936dae1b4cbfee50/greenmail-standalone/src/main/resources/greenmail-openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}