{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bundesAPI/smard-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 5264,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"Bundesnetzagentur Strommarktdaten\"\n  version: \"0.0.1\"\n  title: \"Bundesnetzagentur Strommarktdaten\"\n  \nservers:\n  - url: \"https://www.smard.de/app/chart_data\"\n  \npaths:\n  /{filter}/{region}/index_{resolution}.json:\n    get:\n      parameters:\n        - $ref: '#/components/parameters/filterParameter'\n        - $ref: '#/components/parameters/regionParameter'\n        - $ref: '#/components/parameters/resolutionParameter'\n      responses:\n        '200':\n          description: OK\n          content: \n            application/json:\n              schema:\n                $ref: '#/components/schemas/Indices'\n              example:\n                timestamps: [1627855200000,1628460000000,1629064800000]\n      description: \"Verfügbare Timestamps für Filter, Region und Auflösung\"\n      summary: \"Indizes\"\n    \n  /{filter}/{region}/{filterCopy}_{regionCopy}_{resolution}_{timestamp}.json:\n    get:\n      parameters:\n        - $ref: '#/components/parameters/filterParameter'\n        - $ref: '#/components/parameters/filterCopyParameter'\n        - $ref: '#/components/parameters/regionParameter'\n        - $ref: '#/components/parameters/regionCopyParameter'\n        - $ref: '#/components/parameters/resolutionParameter'\n        - in: path\n          name: timestamp\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeSeries'\n              example:\n                meta_data: {\"version\": 1, \"created\": 1627858357549}\n                series: [[1627250400000, 7866.0],[1627254000000, 7881.0]]\n      description: \"Zeitreihendaten nach Filter, Region und Auflösung ab Timestamp\"\n      summary: \"Zeitreihendaten\"\n      \ncomponents:\n  schemas:\n    Indices:\n      type: object\n      properties: \n        timestamps:\n          type: array\n          items:\n            type: integer\n    TimeSeries:\n      type: object\n      properties:\n        meta_data: \n          type: object\n          properties:\n            version:\n              type: integer\n            created:\n              type: integer\n        series:\n          type: array\n          items:\n            type: array\n            items:\n              type: number\n  parameters:\n    resolutionParameter:\n      in: path\n      name: resolution\n      schema:\n        type: string\n        enum: [hour, quarterhour, day, week, month, year]\n        default: hour\n      required: true\n      description: \u003e\n        Auflösung der Daten:\n          * `hour` - Stündlich\n          * `quarterhour` - Viertelstündlich\n          * `day` - Täglich\n          * `week` - Wöchentlich\n          * `month` - Monatlich\n          * `year` - Jährlich\n    filterParameter:\n      in: path\n      name: filter\n      schema:\n        type: integer\n        enum: [1223, 1224, 1225, 1226, 1227, 1228, 4066, 4067, 4068, 4069, 4070, 4071, 410, 4359, 4387]\n      required: true\n      description: \u003e\n        Mögliche Filter:\n          * `1223` - Stromerzeugung: Braunkohle\n          * `1224` - Stromerzeugung: Kernenergie\n          * `1225` - Stromerzeugung: Wind Offshore\n          * `1226` - Stromerzeugung: Wasserkraft\n          * `1227` - Stromerzeugung: Sonstige Konventionelle\n          * `1228` - Stromerzeugung: Sonstige Erneuerbare\n          * `4066` - Stromerzeugung: Biomasse\n          * `4067` - Stromerzeugung: Wind Onshore\n          * `4068` - Stromerzeugung: Photovoltaik\n          * `4069` - Stromerzeugung: Steinkohle\n          * `4070` - Stromerzeugung: Pumpspeicher\n          * `4071` - Stromerzeugung: Erdgas\n          * `410` - Stromverbrauch: Gesamt (Netzlast)\n          * `4359` - Stromverbrauch: Residuallast\n          * `4387` - Stromverbrauch: Pumpspeicher\n    \n    filterCopyParameter:\n      in: path\n      name: filterCopy\n      schema:\n        type: integer\n        enum: [1223, 1224, 1225, 1226, 1227, 1228, 4066, 4067, 4068, 4069, 4070, 4071, 410, 4359, 4387]\n      required: true\n      description: \u003e\n        Muss dem Wert von \"filter\" entsprechen. (Kaputtes API-Design)\n     \n    \n    regionCopyParameter:\n      in: path\n      name: regionCopy\n      schema:\n        type: string\n        enum: [DE, AT, LU, DE-LU, DE-AT-LU,  50Hertz, Amprion, TenneT, TransnetBW, APG, Creos]\n      required: true\n      description: \u003e\n        Muss dem Wert von \"region\" entsprechen. (Kaputtes API-Design)\n \n    regionParameter:\n      in: path\n      name: region\n      schema:\n        type: string\n        enum: [DE, AT, LU, DE-LU, DE-AT-LU,  50Hertz, Amprion, TenneT, TransnetBW, APG, Creos]\n        default: DE\n      required: true\n      description: \u003e\n        Land / Regelzone / Marktgebiet:\n          * `DE` - Land: Deutschland\n          * `AT` - Land: Österreich\n          * `LU` - Land: Luxemburg\n          * `DE-LU` - Marktgebiet: DE/LU (ab 01.10.2018)\n          * `DE-AT-LU` - Marktgebiet: DE/AT/LU (bis 30.09.2018)\n          * `50Hertz` - Regelzone (DE): 50Hertz\n          * `Amprion`- Regelzone (DE): Amprion\n          * `TenneT` - Regelzone (DE): TenneT\n          * `TransnetBW` - Regelzone (DE): TransnetBW\n          * `APG` - Regelzone (AT): APG\n          * `Creos` - Regelzone (LU): Creos\n",
			"canonicalURL": "/github.com/bundesAPI/smard-api@0fb66eef8b1d884b160a50a1f22efb1e8142a5d5/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bundesAPI/smard-api/blob/0fb66eef8b1d884b160a50a1f22efb1e8142a5d5/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}