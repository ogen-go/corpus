{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "opto22.com-groov-R3.3a-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/opto22.com-groov-R3.3a-swagger.yaml",
			"byteSize": 13342,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: developer@opto22.com\n    name: Opto 22\n    url: http://developer.opto22.com\n    x-twitter: opto22\n  description: |\n    #### Revised: 2016-09-29\n\n    ### Overview\n    groov Public API revision 1.\n  title: groov Public\n  version: R3.3a\n  x-apisguru-categories:\n    - iot\n  x-logo:\n    url: https://twitter.com/opto22/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: http://developer.opto22.com/static/generated/groov-rest-api/swagger.yaml\n      version: \"2.0\"\n  x-providerName: opto22.com\n  x-serviceName: groov\ntags:\n  - description: Provides information about groov itself.\n    name: info\n  - description: Provides information about the user you are authenticated as.\n    name: whoami\n  - description: Provides access to the Data Store devices and tags.\n    name: data-store\npaths:\n  /info:\n    get:\n      description: Get information about groov. No authorization required.\n      operationId: groovInfo\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/groovInfo\"\n      tags:\n        - info\n  /v1/data-store/devices:\n    get:\n      description: List devices available in the data store. Authorized for admins and\n        editors.\n      operationId: listDevices\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/dataStoreDevice\"\n                type: array\n      security:\n        - api_key: []\n      tags:\n        - data-store\n  \"/v1/data-store/devices/{id}/tags\":\n    get:\n      description: List tags of the given device. Authorized for admins and editors.\n      operationId: listDeviceTags\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/tagDefinition\"\n                type: array\n      security:\n        - api_key: []\n      tags:\n        - data-store\n    parameters:\n      - description: ID of the device to use.\n        in: path\n        name: id\n        required: true\n        schema:\n          type: number\n          format: int64\n  /v1/data-store/read:\n    parameters: []\n    post:\n      description: Read selected tags from the data store. Authorized for admins and\n        editors.\n      operationId: batchReadTags\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/tagValue\"\n                type: array\n      security:\n        - api_key: []\n      tags:\n        - data-store\n  \"/v1/data-store/read/{id}\":\n    get:\n      description: Read the current value of a single tag. Authorized for admins and\n        editors.\n      operationId: readTag\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tagValue\"\n      security:\n        - api_key: []\n      tags:\n        - data-store\n    parameters:\n      - description: ID of the tag to read.\n        in: path\n        name: id\n        required: true\n        schema:\n          type: number\n          format: int64\n      - description: Table index to start reading at.\n        in: query\n        name: index\n        required: false\n        schema:\n          type: number\n          format: int32\n          default: 0\n      - description: Number of elements to read from a table.\n        in: query\n        name: count\n        required: false\n        schema:\n          type: number\n          format: int32\n          default: 1\n  /v1/data-store/tags:\n    get:\n      description: List all data store tags defined in the project. Authorized for admins\n        and editors.\n      operationId: listAllTags\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/tagDefinition\"\n                type: array\n      security:\n        - api_key: []\n      tags:\n        - data-store\n  \"/v1/data-store/write/{id}\":\n    parameters:\n      - description: ID of the tag to write.\n        in: path\n        name: id\n        required: true\n        schema:\n          type: number\n          format: int64\n      - description: Value to write to the tag. Must be a string, number, or boolean.\n        in: query\n        name: value\n        required: true\n        schema:\n          type: string\n      - description: For array tags, the index to write the value to.\n        in: query\n        name: index\n        required: false\n        schema:\n          type: number\n          format: int32\n          default: 0\n    post:\n      description: Writes a new value to the given tag. Authorized for admins and editors.\n      operationId: writeTag\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tagValue\"\n      security:\n        - api_key: []\n      tags:\n        - data-store\n  /whoami:\n    get:\n      description: Get information about the user you are authenticated as. Authorized for\n        admins, editors, operators, and kiosk.\n      operationId: whoAmI\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      security:\n        - api_key: []\n      tags:\n        - whoami\nservers:\n  - url: http://developer.opto22.com/api\n  - url: https://developer.opto22.com/api\ncomponents:\n  securitySchemes:\n    api_key:\n      in: query\n      name: api_key\n      type: apiKey\n  schemas:\n    User:\n      properties:\n        apiKey:\n          type: string\n        email:\n          type: string\n        groups:\n          items:\n            format: int64\n            type: number\n          type: array\n        id:\n          format: int64\n          type: number\n        needsPasswordChange:\n          description: True if your password is expired\n          type: boolean\n        role:\n          type: string\n        username:\n          type: string\n      required:\n        - role\n        - apiKey\n        - groups\n        - id\n        - needsPasswordChange\n        - email\n        - username\n      type: object\n    booleanArrayValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              items:\n                type: boolean\n              type: array\n          required:\n            - value\n          type: object\n    booleanValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              type: boolean\n          required:\n            - value\n          type: object\n    dataStoreDevice:\n      allOf:\n        - $ref: \"#/components/schemas/device\"\n        - properties:\n            id:\n              format: int64\n              type: number\n            name:\n              type: string\n          required:\n            - id\n            - name\n          type: object\n      description: A Data Store device within a groov project\n    device:\n      description: A generic device within a groov project\n      discriminator:\n        propertyName: deviceType\n      properties:\n        deviceType:\n          type: string\n      required:\n        - deviceType\n      type: object\n    errorValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            errorCode:\n              type: string\n            errorMessage:\n              type: string\n          required:\n            - errorCode\n            - errorMessage\n          type: object\n    floatArrayValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              items:\n                format: float\n                type: number\n              type: array\n          required:\n            - value\n          type: object\n    floatValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              format: float\n              type: number\n          required:\n            - value\n          type: object\n    groovInfo:\n      properties:\n        currentApiVersion:\n          description: The current API version number\n          format: int32\n          type: number\n        groovAdminVersion:\n          description: The groov admin version number if running on a groov hardware box\n          type: string\n        groovBoxDescription:\n          description: The groov box type (GROOV-AT1 or GROOV-AR1)\n          type: string\n        groovNodeRedVersion:\n          description: The node red version number if running on a GROOV-AR1 which has node\n            red installed\n          type: string\n        isCoreInUse:\n          description: True if Core Features (Opto 22 Controllers, Modbus Devices, Data\n            Store) are in use\n          type: boolean\n        isGroovBox:\n          description: True if running on a groov hardware box\n          type: boolean\n        isGroovBoxSetup:\n          description: True if running on a groov hardware box which has been setup or true\n            if running on groov Server for Windows\n          type: boolean\n        isLicenseValid:\n          description: True if a license is installed, valid, and not expired\n          type: boolean\n        isOpcUaInUse:\n          description: True if an OPC-UA device is in use\n          type: boolean\n        licenseType:\n          description: The license type (NONE, EXPIRED, SOLO, STANDARD, or ENTERPRISE)\n          type: string\n        minimumApiVersion:\n          description: The minimum supported API version number\n          format: int32\n          type: number\n        shouldShowTrialDialog:\n          description: True if the trial dialog pops up when logging into groov\n          type: boolean\n        timezoneName:\n          description: The server's timezone\n          type: string\n        timezoneOffset:\n          description: The server's timezone offset from UTC in minutes\n          format: int32\n          type: number\n        trialPeriodExpiration:\n          description: Milliseconds until trial period is expired\n          format: int64\n          type: number\n        warVersion:\n          description: The version number of the war\n          type: string\n      required:\n        - isGroovBox\n        - isGroovBoxSetup\n        - isCoreInUse\n        - isOpcUaInUse\n        - isLicenseValid\n        - licenseType\n        - trialPeriodExpiration\n        - shouldShowTrialDialog\n        - groovBoxDescription\n        - groovAdminVersion\n        - groovNodeRedVersion\n        - timezoneOffset\n        - timezoneName\n        - warVersion\n        - minimumApiVersion\n        - currentApiVersion\n      type: object\n    integerArrayValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              items:\n                format: int64\n                type: number\n              type: array\n          required:\n            - value\n          type: object\n    integerValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              format: int64\n              type: number\n          required:\n            - value\n          type: object\n    stringArrayValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              items:\n                type: string\n              type: array\n          required:\n            - value\n          type: object\n    stringValue:\n      allOf:\n        - $ref: \"#/components/schemas/tagValue\"\n        - properties:\n            value:\n              type: string\n          required:\n            - value\n          type: object\n    tagDefinition:\n      properties:\n        dataType:\n          enum:\n            - boolean\n            - integer\n            - float\n            - string\n            - booleanArray\n            - integerArray\n            - floatArray\n            - stringArray\n          type: string\n        deviceId:\n          format: int64\n          type: number\n        id:\n          format: int64\n          type: number\n        length:\n          format: int32\n          type: number\n        name:\n          type: string\n      required:\n        - id\n        - deviceId\n        - name\n        - dataType\n      type: object\n    tagReference:\n      properties:\n        count:\n          description: For array tags, the number of elements to read, starting at index.\n          format: int32\n          type: number\n        id:\n          description: Unique id for the tag.\n          format: int64\n          type: number\n        index:\n          description: For array tags, the index to start reading at.\n          format: int32\n          type: number\n      required:\n        - id\n      type: object\n    tagValue:\n      discriminator:\n        propertyName: valueType\n      properties:\n        valueType:\n          type: string\n      required:\n        - valueType\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/opto22.com-groov-R3.3a-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/opto22.com-groov-R3.3a-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}