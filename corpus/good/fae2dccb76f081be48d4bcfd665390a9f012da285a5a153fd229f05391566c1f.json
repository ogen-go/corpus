{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tdakkota/gnhentai"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/swagger.yaml",
			"byteSize": 8083,
			"content": "openapi: 3.0.1\n\ninfo:\n  title: Nhentai.net API\n  description: Swagger description of nhentai.net API.\n  version: 1.0.0\n\nservers:\n  - url: https://nhentai.net/\n\ntags:\n  - name: search\n    description: Search books at nhentai.net\n  - name: book\n    description: Get metadata of book\n  - name: image\n    description: Get cover and pages\n\npaths:\n  /api/galleries/search:\n    get:\n      tags:\n        - search\n      summary: Search for comics\n      operationId: search\n      parameters:\n        - name: query\n          in: query\n          description: \"Search query.\n        \n        * You can search for multiple terms at the same time, and this will return only galleries that contain both terms. For example, anal tanlines finds all galleries that contain both anal and tanlines.\n        \n        * You can exclude terms by prefixing them with -. For example, anal tanlines -yaoi matches all galleries matching anal and tanlines but not yaoi.\n        \n        * Exact searches can be performed by wrapping terms in double quotes. For example, \\\"big breasts\\\" only matches galleries with \\\"big breasts\\\" somewhere in the title or in tags.\n        \n        * These can be combined with tag namespaces for finer control over the query: parodies:railgun -tag:\\\"big breasts\\\".\n        \"\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Number of result page.\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SearchResponse'\n        403:\n          description: You need to provide a search query.\n          content: {}\n\n  /api/galleries/tagged:\n    get:\n      tags:\n        - search\n      summary: Search for comics by tag ID\n      operationId: searchByTagID\n      parameters:\n        - name: tag_id\n          in: query\n          description: Tag ID.\n          required: true\n          schema:\n            type: integer\n        - name: page\n          in: query\n          description: Number of result page.\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SearchResponse'\n        403:\n          description: Just an error.\n          content: {}\n\n  /api/gallery/{book_id}:\n    get:\n      tags:\n        - book\n      summary: Gets metadata of book\n      operationId: getBook\n      parameters:\n        - name: book_id\n          in: path\n          description: ID of book.\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Book'\n        403:\n          description: Invalid status value\n          content: {}\n\n  /galleries/{media_id}/{page}.{format}:\n    get:\n      tags:\n        - image\n      summary: Gets page\n      operationId: getPageImage\n      servers:\n        - url: https://i.nhentai.net\n          description: Use CDN host instead of API\n      parameters:\n        - name: media_id\n          in: path\n          description: ID of book.\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n        - name: page\n          in: path\n          description: Number of page.\n          required: true\n          schema:\n            minimum: 0\n            type: integer\n        - name: format\n          in: path\n          description: Image format.\n          required: true\n          schema:\n            type: string\n            default: jpg\n      responses:\n        200:\n          description: OK\n          content:\n            image/*:\n              schema:\n                format: binary\n        403:\n          description: Invalid status value\n          content: {}\n\n  /galleries/{media_id}/{page}t.{format}:\n    get:\n      tags:\n        - image\n      summary: Gets page thumbnail\n      operationId: getPageThumbnailImage\n      servers:\n        - url: https://t.nhentai.net\n          description: Use CDN host instead of API\n      parameters:\n        - name: media_id\n          in: path\n          description: ID of book.\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n        - name: page\n          in: path\n          description: Number of page.\n          required: true\n          schema:\n            minimum: 0\n            type: integer\n        - name: format\n          in: path\n          description: Image format.\n          required: true\n          schema:\n            type: string\n            default: jpg\n      responses:\n        200:\n          description: OK\n          content:\n            image/*:\n              schema:\n                format: binary\n        403:\n          description: Invalid status value\n          content: {}\n\n  /galleries/{media_id}/cover.{format}:\n    get:\n      tags:\n        - image\n      summary: Gets page cover\n      operationId: getPageCoverImage\n      servers:\n        - url: https://t.nhentai.net\n          description: Use CDN host instead of API\n      parameters:\n        - name: media_id\n          in: path\n          description: ID of book.\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n        - name: format\n          in: path\n          description: Image format.\n          required: true\n          schema:\n            type: string\n            default: jpg\n      responses:\n        200:\n          description: OK\n          content:\n            image/*:\n              schema:\n                format: binary\n        403:\n          description: Invalid status value\n          content: {}\n\ncomponents:\n  schemas:\n    Tag:\n      type: object\n      properties:\n        id:\n          minimum: 1\n          type: integer\n        type:\n          type: string\n          enum:\n            - parody\n            - character\n            - tag\n            - artist\n            - group\n            - category\n            - language\n        name:\n          type: string\n        url:\n          type: string\n        count:\n          type: integer\n\n    Title:\n      type: object\n      properties:\n        english:\n          type: string\n        japanese:\n          type: string\n        pretty:\n          type: string\n\n    Image:\n      type: object\n      properties:\n        t:\n          type: string\n        w:\n          minimum: 0\n          type: integer\n          description: width of image\n        h:\n          minimum: 0\n          type: integer\n          description: height of image\n\n    Images:\n      type: object\n      properties:\n        pages:\n          type: array\n          items:\n            $ref: '#/components/schemas/Image'\n        cover:\n          $ref: '#/components/schemas/Image'\n        thumbnail:\n          $ref: '#/components/schemas/Image'\n\n    Book:\n      type: object\n      properties:\n        id:\n          minimum: 1\n          type: integer\n        media_id:\n          minimum: 1\n          type: integer\n        images:\n          $ref: '#/components/schemas/Images'\n        title:\n          $ref: '#/components/schemas/Title'\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        scanlator:\n          type: string\n        upload_date:\n          type: integer\n        num_pages:\n          minimum: 0\n          type: integer\n        num_favorites:\n          minimum: 0\n          type: integer\n\n    SearchResponse:\n      type: object\n      properties:\n        result:\n          type: array\n          items:\n            $ref: '#/components/schemas/Book'\n        num_pages:\n          type: integer\n          description: total number of pages\n        per_page:\n          type: integer\n          description: elements on one page\n",
			"canonicalURL": "/github.com/tdakkota/gnhentai@01ca02eba1f4b2e478bbd3a17871f6ff7c9ed8ff/-/blob/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tdakkota/gnhentai/blob/01ca02eba1f4b2e478bbd3a17871f6ff7c9ed8ff/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}