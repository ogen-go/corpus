{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Forceu/barcodebuddy"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "openapi.json",
			"byteSize": 13584,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Barcode Buddy\",\n    \"version\": \"1.0.2\",\n    \"description\": \"BarcodeBuddy API\",\n    \"license\": {\n      \"name\": \"GNU GPLv3\",\n      \"url\": \"https://www.gnu.org/licenses/gpl.txt\"\n    }\n  },\n  \"paths\": {\n    \"/system/info\": {\n      \"get\": {\n        \"tags\": [\n          \"system\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"version\": {\n                          \"type\": \"string\"\n                        },\n                        \"version_int\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"result\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        },\n                        \"http_code\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"data\": {\n                    \"version\": \"1.4.1.1\",\n                    \"version_int\": \"1411\"\n                  },\n                  \"result\": {\n                    \"result\": \"OK\",\n                    \"http_code\": 200\n                  }\n                }\n              }\n            },\n            \"description\": \"Response\"\n          }\n        },\n        \"security\": [\n          {\n            \"apikey\": []\n          }\n        ],\n        \"summary\": \"Returns version number\"\n      }\n    },\n    \"/system/barcodes\": {\n      \"get\": {\n        \"tags\": [\n          \"system\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"BARCODE_C\": {\n                          \"type\": \"string\"\n                        },\n                        \"BARCODE_CS\": {\n                          \"type\": \"string\"\n                        },\n                        \"BARCODE_P\": {\n                          \"type\": \"string\"\n                        },\n                        \"BARCODE_O\": {\n                          \"type\": \"string\"\n                        },\n                        \"BARCODE_GS\": {\n                          \"type\": \"string\"\n                        },\n                        \"BARCODE_Q\": {\n                          \"type\": \"string\"\n                        },\n                        \"BARCODE_AS\": {\n                          \"type\": \"string\"\n                        },\n                        \"BARCODE_CA\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"result\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        },\n                        \"http_code\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"data\": {\n                      \"BARCODE_C\": \"BBUDDY-C\",\n                      \"BARCODE_CS\": \"BBUDDY-CS\",\n                      \"BARCODE_P\": \"BBUDDY-P\",\n                      \"BARCODE_O\": \"BBUDDY-O\",\n                      \"BARCODE_GS\": \"BBUDDY-I\",\n                      \"BARCODE_Q\": \"BBUDDY-Q-\",\n                      \"BARCODE_AS\": \"BBUDDY-AS\",\n                      \"BARCODE_CA\": \"BBUDDY-CA\"\n                    },\n                    \"result\": {\n                      \"result\": \"OK\",\n                      \"http_code\": 200\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"Response\"\n          }\n        },\n        \"security\": [\n          {\n            \"apikey\": []\n          }\n        ],\n        \"summary\": \"Returns all special barcodes\"\n      }\n    },\n    \"/state/getmode\": {\n      \"description\": \"STATE_CONSUME         = 0;\\nSTATE_CONSUME_SPOILED = 1;\\nSTATE_PURCHASE        = 2;\\nSTATE_OPEN            = 3;\\nSTATE_GETSTOCK        = 4;\\nSTATE_ADD_SL          = 5;\",\n      \"get\": {\n        \"tags\": [\n          \"state\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"mode\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    },\n                    \"result\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        },\n                        \"http_code\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"data\": {\n                      \"mode\": 0\n                    },\n                    \"result\": {\n                      \"result\": \"OK\",\n                      \"http_code\": 200\n                    }\n                  }\n                }\n              }\n            },\n            \"description\": \"STATE_CONSUME = 0; \\nSTATE_CONSUME_SPOILED = 1; \\nSTATE_PURCHASE = 2; \\nSTATE_OPEN = 3;\\nSTATE_GETSTOCK = 4; \\nSTATE_ADD_SL = 5; \\nSTATE_CONSUME_ALL = 6;\"\n          }\n        },\n        \"security\": [\n          {\n            \"apikey\": []\n          }\n        ],\n        \"summary\": \"Returns current mode\"\n      }\n    },\n    \"/state/setmode\": {\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"state\": {\n                    \"description\": \"STATE_CONSUME = 0; \\nSTATE_CONSUME_SPOILED = 1; \\nSTATE_PURCHASE = 2; \\nSTATE_OPEN = 3;\\nSTATE_GETSTOCK = 4; \\nSTATE_ADD_SL = 5; \\nSTATE_CONSUME_ALL = 6;\",\n                    \"type\": \"integer\"\n                  }\n                },\n                \"required\": [\n                  \"state\"\n                ]\n              },\n              \"examples\": {\n                \"Set_Consume\": {\n                  \"value\": 0\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"tags\": [\n          \"state\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Mode set successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"string\"\n                    },\n                    \"result\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        },\n                        \"http_code\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"data\": null,\n                    \"result\": {\n                      \"result\": \"OK\",\n                      \"http_code\": 200\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Error if invalid state int supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        },\n                        \"http_code\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"data\": null,\n                    \"result\": {\n                      \"result\": \"Invalid state provided\",\n                      \"http_code\": 400\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"apikey\": []\n          }\n        ],\n        \"summary\": \"Sets current mode\"\n      }\n    },\n    \"/action/scan\": {\n      \"post\": {\n        \"tags\": [\n          \"action\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"barcode\": {\n                    \"type\": \"string\"\n                  },\n                  \"price\": {\n                    \"type\": \"number\"\n                  },\n                  \"bestBeforeInDays\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The amount of days from today until the item expires\"\n                  }\n                },\n                \"required\": [\n                  \"barcode\"\n                ]\n              },\n              \"examples\": {\n                \"Send_123456\": {\n                  \"value\": \"123456\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Scan successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"result\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        },\n                        \"http_code\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"data\": {\n                      \"result\": \"Unknown barcode looked up, found name: Olive Oil. Barcode: 123456789\"\n                    },\n                    \"result\": {\n                      \"result\": \"OK\",\n                      \"http_code\": 200\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Error if no barcode supplied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"result\": {\n                          \"type\": \"string\"\n                        },\n                        \"http_code\": {\n                          \"format\": \"int32\",\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"data\": null,\n                    \"result\": {\n                      \"result\": \"No barcode supplied\",\n                      \"http_code\": 400\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"apikey\": []\n          }\n        ],\n        \"summary\": \"Passes a barcode to Barcode Buddy\"\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"apikey\": {\n        \"type\": \"apiKey\",\n        \"description\": \"API key provided by UI\",\n        \"name\": \"BBUDDY-API-KEY\",\n        \"in\": \"header\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"apikey\": []\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"system\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"action\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"state\",\n      \"description\": \"\"\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"/api/\",\n      \"description\": \"Target server\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/Forceu/barcodebuddy@3321694a4c111404495f69815099ce303f138961/-/blob/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/Forceu/barcodebuddy/blob/3321694a4c111404495f69815099ce303f138961/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}