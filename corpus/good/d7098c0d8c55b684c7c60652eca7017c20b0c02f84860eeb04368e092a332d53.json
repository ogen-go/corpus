{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dabit3/architect-with-react-and-aws-amplify"
		},
		"file": {
			"name": "sam.json",
			"size": 0,
			"path": "infra/sam.json",
			"byteSize": 13972,
			"content": "{\n  \"AWSTemplateFormatVersion\": \"2010-09-09\",\n  \"Transform\": \"AWS::Serverless-2016-10-31\",\n  \"Description\": \"Exported by architect/package@4.0.1 on 2020-11-20T22:46:43.884Z\",\n  \"Resources\": {\n    \"HTTP\": {\n      \"Type\": \"AWS::Serverless::HttpApi\",\n      \"Properties\": {\n        \"StageName\": \"$default\",\n        \"DefinitionBody\": {\n          \"openapi\": \"3.0.1\",\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            }\n          },\n          \"paths\": {\n            \"/\": {\n              \"get\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations\"\n                  },\n                  \"connectionType\": \"INTERNET\"\n                }\n              }\n            },\n            \"/posts\": {\n              \"get\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPosts.Arn}/invocations\"\n                  },\n                  \"connectionType\": \"INTERNET\"\n                }\n              },\n              \"post\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostPosts.Arn}/invocations\"\n                  },\n                  \"connectionType\": \"INTERNET\"\n                }\n              }\n            },\n            \"/posts/{postID}\": {\n              \"get\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPostsPostID.Arn}/invocations\"\n                  },\n                  \"connectionType\": \"INTERNET\"\n                }\n              },\n              \"delete\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeletePostsPostID.Arn}/invocations\"\n                  },\n                  \"connectionType\": \"INTERNET\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"GetIndex\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/get-index\",\n        \"Runtime\": \"nodejs12.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"react-arc\",\n            \"ARC_HTTP\": \"aws_proxy\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"GetIndexEvent\": {\n            \"Type\": \"HttpApi\",\n            \"Properties\": {\n              \"Path\": \"/\",\n              \"Method\": \"GET\",\n              \"ApiId\": {\n                \"Ref\": \"HTTP\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"GetPosts\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/get-posts\",\n        \"Runtime\": \"nodejs12.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"react-arc\",\n            \"ARC_HTTP\": \"aws_proxy\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"GetPostsEvent\": {\n            \"Type\": \"HttpApi\",\n            \"Properties\": {\n              \"Path\": \"/posts\",\n              \"Method\": \"GET\",\n              \"ApiId\": {\n                \"Ref\": \"HTTP\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"GetPostsPostID\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/get-posts-000postID\",\n        \"Runtime\": \"nodejs12.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"react-arc\",\n            \"ARC_HTTP\": \"aws_proxy\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"GetPostsPostIDEvent\": {\n            \"Type\": \"HttpApi\",\n            \"Properties\": {\n              \"Path\": \"/posts/{postID}\",\n              \"Method\": \"GET\",\n              \"ApiId\": {\n                \"Ref\": \"HTTP\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"PostPosts\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/post-posts\",\n        \"Runtime\": \"nodejs12.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"react-arc\",\n            \"ARC_HTTP\": \"aws_proxy\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"PostPostsEvent\": {\n            \"Type\": \"HttpApi\",\n            \"Properties\": {\n              \"Path\": \"/posts\",\n              \"Method\": \"POST\",\n              \"ApiId\": {\n                \"Ref\": \"HTTP\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"DeletePostsPostID\": {\n      \"Type\": \"AWS::Serverless::Function\",\n      \"Properties\": {\n        \"Handler\": \"index.handler\",\n        \"CodeUri\": \"./src/http/delete-posts-000postID\",\n        \"Runtime\": \"nodejs12.x\",\n        \"MemorySize\": 1152,\n        \"Timeout\": 5,\n        \"Environment\": {\n          \"Variables\": {\n            \"ARC_ROLE\": {\n              \"Ref\": \"Role\"\n            },\n            \"ARC_CLOUDFORMATION\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"ARC_APP_NAME\": \"react-arc\",\n            \"ARC_HTTP\": \"aws_proxy\",\n            \"NODE_ENV\": \"staging\",\n            \"SESSION_TABLE_NAME\": \"jwe\"\n          }\n        },\n        \"Role\": {\n          \"Fn::Sub\": [\n            \"arn:aws:iam::${AWS::AccountId}:role/${roleName}\",\n            {\n              \"roleName\": {\n                \"Ref\": \"Role\"\n              }\n            }\n          ]\n        },\n        \"Events\": {\n          \"DeletePostsPostIDEvent\": {\n            \"Type\": \"HttpApi\",\n            \"Properties\": {\n              \"Path\": \"/posts/{postID}\",\n              \"Method\": \"DELETE\",\n              \"ApiId\": {\n                \"Ref\": \"HTTP\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"PostsTable\": {\n      \"Type\": \"AWS::DynamoDB::Table\",\n      \"Properties\": {\n        \"KeySchema\": [\n          {\n            \"AttributeName\": \"postID\",\n            \"KeyType\": \"HASH\"\n          }\n        ],\n        \"AttributeDefinitions\": [\n          {\n            \"AttributeName\": \"postID\",\n            \"AttributeType\": \"S\"\n          },\n          {\n            \"AttributeName\": \"type\",\n            \"AttributeType\": \"S\"\n          }\n        ],\n        \"BillingMode\": \"PAY_PER_REQUEST\",\n        \"GlobalSecondaryIndexes\": [\n          {\n            \"IndexName\": \"type-index\",\n            \"KeySchema\": [\n              {\n                \"AttributeName\": \"type\",\n                \"KeyType\": \"HASH\"\n              }\n            ],\n            \"Projection\": {\n              \"ProjectionType\": \"ALL\"\n            }\n          }\n        ]\n      }\n    },\n    \"Role\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": \"lambda.amazonaws.com\"\n              },\n              \"Action\": \"sts:AssumeRole\"\n            }\n          ]\n        },\n        \"Policies\": [\n          {\n            \"PolicyName\": \"ArcGlobalPolicy\",\n            \"PolicyDocument\": {\n              \"Statement\": [\n                {\n                  \"Effect\": \"Allow\",\n                  \"Action\": [\n                    \"logs:CreateLogGroup\",\n                    \"logs:CreateLogStream\",\n                    \"logs:PutLogEvents\",\n                    \"logs:DescribeLogStreams\"\n                  ],\n                  \"Resource\": \"arn:aws:logs:*:*:*\"\n                }\n              ]\n            }\n          },\n          {\n            \"PolicyName\": \"ArcDynamoPolicy\",\n            \"PolicyDocument\": {\n              \"Statement\": [\n                {\n                  \"Effect\": \"Allow\",\n                  \"Action\": [\n                    \"dynamodb:BatchGetItem\",\n                    \"dynamodb:BatchWriteItem\",\n                    \"dynamodb:PutItem\",\n                    \"dynamodb:DeleteItem\",\n                    \"dynamodb:GetItem\",\n                    \"dynamodb:Query\",\n                    \"dynamodb:Scan\",\n                    \"dynamodb:UpdateItem\",\n                    \"dynamodb:GetRecords\",\n                    \"dynamodb:GetShardIterator\",\n                    \"dynamodb:DescribeStream\",\n                    \"dynamodb:ListStreams\"\n                  ],\n                  \"Resource\": [\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"PostsTable\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"PostsTable\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"Fn::Sub\": [\n                        \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*\",\n                        {\n                          \"tablename\": {\n                            \"Ref\": \"PostsTable\"\n                          }\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ]\n      }\n    },\n    \"PostsParam\": {\n      \"Type\": \"AWS::SSM::Parameter\",\n      \"Properties\": {\n        \"Type\": \"String\",\n        \"Name\": {\n          \"Fn::Sub\": [\n            \"/${AWS::StackName}/tables/${tablename}\",\n            {\n              \"tablename\": \"posts\"\n            }\n          ]\n        },\n        \"Value\": {\n          \"Ref\": \"PostsTable\"\n        }\n      }\n    },\n    \"ParameterStorePolicy\": {\n      \"Type\": \"AWS::IAM::Policy\",\n      \"DependsOn\": \"Role\",\n      \"Properties\": {\n        \"PolicyName\": \"ArcParameterStorePolicy\",\n        \"PolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": \"ssm:GetParametersByPath\",\n              \"Resource\": {\n                \"Fn::Sub\": [\n                  \"arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}\",\n                  {}\n                ]\n              }\n            }\n          ]\n        },\n        \"Roles\": [\n          {\n            \"Ref\": \"Role\"\n          }\n        ]\n      }\n    }\n  },\n  \"Outputs\": {\n    \"API\": {\n      \"Description\": \"API Gateway (HTTP)\",\n      \"Value\": {\n        \"Fn::Sub\": [\n          \"https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com\",\n          {\n            \"ApiId\": {\n              \"Ref\": \"HTTP\"\n            }\n          }\n        ]\n      }\n    },\n    \"ApiId\": {\n      \"Description\": \"API ID (ApiId)\",\n      \"Value\": {\n        \"Ref\": \"HTTP\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/dabit3/architect-with-react-and-aws-amplify@380087dc11eb6c60b1efe7e53f0755494f37df18/-/blob/infra/sam.json",
			"externalURLs": [
				{
					"url": "https://github.com/dabit3/architect-with-react-and-aws-amplify/blob/380087dc11eb6c60b1efe7e53f0755494f37df18/infra/sam.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}