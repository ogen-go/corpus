{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PeterPlevko/STU-FIIT"
		},
		"file": {
			"name": "dbs2021v4.yaml",
			"size": 0,
			"path": "Databázové systémy/Zadanie/dbs2021v4.yaml",
			"byteSize": 32246,
			"content": "openapi: 3.0.0\ninfo:\n  title: DBS 2021\n  description: Definícia API zadania na predmet DBS 2021\n  version: 0.3.0\nservers:\n  - url: https://fiit-dbs-xdubec-app.azurewebsites.net\n    description: Váš Azure server\ntags:\n- name: \"Zadanie 1\"\n- name: \"Zadanie 2\"\n- name: \"Zadanie 3\"\n- name: \"Zadanie 4\"\n\npaths:\n  /v1/health:\n    get:\n      tags:\n        - \"Zadanie 1\"\n      summary: Vráti informácie o tom, ako dlho beží inštancia databázového servera.\n      description: Na získanie žiadanej informácie použite nasledujúci SQL dotaz `SELECT date_trunc('second', current_timestamp - pg_postmaster_start_time()) as uptime;`\n      responses:\n        '200':\n          description: Očakávaná odpoveď vo formáte [JSON](https://www.json.org/json-en.html)\n          content:\n            application/json:\n              schema: \n                type: object\n                properties: \n                  pgsql:\n                    type: object\n                    example: \n                      uptime: '10 days 21:20:12'\n  /v1/ov/submissions:\n    get:\n      tags:\n        - \"Zadanie 2\"\n      summary: Vráti zoznam podaní z tabuĺky `ov.or_podania_issues`\n      description: \u003e\n        Pre tabuľku ov/ov_podania_issues vytvorte endpoint **GET /v1/ov/submissions**, ktorý \n        bude stránkovaný a bude vracať pole objektov, ktoré priamo mapujú databázové stĺpce:\n\n          - `id`\n          - `br_court_name`\n          - `kind_name`\n          - `cin`\n          - `registration_date`\n          - `corporate_body_name`\n          - `br_section`\n          - `br_insertion`\n          - `text`\n          - `street`\n          - `postal_code`\n          - `city`\n\n\n        **Dbajte na dodržiavanie datových typov!**\n\n\n        Stránkovanie bude fungovať na základe GET parametrov `page` a `per_page`, kde štandardný \n        počet záznamov na stránku bude 10. Teda: `GET /v1/ov/submissions/?page=1\u0026per_page=10` \n        je ekvivalentné s `GET /v1/ov/submissions`.\n       \n       \n        Parameter `page` definuje stránku v poradí, ktorá sa aktuálne zobrazuje, parameter\n        `per_page` hovorí o tom, koľko záznamov sa nachádza na jednej stránke. Príklad: \n        `GET /v1/ov/submissions/?page=3\u0026per_page=10` zobrazí  záznamy v poradí 21 – 30 vrátane. \n        \n        \n        Keďže sú to parametre, tak si dávajte pozor, aby to fungovalo pre všetky možné kombinácie.\n        \n        \n        Umožnite vyhľadávať nad nasledovnými stĺpcami: `corporate_body_name`, `cin`, `city` \n        fulltextovo (OR medzi nimi) a nad poľom `registration_date` väčšie rovné aj menšie \n        rovné hodnoty nasledovne:\n        \n        \n        `GET /v1/ov/submissions/?query=Orange%20Slovensko\u0026registration_date_gte=2016-06-17%2011%3A14%3A42.579414\u0026registration_date_lte=2017-06-17%2011%3A14%3A42.579414`\n        \n        \n        Umožnite zoraďovať výsledky podľa jedného vybraného stĺpca spomedzi všetkých ktoré sa \n        štandardne vracajú nasledovne:\n        \n        \n        `GET /v1/ov/submissions/?order_by=registration_date\u0026order_type=desc`\n      parameters:\n        - name: page\n          in: query\n          required: false\n          description: Číslo žiadanej stránky (adresované od 1)\n          schema:\n            type: integer\n            format: int64\n        - name: per_page\n          in: query\n          required: false\n          description: Počet záznamov na jednej stránke\n          schema:\n            type: integer\n            format: int64\n        - name: order_by\n          in: query\n          required: false\n          description: Názov stĺpca, podľa ktorého bude zoradený výsledok\n          schema:\n            type: string\n            enum:\n              - id\n              - br_court_name\n              - kind_name\n              - cin\n              - registration_date\n              - corporate_body_name\n              - br_section\n              - br_insertion\n              - text\n              - street\n              - postal_code\n              - city\n        - name: order_type\n          in: query\n          required: false\n          description: Orientácia zoraďovania\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - name: registration_date_lte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: registration_date_gte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: query\n          description: Full-text vyhľadávanie nad stĺpcami `corporate_body_name`, `cin`, `city`\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: List záznamov z tabuľky `or_podania_issues`\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/SubmissionDetail'\n                  metadata:\n                    $ref: '#/components/schemas/Metadata'\n    post:\n      tags:\n        - \"Zadanie 2\"\n      summary: Vytvorý nový záznam v tabuľke `ov.or_podania_issues`\n      description: \u003e\n        Pridajte metódu `POST /v1/ov/submissions`, ktorá vytvorí nový záznam do tabuľky \n        ov/or_podania_issues. Metóda musí validovať nasledovné hodnoty:\n\n          - `br_court_name`: povinné pole\n          - `kind_name`: povinné pole\n          - `cin`: povinné pole, len číselná hodnota\n          - `registration_date`: povinné pole, hodnota môže byť len z aktuálneho roka\n          - `corporate_body_name`: povinné pole\n          - `br_section`: povinné pole\n          - `br_insertion`: povinné pole\n          - `text`: povinné pole\n          - `street`: povinné pole\n          - `postal_code`: povinné pole\n          - `city`: povinné pole\n\n\n        Systém automaticky doplní správne `created_at`, `updated_at`, `address_line` a zaroveň \n        vytvorí záznamy v tabuľkách `raw_issues` a `bulletin_issues`. Do ostatných stĺpcov \n        vložte znak –. V prípade úspešného zapísania, vráťte HTTP status kód 201 Created a \n        detailom záznamu v rovnakom formáte ako je v liste.\n        \n        \n        V prípade validačnej chyby vráťte chybu v tvare s HTTP status kódom 422:\n      responses:\n        '201':\n          description: Detail vytvoreného záznamu\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  response:\n                    $ref: '#/components/schemas/SubmissionDetail'\n        '422':\n          description: Detaily validačnej chyby\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  errors:\n                    type: array\n                    items:\n                      properties:\n                        field:\n                          type: string\n                        reasons:\n                          type: array\n                    example:\n                      - field: registration_date\n                        reasons: [required, invalid_range]\n                      - field: cin\n                        reasons: [required, not_number]\n                      - field: streat\n                        reasons: [required]\n\n  /v1/ov/submissions/{submissionId}:\n    delete:\n      tags:\n        - \"Zadanie 2\"\n      summary: Odstránenie záznamu pomocou ID\n      description: \u003e\n        Pridajte metódu `DELETE /v1/ov/submissions/:id`, kde :id je id záznamu na zmazanie. \n        Daný záznam sa zmaže z DB. Nezabudnite zmazať aj príslušné záznamy v tabuľkách \n        `raw_issues` a `bulletin_issues`. V prípade, že záznam neexistuje vráťte HTTP \n        status kód 404, ak sa podarilo záznam zmazať tak 204 a žiadny response body.\n      parameters:\n        - in: path\n          name: submissionId\n          schema:\n            type: integer\n          required: true\n          description: Identifikátor záznamu (primárny klúč)\n      responses:\n        '204':\n          description: V prípade úspešného záznamu, server vracia prázdnu odpoveď\n        '404':\n          description: Záznam neexistuje na strane servrera\n          content:\n            application/json:\n              schema: \n                type: object\n                properties: \n                  error:\n                    type: object\n                    example: \n                      message: \"Záznam neexistuje\"\n  /v1/companies:\n    get:\n      tags:\n        - \"Zadanie 3\"\n      summary: Vráti zoznam firiem z tabuĺky `ov.companies`\n      description: \u003e\n        Po vytvorení tabuľky firiem a zmigrovaní dát, vytvorte endpoint `/v1/companies`. \n        Tento endpoint bude vracať všetky firmy z tabuľky `companies` a bude obsahovať pole \n        objektov, kde každý má nasledovné polia:\n\n          - `cin`\n          - `name`\n          - `br_section`\n          - `address_line`\n          - `last_update`\n          - `or_podanie_issues_count`: počet asociovaných záznamov z tabuľky `or_podanie_issues` pre danú firmu\n          - `znizenie_imania_issues_count`: počet asociovaných záznamov z tabuľky `znizenie_imania_issues` pre danú firmu\n          - `likvidator_issues_count`: počet asociovaných záznamov z tabuľky `likvidator_issues` pre danú firmu\n          - `konkurz_vyrovnanie_issues_count`: počet asociovaných záznamov z tabuľky `konkurz_vyrovnanie_issues` pre danú firmu\n          - `konkurz_restrukturalizacia_actors_count`: počet asociovaných záznamov z tabuľky `konkurz_restrukturalizacia_actors` pre danú firmu\n        \n        Dáta pre endpoint musia byť vytiahnuté pomocou jednej query (operácie v rámci DDL sa nepočítajú \n        k danej query), ktorá musí bez použitia hocijakej podmienky zbehnúť do 70 sekúnd na AWS \n        (pre porovnanie na 2,6 GHz 6-Core Intel Core i7 to ide okolo 30 sekúnd). \n\n\n        Endpoint musí vedieť vyhľadávať nad poľami `name` a `address_line` cez GET parameter `query` \n        tak ako nad parametrom `last_update` cez `last_update_gte` a `last_update_lte`. GET parametre sú \n        rovnako definované ako v predošlom zadaní.\n       \n        Endpoint zároveň podporuje rovnaké stránkovanie ako v predošlom zadaní a rovnako sa dá zoraďovať nad \n        každým stĺpcom pomocou GET parametrov `order_by` a `order_type`.\n      parameters:\n        - name: page\n          in: query\n          required: false\n          description: Číslo žiadanej stránky (adresované od 1)\n          schema:\n            type: integer\n            format: int64\n        - name: per_page\n          in: query\n          required: false\n          description: Počet záznamov na jednej stránke\n          schema:\n            type: integer\n            format: int64\n        - name: order_by\n          in: query\n          required: false\n          description: Názov stĺpca, podľa ktorého bude zoradený výsledok\n          schema:\n            type: string\n            enum:\n              - cin\n              - name\n              - br_section\n              - address_line\n              - last_update\n        - name: order_type\n          in: query\n          required: false\n          description: Orientácia zoraďovania\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - name: last_update_lte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: last_update_gte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: query\n          description: Full-text vyhľadávanie nad stĺpcami `name` a `address_line`\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: List záznamov z tabuľky `companies`\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CompanyDetail'\n                  metadata:\n                    $ref: '#/components/schemas/Metadata'\n  \n  /v2/ov/submissions:\n    get:\n      tags:\n        - \"Zadanie 4\"\n      summary: Vráti zoznam podaní z tabuĺky `ov.or_podania_issues`\n      description: \u003e\n        Pre tabuľku ov/ov_podania_issues vytvorte endpoint pomocou ORM **GET /v2/ov/submissions**, ktorý \n        bude stránkovaný a bude vracať pole objektov, ktoré priamo mapujú databázové stĺpce:\n\n          - `id`\n          - `br_court_name`\n          - `kind_name`\n          - `cin`\n          - `registration_date`\n          - `corporate_body_name`\n          - `br_section`\n          - `br_insertion`\n          - `text`\n          - `street`\n          - `postal_code`\n          - `city`\n\n\n        **Dbajte na dodržiavanie datových typov!**\n\n\n        Stránkovanie bude fungovať na základe GET parametrov `page` a `per_page`, kde štandardný \n        počet záznamov na stránku bude 10. Teda: `GET /v2/ov/submissions/?page=1\u0026per_page=10` \n        je ekvivalentné s `GET /v2/ov/submissions`.\n       \n       \n        Parameter `page` definuje stránku v poradí, ktorá sa aktuálne zobrazuje, parameter\n        `per_page` hovorí o tom, koľko záznamov sa nachádza na jednej stránke. Príklad: \n        `GET /v2/ov/submissions/?page=3\u0026per_page=10` zobrazí  záznamy v poradí 21 – 30 vrátane. \n        \n        \n        Keďže sú to parametre, tak si dávajte pozor, aby to fungovalo pre všetky možné kombinácie.\n        \n        \n        Umožnite vyhľadávať nad nasledovnými stĺpcami: `corporate_body_name`, `cin`, `city` \n        fulltextovo (OR medzi nimi) a nad poľom `registration_date` väčšie rovné aj menšie \n        rovné hodnoty nasledovne:\n        \n        \n        `GET /v2/ov/submissions/?query=Orange%20Slovensko\u0026registration_date_gte=2016-06-17%2011%3A14%3A42.579414\u0026registration_date_lte=2017-06-17%2011%3A14%3A42.579414`\n        \n        \n        Umožnite zoraďovať výsledky podľa jedného vybraného stĺpca (NULL hodnoty majú byť posledné) spomedzi všetkých ktoré sa \n        štandardne vracajú nasledovne:\n        \n        \n        `GET /v2/ov/submissions/?order_by=registration_date\u0026order_type=desc`\n      parameters:\n        - name: page\n          in: query\n          required: false\n          description: Číslo žiadanej stránky (adresované od 1)\n          schema:\n            type: integer\n            format: int64\n        - name: per_page\n          in: query\n          required: false\n          description: Počet záznamov na jednej stránke\n          schema:\n            type: integer\n            format: int64\n        - name: order_by\n          in: query\n          required: false\n          description: Názov stĺpca, podľa ktorého bude zoradený výsledok\n          schema:\n            type: string\n            enum:\n              - id\n              - br_court_name\n              - kind_name\n              - cin\n              - registration_date\n              - corporate_body_name\n              - br_section\n              - br_insertion\n              - text\n              - street\n              - postal_code\n              - city\n        - name: order_type\n          in: query\n          required: false\n          description: Orientácia zoraďovania\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - name: registration_date_lte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: registration_date_gte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: query\n          description: Full-text vyhľadávanie nad stĺpcami `corporate_body_name`, `cin`, `city`\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: List záznamov z tabuľky `or_podania_issues`\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/SubmissionDetail'\n                  metadata:\n                    $ref: '#/components/schemas/Metadata'\n    \n    post:\n      tags:\n        - \"Zadanie 4\"\n      summary: Vytvorý nový záznam v tabuľke `ov.or_podania_issues`\n      description: \u003e\n        Pridajte metódu `POST /v2/ov/submissions`, ktorá vytvorí pomocou ORM nový záznam do tabuľky \n        ov/or_podania_issues. Metóda musí validovať nasledovné hodnoty:\n\n          - `br_court_name`: povinné pole\n          - `kind_name`: povinné pole\n          - `cin`: povinné pole, len číselná hodnota\n          - `registration_date`: povinné pole, hodnota môže byť len z aktuálneho roka\n          - `corporate_body_name`: povinné pole\n          - `br_section`: povinné pole\n          - `br_insertion`: povinné pole\n          - `text`: povinné pole\n          - `street`: povinné pole\n          - `postal_code`: povinné pole\n          - `city`: povinné pole\n\n\n        Systém automaticky doplní správne `created_at`, `updated_at`, `address_line` a zaroveň \n        vytvorí záznamy v tabuľkách `raw_issues` a `bulletin_issues`. Do ostatných stĺpcov \n        vložte znak –. V prípade úspešného zapísania, vráťte HTTP status kód 201 Created a \n        detailom záznamu v rovnakom formáte ako je v liste.\n        \n        \n        V prípade validačnej chyby vráťte chybu v tvare s HTTP status kódom 422:\n      responses:\n        '201':\n          description: Detail vytvoreného záznamu\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  response:\n                    $ref: '#/components/schemas/SubmissionDetail'\n        '422':\n          description: Detaily validačnej chyby\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  errors:\n                    type: array\n                    items:\n                      properties:\n                        field:\n                          type: string\n                        reasons:\n                          type: array\n                    example:\n                      - field: registration_date\n                        reasons: [required, invalid_range]\n                      - field: cin\n                        reasons: [required, not_number]\n                      - field: streat\n                        reasons: [required]\n  \n  /v2/ov/submissions/{submissionId}:\n    delete:\n      tags:\n        - \"Zadanie 4\"\n      summary: Odstránenie záznamu pomocou ID\n      description: \u003e\n        Pridajte metódu `DELETE /v2/ov/submissions/:id`, kde :id je id záznamu na zmazanie. \n        Daný záznam sa zmaže z DB pomocou oRM. Nezabudnite zmazať aj príslušné záznamy v tabuľkách \n        `raw_issues` a `bulletin_issues`. V prípade, že záznam neexistuje vráťte HTTP \n        status kód 404, ak sa podarilo záznam zmazať tak 204 a žiadny response body.\n      parameters:\n        - in: path\n          name: submissionId\n          schema:\n            type: integer\n          required: true\n          description: Identifikátor záznamu (primárny klúč)\n      responses:\n        '204':\n          description: V prípade úspešného záznamu, server vracia prázdnu odpoveď\n        '404':\n          description: Záznam neexistuje na strane servrera\n          content:\n            application/json:\n              schema: \n                type: object\n                properties: \n                  error:\n                    type: object\n                    example: \n                      message: \"Záznam neexistuje\"\n    get:\n      tags:\n        - \"Zadanie 4\"\n      summary: Získanie záznamu pomocou ID\n      description: \u003e\n        Pridajte metódu `GET /v2/ov/submissions/:id`, kde :id je id záznamu na prebratie. \n      parameters:\n        - in: path\n          name: submissionId\n          schema:\n            type: integer\n          required: true\n          description: Identifikátor záznamu (primárny klúč)\n      responses:\n        '200':\n          description: Detail vytvoreného záznamu\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  response:\n                    $ref: '#/components/schemas/SubmissionDetail'\n    put:\n      tags:\n        - \"Zadanie 4\"\n      summary: Upravte záznam v tabuľke `ov.or_podania_issues`\n      description: \u003e\n        Pridajte metódu `PUT /v2/ov/submissions/:id`, ktorá upraví pomocou ORM ľubovoľný parameter záznamu z\n        ov/or_podania_issues. Metóda musí obsahovať aspoň jedno pole ak ho obsahuje, musí validovať nasledovné hodnoty:\n\n          - `br_court_name`: string hodnota\n          - `kind_name`: string hodnota\n          - `cin`: číselná hodnota\n          - `registration_date`: hodnota môže byť len z aktuálneho roka\n          - `corporate_body_name`: string hodnota\n          - `br_section`: string hodnota\n          - `br_insertion`: string hodnota\n          - `text`: string hodnota\n          - `street`: string hodnota\n          - `postal_code`: string hodnota\n          - `city`: string hodnota\n\n        V prípade úspešného zapísania, vráťte HTTP status kód 201 Created a \n        detailom záznamu v rovnakom formáte ako je v liste.\n        \n        \n        V prípade validačnej chyby vráťte chybu v tvare s HTTP status kódom 422:\n      \n      parameters:\n        - in: path\n          name: submissionId\n          schema:\n            type: integer\n          required: true\n          description: Identifikátor záznamu (primárny klúč)\n\n      responses:\n        '201':\n          description: Detail vytvoreného záznamu\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  response:\n                    $ref: '#/components/schemas/SubmissionDetail'\n        '422':\n          description: Detaily validačnej chyby\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  errors:\n                    type: array\n                    items:\n                      properties:\n                        field:\n                          type: string\n                        reasons:\n                          type: array\n                    example:\n                      - field: registration_date\n                        reasons: [invalid_range]\n                      - field: cin\n                        reasons: [not_number]\n                      - field: street\n                        reasons: [not_string]\n  /v2/companies:\n    get:\n      tags:\n        - \"Zadanie 4\"\n      summary: Vráti zoznam firiem z tabuĺky `ov.companies`\n      description: \u003e\n        Vytvorte endpoint `/v1/companies`. \n        Tento endpoint bude vracať pomocou ORM všetky firmy z tabuľky `companies` a agregačné hodnoty vypočítané s pripojených tabuliek nasledovne:\n\n          - `cin`\n          - `name`\n          - `br_section`\n          - `address_line`\n          - `last_update`\n          - `or_podanie_issues_count`: počet asociovaných záznamov z tabuľky `or_podanie_issues` pre danú firmu\n          - `znizenie_imania_issues_count`: počet asociovaných záznamov z tabuľky `znizenie_imania_issues` pre danú firmu\n          - `likvidator_issues_count`: počet asociovaných záznamov z tabuľky `likvidator_issues` pre danú firmu\n          - `konkurz_vyrovnanie_issues_count`: počet asociovaných záznamov z tabuľky `konkurz_vyrovnanie_issues` pre danú firmu\n          - `konkurz_restrukturalizacia_actors_count`: počet asociovaných záznamov z tabuľky `konkurz_restrukturalizacia_actors` pre danú firmu\n        \n        Dáta pre endpoint musia byť vytiahnuté pomocou jednej query (operácie v rámci DDL sa nepočítajú \n        k danej query), ktorá musí bez použitia hocijakej podmienky zbehnúť do 70 sekúnd na AWS \n        (pre porovnanie na 2,6 GHz 6-Core Intel Core i7 to ide okolo 30 sekúnd). \n\n\n        Endpoint musí vedieť vyhľadávať nad poľami `name` a `address_line` cez GET parameter `query` \n        tak ako nad parametrom `last_update` cez `last_update_gte` a `last_update_lte`. GET parametre sú \n        rovnako definované ako v predošlom zadaní.\n       \n        Endpoint zároveň podporuje rovnaké stránkovanie ako v predošlom zadaní a rovnako sa dá zoraďovať nad \n        každým stĺpcom (aj agregačným pomocou GET parametrov `order_by` a `order_type`, kde NULL hodnoty budú vždy posledné.\n      parameters:\n        - name: page\n          in: query\n          required: false\n          description: Číslo žiadanej stránky (adresované od 1)\n          schema:\n            type: integer\n            format: int64\n        - name: per_page\n          in: query\n          required: false\n          description: Počet záznamov na jednej stránke\n          schema:\n            type: integer\n            format: int64\n        - name: order_by\n          in: query\n          required: false\n          description: Názov stĺpca, podľa ktorého bude zoradený výsledok\n          schema:\n            type: string\n            enum:\n              - cin\n              - name\n              - br_section\n              - address_line\n              - last_update\n        - name: order_type\n          in: query\n          required: false\n          description: Orientácia zoraďovania\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - name: last_update_lte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: last_update_gte\n          description: Dátum vo formáte ISO8601\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: query\n          description: Full-text vyhľadávanie nad stĺpcami `name` a `address_line`\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: List záznamov z tabuľky `companies`\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CompanyDetail'\n                  metadata:\n                    $ref: '#/components/schemas/Metadata'\ncomponents:\n  schemas:\n    SubmissionDetail:\n      properties:\n        id: \n          type: number\n          example: 79\n        br_court_name: \n          type: string\n          example: Okresný súd Bratislava I\n        kind_name: \n          type: string\n          example: Zmena zápisov\n        cin: \n          type: number\n          example: 35971126\n        registration_date: \n          type: string\n          format: date\n          example: 2006-01-01\n        corporate_body_name: \n          type: string\n          example: Národný ústav srdcových a cievnych chorôb a.s.\n        br_section: \n          type: string\n          example: Sa\n        text: \n          type: string\n          example: \u003e\n            ODDIEL: Sa VLOŽKA ČÍSLO: 3774/B OBCHODNÉ MENO: Národný ústav srdcových a cievnych chorôb\n            a.s. SÍDLO: Názov ulice (iného verejného priestranstva) a orientačné číslo (príp. \n            súpisné číslo): Pod Krásnou hôrkou 1  Názov obce: Bratislava PSČ: 833 48 IČO: 35 \n            971 126 DEŇ ZÁPISU: 01.01.2006 PRÁVNA FORMA: Akciová spoločnosť PREDMET PODNIKANIA \n            (ČINNOSTI): 1. poskytovanie ambulantnej a ústavnej zdravotnej starostlivosti v rozsahu...\n        street: \n          type: string\n          example: Pod Krásnou hôrkou 1 \n        postal_code: \n          type: string\n          example: 83348\n        city: \n          type: string\n          example: Bratislava\n    CreateSubmission:\n      properties:\n        br_court_name: \n          type: string\n          example: Okresný súd Bratislava I\n        kind_name: \n          type: string\n          example: Zmena zápisov\n        cin: \n          type: number\n          example: 35971126\n        registration_date: \n          type: string\n          format: date\n          example: 2006-01-01\n        corporate_body_name: \n          type: string\n          example: Národný ústav srdcových a cievnych chorôb a.s.\n        br_section: \n          type: string\n          example: Sa\n        text: \n          type: string\n          example: \u003e\n            ODDIEL: Sa VLOŽKA ČÍSLO: 3774/B OBCHODNÉ MENO: Národný ústav srdcových a cievnych chorôb\n            a.s. SÍDLO: Názov ulice (iného verejného priestranstva) a orientačné číslo (príp. \n            súpisné číslo): Pod Krásnou hôrkou 1  Názov obce: Bratislava PSČ: 833 48 IČO: 35 \n            971 126 DEŇ ZÁPISU: 01.01.2006 PRÁVNA FORMA: Akciová spoločnosť PREDMET PODNIKANIA \n            (ČINNOSTI): 1. poskytovanie ambulantnej a ústavnej zdravotnej starostlivosti v rozsahu...\n        street: \n          type: string\n          example: Pod Krásnou hôrkou 1 \n        postal_code: \n          type: string\n          example: 83348\n        city: \n          type: string\n          example: Bratislava\n    Metadata:\n      properties:\n        page: \n          type: number\n          example: 1\n        per_page: \n          type: number\n          example: 10\n        pages: \n          type: number\n          example: 1\n        total: \n          type: number\n          example: 4\n    ValidationError:\n      properties:\n        field: \n          type: number\n          example: 1\n        reasons: \n          type: number\n          example: 10\n    CompanyDetail:\n      properties:\n        cin: \n          type: number\n          example: 35971126\n        name: \n          type: string\n          example: Národný ústav srdcových a cievnych chorôb a.s.\n        br_section: \n          type: string\n          example: Sa\n        address_line: \n          type: string\n          example: Pod Krásnou hôrkou 1 , Bratislava 83348\n        last_update: \n          type: string\n          format: date\n          example: 2006-01-01\n        or_podanie_issues_count: \n          type: number\n          example: 35971126\n        znizenie_imania_issues_count: \n          type: number\n          example: 321\n        likvidator_issues_count: \n          type: number\n          example: 12\n        konkurz_vyrovnanie_issues_count: \n          type: number\n          example: 32\n        konkurz_restrukturalizacia_actors_count: \n          type: number\n          example: 10\n          ",
			"canonicalURL": "/github.com/PeterPlevko/STU-FIIT@75c63fe4cfcddcede0d29b047a7e5daee9666473/-/blob/Datab%C3%A1zov%C3%A9%20syst%C3%A9my/Zadanie/dbs2021v4.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PeterPlevko/STU-FIIT/blob/75c63fe4cfcddcede0d29b047a7e5daee9666473/Databázové systémy/Zadanie/dbs2021v4.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}