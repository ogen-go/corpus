{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/grokify/go-ringcentral-client"
		},
		"file": {
			"name": "openapi-spec_users.json",
			"size": 0,
			"path": "codegen/specs-engagedigital_v3.0.0/openapi-spec_users.json",
			"byteSize": 21943,
			"content": "{\n  \"openapi\":\"3.0.0\",\n  \"info\":{\n    \"description\":\"\",\n    \"version\":\"1.0\",\n    \"title\":\"Engage Digital API\",\n    \"termsOfService\":\"https://developer.ringcentral.com\"\n  },\n  \"tags\":[\n    {\n      \"name\":\"Users\"\n    }\n  ],\n  \"paths\":{\n    \"/users\":{\n      \"get\":{\n        \"tags\":[\n          \"Users\"\n        ],\n        \"summary\":\"Getting all users\",\n        \"operationId\":\"getAllUsers\",\n        \"description\":\"This method renders users ordered by creation date (descending).\\n\\nAuthorization​: only users that can view users. If the user affiliated to the token has the manage_users_of_my_teams permission, only the users belonging to at least one of the teams he’s the leader of will be returned.\",\n        \"parameters\":[\n          {\n            \"name\":\"email\",\n            \"description\":\"To filter users on given email.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"category_id\",\n            \"description\":\"To filter users on given category id.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"identity_id\",\n            \"description\":\"To filter users on given identity id.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"external_id\",\n            \"description\":\"To filter users on given external id.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"role_id\",\n            \"description\":\"To filter users on given role id.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"team_id\",\n            \"description\":\"To filter users on given team id.\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"offset\",\n            \"in\":\"query\",\n            \"description\":\"The record index to start. Default value is 0.\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"integer\",\n              \"format\":\"int32\"\n            }\n          },\n          {\n            \"name\":\"limit\",\n            \"in\":\"query\",\n            \"description\":\"The max number of records to return. Default value is 30, max value is 150.\",\n            \"required\":false,\n            \"schema\":{\n              \"type\":\"integer\",\n              \"format\":\"int32\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/GetAllUsersResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\n          \"Users\"\n        ],\n        \"summary\":\"Creating a user\",\n        \"operationId\":\"createUser\",\n        \"description\":\"This method creates a new user. In case of success it renders the created user, otherwise, it renders an error (422 HTTP code).\",\n        \"parameters\":[\n          {\n            \"name\":\"category_ids[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of category ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"email\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User email (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"enabled\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Whether the user is enabled or not (boolean).\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"external_id\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User external id, used for SSO.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"firstname\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User firstname (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"gender\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User gender (\\\"man\\\" or \\\"woman\\\").\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"man\",\n                \"woman\"\n              ]\n            }\n          },\n          {\n            \"name\":\"identity_ids[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of identity ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"lastname\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User lastname (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"locale\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Language for the user interface.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"nickname\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User nickname.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"password\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User plain password (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"role_id\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User role id (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"team_ids[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of team ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"timezone\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Use the timezone endpoint to get the timezone name (String), default is empty for domain timezone.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"spoken_languages[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"List of locales corresponding to the languages spoken by the user (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{userId}\":{\n      \"get\":{\n        \"tags\":[\n          \"Users\"\n        ],\n        \"summary\":\"Getting a user from its id\",\n        \"operationId\":\"getUser\",\n        \"description\":\"This method renders a user from given id.\",\n        \"parameters\":[\n          {\n            \"name\":\"userId\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\":{\n        \"tags\":[\n          \"Users\"\n        ],\n        \"summary\":\"Updating a user\",\n        \"operationId\":\"updateUser\",\n        \"description\":\"This method updates users from given attributes and renders it in case of success.\\n\\nAuthorization​: only users that can update users. If the user affiliated to the token has the `manage_users_of_my_teams` permission, the updated user will need to belong to at least one of the teams he’s the leader of. The teams the user affiliated to the token is the leader of will be the only ones which can be added or removed.\",\n        \"parameters\":[\n          {\n            \"name\":\"userId\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"category_ids[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of category ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"email\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User email.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"enabled\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Whether the user is enabled or not (boolean).\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"external_id\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User external id, used for SSO.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"firstname\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User firstname.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"gender\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User gender (\\\"man\\\" or \\\"woman\\\").\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"man\",\n                \"woman\"\n              ]\n            }\n          },\n          {\n            \"name\":\"identity_ids[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of identity ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"lastname\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User lastname.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"locale\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Language for the user interface.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"nickname\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User nickname.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"password\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User plain password.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"role_id\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User role id.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"team_ids[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of team ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"timezone\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Use the timezone endpoint to get the timezone name (String), default is empty for domain timezone.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"spoken_languages[]\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"List of locales corresponding to the languages spoken by the user (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\":{\n        \"tags\":[\n          \"Users\"\n        ],\n        \"summary\":\"Deleting a user\",\n        \"operationId\":\"deleteUser\",\n        \"description\":\"This method deletes the given user. In case of success it renders the deleted user, otherwise, it renders an error (422 HTTP code).\\n\\nAuthorization​: only users that can update users. The user affiliated to the token must have at least all the permissions of the other user. If the user affiliated to the token has the manage_users_of_my_teams permission, the deleted user will need to belong to at least one of the teams he’s the leader of.\",\n        \"parameters\":[\n          {\n            \"name\":\"userId\",\n            \"in\":\"path\",\n            \"required\":true,\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/invite\":{\n      \"post\":{\n        \"tags\":[\n          \"Users\"\n        ],\n        \"summary\":\"Inviting a user\",\n        \"operationId\":\"inviteUser\",\n        \"description\":\"This method invites a new user. In case of success it renders the created user, otherwise, it renders an error (422 HTTP code).\\n\\nAuthorization​: only users that can invite other users. If the user affiliated to the token has the manage_users_of_my_teams permission, the invited user will need to belong to at least one of the teams he’s the leader of. It will not be possible to assign the user to other teams.\",\n        \"parameters\":[\n          {\n            \"name\":\"category_ids\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of category ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"email\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User email (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"enabled\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Whether the user is enabled or not (boolean).\",\n            \"schema\":{\n              \"type\":\"boolean\"\n            }\n          },\n          {\n            \"name\":\"external_id\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User external id.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"firstname\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User firstname (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"gender\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User gender (\\\"man\\\" or \\\"woman\\\").\",\n            \"schema\":{\n              \"type\":\"string\",\n              \"enum\":[\n                \"man\",\n                \"woman\"\n              ]\n            }\n          },\n          {\n            \"name\":\"identity_ids\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of identity ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"lastname\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User lastname (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"locale\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Language for the user interface.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"nickname\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User nickname.\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"role_id\",\n            \"in\":\"query\",\n            \"required\":true,\n            \"description\":\"User role id (mandatory).\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"team_ids\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"User list of team ids (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          },\n          {\n            \"name\":\"timezone\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"Use the timezone endpoint to get the timezone name (String), default is empty for\",\n            \"schema\":{\n              \"type\":\"string\"\n            }\n          },\n          {\n            \"name\":\"spoken_languages\",\n            \"in\":\"query\",\n            \"required\":false,\n            \"description\":\"List of locales corresponding to the languages spoken by the user (multiple).\",\n            \"schema\":{\n              \"type\":\"array\",\n              \"items\":{\n                \"type\":\"string\"\n              }\n            }\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"Success\",\n            \"content\":{\n              \"application/json\":{\n                \"schema\":{\n                  \"$ref\":\"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"422\":{\n            \"description\":\"Unprocessable Entity\"\n          }\n        }\n      }\n    }\n  },\n  \"servers\":[\n    {\n      \"url\":\"https://DOMAIN.api.engagement.dimelo.com/1.0\"\n    }\n  ],\n  \"components\":{\n    \"schemas\":{\n      \"GetAllUsersResponse\":{\n        \"properties\":{\n          \"count\":{\n            \"type\":\"integer\",\n            \"format\":\"int32\"\n          },\n          \"limit\":{\n            \"type\":\"integer\",\n            \"format\":\"int32\"\n          },\n          \"offset\":{\n            \"type\":\"integer\",\n            \"format\":\"int32\"\n          },\n          \"records\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"$ref\":\"#/components/schemas/User\"\n            }\n          }\n        }\n      },\n      \"User\":{\n        \"required\":[\n          \"id\"\n        ],\n        \"properties\":{\n          \"id\":{\n            \"type\":\"string\"\n          },\n          \"created_at\":{\n            \"type\":\"string\",\n            \"format\":\"date-time\"\n          },\n          \"updated_at\":{\n            \"type\":\"string\",\n            \"format\":\"date-time\"\n          },\n          \"category_ids\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"string\"\n            }\n          },\n          \"email\":{\n            \"type\":\"string\"\n          },\n          \"enabled\":{\n            \"type\":\"boolean\"\n          },\n          \"external_id\":{\n            \"type\":\"string\"\n          },\n          \"firstname\":{\n            \"type\":\"string\"\n          },\n          \"gender\":{\n            \"type\":\"string\"\n          },\n          \"identity_ids\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"string\"\n            }\n          },\n          \"lastname\":{\n            \"type\":\"string\"\n          },\n          \"locale\":{\n            \"type\":\"string\"\n          },\n          \"nickname\":{\n            \"type\":\"string\"\n          },\n          \"rc_user_id\":{\n            \"type\":\"string\"\n          },\n          \"role_id\":{\n            \"type\":\"string\"\n          },\n          \"spoken_languages\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"string\"\n            }\n          },\n          \"team_ids\":{\n            \"type\":\"array\",\n            \"items\":{\n              \"type\":\"string\"\n            }\n          },\n          \"timezone\":{\n            \"type\":\"string\"\n          },\n          \"invitation_pending\":{\n            \"type\":\"boolean\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/grokify/go-ringcentral-client@f1ac48a07735f98ea074106783288f8af49282f3/-/blob/codegen/specs-engagedigital_v3.0.0/openapi-spec_users.json",
			"externalURLs": [
				{
					"url": "https://github.com/grokify/go-ringcentral-client/blob/f1ac48a07735f98ea074106783288f8af49282f3/codegen/specs-engagedigital_v3.0.0/openapi-spec_users.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}