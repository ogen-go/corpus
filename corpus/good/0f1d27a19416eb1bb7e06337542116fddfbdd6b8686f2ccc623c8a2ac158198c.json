{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "PartyRoutingProfile.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/PartyRoutingProfile.yaml",
			"byteSize": 24520,
			"content": "openapi: 3.0.1\ninfo:\n  title: Party Routing Profile\n  description: This service domain maintains a small profile of key indicators for a customer that is referenced during customer interactions to facilitate routing, servicing and product/service fulfillment decisions. This can include status (such as account in arrears), ratings (such as high value customer) and alerts (such possible fraud activity detected)\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/PartyRoutingProfile/10.0.0\npaths:\n  /PartyRoutingProfile/Initiate:\n    post:\n      tags:\n      - CR - PartyState\n      summary: InCR Initiate profile state monitoring for a party\n      description: InCR Initiate profile state monitoring for a party\n      operationId: Initiate\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/PartyState'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Update:\n    put:\n      tags:\n      - CR - PartyState\n      summary: UpCR Update monitoring for a party\n      description: UpCR Update monitoring for a party\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      requestBody:\n        $ref: '#/components/requestBodies/PartyState'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PartyState'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Execute:\n    put:\n      tags:\n      - CR - PartyState\n      summary: ExCR Execute an automated action for a monitored party (e.g. refresh)\n      description: ExCR Execute an automated action for a monitored party (e.g. refresh)\n      operationId: Execute\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      requestBody:\n        $ref: '#/components/requestBodies/PartyState'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Request:\n    put:\n      tags:\n      - CR - PartyState\n      summary: RqCR Request manual intervention for a monitored party (e.g. review settings)\n      description: RqCR Request manual intervention for a monitored party (e.g. review settings)\n      operationId: Request\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      requestBody:\n        $ref: '#/components/requestBodies/PartyState'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Retrieve:\n    get:\n      tags:\n      - CR - PartyState\n      summary: ReCR Retrieve details about the monitored party state\n      description: ReCR Retrieve details about the monitored party state\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PartyState'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Status/{statusId}/Update:\n    put:\n      tags:\n      - BQ - Status\n      summary: UpBQ Update status measures for a monitored party\n      description: UpBQ Update status measures for a monitored party\n      operationId: UpdateStatus\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/StatusID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateStatusRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateStatusResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Status/{statusId}/Capture:\n    put:\n      tags:\n      - BQ - Status\n      summary: CaBQ Capture status measures for a monitored party\n      description: CaBQ Capture status measures for a monitored party\n      operationId: CaptureStatus\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/StatusID'\n      requestBody:\n        $ref: '#/components/requestBodies/CaptureStatusRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptureStatusResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Status/{statusId}/Retrieve:\n    get:\n      tags:\n      - BQ - Status\n      summary: ReBQ Retrieve details about status measures for a party\n      description: ReBQ Retrieve details about status measures for a party\n      operationId: RetrieveStatus\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/StatusID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrieveStatusResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Rating/{ratingId}/Update:\n    put:\n      tags:\n      - BQ - Rating\n      summary: UpBQ Update rating measures for a monitored party\n      description: UpBQ Update rating measures for a monitored party\n      operationId: UpdateRating\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/RatingID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateRatingRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRatingResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Rating/{ratingId}/Capture:\n    put:\n      tags:\n      - BQ - Rating\n      summary: CaBQ Capture rating measures for a monitored party\n      description: CaBQ Capture rating measures for a monitored party\n      operationId: CaptureRating\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/RatingID'\n      requestBody:\n        $ref: '#/components/requestBodies/CaptureRatingRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptureRatingResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Rating/{ratingId}/Retrieve:\n    get:\n      tags:\n      - BQ - Rating\n      summary: ReBQ Retrieve details about rating measures for a party\n      description: ReBQ Retrieve details about rating measures for a party\n      operationId: RetrieveRating\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/RatingID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrieveRatingResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Alert/{alertId}/Update:\n    put:\n      tags:\n      - BQ - Alert\n      summary: UpBQ Update alerts for a monitored party\n      description: UpBQ Update alerts for a monitored party\n      operationId: UpdateAlert\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/AlertID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateAlertRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAlertResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Alert/{alertId}/Capture:\n    put:\n      tags:\n      - BQ - Alert\n      summary: CaBQ Capture alerts for a monitored party\n      description: CaBQ Capture alerts for a monitored party\n      operationId: CaptureAlert\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/AlertID'\n      requestBody:\n        $ref: '#/components/requestBodies/CaptureAlertRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptureAlertResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /PartyRoutingProfile/{partyroutingprofileId}/Alert/{alertId}/Retrieve:\n    get:\n      tags:\n      - BQ - Alert\n      summary: ReBQ Retrieve details about alerts for a party\n      description: ReBQ Retrieve details about alerts for a party\n      operationId: RetrieveAlert\n      parameters:\n      - $ref: '#/components/parameters/PartyRoutingProfileID'\n      - $ref: '#/components/parameters/AlertID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrieveAlertResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    PartyState:\n      type: object\n      properties:\n        CustomerReference:\n          type: object\n    Status:\n      type: object\n      properties:\n        CustomerRelationshipStatusType:\n          type: string\n        CustomerRelationshipStatus:\n          type: string\n        CustomerRelationshipStatusNarrative:\n          type: string\n        CustomerRelationshipStatusValidFrom/ToDate:\n          type: string\n    Rating:\n      type: object\n      properties:\n        CustomerRelationshipRatingType:\n          type: string\n        CustomerRelationshipRating:\n          type: string\n        CustomerRelationshipRatingNarrative:\n          type: string\n        CustomerRelationshipRatingValidFrom/ToDate:\n          type: string\n    Alert:\n      type: object\n      properties:\n        CustomerRelationshipAlertType:\n          type: string\n        CustomerRelationshipAlert:\n          type: string\n        CustomerRelationshipAlertNarrative:\n          type: string\n        CustomerRelationshipAlertValidFrom/ToDate:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n    UpdateStatusRequest:\n      type: object\n      properties:\n        Status:\n          type: object\n          properties:\n            CustomerRelationshipStatusType:\n              type: string\n            CustomerRelationshipStatusNarrative:\n              type: string\n            CustomerRelationshipStatusValidFromOrToDate:\n              type: string\n    UpdateStatusResponse:\n      type: object\n      properties:\n        Status:\n          type: object\n          properties:\n            CustomerRelationshipStatusType:\n              type: string\n            CustomerRelationshipStatusNarrative:\n              type: string\n            CustomerRelationshipStatusValidFromOrToDate:\n              type: string\n    CaptureStatusRequest:\n      type: object\n      properties:\n        Status:\n          type: object\n          properties:\n            CustomerRelationshipStatusType:\n              type: string\n            CustomerRelationshipStatusNarrative:\n              type: string\n            CustomerRelationshipStatusValidFromOrToDate:\n              type: string\n    CaptureStatusResponse:\n      type: object\n      properties:\n        Status:\n          type: object\n          properties:\n            CustomerRelationshipStatusValidFromOrToDate:\n              type: string\n    RetrieveStatusResponse:\n      type: object\n      properties:\n        Status:\n          type: object\n          properties:\n            CustomerRelationshipStatusType:\n              type: string\n            CustomerRelationshipStatusNarrative:\n              type: string\n            CustomerRelationshipStatusValidFromOrToDate:\n              type: string\n    UpdateRatingRequest:\n      type: object\n      properties:\n        Rating:\n          type: object\n          properties:\n            CustomerRelationshipRatingType:\n              type: string\n            CustomerRelationshipRatingNarrative:\n              type: string\n            CustomerRelationshipRatingValidFromOrToDate:\n              type: string\n    UpdateRatingResponse:\n      type: object\n      properties:\n        Rating:\n          type: object\n          properties:\n            CustomerRelationshipRatingType:\n              type: string\n            CustomerRelationshipRatingNarrative:\n              type: string\n            CustomerRelationshipRatingValidFromOrToDate:\n              type: string\n    CaptureRatingRequest:\n      type: object\n      properties:\n        Rating:\n          type: object\n          properties:\n            CustomerRelationshipRatingType:\n              type: string\n            CustomerRelationshipRatingNarrative:\n              type: string\n            CustomerRelationshipRatingValidFromOrToDate:\n              type: string\n    CaptureRatingResponse:\n      type: object\n      properties:\n        Rating:\n          type: object\n          properties:\n            CustomerRelationshipRatingValidFromOrToDate:\n              type: string\n    RetrieveRatingResponse:\n      type: object\n      properties:\n        Rating:\n          type: object\n          properties:\n            CustomerRelationshipRatingType:\n              type: string\n            CustomerRelationshipRatingNarrative:\n              type: string\n            CustomerRelationshipRatingValidFromOrToDate:\n              type: string\n    UpdateAlertRequest:\n      type: object\n      properties:\n        Alert:\n          type: object\n          properties:\n            CustomerRelationshipAlertType:\n              type: string\n            CustomerRelationshipAlertNarrative:\n              type: string\n            CustomerRelationshipAlertValidFromOrToDate:\n              type: string\n    UpdateAlertResponse:\n      type: object\n      properties:\n        Alert:\n          type: object\n          properties:\n            CustomerRelationshipAlertType:\n              type: string\n            CustomerRelationshipAlertNarrative:\n              type: string\n            CustomerRelationshipAlertValidFromOrToDate:\n              type: string\n    CaptureAlertRequest:\n      type: object\n      properties:\n        Alert:\n          type: object\n          properties:\n            CustomerRelationshipAlertType:\n              type: string\n            CustomerRelationshipAlertNarrative:\n              type: string\n            CustomerRelationshipAlertValidFromOrToDate:\n              type: string\n    CaptureAlertResponse:\n      type: object\n      properties:\n        Alert:\n          type: object\n          properties:\n            CustomerRelationshipAlertValidFromOrToDate:\n              type: string\n    RetrieveAlertResponse:\n      type: object\n      properties:\n        Alert:\n          type: object\n          properties:\n            CustomerRelationshipAlertType:\n              type: string\n            CustomerRelationshipAlertNarrative:\n              type: string\n            CustomerRelationshipAlertValidFromOrToDate:\n              type: string\n  parameters:\n    PartyRoutingProfileID:\n      name: partyroutingprofileId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    StatusID:\n      name: statusId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    RatingID:\n      name: ratingId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    AlertID:\n      name: alertId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    PartyState:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PartyState'\n    UpdateStatusRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateStatusRequest'\n    CaptureStatusRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CaptureStatusRequest'\n    UpdateRatingRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateRatingRequest'\n    CaptureRatingRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CaptureRatingRequest'\n    UpdateAlertRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateAlertRequest'\n    CaptureAlertRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CaptureAlertRequest'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/PartyRoutingProfile.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/PartyRoutingProfile.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}