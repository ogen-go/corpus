{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jolicode/forecast-php-api"
		},
		"file": {
			"name": "forecast-openapi.yaml",
			"size": 0,
			"path": "Resources/forecast-openapi.yaml",
			"byteSize": 44921,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: forecastapp API\n  license:\n    name: MIT\nsecurity:\n  - BearerAuth: []\n    AccountAuth: []\npaths:\n  \"/accounts/{id}\":\n    get:\n      summary: Get an account details\n      operationId: getAccount\n      description: Returns an account details.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the account\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Account informations\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Account\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/aggregate/future_scheduled_hours/{date}\":\n    get:\n      summary: Counts scheduled hours per person and project\n      operationId: countScheduledHours\n      description: Returns the number of scheduled hours.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: date\n          description: The date after which to lookup\n          required: true\n          in: path\n          schema:\n            type: string\n            format: date\n      responses:\n        \"200\":\n          description: Future scheduled hours list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/FutureScheduledHours\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /aggregate/remaining_budgeted_hours:\n    get:\n      summary: Returns the remaining budgeted hours, project by project\n      operationId: getRemainingBudgetedHours\n      description: Returns the remaining budgeted hours, project by project.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      responses:\n        \"200\":\n          description: Remaining budgeted hour\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/RemainingBudgetedHours\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/assignments/{id}\":\n    delete:\n      summary: Delete an Assignment\n      operationId: deleteAssignment\n      description: Delete an Assignment.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Assignment\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: The Assignment was deleted successfully\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      summary: Get an Assignment's details\n      operationId: getAssignment\n      description: Returns an Assignment.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Assignment\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Assignment details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - assignment\n                properties:\n                  assignment:\n                    $ref: \"#/components/schemas/Assignment\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Edit an assignment\n      operationId: editAssignment\n      description: Edits an assignment.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Assignment\n          required: true\n          in: path\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - assignment\n              properties:\n                assignment:\n                  $ref: \"#/components/schemas/Assignment\"\n        description: an object representing the assignment to edit\n        required: true\n      responses:\n        \"200\":\n          description: Assignment details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - assignment\n                properties:\n                  assignment:\n                    $ref: \"#/components/schemas/Assignment\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /assignments:\n    get:\n      summary: List assignments\n      operationId: listAssignments\n      description: Returns a list of assignments.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: project_id\n          description: Only return assignments for this project\n          required: false\n          in: query\n          schema:\n            type: integer\n        - name: person_id\n          description: Only return assignments for this person\n          required: false\n          in: query\n          schema:\n            type: integer\n        - name: repeated_assignment_set\n          description: Only return assignments for this repeated assignment set\n          required: false\n          in: query\n          schema:\n            type: integer\n        - name: start_date\n          description: Only return assignments after this date\n          required: true\n          in: query\n          schema:\n            type: string\n            format: date\n        - name: end_date\n          description: Only return assignments before this date\n          required: true\n          in: query\n          schema:\n            type: string\n            format: date\n        - name: state\n          description: Pass \"active\" to only return assignments for currently active users\n          required: false\n          in: query\n          schema:\n            type: string\n            enum:\n              - active\n              - archived\n      responses:\n        \"200\":\n          description: Assignments list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Assignments\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create an assignment\n      operationId: createAssignment\n      description: Creates an assignment.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - assignment\n              properties:\n                assignment:\n                  $ref: \"#/components/schemas/Assignment\"\n        description: an object representing the assignment to create\n        required: true\n      responses:\n        \"201\":\n          description: Assignment details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - assignment\n                properties:\n                  assignment:\n                    $ref: \"#/components/schemas/Assignment\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/clients/{id}\":\n    get:\n      summary: Get a Client's details\n      operationId: getClient\n      description: Returns a Client.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Client\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Client details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - client\n                properties:\n                  client:\n                    $ref: \"#/components/schemas/Client\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /clients:\n    get:\n      summary: List clients\n      operationId: listClients\n      description: Returns a list of clients.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      responses:\n        \"200\":\n          description: Clients list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Clients\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/people/{id}\":\n    delete:\n      summary: Delete a Person\n      operationId: deletePerson\n      description: Delete a Person.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Person\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: The Person was deleted successfully\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      summary: Get a Person's details\n      operationId: getPerson\n      description: Returns a Person.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Person\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Person details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - person\n                properties:\n                  person:\n                    $ref: \"#/components/schemas/Person\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Edit a Person\n      operationId: editPerson\n      description: Edits a Person.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Person\n          required: true\n          in: path\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - person\n              properties:\n                person:\n                  $ref: \"#/components/schemas/Person\"\n        description: an object representing the Person to edit\n        required: true\n      responses:\n        \"200\":\n          description: Person details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - person\n                properties:\n                  person:\n                    $ref: \"#/components/schemas/Person\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /people:\n    get:\n      summary: List people\n      operationId: listPeople\n      description: Returns a list of people.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: state\n          description: Pass \"active\" to only return active users. Any other value also returns archived users.\n          required: false\n          in: query\n          schema:\n            type: string\n            enum:\n              - active\n              - archived\n      responses:\n        \"200\":\n          description: People list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/People\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a Person\n      operationId: createPerson\n      description: Create a Person.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - person\n              properties:\n                person:\n                  $ref: \"#/components/schemas/Person\"\n        description: an object representing the Person to create\n        required: true\n      responses:\n        \"201\":\n          description: Person details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - person\n                properties:\n                  person:\n                    $ref: \"#/components/schemas/Person\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/placeholders/{id}\":\n    delete:\n      summary: Delete a Placeholder\n      operationId: deletePlaceholder\n      description: Delete a Placeholder.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Placeholder\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: The Placeholder was deleted successfully\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      summary: Get a Placeholder's details\n      operationId: getPlaceholder\n      description: Returns a Placeholder.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Placeholder\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Placeholder details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - placeholder\n                properties:\n                  placeholder:\n                    $ref: \"#/components/schemas/Placeholder\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Edit a Placeholder\n      operationId: editPlaceholder\n      description: Edit a Placeholder.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Placeholder\n          required: true\n          in: path\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PlaceholderBody\"\n        description: an object representing the assignment to create\n        required: true\n      responses:\n        \"200\":\n          description: Placeholder details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - placeholder\n                properties:\n                  placeholder:\n                    $ref: \"#/components/schemas/Placeholder\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /placeholders:\n    get:\n      summary: List placeholders\n      operationId: listPlaceholders\n      description: Returns a list of placeholders.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      responses:\n        \"200\":\n          description: Placeholders list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Placeholders\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a Placeholder\n      operationId: createPlaceholder\n      description: Create a Placeholder.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PlaceholderBody\"\n        description: an object representing the assignment to create\n        required: true\n      responses:\n        \"201\":\n          description: Placeholder details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - placeholder\n                properties:\n                  placeholder:\n                    $ref: \"#/components/schemas/Placeholder\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/projects/{id}\":\n    get:\n      summary: Get a Project's details\n      operationId: getProject\n      description: Returns a Project.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Project\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Project details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - project\n                properties:\n                  project:\n                    $ref: \"#/components/schemas/Project\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /projects:\n    get:\n      summary: List projects\n      operationId: listProjects\n      description: Returns a list of projects.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      responses:\n        \"200\":\n          description: Projects list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Projects\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/roles/{id}\":\n    delete:\n      summary: Delete a Role\n      operationId: deleteRole\n      description: Delete a Role.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Role\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: The Role was deleted successfully\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      summary: Get a Role's details\n      operationId: getRole\n      description: Returns a Role.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Role\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Role details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - role\n                properties:\n                  role:\n                    $ref: \"#/components/schemas/Role\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Edit a Role\n      operationId: editRole\n      description: Edit a Role.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Role\n          required: true\n          in: path\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RoleBody\"\n        description: an object representing the Role to edit\n        required: true\n      responses:\n        \"200\":\n          description: Role details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - role\n                properties:\n                  role:\n                    $ref: \"#/components/schemas/Role\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /roles:\n    get:\n      summary: List Roles\n      operationId: listRoles\n      description: Returns a list of Roles.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      responses:\n        \"200\":\n          description: Roles list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Roles\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a Role\n      operationId: createRole\n      description: Creates a Role.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RoleBody\"\n        description: an object representing the Role to create\n        required: true\n      responses:\n        \"201\":\n          description: Assignment details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - role\n                properties:\n                  role:\n                    $ref: \"#/components/schemas/Role\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/repeated_assignment_sets/{id}\":\n    delete:\n      summary: Delete a Repeated Assignment Set\n      operationId: deleteRepeatedAssignmentSet\n      description: Delete a Repeated Assignment Set.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the Repeated Assignment Set\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: The Repeated Assignment Set was deleted successfully\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      summary: Get a Repeated Assignment Set's details\n      operationId: getRepeatedAssignmentSet\n      description: Returns a Repeated Assignment Set.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the RepeatedAssignmentSet\n          required: true\n          in: path\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: RepeatedAssignmentSet details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - repeated_assignment_set\n                properties:\n                  repeated_assignment_set:\n                    $ref: \"#/components/schemas/RepeatedAssignmentSet\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Edit a Repeated Assignment Set\n      operationId: editRepeatedAssignmentSet\n      description: Modifies a Repeated Assignment Set.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      parameters:\n        - name: id\n          description: Id of the RepeatedAssignmentSet\n          required: true\n          in: path\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RepeatedAssignmentSetBody\"\n        description: an object representing the repeated assignment set to create\n        required: true\n      responses:\n        \"200\":\n          description: Updated Repeated Assignment Set\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - repeated_assignment_set\n                properties:\n                  repeated_assignment_set:\n                    $ref: \"#/components/schemas/RepeatedAssignmentSet\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /repeated_assignment_sets:\n    get:\n      summary: List Repeated Assignment Sets\n      operationId: listRepeatedAssignmentSets\n      description: Returns a list of Repeated Assignment Sets.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      responses:\n        \"200\":\n          description: Repeated assignment sets list\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/RepeatedAssignmentSets\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a Repeated Assignment Set\n      operationId: createRepeatedAssignmentSet\n      description: Creates a Repeated Assignment Set.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RepeatedAssignmentSetBody\"\n        description: an object representing the repeated assignment set to create\n        required: true\n      responses:\n        \"201\":\n          description: Assignment details\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                required:\n                  - repeated_assignment_set\n                properties:\n                  repeated_assignment_set:\n                    $ref: \"#/components/schemas/RepeatedAssignmentSet\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /whoami:\n    get:\n      summary: Get user profile\n      operationId: whoAmI\n      description: Returns the user profile.\n      security:\n        - BearerAuth: []\n          AccountAuth: []\n      responses:\n        \"200\":\n          description: User's profile\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n        default:\n          description: error payload\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Error\"\nservers:\n  - url: https://api.forecastapp.com/\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n    AccountAuth:\n      type: apiKey\n      in: header\n      name: Forecast-Account-Id\n  schemas:\n    Account:\n      type: object\n      required:\n        - account\n      properties:\n        account:\n          type: object\n          required:\n            - id\n            - name\n          properties:\n            id:\n              type: integer\n              description: Id of the account\n              format: int32\n            name:\n              type: string\n              description: Name of the account\n            weekly_capacity:\n              type: integer\n              description: Number of seconds of capacity in each week\n              format: int32\n            color_labels:\n              type: array\n              description: Available color labels\n              items:\n                type: object\n                required:\n                  - name\n                properties:\n                  name:\n                    type: string\n                    description: Name of the color\n                  label:\n                    type: string\n                    description: Label associated to the color\n            harvest_subdomain:\n              type: string\n              description: harvest subdomain associated with this forecast account\n            harvest_name:\n              type: string\n              description: harvest account name associated with this forecast account\n            weekends_enabled:\n              type: boolean\n              description: whether or not the grid shows weekends\n            created_at:\n              type: string\n              format: date-time\n              description: creation date\n    Assignment:\n      type: object\n      required:\n        - start_date\n        - end_date\n        - allocation\n      properties:\n        active_on_days_off:\n          type: boolean\n          description: should the assignement be also active on days off?\n        allocation:\n          type: integer\n          description: Number of seconds assigned\n          format: int32\n        end_date:\n          type: string\n          format: date\n          description: end date\n        id:\n          type: integer\n          description: Id of the assignement\n          format: int32\n        notes:\n          type: string\n          description: literature about the assignement\n        person_id:\n          type: integer\n          description: id of the user who is assigned\n          format: int32\n        placeholder_id:\n          type: integer\n          description: id of the placeholder who is assigned\n          format: int32\n        project_id:\n          type: integer\n          description: id of the project which is assigned\n          format: int32\n        repeated_assignment_set_id:\n          type: integer\n          description: if the assignment belongs to a repeated_assignment_set, its id\n          format: int32\n        start_date:\n          type: string\n          format: date\n          description: start date\n        updated_at:\n          type: string\n          format: date-time\n          description: date when the assignment was last updated\n        updated_by:\n          type: integer\n          description: id of the user who last updated this assignment\n          format: int32\n    Assignments:\n      type: object\n      required:\n        - assignments\n      properties:\n        assignments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Assignment\"\n    Client:\n      type: object\n      required:\n        - name\n      properties:\n        archived:\n          type: boolean\n          description: Is this client archived?\n        harvest_id:\n          type: integer\n          description: id of this client in Harvest\n          format: int32\n        id:\n          type: integer\n          description: id of this client\n          format: int32\n        name:\n          type: string\n          description: Name of the client\n        updated_at:\n          type: string\n          format: date-time\n          description: date when the client was last updated\n        updated_by_id:\n          type: integer\n          description: id of the user who last updated this client\n          format: int32\n    Clients:\n      type: object\n      required:\n        - clients\n      properties:\n        clients:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Client\"\n    FutureScheduledHour:\n      type: object\n      required:\n        - allocation\n        - project_id\n      properties:\n        allocation:\n          type: integer\n          description: Number of hours allocated\n        person_id:\n          type: integer\n          format: int32\n          description: Id of the Person\n        placeholder_id:\n          type: integer\n          format: int32\n          description: Id of the Placeholder\n        project_id:\n          type: integer\n          format: int32\n          description: Id of the Project\n    FutureScheduledHours:\n      type: object\n      required:\n        - future_scheduled_hours\n      properties:\n        future_scheduled_hours:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FutureScheduledHour\"\n    People:\n      type: object\n      required:\n        - people\n      properties:\n        people:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Person\"\n    Person:\n      type: object\n      required:\n        - first_name\n        - last_name\n        - email\n      properties:\n        id:\n          type: integer\n          format: int32\n        first_name:\n          type: string\n        last_name:\n          type: string\n        email:\n          type: string\n          format: email\n        login:\n          type: string\n          description: If the user is allowed to login, contains \"enabled\". Else, contains \"disabled\".\n        admin:\n          type: boolean\n          description: Is the user an admin?\n        archived:\n          type: boolean\n          description: Is the user an admin?\n        subscribed:\n          type: boolean\n          description: Did the user subscribe?\n        avatar_url:\n          type: string\n          description: URL of the user's avatar image\n        roles:\n          type: array\n          items:\n            description: Name of the role\n            type: string\n        updated_at:\n          type: string\n          format: date-time\n          description: date when the Person was last updated\n        updated_by_id:\n          type: integer\n          description: id of the user who last updated this Person\n          format: int32\n        harvest_user_id:\n          type: integer\n          description: Id of the user in Harvest\n          format: int32\n        weekly_capacity:\n          type: integer\n          description: Number of seconds of capacity in each week\n        working_days:\n          type: object\n          properties:\n            monday:\n              type: boolean\n            tuesday:\n              type: boolean\n            wednesday:\n              type: boolean\n            thursday:\n              type: boolean\n            friday:\n              type: boolean\n            saturday:\n              type: boolean\n            sunday:\n              type: boolean\n        color_blind:\n          type: boolean\n        personal_feed_token_id:\n          type: integer\n          format: int32\n    Placeholder:\n      type: object\n      required:\n        - name\n      properties:\n        archived:\n          type: boolean\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        roles:\n          type: array\n          items:\n            description: Name of the role\n            type: string\n        updated_at:\n          type: string\n          format: date-time\n          description: date when the Placeholder was last updated\n        updated_by_id:\n          type: integer\n          description: id of the user who last updated this Placeholder\n          format: int32\n    PlaceholderBody:\n      type: object\n      required:\n        - placeholder\n      properties:\n        placeholder:\n          type: object\n          required:\n            - archived\n            - name\n            - roles\n          properties:\n            archived:\n              type: boolean\n            name:\n              type: string\n            roles:\n              type: array\n              items:\n                description: Name of the role\n                type: string\n    Placeholders:\n      type: object\n      required:\n        - placeholders\n      properties:\n        placeholders:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Placeholder\"\n    Project:\n      type: object\n      required:\n        - name\n      properties:\n        archived:\n          type: boolean\n        client_id:\n          type: integer\n          format: int32\n        code:\n          type: string\n        color:\n          type: string\n        end_date:\n          type: string\n          format: date\n        harvest_id:\n          type: integer\n          format: int32\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        notes:\n          type: string\n          description: literature\n        start_date:\n          type: string\n          format: date\n        tags:\n          type: array\n          items:\n            description: Name of the tag\n            type: string\n        updated_at:\n          type: string\n          format: date-time\n          description: date when the Project was last updated\n        updated_by_id:\n          type: integer\n          description: id of the user who last updated this Project\n          format: int32\n    Projects:\n      type: object\n      required:\n        - projects\n      properties:\n        projects:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Project\"\n    RemainingBudgetedHour:\n      type: object\n      required:\n        - hours\n        - project_id\n      properties:\n        budget_by:\n          type: string\n        budget_is_monthly:\n          type: boolean\n        hours:\n          type: integer\n        project_id:\n          type: integer\n          format: int32\n        response_code:\n          type: integer\n    RemainingBudgetedHours:\n      type: object\n      required:\n        - remaining_budgeted_hours\n      properties:\n        remaining_budgeted_hours:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RemainingBudgetedHour\"\n    RepeatedAssignmentSet:\n      type: object\n      required:\n        - first_start_date\n        - last_end_date\n        - assignment_ids\n      properties:\n        assignment_ids:\n          type: array\n          items:\n            type: integer\n            format: int32\n        first_start_date:\n          type: string\n          format: date\n        id:\n          type: integer\n          format: int32\n        last_end_date:\n          type: string\n          format: date\n    RepeatedAssignmentSetBody:\n      type: object\n      required:\n        - repeated_assignment_set\n      properties:\n        repeated_assignment_set:\n          type: object\n          required:\n            - assignment\n            - weeks\n          properties:\n            assignment:\n              $ref: \"#/components/schemas/Assignment\"\n            weeks:\n              type: integer\n              description: Number of weeks to repeat\n              format: int32\n    RepeatedAssignmentSets:\n      type: object\n      required:\n        - repeated_assignment_sets\n      properties:\n        repeated_assignment_sets:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RepeatedAssignmentSet\"\n    Role:\n      type: object\n      required:\n        - name\n      properties:\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        placeholder_ids:\n          type: array\n          items:\n            type: integer\n            format: int32\n        person_ids:\n          type: array\n          items:\n            type: integer\n            format: int32\n        harvest_role_id:\n          type: integer\n          format: int32\n    RoleBody:\n      type: object\n      required:\n        - role\n      properties:\n        role:\n          type: object\n          required:\n            - name\n            - person_ids\n          properties:\n            name:\n              type: string\n            person_ids:\n              type: array\n              items:\n                type: integer\n                format: int32\n\n    Roles:\n      type: object\n      required:\n        - roles\n      properties:\n        roles:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Role\"\n    Subscription:\n      type: object\n      required:\n        - subscription\n      properties:\n        subscription:\n          type: object\n          properties:\n            id:\n              type: integer\n              format: int32\n            next_billing_date:\n              type: string\n              format: date\n            days_until_next_billing_date:\n              type: integer\n            amount:\n              type: integer\n              description: Subscription price, in cents\n            amount_per_person:\n              type: integer\n              description: Subscription price per Person, in cents\n            receipt_recipient:\n              type: string\n              format: email\n            status:\n              type: string\n            purchased_people:\n              type: integer\n            interval:\n              type: string\n            paid_by_invoice:\n              type: boolean\n            discounts:\n              type: object\n              properties:\n                monthly_percentage:\n                  type: integer\n                yearly_percentage:\n                  type: integer\n            placeholder_limit:\n              type: integer\n            card:\n              type: object\n              properties:\n                brand:\n                  type: string\n                last_four:\n                  type: string\n                expiry_month:\n                  type: integer\n                expiry_year:\n                  type: integer\n            address:\n              type: object\n              properties:\n                line_1:\n                  type: string\n                line_2:\n                  type: string\n                city:\n                  type: string\n                state:\n                  type: string\n                postal_code:\n                  type: string\n                country:\n                  type: string\n    User:\n      type: object\n      required:\n        - current_user\n      properties:\n        current_user:\n          type: object\n          properties:\n            id:\n              type: integer\n              format: int32\n            account_ids:\n              type: array\n              items:\n                type: integer\n    UserConnection:\n      type: object\n      required:\n        - last_active_at\n        - person_id\n      properties:\n        id:\n          type: integer\n          format: int32\n        last_active_at:\n          type: string\n          format: date-time\n        person_id:\n          type: integer\n          format: int32\n    UserConnections:\n      type: object\n      required:\n        - user_connections\n      properties:\n        user_connections:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UserConnection\"\n    Error:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            type: string\n",
			"canonicalURL": "/github.com/jolicode/forecast-php-api@fcda5679ef0eb1d3d779ea23d6fe0167fbf2b7e9/-/blob/Resources/forecast-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/jolicode/forecast-php-api/blob/fcda5679ef0eb1d3d779ea23d6fe0167fbf2b7e9/Resources/forecast-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}