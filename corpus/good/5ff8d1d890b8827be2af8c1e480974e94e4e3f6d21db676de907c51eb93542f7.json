{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apiaddicts/openapi2postman"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "example/swagger.yaml",
			"byteSize": 9483,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'OAS API for Handball Spanish scoring '\n  description: 'Sample REST APIs using Flask, OpenAPI and Connexion'\n  version: 1.0.0\nservers:\n  - url: 'http://services.handbolsantquirze.cat'\n    description: Rest Server showing Swagger and Connexion capability\npaths:\n  /club:\n    get:\n      operationId: club.getAll\n      tags:\n      - Club\n      summary: Returns a list of clubs\n      description: Returns a list of clubs.\n      responses:\n        '200':\n          description: Return the entire list of regions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Club'\n              examples:\n                example-1:\n                  value:\n                    idClub: 0\n                    Club: string\n                    Address: string\n                    Phone: string\n                    Email: string\n                    Web: string\n                    Responsible: string\n                    Logo: string\n                    Region: 0\n      parameters:\n        - schema:\n            type: string\n            minLength: 0\n            maxLength: 255\n          in: query\n          name: clubname\n          description: ClubName\n  '/club/{idClub}':\n    get:\n      operationId: club.get\n      tags:\n        - Club\n      summary: Return a Club with given ID\n      description: Return a Club  with given ID\n      parameters:\n        - name: idClub\n          in: path\n          description: Club ID\n          required: true\n          schema:\n            type: integer\n            format: int\n      responses:\n        '200':\n          description: Return a Club with given ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Club'\n  '/club/region/{idRegion}':\n    get:\n      operationId: club.getIdRegion\n      tags:\n        - Club\n      summary: Return a Club with given ID\n      description: Return a Club  with given ID\n      parameters:\n        - name: idRegion\n          in: path\n          description: Region ID\n          required: true\n          schema:\n            type: integer\n            format: int\n      responses:\n        '200':\n          description: Return a list of Clubs with given Region ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Club'\n  /region:\n    get:\n      operationId: region.getAll\n      tags:\n        - Region\n      summary: Returns a list of regions.\n      description: Returns a list of regions.\n      responses:\n        '200':\n          description: Return the entire list of regions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n    post:\n      operationId: region.create\n      tags:\n        - Region\n      summary: Create a new Region\n      description: Create a new Region\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Region'\n      responses:\n        '201':\n          description: Region Created successfully\n  '/team/club/{idClub}':\n    get:\n      operationId: team.getIdClub\n      tags:\n        - Team\n      summary: Return a Team with given ID\n      description: Return a Team  with given ID\n      parameters:\n        - name: idClub\n          in: path\n          description: Club ID\n          required: true\n          schema:\n            type: integer\n            format: int\n      responses:\n        '200':\n          description: Return a Team with given ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n  '/team/{idTeam}':\n    get:\n      operationId: team.get\n      tags:\n        - Team\n      summary: Return a Team with given ID\n      description: Return a Team  with given ID\n      parameters:\n        - name: idTeam\n          in: path\n          description: Team ID\n          required: true\n          schema:\n            type: integer\n            format: int\n      responses:\n        '200':\n          description: Return a Team with given ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n  /team:\n    get:\n      operationId: team.getAll\n      tags:\n        - Team\n      summary: Returns a list of Teams.\n      description: Returns a list of teams.\n      responses:\n        '200':\n          description: Return the entire list of teams.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n    post:\n      operationId: team.create\n      tags:\n        - Team\n      summary: Create a new Team\n      description: Create a new Team\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Team'\n      responses:\n        '201':\n          description: Team Created successfully\n    parameters: []\n  '/region/{idRegion}':\n    get:\n      operationId: region.get\n      tags:\n        - Region\n      summary: Return an Region with given ID\n      description: Return an Region with given ID\n      parameters:\n        - name: idRegion\n          in: path\n          description: Region ID\n          required: true\n          schema:\n            type: integer\n            format: int\n      responses:\n        '200':\n          description: Return an Region with given ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n    put:\n      operationId: region.update\n      tags:\n        - Region\n      summary: Update an Region with given ID\n      description: Update an Region with given ID\n      parameters:\n        - name: idRegion\n          in: path\n          description: Region ID\n          required: true\n          schema:\n            type: integer\n            format: int\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Region'\n      responses:\n        '200':\n          description: Updated an Region with given ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n  '/scores':\n    get:\n      summary: Get seasson match score\n      operationId: scores.getAll\n      tags:\n        - Scores\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: idHomeTeam\n          description: ID Home Team\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: idAwayTeam\n          description: ID Away Team\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: season\n          description: 'season'\n      responses:\n        '200':\n          description: Return the entire list of scores for specific match.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scores'\ncomponents:\n  schemas:\n    #generate scores schema\n    Scores:\n      type: object\n      properties:\n        HomeTeam:\n          type: object\n          properties:\n            id:\n              type: integer\n              format: int\n            name:\n              type: string\n            logo:\n              type: string\n            score:\n              type: integer\n              format: int\n        AwayTeam:\n          type: object\n          properties:\n            id:\n              type: integer\n              format: int\n            name:\n              type: string\n            logo:\n              type: string\n            score:\n              type: integer\n              format: int\n        Date:\n          type: string\n        Stadium:\n          type: string\n        Seasson:\n          type: string\n        Round:\n          type: string\n        Group:\n          type: string\n        Status:\n          type: string\n        LocalTeamId:\n          type: integer\n          format: int\n        AwayTeamId:\n          type: integer\n          format: int\n        id:\n          type: integer\n          format: int\n    Region:\n      type: object\n      properties:\n        idRegion:\n          type: integer\n          format: int\n        Region:\n          type: string\n      description: REGION MODEL\n    Club:\n      type: object\n      properties:\n        idClub:\n          type: integer\n          format: int\n        Club:\n          type: string\n        Address:\n          type: string\n        Phone:\n          type: string\n        Email:\n          type: string\n        Web:\n          type: string\n        Responsible:\n          type: string\n        Logo:\n          type: string\n        Region:\n          type: integer\n          format: int\n      description: CLUB MODEL\n    Team:\n      type: object\n      properties:\n        idTeam:\n          type: integer\n          format: int\n        idClub:\n          type: integer\n          format: int\n        idSeason:\n          type: integer\n          format: int\n        idCategory:\n          type: integer\n          format: int\n        idRegion:\n          type: integer\n          format: int\n        Team:\n          type: string\n          format: int\n      x-examples:\n        example-1:\n          idTeam: 0\n          idClub: 0\n          idSeason: 0\n          idCategory: 0\n          idRegion: 0\n          Team: string\n      description: 'TEAM MODEL '\n",
			"canonicalURL": "/github.com/apiaddicts/openapi2postman@b8fff1652d07ca84b01aef7ee494054fdea1a474/-/blob/example/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apiaddicts/openapi2postman/blob/b8fff1652d07ca84b01aef7ee494054fdea1a474/example/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}