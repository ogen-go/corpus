{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/harness/harness-core"
		},
		"file": {
			"name": "ff-server-admin.yaml",
			"size": 0,
			"path": "960-continuous-features/src/main/resources/ff-server-admin.yaml",
			"byteSize": 16260,
			"content": "openapi: 3.0.0\ninfo:\n  title: Harness feature flag service\n  version: 1.0.0\n  contact:\n    name: Feature Flag - developers\n    url: 'https://www.harness.io'\n    email: ff@harness.io\nservers:\n  - url: /api/1.0\n    description: no host specified\n  - url: 'http://localhost:3000/api/1.0'\n    description: Server description.\npaths:\n  /admin/features:\n    post:\n      summary: Create a feature\n      description: Create a feature flag.\n      operationId: CreateFeatureFlag\n      parameters:\n        - $ref: '#/components/parameters/accountQueryParam'\n        - $ref: '#/components/parameters/orgQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                project:\n                  type: string\n                prerequisites:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Prerequisite'\n                name:\n                  type: string\n                description:\n                  type: string\n                identifier:\n                  type: string\n                owner:\n                  type: string\n                kind:\n                  type: string\n                  enum:\n                    - boolean\n                    - int\n                    - string\n                    - json\n                archived:\n                  type: boolean\n                variations:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Variation'\n                  minItems: 2\n                tags:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                defaultOnVariation:\n                  type: string\n                defaultOffVariation:\n                  type: string\n                permanent:\n                  type: boolean\n              required:\n                - name\n                - project\n                - identifier\n                - kind\n                - variations\n                - defaultOnVariation\n                - defaultOffVariation\n                - permanent\n                - archived\n      security:\n        - BearerAuth: []\n        - ApiKeyAuth: []\n      responses:\n        '201':\n          description: Created\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    get:\n      summary: Retrieve all feature activations.\n      description: Used to retrieve all feature activations for certain account id.\n      operationId: GetAllFeatures\n      parameters:\n        - $ref: '#/components/parameters/accountQueryParam'\n        - $ref: '#/components/parameters/orgQueryParam'\n        - $ref: '#/components/parameters/projectQueryParam'\n        - $ref: '#/components/parameters/environmentOptionalQueryParam'\n        - $ref: '#/components/parameters/pageNumber'\n        - $ref: '#/components/parameters/pageSize'\n      security:\n        - BearerAuth: []\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/FeaturesResponse'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  '/admin/features/{identifier}':\n    get:\n      summary: Retrieve a feature\n      description: Retrieve certain feature flag with certain identifier and account id.\n      operationId: GetFeatureFlag\n      parameters:\n        - $ref: '#/components/parameters/identifier'\n        - $ref: '#/components/parameters/accountQueryParam'\n        - $ref: '#/components/parameters/orgQueryParam'\n        - $ref: '#/components/parameters/projectQueryParam'\n        - $ref: '#/components/parameters/environmentOptionalQueryParam'\n      security:\n        - BearerAuth: []\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/FeatureResponse'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    patch:\n      summary: Modify a feature using instructions\n      description: Modify feature flag with certain identifier and account id.\n      operationId: PatchFeature\n      parameters:\n        - $ref: '#/components/parameters/identifier'\n        - $ref: '#/components/parameters/accountQueryParam'\n        - $ref: '#/components/parameters/orgQueryParam'\n        - $ref: '#/components/parameters/projectQueryParam'\n        - $ref: '#/components/parameters/environmentQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                comment:\n                  type: string\n                  example: This is a comment string\n                executionTime:\n                  type: integer\n                  description: \u003e-\n                    Time of execution in unix epoch milliseconds when the\n                    scheduled changes will be applied\n                instructions:\n                  type: array\n                  items:\n                    properties:\n                      kind:\n                        type: string\n                        example: enableFeatureFlag\n                        description: \u003e-\n                          The name of the modification you would like to perform\n                          on a resource.\n                      parameters:\n                        type: object\n                        example:\n                          ruleId: TestRule\n                          variationID: TestVariation\n                    required:\n                      - kind\n                      - parameters\"\n              required:\n                - instructions\n      security:\n        - BearerAuth: []\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/FeatureResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      summary: Delete a feature\n      description: Delete feature with certain identifier and account id.\n      operationId: DeleteFeatureFlag\n      parameters:\n        - $ref: '#/components/parameters/identifier'\n        - $ref: '#/components/parameters/accountQueryParam'\n        - $ref: '#/components/parameters/orgQueryParam'\n        - $ref: '#/components/parameters/projectQueryParam'\n      security:\n        - BearerAuth: []\n        - ApiKeyAuth: []\n      responses:\n        '204':\n          description: No content\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: api-key\n    BearerAuth:\n      type: http\n      scheme: bearer\n  parameters:\n    accountQueryParam:\n      name: accountIdentifier\n      in: query\n      required: true\n      description: Account\n      schema:\n        type: string\n      examples:\n        default:\n          value: default\n    orgQueryParam:\n      name: org\n      in: query\n      required: true\n      description: Organization Identifier\n      schema:\n        type: string\n      examples:\n        default:\n          value: default_org\n    projectQueryParam:\n      name: project\n      in: query\n      required: true\n      description: Project\n      schema:\n        type: string\n    environmentOptionalQueryParam:\n      name: environment\n      in: query\n      required: false\n      description: Environment\n      schema:\n        type: string\n    pageNumber:\n      name: pageNumber\n      in: query\n      required: false\n      description: PageNumber\n      schema:\n        type: integer\n    pageSize:\n      name: pageSize\n      in: query\n      required: false\n      description: PageSize\n      schema:\n        type: integer\n    identifier:\n      name: identifier\n      in: path\n      required: true\n      description: Unique identifier for the object in the API.\n      schema:\n        type: string\n    environmentQueryParam:\n      name: environment\n      in: query\n      required: true\n      description: Environment\n      schema:\n        type: string\n  schemas:\n    Prerequisite:\n      type: object\n      properties:\n        feature:\n          type: string\n        variations:\n          type: array\n          items:\n            type: string\n      required:\n        - feature\n        - variations\n    Variation:\n      type: object\n      properties:\n        identifier:\n          type: string\n        value:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - identifier\n        - value\n    TargetMap:\n      type: object\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n      required:\n        - idenfifier\n        - name\n    VariationMap:\n      type: object\n      properties:\n        variation:\n          type: string\n        targets:\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetMap'\n        targetSegments:\n          type: array\n          items:\n            type: string\n      required:\n        - variation\n    Clause:\n      type: object\n      properties:\n        id:\n          type: string\n        attribute:\n          type: string\n        op:\n          type: string\n        values:\n          type: array\n          items:\n            type: string\n        negate:\n          type: boolean\n      required:\n        - id\n        - attribute\n        - op\n        - negate\n        - values\n    WeightedVariation:\n      type: object\n      properties:\n        variation:\n          type: string\n        weight:\n          type: integer\n      required:\n        - variation\n        - weight\n    Distribution:\n      type: object\n      properties:\n        bucketBy:\n          type: string\n        variations:\n          type: array\n          items:\n            $ref: '#/components/schemas/WeightedVariation'\n      required:\n        - bucketBy\n        - variations\n    Serve:\n      type: object\n      properties:\n        distribution:\n          $ref: '#/components/schemas/Distribution'\n        variation:\n          type: string\n    ServingRule:\n      type: object\n      properties:\n        ruleId:\n          type: string\n        priority:\n          type: integer\n        clauses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Clause'\n        serve:\n          $ref: '#/components/schemas/Serve'\n      required:\n        - priority\n        - clauses\n        - serve\n        - ruleId\n    FeatureState:\n      type: string\n      enum:\n        - 'on'\n        - 'off'\n    Tag:\n      type: object\n      description: A name and value pair.\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      required:\n        - name\n    Feature:\n      type: object\n      properties:\n        project:\n          type: string\n        identifier:\n          type: string\n        prerequisites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prerequisite'\n        name:\n          type: string\n        description:\n          type: string\n        owner:\n          type: array\n          items:\n            type: string\n        kind:\n          type: string\n          enum:\n            - boolean\n            - int\n            - string\n            - json\n        archived:\n          type: boolean\n        variations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Variation'\n          minItems: 2\n        defaultOnVariation:\n          type: string\n        defaultOffVariation:\n          type: string\n        permanent:\n          type: boolean\n        envProperties:\n          type: object\n          properties:\n            environment:\n              type: string\n            variationMap:\n              type: array\n              items:\n                $ref: '#/components/schemas/VariationMap'\n            rules:\n              type: array\n              items:\n                $ref: '#/components/schemas/ServingRule'\n            state:\n              $ref: '#/components/schemas/FeatureState'\n            defaultServe:\n              $ref: '#/components/schemas/Serve'\n            offVariation:\n              type: string\n            modifiedAt:\n              type: integer\n              format: int64\n            version:\n              type: integer\n              format: int64\n          required:\n            - createdAt\n            - modifiedAt\n            - state\n            - defaultServe\n            - environment\n            - offVariation\n        createdAt:\n          type: integer\n          format: int64\n        modifiedAt:\n          type: integer\n          format: int64\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        evaluation:\n          type: string\n      required:\n        - project\n        - identifier\n        - createdAt\n        - modifiedAt\n        - permanent\n        - archived\n        - kind\n        - name\n        - variations\n        - defaultOnVariation\n        - defaultOffVariation\n        - permanent\n    FeatureObj:\n      type: array\n      items:\n        $ref: '#/components/schemas/Feature'\n    Features:\n      type: object\n      properties:\n        version:\n          type: integer\n        pageCount:\n          type: integer\n        itemCount:\n          type: integer\n          example: 1\n        pageSize:\n          type: integer\n          example: 1\n        pageIndex:\n          type: integer\n          example: 0\n        features:\n          $ref: '#/components/schemas/FeatureObj'\n      required:\n        - pageCount\n        - itemCount\n        - pageSize\n        - pageIndex\n        - features\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n  responses:\n    FeaturesResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Features'\n    Unauthenticated:\n      description: Unauthenticated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalServerError:\n      description: Internal server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Conflict:\n      description: The specified resource already exists\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    FeatureResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Feature'\n",
			"canonicalURL": "/github.com/harness/harness-core@fb76ceccecf39d5f955df6716b2bc6e9e41572cc/-/blob/960-continuous-features/src/main/resources/ff-server-admin.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/harness/harness-core/blob/fb76ceccecf39d5f955df6716b2bc6e9e41572cc/960-continuous-features/src/main/resources/ff-server-admin.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}