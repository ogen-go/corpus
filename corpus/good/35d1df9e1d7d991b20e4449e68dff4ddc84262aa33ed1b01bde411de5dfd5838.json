{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ais-one/cookbook"
		},
		"file": {
			"name": "example.output.yaml",
			"size": 0,
			"path": "js-node/expressjs/apps/app-template/openapi/example.output.yaml",
			"byteSize": 10206,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Cookbook API\n  description: A sample API to demonstrate features in the OpenAPI specification\n  termsOfService: http://es-labs.org/terms/\n  contact:\n    name: ES-Labs API Team\n    email: eslabs.com@gmail.com\n    url: https://es-labs.org\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: Auth\n    description: authentication api\n  - name: Base\n    description: basic api\nservers:\n  - url: http://127.0.0.1:3000/api\n    description: local development server\n  - url: '{protocol}://{environment}.example.com/v2'\n    variables:\n      protocol:\n        enum:\n          - http\n          - https\n        default: https\n      environment:\n        default: api\n        enum:\n          - api\n          - api.dev\n          - api.staging\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n  schemas:\n    Error: \u0026ref_0\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\npaths:\n  /healthcheck:\n    get:\n      tags:\n        - Base\n      responses:\n        '200':\n          description: GET healthcheck response ok\n          content:\n            application/json:\n              schema:\n                type: object\n    post:\n      tags:\n        - Base\n      responses:\n        '200':\n          description: POST healthcheck response ok\n  /health-auth:\n    get:\n      tags:\n        - Base\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: GET healthcheck (authorized) response ok\n  /upload-disk:\n    post:\n      tags:\n        - Base\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                files:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n                somestring:\n                  type: string\n      responses:\n        '200':\n          description: GET healthcheck (authorized) response ok\n  /auth/login:\n    post:\n      tags:\n        - Auth\n      summary: Login\n      description: \u003e\n        Returns { otp: 1} if user needs to use OTP, else return access and\n        refresh tokens \n\n        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus\n        sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem.\n        Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis\n        mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse\n        platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean\n        pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras\n        quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna\n        volutpat venenatis eget eget mauris. In eleifend fermentum facilisis.\n        Praesent enim enim, gravida ac sodales sed, placerat id erat.\n        Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum\n        libero. Morbi euismod sagittis libero sed lacinia.\n\n\n        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu\n        condimentum ligula luctus nec. Phasellus semper velit eget aliquet\n        faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum\n        lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius\n        odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae.\n        Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada\n        accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit\n        amet auctor felis gravida. Sed libero lorem, molestie sed nisl in,\n        accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed\n        vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu,\n        euismod sapien.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - password\n              properties:\n                email:\n                  type: string\n                  example: test\n                password:\n                  type: string\n                  example: test\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  otp:\n                    type: integer\n                    example: 1\n                  access_token:\n                    type: string\n                    example: \u003e-\n                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ._l3MQQAq4Py1q9eWoaLomaX8wvSkYNiztEK_OZ1qlFA\n                  refresh_token:\n                    type: string\n                    example: ey....\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        default:\n          description: Unexpected error\n  /auth/otp:\n    post:\n      tags:\n        - Auth\n      summary: OTP\n      description: Return access and refresh tokens\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - pin\n              properties:\n                id:\n                  type: string\n                  example: '1'\n                pin:\n                  type: string\n                  example: '111111'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  otp:\n                    type: integer\n                    example: 1\n                  access_token:\n                    type: string\n                    example: \u003e-\n                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ._l3MQQAq4Py1q9eWoaLomaX8wvSkYNiztEK_OZ1qlFA\n                  refresh_token:\n                    type: string\n                    example: ey....\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        default:\n          description: Unexpected error\n  /app-template/categories:\n    get:\n      summary: Get categories\n      description: Returns all categories from the system that the user has access to\n      tags:\n        - Categories\n      operationId: findCategories\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: page\n          in: query\n          description: 1-based page index\n          required: false\n          style: form\n          schema:\n            type: integer\n            format: int32\n        - name: limit\n          in: query\n          description: page size\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: category response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: integer\n                  results:\n                    type: array\n                    items: \u0026ref_2\n                      allOf:\n                        - \u0026ref_1\n                          type: object\n                          required:\n                            - name\n                          properties:\n                            name:\n                              type: string\n                        - type: object\n                          required:\n                            - id\n                          properties:\n                            id:\n                              type: integer\n                              format: int64\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema: *ref_0\n    post:\n      description: Creates a new category\n      tags:\n        - Categories\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        description: Pet to add to the store\n        required: true\n        content:\n          application/json:\n            schema: *ref_1\n      responses:\n        '200':\n          description: pet response\n          content:\n            application/json:\n              schema: *ref_2\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema: *ref_0\n  /app-template/categories/{id}:\n    get:\n      description: Returns a user based on a single ID\n      tags:\n        - Categories\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: ID of category to fetch\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: category response\n          content:\n            application/json:\n              schema: *ref_2\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema: *ref_0\n    patch:\n      description: Update a user based on a single ID\n      tags:\n        - Categories\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: ID of category to update\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: category to update\n        required: true\n        content:\n          application/json:\n            schema: *ref_1\n      responses:\n        '200':\n          description: category response\n          content:\n            application/json:\n              schema: *ref_2\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema: *ref_0\n",
			"canonicalURL": "/github.com/ais-one/cookbook@68bdc6e279e31f3ad6754b48294ac77b4f1d5a85/-/blob/js-node/expressjs/apps/app-template/openapi/example.output.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ais-one/cookbook/blob/68bdc6e279e31f3ad6754b48294ac77b4f1d5a85/js-node/expressjs/apps/app-template/openapi/example.output.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}