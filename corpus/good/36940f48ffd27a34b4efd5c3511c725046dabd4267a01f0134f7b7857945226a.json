{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jexia/semaphore"
		},
		"file": {
			"name": "petstore.yml",
			"size": 0,
			"path": "pkg/providers/openapi3/fixtures/petstore.yml",
			"byteSize": 4237,
			"content": "# This file includes every schema structure what we support\n\nopenapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\n  # x-semaphore-package is a semaphore-specific extension\n  x-semaphore-package: com.semaphore\n\nservers:\n  - url: http://petstore.swagger.io/v1\n\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: An array of pets\n          # by default, semaphore generates properties named as \u003cVerb\u003e:\u003cEndpoint\u003e:Response:\u003cCode\u003e.\u003cContentType\u003e\n          # Example: Get:/pets:Response:200.json\n          # model allows to override the generated name with a custom name.\n          # The name must be unique in scope of the package.\n          #\n          # Not supported yet!\n          x-semaphore-model: Pets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      requestBody:\n        description: The pet object\n        # by default, semaphore generates properties named as \u003cVerb\u003e:\u003cEndpoint\u003e:Response:\u003cCode\u003e.\u003cContentType\u003e\n        # Example: Get:/pets:Response:200.json\n        # model allows to override the generated name with a custom name.\n        # The name must be unique in scope of the package.\n        #\n        # Not supported yet!\n        x-semaphore-model: CreatePetRequest\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n# Semaphore does not parse components. All schemas are parsed from the paths object.\ncomponents:\n  schemas:\n    # Pets represent a Repeated of One Of\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n\n    # Error represents a Message.\n    # Error is included in many endpoints as a second response type.\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n\n    # Dogs represents a Repeated of Message\n    Dogs:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/Dog\"\n\n    # DogNames represents a Repeated of Scalars\n    DogNames:\n      type: \"array\"\n      items:\n        type: \"string\"\n\n    # RandomName represents a Scalar\n    RandomName:\n      type: \"string\"\n      default: \"Fido\"\n\n    # Pet represents oneOf\n    Pet:\n      oneOf:\n        - $ref: \"#/components/schemas/Cat\"\n        - $ref: \"#/components/schemas/Dog\"\n\n    Cat:\n      type: \"object\"\n      properties:\n        name:\n          type: \"string\"\n        meow:\n          type: \"boolean\"\n\n    Dog:\n      type: \"object\"\n      properties:\n        name:\n          type: \"string\"\n        is_good_boy:\n          type: \"boolean\"",
			"canonicalURL": "/github.com/jexia/semaphore@182a82a458f989999543cc7ed56d9372b1e81691/-/blob/pkg/providers/openapi3/fixtures/petstore.yml",
			"externalURLs": [
				{
					"url": "https://github.com/jexia/semaphore/blob/182a82a458f989999543cc7ed56d9372b1e81691/pkg/providers/openapi3/fixtures/petstore.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}