{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Sciebo-RDS/Sciebo-RDS"
		},
		"file": {
			"name": "use-case_exporter.yml",
			"size": 0,
			"path": "RDS/layer2_use_cases/exporter/use-case_exporter.yml",
			"byteSize": 5192,
			"content": "openapi: 3.0.0\npaths:\n  '/user/{user-id}/research/{research-id}':\n    parameters:\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n    get:\n      summary: Returns all research files\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/File'\n    post:\n      summary: Push all files in ingoing file ports to all outgoing file ports.\n      responses:\n        '200':\n          description: OK\n    delete:\n      summary: Removes all files in all outgoing files port.\n      responses:\n        '200':\n          description: OK\n  '/user/{user-id}/research/{research-id}/services/{servicename}':\n    parameters:\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: servicename\n        in: path\n        required: true\n    get:\n      summary: Returns all files in given port.\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/File'\n      description: ''\n    post:\n      summary: Push all files from specified ingoing file ports to all outgoing file ports.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Success'\n      description: |-\n        If the setting \"applyChanges\" is not set for this research, then the following flow will be executed:\n        If a file already exists in the outgoing file ports, the new file will be uploaded with a hash value (appended to the filename, ex. filename.txt -\u003e filename.has245.txt).\n    delete:\n      summary: Removes all files in outgoing files port from given ingoing files port.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Success'\n  '/user/{user-id}/research/{research-id}/services/{servicename}/files/{files-id}':\n    parameters:\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: files-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: servicename\n        in: path\n        required: true\n    get:\n      summary: Returns the file with id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/File'\n    post:\n      summary: Push the given file-id to all outgoing file ports.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Success'\n      description: |-\n        If the setting \"applyChanges\" is not set for this research, then the following flow will be executed:\n        If a file already exists in the outgoing file ports, the new file will be uploaded with a hash value (appended to the filename, ex. filename.txt -\u003e filename.has245.txt).\n    delete:\n      summary: Removes specified file in outgoing files port from given ingoing files port.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Success'\ninfo:\n  version: '1.0'\n  title: Exporter\n  description: This service is responsible for any exporting functionality.\n  contact:\n    name: Peter Heiss\n    url: 'https://www.research-data-services.org'\n    email: peter.heiss@uni-muenster.de\nservers:\n  - url: 'http://use-case_exporter/exporter'\n    description: ''\ncomponents:\n  schemas:\n    Research:\n      title: Research\n      type: object\n      properties:\n        researchId:\n          type: string\n        researchIndex:\n          type: string\n        services:\n          $ref: '#/components/schemas/Service'\n        userId:\n          type: string\n    File:\n      title: File\n      type: string\n    Settings:\n      title: Settings\n      type: object\n      properties:\n        applyChanges:\n          type: boolean\n        autoSync:\n          type: boolean\n    Success:\n      title: Success\n      type: object\n      properties:\n        success:\n          type: boolean\n    Service:\n      title: Service\n      type: object\n      properties:\n        servicename:\n          type: string\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/File'\n",
			"canonicalURL": "/github.com/Sciebo-RDS/Sciebo-RDS@5b868aa82ae367fd7f33ebd419ffc7ba255cdd7e/-/blob/RDS/layer2_use_cases/exporter/use-case_exporter.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Sciebo-RDS/Sciebo-RDS/blob/5b868aa82ae367fd7f33ebd419ffc7ba255cdd7e/RDS/layer2_use_cases/exporter/use-case_exporter.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}