{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sergiyhii/openapi-typescript"
		},
		"file": {
			"name": "manifold.yaml",
			"size": 0,
			"path": "tests/v3/specs/manifold.yaml",
			"byteSize": 58434,
			"content": "openapi: 3.0.1\ninfo:\n  title: Catalog API\n  description: Access Regions, Providers, Products and Plans\n  version: 1.0.0\nservers:\n  - url: https://api.catalog.manifold.co/v1\npaths:\n  /regions/:\n    get:\n      tags:\n        - Region\n      summary: List all available regions\n      parameters:\n        - name: location\n          in: query\n          description: |\n            Filter results to only include the regions that have this location.\n          schema:\n            pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n            type: string\n            format: label\n        - name: platform\n          in: query\n          description: |\n            Filter results to only include the regions that are on this\n            platform.\n          schema:\n            pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n            type: string\n            format: label\n      responses:\n        200:\n          description: A list of regions.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Region\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      tags:\n        - Region\n      summary: Add a new region\n      requestBody:\n        description: Region create request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateRegion\"\n        required: true\n      responses:\n        201:\n          description: Complete region object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Region\"\n        400:\n          description: Invalid request provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        409:\n          description: Region already exists for that platform and location\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n      x-codegen-request-body-name: body\n  /regions/{id}:\n    get:\n      tags:\n        - Region\n      summary: Get a Region by ID\n      parameters:\n        - name: id\n          in: path\n          description:\n            ID of the region to lookup, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      responses:\n        200:\n          description: A region.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Region\"\n        400:\n          description: Provided Region ID is Invalid\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Region could not be found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    patch:\n      tags:\n        - Region\n      summary: Patches an existing region\n      parameters:\n        - name: id\n          in: path\n          description:\n            ID of the region to lookup, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      requestBody:\n        description: Region update request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRegion\"\n        required: true\n      responses:\n        200:\n          description: Complete region object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Region\"\n        400:\n          description: Invalid request provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n      x-codegen-request-body-name: body\n  /providers/:\n    get:\n      tags:\n        - Provider\n      summary: List all available providers\n      parameters:\n        - name: label\n          in: query\n          description: |\n            Filter results to only include those that have this label.\n          schema:\n            pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n            type: string\n            format: label\n      responses:\n        200:\n          description: A list of providers.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Provider\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      tags:\n        - Provider\n      summary: Add a new provider\n      requestBody:\n        description: Provider create request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateProvider\"\n        required: true\n      responses:\n        201:\n          description: Complete provider object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n        400:\n          description: Invalid request provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        409:\n          description: Provider already exists with that label\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n      x-codegen-request-body-name: body\n  /providers/{id}:\n    get:\n      tags:\n        - Provider\n      summary: Get a provider by ID\n      parameters:\n        - name: id\n          in: path\n          description:\n            ID of the provider to lookup, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      responses:\n        200:\n          description: A provider.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n        404:\n          description: Unknown provider error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    patch:\n      tags:\n        - Provider\n      summary: Update a provider\n      parameters:\n        - name: id\n          in: path\n          description:\n            ID of the provider to update, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      requestBody:\n        description: Provider update request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateProvider\"\n        required: true\n      responses:\n        200:\n          description: Complete provider object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n        400:\n          description: Invalid request provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Provider not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        409:\n          description: Provider already exists with that label\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n      x-codegen-request-body-name: body\n  /products/:\n    get:\n      tags:\n        - Product\n      summary: List all available products\n      parameters:\n        - name: provider_id\n          in: query\n          description: |\n            Base32 encoded 18 byte identifier of the provider that these\n            products must belong to.\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n        - name: label\n          in: query\n          description: |\n            Filter results to only include those that have this label.\n          schema:\n            pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n            type: string\n            format: label\n        - name: tags\n          in: query\n          description: Return only products matching at least one of the tags.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n              type: string\n              format: label\n      responses:\n        200:\n          description: A product.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Product\"\n        400:\n          description: Invalid provider_id supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n        - anonymous: []\n    post:\n      tags:\n        - Product\n      summary: Add a new product\n      requestBody:\n        description: Product create request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateProduct\"\n        required: true\n      responses:\n        201:\n          description: Complete product object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        400:\n          description: Invalid request provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        409:\n          description: Product already exists with that label\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n      x-codegen-request-body-name: body\n  /internal/products:\n    get:\n      tags:\n        - Product\n      summary: Get products and associated information\n      parameters:\n        - name: provider_id\n          in: query\n          description: |\n            Base32 encoded 18 byte identifier of the provider that these\n            products must belong to.\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n        - name: label\n          in: query\n          description: |\n            Filter results to only include those that have this label.\n          schema:\n            pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n            type: string\n            format: label\n        - name: tags\n          in: query\n          description: Return only products matching at least one of the tags.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n              type: string\n              format: label\n        - name: include_plans\n          in: query\n          description: Return product listings without plan information\n          schema:\n            type: boolean\n            default: true\n      responses:\n        200:\n          description: A product.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ExpandedProduct\"\n        400:\n          description: Invalid provider_id supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - tokenRequired: []\n        - anonymous: []\n  /products/{id}:\n    get:\n      tags:\n        - Product\n      summary: Get a product by ID\n      parameters:\n        - name: id\n          in: path\n          description: |\n            ID of the product to lookup, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      responses:\n        200:\n          description: A product.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        400:\n          description: Invalid Product ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Product not found error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n        - anonymous: []\n    patch:\n      tags:\n        - Product\n      summary: Update a product\n      parameters:\n        - name: id\n          in: path\n          description: |\n            ID of the product to lookup, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      requestBody:\n        description: Product update request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateProduct\"\n        required: true\n      responses:\n        200:\n          description: Complete product object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        400:\n          description: Invalid Product ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Product not found error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n      x-codegen-request-body-name: body\n  /plans/{id}:\n    get:\n      tags:\n        - Plan\n      summary: Get a plan by ID\n      parameters:\n        - name: id\n          in: path\n          description: |\n            ID of the plan to lookup, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      responses:\n        200:\n          description: A plan.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpandedPlan\"\n        400:\n          description: Invalid Plan ID Provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Unknown plan error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n        - anonymous: []\n    patch:\n      tags:\n        - Plan\n      summary: Update a plan\n      parameters:\n        - name: id\n          in: path\n          description: |\n            ID of the plan to lookup, stored as a base32 encoded 18 byte\n            identifier.\n          required: true\n          schema:\n            pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n            type: string\n            format: base32ID\n      requestBody:\n        description: Plan update request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePlan\"\n        required: true\n      responses:\n        200:\n          description: Complete product plan\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n        400:\n          description: Invalid Plan ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Plan not found error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n      x-codegen-request-body-name: body\n  /plans/:\n    get:\n      tags:\n        - Plan\n      summary: Get a list of plans.\n      parameters:\n        - name: product_id\n          in: query\n          description: Return the plans that are associated with this product.\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              format: base32ID\n        - name: label\n          in: query\n          description: |\n            Filter results to only include those that have this label.\n          schema:\n            pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n            type: string\n            format: label\n      responses:\n        200:\n          description: A list of plans for the given product.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ExpandedPlan\"\n        400:\n          description: Invalid Parameters Provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        404:\n          description: Could not find product\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n        - anonymous: []\n    post:\n      tags:\n        - Plan\n      summary: Add a new plan\n      requestBody:\n        description: Plan create request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePlan\"\n        required: true\n      responses:\n        201:\n          description: Complete plan object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n        400:\n          description: Invalid request provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        409:\n          description: Plan already exists with that label\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        500:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - xInternalAuthRequired: []\n        - tokenRequired: []\n      x-codegen-request-body-name: body\ncomponents:\n  schemas:\n    ID:\n      pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n      type: string\n      description: A base32 encoded 18 byte identifier.\n      format: base32ID\n      x-go-type:\n        type: ID\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    OptionalID:\n      pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$\n      type: string\n      description: A base32 encoded 18 byte identifier.\n      format: base32ID\n      nullable: true\n      x-nullable: true\n      x-go-type:\n        type: ID\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    FlexID:\n      pattern: ^((?:[a-zA-Z0-9-_]+\\.)*)[a-zA-Z0-9][a-zA-Z0-9-_]+\\.[a-zA-Z]{2,11}?\\/[a-z0-9][a-z0-9-_]{1,128}\\/\\{?[a-zA-Z0-9-_]{1,256}={0,2}\\}?$\n      type: string\n      description: A flexible identifier for internal or external entities.\n      x-go-type:\n        type: FlexID\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    OptionalFlexID:\n      pattern: ^((?:[a-zA-Z0-9-_]+\\.)*)[a-zA-Z0-9][a-zA-Z0-9-_]+\\.[a-zA-Z]{2,11}?\\/[a-z0-9][a-z0-9-_]{1,128}\\/\\{?[a-zA-Z0-9-_]{1,256}={0,2}\\}?$\n      type: string\n      description: A flexible identifier for internal or external entities.\n      nullable: true\n      x-nullable: true\n      x-go-type:\n        type: FlexID\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    Label:\n      pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n      type: string\n      description: A machine readable unique label, which is url safe.\n      x-go-type:\n        type: Label\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    OptionalLabel:\n      pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n      type: string\n      description: A machine readable unique label, which is url safe.\n      nullable: true\n      x-nullable: true\n      x-go-type:\n        type: Label\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    FeatureValueLabel:\n      pattern: ^[a-z0-9][a-z0-9-_\\.]{1,128}$\n      type: string\n      description: A machine readable unique label, which is url safe.\n      x-go-type:\n        type: FeatureValueLabel\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    Location:\n      pattern: ^[a-z0-9][a-z0-9\\-]{1,128}$\n      type: string\n      description: A location of where a potential resource can be provisioned.\n    Platform:\n      pattern: ^[a-z0-9][a-z0-9\\-]{1,128}$\n      type: string\n      description: A name of a platform which is used to provision resources.\n    Name:\n      pattern: ^[a-zA-Z0-9][a-z0-9A-Z\\. \\-_]{2,128}$\n      type: string\n      description: A name of an entity which is displayed to a human.\n      x-go-type:\n        type: Name\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    OptionalName:\n      pattern: ^[a-zA-Z0-9][a-z0-9A-Z\\. \\-_]{2,128}$\n      type: string\n      description: A name of an entity which is displayed to a human.\n      nullable: true\n      x-nullable: true\n      x-go-type:\n        type: Name\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    LogoURL:\n      pattern: ^https:\\/\\/cdn\\.(?:stage\\.)?manifold.co\n      type: string\n      description: |\n        Logo used for Provider and Product listings.\n\n        Must be square (same width and height) and minimum 400px. Maximum of 800px.\n      format: url\n    OptionalLogoURL:\n      pattern: ^https:\\/\\/cdn\\.(?:stage\\.)?manifold.co\n      type: string\n      description: |\n        Logo used for Provider and Product listings.\n\n        Must be square (same width and height) and minimum 400px. Maximum of 800px.\n      format: url\n      nullable: true\n      x-nullable: true\n    RegionBody:\n      required:\n        - location\n        - name\n        - platform\n        - priority\n      type: object\n      properties:\n        platform:\n          $ref: \"#/components/schemas/Platform\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        name:\n          type: string\n          nullable: false\n        priority:\n          multipleOf: 1\n          maximum: 1E+2\n          minimum: 0\n          type: number\n          nullable: false\n    Region:\n      required:\n        - body\n        - id\n        - type\n        - version\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        type:\n          type: string\n          enum:\n            - region\n        version:\n          type: integer\n        body:\n          $ref: \"#/components/schemas/RegionBody\"\n    CreateRegion:\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          $ref: \"#/components/schemas/RegionBody\"\n    UpdateRegion:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n    ProviderBody:\n      required:\n        - label\n        - name\n      type: object\n      properties:\n        owner_id:\n          $ref: \"#/components/schemas/OptionalFlexID\"\n        team_id:\n          $ref: \"#/components/schemas/OptionalID\"\n        label:\n          $ref: \"#/components/schemas/Label\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        logo_url:\n          $ref: \"#/components/schemas/LogoURL\"\n        support_email:\n          type: string\n          format: email\n        documentation_url:\n          type: string\n          format: url\n    UpdateProviderBody:\n      type: object\n      properties:\n        owner_id:\n          $ref: \"#/components/schemas/OptionalFlexID\"\n        team_id:\n          $ref: \"#/components/schemas/OptionalID\"\n        label:\n          $ref: \"#/components/schemas/OptionalLabel\"\n        name:\n          $ref: \"#/components/schemas/OptionalName\"\n        logo_url:\n          $ref: \"#/components/schemas/OptionalLogoURL\"\n        support_email:\n          type: string\n          format: email\n          nullable: true\n        documentation_url:\n          type: string\n          format: url\n          nullable: true\n    Provider:\n      required:\n        - body\n        - id\n        - type\n        - version\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        version:\n          type: integer\n        type:\n          type: string\n          enum:\n            - provider\n        body:\n          $ref: \"#/components/schemas/ProviderBody\"\n    CreateProvider:\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          $ref: \"#/components/schemas/ProviderBody\"\n    UpdateProvider:\n      required:\n        - body\n        - id\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        body:\n          $ref: \"#/components/schemas/UpdateProviderBody\"\n    UpdateProduct:\n      required:\n        - body\n        - id\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        body:\n          $ref: \"#/components/schemas/UpdateProductBody\"\n    UpdateProductBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        label:\n          $ref: \"#/components/schemas/Label\"\n        logo_url:\n          $ref: \"#/components/schemas/LogoURL\"\n        listing:\n          $ref: \"#/components/schemas/ProductListing\"\n        tagline:\n          maxLength: 140\n          type: string\n          description: |\n            140 character sentence positioning the product.\n          nullable: true\n        value_props:\n          maxItems: 8\n          type: array\n          description: A list of value propositions of the product.\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/ValueProp\"\n        setup_steps:\n          maxItems: 8\n          type: array\n          description: A list of getting started steps for the product\n          nullable: true\n          items:\n            maxLength: 200\n            minLength: 3\n            type: string\n            description: A markdown string describing a step in how to setup a product\n        images:\n          maxItems: 8\n          type: array\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/ProductImageURL\"\n        support_email:\n          type: string\n          format: email\n          nullable: true\n        documentation_url:\n          type: string\n          format: url\n          nullable: true\n        terms_url:\n          type: string\n          description: |\n            URL to this Product's Terms of Service. If provided is true, then\n            a url must be set. Otherwise, provided is false.\n          nullable: true\n        feature_types:\n          type: array\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/FeatureType\"\n        integration:\n          type: object\n          properties:\n            provisioning:\n              $ref: \"#/components/schemas/ProductProvisioning\"\n            base_url:\n              type: string\n              format: url\n              nullable: true\n            sso_url:\n              type: string\n              format: url\n              nullable: true\n            version:\n              type: string\n              nullable: true\n              enum:\n                - v1\n            features:\n              type: object\n              properties:\n                access_code:\n                  type: boolean\n                  nullable: true\n                sso:\n                  type: boolean\n                  nullable: true\n                plan_change:\n                  type: boolean\n                  nullable: true\n                credential:\n                  type: string\n                  nullable: true\n                  default: multiple\n                  enum:\n                    - none\n                    - single\n                    - multiple\n                    - unknown\n          nullable: true\n        platform_ids:\n          type: array\n          description: |\n            An array of platform ids to restrict this product for.\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/ID\"\n        tags:\n          $ref: \"#/components/schemas/ProductTags\"\n    UpdatePlan:\n      required:\n        - body\n        - id\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        body:\n          $ref: \"#/components/schemas/UpdatePlanBody\"\n    UpdatePlanBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        label:\n          $ref: \"#/components/schemas/Label\"\n        state:\n          $ref: \"#/components/schemas/PlanState\"\n        has_resize_constraints:\n          type: boolean\n          description: Used in conjuction with resizable_to to set or unset the list\n          nullable: true\n        resizable_to:\n          $ref: \"#/components/schemas/PlanResizeList\"\n        regions:\n          type: array\n          description: Array of Region IDs\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/ID\"\n        features:\n          type: array\n          description: Array of Feature Values\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/FeatureValue\"\n        trial_days:\n          minimum: 0\n          type: integer\n          description: |\n            The number of days a user gets as a free trial when subscribing to\n            this plan. Trials are valid only once per product; changing plans\n            or adding an additional subscription will not start a new trial.\n          nullable: true\n        cost:\n          minimum: 0\n          type: integer\n          description: Dollar value in cents\n          nullable: true\n    FeatureType:\n      required:\n        - label\n        - name\n        - type\n      type: object\n      properties:\n        label:\n          $ref: \"#/components/schemas/Label\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        type:\n          type: string\n          enum:\n            - boolean\n            - string\n            - number\n        customizable:\n          type: boolean\n          description:\n            This sets whether or not the feature can be customized by a\n            consumer.\n          nullable: false\n          default: false\n        upgradable:\n          type: boolean\n          description: |\n            This sets whether or not the feature can be upgraded by the consumer after the\n            resource has provisioned. Upgrading means setting a higher value or selecting a\n            higher element in the list.\n          nullable: false\n          default: false\n        downgradable:\n          type: boolean\n          description: |\n            This sets whether or not the feature can be downgraded by the consumer after the\n            resource has provisioned. Downgrading means setting a lower value or selecting a\n            lower element in the list.\n          nullable: false\n          default: false\n        measurable:\n          type: boolean\n          description: |\n            Sets if this feature’s value is trackable from the provider,\n            this only really affects numeric constraints.\n          nullable: false\n          default: false\n        values:\n          $ref: \"#/components/schemas/FeatureValuesList\"\n      description: |\n        A feature type represents the different aspects of a product that are\n        offered, these features can manifest differently depending on the plan.\n    FeatureValuesList:\n      type: array\n      description: |\n        A list of allowable values for the feature.\n        To define values for a boolean feature type, only `true` is required,\n        using the label `true`, name and numeric_details will be ignored.\n        If the feature is set measurable it is expected that these all have a\n        `numeric_details` definition, and the plan will determine which\n        `numeric_details` set is used based on it's setting.\n      nullable: true\n      items:\n        $ref: \"#/components/schemas/FeatureValueDetails\"\n      x-nullable: true\n    FeatureValueDetails:\n      required:\n        - label\n        - name\n      type: object\n      properties:\n        label:\n          $ref: \"#/components/schemas/FeatureValueLabel\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        cost:\n          minimum: 0\n          type: integer\n          description: |\n            The cost that will be added to the monthly plan cost when this value\n            is selected or is default for the plan.\n            Cost is deprecated in favor of the `price.cost` field.\n          nullable: false\n        price:\n          type: object\n          properties:\n            cost:\n              minimum: 0\n              type: integer\n              description: |\n                Cost is the price in cents that will be added to plan's base cost\n                when this value is selected or is default for the plan.\n                Number features should use the cost range instead.\n              nullable: false\n            multiply_factor:\n              minimum: 0\n              type: number\n              description: |\n                When a feature is used to multiply the cost of the plan or of\n                another feature, multiply factor is used for calculation.\n                A feature cannot have both a cost and a multiply factor.\n              nullable: false\n            formula:\n              $ref: \"#/components/schemas/PriceFormula\"\n            description:\n              type: string\n              description: |\n                Description explains how a feature is calculated to the user.\n          description: |\n            Price describes the cost of a feature. It should be preferred over\n            the `cost` property.\n        numeric_details:\n          $ref: \"#/components/schemas/FeatureNumericDetails\"\n    FeatureNumericDetails:\n      type: object\n      properties:\n        increment:\n          minimum: 0\n          type: integer\n          description: |\n            Sets the increment at which numbers can be selected if customizable, by\n            default this is 1; for example, setting this to 8 would only allow integers\n            in increments of 8 ( 0, 8, 16, ... ). This property is not used if the\n            feature is measurable; except if it is set to 0, setting the increment to 0\n            means this numeric details has no scale, and will not be or customizable.\n            Some plans may not have a measureable or customizable feature.\n          nullable: false\n        min:\n          minimum: 0\n          type: integer\n          description: Minimum value that can be set by a user if customizable\n          nullable: false\n        max:\n          minimum: 1\n          type: integer\n          description: Maximum value that can be set by a user if customizable\n          nullable: true\n        suffix:\n          type: string\n          description:\n            Applied to the end of the number for display, for example the\n            ‘GB’ in ‘20 GB’.\n          nullable: true\n        cost_ranges:\n          maxItems: 15\n          type: array\n          nullable: true\n          items:\n            $ref: \"#/components/schemas/FeatureNumericRange\"\n      description: |\n        Optional container for additional details relating to numeric features.\n        This is required if the feature is measurable and numeric.\n      nullable: true\n      x-nullable: true\n    FeatureNumericRange:\n      type: object\n      properties:\n        limit:\n          minimum: -1\n          type: integer\n          description: |\n            Defines the end of the range ( inclusive ), from the previous, or 0;\n            where the cost_multiple starts taking effect. If set to -1 this defines the\n            range to infinity, or the maximum integer the system can handle\n            ( whichever comes first ).\n          nullable: false\n        cost_multiple:\n          minimum: 0\n          type: integer\n          description: |\n            An integer in 10,000,000ths of cents, will be multiplied by the\n            numeric value set in the feature to determine the cost.\n          nullable: false\n    FeatureValue:\n      required:\n        - feature\n        - value\n      type: object\n      properties:\n        feature:\n          $ref: \"#/components/schemas/Label\"\n        value:\n          $ref: \"#/components/schemas/FeatureValueLabel\"\n    ValueProp:\n      required:\n        - body\n        - header\n      type: object\n      properties:\n        header:\n          maxLength: 80\n          minLength: 3\n          type: string\n          description: Heading of a value proposition.\n          nullable: false\n        body:\n          maxLength: 500\n          minLength: 10\n          type: string\n          description: Body of a value proposition.\n          nullable: false\n    ProductImageURL:\n      pattern: ^https:\\/\\/cdn\\.(?:stage\\.)?manifold.co\n      type: string\n      description: |\n        Image URL used for Product listings.\n\n        Minimum 660px wide, 400px high.\n      format: url\n    ProductTags:\n      maxItems: 10\n      type: array\n      description: List of tags for product categorization and search\n      items:\n        $ref: \"#/components/schemas/Label\"\n    ProductState:\n      type: string\n      enum:\n        - available\n        - hidden\n        - grandfathered\n        - new\n        - upcoming\n    ProductListing:\n      type: object\n      properties:\n        public:\n          type: boolean\n          description: |\n            When true, everyone can see the product when requested. When false it will\n            not be visible to anyone except those on the provider team.\n          default: false\n        listed:\n          type: boolean\n          description: |\n            When true, the product will be displayed in product listings alongside\n            other products. When false the product will be excluded from listings,\n            but can still be provisioned directly if it's label is known.\n            Any pages that display information about the product when not listed,\n            should indicate to webcrawlers that the content should not be indexed.\n          default: false\n        marketing:\n          type: object\n          properties:\n            beta:\n              type: boolean\n              description: |\n                Indicates whether or not the product is in `Beta` and should be\n                advertised as such. This does not have any impact on who can access the\n                product, it is just used to inform consumers through our clients.\n              default: false\n            new:\n              type: boolean\n              description: |\n                Indicates whether or not the product is in `New` and should be\n                advertised as such. This does not have any impact on who can access the\n                product, it is just used to inform consumers through our clients.\n              default: false\n            featured:\n              type: boolean\n              description: |\n                Indicates whether or not the product is in `New` and should be\n                advertised as such. This does not have any impact on who can access the\n                product, it is just used to inform consumers through our clients.\n              default: false\n          description: |\n            Object to hold various flags for marketing purposes only. These are values\n            that need to be stored, but should not affect decision making in code. If\n            we find ourselves in a position where we think they should, we should\n            consider refactoring our listing definition.\n          x-go-type:\n            type: ProductListingMarketing\n            import:\n              package: github.com/manifoldco/catalog/client/primitives/shims\n              alias: cShims\n      x-go-type:\n        type: ProductListing\n        import:\n          package: github.com/manifoldco/catalog/client/primitives/shims\n          alias: cShims\n    ProductProvisioning:\n      type: string\n      description: |\n        Provider Only, implies that the product should only be provisionable by the\n          provider; so members of the provider team, no one else should be allowed.\n        Pre-Order, should not be used yet. But in the future it should allow people to\n          pre-provision a resource for when it does go live.\n        Public, means the resource is live and everyone should be able to provision it.\n      enum:\n        - provider-only\n        - pre-order\n        - public\n    ProductIntegrationFeatures:\n      type: object\n      properties:\n        access_code:\n          type: boolean\n          description: |\n            Indicates whether or not this product supports resource transitions to\n            manifold by access_code.\n          nullable: false\n        sso:\n          type: boolean\n          description: |\n            Represents whether or not this product supports Single\n            Sign On\n          nullable: false\n        plan_change:\n          type: boolean\n          description: |\n            Represents whether or not this product supports changing\n            the plan of a resource.\n          nullable: false\n        region:\n          type: string\n          description: |\n            Describes how the region for a resource is specified, if\n            unspecified, then regions have no impact on this\n            resource.\n          enum:\n            - user-specified\n            - unspecified\n        credential:\n          type: string\n          description: |\n            Describes the credential type that is supported by this product.\n\n            * `none`: The product does not support providing any credentials\n            * `single`: Only one credential is supported at the same time.\n            * `multiple`: Multiple credentials are supported at the same time.\n            * `unknown`: The credential type is unknown.\n          nullable: false\n          default: multiple\n          enum:\n            - none\n            - single\n            - multiple\n            - unknown\n      x-go-type:\n        type: ProductIntegrationFeatures\n        import:\n          package: github.com/manifoldco/catalog/client/primitives/shims\n          alias: cShims\n    ProductBody:\n      required:\n        - billing\n        - documentation_url\n        - feature_types\n        - images\n        - integration\n        - label\n        - listing\n        - logo_url\n        - name\n        - provider_id\n        - state\n        - support_email\n        - tagline\n        - terms\n        - value_props\n      type: object\n      properties:\n        provider_id:\n          $ref: \"#/components/schemas/ID\"\n        label:\n          $ref: \"#/components/schemas/Label\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        state:\n          $ref: \"#/components/schemas/ProductState\"\n        listing:\n          $ref: \"#/components/schemas/ProductListing\"\n        logo_url:\n          $ref: \"#/components/schemas/LogoURL\"\n        tagline:\n          maxLength: 140\n          type: string\n          description: |\n            140 character sentence positioning the product.\n          nullable: false\n        value_props:\n          maxItems: 8\n          type: array\n          description: A list of value propositions of the product.\n          nullable: false\n          items:\n            $ref: \"#/components/schemas/ValueProp\"\n        setup_steps:\n          maxItems: 8\n          type: array\n          description: A list of getting started steps for the product\n          nullable: true\n          items:\n            maxLength: 200\n            minLength: 3\n            type: string\n            description: A markdown string describing a step in how to setup a product\n        images:\n          maxItems: 8\n          type: array\n          nullable: false\n          items:\n            $ref: \"#/components/schemas/ProductImageURL\"\n        support_email:\n          type: string\n          format: email\n          nullable: false\n        documentation_url:\n          type: string\n          format: url\n        terms:\n          required:\n            - provided\n          type: object\n          properties:\n            url:\n              type: string\n              format: url\n              nullable: true\n            provided:\n              type: boolean\n              nullable: false\n          description: |\n            URL to this Product's Terms of Service. If provided is true, then\n            a url must be set. Otherwise, provided is false.\n        feature_types:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FeatureType\"\n        billing:\n          required:\n            - currency\n            - type\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - monthly-prorated\n                - monthly-anniversary\n                - annual-anniversary\n            currency:\n              type: string\n              enum:\n                - usd\n        integration:\n          required:\n            - base_url\n            - features\n            - provisioning\n            - version\n          type: object\n          properties:\n            provisioning:\n              $ref: \"#/components/schemas/ProductProvisioning\"\n            base_url:\n              type: string\n              format: url\n            sso_url:\n              type: string\n              format: url\n              nullable: true\n            version:\n              type: string\n              enum:\n                - v1\n            features:\n              $ref: \"#/components/schemas/ProductIntegrationFeatures\"\n        tags:\n          $ref: \"#/components/schemas/ProductTags\"\n    Product:\n      required:\n        - body\n        - id\n        - type\n        - version\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        version:\n          type: integer\n        type:\n          type: string\n          enum:\n            - product\n        body:\n          $ref: \"#/components/schemas/ProductBody\"\n    CreateProduct:\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          $ref: \"#/components/schemas/ProductBody\"\n    PlanResizeList:\n      type: array\n      description: |\n        Array of Plan IDs that this Plan can be resized to, if null all will be assumed\n      nullable: true\n      items:\n        $ref: \"#/components/schemas/ID\"\n      x-nullable: true\n    PlanBody:\n      required:\n        - cost\n        - features\n        - label\n        - name\n        - product_id\n        - provider_id\n        - regions\n        - state\n      type: object\n      properties:\n        provider_id:\n          $ref: \"#/components/schemas/ID\"\n        product_id:\n          $ref: \"#/components/schemas/ID\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        label:\n          $ref: \"#/components/schemas/Label\"\n        state:\n          $ref: \"#/components/schemas/PlanState\"\n        resizable_to:\n          $ref: \"#/components/schemas/PlanResizeList\"\n        regions:\n          type: array\n          description: Array of Region IDs\n          items:\n            $ref: \"#/components/schemas/ID\"\n        features:\n          maxItems: 20\n          type: array\n          description: Array of Feature Values\n          items:\n            $ref: \"#/components/schemas/FeatureValue\"\n        trial_days:\n          minimum: 0\n          type: integer\n          description: |\n            The number of days a user gets as a free trial when subscribing to\n            this plan. Trials are valid only once per product; changing plans\n            or adding an additional subscription will not start a new trial.\n        cost:\n          minimum: 0\n          type: integer\n          description: |\n            Dollar value in cents.\n    PlanState:\n      type: string\n      enum:\n        - hidden\n        - available\n        - grandfathered\n        - unlisted\n    ExpandedPlanBody:\n      allOf:\n        - $ref: \"#/components/schemas/PlanBody\"\n        - required:\n            - expanded_features\n            - free\n          type: object\n          properties:\n            expanded_features:\n              type: array\n              description: |\n                An array of feature definitions for the plan, as defined on the Product.\n              items:\n                $ref: \"#/components/schemas/ExpandedFeature\"\n            free:\n              type: boolean\n              description: |\n                A boolean flag that indicates if a plan is free or not based on it's cost and features.\n            defaultCost:\n              type: integer\n              description: |\n                Plan cost using its default features plus base cost.\n            customizable:\n              type: boolean\n              description: |\n                A boolean flag that indicates if a plan has customizable features.\n    ExpandedFeature:\n      allOf:\n        - $ref: \"#/components/schemas/FeatureType\"\n        - required:\n            - value\n            - value_string\n          type: object\n          properties:\n            value_string:\n              type: string\n              description: |\n                The string value set for the feature on the plan, this should only be used if the value property is null.\n            value:\n              $ref: \"#/components/schemas/FeatureValueDetails\"\n    Plan:\n      required:\n        - body\n        - id\n        - type\n        - version\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        version:\n          type: integer\n        type:\n          type: string\n          enum:\n            - plan\n        body:\n          $ref: \"#/components/schemas/PlanBody\"\n    ExpandedPlan:\n      required:\n        - body\n        - id\n        - type\n        - version\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        version:\n          type: integer\n        type:\n          type: string\n          enum:\n            - plan\n        body:\n          $ref: \"#/components/schemas/ExpandedPlanBody\"\n    CreatePlan:\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          $ref: \"#/components/schemas/PlanBody\"\n    Error:\n      required:\n        - message\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: The error type\n        message:\n          type: array\n          description: Explanation of the errors\n          items:\n            type: string\n      description: Unexpected error\n      x-go-type:\n        type: Error\n        import:\n          package: github.com/manifoldco/go-manifold\n          alias: manifold\n    PriceFormula:\n      type: string\n      description: |\n        Describes how a feature cost should be calculated. An empty\n        string defaults to the normal price calculation using the value cost.\n        Formula uses Reverse Polish notation for statements. It supports\n        addition, subtraction and multiplication operations. Operations must be\n        grouped with parenthesis.\n        Number literals can be used for formulas. Eg: \"(- feature-a#cost 500)\"\n        will remove 5 dollars from the cost of feature a.\n        Multiplication operation supports either a cost multiplied by a\n        factor or a number multiplied by a factor.\n        In a plan formula the following keywords are available:\n          - `plan#base_cost` is the base cost of a plan in cents\n          - `plan#partial_cost` is the base cost plus its feature costs calculated\n            so far. Feature formulas are calculated in the order they are defined,\n            so features can refer to another feature values or the partial_cost of\n            the plan.\n          - `this-feature-label#multiply_factor` is the multiply_factor of this\n            feature as a float number.\n          - `another-feature-label#cost` is the cost of a feature matching the label\n            in cents.\n          - `another-feature-label#number` is the numeric value of a number feature\n        In a feature formula, plan base cost and total cost cannot be used\n      nullable: false\n      x-nullable: false\n    ExpandedProduct:\n      required:\n        - body\n        - id\n        - provider\n        - type\n        - version\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ID\"\n        version:\n          type: integer\n        type:\n          type: string\n          enum:\n            - product\n        body:\n          $ref: \"#/components/schemas/ProductBody\"\n        plans:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ExpandedPlan\"\n        provider:\n          $ref: \"#/components/schemas/Provider\"\n  parameters:\n    LabelFilter:\n      name: label\n      in: query\n      description: |\n        Filter results to only include those that have this label.\n      schema:\n        pattern: ^[a-z0-9][a-z0-9\\-\\_]{1,128}$\n        type: string\n        format: label\n  securitySchemes:\n    tokenRequired:\n      type: apiKey\n      name: Authorization\n      in: header\n    xInternalAuthRequired:\n      type: apiKey\n      name: X-Internal-Auth\n      in: header\n      x-manifold-audience: internal\n    anonymous:\n      type: apiKey\n      name: Manifold-Anonymous\n      in: header\n",
			"canonicalURL": "/github.com/sergiyhii/openapi-typescript@2a1d516829b016650985234dbc63e17b4a1abdaa/-/blob/tests/v3/specs/manifold.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sergiyhii/openapi-typescript/blob/2a1d516829b016650985234dbc63e17b4a1abdaa/tests/v3/specs/manifold.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}