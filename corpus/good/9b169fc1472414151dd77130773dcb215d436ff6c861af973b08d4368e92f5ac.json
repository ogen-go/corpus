{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "repo_dependabot.yaml",
			"size": 0,
			"path": "providers/src/github/v0.2.0/services/repo_dependabot.yaml",
			"byteSize": 17925,
			"content": "paths:\n  /repos/{owner}/{repo}/dependabot/secrets:\n    get:\n      summary: List repository secrets\n      description: Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.\n      tags:\n        - dependabot\n      operationId: dependabot/list-repo-secrets\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/dependabot#list-repository-secrets\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - total_count\n                  - secrets\n                properties:\n                  total_count:\n                    type: integer\n                  secrets:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/dependabot-secret'\n              examples:\n                default:\n                  $ref: '#/components/examples/dependabot-secret-paginated'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: dependabot\n        subcategory: secrets\n  /repos/{owner}/{repo}/dependabot/secrets/public-key:\n    get:\n      summary: Get a repository public key\n      description: Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.\n      tags:\n        - dependabot\n      operationId: dependabot/get-repo-public-key\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/dependabot#get-a-repository-public-key\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dependabot-public-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/dependabot-public-key'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: dependabot\n        subcategory: secrets\n  /repos/{owner}/{repo}/dependabot/secrets/{secret_name}:\n    get:\n      summary: Get a repository secret\n      description: Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.\n      tags:\n        - dependabot\n      operationId: dependabot/get-repo-secret\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/dependabot#get-a-repository-secret\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/secret-name'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dependabot-secret'\n              examples:\n                default:\n                  $ref: '#/components/examples/dependabot-secret'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: dependabot\n        subcategory: secrets\n    put:\n      summary: Create or update a repository secret\n      description: |-\n        Creates or updates a repository secret with an encrypted value. Encrypt your secret using\n        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\n        token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository\n        permission to use this endpoint.\n\n        #### Example encrypting a secret using Node.js\n\n        Encrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n        ```\n        const sodium = require('tweetsodium');\n\n        const key = \"base64-encoded-public-key\";\n        const value = \"plain-text-secret\";\n\n        // Convert the message and key to Uint8Array's (Buffer implements that interface)\n        const messageBytes = Buffer.from(value);\n        const keyBytes = Buffer.from(key, 'base64');\n\n        // Encrypt using LibSodium.\n        const encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n        // Base64 the encrypted secret\n        const encrypted = Buffer.from(encryptedBytes).toString('base64');\n\n        console.log(encrypted);\n        ```\n\n\n        #### Example encrypting a secret using Python\n\n        Encrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.\n\n        ```\n        from base64 import b64encode\n        from nacl import encoding, public\n\n        def encrypt(public_key: str, secret_value: str) -\u003e str:\n          \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n          public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n          sealed_box = public.SealedBox(public_key)\n          encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n          return b64encode(encrypted).decode(\"utf-8\")\n        ```\n\n        #### Example encrypting a secret using C#\n\n        Encrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n        ```\n        var secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\n        var publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\n        var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\n        Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n        ```\n\n        #### Example encrypting a secret using Ruby\n\n        Encrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n        ```ruby\n        require \"rbnacl\"\n        require \"base64\"\n\n        key = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\n        public_key = RbNaCl::PublicKey.new(key)\n\n        box = RbNaCl::Boxes::Sealed.from_public_key(public_key)\n        encrypted_secret = box.encrypt(\"my_secret\")\n\n        # Print the base64 encoded secret\n        puts Base64.strict_encode64(encrypted_secret)\n        ```\n      tags:\n        - dependabot\n      operationId: dependabot/create-or-update-repo-secret\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/dependabot#create-or-update-a-repository-secret\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/secret-name'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                encrypted_value:\n                  type: string\n                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/reference/dependabot#get-a-repository-public-key) endpoint.\n                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$\n                key_id:\n                  type: string\n                  description: ID of the key you used to encrypt the secret.\n            example:\n              encrypted_value: c2VjcmV0\n              key_id: '012345678912345678'\n      responses:\n        '201':\n          description: Response when creating a secret\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n                additionalProperties: false\n        '204':\n          description: Response when updating a secret\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: dependabot\n        subcategory: secrets\n    delete:\n      summary: Delete a repository secret\n      description: Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.\n      tags:\n        - dependabot\n      operationId: dependabot/delete-repo-secret\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/dependabot#delete-a-repository-secret\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/secret-name'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: dependabot\n        subcategory: secrets\ncomponents:\n  schemas:\n    dependabot-secret:\n      title: Dependabot Secret\n      description: Set secrets for Dependabot.\n      type: object\n      properties:\n        name:\n          description: The name of the secret.\n          example: MY_ARTIFACTORY_PASSWORD\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      required:\n        - name\n        - created_at\n        - updated_at\n    dependabot-public-key:\n      title: DependabotPublicKey\n      description: The public key used for setting Dependabot Secrets.\n      type: object\n      properties:\n        key_id:\n          description: The identifier for the key.\n          type: string\n          example: '1234567'\n        key:\n          description: The Base64 encoded public key.\n          type: string\n          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=\n      required:\n        - key_id\n        - key\n  parameters:\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    secret-name:\n      name: secret_name\n      description: secret_name parameter\n      in: path\n      required: true\n      schema:\n        type: string\n  responses: {}\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    dependabot-secret-paginated:\n      value:\n        total_count: 2\n        secrets:\n          - name: AZURE_DEVOPS_PAT\n            created_at: '2019-08-10T14:59:22Z'\n            updated_at: '2020-01-10T14:59:22Z'\n          - name: MY_ARTIFACTORY_PASSWORD\n            created_at: '2020-01-10T10:59:22Z'\n            updated_at: '2020-01-11T11:59:22Z'\n    dependabot-public-key:\n      value:\n        key_id: '012345678912345678'\n        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\n    dependabot-secret:\n      value:\n        name: MY_ARTIFACTORY_PASSWORD\n        created_at: '2019-08-10T14:59:22Z'\n        updated_at: '2020-01-10T14:59:22Z'\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    repos_dependabot_secrets:\n      id: github.repo_dependabot.repos_dependabot_secrets\n      name: repos_dependabot_secrets\n      title: Repos_dependabot_secrets\n      methods:\n        list_repo_secrets:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_repo_secret:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1{secret_name}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_or_update_repo_secret:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1{secret_name}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        delete_repo_secret:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1{secret_name}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos_dependabot_secrets/methods/get_repo_secret'\n          - $ref: '#/components/x-stackQL-resources/repos_dependabot_secrets/methods/list_repo_secrets'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos_dependabot_secrets/methods/create_or_update_repo_secret'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos_dependabot_secrets/methods/delete_repo_secret'\n    repos_dependabot_secrets_public_key:\n      id: github.repo_dependabot.repos_dependabot_secrets_public_key\n      name: repos_dependabot_secrets_public_key\n      title: Repos_dependabot_secrets_public_key\n      methods:\n        get_repo_public_key:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1public-key/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos_dependabot_secrets_public_key/methods/get_repo_public_key'\n        insert: []\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - repo_dependabot\n  description: Endpoints to manage Dependabot.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.2.0/services/repo_dependabot.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.2.0/services/repo_dependabot.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}