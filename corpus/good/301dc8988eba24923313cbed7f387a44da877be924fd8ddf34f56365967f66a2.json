{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openl-tablets/openl-tablets"
		},
		"file": {
			"name": "app020.json",
			"size": 0,
			"path": "STUDIO/org.openl.rules.spring.openapi/test-resources/functionality/app020.json",
			"byteSize": 23074,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"OpenL Tablets WebStudio API\",\n    \"version\": \"*\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"post\": {\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"tags\": [\n          \"pet\"\n        ],\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Pet object that needs to be added to the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"summary\": \"Add a new pet to the store\"\n      },\n      \"put\": {\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"tags\": [\n          \"pet\"\n        ],\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Pet object that needs to be added to the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"summary\": \"Update an existing pet\"\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"Status values that need to be considered for filter\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"default\": \"available\",\n                \"enum\": [\n                  \"available\",\n                  \"pending\",\n                  \"sold\"\n                ],\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"tags\": [\n          \"pet\"\n        ],\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"summary\": \"Finds Pets by status\"\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"Tags to filter by\",\n            \"in\": \"query\",\n            \"name\": \"tags\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"tags\": [\n          \"pet\"\n        ],\n        \"deprecated\": true,\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"summary\": \"Finds Pets by tags\"\n      }\n    },\n    \"/pet/{petId}\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Updated name of the pet\"\n                  },\n                  \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"Updated status of the pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      },\n      \"delete\": {\n        \"parameters\": [\n          {\n            \"description\": \"Pet id to delete\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"api_key\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"tags\": [\n          \"pet\"\n        ],\n        \"operationId\": \"deletePet\",\n        \"summary\": \"Deletes a pet\"\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet to return\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"tags\": [\n          \"pet\"\n        ],\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"summary\": \"Find pet by ID\"\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet to update\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          }\n        },\n        \"tags\": [\n          \"pet\"\n        ],\n        \"operationId\": \"uploadFile\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"format\": \"binary\",\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"summary\": \"uploads an image\"\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          }\n        },\n        \"tags\": [\n          \"store\"\n        ],\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"summary\": \"Returns pet inventories by status\"\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid Order\"\n          }\n        },\n        \"tags\": [\n          \"store\"\n        ],\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          },\n          \"description\": \"order placed for purchasing the pet\",\n          \"required\": true\n        },\n        \"summary\": \"Place an order for a pet\"\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"delete\": {\n        \"parameters\": [\n          {\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"in\": \"path\",\n            \"name\": \"orderId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"minimum\": 1,\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"tags\": [\n          \"store\"\n        ],\n        \"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"summary\": \"Delete purchase order by ID\"\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"in\": \"path\",\n            \"name\": \"orderId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"maximum\": 10,\n              \"minimum\": 1,\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"tags\": [\n          \"store\"\n        ],\n        \"description\": \"For valid response try integer IDs with value \u003e= 1 and \u003c= 10. Other values will generated exceptions\",\n        \"operationId\": \"getOrderById\",\n        \"summary\": \"Find purchase order by ID\"\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Created user object\",\n          \"required\": true\n        },\n        \"summary\": \"Create user\"\n      }\n    },\n    \"/user/createWithArray\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"operationId\": \"createUsersWithArrayInput\",\n        \"requestBody\": {\n          \"description\": \"List of user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"summary\": \"Creates list of users with given input array\"\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"description\": \"List of user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"summary\": \"Creates list of users with given input array\"\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"The user name for login\",\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The password for login in clear text\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"format\": \"date-time\",\n                  \"type\": \"string\"\n                }\n              },\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"format\": \"int32\",\n                  \"type\": \"integer\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"operationId\": \"loginUser\",\n        \"summary\": \"Logs user into the system\"\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"operationId\": \"logoutUser\",\n        \"summary\": \"Logs out current logged in user session\"\n      }\n    },\n    \"/user/{username}\": {\n      \"delete\": {\n        \"parameters\": [\n          {\n            \"description\": \"The name that needs to be deleted\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"summary\": \"Delete user\"\n      },\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"operationId\": \"getUserByName\",\n        \"summary\": \"Get user by user name\"\n      },\n      \"put\": {\n        \"parameters\": [\n          {\n            \"description\": \"name that need to be updated\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid user supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"tags\": [\n          \"user\"\n        ],\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Updated user object\",\n          \"required\": true\n        },\n        \"summary\": \"Updated user\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ApiResponse\": {\n        \"properties\": {\n          \"code\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Category\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Order\": {\n        \"properties\": {\n          \"complete\": {\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"petId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"quantity\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"shipDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"Order Status\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Pet\": {\n        \"properties\": {\n          \"tags\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"type\": \"array\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"example\": \"doggie\",\n            \"type\": \"string\"\n          },\n          \"photoUrls\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"status\": {\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Tag\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"User\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"Everything about your Pets\",\n      \"name\": \"pet\"\n    },\n    {\n      \"description\": \"Access to Petstore orders\",\n      \"name\": \"store\"\n    },\n    {\n      \"description\": \"Operations about user\",\n      \"name\": \"user\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/openl-tablets/openl-tablets@ced3429fe2ac07371d46d337c2e43477c07cc096/-/blob/STUDIO/org.openl.rules.spring.openapi/test-resources/functionality/app020.json",
			"externalURLs": [
				{
					"url": "https://github.com/openl-tablets/openl-tablets/blob/ced3429fe2ac07371d46d337c2e43477c07cc096/STUDIO/org.openl.rules.spring.openapi/test-resources/functionality/app020.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}