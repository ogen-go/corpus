{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "cord_genomic_entity.yml",
			"size": 0,
			"path": "cord/cord_genomic_entity.yml",
			"byteSize": 16609,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: help@biothinigs.io\n    name: JIWEN XIN\n    x-id: https://github.com/kevinxin90\n    x-role: responsible developer\n  description: Documentation of the CORD Query web services. Learn more about [CORD](http://biothings.ncats.io/cord_genomic_entity)\n  termsOfService: http://mygenomicentity.info/terms/\n  title: CORD Genomic Entity API\n  version: '1.0'\n  x-translator:\n    component: KP\n    team:\n      - Service Provider\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/cord_genomic_entity/\n- description: Production server\n  url: http://biothings.ncats.io/cord_genomic_entity/\ntags:\n- name: genomicentity\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\npaths:\n  \"/genomicentity\":\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                ids:\n                  description: multiple PROTEIN ONTOLOGY genomicentityids seperated\n                    by comma, e.g., \"ids=387,388\" Note that currently we only take\n                    the input ids up to 1000 maximum, the rest will be omitted.\n                  type: string\n              required:\n              - ids\n      responses:\n        '200':\n          description: A query response object with \"hits\" property\n      summary: For a list of genomicentity ids, return the matching genomicentity\n        objects\n      tags:\n      - annotation\n  \"/genomicentity/{genomicentityid}\":\n    get:\n      parameters:\n      - description: Sequeence Onotlogy ID, e.g. SO:0001537\n        example: SO:0001537\n        in: path\n        name: genomicentityid\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      responses:\n        '200':\n          description: A matching genomicentity object\n      summary: Retrieve genomicentity annotation object based on pr genomicentity\n        id, support JSONP and CORS as well.\n      tags:\n      - annotation\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      responses:\n        '200':\n          description: CORD API metadata object\n      summary: Get metadata about the data available from CORD API.\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - description: Pass a search term to filter the available fields, e.g. \"search=associated_with\".\n        in: query\n        name: search\n        schema:\n          type: string\n      - description: Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".\n        in: query\n        name: prefix\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      responses:\n        '200':\n          description: MyProtein.info metadata fields object\n      summary: Get metadata about the data fields available from MyProtein.info.\n  \"/query\":\n    get:\n      parameters:\n      - description: Query string. Examples \"PMC6836328\", \"31045\", \"PR:000001978\".\n        example: so:SO:0001537\n        in: query\n        name: q\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/size\"\n        name: size\n      - \"$ref\": \"#/components/parameters/sort\"\n        name: sort\n      - description: a single field or comma-separated fields to return facets, for\n          example, \"facets=pr\"\n        in: query\n        name: facets\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/QueryResult\"\n          description: A query response object with \"hits\" property\n      summary: Make genomicentity query and return matching genomicentity list. Support\n        JSONP and CORS as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                q:\n                  description: multiple query terms seperated by comma (also support\n                    \"+\" or white space), but no wildcard, e.g., \"q=1017,1018\" or \"q=CDK2+BTK\"\n                  type: string\n                scopes:\n                  description: 'Specify one or more fields (separated by comma) as\n                    the search \"scopes\", e.g., \"scopes=entrezgenomicentity\", \"scopes=entrezgenomicentity,ensemblgenomicentity\".\n                    The available \"fields\" can be passed to \"scopes\" parameter are\n                    listed [here](http://mygenomicentity.info/doc/query_service.html#available-fields).\n                    Default: \"scopes=entrezgenomicentity,ensemblgenomicentity,retired\"\n                    (either Entrez or Ensembl genomicentity ids).'\n                  type: string\n              required:\n              - q\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n          description: Query response objects with \"hits\" property\n          x-bte-response-mapping:\n            \"$ref\": \"#/components/x-bte-response-mapping/query-post\"\n      summary: Make genomicentity batch query and return matching genomicentity hits\n      tags:\n      - query\n      x-bte-kgs-operations:\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2gene\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2protein\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2cell\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2cc\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2ma\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2bp\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2genomicentity\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2chemical\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2disease\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/genomicentity2anatomy\"\ncomponents:\n  parameters:\n    callback:\n      description: you can pass a \"callback\" parameter to make a JSONP call.\n      in: query\n      name: callback\n      schema:\n        type: string\n    dotfield:\n      description: 'control the format of the returned fields when passed \"fields\"\n        parameter contains dot notation, e.g. \"fields=assoicated_with.pmd\". If \"true\"\n        or \"1\", the returned data object contains a single \"associated_with\" field,\n        otherwise (\"false\" or \"0\"), a single \"refseq\" field with a sub-field of \"rna\".\n        Default: true.'\n      in: query\n      name: dotfield\n      schema:\n        type: boolean\n    email:\n      description: If you are regular users of our services, we encourage you to provide\n        us an email, so that we can better track the usage or follow up with you.\n      in: query\n      name: email\n      schema:\n        type: string\n    fields:\n      description: a comma-separated fields to limit the fields returned from the\n        matching genomicentity hits.\n      in: query\n      name: fields\n      schema:\n        type: string\n    from:\n      description: 'the number of matching genomicentity hits to skip, starting from\n        0. Combining with \"size\" parameter, this can be useful for paging. Default:\n        0.'\n      in: query\n      name: from\n      schema:\n        type: integer\n    size:\n      description: 'the maximum number of matching genomicentity hits to return (with\n        a cap of 1000 at the moment). Default: 10.'\n      in: query\n      name: size\n      schema:\n        type: integer\n    sort:\n      description: 'the comma-separated fields to sort on. Prefix with \"-\" for descending\n        order, otherwise in ascending order. Default: sort by matching scores in decending\n        order.'\n      in: query\n      name: sort\n      schema:\n        type: string\n  schemas:\n    QueryPOSTResult:\n      items:\n        allOf:\n        - properties:\n            _score:\n              format: float\n              type: number\n            query:\n              type: string\n          type: object\n      type: array\n    QueryResult:\n      properties:\n        max_score:\n          format: float\n          type: number\n        took:\n          type: integer\n        total:\n          type: integer\n      type: object\n    int64_or_array:\n      oneOf:\n      - items:\n          format: int64\n          type: integer\n        type: array\n      - format: int64\n        type: integer\n    string_or_array:\n      oneOf:\n      - items:\n          type: string\n        type: array\n      - type: string\n  x-bte-kgs-operations:\n    genomicentity2ma:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: GO\n        semantic: MolecularActivity\n      - id: MOP\n        semantic: MolecularActivity\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2ma\"\n    genomicentity2cc:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: GO\n        semantic: CellularComponent\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2cc\"\n    genomicentity2bp:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: GO\n        semantic: BiologicalProcess\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2bp\"\n    genomicentity2anatomy:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: UBERON\n        semantic: AnatomicalEntity\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2anatomy\"\n    genomicentity2gene:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: HGNC\n        semantic: Gene\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2gene\"\n    genomicentity2genomicentity:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: SO\n        semantic: GenomicEntity\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2genomicentity\"\n    genomicentity2protein:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: PR\n        semantic: Protein\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2protein\"\n    genomicentity2cell:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: CL\n        semantic: Cell\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2cell\"\n    genomicentity2disease:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: DOID\n        semantic: Disease\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2disease\"\n    genomicentity2chemical:\n    - inputSeparator: \",\"\n      inputs:\n      - id: SO\n        semantic: GenomicEntity\n      method: post\n      predicate: related_to\n      source: Translator Text Mining Provider\n      outputs:\n      - id: CHEBI\n        semantic: ChemicalSubstance\n      parameters:\n        fields: associated_with\n      path: \"/query\"\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: so\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/genomicentity2chemical\"\n  x-bte-response-mapping:\n    genomicentity2ma:\n      pmc: associated_with.pmc\n      MOP: associated_with.mop\n      GO: associated_with.go\n    genomicentity2cc:\n      pmc: associated_with.pmc\n      GO: associated_with.go\n    genomicentity2bp:\n      pmc: associated_with.pmc\n      GO: associated_with.go\n    genomicentity2anatomy:\n      pmc: associated_with.pmc\n      UBERON: associated_with.uberon\n    genomicentity2gene:\n      pmc: associated_with.pmc\n      HGNC: associated_with.hgnc\n    genomicentity2genomicentity:\n      pmc: associated_with.pmc\n      SO: associated_with.so\n    genomicentity2protein:\n      pmc: associated_with.pmc\n      PR: associated_with.pr\n    genomicentity2cell:\n      pmc: associated_with.pmc\n      CL: associated_with.cl\n    genomicentity2disease:\n      pmc: associated_with.pmc\n      DOID: associated_with.doid\n    genomicentity2chemical:\n      pmc: associated_with.pmc\n      CHEBI: associated_with.chebi\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/cord/cord_genomic_entity.yml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/cord/cord_genomic_entity.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}