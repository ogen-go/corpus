{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "ProductDirectory.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/ProductDirectory.yaml",
			"byteSize": 22722,
			"content": "openapi: 3.0.1\ninfo:\n  title: Product Directory\n  description: This service domain maintains a comprehensive directory of the bank's products and services. It can be referenced to obtain product details used to support activities including product selection, sales and marketing, on-boarding, servicing and product fulfillment.\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/ProductDirectory/10.0.0\npaths:\n  /ProductDirectory/Register:\n    post:\n      tags:\n      - CR - ProductDirectoryEntry\n      summary: InCR Register a new product or service in the catalog\n      description: InCR Register a new product or service in the catalog\n      operationId: Register\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Update:\n    put:\n      tags:\n      - CR - ProductDirectoryEntry\n      summary: UpCR Update details of a product or service in the catalog\n      description: UpCR Update details of a product or service in the catalog\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Request:\n    put:\n      tags:\n      - CR - ProductDirectoryEntry\n      summary: RqCR Request that an existing entry is updated or revised\n      description: RqCR Request that an existing entry is updated or revised\n      operationId: Request\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Retrieve:\n    get:\n      tags:\n      - CR - ProductDirectoryEntry\n      summary: ReCR Retrieve product or service details from the catalog\n      description: ReCR Retrieve product or service details from the catalog\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Operations/Register:\n    post:\n      tags:\n      - BQ - Operations\n      summary: InBQ Register a new product or service operations details in the catalog\n      description: InBQ Register a new product or service operations details in the catalog\n      operationId: RegisterOperations\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Operations/{operationsId}/Update:\n    put:\n      tags:\n      - BQ - Operations\n      summary: UpBQ Update details of a product or service operations details in the catalog\n      description: UpBQ Update details of a product or service operations details in the catalog\n      operationId: UpdateOperations\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/OperationsID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Operations/{operationsId}/Retrieve:\n    get:\n      tags:\n      - BQ - Operations\n      summary: ReBQ Retrieve product or service operations details from the catalog\n      description: ReBQ Retrieve product or service operations details from the catalog\n      operationId: RetrieveOperations\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/OperationsID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/SalesandMarketing/Register:\n    post:\n      tags:\n      - BQ - SalesandMarketing\n      summary: InBQ Register a new product or service sales and marketing details in the catalog\n      description: InBQ Register a new product or service sales and marketing details in the catalog\n      operationId: RegisterSalesandMarketing\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/SalesandMarketing/{salesandmarketingId}/Update:\n    put:\n      tags:\n      - BQ - SalesandMarketing\n      summary: UpBQ Update details of a product or service sales and marketing details in the catalog\n      description: UpBQ Update details of a product or service sales and marketing details in the catalog\n      operationId: UpdateSalesandMarketing\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/SalesandMarketingID'\n      requestBody:\n        $ref: '#/components/requestBodies/SalesandMarketing'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalesandMarketing'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/SalesandMarketing/{salesandmarketingId}/Retrieve:\n    get:\n      tags:\n      - BQ - SalesandMarketing\n      summary: ReBQ Retrieve product or service sales and marketing details from the catalog\n      description: ReBQ Retrieve product or service sales and marketing details from the catalog\n      operationId: RetrieveSalesandMarketing\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/SalesandMarketingID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Servicing/Register:\n    post:\n      tags:\n      - BQ - Servicing\n      summary: InBQ Register a new product or service servicing details in the catalog\n      description: InBQ Register a new product or service servicing details in the catalog\n      operationId: RegisterServicing\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Servicing/{servicingId}/Update:\n    put:\n      tags:\n      - BQ - Servicing\n      summary: UpBQ Update details of a product or service servicing details in the catalog\n      description: UpBQ Update details of a product or service servicing details in the catalog\n      operationId: UpdateServicing\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/ServicingID'\n      requestBody:\n        $ref: '#/components/requestBodies/Servicing'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Servicing'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Servicing/{servicingId}/Retrieve:\n    get:\n      tags:\n      - BQ - Servicing\n      summary: ReBQ Retrieve product or service servicing details from the catalog\n      description: ReBQ Retrieve product or service servicing details from the catalog\n      operationId: RetrieveServicing\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/ServicingID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Production/Register:\n    post:\n      tags:\n      - BQ - Production\n      summary: InBQ Register a new product or service production details in the catalog\n      description: InBQ Register a new product or service production details in the catalog\n      operationId: RegisterProduction\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      requestBody:\n        $ref: '#/components/requestBodies/ProductDirectoryEntry'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: true\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Production/{productionId}/Update:\n    put:\n      tags:\n      - BQ - Production\n      summary: UpBQ Update details of a product or service production details in the catalog\n      description: UpBQ Update details of a product or service production details in the catalog\n      operationId: UpdateProduction\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/ProductionID'\n      requestBody:\n        $ref: '#/components/requestBodies/Production'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Production'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /ProductDirectory/{productdirectoryId}/Production/{productionId}/Retrieve:\n    get:\n      tags:\n      - BQ - Production\n      summary: ReBQ Retrieve product or service production details from the catalog\n      description: ReBQ Retrieve product or service production details from the catalog\n      operationId: RetrieveProduction\n      parameters:\n      - $ref: '#/components/parameters/ProductDirectoryID'\n      - $ref: '#/components/parameters/ProductionID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductDirectoryEntry'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    ProductDirectoryEntry:\n      type: object\n      properties:\n        ProductVersion:\n          type: string\n        ProductDirectoryEntryConfiguration:\n          type: string\n    SalesandMarketing:\n      type: object\n      properties:\n        ProductandServiceSalesMaterial:\n          type: string\n        ProductandServicesFeaturesAndOptions:\n          type: string\n        ProductandServicePricingTable:\n          type: string\n        ProductandServiceFees/PenaltiesTable:\n          type: string\n        ProductSuitabilityGuide:\n          type: string\n        ProductandServiceEligibilityType:\n          type: string\n        ProductandServiceEligibilityDescription:\n          type: string\n        ProductandServiceOfferProcessingRequirements:\n          type: string\n    Servicing:\n      type: object\n      properties:\n        ProductandServiceFeature:\n          type: string\n        ProductandServiceFeatureGuideline:\n          type: string\n        ProductandServiceFeatureProblemDiagnosis:\n          type: string\n        ProductandServiceFeatureProblemResolution:\n          type: string\n    Operations:\n      type: object\n      properties:\n        ProductandServiceOperatingSchedule:\n          type: string\n        ProductandServiceConfigurationParameterType:\n          type: string\n        ProductandServiceConfigurationParameterDescription:\n          type: string\n        ProductandServiceConfigurationParameterSetting:\n          type: string\n    Production:\n      type: object\n      properties:\n        ProductandServiceLocationAvailability:\n          type: string\n        ProductandServiceTimeAvailability:\n          type: string\n        ProductandServiceAccessAvailability:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n  parameters:\n    ProductDirectoryID:\n      name: productdirectoryId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    SalesandMarketingID:\n      name: salesandmarketingId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    ServicingID:\n      name: servicingId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    OperationsID:\n      name: operationsId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    ProductionID:\n      name: productionId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    ProductDirectoryEntry:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProductDirectoryEntry'\n    SalesandMarketing:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SalesandMarketing'\n    Servicing:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Servicing'\n    Production:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Production'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/ProductDirectory.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/ProductDirectory.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}