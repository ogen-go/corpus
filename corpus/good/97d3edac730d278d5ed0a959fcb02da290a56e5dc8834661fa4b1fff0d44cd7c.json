{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cs91chris/flaskel"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "tests/integ/data/swagger.yaml",
			"byteSize": 14323,
			"content": "openapi: 3.0.1\ninfo:\n  title: API DOCS\n  version: '0.0.0'\n  description: HTTP APIs documentation\nservers:\n  - url: '{host}{context}'\n    variables:\n      context:\n        default: /\n      host:\n        default: 'http://api.flask.local:5000'\n        enum:\n          - 'http://api.flask.local:5000'\npaths:\n  '/token/access':\n    post:\n      summary: Access token\n      tags:\n        - Auth\n      parameters:\n        - $ref: '#/components/parameters/expires_access'\n        - $ref: '#/components/parameters/expires_refresh'\n        - $ref: '#/components/parameters/never_expire'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostAccessToken'\n      responses:\n        '200':\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/rateLimitLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/rateLimitRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/rateLimitReset'\n            X-RateLimit-Retry-After:\n              $ref: '#/components/headers/rateLimitRetryAfter'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessToken'\n          description: login eseguito con successo\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '422':\n          $ref: '#/components/responses/422'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n  '/token/refresh':\n    post:\n      summary: Refresh token\n      tags:\n        - Auth\n      security:\n        - token: [ ]\n      parameters:\n        - $ref: '#/components/parameters/expires_access'\n      responses:\n        '200':\n          description: refresh eseguito con successo\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefreshToken'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n  '/token/revoke':\n    post:\n      summary: Revoke token\n      tags:\n        - Auth\n      security:\n        - token: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostRevokeToken'\n      responses:\n        '204':\n          description: logout eseguito con successo\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/rateLimitLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/rateLimitRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/rateLimitReset'\n            X-RateLimit-Retry-After:\n              $ref: '#/components/headers/rateLimitRetryAfter'\n        '400':\n          $ref: '#/components/responses/400'\n        '422':\n          $ref: '#/components/responses/422'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n  /healthcheck:\n    get:\n      security:\n        - basicAuth: [ ]\n      responses:\n        '200':\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/rateLimitLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/rateLimitRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/rateLimitReset'\n            X-RateLimit-Retry-After:\n              $ref: '#/components/headers/rateLimitRetryAfter'\n          content:\n            application/json:\n              schema:\n                type: object\n          description: platform is healthy\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n        '503':\n          $ref: '#/components/responses/503'\n      summary: health check\n      tags:\n        - Monitoring\n  '/auth/device/register':\n    post:\n      summary: Device register token\n      tags:\n        - Account\n      security:\n        - token: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceRegister'\n      responses:\n        '204':\n          description: device registrato con successo\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/rateLimitLimit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/rateLimitRemaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/rateLimitReset'\n            X-RateLimit-Retry-After:\n              $ref: '#/components/headers/rateLimitRetryAfter'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '422':\n          $ref: '#/components/responses/422'\n        '429':\n          $ref: '#/components/responses/429'\n        '500':\n          $ref: '#/components/responses/500'\n        '502':\n          $ref: '#/components/responses/502'\n  /mobile/logger:\n    post:\n      summary: Log recording from the mobile app\n      tags:\n        - Monitoring\n      security:\n        - token: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                debug_info:\n                  type: string\n                device_info:\n                  type: string\n                  example: json string\n                payload:\n                  type: string\n                  example: json string\n                stacktrace:\n                  type: string\n      responses:\n        '204':\n          description: log registrato con successo\n        '401':\n          $ref: '#/components/responses/401'\n        '500':\n          $ref: '#/components/responses/500'\n  /mobile/release:\n    get:\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/agent'\n      responses:\n        '200':\n          description: registered version\n        '401':\n          $ref: '#/components/responses/401'\n        '500':\n          $ref: '#/components/responses/500'\n      summary: registered version\n      tags:\n        - Monitoring\n    delete:\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/agent'\n        - description: delete all version registered\n          in: query\n          name: all\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: new list of registered versions excluding the last one deleted\n        '204':\n          description: all versions have been deleted\n        '401':\n          $ref: '#/components/responses/401'\n        '500':\n          $ref: '#/components/responses/500'\n      summary: delete the latest registered version or all\n      tags:\n        - Monitoring\n  /mobile/release/latest:\n    get:\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/agent'\n      responses:\n        '200':\n          description: latest registered release\n        '401':\n          $ref: '#/components/responses/401'\n        '500':\n          $ref: '#/components/responses/500'\n      summary: latest registered release\n      tags:\n        - Monitoring\n  /mobile/release/{version}:\n    post:\n      security:\n        - basicAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/agent'\n        - description: version to register\n          in: path\n          name: version\n          required: true\n          schema:\n            type: string\n        - description: determine if this version is critical or not\n          in: query\n          name: critical\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: version successfully registered\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '500':\n          $ref: '#/components/responses/500'\n      summary: Register a release of the mobile app for monitoring critical updates\n      tags:\n        - Monitoring\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    token:\n      type: apiKey\n      in: header\n      name: Authorization\n  headers:\n    paginationCount:\n      description: numero elementi totali\n      schema:\n        type: integer\n    paginationNumPages:\n      description: numero totale delle pagine\n      schema:\n        type: integer\n    paginationPage:\n      description: pagina corrente\n      schema:\n        type: integer\n    paginationPageSize:\n      description: dimensione della pagina\n      schema:\n        type: integer\n    rateLimitReset:\n      description: TUTC seconds since epoch when the window will be reset\n      schema:\n        type: integer\n    rateLimitRemaining:\n      description: The number of requests remaining in the active window\n      schema:\n        type: integer\n    rateLimitLimit:\n      description: The total number of requests allowed for the active window\n      schema:\n        type: integer\n    rateLimitRetryAfter:\n      description: Seconds to retry after\n      schema:\n        type: integer\n  parameters:\n    page:\n      in: query\n      name: page\n      schema:\n        type: integer\n      description: numero pagina\n    page_size:\n      in: query\n      name: page_size\n      description: numero elementi per pagina\n      schema:\n        type: integer\n    related:\n      in: query\n      name: related\n      description: con dettaglio\n      schema:\n        type: boolean\n    expires_access:\n      in: query\n      name: expires_access\n      schema:\n        type: integer\n      description: espresso in secondi\n    expires_refresh:\n      in: query\n      name: expires_refresh\n      schema:\n        type: integer\n      description: espresso in secondi\n    never_expire:\n      in: query\n      name: never_expire\n      schema:\n        type: boolean\n      description: non fa scadere l'access token\n    agent:\n      description: os family\n      in: query\n      required: true\n      name: agent\n      schema:\n        type: string\n  responses:\n    '400':\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '401':\n      description: Not Autenticated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '402':\n      description: Server require payment\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '403':\n      description: 'Forbidden: insufficient privileges'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '404':\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '409':\n      description: 'Conflict: resource already exists'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '422':\n      description: 'Entity not processable: payload does not match the resource schema'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '429':\n      description: Too Many Requests\n      headers:\n        X-RateLimit-Limit:\n          $ref: '#/components/headers/rateLimitLimit'\n        X-RateLimit-Remaining:\n          $ref: '#/components/headers/rateLimitRemaining'\n        X-RateLimit-Reset:\n          $ref: '#/components/headers/rateLimitReset'\n        X-RateLimit-Retry-After:\n          $ref: '#/components/headers/rateLimitRetryAfter'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '500':\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '502':\n      description: Bad Gateway\n      content:\n        text/html:\n          schema:\n            type: string\n            example:\n              \u003chtml\u003e\u003c/html\u003e\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n    '503':\n      description: Service Unavailable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiProblem'\n  schemas:\n    ApiProblem:\n      type: object\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        detail:\n          type: string\n        instance:\n          type: string\n        status:\n          type: integer\n        response:\n          type: object\n    PostRevokeToken:\n      type: object\n      properties:\n        access_token:\n          type: string\n        refresh_token:\n          type: string\n    PostAccessToken:\n      type: object\n      required:\n        - email\n        - password\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n    AccessToken:\n      type: object\n      required:\n        - access_token\n        - refresh_token\n        - expires_in\n        - issued_at\n      properties:\n        access_token:\n          type: string\n        refresh_token:\n          type: string\n        expires_in:\n          type: integer\n        issued_at:\n          type: integer\n        token_type:\n          type: string\n        scope:\n          type: string\n    RefreshToken:\n      type: object\n      required:\n        - access_token\n        - expires_in\n        - issued_at\n      properties:\n        access_token:\n          type: string\n        expires_in:\n          type: integer\n        issued_at:\n          type: integer\n        token_type:\n          type: string\n        scope:\n          type: string\n    DeviceRegister:\n      additionalProperties: false\n      type: object\n      properties:\n        token:\n          type: string\n          example: firebase token\n",
			"canonicalURL": "/github.com/cs91chris/flaskel@4ae2b8cfb44e5a18b6ea1faee8a94105f12a0e48/-/blob/tests/integ/data/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cs91chris/flaskel/blob/4ae2b8cfb44e5a18b6ea1faee8a94105f12a0e48/tests/integ/data/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}