{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/nowpayments/openapi.yaml",
			"byteSize": 22077,
			"content": "openapi: 3.0.3\nservers:\n  - url: https://api.nowpayments.io\ninfo:\n  x-ballerina-display:\n    label: NOWPayments\n    iconPath: \"icon.png\"\n  contact: {}\n  description: \u003e\n    This is a generated connector from [NOWPayments API v1](https://nowpayments.io/) OpenAPI Specification. \n\n    NOWPayments is a non-custodial cryptocurrency payment processing platform. \n    \n    Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple â€“ no excess.\n\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials\n\n    Create an [NOWPayments Account](https://account.nowpayments.io/create-account) and obtain tokens by following [this guide](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest)\n  title: NOWPayments API\n  version: 1.0.0\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://pbs.twimg.com/profile_images/1351091723833909248/9Jqk2Tiu_400x400.jpg\n  x-origin:\n    - format: postman\n      url: https://www.postman.com/collections/7907941-9f217404-4263-42ad-b6b1-03a3d95b7d22-S1a32n38\n      version: 2.x\n  x-providerName: nowpayments.io\ntags: []\nsecurity:\n  - ApiKeyAuth: []\npaths:\n  /v1/estimate:\n    get:\n      description: |-\n        This is a method for calculating the approximate price in cryptocurrency for a given value in Fiat currency. You will need to provide the initial cost in the Fiat currency (amount, currency_from) and the necessary cryptocurrency (currency_to)\n        Currently following fiat currencies are available: usd, eur, nzd, brl, gbp.\n      operationId: getEstimatedPrice\n      parameters:\n        - in: query\n          name: amount\n          schema:\n            example: \"3999.5000\"\n            type: string\n        - in: query\n          name: currency_from\n          schema:\n            example: usd\n            type: string\n        - in: query\n          name: currency_to\n          schema:\n            example: btc\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                3. Get estimated price:\n                  value:\n                    amount_from: 3999.5\n                    currency_from: usd\n                    currency_to: btc\n                    estimated_amount: 0.17061637\n              schema:\n                $ref: '#/components/schemas/ApproximatePrice'\n                type: object\n          description: 3. Get estimated price\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 605abb081ca11669-ARN\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: br\n                type: string\n            Date:\n              schema:\n                example: Tue, 22 Dec 2020 15:03:37 GMT\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            NEL:\n              schema:\n                example: '{\"report_to\":\"cf-nel\",\"max_age\":604800}'\n                type: string\n            Report-To:\n              schema:\n                example: '{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report?s=Be6PnrVenND3qBzQJTWszI2slyEd9pXNhEyFMkukSYUC1m3om7zFPg%2BQq%2F6xT2ridpvoQiRE5q8CWGblOvjJ7%2Bup%2B3ZwGuN7TNvHk04WYiWIlRk%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}'\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=15768000\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Origin\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 072c9339110000166928295000000001\n                type: string\n      summary: 3. Get estimated price\n  /v1/min-amount:\n    get:\n      description: |-\n        Get the minimum payment amount for a specific pair.\n\n        You can provide both currencies in the pair or just currency_from, and we will calculate the minimum payment amount for currency_from and currency which you have specified as the outcome in the Store Settings.\n\n        In the case of several outcome wallets we will calculate the minimum amount in the same way we route your payment to a specific wallet.\n      operationId: getTheMinimumPaymentAmount\n      parameters:\n        - in: query\n          name: currency_from\n          schema:\n            example: eth\n            type: string\n        - in: query\n          name: currency_to\n          schema:\n            example: trx\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                6. Get the minimum payment amount:\n                  value:\n                    currency_from: eth\n                    currency_to: trx\n                    min_amount: 0.0098927\n              schema:\n                $ref: '#/components/schemas/MinimumPayment'\n                type: object\n          description: 6. Get the minimum payment amount\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 605abd48af901669-ARN\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: br\n                type: string\n            Date:\n              schema:\n                example: Tue, 22 Dec 2020 15:05:09 GMT\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            NEL:\n              schema:\n                example: '{\"report_to\":\"cf-nel\",\"max_age\":604800}'\n                type: string\n            Report-To:\n              schema:\n                example: '{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report?s=JE3EB5TyT0ppi%2B%2FTPlGcGUDcr2ry9EL%2BhHtpB8%2BYtZMjD087RoOl6UD9284JzS7VANH4ZivF8A7jHMl42n8GLxJL1u7fyKvugNSiViphSjgmGKc%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}'\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=15768000\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Origin\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 072c94a16a0000166954256000000001\n                type: string\n      summary: 6. Get the minimum payment amount\n  /v1/payment/:\n    get:\n      description: |-\n        Returns the entire list of all transactions, created with certain API key.\n        The list of optional parameters:\n        - limit - number of records in one page. (possible values: from 1 to 500)\n        - page - the page number you want to get (possible values: from 0 to **page count - 1**)\n        - sortBy - sort the received list by a paramenter. Set to **created_at** by default (possible values: payment_id, payment_status, pay_address, price_amount, price_currency, pay_amount, actually_paid, pay_currency, order_id, order_description, purchase_id, outcome_amount, outcome_currency)\n        - orderBy - display the list in ascending or descending order. Set to **asc** by default (possible values: asc, desc)\n        - dateFrom - select the displayed period start date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ).\n        - dateTo - select the displayed period end date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ).\n      operationId: getListOfPayments\n      parameters:\n        - in: query\n          name: limit\n          schema:\n            example: \"10\"\n            type: string\n        - in: query\n          name: page\n          schema:\n            example: \"0\"\n            type: string\n        - in: query\n          name: sortBy\n          schema:\n            example: created_at\n            type: string\n        - in: query\n          name: orderBy\n          schema:\n            example: asc\n            type: string\n        - in: query\n          name: dateFrom\n          schema:\n            example: 2020-01-01\n            type: string\n        - in: query\n          name: dateTo\n          schema:\n            example: 2021-01-01\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                7.Get list of payments:\n                  value:\n                    data:\n                      - actually_paid: 180\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 178.9005\n                        outcome_currency: trx\n                        pay_address: TNDFkiSmBQorNFacb3735q8MnT29sn8BLn\n                        pay_amount: 165.652609\n                        pay_currency: trx\n                        payment_id: 5524759814\n                        payment_status: finished\n                        price_amount: 5\n                        price_currency: usd\n                        purchase_id: \"4944856743\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 164.6248468\n                        outcome_currency: trx\n                        pay_address: TVKHbLc47BnMbdE7QN4X5Q1FtyZLGGiTo8\n                        pay_amount: 165.652609\n                        pay_currency: trx\n                        payment_id: 5867063509\n                        payment_status: expired\n                        price_amount: 5\n                        price_currency: usd\n                        purchase_id: \"5057851130\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 0.1687052\n                        outcome_currency: btc\n                        pay_address: 3EZ2uTdVDAMFXTfc6uLDDKR6o8qKBZXVkj\n                        pay_amount: 0.17070286\n                        pay_currency: btc\n                        payment_id: 5745459419\n                        payment_status: waiting\n                        price_amount: 3999.5\n                        price_currency: usd\n                        purchase_id: \"5837122679\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 0.8019402\n                        outcome_currency: btc\n                        pay_address: 394UZCUdx3NN8VDsCZW8c6AzP7cXEXA8Xq\n                        pay_amount: 0.8102725\n                        pay_currency: btc\n                        payment_id: 4650948408\n                        payment_status: waiting\n                        price_amount: 3999.5\n                        price_currency: usd\n                        purchase_id: \"5094859409\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 988.9016296\n                        outcome_currency: bcd\n                        pay_address: 3EWJaZBaRWbPjSBTpgFcvxpnXLJzFDCHqW\n                        pay_amount: 993.87178656\n                        pay_currency: bcd\n                        payment_id: 5605634688\n                        payment_status: expired\n                        price_amount: 500\n                        price_currency: usd\n                        purchase_id: \"5817305007\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 1.8451261\n                        outcome_currency: bch\n                        pay_address: qzkshdh94vhdcyuejjf8ltcy2cl246hw0c68t36z69\n                        pay_amount: 1.85459941\n                        pay_currency: bch\n                        payment_id: 5241856814\n                        payment_status: expired\n                        price_amount: 500\n                        price_currency: usd\n                        purchase_id: \"5941190675\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 56.151958\n                        outcome_currency: btg\n                        pay_address: AYyecr8WKVpj2PNonjyUpn9sCHFyFMLdN1\n                        pay_amount: 56.4344495\n                        pay_currency: btg\n                        payment_id: 5751462089\n                        payment_status: expired\n                        price_amount: 500\n                        price_currency: usd\n                        purchase_id: \"6229667127\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 489.9433465\n                        outcome_currency: dai\n                        pay_address: \"0x6C3E920D0fdAF45c75b6c00f25Aa6a58429d4efB\"\n                        pay_amount: 496.84604252\n                        pay_currency: dai\n                        payment_id: 6100223670\n                        payment_status: expired\n                        price_amount: 500\n                        price_currency: usd\n                        purchase_id: \"5376931412\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 0.025819\n                        outcome_currency: btc\n                        pay_address: 3C85TUuBKEkoZZsTawiJhYZtVVLgE4GWqj\n                        pay_amount: 0.02596608\n                        pay_currency: btc\n                        payment_id: 4460859238\n                        payment_status: expired\n                        price_amount: 500\n                        price_currency: usd\n                        purchase_id: \"5652098489\"\n                      - actually_paid: 0\n                        order_description: Apple Macbook Pro 2019 x 1\n                        order_id: RGDBP-21314\n                        outcome_amount: 153789.0997188\n                        outcome_currency: doge\n                        pay_address: DLmK6vLURgHoWVZrQztthSqV71CBePG5k5\n                        pay_amount: 154569.92936569\n                        pay_currency: doge\n                        payment_id: 4948632928\n                        payment_status: expired\n                        price_amount: 500\n                        price_currency: usd\n                        purchase_id: \"4811984625\"\n                    limit: 10\n                    page: 0\n                    pagesCount: 6\n                    total: 59\n              schema:\n                $ref: '#/components/schemas/PaymentListResponse'\n                type: object\n          description: 7.Get list of payments\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 605abddd7db41669-ARN\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: br\n                type: string\n            Date:\n              schema:\n                example: Tue, 22 Dec 2020 15:05:33 GMT\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            NEL:\n              schema:\n                example: '{\"report_to\":\"cf-nel\",\"max_age\":604800}'\n                type: string\n            Report-To:\n              schema:\n                example: '{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report?s=4Sj25uNN8wdCtby0RbHx%2FbSLll68tMBpk%2FVG%2BQxVvo3wGnCf6Zu1DPFpwjsTBVasLRcoOsZVemVR6eVlvGP3HF9uJ1VOuaj%2Be9TCiwikq16Y5Vg%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}'\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=15768000\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Origin\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 072c94fe6c00001669e783e000000001\n                type: string\n      summary: 7. Get list of payments\n\ncomponents:\n  schemas:\n    Payment:\n      properties:\n        actually_paid:\n          example: 180\n          type: number\n        order_description:\n          example: Apple Macbook Pro 2019 x 1\n          type: string\n        order_id:\n          example: RGDBP-21314\n          type: string\n        outcome_amount:\n          example: 178.9005\n          type: number\n        outcome_currency:\n          example: trx\n          type: string\n        pay_address:\n          example: TNDFkiSmBQorNFacb3735q8MnT29sn8BLn\n          type: string\n        pay_amount:\n          example: 165.652609\n          type: number\n        pay_currency:\n          example: trx\n          type: string\n        payment_id:\n          example: 5524759814\n          type: number\n        payment_status:\n          example: finished\n          type: string\n        price_amount:\n          example: 5\n          type: number\n        price_currency:\n          example: usd\n          type: string\n        purchase_id:\n          example: \"4944856743\"\n          type: string\n      type: object\n    PaymentListResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        limit:\n          example: 10\n          type: number\n        page:\n          example: 0\n          type: number\n        pagesCount:\n          example: 6\n          type: number\n        total:\n          example: 59\n          type: number\n      type: object\n    MinimumPayment:\n      properties:\n        currency_from:\n          example: eth\n          type: string\n        currency_to:\n          example: trx\n          type: string\n        min_amount:\n          example: 0.0098927\n          type: number\n      type: object\n    ApproximatePrice:\n      properties:\n        amount_from:\n          example: 3999.5\n          type: number\n        currency_from:\n          example: usd\n          type: string\n        currency_to:\n          example: btc\n          type: string\n        estimated_amount:\n          example: 0.17061637\n          type: number\n      type: object   \n\n\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: x-api-key\n      description: Represents API Key `x-api-key`",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/nowpayments/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/nowpayments/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}