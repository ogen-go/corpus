{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/citrusframework/yaks"
		},
		"file": {
			"name": "petstore-v3.yaml",
			"size": 0,
			"path": "java/steps/yaks-openapi/src/test/resources/org/citrusframework/yaks/openapi/petstore-v3.yaml",
			"byteSize": 4511,
			"content": "openapi: 3.0.2\ninfo:\n  title: Swagger Petstore\n  version: 1.0.1\n  description: This is a sample server Petstore server.\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  -\n    url: 'https://localhost/petstore/v3/'\npaths:\n  /pet:\n    put:\n      requestBody:\n        description: Pet object that needs to be added to the store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Pet'\n        required: true\n      tags:\n        - pet\n      responses:\n        '204':\n          description: No content\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Pet not found\n        '405':\n          description: Validation exception\n      operationId: updatePet\n      summary: Update an existing pet\n      description: ''\n    post:\n      requestBody:\n        description: Pet object that needs to be added to the store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Pet'\n        required: true\n      tags:\n        - pet\n      responses:\n        '201':\n          description: Created\n        '405':\n          description: Invalid input\n      operationId: addPet\n      summary: Add a new pet to the store\n      description: ''\n  '/pet/{petId}':\n    get:\n      tags:\n        - pet\n      parameters:\n        -\n          name: petId\n          description: ID of pet to return\n          schema:\n            format: int64\n            type: integer\n          in: path\n          required: true\n        -\n          name: verbose\n          description: Output details\n          schema:\n            type: boolean\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Pet'\n          description: successful operation\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Pet not found\n      operationId: getPetById\n      summary: Find pet by ID\n      description: Returns a single pet\n    delete:\n      tags:\n        - pet\n      parameters:\n        -\n          name: api_key\n          schema:\n            type: string\n          in: header\n          required: false\n        -\n          name: petId\n          description: Pet id to delete\n          schema:\n            format: int64\n            type: integer\n          in: path\n          required: true\n      responses:\n        '204':\n          description: No content\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Pet not found\n      operationId: deletePet\n      summary: Deletes a pet\n      description: ''\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      required:\n        - category\n        - name\n        - status\n      type: object\n      properties:\n        id:\n          format: int64\n          type: integer\n        category:\n          $ref: '#/components/schemas/Category'\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          items:\n            type: string\n          xml:\n            name: photoUrl\n            wrapped: true\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          xml:\n            name: tag\n            wrapped: true\n        status:\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n          type: string\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          format: int32\n          type: integer\n        type:\n          type: string\n        message:\n          type: string\ntags:\n  -\n    name: pet\n    description: Everything about your Pets\n",
			"canonicalURL": "/github.com/citrusframework/yaks@df1fb2e3446795a3496e4f8880113f0573c78672/-/blob/java/steps/yaks-openapi/src/test/resources/org/citrusframework/yaks/openapi/petstore-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/citrusframework/yaks/blob/df1fb2e3446795a3496e4f8880113f0573c78672/java/steps/yaks-openapi/src/test/resources/org/citrusframework/yaks/openapi/petstore-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}