{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-iotevents-data-2018-10-23-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-iotevents-data-2018-10-23-swagger.yaml",
			"byteSize": 23263,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2018-10-23\n  x-release: v4\n  title: AWS IoT Events Data\n  description: AWS IoT Events monitors your equipment or device fleets for failures or\n    changes in operation, and triggers actions when such events occur. AWS IoT\n    Events Data API commands enable you to send inputs to detectors, list\n    detectors, and view or update a detector's status.\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: iotevents-data\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-data-2018-10-23.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/iotevents/\nsecurity:\n  - hmac: []\npaths:\n  /inputs/messages:\n    post:\n      operationId: BatchPutMessage\n      description: Sends a set of messages to the AWS IoT Events system. Each message\n        payload is transformed into the input you specify\n        (\u003ccode\u003e\"inputName\"\u003c/code\u003e) and ingested into any detectors that monitor\n        that input. If multiple messages are sent, the order in which the\n        messages are processed isn't guaranteed. To guarantee ordering, you must\n        send messages one at a time and wait for a successful response.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPutMessageResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - messages\n              properties:\n                messages:\n                  description: \"The list of messages to send. Each message has the\n                    following format: \u003ccode\u003e'{ \\\"messageId\\\": \\\"string\\\",\n                    \\\"inputName\\\": \\\"string\\\", \\\"payload\\\": \\\"string\\\"}'\u003c/code\u003e\n                    \"\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Message\"\n                  minItems: 1\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /detectors:\n    post:\n      operationId: BatchUpdateDetector\n      description: Updates the state, variable values, and timer settings of one or more\n        detectors (instances) of a specified detector model.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchUpdateDetectorResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - detectors\n              properties:\n                detectors:\n                  description: The list of detectors (instances) to update, along with the\n                    values to update.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/UpdateDetectorRequest\"\n                  minItems: 1\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detectors/{detectorModelName}/keyValues/\":\n    get:\n      operationId: DescribeDetector\n      description: Returns information about the specified detector (instance).\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeDetectorResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: detectorModelName\n          in: path\n          required: true\n          description: The name of the detector model whose detectors (instances) you want\n            information about.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_-]+$\n        - name: keyValue\n          in: query\n          required: false\n          description: A filter used to limit results to detectors (instances) created\n            because of the given key ID.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9\\-_:]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detectors/{detectorModelName}\":\n    get:\n      operationId: ListDetectors\n      description: Lists detectors (the instances of a detector model).\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListDetectorsResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: detectorModelName\n          in: path\n          required: true\n          description: The name of the detector model whose detectors (instances) are\n            listed.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_-]+$\n        - name: stateName\n          in: query\n          required: false\n          description: A filter that limits results to those detectors (instances) in the\n            given state.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next set of results.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return at one time.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://data.iotevents.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS IoT Events Data multi-region endpoint\n  - url: https://data.iotevents.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS IoT Events Data multi-region endpoint\n  - url: http://data.iotevents.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)\n  - url: https://data.iotevents.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchPutMessageResponse:\n      type: object\n      properties:\n        BatchPutMessageErrorEntries:\n          $ref: \"#/components/schemas/BatchPutMessageErrorEntries\"\n    Message:\n      type: object\n      required:\n        - messageId\n        - inputName\n        - payload\n      properties:\n        messageId:\n          $ref: \"#/components/schemas/MessageId\"\n        inputName:\n          $ref: \"#/components/schemas/InputName\"\n        payload:\n          $ref: \"#/components/schemas/Payload\"\n      description: Information about a message.\n    InvalidRequestException: {}\n    InternalFailureException: {}\n    ServiceUnavailableException: {}\n    ThrottlingException: {}\n    BatchUpdateDetectorResponse:\n      type: object\n      properties:\n        batchUpdateDetectorErrorEntries:\n          $ref: \"#/components/schemas/BatchUpdateDetectorErrorEntries\"\n    UpdateDetectorRequest:\n      type: object\n      required:\n        - messageId\n        - detectorModelName\n        - state\n      properties:\n        messageId:\n          $ref: \"#/components/schemas/MessageId\"\n        detectorModelName:\n          $ref: \"#/components/schemas/DetectorModelName\"\n        keyValue:\n          $ref: \"#/components/schemas/KeyValue\"\n        state:\n          $ref: \"#/components/schemas/DetectorStateDefinition\"\n      description: Information used to update the detector (instance).\n    DescribeDetectorResponse:\n      type: object\n      properties:\n        detector:\n          $ref: \"#/components/schemas/Detector\"\n    ResourceNotFoundException: {}\n    ListDetectorsResponse:\n      type: object\n      properties:\n        detectorSummaries:\n          $ref: \"#/components/schemas/DetectorSummaries\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    BatchPutMessageErrorEntry:\n      type: object\n      properties:\n        messageId:\n          $ref: \"#/components/schemas/MessageId\"\n        errorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        errorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Contains information about the errors encountered.\n    BatchPutMessageErrorEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BatchPutMessageErrorEntry\"\n    MessageId:\n      type: string\n      pattern: ^[a-zA-Z0-9_-]+$\n      minLength: 1\n      maxLength: 64\n    ErrorCode:\n      type: string\n      enum:\n        - ResourceNotFoundException\n        - InvalidRequestException\n        - InternalFailureException\n        - ServiceUnavailableException\n        - ThrottlingException\n    ErrorMessage:\n      type: string\n    Messages:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Message\"\n      minItems: 1\n    BatchPutMessageRequest:\n      type: object\n      required:\n        - messages\n      properties:\n        messages:\n          $ref: \"#/components/schemas/Messages\"\n    BatchUpdateDetectorErrorEntry:\n      type: object\n      properties:\n        messageId:\n          $ref: \"#/components/schemas/MessageId\"\n        errorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        errorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Information about the error that occured when attempting to update a\n        detector.\n    BatchUpdateDetectorErrorEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BatchUpdateDetectorErrorEntry\"\n    UpdateDetectorRequests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UpdateDetectorRequest\"\n      minItems: 1\n    BatchUpdateDetectorRequest:\n      type: object\n      required:\n        - detectors\n      properties:\n        detectors:\n          $ref: \"#/components/schemas/UpdateDetectorRequests\"\n    DetectorModelName:\n      type: string\n      pattern: ^[a-zA-Z0-9_-]+$\n      minLength: 1\n      maxLength: 128\n    KeyValue:\n      type: string\n      pattern: ^[a-zA-Z0-9\\-_:]+$\n      minLength: 1\n      maxLength: 128\n    DescribeDetectorRequest:\n      type: object\n      properties: {}\n    Detector:\n      type: object\n      properties:\n        detectorModelName:\n          $ref: \"#/components/schemas/DetectorModelName\"\n        keyValue:\n          $ref: \"#/components/schemas/KeyValue\"\n        detectorModelVersion:\n          $ref: \"#/components/schemas/DetectorModelVersion\"\n        state:\n          $ref: \"#/components/schemas/DetectorState\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Information about the detector (instance).\n    DetectorModelVersion:\n      type: string\n      minLength: 1\n      maxLength: 128\n    DetectorState:\n      type: object\n      required:\n        - stateName\n        - variables\n        - timers\n      properties:\n        stateName:\n          $ref: \"#/components/schemas/StateName\"\n        variables:\n          $ref: \"#/components/schemas/Variables\"\n        timers:\n          $ref: \"#/components/schemas/Timers\"\n      description: Information about the current state of the detector instance.\n    Timestamp:\n      type: string\n      format: date-time\n    StateName:\n      type: string\n      minLength: 1\n      maxLength: 128\n    Variables:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Variable\"\n    Timers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Timer\"\n    VariableDefinitions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/VariableDefinition\"\n    TimerDefinitions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TimerDefinition\"\n    DetectorStateDefinition:\n      type: object\n      required:\n        - stateName\n        - variables\n        - timers\n      properties:\n        stateName:\n          $ref: \"#/components/schemas/StateName\"\n        variables:\n          $ref: \"#/components/schemas/VariableDefinitions\"\n        timers:\n          $ref: \"#/components/schemas/TimerDefinitions\"\n      description: The new state, variable values, and timer settings of the detector\n        (instance).\n    DetectorStateSummary:\n      type: object\n      properties:\n        stateName:\n          $ref: \"#/components/schemas/StateName\"\n      description: Information about the detector state.\n    DetectorSummary:\n      type: object\n      properties:\n        detectorModelName:\n          $ref: \"#/components/schemas/DetectorModelName\"\n        keyValue:\n          $ref: \"#/components/schemas/KeyValue\"\n        detectorModelVersion:\n          $ref: \"#/components/schemas/DetectorModelVersion\"\n        state:\n          $ref: \"#/components/schemas/DetectorStateSummary\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Information about the detector (instance).\n    DetectorSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DetectorSummary\"\n    InputName:\n      type: string\n      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$\n      minLength: 1\n      maxLength: 128\n    NextToken:\n      type: string\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 250\n    ListDetectorsRequest:\n      type: object\n      properties: {}\n    Payload:\n      type: string\n    Seconds:\n      type: integer\n    TimerName:\n      type: string\n      minLength: 1\n      maxLength: 128\n    Timer:\n      type: object\n      required:\n        - name\n        - timestamp\n      properties:\n        name:\n          $ref: \"#/components/schemas/TimerName\"\n        timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: The current state of a timer.\n    TimerDefinition:\n      type: object\n      required:\n        - name\n        - seconds\n      properties:\n        name:\n          $ref: \"#/components/schemas/TimerName\"\n        seconds:\n          $ref: \"#/components/schemas/Seconds\"\n      description: The new setting of a timer.\n    VariableName:\n      type: string\n      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$\n      minLength: 1\n      maxLength: 128\n    VariableValue:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    Variable:\n      type: object\n      required:\n        - name\n        - value\n      properties:\n        name:\n          $ref: \"#/components/schemas/VariableName\"\n        value:\n          $ref: \"#/components/schemas/VariableValue\"\n      description: The current state of the variable.\n    VariableDefinition:\n      type: object\n      required:\n        - name\n        - value\n      properties:\n        name:\n          $ref: \"#/components/schemas/VariableName\"\n        value:\n          $ref: \"#/components/schemas/VariableValue\"\n      description: The new value of the variable.\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-iotevents-data-2018-10-23-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-iotevents-data-2018-10-23-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}