{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/COS301-SE-2021/High-Five"
		},
		"file": {
			"name": "application.yml",
			"size": 0,
			"path": "backend/HighFive/src/Resources/application.yml",
			"byteSize": 34795,
			"content": "ï»¿openapi: 3.0.0\n\ninfo:\n  version: 0.0.1\n  title: High Five\n  description: The OpenAPI specification for High Five's controllers\n\ntags:\n  - name: \"MediaStorage\"\n  - name: \"Test\"\n  - name: \"Pipelines\"\n  - name: \"Analysis\"\n  - name: \"User\"\n  - name: \"Tools\"\n  - name: \"Downloads\"\n  - name: \"Livestream\"\n\n  #==========================================================\n  #     PATHS\n  #==========================================================\npaths:\n\n  #==========================================================\n  #     TEST SUBSYSTEM PATHING\n  #==========================================================\n\n  /test/ping:\n    post:\n      tags:\n        - \"Test\"\n      description: Test if the server is online\n      operationId: Ping\n      responses:\n        \"200\":\n          description: Ping successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pingResponse'\n\n  /test/echo:\n    post:\n      tags:\n        - \"Test\"\n      description: Test if the server is online\n      operationId: Echo\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/echoRequest'\n      responses:\n        \"200\":\n          description: Ping successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pingResponse'\n\n  #==========================================================\n  #     MEDIA STORAGE SUBSYSTEM PATHING\n  #==========================================================\n\n  /media/storeVideo:\n    post:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Store Video use case\n      operationId: StoreVideo\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/storeVideoRequest'\n      responses:\n        \"200\":\n          description: Video has been stored\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/videoMetaData'\n\n  /media/getAllVideos:\n    get:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Get All Videos use case\n      operationId: GetAllVideos\n      responses:\n        \"200\":\n          description: Returns a list of metadata objects of all the videos in the blob storage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAllVideosResponse'\n\n  /media/deleteVideo:\n    post:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Delete Video use case\n      operationId: DeleteVideo\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deleteVideoRequest'\n      responses:\n        \"200\":\n          description: Video successfully deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /media/storeImage:\n    post:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Store Image use case\n      operationId: StoreImage\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/storeImageRequest'\n      responses:\n        \"200\":\n          description: Image has been stored\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/imageMetaData'\n\n  /media/getAllImages:\n    get:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Get All Images use case\n      operationId: GetAllImages\n      responses:\n        \"200\":\n          description: Returns a list of images in the blob storage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAllImagesResponse'\n\n  /media/deleteImage:\n    post:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Delete Image use case\n      operationId: DeleteImage\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deleteImageRequest'\n      responses:\n        \"200\":\n          description: Image successfully deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /media/getAnalyzedImages:\n    get:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Get Analyzed Images use case\n      operationId: GetAnalyzedImages\n      responses:\n        \"200\":\n          description: All previously analyzed images are returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAnalyzedImagesResponse'\n\n  /media/getAnalyzedVideos:\n    get:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Get Analyzed Videos use case\n      operationId: GetAnalyzedVideos\n      responses:\n        \"200\":\n          description: All previously analyzed videos are returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAnalyzedVideosResponse'\n\n  /media/deleteAnalyzedImage:\n    post:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Delete Analyzed Image use case\n      operationId: DeleteAnalyzedImage\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deleteImageRequest'\n      responses:\n        \"200\":\n          description: Deletes analyzed image\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /media/deleteAnalyzedVideo:\n    post:\n      tags:\n        - \"MediaStorage\"\n      description: Endpoint for Delete Analyzed Video use case\n      operationId: DeleteAnalyzedVideo\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deleteVideoRequest'\n      responses:\n        \"200\":\n          description: Deletes analyzed video\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n  #==========================================================\n  #     PIPELINES SUBSYSTEM PATHING\n  #==========================================================\n\n  /pipelines/createPipeline:\n    post:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Create Pipeline use case\n      operationId: CreatePipeline\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createPipelineRequest'\n      responses:\n        \"200\":\n          description: Pipeline has been created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/createPipelineResponse'\n\n  /pipelines/getPipelines:\n    get:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Get Pipelines use case\n      operationId: GetPipelines\n      responses:\n        \"200\":\n          description: All pipelines have been returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getPipelinesResponse'\n\n  /pipelines/getPipelineIds:\n    get:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Get Pipeline Ids use case\n      operationId: GetPipelineIds\n      responses:\n        \"200\":\n          description: All pipeline Id's have been returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getPipelineIdsResponse'\n\n  /pipelines/getPipeline:\n    post:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Get Pipeline use case\n      operationId: GetPipeline\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getPipelineRequest'\n      responses:\n        \"200\":\n          description: Returns a pipeline for a given Id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pipeline'\n\n  /pipelines/addTools:\n    post:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Add Tools use case\n      operationId: AddTools\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/addToolsRequest'\n      responses:\n        \"200\":\n          description: Tools have been added to pipeline\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /pipelines/removeTools:\n    post:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Remove Tools use case\n      operationId: RemoveTools\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/removeToolsRequest'\n      responses:\n        \"200\":\n          description: Tools have been removed from pipeline\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /pipelines/deletePipeline:\n    post:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Delete Pipeline use case\n      operationId: DeletePipeline\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deletePipelineRequest'\n      responses:\n        \"200\":\n          description: Tools have been removed from pipeline\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n                \n  /pipelines/setLivePipeline:\n    post:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Set Live Pipeline use case\n      operationId: SetLivePipeline\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getPipelineRequest'\n      responses:\n        \"200\":\n          description: Tools have been removed from pipeline\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /pipelines/getAllTools:\n    get:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Get All Tools use case\n      operationId: GetAllTools\n      responses:\n        \"200\":\n          description: All existing tools have been returned\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n\n  /pipelines/getLivePipeline:\n    get:\n      tags:\n        - \"Pipelines\"\n      description: Endpoint for Get Live Pipeline use case\n      operationId: GetLivePipeline\n      responses:\n        \"200\":\n          description: Returns current live pipeline\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pipeline'\n\n  #==========================================================\n  #     ANALYSIS SUBSYSTEM PATHING\n  #==========================================================\n\n  /analysis/analyzeImage:\n    post:\n      tags:\n        - \"Analysis\"\n      description: Endpoint for Analyze Image use case\n      operationId: AnalyzeImage\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/analyzeImageRequest'\n      responses:\n        \"200\":\n          description: A url of the analyzed media is returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/analyzedImageMetaData'\n\n  /analysis/analyzeVideo:\n    post:\n      tags:\n        - \"Analysis\"\n      description: Endpoint for Analyze Video use case\n      operationId: AnalyzeVideo\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/analyzeVideoRequest'\n      responses:\n        \"200\":\n          description: A url of the analyzed media is returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/analyzedVideoMetaData'\n\n  #==========================================================\n  #     USER SUBSYSTEM PATHING\n  #==========================================================\n\n  /users/getAllUsers:\n    get:\n      tags:\n        - \"User\"\n      description: Endpoint for Get All Users use case\n      operationId: Get All Users\n      responses:\n        \"200\":\n          description: All users are returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAllUsersResponse'\n\n  /users/deleteMedia:\n    post:\n      tags:\n        - \"User\"\n      description: Endpoint for Delete Media use case\n      operationId: DeleteMedia\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userRequest'\n      responses:\n        \"200\":\n          description: Called by an admin to delete all the media of another user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /users/deleteOwnMedia:\n    post:\n      tags:\n        - \"User\"\n      description: Endpoint for Delete Own Media use case\n      operationId: DeleteOwnMedia\n      responses:\n        \"200\":\n          description: Called by a user to delete all of their own media\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /users/upgradeToAdmin:\n    post:\n      tags:\n        - \"User\"\n      description: Endpoint for Upgrade To Admin use case\n      operationId: UpgradeToAdmin\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userRequest'\n      responses:\n        \"200\":\n          description: Called by an admin to upgrade a normal use to an administrator\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /users/isAdmin:\n    get:\n      tags:\n        - \"User\"\n      description: Endpoint for Is Admin use case\n      operationId: IsAdmin\n      responses:\n        \"200\":\n          description: Used to verify whether the currently logged in user is an admin or not\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/isAdminResponse'\n\n  /users/revokeAdmin:\n    post:\n      tags:\n        - \"User\"\n      description: Endpoint for Revoke Admin use case\n      operationId: RevokeAdmin\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userRequest'\n      responses:\n        \"200\":\n          description: Used to remove admin rights from an existing admin\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/isAdminResponse'\n\n  #==========================================================\n  #     TOOL SUBSYSTEM PATHING\n  #==========================================================\n\n  /tools/uploadAnalysisTool:\n    post:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Upload Analysis Tool use case\n      operationId: UploadAnalysisTool\n      requestBody:\n        required: true\n        description: Receives .cs source code and model for analysis tool.\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/storeAnalysisToolRequest'\n      responses:\n        \"200\":\n          description: The Analysis Tool has been uploaded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tool'\n\n  /tools/uploadDrawingTool:\n    post:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Upload Drawing Tool use case\n      operationId: UploadDrawingTool\n      requestBody:\n        required: true\n        description: Receives .cs source code for drawing.\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/storeDrawingToolRequest'\n      responses:\n        \"200\":\n          description: The Drawing Tool has been uploaded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tool'\n\n  /tools/deleteTool:\n    post:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Delete Tool use case\n      operationId: DeleteTool\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deleteToolRequest'\n      responses:\n        \"200\":\n          description: The Tool has been deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /tools/getAllTools:\n    get:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Delete Tool use case\n      operationId: GetTools\n      responses:\n        \"200\":\n          description: All tools have been returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAllToolsResponse'\n\n  /tools/getToolTypes:\n    get:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Get Tool Types use case\n      operationId: GetToolTypes\n      responses:\n        \"200\":\n          description: All tool types have been returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getToolTypesResponse'\n\n  /tools/createMetaDataType:\n    post:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Create Meta Data Type use case\n      operationId: CreateMetaDataType\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/createToolMetaDataTypeRequest'\n      responses:\n        \"200\":\n          description: All tool types have been returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /tools/getMetaDataTypes:\n    get:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Get Meta Data Types use case\n      operationId: GetMetaDataTypes\n      responses:\n        \"200\":\n          description: Returns all meta data types\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getToolMetaDataTypes'\n\n  /tools/getToolFiles:\n    post:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Get Tool Files use case\n      operationId: GetToolFiles\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getToolFilesRequest'\n      responses:\n        \"200\":\n          description: All tool types have been returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getToolFilesResponse'\n\n  /tools/getUnreviewedTools:\n    get:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Get Unreviewed Tools use case\n      operationId: GetUnreviewedTools\n      responses:\n        \"200\":\n          description: Returns all tools that has yet to be reviewed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getUnreviewedToolsResponse'\n\n  /tools/approveTool:\n    post:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Approve Tool use case\n      operationId: ApproveTool\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reviewToolRequest'\n      responses:\n        \"200\":\n          description: Tool has been approved by and admin and uploaded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /tools/rejectTool:\n    post:\n      tags:\n        - \"Tools\"\n      description: Endpoint for Reject Tool use case\n      operationId: RejectTool\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reviewToolRequest'\n      responses:\n        \"200\":\n          description: Tool has been rejected by and admin and removed from storage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  #==========================================================\n  #     DOWNLOADS SUBSYSTEM PATHING\n  #==========================================================\n\n  /tools/downloadApk:\n    get:\n      tags:\n        - \"Downloads\"\n      description: Endpoint to download the mobile app's apk\n      operationId: DownloadApk\n      responses:\n        \"200\":\n          description: Returns an apk to install the mobile application\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fileDownload'\n\n  /tools/downloadSdkManual:\n    get:\n      tags:\n        - \"Downloads\"\n      description: Endpoint to download the sdk's user manual\n      operationId: DownloadSdkManual\n      responses:\n        \"200\":\n          description: Returns the sdk user manual\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fileDownload'\n\n  /tools/downloadSdkFiles:\n    get:\n      tags:\n        - \"Downloads\"\n      description: Endpoint to download the sdk's required files\n      operationId: DownloadSdkFiles\n      responses:\n        \"200\":\n          description: Returns the sdk required files as .cs files.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/downloadSdkFilesResponse'\n\n  #==========================================================\n  #     LIVESTREAM SUBSYSTEM PATHING\n  #==========================================================\n\n  /livestream/createOneTimeToken:\n    post:\n      tags:\n        - \"Livestream\"\n      description: Endpoint for Create One Time Token use case\n      operationId: CreateOneTimeToken\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createOneTimeTokenRequest'\n      responses:\n        \"200\":\n          description: Returns random one time token\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n\n  /livestream/returnAllLivestreams:\n    get:\n      tags:\n        - \"Livestream\"\n      description: Endpoint for Return All Livestreams use case\n      operationId: ReturnAllLiveStreams\n      responses:\n        \"200\":\n          description: Returns all livestream id's\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/emptyObject'\n  \n  #==========================================================\n  #     SCHEMAS\n  #==========================================================\ncomponents:\n  schemas:\n\n    #==========================================================\n    #     TEST COMPONENTS\n    #==========================================================\n\n    pingResponse:\n      type: object\n      properties:\n        message:\n          type: string\n\n    echoRequest:\n      type: object\n      properties:\n        message:\n          type: string\n\n    #==========================================================\n    #     MEDIA STORAGE COMPONENTS\n    #==========================================================\n\n    storeVideoRequest:\n      type: object\n      properties:\n        file:\n          type: string\n          format: binary\n\n    storeImageRequest:\n      type: object\n      properties:\n        file:\n          type: string\n          format: binary\n\n    getAllVideosResponse:\n      type: object\n      properties:\n        videos:\n          type: array\n          items:\n            $ref: '#/components/schemas/videoMetaData'\n\n    getAllImagesResponse:\n      type: object\n      properties:\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/imageMetaData'\n\n    imageMetaData:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        dateStored:\n          type: string\n          format: date-time\n          description: The date-time notation as defined by RFC 3339, section 5.6. e.g. 2017-07-21T17:32:28Zring\n        url:\n          type: string\n\n    videoMetaData:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        dateStored:\n          type: string\n          format: date-time\n          description: The date-time notation as defined by RFC 3339, section 5.6. e.g. 2017-07-21T17:32:28Z\n        url:\n          type: string\n        thumbnail:\n          type: string\n\n    deleteVideoRequest:\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique id assossciated with a certain video stored on the blob storage\n\n    deleteImageRequest:\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique id assossciated with a certain image stored on the blob storage\n\n    getAnalyzedImagesResponse:\n      type: object\n      properties:\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/analyzedImageMetaData'\n\n    getAnalyzedVideosResponse:\n      type: object\n      properties:\n        videos:\n          type: array\n          items:\n            $ref: '#/components/schemas/analyzedVideoMetaData'\n\n    analyzedImageMetaData:\n      type: object\n      properties:\n        id:\n          type: string\n        dateAnalyzed:\n          type: string\n          format: date-time\n          description: The date-time notation as defined by RFC 3339, section 5.6. e.g. 2017-07-21T17:32:28Zring\n        url:\n          type: string\n        imageId:\n          type: string\n        pipelineId:\n          type: string\n\n    analyzedVideoMetaData:\n      type: object\n      properties:\n        id:\n          type: string\n        dateAnalyzed:\n          type: string\n          format: date-time\n          description: The date-time notation as defined by RFC 3339, section 5.6. e.g. 2017-07-21T17:32:28Zring\n        url:\n          type: string\n        videoId:\n          type: string\n        pipelineId:\n          type: string\n        thumbnail:\n          type: string\n\n    #==========================================================\n    #     PIPELINES COMPONENTS\n    #==========================================================\n\n    createPipelineRequest:\n      type: object\n      properties:\n        pipeline:\n          $ref: '#/components/schemas/newPipeline'\n\n    createPipelineResponse:\n      type: object\n      properties:\n        pipeline:\n          $ref: '#/components/schemas/pipeline'\n\n    getPipelinesResponse:\n      type: object\n      properties:\n        pipelines:\n          type: array\n          items:\n            $ref: '#/components/schemas/pipeline'\n\n    newPipeline:\n      type: object\n      properties:\n        name:\n          type: string\n        metadataType:\n          type: string\n        tools:\n          type: array\n          items:\n            type: string\n            description: All the tool id's stored as strings\n\n    pipeline:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n          description: Unique id associated with the pipeline\n        metadataType:\n          type: string\n        tools:\n          type: array\n          items:\n            type: string\n            description: All the tool id's stored as strings\n\n    addToolsRequest:\n      type: object\n      properties:\n        pipelineId:\n          type: string\n        tools:\n          type: array\n          items:\n            type: string\n\n    removeToolsRequest:\n      type: object\n      properties:\n        pipelineId:\n          type: string\n        tools:\n          type: array\n          items:\n            type: string\n\n    deletePipelineRequest:\n      type: object\n      properties:\n        pipelineId:\n          type: string\n\n    getPipelineIdsResponse:\n      type: object\n      properties:\n        pipelineIds:\n          type: array\n          items:\n            type: string\n\n    getPipelineRequest:\n      type: object\n      properties:\n        pipelineId:\n          type: string\n\n    #==========================================================\n    #     ANALYSIS COMPONENTS\n    #==========================================================\n\n    analyzeImageRequest:\n      type: object\n      properties:\n        imageId:\n          type: string\n        pipelineId:\n          type: string\n\n    analyzeVideoRequest:\n      type: object\n      properties:\n        videoId:\n          type: string\n        pipelineId:\n          type: string\n\n    analyzeMediaResponse:\n      type: object\n      properties:\n        url:\n          type: string\n\n    getLiveAnalysisTokenResponse:\n      type: object\n      properties:\n        token:\n          type: string\n\n    #==========================================================\n    #     USER COMPONENTS\n    #==========================================================\n\n    getAllUsersResponse:\n      type: object\n      properties:\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/user'\n\n    user:\n      type: object\n      properties:\n        displayName:\n          type: string\n        email:\n          type: string\n        id:\n          type: string\n        isAdmin:\n          type: boolean\n\n    userRequest:\n      type: object\n      properties:\n        id:\n          type: string\n          description: user id\n\n    isAdminResponse:\n      type: object\n      properties:\n        isAdmin:\n          type: boolean\n\n    #==========================================================\n    #     TOOLS COMPONENTS\n    #==========================================================\n\n    storeAnalysisToolRequest:\n      type: object\n      properties:\n        sourceCode:\n          type: string\n          format: binary\n        model:\n          type: string\n          format: binary\n        metadataType:\n          type: string\n        toolName:\n          type: string\n\n    storeDrawingToolRequest:\n      type: object\n      properties:\n        sourceCode:\n          type: string\n          format: binary\n        metadataType:\n          type: string\n        toolName:\n          type: string\n\n    deleteToolRequest:\n      type: object\n      properties:\n        toolType:\n          type: string\n          description: Analysis or Drawing\n        toolId:\n          type: string\n\n    getAllToolsResponse:\n      type: object\n      properties:\n        tools:\n          type: array\n          items:\n            $ref: '#/components/schemas/tool'\n\n    tool:\n      type: object\n      properties:\n        toolId:\n          type: string\n        toolName:\n          type: string\n        toolType:\n          type: string\n          description: Analysis or drawing\n        toolMetadataType:\n          type: string\n        isDefaultTool:\n          type: boolean\n        isApproved:\n          type: boolean\n\n    getToolTypesResponse:\n      type: object\n      properties:\n        toolTypes:\n          type: array\n          items:\n            type: string\n\n    createToolMetaDataTypeRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        file:\n          type: string\n          format: binary\n\n    getToolMetaDataTypes:\n      type: object\n      properties:\n        metaDataTypes:\n          type: array\n          items:\n            type: string\n    \n    getToolFilesRequest:\n      type: object\n      properties:\n        toolType:\n          type: string\n          description: Must be \"drawing\" or \"analysis\"\n        toolId:\n          type: string\n    \n    getToolFilesResponse:\n      type: object\n      properties:\n        toolSourceCode:\n          $ref: '#/components/schemas/fileDownload'\n        model:\n          $ref: '#/components/schemas/fileDownload'\n          description: Will be null if request type was drawing\n          \n    reviewToolRequest:\n      type: object\n      properties:\n        toolOwnerId:\n          type: string\n        toolId:\n          type: string\n    \n    getUnreviewedToolsResponse:\n      type: object\n      properties:\n        unreviewedTools:\n          type: array\n          items:\n            $ref: '#/components/schemas/unreviewedTool'\n    \n    unreviewedTool:\n      type: object\n      properties:\n        userId:\n          type: string\n        toolId:\n          type: string\n        toolDll:\n          type: string\n        toolModel:\n          type: string\n\n    #==========================================================\n    #     DOWNLOADS COMPONENTS\n    #==========================================================\n\n    fileDownload:\n      type: object\n      properties:\n        fileUrl:\n          type: string\n          description: a download link to the file\n    \n    downloadSdkFilesResponse:\n      type: object\n      properties:\n        sdkZip:\n          $ref: '#/components/schemas/fileDownload'\n\n    #==========================================================\n    #     STREAMING COMPONENTS\n    #==========================================================\n    \n    createOneTimeTokenRequest:\n      type: object\n      properties:\n        streamingId:\n          type: string\n    \n    #==========================================================\n    #     GENERIC COMPONENTS\n    #==========================================================\n\n    emptyObject:\n      type: object\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/COS301-SE-2021/High-Five@2c437c3fa35ee3753399b68218ff8a6bfdf7f0f4/-/blob/backend/HighFive/src/Resources/application.yml",
			"externalURLs": [
				{
					"url": "https://github.com/COS301-SE-2021/High-Five/blob/2c437c3fa35ee3753399b68218ff8a6bfdf7f0f4/backend/HighFive/src/Resources/application.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}