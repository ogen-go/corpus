{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "openalpr.com-2.0.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/openalpr.com-2.0.1-swagger.yaml",
			"byteSize": 15346,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: openalpr\n  description: \u003e\n    The OpenALPR Cloud API allows you to send images to the cloud for\n    processing. \n\n    The image will be analyzed for license plates and vehicle make/models.  The results \n\n    are returned in JSON format\n  title: OpenALPR Cloud\n  version: 2.0.1\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://twitter.com/openalpr/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: http://doc.openalpr.com/api/specs/cloudapi.yaml\n      version: \"2.0\"\n  x-providerName: openalpr.com\npaths:\n  /config:\n    get:\n      description: |\n        Get a list of available results for plate and vehicle recognition\n      operationId: getConfig\n      responses:\n        \"200\":\n          description: ok\n          content:\n            application/json:\n              schema:\n                properties:\n                  countries:\n                    items:\n                      properties:\n                        code:\n                          example: us\n                          type: string\n                        name:\n                          example: North America\n                          type: string\n                      type: object\n                    type: array\n                  vehicle_labels:\n                    properties:\n                      bodytype:\n                        items:\n                          example: sedan-compact\n                          type: string\n                        type: array\n                      color:\n                        items:\n                          example: blue\n                          type: string\n                        type: array\n                      make:\n                        items:\n                          example: volvo\n                          type: string\n                        type: array\n                      makemodel:\n                        items:\n                          example: volvo_v40\n                          type: string\n                        type: array\n                      orientation:\n                        items:\n                          example: 45\n                          type: string\n                        type: array\n                      year:\n                        items:\n                          example: 2000-2004\n                          type: string\n                        type: array\n                    type: object\n  /recognize:\n    post:\n      description: |\n        Send an image for OpenALPR to analyze and provide metadata back\n        The image is sent as a file using a form data POST\n      operationId: recognizeFile\n      parameters:\n        - $ref: \"#/components/parameters/secret_key\"\n        - $ref: \"#/components/parameters/recognize_vehicle\"\n        - $ref: \"#/components/parameters/country\"\n        - $ref: \"#/components/parameters/state\"\n        - $ref: \"#/components/parameters/return_image\"\n        - $ref: \"#/components/parameters/topn\"\n        - $ref: \"#/components/parameters/prewarp\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                image:\n                  description: |\n                    The image file that you wish to analyze\n                  type: string\n                  format: binary\n              required:\n                - image\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/api_200\"\n        \"400\":\n          $ref: \"#/components/responses/api_400\"\n        \"401\":\n          $ref: \"#/components/responses/api_401\"\n        \"402\":\n          $ref: \"#/components/responses/api_402\"\n        \"403\":\n          $ref: \"#/components/responses/api_403\"\n  /recognize_bytes:\n    post:\n      description: |\n        Send an image for OpenALPR to analyze and provide metadata back\n        The image is sent as base64 encoded bytes.\n      operationId: recognizeBytes\n      parameters:\n        - $ref: \"#/components/parameters/secret_key\"\n        - $ref: \"#/components/parameters/recognize_vehicle\"\n        - $ref: \"#/components/parameters/country\"\n        - $ref: \"#/components/parameters/state\"\n        - $ref: \"#/components/parameters/return_image\"\n        - $ref: \"#/components/parameters/topn\"\n        - $ref: \"#/components/parameters/prewarp\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: |\n          The image file that you wish to analyze encoded in base64\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/api_200\"\n        \"400\":\n          $ref: \"#/components/responses/api_400\"\n        \"401\":\n          $ref: \"#/components/responses/api_401\"\n        \"402\":\n          $ref: \"#/components/responses/api_402\"\n        \"403\":\n          $ref: \"#/components/responses/api_403\"\n  /recognize_url:\n    post:\n      description: \u003e\n        Send an image for OpenALPR to analyze and provide metadata back\n\n        The image is sent as a URL.  The OpenALPR service will download the image \n\n        and process it\n      operationId: recognizeUrl\n      parameters:\n        - description: |\n            A URL to an image that you wish to analyze\n          in: query\n          name: image_url\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/secret_key\"\n        - $ref: \"#/components/parameters/recognize_vehicle\"\n        - $ref: \"#/components/parameters/country\"\n        - $ref: \"#/components/parameters/state\"\n        - $ref: \"#/components/parameters/return_image\"\n        - $ref: \"#/components/parameters/topn\"\n        - $ref: \"#/components/parameters/prewarp\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/api_200\"\n        \"400\":\n          $ref: \"#/components/responses/api_400\"\n        \"401\":\n          $ref: \"#/components/responses/api_401\"\n        \"402\":\n          $ref: \"#/components/responses/api_402\"\n        \"403\":\n          $ref: \"#/components/responses/api_403\"\nservers:\n  - url: https://api.openalpr.com/v2\ncomponents:\n  parameters:\n    country:\n      description: |\n        Defines the training data used by OpenALPR.  \"us\" analyzes \n        North-American style plates.  \"eu\" analyzes European-style plates.\n\n        This field is required if using the \"plate\" task\n      in: query\n      name: country\n      required: true\n      schema:\n        type: string\n    prewarp:\n      description: |\n        Prewarp configuration is used to calibrate the analyses for the \n        angle of a particular camera.  More information is available here\n        http://doc.openalpr.com/accuracy_improvements.html#calibration\n      in: query\n      name: prewarp\n      required: false\n      schema:\n        type: string\n        default: \"\"\n    recognize_vehicle:\n      description: |\n        If set to 1, the vehicle will also be recognized in the image\n        This requires an additional credit per request\n      in: query\n      name: recognize_vehicle\n      required: false\n      schema:\n        type: integer\n        enum:\n          - 0\n          - 1\n        default: 0\n    return_image:\n      description: |\n        If set to 1, the image you uploaded will be encoded in base64 and \n        sent back along with the response\n      in: query\n      name: return_image\n      required: false\n      schema:\n        type: integer\n        enum:\n          - 0\n          - 1\n        default: 0\n    secret_key:\n      description: |\n        The secret key used to authenticate your account.  You can view your \n        secret key by visiting \n        https://cloud.openalpr.com/\n      in: query\n      name: secret_key\n      required: true\n      schema:\n        type: string\n    state:\n      description: |\n        Corresponds to a US state or EU country code used by OpenALPR pattern \n        recognition.  For example, using \"md\" matches US plates against the \n        Maryland plate patterns.  Using \"fr\" matches European plates against \n        the French plate patterns.\n      in: query\n      name: state\n      required: false\n      schema:\n        type: string\n        default: \"\"\n    topn:\n      description: |\n        The number of results you would like to be returned for plate \n        candidates and vehicle classifications\n      in: query\n      name: topn\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 1000\n        default: 10\n  responses:\n    api_200:\n      description: OK\n      headers:\n        X-RateLimit-Limit:\n          description: Maximum number of requests allowed from your IP in a period\n          schema:\n            type: integer\n        X-Ratelimit-Remaining:\n          description: Number of remaining requests allowed during this period\n          schema:\n            type: integer\n        X-Ratelimit-Reset:\n          description: Epoch time when the next period begins\n          schema:\n            type: integer\n      content:\n        application/json:\n          schema:\n            properties:\n              credit_cost:\n                description: The number of API credits that were used to process this image\n                type: integer\n              credits_monthly_total:\n                description: The maximum number of API credits available this month\n                  according to your plan\n                type: integer\n              credits_monthly_used:\n                description: The number of API credits used this month\n                type: integer\n              data_type:\n                description: Specifies the type of data in this response\n                enum:\n                  - alpr_results\n                  - alpr_group\n                  - heartbeat\n                type: string\n              epoch_time:\n                description: Epoch time that the image was processed in milliseconds\n                type: number\n              img_height:\n                description: Height of the input image in pixels\n                type: integer\n              img_width:\n                description: Width of the uploaded image in pixels\n                type: integer\n              processing_time:\n                properties:\n                  plates:\n                    description: Time spent performing license plate recognition (in\n                      milliseconds)\n                    type: number\n                  total:\n                    description: Time spent processing all tasks (in milliseconds)\n                    type: number\n                  vehicles:\n                    description: Time spent performing vehicle recognition (in milliseconds)\n                    type: number\n                type: object\n              regions_of_interest:\n                description: Describes the areas analyzed in the input image\n                items:\n                  $ref: \"#/components/schemas/region_of_interest\"\n                type: array\n              results:\n                items:\n                  $ref: \"#/components/schemas/plate_details\"\n                type: array\n              version:\n                description: API format version\n                type: integer\n    api_400:\n      description: Parameter is invalid\n      content:\n        application/json:\n          schema:\n            properties:\n              error:\n                description: Text error message describing the invalid input\n                type: string\n    api_401:\n      description: User not authorized or invalid secret_key\n      content:\n        application/json:\n          schema:\n            properties:\n              error:\n                description: Text error message describing the invalid input\n                type: string\n    api_402:\n      description: Monthly usage limit exceeded\n      content:\n        application/json:\n          schema:\n            properties:\n              error:\n                description: Text error message describing the invalid input\n                type: string\n    api_403:\n      description: Temporary rate-limit exceeded\n      content:\n        application/json:\n          schema:\n            properties:\n              error:\n                description: Text error message describing the invalid input\n                type: string\n  schemas:\n    coordinate:\n      properties:\n        x:\n          type: integer\n        y:\n          type: integer\n      type: object\n    plate_candidate:\n      properties:\n        confidence:\n          description: Confidence percentage that the plate number is correct\n          type: number\n        matches_template:\n          description: Indicates whether the plate matched a regional text pattern\n          type: integer\n        plate:\n          description: Plate number\n          type: string\n      type: object\n    plate_details:\n      properties:\n        candidates:\n          description: All the top N candidates that could be the correct plate number\n          items:\n            $ref: \"#/components/schemas/plate_candidate\"\n          type: array\n        confidence:\n          description: Confidence percentage that the plate number is correct\n          type: number\n        coordinates:\n          description: |\n            The X/Y coordinates of the license plate in the image\n            Four coordinates are provided that form a polygon starting\n            from the top-left and moving clockwise ending in the bottom left\n          items:\n            $ref: \"#/components/schemas/coordinate\"\n          type: array\n        matches_template:\n          description: Indicates whether the plate matched a regional text pattern\n          type: integer\n        plate:\n          description: Best plate number for this plate\n          type: string\n        processing_time_ms:\n          description: Number of milliseconds to process the license plate\n          type: number\n        region:\n          description: Specified or detected region (e.g., tx for Texas)\n          type: string\n        region_confidence:\n          description: Confidence percentage that the plate region is correct\n          type: number\n        requested_topn:\n          description: The max number of results requested\n          type: integer\n        vehicle:\n          $ref: \"#/components/schemas/vehicle_details\"\n        vehicle_region:\n          $ref: \"#/components/schemas/region_of_interest\"\n      type: object\n    region_of_interest:\n      properties:\n        height:\n          type: integer\n        width:\n          type: integer\n        x:\n          type: integer\n        y:\n          type: integer\n      type: object\n    vehicle_candidate:\n      properties:\n        confidence:\n          description: confidence of value (percent)\n          type: number\n        name:\n          description: name of value\n          type: string\n      type: object\n    vehicle_details:\n      properties:\n        body_type:\n          items:\n            $ref: \"#/components/schemas/vehicle_candidate\"\n          type: array\n        color:\n          items:\n            $ref: \"#/components/schemas/vehicle_candidate\"\n          type: array\n        make:\n          items:\n            $ref: \"#/components/schemas/vehicle_candidate\"\n          type: array\n        make_model:\n          items:\n            $ref: \"#/components/schemas/vehicle_candidate\"\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/openalpr.com-2.0.1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/openalpr.com-2.0.1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}