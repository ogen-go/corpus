{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/datablade-io/daisy"
		},
		"file": {
			"name": "ingest.yaml",
			"size": 0,
			"path": "spec/rest-api/ingest.yaml",
			"byteSize": 21937,
			"content": "openapi: 3.0.0\ninfo:\n  title: ingest\n  version: '1.0'\npaths:\n  '/dae/v1/ingest/{table}':\n    parameters:\n      - schema:\n          type: string\n        name: table\n        in: path\n        required: true\n        description: table to insert data into\n    post:\n      summary: Insert data into a normal table\n      operationId: post-dae-v1-ingest-table\n      responses:\n        '200':\n          $ref: '#/components/responses/insertResp'\n        '400':\n          description: Bad Request or Insert Error\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  code:\n                    type: number\n                  error_msg:\n                    type: string\n                    minLength: 1\n                  request_id:\n                    type: string\n                    minLength: 1\n                required:\n                  - code\n                  - error_msg\n                  - request_id\n                x-examples:\n                  example-1:\n                    code: 117\n                    error_msg: 'Invalid Request, missing ''data'' field'\n                    request_id: 439edf29-7347-4a75-858c-3a9894f70011\n              examples:\n                insert-normal-missing-data-field:\n                  value:\n                    code: 117\n                    error_msg: 'Invalid Request, missing ''data'' field'\n                    request_id: 439edf29-7347-4a75-858c-3a9894f70011\n                insert-normal-internal-error:\n                  value:\n                    code: 27\n                    error_msg: |-\n                      Code: 27, e.displayText() = DB::ParsingException: Cannot parse input: expected ']' before: ', 1],[2, \"2021-04\"]]\\n\\n}': (at row 1)\n                       (version 21.7.1.1)\n                    request_id: 6c35e8a7-68c3-4808-b4ff-c42fbe74433c\n                insert-normal-missing-column-field:\n                  value:\n                    code: 117\n                    error_msg: 'Invalid Request, ''columns'' field is missing'\n                    request_id: e1f3c35a-9182-4cc6-ac42-7c653445f6e3\n                insert-normal-invalid-column-field:\n                  value:\n                    code: 117\n                    error_msg: 'Invalid Request, ''columns'' field is invalid'\n                    request_id: 35d04828-4f52-4f54-8b63-e7e41b157d55\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: mode\n          description: 'ingest mode, only works for DistributedMergeTree engine. ''''sync\"ï¼š daisy inserts data asynchronously but does not track the insert status.''async'' the default insert mode, daisy inserts data asynchronously but track the status and retry if insert fails. ''ordered'' daisy inserts data synchronously. '\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      description: insert data into a normal table. daisy automatically choose the database belongs to the user to insert.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              x-examples:\n                example-1:\n                  columns:\n                    - i\n                    - t\n                  data:\n                    - - 1\n                      - '2021-02-03 01:00:00'\n                    - - 2\n                      - 2021-04\n              properties:\n                columns:\n                  description: 'columns to insert, array of column names'\n                  type: array\n                  items: {}\n                data:\n                  type: array\n                  description: 'data to be insert. Array of Array, each row is a single array.'\n                  items:\n                    type: array\n                    items:\n                      type: object\n              required:\n                - columns\n                - data\n            examples:\n              insert-req-1:\n                value:\n                  columns:\n                    - i\n                    - t\n                  data:\n                    - - 1\n                      - '2021-02-03 01:00:00'\n                    - - 2\n                      - 2021-04\n        description: 'insert request, include columns and data'\n  '/dae/v1/ingest/rawstores/{store}':\n    post:\n      summary: Insert data into a rawstore table\n      operationId: insert-rawstore\n      responses:\n        '200':\n          $ref: '#/components/responses/insertResp'\n        '400':\n          description: Bad Request or Insert Error\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  code:\n                    type: number\n                  error_msg:\n                    type: string\n                    minLength: 1\n                  request_id:\n                    type: string\n                    minLength: 1\n                required:\n                  - code\n                  - error_msg\n                  - request_id\n                x-examples:\n                  example-1:\n                    code: 117\n                    error_msg: 'Invalid Request, missing ''data'' field'\n                    request_id: db336a87-6405-4d89-84b6-9b5d71a9fc80\n              examples:\n                ingest-rawstore-missing-data-field:\n                  value:\n                    code: 117\n                    error_msg: 'Invalid Request, missing ''data'' field'\n                    request_id: db336a87-6405-4d89-84b6-9b5d71a9fc80\n                ingest-rawstore-enrichment-invalid-type:\n                  value:\n                    code: 117\n                    error_msg: 'Invalid enrichment, only ''json_path'' and ''regex'' are supported right now'\n                    request_id: 15a7c017-6ad9-447d-b11c-da6e8388e306\n                ingest-rawstore-enrichment-missing-rule:\n                  value:\n                    code: 117\n                    error_msg: 'Invalid enrichment, either ''rawstore_time_extraction_type'' or ''rawstore_time_extraction_rule'' is missing '\n                    request_id: 80a2d63c-71f0-4413-b56b-97131e38ebcc\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              x-examples:\n                example-1:\n                  data:\n                    - _raw: '{\"log\":{\"time\":\"2021-03-21 00:10:23\"}}'\n                      host: host1\n                      source: app1\n                      sourcetype: log\n                    - _raw: '{\"log\":{\"time\":\"2021-03-22 00:12:23\"}}'\n                      host: host1\n                      source: app2\n                      sourcetype: log\n                    - _raw: '{\"log\":{\"time\":\"2021-03-23 00:12:23\"}}'\n                      host: host1\n                      source: app3\n                      sourcetype: log\n                      _time: '2021-04-01 08:08:08'\n                  enrichment:\n                    time_extraction_type: json_path\n                    time_extraction_rule: log.time\n              properties:\n                data:\n                  type: array\n                  uniqueItems: true\n                  minItems: 1\n                  items:\n                    type: object\n                    properties:\n                      _raw:\n                        type: string\n                        minLength: 1\n                        description: 'the raw log, it can be any semi-structural text. ''_time'' value can be extracted from this field automatically or by rule.'\n                      host:\n                        type: string\n                        minLength: 1\n                      source:\n                        type: string\n                        minLength: 1\n                      sourcetype:\n                        type: string\n                        minLength: 1\n                      _time:\n                        type: string\n                        minLength: 1\n                        description: 'If _time presents, the value will be used. Secondly if ''enrichment'' field has been configured with either ''json_path'' or ''regex'' rule, the rule will be used to extract _time from _raw column. Last, if no ''enrichment'' field, it tries to automatically extract _time by finding any possible ISO-8601 timestamp from _raw field.'\n                    required:\n                      - _raw\n                      - host\n                      - source\n                      - sourcetype\n                enrichment:\n                  type: object\n                  properties:\n                    time_extraction_type:\n                      type: string\n                      minLength: 1\n                      description: 'either ''json_path'' or ''regex'', only support these two modes now.'\n                    time_extraction_rule:\n                      type: string\n                      minLength: 1\n                      description: 'If ''time_extraction_type'' is ''json_path'', then ''time_extraction_rule'' should be the json path of the _time in _raw field; otherwise, if it is ''regex'', a regex expression with group ''_time'' should be specified with PCRE2 syntax. for example, ''^(?P\u003c_time\u003e.+),\\\\s+\\\\[\\\\w+\\\\]'''\n                  required:\n                    - time_extraction_type\n                    - time_extraction_rule\n              required:\n                - data\n            examples:\n              insert-rawstore-json:\n                value:\n                  data:\n                    - _raw: '{\"log\":{\"time\":\"2021-03-21 00:10:23\"}}'\n                      host: host1\n                      source: app1\n                      sourcetype: log\n                    - _raw: '{\"log\":{\"time\":\"2021-03-22 00:12:23\"}}'\n                      host: host1\n                      source: app2\n                      sourcetype: log\n                    - _raw: '{\"log\":{\"time\":\"2021-03-23 00:12:23\"}}'\n                      host: host1\n                      source: app3\n                      sourcetype: log\n                      _time: '2021-04-01 08:08:08'\n                  enrichment:\n                    time_extraction_type: json_path\n                    time_extraction_rule: log.time\n              insert-rawstore-regex:\n                value:\n                  enrichment:\n                    time_extraction_type: regex\n                    time_extraction_rule: '^(?P\u003c_time\u003e.+),\\s+\\[\\w+\\]'\n                  data:\n                    - _raw: '2021-03-21T00:10:23+01, [Apache] This is a error.'\n                      host: host1\n                      source: apache\n                      sourcetype: access-log\n                    - _raw: '02 Mar 2021 00:10:23Z, [Apache] This is a error.'\n                      host: host2\n                      source: apache\n                      sourcetype: access-log\n                    - _raw: '2021-03-23 00:10:23, [Apache] This is a error.'\n                      host: host3\n                      source: apache\n                      sourcetype: access-log\n          application/xml:\n            schema:\n              type: object\n              properties: {}\n        description: Request contains the array of rows to be inserted into rawstore. rawstore has predefined schema and Daisy tries to extract _time automatically or by rule from _raw field if _time field is absent.\n      description: Insert data into a rawstore table\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: mode\n          description: 'ingest mode, only works for DistributedMergeTree engine. ''''sync\"ï¼š daisy inserts data asynchronously but does not track the insert status.''async'' the default insert mode, daisy inserts data asynchronously but track the status and retry if insert fails. ''ordered'' daisy inserts data synchronously. '\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n    parameters:\n      - schema:\n          type: string\n        name: store\n        in: path\n        required: true\n        description: rawstore name to insert data into\n  /dae/v1/ingest/statuses:\n    parameters:\n      - name: x-daisy-request-id\n        in: header\n        required: false\n        description: the unique id to identify a ddl request\n        schema:\n          type: string\n      - name: x-daisy-query-id\n        in: header\n        required: false\n        description: the unique id to identify a ddl request\n        schema:\n          type: string\n      - name: user\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: x-daisy-user\n        in: header\n        required: false\n        schema:\n          type: string\n      - name: password\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: x-daisy-key\n        in: header\n        required: false\n        schema:\n          type: string\n      - name: quota_key\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: x-daisy-quota\n        in: header\n        required: false\n        schema:\n          type: string\n    post:\n      summary: Batch query insert status\n      operationId: post-dae-v1-ingest-statuses\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                x-examples:\n                  example-1:\n                    request_id: 9643d4ee-09c9-4b07-8941-f56b11573c24\n                    status:\n                      - poll_id: NjM1NGZiMjEtZWU1MC00OTI1LTg1ZmMtY2UxMTAwNWEyZTc2IWAkZGVmYXVsdC50ZXN0MyFgJGRlZmF1bHQhYCRxaWhvb2RlbWFjYm9vay1wcm8tNS5sb2NhbCFgJDE2MjMyMDg0MzEzODY=\n                        progress: 100\n                        status: Succeeded\n                properties:\n                  request_id:\n                    type: string\n                    minLength: 1\n                  status:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      type: object\n                      properties:\n                        poll_id:\n                          type: string\n                          minLength: 1\n                        progress:\n                          type: number\n                          description: 'progess in percentage, 100 means complete'\n                        status:\n                          type: string\n                          minLength: 1\n                          description: |-\n                            \"Succeeded\": completed successfully\n                            \"Failed\": insert fail\n                            \"Processing\": insert is still in progress\n                            \"Unknown\": the insert request is not found in daisy cache. It might be expired.\n                      required:\n                        - poll_id\n                        - progress\n                        - status\n                required:\n                  - request_id\n                  - status\n              examples:\n                status-poll-succeed:\n                  value:\n                    request_id: 9643d4ee-09c9-4b07-8941-f56b11573c24\n                    status:\n                      - poll_id: NjM1NGZiMjEtZWU1MC00OTI1LTg1ZmMtY2UxMTAwNWEyZTc2IWAkZGVmYXVsdC50ZXN0MyFgJGRlZmF1bHQhYCRxaWhvb2RlbWFjYm9vay1wcm8tNS5sb2NhbCFgJDE2MjMyMDg0MzEzODY=\n                        progress: 100\n                        status: Succeeded\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  code:\n                    type: number\n                  error_msg:\n                    type: string\n                    minLength: 1\n                  request_id:\n                    type: string\n                    minLength: 1\n                required:\n                  - code\n                  - error_msg\n                  - request_id\n                x-examples:\n                  example-1:\n                    code: 1010\n                    error_msg: 'Invalid query id: MTZmM2FiODgtYzFkYi00NzIzLWI4ZjMtYmEyNzRmZjFlNTYwIWAkZGVmYXVsdC5zdG9yZTEhYCRkZWZhdWx0IWAkcWlob29kZW1hY2Jv2stcHJvLTUubG9jYWwhYCQxNjIzMjA2OTE4Mjkz ErrorCode: 36'\n                    request_id: 2fa6e152-ecf6-47fc-a9f4-9b78b71c6b9b\n              examples:\n                status-poll-invalid-pollId:\n                  value:\n                    code: 1010\n                    error_msg: 'Invalid query id: MTZmM2FiODgtYzFkYi00NzIzLWI4ZjMtYmEyNzRmZjFlNTYwIWAkZGVmYXVsdC5zdG9yZTEhYCRkZWZhdWx0IWAkcWlob29kZW1hY2Jv2stcHJvLTUubG9jYWwhYCQxNjIzMjA2OTE4Mjkz ErrorCode: 36'\n                    request_id: 2fa6e152-ecf6-47fc-a9f4-9b78b71c6b9b\n                All poll_ids are invalid:\n                  value:\n                    code: 1010\n                    error_msg: '''poll_ids'' are all invalid'\n                    request_id: ddd87890-3dd3-4ce5-ac46-d3d0788f348b\n      description: Batch query insert status\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              x-examples:\n                example-1:\n                  poll_ids:\n                    - NmU0OTRlYjMtOWU0Zi00ZDA4LWE1ZGQtNjYyNTM0YmRlZTc2IWAkZGVmYXVsdC5zdG9yZTIhYCRkZWZhdWx0IWAkbG9jYWxob3N0OjgxMjMhYCQxNjIwOTY5Mjc5MjQz\n                  channel: '16091421817298718387'\n              properties:\n                poll_ids:\n                  type: array\n                  description: poll_id array of the insert requests\n                  items:\n                    type: string\n                channel:\n                  type: string\n                  minLength: 1\n                  description: identified the node to query\n              required:\n                - poll_ids\n                - channel\n            examples:\n              batch-query-1:\n                value:\n                  poll_ids:\n                    - NmU0OTRlYjMtOWU0Zi00ZDA4LWE1ZGQtNjYyNTM0YmRlZTc2IWAkZGVmYXVsdC5zdG9yZTIhYCRkZWZhdWx0IWAkbG9jYWxob3N0OjgxMjMhYCQxNjIwOTY5Mjc5MjQz\n                  channel: '16091421817298718387'\n        description: Batch query request\ncomponents:\n  schemas: {}\n  responses:\n    insertResp:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            description: ''\n            type: object\n            x-examples:\n              example-1:\n                poll_id: NmU0OTRlYjMtOWU0Zi00ZDA4LWE1ZGQtNjYyNTM0YmRlZTc2IWAkZGVmYXVsdC5zdG9yZTIhYCRkZWZhdWx0IWAkbG9jYWxob3N0OjgxMjMhYCQxNjIwOTY5Mjc5MjQz\n                channel: '16091421817298718387'\n                request_id: 1870aafa-5f6e-46aa-8e9b-77b7f286406f\n            properties:\n              poll_id:\n                type: string\n                minLength: 1\n                description: 'use to query the insert status of this request in async mode, only valid for DistributedMergeTree engine'\n              channel:\n                type: string\n                minLength: 1\n                description: identify the node which perform the insert operation\n              request_id:\n                type: string\n                minLength: 1\n            required:\n              - poll_id\n              - channel\n              - request_id\n          examples:\n            insert-success-1:\n              value:\n                poll_id: NmU0OTRlYjMtOWU0Zi00ZDA4LWE1ZGQtNjYyNTM0YmRlZTc2IWAkZGVmYXVsdC5zdG9yZTIhYCRkZWZhdWx0IWAkbG9jYWxob3N0OjgxMjMhYCQxNjIwOTY5Mjc5MjQz\n                channel: '16091421817298718387'\n                request_id: 1870aafa-5f6e-46aa-8e9b-77b7f286406f\n",
			"canonicalURL": "/github.com/datablade-io/daisy@b5c9b7b1cc496c1fd45cb5678c273b089d899c63/-/blob/spec/rest-api/ingest.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/datablade-io/daisy/blob/b5c9b7b1cc496c1fd45cb5678c273b089d899c63/spec/rest-api/ingest.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}