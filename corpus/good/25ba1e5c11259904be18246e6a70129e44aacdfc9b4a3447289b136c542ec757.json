{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tateru/tateru"
		},
		"file": {
			"name": "machine-service.api.yaml",
			"size": 0,
			"path": "api/machine-service.api.yaml",
			"byteSize": 5827,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Tateru Machine Service is a repository of machine metadata and manager routing information.\n  version: 0.0.7\n  title: Tateru Machine Service API\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: inventory\n    description: Inventory scanning\n  - name: deploy\n    description: Deployment operations\npaths:\n  /v1/machines:\n    get:\n      tags:\n        - inventory\n      summary: fetches all known machines\n      operationId: fetchMachines\n      description: |\n        Returns all currently active machine objects.\n      parameters:\n        - name: alias\n          in: query\n          description: Filter on known aliases for machines (e.g. name)\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of machine objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Machine'\n  '/v1/machines/{uuid}':\n    get:\n      tags:\n        - inventory\n        - deploy\n      summary: fetch a known machine\n      operationId: fetchMachine\n      description: |\n        Returns one specific active machine object.\n      parameters:\n        - name: uuid\n          in: path\n          description: The machine UUID to fetch\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of machine objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Machine'\n        '404':\n          description: the requested machine was not found\n  '/v1/machines/{uuid}/boot-installer':\n    post:\n      tags:\n        - deploy\n      summary: makes a machine boot into the Tateru installer environment\n      operationId: bootInstaller\n      description: |\n        Calling this action will cause a machine to boot into the Tateru installer\n        environment, possibly by reconfiguring bootup order and doing a network boot.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BootInstallerRequest'\n      parameters:\n        - name: uuid\n          in: path\n          description: The machine UUID to boot the installer on\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: the request succeeded\n        '404':\n          description: the requested machine was not found\n        '409':\n          description: the requested machine is already subject to another operation\n        '500':\n          description: the request failed\n  '/v1/machines/{uuid}/installer-callback':\n    post:\n      tags:\n        - deploy\n      summary: send an installation callback to notify Tateru that an installer has booted\n      operationId: installerCallback\n      description: |\n        When the Tateru installation software has booted it will call this endpoint to provide inventory\n        and address to be reached at. It will be provided with an SSH public key to allow as response.\n      parameters:\n        - name: uuid\n          in: path\n          description: The machine UUID the installer is running on\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CallbackRequest'\n      responses:\n        '200':\n          description: the request succeeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallbackResponse'\n        '404':\n          description: the requested machine was not found\ncomponents:\n  schemas:\n    Machine:\n      type: object\n      required:\n        - uuid\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        serialNumber:\n          type: string\n          example: XYZ1234\n        assetTag:\n          type: string\n          example: '00203'\n        name:\n          type: string\n          example: VMLNX01\n        managedBy:\n          type: string\n          description: URL of the manager that is the source of this machine record\n          example: 'http://tateru-vsphere.corp.local:7707/'\n        installerAddress:\n          type: string\n          description: Address of the installer if known (populated by installer-callback)\n          example: '2001:db8::1234'\n        sshPorts:\n          $ref: '#/components/schemas/SSHPorts'\n    SSHPorts:\n      type: object\n      required:\n        - installer\n      properties:\n        installer:\n          type: integer\n          minimum: 1\n          maximum: 65535\n          example: 22\n    CallbackRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n          example: XYZ1234\n        assetTag:\n          type: string\n          example: '00203'\n        sshPorts:\n          $ref: '#/components/schemas/SSHPorts'\n      required:\n        - sshPorts\n    CallbackResponse:\n      type: object\n      required:\n        - ssh_pub_key\n      properties:\n        ssh_pub_key:\n          type: string\n          example: 'ssh-ed25519 AAA[..]AAV user@laptop'\n    BootInstallerRequest:\n      type: object\n      properties:\n        nonce:\n          description: An arbitary string that is used to offer idempotency.\n          type: string\n          example: 'd290f1ff-6c54-4b01-90e6-d723748f0851'\n        ssh_pub_key:\n          description: The SSH public key to allow SSH access to the installer environment\n          type: string\n          example: 'ssh-ed25519 AAA[..]AAV user@laptop'\n      required:\n        - ssh_pub_key\n        - nonce\n",
			"canonicalURL": "/github.com/tateru/tateru@ae9792172f26890d953f9c543117f95f833317a1/-/blob/api/machine-service.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tateru/tateru/blob/ae9792172f26890d953f9c543117f95f833317a1/api/machine-service.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}