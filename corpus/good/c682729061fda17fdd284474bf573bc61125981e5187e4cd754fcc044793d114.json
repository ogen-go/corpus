{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/g0dkar/aulas-api-comentarios"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 8368,
			"content": "openapi: 3.0.1\n\n# Copiar e colar todo esse texto em https://editor.swagger.io/\n#\n# Se preferir, é possível utilizar este editor localmente utilizando o Docker:\n# docker run -d -p 80:8080 swaggerapi/swagger-editor\n#\n# Há também uma extensão para o VisualStudio Code: https://min.immo/pgShWIS\n\ninfo:\n  title: \"API de Comentários\"\n  description: \"Uma API simples para um serviço anônimo de postagens estilo Twitter.\"\n  contact:\n    email: rafael@lins.net.br\n  license:\n    name: MIT\n    url: https://mit-license.org/\n  version: 1.0.0\n\nservers:\n  - url: http://localhost:8080/\n  - url: http://localhost/\n\ntags:\n  - name: \"Comentários\"\n    description: \"Operações que controlam os comentários (criação, leitura, respostas, etc.)\"\n\npaths:\n  /comentario:\n    post:\n      tags:\n        - \"Comentários\"\n      summary: \"Cria um novo comentário\"\n      operationId: \"addComment\"\n      requestBody:\n        description: \"O comentário que será criado\"\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NovoComentario\"\n        required: true\n      responses:\n        \"200\":\n          description: \"Comentário cadastrado com sucesso\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comentario\"\n        \"400\":\n          description: \"Entrada inválida (por exemplo, um campo ausente)\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErroApi\"\n    get:\n      tags:\n        - \"Comentários\"\n      description: \"Retorna uma lista de comentários sempre ordenados do mais recente para o mais antigo\"\n      summary: \"Lista de comentários\"\n      operationId: \"listComment\"\n      parameters:\n        - name: primeiro\n          in: query\n          description: \"Índice do primeiro comentário a se retornar na lista (começa em 0)\"\n          required: false\n          schema:\n            type: integer\n            format: int64\n            default: 0\n        - name: tamanho\n          in: query\n          description: \"Tamanho máximo esperado da lista\"\n          required: false\n          schema:\n            type: integer\n            format: int64\n            default: 25\n            minimum: 25\n            maximum: 500\n        - name: filhos\n          in: query\n          description: \"Se a lista deve ou não trazer todos os comentários filhos (recursivamente) ou apenas 1 nível de comentários filhos.\"\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: \"Sucesso\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListaComentarios\"\n  /comentario/{id}:\n    get:\n      tags:\n        - \"Comentários\"\n      description: \"Retorna uma linha completa de comentários a partir do comentário especificado\"\n      summary: \"Retorna um comentário\"\n      operationId: \"getComment\"\n      parameters:\n        - name: id\n          in: path\n          description: \"ID do comentário\"\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: filhos\n          in: query\n          description: \"Se os filhos do comentário especificado devem ser retornados\"\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        \"200\":\n          description: \"Sucesso\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComentarioCompleto\"\n        \"404\":\n          description: \"O comentário especificado não existe\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErroApi\"\n  /comentario/{id}/votar:\n    put:\n      tags:\n        - \"Comentários\"\n      description: \"Adiciona um voto no comentário especificado\"\n      summary: \"Vota em comentário\"\n      operationId: \"voteComment\"\n      parameters:\n        - name: id\n          in: path\n          description: \"ID do comentário\"\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"Sucesso\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comentario\"\n        \"404\":\n          description: \"O comentário especificado não existe\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErroApi\"\n\ncomponents:\n  schemas:\n    Comentario:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          description: \"Identificador único deste comentário\"\n          example: 1\n        idPai:\n          type: integer\n          format: int64\n          description: \"Identificador do comentário pai deste comentário (opcional)\"\n          example: 123\n          nullable: true\n        texto:\n          type: string\n          maxLength: 280\n          description: \"Texto do comentário\"\n          example: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n        pontos:\n          type: integer\n          format: int64\n          description: \"Quantidade de Pontos dados a este comentário\"\n          example: 10\n        dataHora:\n          type: string\n          format: datetime\n          description: \"Data e hora de quando o comentário foi feito\"\n          example: \"2022-03-04T10:20:30.456Z\"\n    ComentarioCompleto:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          description: \"Identificador único deste comentário\"\n          example: 1\n        idPai:\n          type: integer\n          format: int64\n          description: \"Identificador do comentário pai deste comentário (opcional)\"\n          example: 123\n          nullable: true\n        texto:\n          type: string\n          maxLength: 280\n          description: \"Texto do comentário\"\n          example: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n        pontos:\n          type: integer\n          format: int64\n          description: \"Quantidade de Pontos dados a este comentário\"\n          example: 10\n        dataHora:\n          type: string\n          format: datetime\n          description: \"Data e hora de quando o comentário foi feito\"\n          example: \"2022-03-04T10:20:30.456Z\"\n        filhos:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ComentarioCompleto\"\n    NovoComentario:\n      type: object\n      required:\n        - \"texto\"\n      properties:\n        idPai:\n          type: integer\n          format: int64\n          description: \"Identificador do comentário pai deste comentário (opcional)\"\n          example: 123\n          nullable: true\n        texto:\n          type: string\n          maxLength: 280\n          description: \"Texto do comentário\"\n          example: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n    ErroApi:\n      type: object\n      required:\n        - \"codigo\"\n        - \"status\"\n        - \"dataHora\"\n      properties:\n        codigo:\n          type: integer\n          format: int32\n          description: \"Código HTTP do erro (deve ser o mesmo da resposta HTTP)\"\n          example: 500\n        status:\n          type: string\n          description: \"Descrição textual do status para desenvolvedores (deve ser o mesmo da resposta HTTP)\"\n          example: \"INTERNAL_SERVER_ERROR\"\n        dataHora:\n          type: string\n          format: datetime\n          description: \"Data e hora de quando o erro aconteceu\"\n          example: \"2022-03-04T10:20:30.456Z\"\n        mensagem:\n          type: string\n          description: \"Mensagem de erro apropriada para ser mostrada ao usuário (opcional)\"\n          example: \"Erro desconhecido no servidor. Por favor, tente novamente.\"\n    ListaComentarios:\n      type: object\n      properties:\n        quantidade:\n          type: integer\n          format: int32\n          description: \"Quantidade de comentários de nível raíz estão presentes na lista\"\n          example: 10\n        comentarios:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ComentarioCompleto\"\n",
			"canonicalURL": "/github.com/g0dkar/aulas-api-comentarios@11adcfb08f6dca8734a5fdccf7ed2f82ca39083d/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/g0dkar/aulas-api-comentarios/blob/11adcfb08f6dca8734a5fdccf7ed2f82ca39083d/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}