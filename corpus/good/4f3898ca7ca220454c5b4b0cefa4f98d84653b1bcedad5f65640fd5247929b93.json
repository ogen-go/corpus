{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mu-box/core"
		},
		"file": {
			"name": "shaman-dns-api.yaml",
			"size": 0,
			"path": "docs/shaman-dns-api.yaml",
			"byteSize": 4153,
			"content": "openapi: 3.0.0\n# Added by API Auto Mocking Plugin\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/danhunsaker/shaman-dns/1.0.0\ninfo:\n  description: API spec for Nanobox's Shaman DNS server\n  version: \"1.0.0\"\n  title: Shaman DNS API\n  contact:\n    name: Dan Hunsaker\n    email: danhunsaker@gmail.com\n  license:\n    name: MIT License\n    url: https://choosealicense.com/licenses/mit/\ntags:\n  - name: zone\n    description: \"The operations that apply to the entire domain list\"\n  - name: domain\n    description: \"The operations that apply to a single domain\"\npaths:\n  /records:\n    post:\n      summary: Adds the domain and full record\n      tags: [domain]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Domain\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Domain\"\n        default:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  err:\n                    type: string\n                example: \n                  err: 'exit status 2: unexpected argument'\n    get:\n      summary: Returns a list of domains we have records for  \n      tags: [zone]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n              example:\n                - nanopack.io\n    put:\n      summary: Update all domains and records (replaces all)\n      tags: [zone]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Domain\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Domain\"\n  /records/{domain}:\n    parameters:\n      - name: domain\n        in: path\n        required: true\n        description: the domain name\n        schema:\n          type: string\n    get:\n      summary: Returns the records for that domain\n      tags: [domain]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Domain\"\n    put:\n      summary: Update domain's records (replaces all)\n      tags: [domain]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Domain\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Domain\"\n    delete:\n      summary: Delete a domain\n      tags: [domain]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  msg:\n                    type: string\n                example: \n                  msg: success\ncomponents:\n  schemas:\n    Domain:\n      type: object\n      properties:\n        domain:\n          type: string\n        records:\n          type: array\n          items:\n            type: object\n            properties:\n              ttl:\n                type: integer\n              class:\n                type: string\n              type:\n                type: string\n              address:\n                type: string\n      example:\n        domain: nanopack.io.\n        records:\n          - ttl: 60\n            class: IN\n            type: A\n            address: 127.0.0.1\n          - ttl: 60\n            class: IN\n            type: A\n            address: 127.0.0.2\n  securitySchemes:\n    Token:\n      type: apiKey\n      in: header\n      name: X-Auth-Token\nsecurity:\n  - Token: []",
			"canonicalURL": "/github.com/mu-box/core@a66c79bb43fe850bcd6c1ede58051555e1736204/-/blob/docs/shaman-dns-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mu-box/core/blob/a66c79bb43fe850bcd6c1ede58051555e1736204/docs/shaman-dns-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}