{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pinnacleapi/openapi-specification"
		},
		"file": {
			"name": "b2b betsapi-oas.yaml",
			"size": 0,
			"path": "b2b betsapi-oas.yaml",
			"byteSize": 58707,
			"content": "openapi: 3.0.0\n\ninfo:\n  version: 2.2.7\n  title: Pinnacle - B2B Bets API Reference\n  description: |\n    B2B API to place bets.  Main difference comparing to the Public Bets API is that B2B Bets API captures unique id off the actual bettor in the partner's system.    \n    \n    It should be used in the conjunction with the Public API to get the fixtures, odds and bets.\n\n    # Authentication \n    \n    Access is restricted by IP address. Partner would have to provide the list of IP addresses from where it would access the API. \n    \n  \n    B2B API authentication requires both:  \n      - [HTTP Basic access authentication](https://en.wikipedia.org/wiki/Basic_access_authentication)\n      - Api key authentication\n\n      Partner key identifies the partner and can be used with any client credentials partner may have.  \n      Pinnacle will provide the api key (partner key) upon approval to use the B2B API. \n \n    You need to send `Authorization ` and `X-PARTNER-KEY` HTTP headers, e.g.\n    \n    ```\n    \n      POST /b2b/v2/bets/straight HTTP/1.1\n      User-Agent: Apache-HttpClient/4.5.2\n      Host: api.pinnacle.com\n      Authorization: Basic am9uYXRoYW46cmljaG1hbg==\n      Accept-Encoding: gzip, deflate\n      X-Partner-Key: B4B480D3-EB1B-44DB-AA9C-197A229EF717\n      Connection: Keep-Alive\n    ```\n   \n    \n  x-logo:\n    url: \u003e-\n      https://avatars2.githubusercontent.com/u/31601407?s=400\u0026u=f3c6e1cfc8a26665e4a4df6d8da4a7ee527aeceb\u0026v=4\n\nservers:\n  - url: 'https://api.pinnacle.com/'\n    description: Production server\n\npaths:\n  /b2b/v2/bets/straight:\n    post:\n      tags:\n        - Place Bets      \n      summary: Place straight bets.\n      operationId: Bets_Straight\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiBetStraightResponse'\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponseWithErrorRef'      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MultiBetStraightRequest'\n        description: The Place Straight Bet request.\n        required: true      \n  /b2b/v1/bets/special:\n    post:\n      tags:\n        - Place Bets\n      summary: Place specials bets.\n      operationId: Bets_Special\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiBetSpecialBetResponse'\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponseWithErrorRef'      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MultiBetSpecialBetRequest'\n        description: The Place Special Bet request.\n        required: true      \n  /b2b/v2/bets/parlay:\n    post:\n      tags:\n        - Place Bets\n      summary: Place parlay bets.\n      operationId: Bets_Parlay\n      requestBody:\n        required: true \n        description: Place Parlay Bet request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlaceParlayBetRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceParlayBetResponse'\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponseWithErrorRef'      \n\n      \n  /b2b/v1/bets/teaser:\n    post:\n      tags:\n        - Place Bets\n      summary: Place teaser bets.\n      operationId: Bets_Teaser\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultiBetTeaserResponse'\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponseWithErrorRef'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MultiBetTeaserRequest'\n        description: The PlaceTeaser request.\n        required: true\n\ncomponents:\n  securitySchemes:\n    partnerKey:\n      type: apiKey\n      name: X-PARTNER-KEY\n      in: header\n    basicAuth:\n      type: http\n      scheme: basic\n\n  schemas:\n\n    # Straight Bet\n    MultiBetStraightRequest:\n      type: object\n      properties:\n        bets:\n          type: array\n          description: The individual bets.\n          items:\n            $ref: '#/components/schemas/StraightBetRequest'\n      description: ''\n    StraightBetRequest:\n      type: object\n      properties:\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Client generated GUID for uniquely identifying the bet.\n        acceptBetterLine:\n          type: boolean\n        oddsFormat:\n          $ref: '#/components/schemas/OddsFormat'\n        winRiskStake:\n          type: string\n          description: Whether the stake amount is risk or win amount. Options are `WIN` or `RISK`\n          enum:\n            - WIN\n            - RISK\n        stake:\n          type: number\n          format: double\n          example: 1.23\n          description: amount in clientâ€™s currency.\n        betType:\n          type: string\n          example: SPREAD\n          description: 'Type of the bet'\n          enum:\n            - MONEYLINE\n            - SPREAD\n            - TOTAL_POINTS          \n            - TEAM_TOTAL_POINTS          \n        sportId:\n          type: integer\n          format: int32\n          description: Sport identification\n          example: 29\n        eventId:\n          type: integer\n          format: int64\n          description: Event identification\n          example: 4568956   \n        periodNumber:\n          type: integer\n          format: int32\n          description: Period number. Ex. for soccer, 0 = Match, 1 = First Half\n          example: 0             \n        lineId:\n          type: integer\n          format: int64\n          description: Line identification that bet was placed on.\n          example: 546546125\n        altLineId:\n          type: integer\n          format: int64\n          description: Alternate line identification that bet was placed on.          \n          example: 87456166512\n        pitcher1MustStart:\n          type: boolean  \n          description: Baseball only. Refers to the pitcher for Team1. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.\n        pitcher2MustStart:\n          type: boolean  \n          description: Baseball only. Refers to the pitcher for Team2. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.   \n        fillType:\n          type: string\n          enum: \n            - NORMAL\n            - FILLANDKILL\n            - FILLMAXLIMIT\n          default: NORMAL\n          \n          description: \u003e\n            `NORMAL` - bet will be placed on specified stake.\n            `FILLANDKILL` - If the stake is over the max limit, bet will be placed on max limit, otherwise it will be placed on specified stake.\n            \n            `FILLMAXLIMIT` - bet will be places on max limit, stake amount will be ignored. Please note that maximum limits can change at any moment, which may result in risking more than anticipated. \n        team:\n          type: string\n          description: Chosen Team. Required for SPREAD, MONEYLINE or TEAM_TOTAL_POINTS bet types.\n          enum: \n            - TEAM1\n            - TEAM2\n            - DRAW\n        side:\n          type: string\n          description: Chosen side type. Required for TOTAL_POINTS or TEAM_TOTAL_POINTS bet types.\n          enum:\n            - OVER\n            - UNDER\n        externalRef:\n          description: Bet reference identifier in the partner's system.\n          example: 12345\n          type: string\n        sourceId:\n          description: Bettor identifier in the partner's system.\n          example: ABC1234\n          type: string\n        ext:\n           $ref: '#/components/schemas/PlaceBetExtension'\n    MultiBetStraightResponse:\n      type: object\n      properties:\n        bets:\n          type: array\n          description: The individual bets.\n          items:\n            $ref: '#/components/schemas/StraightBetResponse'\n      description: ''\n    StraightBetResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          description: Status of the request.\n          enum:\n           - ACCEPTED\n           - PENDING_ACCEPTANCE\n           - PROCESSED_WITH_ERROR\n        errorCode:\n          type: string\n          description: ''\n          enum:\n            - ABOVE_EVENT_MAX\n            - ABOVE_MAX_BET_AMOUNT\n            - ALL_BETTING_CLOSED\n            - ALL_LIVE_BETTING_CLOSED\n            - BELOW_MIN_BET_AMOUNT\n            - BLOCKED_BETTING\n            - BLOCKED_CLIENT\n            - DUPLICATE_UNIQUE_REQUEST_ID\n            - INCOMPLETE_CUSTOMER_BETTING_PROFILE\n            - INSUFFICIENT_FUNDS\n            - INVALID_COUNTRY\n            - INVALID_CUSTOMER_PROFILE\n            - INVALID_EVENT\n            - INVALID_ODDS_FORMAT\n            - INVALID_PARTNER\n            - INVALID_SOURCEID\n            - LICENCE_RESTRICTION_LIVE_BETTING_BLOCKED\n            - LIMITS_CONFIGURATION_ISSUE\n            - LIMIT_PRICE_IS_WORST_THAN_CURRENT\n            - LINE_CHANGED\n            - LISTED_PITCHERS_SELECTION_ERROR\n            - OFFLINE_EVENT\n            - PARTNER_PROFILE_IS_NOT_FOUND\n            - PARTNER_SOURCE_IP_IS_INVALID\n            - PAST_CUTOFFTIME\n            - RED_CARDS_CHANGED\n            - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\n            - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\n            - RESUBMIT_REQUEST\n            - SCORE_CHANGED\n            - SOURCEID_TOO_LONG\n            - TIME_RESTRICTION            \n        betId:\n          type: integer\n          format: int64\n          description: Id of a newly created bet.\n\n        straightBet:\n          $ref: \"#/components/schemas/StraightBet\"\n          \n    StraightBet:\n      type: object\n      required:\n        - betId\n        - betStatus\n        - betStatus2\n        - betType\n        - oddsFormat\n        - placedAt\n        - risk\n        - updateSequence\n        - wagerNumber\n        - win\n      properties:\n        betId:\n          type: integer\n          format: int64\n          example: 759629245\n          description: Bet identification\n        wagerNumber:\n          type: integer\n          format: int32\n          example: 1\n          description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\n        placedAt:\n          type: string\n          format: date-time\n          example: '2017-09-05T01:32:59Z'\n          description: Date time when the bet was placed.\n        betStatus:\n          type: string\n          example: ACCEPTED\n          description: |\n            Bet Status.  \n            \n            ACCEPTED = Bet was accepted,  \n            CANCELLED = Bet is cancelled as per Pinnacle betting rules,  \n            LOSE = The bet is settled as lose,  \n            PENDING_ACCEPTANCE = This status is reserved only for live bets. If a live bet is placed during danger zone or live delay is applied, it will be in PENDING_ACCEPTANCE , otherwise in ACCEPTED status. From this status bet can go to ACCEPTED or NOT_ACCEPTED status,  \n            REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,  \n            NOT_ACCEPTED = Bet was not accepted. Bet can be in this status only if it was previously in PENDING_ACCEPTANCE status,  \n            WON = The bet is settled as won \n          enum:\n            - ACCEPTED\n            - CANCELLED\n            - LOSE\n            - PENDING_ACCEPTANCE\n            - REFUNDED\n            - NOT_ACCEPTED\n            - WON\n        betStatus2:\n          type: string\n          example: ACCEPTED\n          description: |\n            Bet Status.  \n            \n            ACCEPTED = Bet was accepted.\n            CANCELLED = Bet is cancelled as per Pinnacle betting rules.  \n            LOST = The bet is settled as lose.  \n            PENDING_ACCEPTANCE = This status is reserved only for live bets. If a live bet is placed during danger zone or live delay is applied, it will be in PENDING_ACCEPTANCE , otherwise in ACCEPTED status. From this status bet can go to ACCEPTED or NOT_ACCEPTED status.  \n            REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status.  \n            NOT_ACCEPTED = Bet was not accepted. Bet can be in this status only if it was previously in PENDING_ACCEPTANCE status.  \n            WON = The bet is settled as won.  \n            HALF_WON_HALF_PUSHED = The bet is settled as half won half pushed. Only for asian handicap bets.  \n            HALF_LOST_HALF_PUSHED =  The bet is settled as half lost half pushed. Only for asian handicap bets.\n          enum:\n            - ACCEPTED\n            - CANCELLED\n            - LOST\n            - PENDING_ACCEPTANCE\n            - REFUNDED\n            - NOT_ACCEPTED\n            - WON    \n            - HALF_WON_HALF_PUSHED \n            - HALF_LOST_HALF_PUSHED             \n        betType:\n          type: string\n          example: MONEYLINE\n          description: 'Bet type.'\n          enum:\n            - MONEYLINE\n            - TEAM_TOTAL_POINTS\n            - SPREAD\n            - TOTAL_POINTS\n        win:\n          type: number\n          format: double\n          example: 1\n          description: Win amount.\n        risk:\n          type: number\n          format: double\n          example: 1.5\n          description: Risk amount.\n        winLoss:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Win-Loss for settled bets.\n        oddsFormat:\n          $ref: '#/components/schemas/OddsFormat'\n        customerCommission:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Clientâ€™s commission on the bet.\n        cancellationReason:\n          $ref: '#/components/schemas/CancellationReason'\n        updateSequence:\n          type: integer\n          format: int64\n          example: 111548915\n          description: Update Sequence\n        sportId:\n          type: integer\n          format: int32\n          example: 29\n          description: ''\n        leagueId:\n          type: integer\n          format: int32\n          example: 2462\n          description: ''\n        eventId:\n          type: integer\n          format: int64\n          example: 757064557\n          description: ''\n        handicap:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: ''\n        price:\n          type: number\n          format: double\n          example: -155\n          description: ''\n        teamName:\n          type: string\n          example: Crvena Zvezda\n          description: ''\n        side:\n          type: string\n          example: null\n          nullable: true\n          description: 'Side type.'\n          enum:\n            - OVER\n            - UNDER\n        pitcher1:\n          type: string\n          example: null\n          nullable: true\n          description: 'Pitcher name of team1. Only for bets on baseball.'\n        pitcher2:\n          type: string\n          example: null\n          nullable: true\n          description: 'Pitcher name of team2. Only for bets on baseball.'\n        pitcher1MustStart:\n          type: boolean\n          example: false\n          description: 'Baseball only. Refers to the pitcher for Team1.  This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'  \n          nullable: true\n        pitcher2MustStart:\n          type: boolean\n          example: false\n          description: 'Baseball only. Refers to the pitcher for Team2.  This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'  \n          nullable: true  \n        team1:\n          type: string\n          example: Crvena Zvezda\n          description: ''\n        team2:\n          type: string\n          example: Partizan\n          description: ''\n        periodNumber:\n          type: integer\n          format: int32\n          example: 0\n          description: ''\n        team1Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: 'Team 1 score that the bet was placed on, only for live bets.'\n        team2Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: 'Team 2 score that the bet was placed, only for live bets.'\n        ftTeam1Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: 'Full time team 1 score, only for settled bets.'\n        ftTeam2Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: 'Full time team 2 score, only for settled bets.'\n        pTeam1Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: '.End of period team 1 score, only for settled bets. If the bet was placed on Game period (periodNumber =0) , this will be null . '\n        pTeam2Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: 'End of period team 2 score, only for settled bets. If the bet was placed on Game period (periodNumber =0) , this will be null'\n        isLive:\n          type: boolean\n          example: false\n          description: Whether the bet is on live event\n        eventStartTime:\n          type: string\n          format: date-time\n          example: '2017-10-05T01:32:59Z'\n          description: Date time when the event starts.            \n      description: ''    \n\n    # Special Bet  \n    MultiBetSpecialBetRequest:\n      type: object\n      properties:\n        bets:\n          type: array\n          description: The individual bets.\n          items:\n            $ref: '#/components/schemas/SpecialBetRequest'\n      description: ''\n\n    SpecialBetRequest:\n      type: object\n      properties:\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: This unique id of the place bet requests. This is to support idempotent requests.\n        acceptBetterLine:\n          type: boolean\n          example: true\n          description: Whether or not to accept a bet when there is a line change in favor of the client.\n        oddsFormat:\n          $ref: '#/components/schemas/OddsFormat'\n        stake:\n          type: number\n          format: double\n          example: 10.5\n          description: amount in clientâ€™s currency.\n        winRiskStake:\n          type: string\n          example: RISK\n          description: Whether the stake amount is risk or win amount.\n          enum:\n            - WIN\n            - RISK\n        lineId:\n          type: integer\n          format: int64\n          example: 51024304\n          description: Line identification.\n        specialId:\n          type: integer\n          format: int64\n          example: 726394409\n          description: Special identification.\n        contestantId:\n          type: integer\n          format: int64\n          example: 726394411\n          description: Contestant identification.\n        externalRef:\n          description: Bet reference identifier in the partner's system.\n          example: 12345\n          type: string\n        sourceId:\n          description: Bettor identifier in the partner's system.\n          example: ABC1234\n          type: string\n        ext:\n           $ref: '#/components/schemas/PlaceBetExtension'        \n      description: ''\n\n    MultiBetSpecialBetResponse:\n      type: object\n      properties:\n        bets:\n          type: array\n          description: The individual bets.\n          items:\n            $ref: '#/components/schemas/SpecialBetResponse'\n      description: ''\n\n    SpecialBetResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          example: ACCEPTED\n          description: Status of the request.\n          enum:\n            - ACCEPTED\n            - PROCESSED_WITH_ERROR\n        errorCode:\n          type: string\n          example: null\n          nullable: true\n          enum:\n            - ABOVE_MAX_BET_AMOUNT\n            - ALL_BETTING_CLOSED\n            - BELOW_MIN_BET_AMOUNT\n            - BLOCKED_BETTING\n            - BLOCKED_CLIENT\n            - CONTEST_FUNCTIONALITY_IS_DISABLED\n            - CONTEST_NOT_FOUND\n            - CUSTOMER_TYPE_DOES_NOT_MATCH_PARTNER\n            - DUPLICATE_UNIQUE_REQUEST_ID\n            - INCOMPLETE_CUSTOMER_BETTING_PROFILE\n            - INSUFFICIENT_FUNDS\n            - INVALID_COUNTRY\n            - INVALID_CUSTOMER_PROFILE\n            - INVALID_PARTNER\n            - INVALID_REQUEST\n            - INVALID_SOURCEID\n            - INVALID_WAGER\n            - INVALID_WAGER_TYPE\n            - LINE_CHANGED\n            - PARTNER_PROFILE_IS_NOT_FOUND\n            - PAST_CUTOFFTIME\n            - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\n            - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\n            - RESUBMIT_REQUEST\n            - SOURCEID_TOO_LONG\n            - SYSTEM_ERROR_1\n            - SYSTEM_ERROR_2\n            - UNIQUE_REQUEST_ID_REQUIRED\n        betId:\n          type: integer\n          format: int64\n          example: 760745142\n          description: Id of a newly created bet.\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Unique identifier provided in the request.\n        betterLineWasAccepted:\n          type: boolean\n          example: false\n          description: Whether or not the bet was accepted on the line that changed in favour of client. This can be true only if acceptBetterLine in the Place Bet request is set to TRUE.\n        specialBet:\n          $ref: '#/components/schemas/SpecialBet'\n          description: 'Present if bet was accepted'\n      description: ''\n\n    SpecialBet:\n      type: object\n      required:\n        - betId\n        - betStatus\n        - betType\n        - contestantId\n        - contestantName\n        - leagueId\n        - oddsFormat\n        - placedAt\n        - price\n        - risk\n        - specialId\n        - specialName\n        - sportId\n        - updateSequence\n        - wagerNumber\n        - win\n      properties:\n        betId:\n          type: integer\n          format: int64\n          example: 760748770\n          description: Bet identification\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Unique Request Id\n        wagerNumber:\n          type: integer\n          format: int32\n          example: 1\n          description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\n        placedAt:\n          type: string\n          format: date-time\n          example: '2017-09-09T01:49:43Z'\n          description: Date time when the bet was placed.\n        betStatus:\n          type: string\n          example: ACCEPTED\n          description: | \n            Bet Status. \n            ACCEPTED = Bet was accepted, \n            CANCELLED = Bet is cancelled as per Pinnacle betting rules, \n            LOSE = The bet is settled as lose,\n            REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status, \n            WON = The bet is settled as won \n          enum:\n            - ACCEPTED\n            - CANCELLED\n            - LOSE\n            - REFUNDED\n            - WON \n        betType:\n          type: string\n          default: SPECIAL\n          example: SPECIAL\n        win:\n          type: number\n          format: double\n          example: 1\n          description: Win amount.\n        risk:\n          type: number\n          format: double\n          example: 1.51\n          description: Risk amount.\n        winLoss:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Win-Loss for settled bets.\n        oddsFormat:\n          $ref: '#/components/schemas/OddsFormat'\n        customerCommission:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Clientâ€™s commission on the bet.\n        cancellationReason:\n          $ref: '#/components/schemas/CancellationReason'\n        updateSequence:\n          type: integer\n          format: int64\n          example: 113214135\n          description: Update Sequence. It gets updated when the bet status change.\n        specialId:\n          type: integer\n          format: int64\n          example: 726397620\n          description: ''\n        specialName:\n          type: string\n          example: Denver Broncos Regular Season Wins?\n          description: ''\n        contestantId:\n          type: integer\n          format: int64\n          example: 726397622\n          description: ''\n        contestantName:\n          type: string\n          example: Under\n          description: ''\n        price:\n          type: number\n          format: double\n          example: -151\n          description: ''\n        handicap:\n          type: number\n          format: double\n          example: 8.5\n          description: ''\n        units:\n          type: string\n          example: Regular Season Wins\n          description: ''\n        sportId:\n          type: integer\n          format: int32\n          example: 15\n          description: ''\n        leagueId:\n          type: integer\n          format: int32\n          example: 889\n          description: ''\n        eventId:\n          type: integer\n          format: int64\n          example: null\n          nullable: true\n          description: Populated if bet was placed on a special linked to the event.\n        periodNumber:\n          type: integer\n          format: int32\n          example: null\n          nullable: true\n          description: Populated if bet was placed on a special linked to the event.\n        team1:\n          type: string\n          example: null\n          nullable: true\n          description: Populated if bet was placed on a special linked to the event.\n        team2:\n          type: string\n          example: null\n          nullable: true\n          description: Populated if bet was placed on a special linked to the event.\n        eventStartTime:\n          type: string\n          format: date-time\n          example: '2017-10-07T21:00:00Z'\n          description: ''  \n      description: ''      \n    \n    # Parlay\n    PlaceParlayBetRequest:\n      type: object\n      properties:\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: A9EB2EB1-13A5-4600-9F1B-4859379CDEC4\n          description: This unique id of the place bet requests. This is to support idempotent requests.\n        acceptBetterLine:\n          type: boolean\n          example: true\n          description: Whether or not to accept a bet when there is a line change in favor of the client.\n        riskAmount:\n          type: number\n          format: double\n          example: 10.5\n          description: 'Amount in clientâ€™s currency. It is always risk amount when placing Parlay bets NOTE: If round robin options is used this amount will apply for all parlays so actual amount wagered will be riskAmount X number of Parlays.'\n        oddsFormat:\n          $ref: '#/components/schemas/OddsFormat'\n        legs:\n          type: array\n          description: Collection of parlay legs.\n          items:\n            $ref: '#/components/schemas/ParlayLegRequest'\n        roundRobinOptions:\n          type: array\n          description: ''\n          items:\n            type: string\n            enum:\n              - Parlay\n              - TwoLegRoundRobin\n              - ThreeLegRoundRobin\n              - FourLegRoundRobin\n              - FiveLegRoundRobin\n              - SixLegRoundRobin\n              - SevenLegRoundRobin\n              - EightLegRoundRobin\n      description: Request to place a bet\n      \n    ParlayLegRequest:\n      type: object\n      properties:\n        uniqueLegId:\n          type: string\n          example: CFAD8ACF-E410-437C-8F0F-33611F565981\n          description: Unique id of the leg. It's used to identify and match legs in the response.\n        lineId:\n          type: integer\n          format: int64\n          example: 419715968\n          description: Line identification.\n        altLineId:\n          type: integer\n          format: int64\n          example: null\n          nullable: true\n          description: Alternate line identification.\n        pitcher1MustStart:\n          type: boolean\n          example: false\n          description: 'Baseball only. Refers to the pitcher for Team1.  This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\n        pitcher2MustStart:\n          type: boolean\n          example: false\n          description: 'Baseball only. Refers to the pitcher for Team2. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\n        sportId:\n          type: integer\n          format: int32\n          example: 29\n          description: Sport identification.\n        eventId:\n          type: integer\n          format: int64\n          example: 758023991\n          description: Event identification.\n        periodNumber:\n          type: integer\n          format: int32\n          example: 0\n          description: 'This represents the period of the match. For example, for soccer we have: 0 -  Game, 1 - 1st Half and 2 - 2nd Half'\n        legBetType:\n          type: string\n          example: MONELYLINE\n          description: 'Only SPREAD, MONEYLINE and TOTAL_POINTS are supported.'\n          enum:\n            - MONEYLINE\n            - SPREAD\n            - TOTAL_POINTS\n        team:\n          type: string\n          example: TEAM1\n          description: Chosen team type. This is needed only for SPREAD and MONEYLINE bet types.\n        side:\n          type: string\n          example: null\n          nullable: true\n          description: 'Chosen side type. This is needed only for TOTAL_POINTS bet type.'\n          enum:\n            - OVER\n            - UNDER\n      description: 'Single Parlay Leg'\n    \n    PlaceParlayBetResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          example: ACCEPTED\n          description: Status of the response.\n          enum:\n            - ACCEPTED\n            - PROCESSED_WITH_ERROR\n        errorCode:\n          type: string\n          example: null\n          nullable: true\n          enum:\n            - ABOVE_MAX_BET_AMOUNT\n            - ALL_BETTING_CLOSED\n            - BELOW_MIN_BET_AMOUNT\n            - BLOCKED_BETTING\n            - BLOCKED_CLIENT\n            - DUPLICATE_UNIQUE_REQUEST_ID\n            - INCOMPLETE_CUSTOMER_BETTING_PROFILE\n            - INSUFFICIENT_FUNDS\n            - INVALID_COUNTRY\n            - INVALID_CUSTOMER_PROFILE\n            - INVALID_LEGS\n            - INVALID_ODDS_FORMAT\n            - INVALID_REQUEST\n            - INVALID_ROUND_ROBIN_OPTIONS\n            - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\n            - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\n            - ROUND_ROBIN_DISALLOWED\n            - TOO_FEW_LEGS\n            - TOO_MANY_LEGS\n        betId:\n          type: integer\n          format: int64\n          example: 759629245\n          description: Id of a newly created bet.\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: D5CC50E4-284D-4D50-8D49-429BDC4F2A48\n          description: Unique identifier provided in the request.\n        roundRobinOptionWithOdds:\n          type: array\n          description: Provides array with all acceptable Round Robin options with parlay odds for that option.\n          items:\n            $ref: '#/components/schemas/RoundRobinOptionWithOdds'\n        maxRiskStake:\n          type: number\n          format: double\n          description: Maximum stake amount\n        minRiskStake:\n          type: number\n          format: double\n          description: Minimum stake amount    \n        validLegs:\n          type: array\n          description: Collection of valid legs (format described below). Can be empty if no valid legs found.\n          items:\n            $ref: '#/components/schemas/ParlayLegResponse'\n        invalidLegs:\n          type: array\n          description: The collection of legs that resulted in error (format described below). Can be empty if no invalid legs found.\n          items:\n            $ref: '#/components/schemas/ParlayLegResponse'\n        parlayBet:\n          $ref: '#/components/schemas/ParlayBet'      \n    ParlayLegResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          example: VALID\n          description: Status of the request.\n          enum:\n            - PROCESSED_WITH_ERROR\n            - VALID\n        errorCode:\n          type: string\n          example: null\n          nullable: true\n          enum:\n            - CANNOT_PARLAY_LIVE_GAME\n            - CORRELATED\n            - EVENT_NOT_OFFERED_FOR_PARLAY\n            - EVENT_NO_LONGER_AVAILABLE_FOR_BETTING\n            - INVALID_EVENT\n            - INVALID_LEG_BET_TYPE\n            - INVALID_PARLAY_BET\n            - LINE_CHANGED\n            - LINE_DOES_NOT_BELONG_TO_EVENT\n            - LINE_IS_NOT_AVAILABLE\n            - LISTED_PITCHERS_SELECTION_ERROR\n            - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_1\n            - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_2\n            - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_3\n            - OFFLINE_EVENT\n            - PAST_CUTOFFTIME\n            - SYSTEM_ERROR_1\n            - SYSTEM_ERROR_2\n            - SYSTEM_ERROR_3\n        legId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Echo of the legId from the request.\n\n        correlatedLegs:\n          type: array\n          description: If errorCode is CORRELATED will contain legIds of all correlated legs.\n          items:\n            type: string\n            format: uuid\n            example: 10924E23-A2FE-4317-BFFD-80504675F554\n      description: ''\n\n    RoundRobinOptionWithOdds:\n      type: object\n      properties:\n        roundRobinOption:\n          type: string\n          example: Parlay\n          description: ''\n          enum:\n            - Parlay\n            - TwoLegRoundRobin\n            - ThreeLegRoundRobin\n            - FourLegRoundRobin\n            - FiveLegRoundRobin\n            - SixLegRoundRobin\n            - SevenLegRoundRobin\n            - EightLegRoundRobin\n        odds:\n          type: number\n          format: double\n          example: 682\n          description: Parlay odds for this option.\n        unroundedDecimalOdds:\n          type: number\n          format: double\n          example: 7.8231\n          description: Unrounded parlay odds in decimal format to be used for calculations only\n      description: ''\n\n    ParlayBet:\n      type: object\n      required:\n        - betId\n        - betStatus\n        - betStatus2\n        - betType\n        - legs\n        - oddsFormat\n        - placedAt\n        - risk\n        - updateSequence\n        - wagerNumber\n        - win\n      properties:\n        betId:\n          type: integer\n          format: int64\n          example: 760404490\n          description: Bet identification\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Unique Request Id\n        wagerNumber:\n          type: integer\n          format: int32\n          example: 1\n          description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\n        placedAt:\n          type: string\n          format: date-time\n          example: '2017-09-08T00:55:11Z'\n          description: Date time when the bet was placed.\n        betStatus:\n          type: string\n          example: ACCEPTED\n          description: |\n            Bet Status. \n            \n            ACCEPTED = Bet was accepted,  \n            CANCELLED = Bet is cancelled as per Pinnacle betting rules,  \n            LOSE = The bet is settled as lose,  \n            PENDING_ACCEPTANCE = This status is reserved only for live bets. If a live bet is placed during danger zone or live delay is applied, it will be in PENDING_ACCEPTANCE , otherwise in ACCEPTED status. From this status bet can go to ACCEPTED or NOT_ACCEPTED status,  \n            REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,  \n            NOT_ACCEPTED = Bet was not accepted. Bet can be in this status only if it was previously in PENDING_ACCEPTANCE status,  \n            WON = The bet is settled as won\n          enum:\n            - ACCEPTED\n            - CANCELLED\n            - LOSE\n            - PENDING_ACCEPTANCE\n            - REFUNDED\n            - NOT_ACCEPTED\n            - WON\n        betStatus2:\n          type: string\n          example: ACCEPTED\n          description: |\n            Bet Status. \n            \n            ACCEPTED = Bet was accepted.  \n            CANCELLED = Bet is cancelled as per Pinnacle betting rules.  \n            LOST = The bet is settled as lose.  \n            PENDING_ACCEPTANCE = This status is reserved only for live bets. If a live bet is placed during danger zone or live delay is applied, it will be in PENDING_ACCEPTANCE , otherwise in ACCEPTED status. From this status bet can go to ACCEPTED or REJECTED status.  \n            REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status.  \n            NOT_ACCEPTED = Bet was not accepted. Bet can be in this status only if it was previously in PENDING_ACCEPTANCE status.  \n            WON = The bet is settled as won.  \n            PARTIAL_WON  - If gross payout is greater than the  stake. Only for parlays with the asian handicap legs.  \n            PARTIAL_LOST  - If gross payout is less or equal to the stake. Only for parlays with the asian handicap legs.\n          enum:\n            - ACCEPTED\n            - CANCELLED\n            - LOST\n            - PENDING_ACCEPTANCE\n            - REFUNDED\n            - NOT_ACCEPTED\n            - WON\n            - PARTIAL_WON\n            - PARTIAL_LOST      \n        betType:\n          type: string\n          default: PARLAY\n          example: PARLAY\n        win:\n          type: number\n          format: double\n          example: 6.82\n          description: Win amount.\n        risk:\n          type: number\n          format: double\n          example: 1\n          description: Risk amount.\n        winLoss:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Win-Loss for settled bets.\n        oddsFormat:\n          $ref: '#/components/schemas/OddsFormat'\n        customerCommission:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Clientâ€™s commission on the bet.\n        cancellationReason:\n          $ref: '#/components/schemas/CancellationReason'\n        updateSequence:\n          type: integer\n          format: int64\n          example: 112839436\n          description: Update Sequence\n        legs:\n          type: array\n          description: ''\n          items:\n            $ref: '#/components/schemas/ParlayLeg'\n        price:\n          type: number\n          format: double\n          example: 682\n          description: ''\n        finalPrice:\n          type: number\n          format: double\n          example: 0\n          description: Only for settled parlay. Final price may differ in case leg was cancelled or half won\n      description: ''\n    ParlayLeg:\n      type: object\n      properties:\n        sportId:\n          type: integer\n          format: int32\n          example: 29\n          description: ''\n        legBetType:\n          type: string\n          example: MONEYLINE\n          description: 'Parlay leg type.'\n          enum:\n            - MONEYLINE\n            - SPREAD\n            - TOTAL_POINTS\n        legBetStatus:\n          type: string\n          description: | \n            Parlay Leg status.\n            CANCELLED = The leg is canceled- the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \n            LOSE = The leg is a loss or a push-lose. When Push-lose happens, the half of the stake on the leg will be pushed to the next leg, and the other half will be a loss. This can happen only when the leg is placed on a quarter points handicap,  \n            PUSH = The leg is a push - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \n            REFUNDED = The leg is refunded - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \n            WON = The leg is a won or a push-won. When Push-won happens, the half of the stake on the leg will be pushed to the next leg, and the other half is won. This can happen only when the leg is placed on a quarter points handicap \n          enum:\n            - CANCELLED\n            - LOSE\n            - PUSH\n            - REFUNDED\n            - WON\n            - ACCEPTED\n        legBetStatus2:\n          type: string\n          description: | \n            Parlay Leg status.\n            CANCELLED = The leg is canceled- the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss.\n            LOST = The leg is a loss or a push-lose. When Push-lose happens, the half of the stake on the leg will be pushed to the next leg, and the other half will be a lose. This can happen only when the leg is placed on a quarter points handicap.  \n            PUSHED = The leg is a push - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss.  \n            REFUNDED = The leg is refunded - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss.  \n            WON = The leg is a won or a push-won. When Push-won happens, the half of the stake on the leg will be pushed to the next leg, and the other half is won. This can happen only when the leg is placed on a quarter points handicap.\n            HALF_WON_HALF_PUSHED = The bet is settled as half won half pushed. Only for asian handicap legs.\n            HALF_LOST_HALF_PUSHED =  The bet is settled as half lost half pushed. Only for asian handicap legs. \n          enum:\n            - CANCELLED\n            - LOST\n            - PUSHED\n            - REFUNDED\n            - WON\n            - ACCEPTED \n            - HALF_WON_HALF_PUSHED\n            - HALF_LOST_HALF_PUSHED    \n        leagueId:\n          type: integer\n          format: int32\n          example: 1766\n          description: ''\n        eventId:\n          type: integer\n          format: int64\n          example: 758024079\n          description: ''\n        eventStartTime:\n          type: string\n          format: date-time\n          example: '2017-10-07T21:00:00Z'\n          description: ''\n        handicap:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: ''\n        price:\n          type: number\n          format: double\n          example: 193\n          description: ''\n        teamName:\n          type: string\n          example: Adelaide United\n          description: ''\n        side:\n          type: string\n          example: null\n          nullable: true\n          description: 'Side type.'\n          enum:\n            - OVER\n            - UNDER\n        pitcher1:\n          type: string\n          example: null\n          nullable: true\n          description: ''\n        pitcher2:\n          type: string\n          example: null\n          nullable: true\n          description: ''\n        pitcher1MustStart:\n          type: boolean\n          example: false\n          description: ''\n        pitcher2MustStart:\n          type: boolean\n          example: false\n          description: ''\n        team1:\n          type: string\n          description: Wellington Phoenix\n        team2:\n          type: string\n          description: Adelaide United\n        periodNumber:\n          type: integer\n          format: int32\n          example: 0\n          description: ''\n        ftTeam1Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Full time team 1 score\n        ftTeam2Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: Full time team 2 score\n        pTeam1Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: 'End of period team 1 score. If the bet was placed on Game period (periodNumber =0) , this will be null'\n        pTeam2Score:\n          type: number\n          format: double\n          example: null\n          nullable: true\n          description: 'End of period team 2 score. If the bet was placed on Game period (periodNumber =0) , this will be null'\n        cancellationReason:\n          $ref: '#/components/schemas/CancellationReason'\n          description: '' \n    # Teaser Bet\n    MultiBetTeaserRequest:\n      type: object\n      properties:\n        bets:\n          type: array\n          description: The individual bets.\n          items:\n            $ref: '#/components/schemas/TeaserBetRequest'\n      description: ''\n    TeaserBetRequest:\n      type: object\n      properties:\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Client generated GUID for uniquely identifying the bet.\n        teaserId:\n          type: integer\n          format: int32\n          example: 5\n          description: \u003e-\n            Unique identifier. Teaser details can be retrieved from a call to\n            Get Teaser Groups endpoint.\n        oddsFormat:\n          $ref: '#/components/schemas/OddsFormat'\n        winRiskStake:\n          type: string\n          description: Whether the stake amount is risk or win amount. Options are `WIN` or `RISK`\n          enum:\n            - WIN\n            - RISK\n        stake:\n          type: number\n          format: double\n          description: amount in clientâ€™s currency.\n        externalRef:\n          description: Bet reference identifier in the partner's system.\n          example: 12345\n          type: string\n        sourceId:\n          description: Bettor identifier in the partner's system.\n          example: ABC1234\n          type: string\n        ext:\n           $ref: '#/components/schemas/PlaceBetExtension'    \n        legs:\n          type: array\n          description: Collection of legs.\n          items:\n            $ref: '#/components/schemas/TeaserBetLeg'\n      description: ''\n    TeaserBetLeg:\n      type: object\n      properties:\n        legId:\n          type: string\n          format: int64\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Client generated GUID for uniquely identifying the leg.\n        betType:\n          type: string\n          example: SPREAD\n          description: 'Leg bet type can be SPREAD or TOTAL_POINTS '\n          enum:\n            - SPREAD\n            - TOTAL_POINTS\n        lineId:\n          type: integer\n          format: int64\n          description: Unique identifier of the selection.\n        eventId:\n          type: integer\n          format: int64\n          description: Unique identifier of the event.\n        team:\n          type: string\n          description: Chosen Team. This is needed only for SPREAD bet type. Options are `TEAM1` or `TEAM2`    \n          enum: \n            - TEAM1\n            - TEAM2\n        side:\n          type: string\n          description: Chosen side type. This is needed only for TOTAL_POINTS bet type.\n          enum:\n            - OVER\n            - UNDER\n      description: ''\n      \n    MultiBetTeaserResponse:\n      type: object\n      properties:\n        bets:\n          type: array\n          description: The individual bets.\n          items:\n            $ref: '#/components/schemas/TeaserBetResponse'\n      description: ''\n      \n    TeaserBetResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          description: Status of the request.\n        errorCode:\n          type: string\n          enum:\n            - ABOVE_MAX_BET_AMOUNT\n            - ALL_BETTING_CLOSED\n            - BELOW_MIN_BET_AMOUNT\n            - BLOCKED_BETTING\n            - BLOCKED_CLIENT\n            - DUPLICATE_CLIENT_REFERENCE_ID\n            - DUPLICATE_UNIQUE_REQUEST_ID\n            - INCOMPLETE_CUSTOMER_BETTING_PROFILE\n            - INSUFFICIENT_FUNDS\n            - INVALID_COUNTRY\n            - INVALID_CUSTOMER_PROFILE\n            - INVALID_LEGS\n            - INVALID_REQUEST\n            - ODDS_FORMAT_MISMATCH\n            - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\n            - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\n            - RESUBMIT_REQUEST\n            - SAME_EVENT_ONLY_REQUIRED\n            - SYSTEM_ERROR_1\n            - SYSTEM_ERROR_2\n            - SYSTEM_ERROR_3\n            - TEASER_DOES_NOT_EXIST\n            - TOO_FEW_LEGS\n            - TOO_MANY_LEGS\n        betId:\n          type: integer\n          format: int64\n          description: Id of a newly created bet.\n        uniqueRequestId:\n          type: string\n          format: uuid\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\n          description: Unique identifier provided in the request.\n        invalidLegs:\n          type: array\n          description: 'A collection of invalid legs, if any.'\n          items:\n            $ref: '#/components/schemas/TeaserLegResponse'\n        validLegs:\n          type: array\n          description: 'A collection of valid legs, if any.'\n          items:\n            $ref: '#/components/schemas/TeaserLegResponse'\n    TeaserLegResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          description: \u003e \n            Status of the request.\n            \n            \n            - VALID - The Leg is Valid\n            \n            - PROCESSED_WITH_ERROR - Check error code for specific problem.\n            \n          enum:\n            - VALID\n            - PROCESSED_WITH_ERROR\n            \n        errorCode:\n          type: string\n          enum:\n            - CANNOT_TEASER_LIVE_GAME\n            - CHECK_TEASER_ERROR\n            - INVALID_EVENT\n            - INVALID_LEG_BET\n            - INVALID_LEG_BET_TYPE\n            - LINE_CHANGED\n            - LINE_DOES_NOT_BELONG_TO_EVENT\n            - LINE_IS_NOT_AVAILABLE\n            - OFFLINE_EVENT\n            - PAST_CUTOFFTIME\n            - POINTS_ARE_NOT_ADJUSTED\n            - SAME_SELECTION_DISALLOWED\n            - SYSTEM_ERROR_1\n            - SYSTEM_ERROR_2\n            - WAGER_DATA_MISSING\n        legId:\n          type: string\n          format: uuid\n          example: A9EB2EB1-13A5-4600-9F1B-4859379CDEC4\n          description: Echo of the legId from the request.\n        points:\n          type: number\n          format: double\n          description: Number of points.\n      description: ''\n\n\n  \n    # errors\n    ErrorResponse:\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e\n            INVALID_REQUEST_DATA  = Invalid request parameters (http status\n            400)  \n\n            INVALID_CREDENTIALS = Authorization failed, invalid credentials\n            (http status 401)  \n\n            INVALID_PARTNER_KEY = Authorization failed, please supply a valid\n            Partner Key (http status 401)  \n\n            INVALID_AUTHORIZATION_HEADER = HTTP Authorization header is missing\n            (http status 401) \n\n            ACCOUNT_INACTIVE = Client's account is not active  (http status\n            403)  \n\n            NO_API_ACCESS = Account not permitted to access the API  (http\n            status 403) \n          enum:\n            - INVALID_REQUEST_DATA\n              \n            - INVALID_CREDENTIALS\n            - INVALID_PARTNER_KEY\n            - INVALID_AUTHORIZATION_HEADER\n            - ACCOUNT_INACTIVE\n            - NO_API_ACCESS\n        message:\n          type: string\n    ErrorResponseWithErrorRef:\n      type: object\n      properties:\n        ref:\n          type: string\n          example: f5d9ba85-cc97-47a9-ad92-ea57d0ea2cc0\n        code:\n          type: string\n          example: UNEXPECTED_ERROR\n        message:\n          type: string\n          example: Internal error\n          \n    # Common objects\n    OddsFormat:\n      type: string\n      description: |\n        Bet odds format.  \n        AMERICAN = American odds format,  \n        DECIMAL = Decimal (European) odds format,  \n        HONGKONG = Hong Kong odds format,  \n        INDONESIAN = Indonesian odds format,  \n        MALAY = Malaysian odds format \n      enum:\n        - AMERICAN\n        - DECIMAL\n        - HONGKONG\n        - INDONESIAN\n        - MALAY\n      example: DECIMAL\n\n    CancellationReason:\n      type: object\n      required:\n        - code\n      properties:\n        code:\n          type: string\n          example: FBS_CW_227\n        details:\n          $ref: '#/components/schemas/CancellationDetails'\n      description: |  \n                Possible keys \\:  \n                * correctTeam1Id\n                * correctTeam2Id\n                * correctListedPitcher1\n                * correctListedPitcher2\n                * correctSpread\n                * correctTotalPoints\n                * correctTeam1TotalPoints\n                * correctTeam2TotalPoints\n                * correctTeam1Score\n                * correctTeam2Score\n                * correctTeam1TennisSetsScore\n                * correctTeam2TennisSetsScore\n                \n    CancellationDetails:\n      type: array\n      items:\n         $ref: \"#/components/schemas/CancellationDetailsItem\"\n      example:  [\n                      {\n                          \"key\": \"correctSpread\",\n                          \"value\": \"-1.5\"\n                      }\n                  ]\n                  \n    CancellationDetailsItem:\n      type: object\n      properties:\n        key:\n          type: string\n          example: correctSpread  \n        value:\n          type: string  \n          example: \"1.5\"                        \n    PlaceBetExtension:\n          description:  Additional information. \n          type: object\n          properties:\n            appId: \n              description: Partner's channels over which the bet was placed. \n              type: string \n              enum:\n                  - Web\n                  - Api\n                  - Mobile\n                  - Other  \nsecurity:\n  - basicAuth: []\n    partnerKey: []      \n",
			"canonicalURL": "/github.com/pinnacleapi/openapi-specification@a6e68514bd2ecfa688e6104d9f2a0a7e0c40bef8/-/blob/b2b%20betsapi-oas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/pinnacleapi/openapi-specification/blob/a6e68514bd2ecfa688e6104d9f2a0a7e0c40bef8/b2b betsapi-oas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}