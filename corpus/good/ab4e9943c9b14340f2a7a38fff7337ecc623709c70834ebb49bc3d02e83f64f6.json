{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/papinet/papiNet-API"
		},
		"file": {
			"name": "papiNet-API.yaml",
			"size": 0,
			"path": "1.1.0/papiNet-API.yaml",
			"byteSize": 10660,
			"content": "openapi: 3.0.3\ninfo:\n  title: papiNet API\n  description: papinet API is a global initiative for the Forst and Paper supply chain.\n  contact:\n    name: papiNet API CWG\n    url: https://github.com/papinet/papiNet-API/issues\n  license:\n    name: Apache 2.0\n    url: https://github.com/papinet/papiNet-API/blob/master/LICENSE\n  version: 1.1.0\nservers:\n  - url: https://papinet.papinet.io\n    description: papiNet Mock Server\npaths:\n\n  '/orders':\n    # get /orders\n    get:\n      summary: List `orders`\n      description: Gets a paginated list of all `orders`.\n      parameters:\n        - in: query\n          name: orderStatus\n          description: Filter by status\n          required: false\n          schema:\n            type: string\n            enum:\n            - Active\n            - Cancelled\n            - Completed\n        - in: query\n          name: offset\n          description: The number of items to skip before starting to collect the result set.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfOrders'\n\n  '/orders/{orderId}':\n    # get /orders/{orderId}\n    get:\n      summary: Get an `order`\n      description: Gets the details of a specific `order`, including a paginated list of all its lines.\n      parameters:\n        - in: path\n          name: orderId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `order` to get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOrder'\n\n  '/shipments':\n    # get /shipments\n    get:\n      summary: List `shipments`\n      description: Gets a paginated list of all `shipments`.\n      parameters:\n        - in: query\n          name: shipmentStatus\n          description: Filter by status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Active\n              - Rejected\n              - Completed\n        - in: query\n          name: offset\n          description: The number of items to skip before starting to collect the result set.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfShipments'\n\n  '/shipments/{shipmentId}':\n    # get /shipments/{shipmentId}\n    get:\n      summary: Get a `shipment`\n      description: Gets the details of a specific `shipment`.\n      parameters:\n        - in: path\n          name: shipmentId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `shipment` to get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetShipment'\n\ncomponents:\n  schemas:\n\n    PaginationLinks:\n      type: object\n      properties:\n        first:\n          type: object\n          properties:\n            href:\n              type: string\n        prev:\n          type: object\n          properties:\n            href:\n              type: string\n        next:\n          type: object\n          properties:\n            href:\n              type: string\n        last:\n          type: object\n          properties:\n            href:\n              type: string\n\n    ListOfOrders:\n      type: object\n      properties:\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderHeader'\n        links:\n          $ref: '#/components/schemas/PaginationLinks'\n\n    GetOrder:\n      $ref: '#/components/schemas/Order'\n\n    OrderHeader:\n      type: object\n      required:\n        - id\n        - orderNumber\n        - orderStatus\n        - numberOfLineItems\n      properties:\n        id:\n          type: string\n          format: uuid\n        orderNumber:\n          type: string\n        orderStatus:\n          type: string\n          # Enumeration for 'orderStatus':\n          enum:\n            - Active\n            - Cancelled\n            - Completed\n        numberOfLineItems:\n          type: integer\n          minimum: 0\n\n    OrderLineItem:\n      type: object\n      required:\n        - id\n        - orderLineItemNumber\n        - orderLineItemStatus\n      properties:\n        id:\n          type: string\n          format: uuid\n        orderLineItemNumber:\n          type: integer\n          minimum: 0\n        orderLineItemStatus:\n          type: string\n          # Enumeration for 'orderLineItemStatus':\n          enum:\n            - Cancelled\n            - Completed\n            - Confirmed\n            - Pending\n            - ProductionCompleted\n            - ShipmentCompleted\n        changeable:\n          type: boolean\n        quantities:\n          type: array\n          items:\n            type: object\n            properties:\n              quantityContext:\n                type: string\n                # Enumeration for 'quantityContext':\n                enum:\n                  - Confirmed\n                  - Invoiced\n                  - Ordered\n                  - Produced\n                  - Shipped\n              quantityType:\n                type: string\n                # Enumeration for 'quantityType':\n                enum:\n                  - Area\n                  - Count\n                  - GrossWeight\n                  - Length\n                  - NetNetWeight\n                  - NetWeight\n                  - NominalWeight\n                  - TareWeight\n              quantityValue:\n                type: number\n              quantityUOM:\n                type: string\n                # Enumeration for 'quantityUOM':\n                enum:\n                  - Bale\n                  - Box\n                  - Centimeter\n                  - Decimeter\n                  - Foot\n                  - Gram\n                  - HundredPounds\n                  - Inch\n                  - Kilogram\n                  - Kilometer\n                  - Meter\n                  - MetricTon\n                  - Millimeter\n                  - Package\n                  - PalletUnit\n                  - Piece\n                  - Pound\n                  - PulpUnit\n                  - Ream\n                  - Reel\n                  - Sheet\n                  - ShortTon\n                  - Skid\n                  - SquareDecimeter\n                  - SquareFoot\n                  - SquareInch\n                  - SquareMeter\n                  - ThousandPieces\n                  - ThousandSquareCentimeters\n                  - ThousandSquareFeet\n                  - ThousandSquareInches\n                  - Yard\n\n    Order:\n      allOf:\n        - $ref: '#/components/schemas/OrderHeader'\n        - properties:\n            orderLineItems:\n              type: array\n              items:\n                $ref: '#/components/schemas/OrderLineItem'\n            links:\n              $ref: '#/components/schemas/PaginationLinks'\n\n    Event:\n      type: object\n      required:\n        - id\n        - type\n        - dateTime\n      properties:\n        id:\n          type: string\n          format: uuid\n        type:\n          type: string\n          # Enumeration for 'Event.type'\n          enum:\n            - Scheduled\n            - ReadyToLoad\n            - LoadingStarted\n            - LoadingCompleted\n            - Departed\n            - TrafficJam\n            - Transshipment\n            - Arrived\n            - Measured\n            - UnloadingStarted\n            - UnloadingCompleted\n            - Completed\n        dateTime:\n          type: string\n          format: date-time\n        location:\n          type: object\n          properties:\n            latitude:\n              type: number\n            longitude:\n              type: number\n            name:\n              type: string\n\n    ShipmentHeader:\n      type: object\n      required:\n        - id\n        - shipmentNumber\n        - shipmentStatus\n      properties:\n        id:\n          type: string\n          format: uuid\n        shipmentNumber:\n          type: string\n        shipmentReferences:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipmentReference'\n        shipmentStatus:\n          type: string\n          # Enumeration for 'shipmentStatus':\n          enum:\n            - Active\n            - Rejected\n            - Completed\n        shipmentArrivalStatus:\n          type: string\n          # Enumeration for 'shipmentArrivalStatus'\n          enum:\n            - OnTime\n            - Early\n            - Delayed\n        scheduledDateTimeOfArrival:\n          type: string\n          format: date-time\n        estimatedDateTimeOfArrival:\n          type: string\n          format: date-time\n        actualDateTimeOfArrival:\n          type: string\n          format: date-time\n\n    shipmentReference:\n      type: object\n      required:\n        - type\n        - assignedBy\n        - value\n      properties:\n        type:\n          type: string\n          enum:\n            - ShipmentNumber\n            - DeliveryInstructionNumber\n            - DeliveryInstructionSequenceNumber\n            - OrderNumber\n            - OrderLineItemNumber\n        assignedBy:\n          type: string\n          enum:\n            - Supplier\n            - Forwarder\n            - Carrier\n            - OrderIssuer\n        value:\n          type: string\n\n    ListOfShipments:\n      type: object\n      required:\n        - shipments\n      properties:\n        shipments:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShipmentHeader'\n        links:\n          $ref: '#/components/schemas/PaginationLinks'\n\n    GetShipment:\n      $ref: '#/components/schemas/Shipment'\n\n    Shipment:\n      allOf:\n        - $ref: '#/components/schemas/ShipmentHeader'\n        - properties:\n            latestEvent:\n              $ref: '#/components/schemas/Event'\n",
			"canonicalURL": "/github.com/papinet/papiNet-API@66816923b0d75a650edf584078f685657b444f26/-/blob/1.1.0/papiNet-API.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/papinet/papiNet-API/blob/66816923b0d75a650edf584078f685657b444f26/1.1.0/papiNet-API.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}