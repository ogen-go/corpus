{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eliben/code-for-blog"
		},
		"file": {
			"name": "task.yaml",
			"size": 0,
			"path": "2021/go-rest-servers/swagger/task.yaml",
			"byteSize": 3791,
			"content": "# Hand-written OpenAPI (v3) spec for our REST server.\n#\n# task-swagger-2.json is auto-generated by a conversion tool from this file.\n#\n# Eli Bendersky [https://eli.thegreenplace.net]\n# This code is in the public domain.\nopenapi: 3.0.1\ninfo:\n  title: Sample REST server\n  description: TODO\n  version: 1.0.0\nservers:\n- url: https://example.com\npaths:\n  /task:\n    get:\n      summary: Returns a list of all tasks\n      responses:\n        '200':\n          description: A JSON array of task IDs\n          content:\n            application/json:\n              schema: \n                type: array\n                items: \n                  $ref: '#/components/schemas/Task'\n    post:\n      summary: Create a task\n      requestBody:\n        description: Task to be added to the store\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                text:\n                  type: string\n                tags:\n                  type: array\n                  items:\n                    type: string\n                due:\n                  type: string\n                  format: date-time\n      responses:\n          '200':\n            description: ID of created task\n            content:\n              application/json:\n                schema:\n                  type: integer\n  /task/{id}:\n    get:\n      summary: Get task with specific id\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n          description: The user ID\n      responses:\n        '200':\n          description: Task with given id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n    delete:\n      summary: Delete task with specific id\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n          description: The user ID\n      responses:\n        '200':\n          description: Task with given id deleted\n          content: {}\n  /tag/{tagname}:\n    get:\n      summary: Get tasks with given tag name\n      parameters:\n        - in: path\n          name: tagname\n          required: true\n          schema:\n            type: string\n          description: The tag name\n      responses:\n        '200':\n          description: A JSON array of task IDs\n          content:\n            application/json:\n              schema: \n                type: array\n                items: \n                  $ref: '#/components/schemas/Task'\n  /due/{year}/{month}/{day}:\n    get:\n      summary: Get tasks with given due date\n      parameters:\n        - in: path\n          name: year\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n          description: The year\n        - in: path\n          name: month\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 12\n          description: The month\n        - in: path\n          name: day\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 31\n          description: The day\n      responses:\n        '200':\n          description: A JSON array of task IDs\n          content:\n            application/json:\n              schema: \n                type: array\n                items: \n                  $ref: '#/components/schemas/Task'\ncomponents:\n  schemas:\n    Task:\n      type: object\n      properties:\n        id:\n          type: integer\n        text:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n        due:\n          type: string\n          format: date-time\n",
			"canonicalURL": "/github.com/eliben/code-for-blog@b8487194a1843dc6f9a4171a179e1827e3507b76/-/blob/2021/go-rest-servers/swagger/task.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eliben/code-for-blog/blob/b8487194a1843dc6f9a4171a179e1827e3507b76/2021/go-rest-servers/swagger/task.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}