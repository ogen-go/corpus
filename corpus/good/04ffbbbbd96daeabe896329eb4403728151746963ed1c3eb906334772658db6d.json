{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openservicebrokerapi/servicebroker"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 29022,
			"content": "# This is the Open API interface for Open Service Broker API. Every attempt will\n# be made to make the Open API version of OSB API accurately represent the\n# written specification. If the spec and this document conflict, the spec is\n# the authority.\n\nopenapi: \"3.0.0\"\ntags:\n- name: Open Service Broker API Specification\n\ninfo:\n  title: Open Service Broker API\n  description: The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Open Service Broker API\n    url: https://www.openservicebrokerapi.org/\n    email: open-service-broker-api@googlegroups.com\n  version: master - might contain changes that are not yet released\n\nservers:\n  - url: http://example.com\n    description: Broker Endpoint\n  - url: http://localhost:3000\n    description: OSB Checker - MockOSB\n\npaths:\n  /v2/catalog:\n    get:\n      summary: get the catalog of services that the service broker offers\n      tags:\n        - Catalog\n      operationId: catalog.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n      responses:\n        '200':\n          description: catalog response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Catalog'\n\n  /v2/service_instances/{instance_id}:\n    put:\n      summary: provision a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.provision\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to provision\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      requestBody:\n        description: parameters for the requested service instance provision\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceInstanceProvisionRequestBody'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      summary: update a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.update\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to update\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      requestBody:\n        description: parameters for the requested service instance update\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceInstanceUpdateRequestBody'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: deprovision a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.deprovision\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: id of instance being deleted\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance being deleted\n          required: true\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance being deleted\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous deprovision supported\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    get:\n      summary: get a service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to fetch\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceResource'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /v2/service_instances/{instance_id}/last_operation:\n    get:\n      summary: get the last requested operation state for service instance\n      tags:\n        - ServiceInstances\n      operationId: serviceInstance.lastOperation.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - name: instance_id\n          in: path\n          description: instance id of instance to find last operation applied to it\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n        - name: operation\n          in: query\n          description: a provided identifier for the operation\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastOperationResource'\n          headers:\n            Retry-After:\n              description: Indicates when to retry the request\n              required: false\n              schema:\n                type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /v2/service_instances/{instance_id}/service_bindings/{binding_id}/last_operation:\n    get:\n      summary: get the last requested operation state for service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.lastOperation.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - name: instance_id\n          in: path\n          description: instance id of instance to find last operation applied to it\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: binding id of service binding to find last operation applied to it\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n        - name: operation\n          in: query\n          description: a provided identifier for the operation\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastOperationResource'\n          headers:\n            Retry-After:\n              description: Indicates when to retry the request\n              required: false\n              schema:\n               type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /v2/service_instances/{instance_id}/service_bindings/{binding_id}:\n    put:\n      summary: generate a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.binding\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance to create a binding on\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: binding id of binding to create\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      requestBody:\n        description: parameters for the requested service binding\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceBindingRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResponse'\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResponse'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: deprovision a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.unbinding\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: id of the instance associated with the binding being deleted\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: id of the binding being deleted\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance for which a binding is being deleted\n          required: true\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance for which a binding is being deleted\n          required: true\n          schema:\n            type: string\n        - name: accepts_incomplete\n          in: query\n          description: asynchronous operations supported\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '410':\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    get:\n      summary: get a service binding\n      tags:\n        - ServiceBindings\n      operationId: serviceBinding.get\n      parameters:\n        - $ref: '#/components/parameters/APIVersion'\n        - $ref: '#/components/parameters/OriginatingIdentity'\n        - name: instance_id\n          in: path\n          description: instance id of instance associated with the binding\n          required: true\n          schema:\n            type: string\n        - name: binding_id\n          in: path\n          description: binding id of binding to fetch\n          required: true\n          schema:\n            type: string\n        - name: service_id\n          in: query\n          description: id of the service associated with the instance\n          schema:\n            type: string\n        - name: plan_id\n          in: query\n          description: id of the plan associated with the instance\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResource'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  parameters:\n    APIVersion:\n      name: X-Broker-API-Version\n      in: header\n      description: version number of the Service Broker API that the Platform will use\n      required: true\n      schema:\n        type: string\n        default: '2.13'\n\n    OriginatingIdentity:\n      name: X-Broker-API-Originating-Identity\n      in: header\n      description: identity of the user that initiated the request from the Platform\n      schema:\n        type: string\n\n  schemas:\n    Catalog:\n      type: object\n      properties:\n        services:\n          type: array\n          items:\n            $ref: '#/components/schemas/Service'\n\n    Service:\n      type: object\n      required:\n        - name\n        - id\n        - description\n        - bindable\n        - plans\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        description:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n        requires:\n          type: array\n          items:\n            type: string\n            enum:\n              - syslog_drain\n              - route_forwarding\n              - volume_mount\n        bindable:\n          type: boolean\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n        dashboard_client:\n          $ref: '#/components/schemas/DashboardClient'\n        binding_rotatable:\n          type: boolean\n        plan_updateable:\n          type: boolean\n        plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/Plan'\n\n    DashboardClient:\n      type: object\n      properties:\n        id:\n            type: string\n        secret:\n            type: string\n        redirect_uri:\n            type: string\n\n    Plan:\n      type: object\n      required:\n        - id\n        - name\n        - description\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n        free:\n          type: boolean\n          default: true\n        bindable:\n          type: boolean\n        schemas:\n          $ref: '#/components/schemas/Schemas'\n        maximum_polling_duration:\n          type: integer\n        plan_updateable:\n          type: boolean\n        binding_rotatable:\n          type: boolean\n          default: false\n\n    Schemas:\n      type: object\n      properties:\n        service_instance:\n          $ref: '#/components/schemas/ServiceInstanceSchema'\n        service_binding:\n          $ref: '#/components/schemas/ServiceBindingSchema'\n\n    ServiceInstanceSchema:\n      type: object\n      properties:\n        create:\n          type: object\n          properties:\n            parameters:\n              type: object\n        update:\n          type: object\n          properties:\n            parameters:\n              type: object\n\n    ServiceBindingSchema:\n      type: object\n      properties:\n        create:\n          type: object\n          properties:\n            parameters:\n              type: object\n\n    ServiceInstanceResource:\n      type: object\n      properties:\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        dashboard_url:\n          type: string\n        parameters:\n          $ref: '#/components/schemas/Object'\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n        metadata:\n          $ref: '#/components/schemas/ServiceInstanceMetadata'\n\n    ServiceInstanceProvisionRequestBody:\n      type: object\n      required:\n        - service_id\n        - plan_id\n        - organization_guid\n        - space_guid\n      properties:\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        context:\n          $ref: '#/components/schemas/Context'\n        organization_guid:\n          type: string\n          deprecated: true\n        space_guid:\n          type: string\n          deprecated: true\n        parameters:\n          $ref: '#/components/schemas/Object'\n\n    ServiceInstanceProvisionResponse:\n      type: object\n      properties:\n        dashboard_url:\n          type: string\n        metadata:\n          $ref: '#/components/schemas/ServiceInstanceMetadata'\n\n    ServiceInstanceAsyncOperation:\n      type: object\n      properties:\n        dashboard_url:\n          type: string\n        operation:\n          type: string # could be a link object to last operation\n        metadata:\n          $ref: '#/components/schemas/ServiceInstanceMetadata'\n\n    ServiceInstanceMetadata:\n      type: object\n      properties:\n        labels:\n          type: object\n        attributes:\n          type: object\n\n    ServiceInstanceUpdateRequestBody:\n      type: object\n      required:\n        - service_id\n      properties:\n        context:\n          $ref: '#/components/schemas/Context'\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        parameters:\n          $ref: '#/components/schemas/Object'\n        previous_values:\n          $ref: '#/components/schemas/ServiceInstancePreviousValues'\n\n    ServiceInstancePreviousValues:\n      type: object\n      properties:\n        service_id:\n          type: string\n          deprecated: true\n        plan_id:\n          type: string\n        organization_id:\n          type: string\n          deprecated: true\n        space_id:\n          type: string\n          deprecated: true\n\n    AsyncOperation:\n      type: object\n      properties:\n        operation:\n          type: string\n\n    LastOperationResource:\n      type: object\n      required:\n        - state\n      properties:\n        state:\n          type: string\n          enum:\n            - \"in progress\"\n            - \"succeeded\"\n            - \"failed\"\n        description:\n          type: string\n        instance_usable:\n          type: boolean\n        update_repeatable:\n          type: boolean\n\n    ServiceBindingResource:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ServiceBindingMetadata'\n        credentials:\n          $ref: '#/components/schemas/Object'\n        syslog_drain_url:\n          type: string\n        route_service_url:\n          type: string\n        volume_mounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingVolumeMount'\n        endpoints:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingEndpoint'\n        parameters:\n          $ref: '#/components/schemas/Object'\n\n    ServiceBindingRequest:\n      type: object\n      required:\n        - service_id\n        - plan_id\n      properties:\n        context:\n          $ref: '#/components/schemas/Context'\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        app_guid:\n          type: string\n          deprecated: true\n        bind_resource:\n          $ref: '#/components/schemas/ServiceBindingResouceObject'\n        parameters:\n          $ref: '#/components/schemas/Object'\n        predecessor_binding_id:\n          type: string\n\n    ServiceBindingMetadata:\n      type: object\n      properties:\n        expires_at:\n          type: string\n        renew_before:\n          type: string\n\n    ServiceBindingResouceObject:\n      type: object\n      properties:\n        app_guid:\n          type: string\n        route:\n          type: string\n\n    ServiceBindingResponse:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ServiceBindingMetadata'\n        credentials:\n          $ref: '#/components/schemas/Object'\n        syslog_drain_url:\n          type: string\n        route_service_url:\n          type: string\n        volume_mounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingVolumeMount'\n        endpoints:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBindingEndpoint'\n\n    ServiceBindingEndpoint:\n      type: object\n      required:\n      - host\n      - ports\n      properties:\n        host:\n          type: string\n        ports:\n          type: array\n          items:\n            type: string\n        protocol:\n          type: string\n          enum:\n          - 'tcp'\n          - 'udp'\n          - 'all'\n          default: 'tcp'\n\n    ServiceBindingVolumeMount:\n      type: object\n      required:\n        - driver\n        - container_dir\n        - mode\n        - device_type\n        - device\n      properties:\n        driver:\n          type: string\n        container_dir:\n          type: string\n        mode:\n          type: string\n          enum:\n            - r\n            - rw\n        device_type:\n          type: string\n          enum:\n            - shared\n        device:\n          $ref: '#/components/schemas/ServiceBindingVolumeMountDevice'\n\n    ServiceBindingVolumeMountDevice:\n      type: object\n      required:\n        - volume_id\n      properties:\n        volume_id:\n          type: string\n        mount_config:\n          $ref: '#/components/schemas/Object'\n\n    Context:\n      description: \"See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.\"\n      type: object\n\n    Metadata:\n      description: \"See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata) for more details.\"\n      type: object\n\n    MaintenanceInfo:\n      type: object\n      required:\n        - version\n      properties:\n        version:\n          type: string\n        description:\n          type: string\n\n    Object:\n      type: object\n\n    Error:\n      description: \"See [Service Broker Errors](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors) for more details.\"\n      type: object\n      properties:\n        error:\n          type: string\n        description:\n          type: string\n        instance_usable:\n          type: boolean\n        update_repeatable:\n          type: boolean\n\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n\nsecurity:\n  - basicAuth: []\n\nexternalDocs:\n  description: The offical Open Service Broker API specification\n  url: https://github.com/openservicebrokerapi/servicebroker/\n",
			"canonicalURL": "/github.com/openservicebrokerapi/servicebroker@c619d7165a469b333442bc2d20cc934dc0f7ea69/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openservicebrokerapi/servicebroker/blob/c619d7165a469b333442bc2d20cc934dc0f7ea69/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}