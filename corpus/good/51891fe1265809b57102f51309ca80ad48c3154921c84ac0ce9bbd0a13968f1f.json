{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mlubinsky/mlubinsky.github.com"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 4731,
			"content": "openapi: 3.0.0\n\ninfo:\n  description: Data ingestion API for PSA cloud\n  version: 1.0.0\n  title: Space Analytics\ntags:\n  - name: Facility\npaths:\n  /feeds:\n    post:\n      tags:\n        - Facility\n      summary: Upload Facility information to PSA cloud\n      description: \"\"\n      operationId: feeds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Feed\"\n        description: Space information to be ingested to PSA\n        required: true\n      responses:\n        200:\n          description: OK\n        400:\n          description: Access denied. No token provided.\n        401:\n          description: Not authenticated\n        403:\n          description: Access token does not have the required scope\n        405:\n          description: Invalid input\n      security:\n        - bearerAuth: []\nexternalDocs:\n  description: Dogpatch Project\n  url: https://confluence.arm.com/display/PPG/Space+Optimizer+-+Dogpatch+Labs\nservers:\n  - url: https://teamc-api.peliondev.com:3010/api/v1\ncomponents:\n  securitySchemes:\n    bearerAuth: # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Feed:\n      type: object\n      properties:\n        facility_name:\n          type: string\n          example: Dogpatch Urban garden\n          description: Name of Facility for which data is ingested\n        facility_dimensions:\n          type: object\n          properties:\n            x_max:\n              type: integer\n              format: int32\n              minimum: 0\n              example: 62\n            y_max:\n              type: integer\n              format: int32\n              minimum: 0\n              example: 12\n          description: Dimensions of facility\n        timestamp:\n          type: string\n          format: date-time\n          example: \"2019-01-17T07:00:00+01:00\"\n          description: time stamp at which camera captured frames for inference\n        units:\n          type: string\n          enum:\n            - meter\n            - cm\n          description: unit of measurement in this payload\n        data_type:\n          type: string\n          enum:\n            - people\n            - desks\n          example: people\n          description: set data_type to desks when ingesting desks payload\n        people:\n          type: array\n          items:\n            $ref: \"#/components/schemas/People\"\n        COD:\n          type: array\n          items:\n            $ref: \"#/components/schemas/COD\"\n    Desk:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: unique ID associated with desk function of bounds\n          example: 1009004\n        occupancy:\n          type: integer\n          format: int32\n          minimum: 0\n          description: people associated with desk\n          example: 4\n        shape:\n          type: string\n          enum:\n            - circular\n            - rectangular\n          description: Type of desk can be either circular or rectangular\n          example: rectangular\n        bounds:\n          $ref: \"#/components/schemas/Bound\"\n    People:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          example: 1023050\n        desk_id:\n          type: integer\n          format: int32\n          nullable: true\n          example: 1023012\n        pose:\n          type: string\n          example: sitting\n          enum:\n            - sitting\n            - standing\n          description: Position of person sitting/standing\n        bounds:\n          $ref: \"#/components/schemas/Bound\"\n    COD:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          example: 1023000\n        desk_id:\n          type: integer\n          format: int32\n          example: 1023012\n        bounds:\n          $ref: \"#/components/schemas/Bound\"\n          example:\n            - x: 11.700000000000001\n              y: 2.5\n            - x: 11.700000000000001\n              y: 2.7\n            - x: 11.9\n              y: 2.7\n            - x: 11.9\n              y: 2.5\n    Bound:\n      type: array\n      description: points of polygon representing bounding rectangular box around desk\n      items:\n        $ref: \"#/components/schemas/Point\"\n      minimum: 4\n      example:\n        - x: 10.8\n          y: 7.8\n        - x: 10.8\n          y: 8.2\n        - x: 11.2\n          y: 8.2\n        - x: 11.2\n          y: 7.8\n    Point:\n      type: object\n      description: absolute x,y co-ordinate in meters\n      properties:\n        x:\n          type: number\n          example: 30\n        y:\n          type: number\n          example: 20\n",
			"canonicalURL": "/github.com/mlubinsky/mlubinsky.github.com@c804abdbd2d4ae9afefa1b73d6b792fa324bd1f1/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mlubinsky/mlubinsky.github.com/blob/c804abdbd2d4ae9afefa1b73d6b792fa324bd1f1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}