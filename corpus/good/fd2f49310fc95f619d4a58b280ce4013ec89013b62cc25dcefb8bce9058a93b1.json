{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hackforla/HomeUniteUs"
		},
		"file": {
			"name": "HomeUniteUs.yaml",
			"size": 0,
			"path": "api/HomeUniteUs.yaml",
			"byteSize": 8676,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Home Unite Us\n  license:\n    name: MIT\nservers:\n  - url: http://homeunite.us/api\npaths:\n  /hosts:\n    get:\n      summary: List all hosts\n      operationId: listHosts\n      description: See the full list of hosts\n      tags:\n        - host\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hosts\"\n          description: successful operation\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n    post:\n      summary: Create a host\n      operationId: createHost\n      tags:\n        - host\n      responses:\n        \"201\":\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n    put:\n      summary: Update a host\n      operationId: updateHost\n      description: Update a host\n      requestBody:\n        description: Update host\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Host\"\n        required: true\n      tags:\n        - host\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Host\"\n          description: Successful operation\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Host not found\n        \"405\":\n          description: Validation exception\n    delete:\n      operationId: deleteHost\n      summary: Deletes a host\n      description: Delete a host\n      tags:\n        - host\n      parameters:\n        - name: hostId\n          description: host id to delete\n          schema:\n            format: int64\n            type: integer\n          in: path\n          required: true\n      responses:\n        \"400\":\n          description: Invalid host valu\n  /hosts/{hostId}:\n    get:\n      summary: Info for a specific host\n      operationId: showHostById\n      tags:\n        - hosts\n      parameters:\n        - name: hostId\n          in: path\n          required: true\n          description: The id of the host to retrieve\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Host\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n  /hosts/{hostId}/uploadImage:\n    post:\n      operationId: uploadHostImage\n      summary: uploads an image\n      description: \"\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: binary\n              type: string\n      tags:\n        - host\n      parameters:\n        - name: hostId\n          description: ID of host to update\n          schema:\n            type: string\n          in: path\n          required: true\n        - name: additionalMetadata\n          description: Additional Metadata\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n  /guests:\n    get:\n      summary: List all guests\n      operationId: listGuests\n      description: See the full list of guests\n      tags:\n        - guest\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Guests\"\n          description: successful operation\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n    post:\n      summary: Create a guest\n      operationId: createGuest\n      tags:\n        - guest\n      responses:\n        \"201\":\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n    put:\n      summary: Update a guest\n      operationId: updateGuest\n      description: Update a guest\n      requestBody:\n        description: Update guest\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Guest\"\n        required: true\n      tags:\n        - guest\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Guest\"\n          description: Successful operation\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Guest not found\n        \"405\":\n          description: Validation exception\n    delete:\n      operationId: deleteGuest\n      summary: Deletes a guest\n      description: Delete a guest\n      tags:\n        - guest\n      parameters:\n        - name: guestId\n          description: guest id to delete\n          schema:\n            format: int64\n            type: integer\n          in: path\n          required: true\n      responses:\n        \"400\":\n          description: Invalid guest valu\n  /guests/{guestId}:\n    get:\n      summary: Info for a specific guest\n      operationId: showGuestById\n      tags:\n        - guests\n      parameters:\n        - name: guestId\n          in: path\n          required: true\n          description: The id of the guest to retrieve\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Guest\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n  /guests/{guestId}/uploadImage:\n    post:\n      operationId: uploadGuestImage\n      summary: uploads an image\n      description: \"\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: binary\n              type: string\n      tags:\n        - guest\n      parameters:\n        - name: guestId\n          description: ID of guest to update\n          schema:\n            type: string\n          in: path\n          required: true\n        - name: additionalMetadata\n          description: Additional Metadata\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\ncomponents:\n  schemas:\n    Host:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n        photoUrls:\n          type: array\n          items:\n            type: string\n    Guest:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n        photoUrls:\n          type: array\n          items:\n            type: string\n    Hosts:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Host\"\n    Guests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Guest\"\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          format: int32\n          type: integer\n        type:\n          type: string\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/hackforla/HomeUniteUs@b93a796bea99d3dadde15e2aaba25573e5ff1e99/-/blob/api/HomeUniteUs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hackforla/HomeUniteUs/blob/b93a796bea99d3dadde15e2aaba25573e5ff1e99/api/HomeUniteUs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}