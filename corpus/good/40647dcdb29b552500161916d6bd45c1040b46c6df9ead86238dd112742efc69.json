{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fchmainy/nginx-aks-demo"
		},
		"file": {
			"name": "oas-locations-v0.1.yaml",
			"size": 0,
			"path": "Docker/locations/oas-locations-v0.1.yaml",
			"byteSize": 2669,
			"content": "openapi: 3.0.1\ninfo:\n  title: locations\n  description: list of locations\n  version: '0.1'\nservers:\n  - url: 'http://locations:8080'\npaths:\n  /locations:\n    get:\n      description: List all locations\n      operationId: listLocations\n      responses:\n        '200':\n          description: a list of locations with their index\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Locations\"\n              #examples: {\"locations\": [{\"id\":1,\"name\":\"blue\"}]}\n      servers:\n        - url: 'http://locations:8080'\n    post:\n      description: create a location\n      operationId: createLocation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                id:\n                  type: integer\n            examples:\n              '0':\n                value: '{\"name\":\"yellow\"}'\n              '1':\n                value: '{\"id\":4}'\n      responses:\n        '201':\n          description: location created\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: string\n              examples: {}\n      servers:\n        - url: 'http://locations:8080'\n    delete:\n      description: delete a location\n      operationId: deleteLocation\n      responses:\n        '404':\n          description: Auto generated using Swagger Inspector\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: string\n              examples: {}\n      servers:\n        - url: 'http://locations:8080'\n    servers:\n      - url: 'http://locations:8080'\n  /locations/{id}:\n    get:\n      description: get a specific location\n      operationId: showLocationById\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: id of the location to retrieve\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Location\"\n              # examples: {\"adjectives\": [{\"id\":1,\"name\":\"blue\"}]}\n      servers:\n        - url: 'http://locations:8080'\n        \ncomponents:\n  schemas:\n    Location:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  #      tag:\n  #        type: string\n    Locations:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Location\"\n",
			"canonicalURL": "/github.com/fchmainy/nginx-aks-demo@4034ab77dd043d3dec0346a04335a6427ee2abd2/-/blob/Docker/locations/oas-locations-v0.1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fchmainy/nginx-aks-demo/blob/4034ab77dd043d3dec0346a04335a6427ee2abd2/Docker/locations/oas-locations-v0.1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}