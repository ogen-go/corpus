{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mu-box/core"
		},
		"file": {
			"name": "pulse-monitor-api.yaml",
			"size": 0,
			"path": "docs/servers/pulse-monitor-api.yaml",
			"byteSize": 11977,
			"content": "openapi: 3.0.0\n# Added by API Auto Mocking Plugin\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/danhunsaker/pulse-monitor/1.0.0\n  - description: Individual application server\n    url: https://{host}:5531\n    variables:\n      host:\n        default: ''\n        description: The host IP of the server\ninfo:\n  version: '1.0.0'\n  title: 'Pulse Monitor API'\n  description: 'The API spec for the Pulse system monitoring component.'\ntags:\n  - name: stats\n    description: Endpoints related to retrieving server/component stats\n  - name: alerts\n    description: Only available if Kapacitor is configured\npaths:\n  /keys:\n    get:\n      summary: Returns list of stats being recorded\n      tags: [stats]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /tags:\n    get:\n      summary: Returns list of filterable tags\n      tags: [stats]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /latest/{stat}:\n    parameters:\n      - name: stat\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: verb\n        in: query\n        required: false\n        description: Alter the results by applying an InfluxDB query function\n        schema:\n          type: string\n      - name: component\n        in: query\n        required: false\n        description: '[tag] Filter results to a single component'\n        schema:\n          type: string\n      - name: generation\n        in: query\n        required: false\n        description: '[tag] Filter results to a single component generation'\n        schema:\n          type: string\n      - name: host\n        in: query\n        required: false\n        description: '[tag] Filter results to a single host'\n        schema:\n          type: string\n      - name: member\n        in: query\n        required: false\n        description: '[tag] Filter results to a single member'\n        schema:\n          type: string\n    get:\n      summary: Returns latest stat (averages if multiple filters applied)\n      tags: [stats]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stat'\n  /hourly/{stat}:\n    parameters:\n      - name: stat\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: verb\n        in: query\n        required: false\n        description: Alter the results by applying an InfluxDB query function\n        schema:\n          type: string\n      - name: backfill\n        in: query\n        required: false\n        description: Fill gaps in data with value passed\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        description: The time of the earliest records to retun\n        schema:\n          type: string\n      - name: stop\n        in: query\n        required: false\n        description: The time of the latest records to return\n        schema:\n          type: string\n      - name: component\n        in: query\n        required: false\n        description: '[tag] Filter results to a single component'\n        schema:\n          type: string\n      - name: generation\n        in: query\n        required: false\n        description: '[tag] Filter results to a single component generation'\n        schema:\n          type: string\n      - name: host\n        in: query\n        required: false\n        description: '[tag] Filter results to a single host'\n        schema:\n          type: string\n      - name: member\n        in: query\n        required: false\n        description: '[tag] Filter results to a single member'\n        schema:\n          type: string\n    get:\n      summary: Returns hourly averages for stat\n      tags: [stats]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Stat'\n  /daily/{stat}:\n    parameters:\n      - name: stat\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: verb\n        in: query\n        required: false\n        description: Alter the results by applying an InfluxDB query function\n        schema:\n          type: string\n      - name: backfill\n        in: query\n        required: false\n        description: Fill gaps in data with value passed\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        description: The time of the earliest records to retun\n        schema:\n          type: string\n      - name: stop\n        in: query\n        required: false\n        description: The time of the latest records to return\n        schema:\n          type: string\n      - name: component\n        in: query\n        required: false\n        description: '[tag] Filter results to a single component'\n        schema:\n          type: string\n      - name: generation\n        in: query\n        required: false\n        description: '[tag] Filter results to a single component generation'\n        schema:\n          type: string\n      - name: host\n        in: query\n        required: false\n        description: '[tag] Filter results to a single host'\n        schema:\n          type: string\n      - name: member\n        in: query\n        required: false\n        description: '[tag] Filter results to a single member'\n        schema:\n          type: string\n    get:\n      summary: Returns averages for stat across the course of a day\n      tags: [stats]\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    time:\n                      type: string\n                    value:\n                      type: number\n                  example:\n                    time: '07:30'\n                    value: 30.574734042658736\n  /alerts:\n    get:\n      summary: Retrieve a list of kapacitor alerts\n      tags: [alerts]\n      responses:\n        404:\n          description: Kapacitor isn't configured\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Alert'\n    post:\n      summary: Add a kapacitor alert\n      tags: [alerts]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Alert'\n      responses:\n        404:\n          description: Kapacitor isn't configured\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Alert'\n      callbacks:\n        Alerts:\n          \"{$request.body#/post}\":\n            post:\n              security: []\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        message:\n                          type: string\n                        details:\n                          type: string\n                        time:\n                          type: string\n                        duration:\n                          type: integer\n                        level:\n                          type: string\n                        data:\n                          type: object\n                          properties:\n                            series:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  name:\n                                    type: string\n                                  columns:\n                                    type: array\n                                    items:\n                                      type: string\n                                  values:\n                                    type: array\n                                    items:\n                                      type: array\n                                      items:\n                                        type: string\n                    example:\n                      id: '[do.1] cpu_percent'\n                      message: '[do.1] cpu_percent is CRITICAL value:0.11818333333333335'\n                      details: |\n                        {\u0026#34;Name\u0026#34;:\u0026#34;cpu_percent\u0026#34;,\u0026#34;TaskName\u0026#34;:\u0026#34;fe64d9d7-5b35-43f0-a57c-52a6ead3a361\u0026#34;,\u0026#34;Group\u0026#34;:\u0026#34;nil\u0026#34;,\u0026#34;Tags\u0026#34;:null,\u0026#34;ID\u0026#34;:\u0026#34;[do.1] cpu_percent\u0026#34;,\u0026#34;Fields\u0026#34;:{\u0026#34;mean_cpu_percent\u0026#34;:0.11818333333333335},\u0026#34;Level\u0026#34;:\u0026#34;CRITICAL\u0026#34;,\u0026#34;Time\u0026#34;:\u0026#34;2017-04-14T20:12:03.972677173Z\u0026#34;,\u0026#34;Message\u0026#34;:\u0026#34;[do.1] cpu_percent is CRITICAL value:0.11818333333333335\u0026#34;}\n                      time: '2017-04-14T20:12:03.972677173Z'\n                      duration: 0\n                      level: CRITICAL\n                      data:\n                        series:\n                          - name: cpu_percent\n                            columns:\n                              - time\n                              - mean_cpu_percent\n                            values:\n                              -\n                                - '2017-04-14T20:12:03.972677173Z'\n                                - 0.11818333333333335\n              responses:\n                200:\n                  description: ''\n  /alerts/{id}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Retrieve a kapacitor alert\n      tags: [alerts]\n      responses:\n        404:\n          description: Kapacitor isn't configured\n        200:\n          description: ''\n    delete:\n      summary: Delete a kapacitor alert\n      tags: [alerts]\n      responses:\n        404:\n          description: Kapacitor isn't configured\n        200:\n          description: ''\ncomponents:\n  schemas:\n    Stat:\n      type: object\n      properties:\n        time:\n          type: integer\n        value:\n          type: number\n      example:\n        time: 1580969820000\n        value: 31.26549230769231\n    Alert:\n      type: object\n      properties:\n        id:\n          type: string\n          description: UUID used to identify this alert internally\n        tags:\n          type: object\n          description: Tag(s) to filter the alerts by\n        metric:\n          type: string\n          description: Metric to watch and alert on\n        operator:\n          type: string\n          description: Comparison (eq, ne, lt, le, gt, ge)\n          default: '\u003e'\n        threshold:\n          type: string\n          description: Minimum value to alert at\n        duration:\n          type: string\n          description: How long the metric should be above the threshold before sending the alert\n          default: '5m'\n        level:\n          type: string\n          description: Alert level\n          default: 'crit'\n        post:\n          type: string\n          description: URL to send the alert to\n      example:\n        tags:\n          host: abcd\n        metric: cpu_percent\n        level: crit\n        threshold: '0.80'\n        duration: 30s\n        post: 'http://127.0.0.1/alert'\n  securitySchemes:\n    Token:\n      type: apiKey\n      in: header\n      name: X-Auth-Token\nsecurity:\n  - Token: []\n",
			"canonicalURL": "/github.com/mu-box/core@a66c79bb43fe850bcd6c1ede58051555e1736204/-/blob/docs/servers/pulse-monitor-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mu-box/core/blob/a66c79bb43fe850bcd6c1ede58051555e1736204/docs/servers/pulse-monitor-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}