{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "quoteManagement.api.yaml",
			"size": 0,
			"path": "productApi/quote/quoteManagement.api.yaml",
			"byteSize": 83630,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    **This file forms part of MEF 115**\n\n    This API implements Business Requirements described in MEF 80\n\n    Quote API allows the Buyer to submit a request to find out how much the installation\n    of an instance of a Product Offering, an update to an existing Product, or\n    a disconnect of an existing Product will cost.\n\n    List of supported Use Cases:\n    - Create Quote\n    - Retrieve Quote List\n    - Retrieve Quote by Quote Identifier\n    - Cancel Quote by Quote Identifier\n    - Decline Quote by Quote Identifier\n    - Register for Quote Notification\n \n    Copyright 2021 MEF Forum and its contributors.\n\n    This file includes content based on the TM Forum Quote Management API\n    (TMF648 v4.0.0) available at\n    https://github.com/tmforum-apis/TMF648_QuoteManagement, which is licensed\n    by the TM Forum under the Apache License version 2.0. Such content has been\n    modified by the MEF Forum and its contributors.\n  title: Quote Management\n  version: 8.0.1\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/quoteManagement/v8/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Seller's URL.\ntags:\n  - name: quote\n  - name: quote operations\n  - name: events subscription\npaths:\n  /quote:\n    get:\n      description: \u003e-\n        The Buyer requests a list of Quotes from the Seller based on a set of\n        filter criteria (as described in MEF 80).  For each Quote returned, the\n        Seller also provides a Quote Identifier that uniquely identifies this\n        Quote within the Seller. The order of the elements returned to the\n        Buyer is defined by the Seller (e.g. natural order) and does not change\n        between the pages.\n      operationId: listQuote\n      parameters:\n        - description: \u003e-\n            State of the Quote to be retrieved. See `MEFQuoteStateType`\n            definition for details\n          in: query\n          name: state\n          schema:\n            enum:\n              - accepted\n              - acknowledged\n              - answered\n              - approved.orderable\n              - approved.orderableAlternate\n              - cancelled\n              - unableToProvide\n              - declined\n              - expired\n              - inProgress\n              - inProgress.draft\n              - rejected\n            type: string\n        - description: \u003e-\n            Level of the quote - could be budgetary,\n            firmSubjectToFeasibilityCheck, firm\n          in: query\n          name: quoteLevel\n          schema:\n            enum:\n              - budgetary\n              - firmSubjectToFeasibilityCheck\n              - firm\n            type: string\n        - description: \u003e-\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterward)\n          in: query\n          name: externalId\n          schema:\n            type: string\n        - description: \u003e-\n            An identifier that is used to group Quotes that represent a unit of\n            functionality that is important to a Buyer. A Project can be used\n            to relate multiple Quotes together\n          in: query\n          name: projectId\n          schema:\n            type: string\n        - description: Date when the quote was created - greater than\n          in: query\n          name: quoteDate.gt\n          schema:\n            format: date-time\n            type: string\n        - description: Date when the quote was created - lower than\n          in: query\n          name: quoteDate.lt\n          schema:\n            format: date-time\n            type: string\n        - description: Requested Quote Completion Date - greater than\n          in: query\n          name: requestedQuoteCompletionDate.gt\n          schema:\n            format: date-time\n            type: string\n        - description: Requested Quote Completion Date - lower than\n          in: query\n          name: requestedQuoteCompletionDate.lt\n          schema:\n            format: date-time\n            type: string\n        - description: Expected Quote Completion Date - greater than\n          in: query\n          name: expectedQuoteCompletionDate.gt\n          schema:\n            format: date-time\n            type: string\n        - description: Expected Quote Completion Date - lower than\n          in: query\n          name: expectedQuoteCompletionDate.lt\n          schema:\n            format: date-time\n            type: string\n        - description: \u003e-\n            Date when the Quote State was set to one of the Completion States -\n            greater than\n          in: query\n          name: effectiveQuoteCompletionDate.gt\n          schema:\n            format: date-time\n            type: string\n        - description: \u003e-\n            Date when the Quote State was set to one of the Completion States -\n            lower than\n          in: query\n          name: effectiveQuoteCompletionDate.lt\n          schema:\n            format: date-time\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity\n             represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n        - description:\n            Requested index for start of resources to be provided in response\n          in: query\n          name: offset\n          schema:\n            type: integer\n        - description: Requested number of resources to be provided in response\n          in: query\n          name: limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Quote_Find'\n                type: array\n          description:\n            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n          headers:\n            X-Pagination-Throttled:\n              description: \u003e\n                Used to indicate that result page was throttled to maximum\n                possible size  and there are additional results that can be\n                fetched\n              schema:\n                type: boolean\n            X-Total-Count:\n              description: \u003e\n                The total number of matching records. E.g. if there are 50\n                matching records in total, but the request has offset=10 and\n                limit=10, then the X-Total-Count is 50.\n              schema:\n                type: integer\n            X-Result-Count:\n              description: The number of records included in the response\n              schema:\n                type: integer\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: List or find Quote objects\n      tags:\n        - quote\n    post:\n      description: This operation creates a Quote entity.\n      operationId: createQuote\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity\n             represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/Quote_Create'\n        description: The Quote to be created\n        required: true\n      responses:\n        '201':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Quote'\n          description:\n            'Created  (https://tools.ietf.org/html/rfc7231#section-6.3.2)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '422':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: \u003e-\n            Unprocessable entity due to the business validation problems in the\n            Quote or one of the Quote items\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Send request to perform a quotation\n      tags:\n        - quote\n      x-codegen-request-body-name: quote\n  '/quote/{id}':\n    get:\n      description: \u003e-\n        This operation retrieves a Quote entity. Attribute selection is enabled\n        for all first level attributes.\n      operationId: retrieveQuote\n      parameters:\n        - description: Identifier of the Quote\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity\n             represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Quote'\n          description:\n            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a Quote by ID\n      tags:\n        - quote\n  /cancelQuote:\n    post:\n      description: This operation sends a cancellation request.\n      operationId: cancelQuote\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity\n             represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/QuoteOperationData'\n        description: The details of the Quote Operation\n        required: true\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/QuoteOperationData'\n          description: Success\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '422':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: \u003e-\n            Unprocessable entity due to the business validation problems in the\n            Quote or one of the Quote items\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Cancels a Quote\n      tags:\n        - quote operations\n      x-codegen-request-body-name: cancelQuote\n  /rejectQuote:\n    post:\n      description: This operation sends a rejection request.\n      operationId: rejectQuote\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity\n             represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/QuoteOperationData'\n        description: The details of the Quote Operation\n        required: true\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/QuoteOperationData'\n          description: Success\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '422':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: \u003e-\n            Unprocessable entity due to the business validation problems in the\n            Quote or one of the Quote items\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Rejects a Quote\n      tags:\n        - quote operations\n      x-codegen-request-body-name: rejectQuote\n  /hub:\n    post:\n      description: \u003e-\n        A request initiated by the Buyer to instruct the Seller to send\n        notifications of Quote state changes in the event the Seller uses the\n        Deferred Response pattern to respond to a Create Quote request.\n      operationId: registerListener\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity\n             represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/EventSubscriptionInput'\n        description:\n          Data containing the callback endpoint to deliver the information\n        required: true\n      responses:\n        '201':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description:\n            'Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        '501':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: \u003e-\n            Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Allows the Buyer to register to Quote state change notifications\n      tags:\n        - events subscription\n      x-codegen-request-body-name: data\n  '/hub/{id}':\n    delete:\n      description: \u003e-\n        Resets the communication endpoint address the service instance must use\n        to deliver information about its health state, execution state,\n        failures and metrics.\n      operationId: unregisterListener\n      parameters:\n        - description: The id of the EventSubscription\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the responding\n            entity\n             represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      responses:\n        '204':\n          description:\n            'Deleted (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        '501':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: \u003e-\n            Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Unregister a listener\n      tags:\n        - events subscription\ncomponents:\n  schemas:\n    Duration:\n      description:\n        'A Duration in a given unit of time e.g. 3 hours, or 5 days.'\n      properties:\n        amount:\n          description: 'Duration (number of seconds, minutes, hours, etc.)'\n          type: integer\n        units:\n          description: Time unit type\n          $ref: '#/components/schemas/TimeUnit'\n      required:\n        - amount\n        - units\n      type: object\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error Not intended to be\n        used directly. The `code` in the HTTP header is used as a discriminator\n        for the type of error returned in runtime.\n      properties:\n        reason:\n          description: \u003e-\n            Text that explains the reason for the error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        message:\n          description: \u003e-\n            Text that provides mode details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingQueryParameter: The URI is missing a required\n                query-string parameter\n\n                - missingQueryValue: The URI is missing a required query-string\n                parameter value\n\n                - invalidQuery: The query section of the URI is invalid.\n\n                - invalidBody: The request has an invalid body\n              $ref: '#/components/schemas/Error400Code'\n          required:\n            - code\n          type: object\n      description:\n        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingCredentials: No credentials provided.\n\n                - invalidCredentials: Provided credentials are invalid or\n                expired\n              $ref: '#/components/schemas/Error401Code'\n          required:\n            - code\n          type: object\n      description:\n        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                This code indicates that the server understood\n                the request but refuses to authorize it because\n                of one of the following error codes:\n                - accessDenied: Access denied\n                - forbiddenRequester: Forbidden requester\n                - tooManyUsers: Too many users\n              $ref: '#/components/schemas/Error403Code'\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - notFound: A current representation for the target resource\n                not found\n              enum:\n                - notFound\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Resource for the requested path not found.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error422:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |\n                One of the following error codes:\n                  - missingProperty: The property the Seller has expected is not present in the payload\n                  - invalidValue: The property has an incorrect value\n                  - invalidFormat: The property value does not comply with the expected value format\n                  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n                  - unexpectedProperty: Additional property, not expected by the Seller has been provided\n                  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n                  - otherIssue: Other problem was identified (detailed information provided in a reason)\n              $ref: '#/components/schemas/Error422Code'\n            propertyPath:\n              description: \u003e\n                A pointer to a particular property of the payload that caused\n                the validation issue. It is highly recommended that this\n                property should be used.\n\n                Defined using JavaScript Object Notation (JSON) Pointer\n                (https://tools.ietf.org/html/rfc6901).\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Unprocessable entity due to a business validation problem.\n        (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n        - missingProperty\n        - invalidValue\n        - invalidFormat\n        - referenceNotFound\n        - unexpectedProperty\n        - tooManyRecords\n        - otherIssue\n      type: string\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Error501:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                The following error code:\n                - notImplemented: Method not supported by the server\n              enum:\n                - notImplemented\n              type: string\n          required:\n            - code\n          type: object\n      description:\n        'Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)'\n    EventSubscription:\n      description: |\n        This resource is used to manage notification subscription.\n        Reference: MEF 79 (Sn 8.3)\n      properties:\n        query:\n          description: \u003e-\n            The value provided by the Buyer in `EventSubscriptionInput` during\n            notification registration\n        callback:\n          description: \u003e-\n            The value provided by the Buyer in `EventSubscriptionInput` during\n            notification registration\n          type: string\n        id:\n          description: \u003e-\n            An identifier of the event subscription assigned by the Seller when\n            a resource is created.\n          type: string\n      required:\n        - callback\n        - id\n      type: object\n    EventSubscriptionInput:\n      description: This class is used to register for Notifications.\n      properties:\n        query:\n          description: \u003e-\n            This attribute is used to define to which type of events to\n            register to. Example: \"query\":\"eventType = quoteStateChangeEvent\".\n            To subscribe for more than one event type, put the values separated\n            by comma:\n            `eventType=quoteStateChangeEvent,quoteItemStateChangeEvent`. The\n            possible values are enumerated by the 'QuoteEventType' in\n            quoteNotification.api.yaml. An empty query is treated as specifying\n            no filters - ending in  subscription for all event types.\n          type: string\n        callback:\n          description: \u003e-\n            This callback value must be set to *host* property from Buyer\n            Notification API (quoteNotification.api.yaml). This property is\n            appended with the base path and notification resource path\n            specified in that API to construct an URL to which notification is\n            sent. E.g. for \"callback\": \"http://buyer.co/listenerEndpoint\", the\n            state change event notification will be sent to:\n            `http://buyer.co/listenerEndpoint/mefApi/sonata/quoteNotification/v8/listener/quoteStateChangeEvent`\n          type: string\n      required:\n        - callback\n      type: object\n    FieldedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            country:\n              description: Country that the address is in\n              type: string\n            streetType:\n              description: \u003e-\n                Alley, avenue, boulevard, brae, crescent, drive, highway, lane,\n                terrace, parade, place, tarn, way, wharf\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in an american urban property address\n              type: string\n            city:\n              description: The city that the address is in\n              type: string\n            streetNr:\n              description: \u003e-\n                Number identifying a specific property on a public street. It\n                may be combined with streetNrLast for ranged addresses.\n              type: string\n            locality:\n              description: The locality that the address is in\n              type: string\n            postcode:\n              description: \u003e-\n                Descriptor for a postal delivery area used to speed and\n                simplify the delivery of mail (also known as zip code)\n              type: string\n            streetNrLast:\n              description:\n                Last number in a range of street numbers allocated to a\n                property\n              type: string\n            streetNrSuffix:\n              description: The first street number suffix\n              type: string\n            streetName:\n              description: Name of the street or other street type\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n            streetNrLastSuffix:\n              description: Last street number suffix for a ranged address\n              type: string\n            geographicSubAddress:\n              description: \u003e-\n                Additional fields used to specify an address, as detailed as\n                possible.\n              $ref: '#/components/schemas/GeographicSubAddress'\n            streetSuffix:\n              description: A modifier denoting a relative direction\n              type: string\n          required:\n            - city\n            - country\n            - streetName\n          type: object\n      description: \u003e-\n        A type of Address that has a discrete field and value for each type of\n        boundary or identifier down to the lowest level of detail. For example\n        \"street number\" is one field, \"street name\" is another field, etc.\n    FormattedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            country:\n              description: Country that the address is in\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in an US urban property address\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n            city:\n              description: The city that the address is in\n              type: string\n            addrLine2:\n              description: The second address line in a formatted address\n              type: string\n            addrLine1:\n              description: The first address line in a formatted address\n              type: string\n            locality:\n              description: \u003e-\n                An area of defined or undefined boundaries within a local\n                authority or other legislatively defined area, usually rural or\n                semi-rural in nature\n              type: string\n            postcode:\n              description: \u003e-\n                Descriptor for a postal delivery area used to speed and\n                simplify the delivery of mail (also known as ZIP code)\n              type: string\n          required:\n            - addrLine1\n            - city\n            - country\n          type: object\n      description: \u003e-\n        A type of Address that has discrete fields for each type of boundary or\n        an identifier with the exception of the street and more specific\n        location details, which are combined into a maximum of two strings\n        based on local postal addressing conventions.\n    GeographicAddressLabel:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            externalReferenceId:\n              description: \u003e-\n                The unique reference to an Address as provided by the\n                Administrative Authority.\n              type: string\n            externalReferenceType:\n              description: \u003e-\n                The organization or standard from the organization that\n                administers this Geographic Address Label ensuring it is unique\n                within the Administrative Authority. The value(s) to be used\n                are to be agreed upon during the onboarding. For North American\n                providers this would normally be CLLI (Common Language Location\n                Identifier) code.\n              type: string\n          required:\n            - externalReferenceId\n            - externalReferenceType\n          type: object\n      description: \u003e-\n        A unique identifier controlled by a generally accepted independent\n        administrative authority that specifies a fixed geographical location. \n\n        Reference: MEF 79 (Sn 8.9.4), MEF 79.0.2 (Sn 8.9.4)\n    GeographicAddressRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced GeographicAddress. Hyperlink MAY be\n                used by the Seller in responses. Hyperlink MUST be ignored by\n                the Seller in case it is provided by the Buyer in a request\n              type: string\n            id:\n              description: \u003e-\n                Identifier of the referenced Geographic Address. This\n                identifier is assigned during a successful address validation\n                request (Geographic Address Validation API)\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Address resource available through Address\n        Validation API.\n    GeographicSiteRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced GeographicSite. Hyperlink MAY be\n                used by the Seller in responses. Hyperlink MUST be ignored by\n                the Seller in case it is provided by the Buyer in a request\n              type: string\n            id:\n              description: Identifier of the referenced Geographic Site.\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Site resource available through Service\n        Site API\n    GeographicSubAddress:\n      description:\n        'Additional fields used to specify an address, as detailed as possible.'\n      properties:\n        buildingName:\n          description: \u003e\n            Allows for identification of places that require building name as\n            part of addressing information\n          type: string\n        subUnit:\n          description: \u003e-\n            Representation of a MEFSubUnit It is used for describing subunit\n            within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n        levelType:\n          description: Describes level types within a building\n          type: string\n        levelNumber:\n          description:\n            'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\n            2'\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        privateStreetName:\n          description: \u003e-\n            Private streets internal to a property (e.g. a university) may have\n            internal names that are not recorded by the land title office\n          type: string\n      type: object\n    MEFBuyerQuoteLevel:\n      description: \u003e-\n        An indication of whether the Buyer's Quote Request is for a Budgetary\n        or Firm Quote Level. Set by the Buyer. Buyer Requested Quote Level\n        contains the possible values and may be set by the Buyer on the\n        Request. All Quote Items in a Quote have the same Quote Level.\n      enum:\n        - budgetary\n        - firm\n      type: string\n    MEFChargePeriod:\n      description: Used for a recurring charge to indicate period.\n      enum:\n        - hour\n        - day\n        - week\n        - month\n        - year\n      type: string\n    MEFEndOfTermAction:\n      description:\n        The action that needs to be taken by the Seller once the term expires.\n      enum:\n        - roll\n        - autoDisconnect\n        - autoRenew\n      type: string\n    MEFGeographicPoint:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            spatialRef:\n              description: \u003e-\n                The spatial reference system used to determine the coordinates\n                (e.g. `WGS84`). The system used and the value of this field are\n                to be agreed upon during the onboarding process.\n              type: string\n            x:\n              description: \u003e-\n                The latitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            'y':\n              description: \u003e-\n                The longitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            z:\n              description: \u003e-\n                The elevation expressed in the format specified by the\n                `spacialRef`\n              type: string\n          required:\n            - spatialRef\n            - x\n            - 'y'\n          type: object\n      description: \u003e\n        A MEFGeographicPoint defines a geographic point through coordinates.\n        Reference: MEF 79 (Sn 8.9.5)\n    MEFItemTerm:\n      description: \u003e-\n        The terms of the Quote Item. Used to describe a term (also known as\n        commitment) for a Quote Item. Each Quote Item in a Quote Request could\n        have a different Requested Quote Item Term. The Buyer specifies the\n        longest term that they would accept. The Buyer may be willing to accept\n        a shorter term. If the Seller responds with a term longer than the\n        Buyer's request, it is treated as an alternate response.\n      properties:\n        duration:\n          description: Duration of the term\n          $ref: '#/components/schemas/Duration'\n        endOfTermAction:\n          description: \u003e-\n            The action that needs to be taken by the Seller once the term\n            expires\n          $ref: '#/components/schemas/MEFEndOfTermAction'\n        name:\n          description: Name of the term\n          type: string\n        description:\n          description: Description of the term\n          type: string\n        rollInterval:\n          description: \u003e-\n            The recurring period that the Buyer is willing to pay to the end of\n            upon disconnecting the Product after the original term has expired.\n            If `endOfTermAction` is equal to `roll` then `rollInterval` MUST be\n            specified. If `endOfTermAction` is equal to `autoRenew` or\n            `autoDisconnect`, then `rollInterval` MUST NOT be specified.\n          $ref: '#/components/schemas/Duration'\n      required:\n        - duration\n        - endOfTermAction\n        - name\n      type: object\n    MEFPriceType:\n      description:\n        Indicates if the price is for recurring or non-recurring charges.\n      enum:\n        - recurring\n        - nonRecurring\n        - usageBased\n      type: string\n    MEFProductActionType:\n      description: |\n        Product action to be applied to the Quote Item. This corresponds to the\n        Order Item Action when an associated product is ordered.\n\n        | MEFProductActionType | MEF 80     |\n        |--------------------- | ---------- |\n        | add                  | INSTALL    |\n        | modify               | CHANGE     |\n        | delete               | DISCONNECT |\n      enum:\n        - add\n        - modify\n        - delete\n      type: string\n    MEFProductConfiguration:\n      description: \u003e-\n        MEFProductConfiguration is used as an extension point for MEF specific\n        product/service payload. The `@type` attribute is used as a\n        discriminator\n      discriminator:\n        propertyName: '@type'\n      properties:\n        '@type':\n          description: \u003e-\n            The name of the type that uniquely identifies the type of the\n            product that is the subject of the POQ Request. In the case of the\n            MEF product, this is the URN provided in the Product Specification.\n          type: string\n      required:\n        - '@type'\n      type: object\n    MEFQuoteItemStateType:\n      description: \u003e\n        Possible values for the status of a QuoteItem.\n\n        Following mapping has been used between `MEFQuoteItemStateType` and MEF\n        80:\n\n\n        | MEFQuoteItemStateType       | MEF 80                            |\n\n        | ----------------------------| --------------------------------- |\n\n        | answered                    | ANSWERED                          |\n\n        | acknowledged                | ACKNOWLEDGED                      |\n\n        | approved.orderable          | ORDERABLE                         |\n\n        | approved.orderableAlternate | ORDERABLE_ALTERNATE               |\n\n        | inProgress                  | IN_PROGRESS                       |\n\n        | inProgress.draft            | IN_PROGRESS_DRAFT                 |\n\n        | abandoned                   | ABANDONED                         |\n\n        | rejected                    | REJECTED                          |\n\n        | unableToProvide             | UNABLE_TO_PROVIDE                 |\n      enum:\n        - answered\n        - acknowledged\n        - approved.orderable\n        - approved.orderableAlternate\n        - inProgress\n        - inProgress.draft\n        - rejected\n        - abandoned\n        - unableToProvide\n      type: string\n    MEFQuoteItem_Common:\n      description: \u003e-\n        Quote items describe an action to be performed on a productOffering or\n        a product in order to get pricing elements and conditions.\n      properties:\n        requestedQuoteItemTerm:\n          description: \u003e-\n            The terms of the Quote Item. Used to describe a term (also known as\n            commitment) for a Quote Item. Each Quote Item in a Quote Request\n            could have a different Requested Quote Item Term. The Buyer\n            specifies the longest term that they would accept. The Buyer may be\n            willing to accept a shorter term. If the Seller responds with a\n            term longer than the Buyer's request, it is treated as an alternate\n            response.\n          $ref: '#/components/schemas/MEFItemTerm'\n        note:\n          description: \u003e-\n            Free form text associated with the quote item. Only useful in\n            processes involving human interaction. Not applicable for the\n            automated process.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        product:\n          description:\n            The Buyer's existing Product for which the quote is being\n            requested.\n          $ref: '#/components/schemas/MEFProductRefOrValueQuote'\n        productOfferingQualificationItem:\n          description: A reference to a previously done POQ with item specified\n          $ref: '#/components/schemas/ProductOfferingQualificationItemRef'\n        relatedContactInformation:\n          description: \u003e\n            Contact information of an individual or organization playing a role\n            for this Quote. If `instantSyncQuote` equals `false`  then 'Quote\n            Item Technical Contact' must be specified (`role:\n            quoteItemTechnicalContact`). If `instantSyncQuote` equals `false`\n            and the Quote Item requires a location,  the Buyer MUST provide the\n            Quote Item Location Contact Information `role:\n            quoteItemLocationContact`.\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        agreementName:\n          description: \u003e-\n            Name of the agreement. The name is unique between the Buyer and the\n            Seller.\n          type: string\n        action:\n          description: \u003e-\n            Product action to be applied to this Quote Item. This corresponds\n            to the Order Item Action when an associated product is ordered.\n          $ref: '#/components/schemas/MEFProductActionType'\n        dealReference:\n          description: \u003e-\n            A pre-agreed pricing modifier reference that the Seller is offering\n            to the Buyer which will impact the price.\n          type: string\n        id:\n          description: \u003e-\n            Identifier of the quote item (generally it is a sequence number 01,\n            02, 03, ...)\n          type: string\n        requestedQuoteItemInstallationInterval:\n          description: The installation interval requested by the Buyer.\n          $ref: '#/components/schemas/Duration'\n        quoteItemRelationship:\n          description: A relationship from item within a quote\n          items:\n            $ref: '#/components/schemas/QuoteItemRelationship'\n          type: array\n      required:\n        - action\n        - id\n      type: object\n    MEFQuoteItem_Create:\n      allOf:\n        - $ref: '#/components/schemas/MEFQuoteItem_Common'\n        - description: \u003e-\n            A quote item describes an action to be performed on a\n            productOffering or a product in order to get pricing elements and\n            condition. The modeling pattern introduces the\n            `MEFQuoteItem_Common` supertype to aggregate attributes that are\n            common to both `QuoteItem` and `MEFQuoteItem_Create`. In this case\n            the create type has a subset of attributes of the response type and\n            does not introduce any new, thus the `MEFQuoteItem_Create` type has\n            an empty definition.\n          type: object\n    MEFQuoteStateChange:\n      description: \u003e-\n        Holds the reached state, reasons, and associated date the Quote state\n        changed, populated by the Seller.\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          description: A state reached at the change date\n          $ref: '#/components/schemas/MEFQuoteStateType'\n      required:\n        - changeDate\n        - state\n      type: object\n    MEFQuoteStateType:\n      description: |\n        Possible values for the status of a Quote.\n        Following mapping has been used between `MEFQuoteStateType` and MEF 80:\n\n         | QuoteStateType                            | MEF 80                            |\n         | ----------------------------------------- | --------------------------------- |\n         | accepted                                  | ACCEPTED                          |\n         | acknowledged                              | ACKNOWLEDGED                      |\n         | answered                                  | ANSWERED                          |\n         | approved.orderable                        | ORDERABLE                         |\n         | approved.orderableAlternate               | ORDERABLE_ALTERNATE               |\n         | declined                                  | DECLINED                          |\n         | expired                                   | EXPIRED                           |\n         | cancelled                                 | CANCELLED                         |\n         | unableToProvide                           | UNABLE_TO_PROVIDE                 |\n         | inProgress                                | IN_PROGRESS                       |\n         | inProgress.draft                          | IN_PROGRESS_DRAFT                 |\n         | rejected                                  | REJECTED                          |\n      enum:\n        - accepted\n        - acknowledged\n        - answered\n        - approved.orderable\n        - approved.orderableAlternate\n        - cancelled\n        - unableToProvide\n        - declined\n        - expired\n        - inProgress\n        - inProgress.draft\n        - rejected\n      type: string\n    MEFSellerQuoteLevel:\n      description: \u003e-\n        An indication of whether the Seller's Quote Response is Budgetary, Firm\n        - Subject to Feasibility Check, or Firm. The Seller Quote Level is\n        provided by the Seller when responding to a Quote request.  This\n        represents the lowest Quote Item Level of all Quote Items included in\n        the Quote.\n      enum:\n        - budgetary\n        - firmSubjectToFeasibilityCheck\n        - firm\n      type: string\n    MEFSubUnit:\n      description: Allows for subunit identification\n      properties:\n        subUnitNumber:\n          description: \u003e-\n            The discriminator used for the subunit, often just a simple number\n            but may also be a range.\n          type: string\n        subUnitType:\n          description: \u003e-\n            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          type: string\n      required:\n        - subUnitNumber\n        - subUnitType\n      type: object\n    MEFProductRefOrValueQuote:\n      description: \u003e-\n        One or more services sold to a Buyer by a Seller. A particular Product\n        Offering defines the technical and commercial attributes and behaviors\n        of a Product.\n      properties:\n        id:\n          description: \u003e\n            The unique identifier of an in-service Product that is the\n            quotation's subject.  This field MUST be populated if an item\n            `action` is either `modify` or `delete`.  This field MUST NOT be\n            populated if an item `action` is `add`.\n          type: string\n        href:\n          description: \u003e\n            Hyperlink to the product in Seller's inventory that is the\n            quotation's subject. Hyperlink MAY be used when providing a\n            response by the Seller. Hyperlink MUST be ignored by the Seller in\n            case it is provided by the Buyer in a request\n          type: string\n        place:\n          description: \u003e-\n            A list of places that are related to the Product. For example an\n            installation location\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n        productConfiguration:\n          description: \u003e-\n            Technical attributes for the Product that would be delivered to\n            fulfill the Quote Item.\n          $ref: '#/components/schemas/MEFProductConfiguration'\n        productOffering:\n          description: \u003e-\n            A particular Product Offering defines the technical and commercial\n            attributes and behaviors of a Product.\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productRelationship:\n          description: \u003e-\n            A list of references to existing products that are related to the\n            Product that would be delivered to fulfill the Quote Item\n          items:\n            $ref: '#/components/schemas/ProductRelationshipWithGrouping'\n          type: array\n      type: object\n    Money:\n      description: A base/value business entity used to represent money\n      properties:\n        unit:\n          description:\n            Currency (ISO4217 norm uses 3 letters to define the currency)\n          type: string\n        value:\n          description: A positive floating point number\n          format: float\n          type: number\n      type: object\n    Note:\n      description: \u003e-\n        Extra information about a given entity. Only useful in processes\n        involving human interaction. Not applicable for the automated process.\n      properties:\n        date:\n          description: Date of the note\n          format: date-time\n          type: string\n        author:\n          description: Author of the note\n          type: string\n        id:\n          description: \u003e-\n            Identifier of the note within its containing entity (may or may not\n            be globally unique, depending on provider implementation)\n          type: string\n        source:\n          description: Indicates if the note is from Buyer or Seller\n          $ref: '#/components/schemas/MEFBuyerSellerType'\n        text:\n          description: Text of the note\n          type: string\n      required:\n        - author\n        - date\n        - id\n        - source\n        - text\n      type: object\n    MEFBuyerSellerType:\n      description: Indicates if the note is from Buyer or Seller.\n      enum:\n        - buyer\n        - seller\n      type: string\n    Price:\n      description: \u003e-\n        Provides all amounts (tax included, duty-free, tax rate), used currency\n        and percentage to apply for Price Alteration.\n      properties:\n        taxRate:\n          description:\n            'Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax.'\n          format: float\n          type: number\n        taxIncludedAmount:\n          description:\n            All taxes included amount (expressed in the given currency)\n          $ref: '#/components/schemas/Money'\n        dutyFreeAmount:\n          description:\n            All taxes excluded amount (expressed in the given currency)\n          $ref: '#/components/schemas/Money'\n      required:\n        - dutyFreeAmount\n      type: object\n    ProductOfferingQualificationItemRef:\n      description: \u003e-\n        It's a productOfferingQualification item that has been executed\n        previously.\n      properties:\n        productOfferingQualificationId:\n          description:\n            Unique identifier of related Product Offering Qualification.\n          type: string\n        alternateProductProposalId:\n          description: \u003e-\n            A unique identifier for the Alternate Product Proposal assigned by\n            the Seller, if the referenced qualification comes from an alternate\n            product proposal.\n          type: string\n        productOfferingQualificationHref:\n          description: Reference of the related Product Offering Qualification.\n          type: string\n        id:\n          description: Id of an item of a product offering qualification\n          type: string\n      required:\n        - id\n        - productOfferingQualificationId\n      type: object\n    ProductOfferingRef:\n      description: \u003e\n        A reference to a Product Offering offered by the Seller to the Buyer. A\n        Product Offering contains the commercial and technical details of a\n        Product sold by a particular Seller. A Product Offering defines all of\n        the commercial terms and, through association with a particular Product\n        Specification defines all the technical attributes and behaviors of the\n        Product. A Product Offering may constrain the allowable set of\n        configurable technical attributes and/or behaviors specified in the\n        associated Product Specification.\n\n        The id of the Product offering is assigned by the Seller. The Buyer and\n        the Seller exchange information about offerings' ids during the\n        onboarding process.\n      properties:\n        id:\n          description: unique identifier of the Product Offering.\n          type: string\n        href:\n          description: \u003e-\n            Hyperlink to a Product Offering in Sellers catalog. In case Seller\n            is not providing catalog capabilities this field is not used. The\n            catalog API definition is provided by the Seller to Buyer during\n            onboarding Hyperlink MAY be used when providing response by the\n            Seller Hyperlink MUST be ignored by the Seller in case it is\n            provided by the Buyer in a requestHyperlink reference\n          type: string\n      required:\n        - id\n      type: object\n    ProductRelationshipWithGrouping:\n      description: \u003e-\n        A relationship to an existing Product. The requirements for usage for\n        given Product are described in the Product Specification. The\n        \"WithGrouping\" flavor of the Product Relationship allows for providing\n        a list of related product identifiers within a single Product\n        Relationship. This can be later used while processing the request as\n        defined in the Product Specification. The `groupingKey` attribute is\n        used to achieve this behavior in the API by marking the list of\n        `ProductRelationshipWithGroupings` within a `product` with a common\n        key.\n      properties:\n        relationshipType:\n          description: \u003e\n            Specifies the type (nature) of the relationship to the related\n            Product. The nature of required relationships varies for Products\n            of different types. For example, a UNI or ENNI Product may not have\n            any relationships, but an Access E-Line may have two mandatory\n            relationships (related to the UNI on one end and the ENNI on the\n            other). More complex Products such as multipoint IP or Firewall\n            Products may have more complex relationships. As a result, the\n            allowed and mandatory `relationshipType` values are defined in the\n            Product Specification.\n          type: string\n        id:\n          description: unique identifier of a Product that is referenced.\n          type: string\n        href:\n          description: \u003e-\n            Hyperlink to the product in Seller's inventory that is referenced\n            Hyperlink MAY be used when providing a response by the Seller\n            Hyperlink MUST be ignored by the Seller in case it is provided by\n            the Buyer in a request\n          type: string\n        groupingKey:\n          description: \u003e\n            MEF 80 Introduces a list of related ids for the\n            ProductRelationship. For sake of TMF compliance, a `groupingKey` is\n            introduced to retain id as a simple attribute. Ids from\n            relationships having the same `groupingKey` and `relationshipType`\n            MUST be treated as a list of identifiers.\n\n            Reference: MEF 80 (Sn 8.1.8.)\n          type: string\n      required:\n        - id\n        - relationshipType\n      type: object\n    Quote:\n      allOf:\n        - $ref: '#/components/schemas/Quote_Common'\n        - description: \u003e-\n            Quote can be used to negotiate service and product acquisition or\n            modification between a customer and a service provider. Quote\n            contains a list of quote items, a reference to a customer, a list\n            of productOfferings, and attached prices and conditions.\n          properties:\n            effectiveQuoteCompletionDate:\n              description: \u003e-\n                Date when the Quote State was set to one of the Completion\n                States.\n              format: date-time\n              type: string\n            expectedQuoteCompletionDate:\n              description: \u003e-\n                This is the date provided by the Seller to indicate the date by\n                which the Quote is expected to reach a Quote Completion State\n              format: date-time\n              type: string\n            validFor:\n              description: \u003e-\n                Quote validity period. For use in the context of this\n                attribute, only the endDateTime attribute must be used.\n              $ref: '#/components/schemas/TimePeriod'\n            quoteLevel:\n              description: \u003e-\n                An indication of whether the Seller's Quote Response is\n                Budgetary, Firm - Subject to Feasibility Check, or Firm. The\n                Seller Quote Level is provided by the Seller when responding to\n                a Quote request.  This represents the lowest Quote Item Level\n                of all Quote Items included in the Quote.\n              $ref: '#/components/schemas/MEFSellerQuoteLevel'\n            quoteItem:\n              description: \u003e-\n                An item of the quote - it is used to describe an operation on a\n                product to be quoted\n              items:\n                $ref: '#/components/schemas/QuoteItem'\n              minItems: 1\n              type: array\n            stateChange:\n              description: State change for the Quote\n              items:\n                $ref: '#/components/schemas/MEFQuoteStateChange'\n              type: array\n            id:\n              description: Unique identifier - attributed by quoting system\n              type: string\n            href:\n              description: \u003e\n                Hyperlink representing this Quote. Hyperlink MAY be used when\n                providing a response by the Seller\n              type: string\n            state:\n              description: The state of the Quote.\n              $ref: '#/components/schemas/MEFQuoteStateType'\n            quoteDate:\n              description: Date and time when the quote was created\n              format: date-time\n              type: string\n          required:\n            - id\n            - quoteDate\n            - quoteItem\n          type: object\n    QuoteItem:\n      allOf:\n        - $ref: '#/components/schemas/MEFQuoteItem_Common'\n        - description: \u003e-\n            Quote items describe an action to be performed on a productOffering\n            or a product in order to get pricing elements and conditions.\n          properties:\n            terminationError:\n              description: \u003e-\n                When the Seller cannot process the Quote Item Request, the\n                Seller returns a text-based list of reasons here.\n              items:\n                $ref: '#/components/schemas/TerminationError'\n              type: array\n            quoteItemInstallationInterval:\n              description: \u003e-\n                Quote Item Installation Interval as proposed by the Seller for\n                the Quote.\n              $ref: '#/components/schemas/Duration'\n            subjectToFeasibilityCheck:\n              description: \u003e-\n                For a Firm Quote Level indicates if the pricing requires a\n                Feasibility Check. The Seller indicates if the Quote Item\n                requires a Feasibility Check. This is not used for a Budgetary\n                Quote Level.\n              type: boolean\n            quoteItemTerm:\n              description: \u003e-\n                Quote Item Term as defined by the Seller and part of the Quote\n                for the Quote Item.\n              items:\n                $ref: '#/components/schemas/MEFItemTerm'\n              maxItems: 1\n              type: array\n            state:\n              description: The state of the Quote Item.\n              $ref: '#/components/schemas/MEFQuoteItemStateType'\n            quoteItemPrice:\n              description: Price for this quote item\n              items:\n                $ref: '#/components/schemas/QuotePrice'\n              type: array\n          required:\n            - state\n          type: object\n    QuoteItemRelationship:\n      description: \u003e-\n        Used to describe the relationship between quote items. These\n        relationships could have an impact on pricing and conditions\n      properties:\n        relationshipType:\n          description: \u003e-\n            Relationship type as relies on, bundles, etc... MEF: Specifies the\n            nature of the relationship to the related Quote Items. The nature\n            of required relationships varies for Products of different types.\n            For example, a UNI or ENNI Product may not have any relationships,\n            but an Access E-Line may have two mandatory relationships (related\n            to the UNI on one end and the ENNI on the other). More complex\n            Products such as multipoint IP or Firewall Products may have more\n            complex relationships. As a result, the allowed and mandatory\n            Relationship Nature values are defined in the Product\n            Specification.\n          type: string\n        id:\n          description: ID of the related quote item (must be in the same quote)\n          type: string\n      required:\n        - id\n        - relationshipType\n      type: object\n    QuoteOperationData:\n      description:\n        Request for operation on an existing Quote (cancel or decline)\n      properties:\n        reason:\n          description: \u003e-\n            Allows the Buyer to specify a reason for the Cancel or Decline\n            Quote request.\n          type: string\n        quoteId:\n          description: \u003e-\n            Unique (within the Seller quoting domain) identifier for the quote,\n            as attributed by the Seller.\n          type: string\n      required:\n        - quoteId\n      type: object\n    QuotePrice:\n      description: Description of price and discount awarded\n      properties:\n        unitOfMeasure:\n          description: \u003e-\n            Unit of Measure if price depending on it (Gb, SMS volume, etc..)\n            MEF: if Quote Item Price Type equals usageBased\n          type: string\n        price:\n          description: The associated price\n          $ref: '#/components/schemas/Price'\n        name:\n          description: Name of the quote/quote item price\n          type: string\n        priceType:\n          description: \u003e-\n            Indicates if the price is for recurring, non-recurring, or usage\n            based charges\n          $ref: '#/components/schemas/MEFPriceType'\n        description:\n          description: Description of the quote/quote item price\n          type: string\n        recurringChargePeriod:\n          description: Used for a recurring charge to indicate a period\n          $ref: '#/components/schemas/MEFChargePeriod'\n      type: object\n    Quote_Common:\n      description: \u003e-\n        Quote can be used to negotiate service and product acquisition or\n        modification between a customer and a service provider. Quote contains\n        a list of quote items, a reference to a customer, a list of\n        productOfferings, and attached prices and conditions.\n      properties:\n        note:\n          description: \u003e-\n            Free form text associated with the quote. Only useful in processes\n            involving human interaction. Not applicable for the automated\n            process.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        requestedQuoteCompletionDate:\n          description: \u003e-\n            This is requested date - from quote requester - to get a complete\n            response for this quote\n          format: date-time\n          type: string\n        relatedContactInformation:\n          description: \u003e-\n            Party playing a role for this quote. If `instantSyncQuote` equals\n            `false` \n\n            then the Buyer MUST specify Buyer Contact Information ('role:\n            buyerContactInformation') \n\n            and the Seller MUST specify Seller Contact Information ('role:\n            sellerContactInformation')\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        description:\n          description: Description of the quote\n          type: string\n        externalId:\n          description: \u003e-\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n          type: string\n        buyerRequestedQuoteLevel:\n          description: \u003e-\n            An indication of whether the Buyer's Quote request is for a Quote\n            of Budgetary or Firm level.\n          $ref: '#/components/schemas/MEFBuyerQuoteLevel'\n        projectId:\n          description: \u003e-\n            An identifier that is used to group Quotes that represent a unit of\n            functionality that is important to a Buyer. A Project can be used\n            to relate multiple Quotes together.\n          type: string\n        instantSyncQuote:\n          description: \u003e-\n            If this flag is set to true, the Buyer requests an immediate Quote\n            to be provided in the response to the creation of a Quote.\n          type: boolean\n      required:\n        - buyerRequestedQuoteLevel\n        - instantSyncQuote\n      type: object\n    Quote_Create:\n      allOf:\n        - $ref: '#/components/schemas/Quote_Common'\n        - description: \u003e\n            Quote can be used to negotiate service and product acquisition or\n            modification between a customer and a service provider. Quote\n            contains a list of quote items, a reference to a customer, a list\n            of productOfferings, and attached prices and conditions.\n          properties:\n            quoteItem:\n              description: \u003e-\n                An item of the quote - used to describe an operation on a\n                product to be quoted\n              items:\n                $ref: '#/components/schemas/MEFQuoteItem_Create'\n              minItems: 1\n              type: array\n          required:\n            - quoteItem\n          type: object\n    Quote_Find:\n      description: \u003e\n        This class represents a single list item for the response of\n        `listQuote` operation.\n      properties:\n        effectiveQuoteCompletionDate:\n          description:\n            Date when the Quote State was set to one of the Completion States\n          format: date-time\n          type: string\n        expectedQuoteCompletionDate:\n          description: \u003e-\n            This is the date provided by the Seller to indicate expected Quote\n            completion date\n          format: date-time\n          type: string\n        requestedQuoteCompletionDate:\n          description: \u003e-\n            This is requested date - from quote requester - to get a complete\n            response for this quote\n          format: date-time\n          type: string\n        quoteLevel:\n          description: \u003e-\n            The level of the Quote provided by the Seller. This represents the\n            lowest Quote Item Level of all Quote Items included in the Quote.\n          $ref: '#/components/schemas/MEFSellerQuoteLevel'\n        externalId:\n          description: \u003e-\n            ID given by the consumer and only understandable by him (to\n            facilitate his searches afterward)\n          type: string\n        id:\n          description: Unique identifier - attributed by quoting system\n          type: string\n        state:\n          description: The state of the Quote.\n          $ref: '#/components/schemas/MEFQuoteStateType'\n        projectId:\n          description: \u003e-\n            An identifier that is used to group Quotes that represent a unit of\n            functionality that is important to a Buyer. A Project can be used\n            to relate multiple Quotes together.\n          type: string\n        quoteDate:\n          description: Date and time when the quote was created\n          format: date-time\n          type: string\n      required:\n        - state\n      type: object\n    RelatedContactInformation:\n      description: \u003e-\n        Contact data for a person or organization that is involved in a given\n        context. It is specified by the Seller (e.g. Seller Contact\n        Information) or by the Buyer. \n\n        Reference: MEF 80 (Sn 8.1.9)\n      properties:\n        number:\n          description: Phone number\n          type: string\n        emailAddress:\n          description: Email address\n          type: string\n        role:\n          description: The role of the particular contact in a given context.\n          type: string\n        postalAddress:\n          description: \u003e-\n            Identifies the postal address of the person or office to be\n            contacted.\n          $ref: '#/components/schemas/FieldedAddress'\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n      required:\n        - emailAddress\n        - name\n        - number\n        - role\n      type: object\n    RelatedPlaceRefOrValue:\n      description:\n        Place defines the places where the products' quotation must be done.\n      discriminator:\n        mapping:\n          FieldedAddress: '#/components/schemas/FieldedAddress'\n          FormattedAddress: '#/components/schemas/FormattedAddress'\n          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'\n          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'\n          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'\n          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'\n        propertyName: '@type'\n      properties:\n        role:\n          description: Role of this place\n          type: string\n        '@type':\n          description: \u003e\n            This field is used as a discriminator and is used between different\n            place representations. This type might discriminate for the\n            additional related place as defined in '@schemaLocation'.\n          type: string\n        '@schemaLocation':\n          description: \u003e-\n            A URI to a JSON-Schema file that defines additional attributes and\n            relationships. May be used to define additional related place\n            types. Usage of this attribute must be agreed upon between Buyer\n            and Seller.\n          format: uri\n          type: string\n      required:\n        - '@type'\n        - role\n      type: object\n    TerminationError:\n      description: \u003e-\n        This indicates an error that caused an Item to be terminated. The code\n        and propertyPath should be used like in Error422.\n      properties:\n        code:\n          description: |\n            One of the following error codes:\n              - missingProperty: The property the Seller has expected is not present in the payload\n              - invalidValue: The property has an incorrect value\n              - invalidFormat: The property value does not comply with the expected value format\n              - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n              - unexpectedProperty: Additional property, not expected by the Seller has been provided\n              - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n              - otherIssue: Other problem was identified (detailed information provided in a reason)\n          $ref: '#/components/schemas/Error422Code'\n        propertyPath:\n          description: \u003e\n            A pointer to a particular property of the payload that caused the\n            validation issue. It is highly recommended that this property\n            should be used.\n\n            Defined using JavaScript Object Notation (JSON) Pointer\n            (https://tools.ietf.org/html/rfc6901).\n          type: string\n        value:\n          description: Text to describe the reason of the termination.\n          type: string\n      type: object\n    TimePeriod:\n      description: \u003e-\n        A period of time, either as a deadline (endDateTime only) a\n        startDateTime only, or both.\n      properties:\n        startDateTime:\n          description: \u003e-\n            Start of the time period, using IETC-RFC-3339 format. If you define\n            a start, you must also define an end\n          example: 1985-04-12T23:20:50.520Z\n          format: date-time\n          type: string\n        endDateTime:\n          description: 'End of the time period, using IETC-RFC-3339 format'\n          example: 1985-04-12T23:20:50.520Z\n          format: date-time\n          type: string\n      type: object\n    TimeUnit:\n      description: |\n        Represents a unit of time.\n        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)\n      enum:\n        - calendarMonths\n        - calendarDays\n        - calendarHours\n        - calendarMinutes\n        - businessDays\n        - businessHours\n        - businessMinutes\n      type: string\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/productApi/quote/quoteManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/productApi/quote/quoteManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}