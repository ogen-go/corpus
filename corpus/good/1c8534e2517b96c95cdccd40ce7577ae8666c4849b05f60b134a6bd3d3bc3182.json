{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TempleEight/temple"
		},
		"file": {
			"name": "attributes.openapi.yaml",
			"size": 0,
			"path": "src/e2e/resources/attributes-temple-expected/api/attributes.openapi.yaml",
			"byteSize": 3896,
			"content": "openapi: 3.0.0\ninfo:\n  title: Attributes\n  version: 0.0.1\npaths:\n  /example:\n    post:\n      summary: Register a new example\n      tags:\n      - Example\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                clientAttribute:\n                  type: string\n      responses:\n        '200':\n          description: Example successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  serverSetAttribute:\n                    type: boolean\n        '400':\n          $ref: '#/components/responses/Error400'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /example/{id}:\n    parameters:\n    - in: path\n      name: id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the example to perform operations on\n    get:\n      summary: Look up a single example\n      tags:\n      - Example\n      responses:\n        '200':\n          description: Example details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  serverSetAttribute:\n                    type: boolean\n        '400':\n          $ref: '#/components/responses/Error400'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    put:\n      summary: Update a single example\n      tags:\n      - Example\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                clientAttribute:\n                  type: string\n      responses:\n        '200':\n          description: Example successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  serverSetAttribute:\n                    type: boolean\n        '400':\n          $ref: '#/components/responses/Error400'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    delete:\n      summary: Delete a single example\n      tags:\n      - Example\n      responses:\n        '200':\n          description: Example successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/Error400'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\ncomponents:\n  responses:\n    Error400:\n      description: Invalid request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: 'Invalid request parameters: name'\n    Error404:\n      description: ID not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: Object not found with ID 1\n    Error500:\n      description: The server encountered an error while serving this request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: 'Unable to reach user service: connection timeout'\n",
			"canonicalURL": "/github.com/TempleEight/temple@d30423eac2fd8f8ab276260575cd928547e059d9/-/blob/src/e2e/resources/attributes-temple-expected/api/attributes.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/TempleEight/temple/blob/d30423eac2fd8f8ab276260575cd928547e059d9/src/e2e/resources/attributes-temple-expected/api/attributes.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}