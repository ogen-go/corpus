{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/iterate-ch/cyberduck"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "eue/src/main/resources/api.yaml",
			"byteSize": 47019,
			"content": "openapi: 3.0.1\ninfo:\n    title: ReSTFS\n    description: ReSTFS Open API 3.0 Spec\n    version: '1.0'\nservers:\n    - url: https://{gmxcloud}/{service}/fs/{username}\n      variables:\n          gmxcloud:\n              default: mc.gmx.net\n              description: gmxcloud\n          service:\n              default: restfs-1\n              description: serviceName\n          username:\n              default: username\n              description: username\nsecurity:\n    - bearerAuth: []\npaths:\n    /userinfo:\n        get:\n            description: Retrieve the metadata of a file or of a container.\n            tags: [UserInfo]\n            parameters:\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: query\n                  name: option\n                  description: \"decorator option (\u003c string \u003e array(csv))\"\n                  schema:\n                      type: string\n                  explode: true\n            responses:\n                '200':\n                    description: metadata of a file or of a container\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/UserInfoResponseModel'\n                '401':\n                    description: UNAUTHORIZED, authentication failed\n                '404':\n                    description: NOT FOUND, User does not exist\n    /share:\n        get:\n            description: Retrieve the metadata of all shares of this user.\n            tags: [GetUserShares]\n            parameters:\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: query\n                  name: option\n                  description: \"decorator option (\u003c string \u003e array(csv))\"\n                  schema:\n                      type: string\n                  explode: true\n            responses:\n                '200':\n                    description: metadata of a file or of a container\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/UserSharesModel'\n    /resource/{resourceId}:\n        get:\n            description: Retrieve the metadata of a file or of a container.\n            tags: [ListResource]\n            parameters:\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-None-Match\n                  description: optional If-None-Match header\n                  schema:\n                      type: string\n                - in: query\n                  name: downloadURIValidity\n                  description: \"optional parameter to suggest a lifetime for downloadURIs received through the options 'open' and 'download'\"\n                  schema:\n                      type: string\n                - in: query\n                  name: fields\n                  schema:\n                      type: string\n                - in: query\n                  name: length\n                  schema:\n                      type: integer\n                      format: int32\n                  description: \"max number of items to return (containers only)\"\n                - in: query\n                  name: offset\n                  description: \"start offset (containers only)\"\n                  schema:\n                      type: integer\n                      format: int32\n                - in: query\n                  name: option\n                  description: \"decorator option (\u003c string \u003e array(csv))\"\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - in: query\n                  name: sort\n                  description: \"list of sort criteria (containers only)\"\n                  schema:\n                      type: string\n            responses:\n                '200':\n                    description: metadata of a file or of a container\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/UiFsModel'\n                '304':\n                    description: NOT MODIFIED Metadata not modified\n        post:\n            tags: [postResource]\n            description: Creates an upload URI for replacing the content of an existing file resource\n            parameters:\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - in: query\n                  name: option\n                  description: \"Optional parameter indicating if the upload should be with internal Uri\"\n                  schema:\n                      $ref: '#/components/schemas/OptionsQueryParam'\n                  required: false\n                - in: query\n                  name: lockToken\n                  description: optional LockToken\n                  required: false\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                uploadType:\n                                    $ref: '#/components/schemas/uploadType'\n                                patch:\n                                    $ref: '#/components/schemas/ResourceUpdateModel'\n                                size:\n                                    type: integer\n                                    format: int64\n            responses:\n                '200':\n                    description: \"success\"\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/FileUpdateResponseRepresentation'\n                            examples:\n                                0:\n                                    value: |-\n                                        {\"uploadURI\":\"https://someserver.example.com/data/testuser@gmx.de/resource/352/blob?token=1U_1384875407_ce...\"\"}\n                '400':\n                    description: \"BAD REQUEST, Wrong resource type\"\n                '412':\n                    description: \"PRECONDITION FAILED, non-matching Etag of 'If-Match' Header\"\n                '423':\n                    description: \"LOCKED, Resource is locked\"\n        patch:\n            description: Change properties of resources.\n            tags: [updateResource]\n            parameters:\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - in: query\n                  name: lockToken\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ResourceUpdateModel'\n                        examples:\n                            '0':\n                                value: |-\n                                    {\n                                        \"update\" : {\n                                            \"ui:fs\" : {\n                                              \"name\":  \"karthik-folder3\"\n                                            }\n                                        }\n                                    }\n            responses:\n              '207':\n                description: MULTI STATUS\n                content:\n                  application/json;charset=utf-8:\n                    schema:\n                      $ref: '#/components/schemas/ResourceMoveResponseEntries'\n        delete:\n            description: Delete a resource from trash\n            tags: [deleteResource]\n            parameters:\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n            responses:\n                '200':\n                    description: success\n                '403':\n                    description: FORBIDDEN, Deletion not allowed\n                '409':\n                    description: CONFLICT, Resource already exists in trash\n                '412':\n                    description: PRECONDITION FAILED, non-matching Etag of 'If-Match' Header\n            servers:\n                - url: https://mc.gmx.net\n    /resource/{resourceId}/children:\n        post:\n            description: Prepare upload of files or create container/nested containers like \"mkdir -p\"\n            tags: [postChildren]\n            parameters:\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - name: conflictResolution\n                  in: query\n                  description: conflictResolution - rename or none (default)\n                  schema:\n                      type: string\n                      enum:\n                          - RENAME\n                          - OVERWRITE\n                          - NONE\n                          - INVALID\n                - name: lockToken\n                  in: query\n                  description: the lock token used to access a locked resource\n                  schema:\n                      type: string\n                - name: option\n                  in: query\n                  description: Optional parameter indicating if the upload should be with internal Uri\n                  schema:\n                      $ref: '#/components/schemas/OptionsQueryParam'\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ResourceCreationRepresentationArray'\n                        examples:\n                            '0':\n                                value: \"[\\r\\n     {\\r\\n         \\\"path\\\": \\\"test1/test2/test3\\\",\\r\\n         \\\"resourceType\\\": \\\"container\\\"\\r\\n     }\\r\\n ]\"\n            responses:\n                '207':\n                    description: MULTI STATUS\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/ResourceCreationResponseEntries'\n                '400':\n                    description: BAD REQUEST, No path provided, path too long or path contains illegal characters\n                '409':\n                    description: CONFLICT, file resource already exists (inside of the multistatus)\n                '412':\n                    description: PRECONDITION, FAILED non-matching Etag of 'If-Match' Header\n                '423':\n                    description: LOCKED, Resource or parent resource is locked (inside of the multistatus)\n                '507':\n                    description: INSUFFICIENT STORAGE, insufficient storage or quotas exceeded (inside of the multistatus)\n    /resource/{resourceId}/children/copy:\n        post:\n            description: Copy resources from one container to another.\n            tags: [copyChildren]\n            parameters:\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - name: autoRename\n                  in: query\n                  description: (deprecated) flag for enforcing automatic rename on conflict\n                  schema:\n                      type: boolean\n                - name: conflictResolution\n                  in: query\n                  description: conflictResolution - overwrite or rename\n                  schema:\n                      type: string\n                      enum:\n                          - RENAME\n                          - OVERWRITE\n                          - NONE\n                          - INVALID\n                - name: lockToken\n                  in: query\n                  description: the lock token used to access a locked resource\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CopyResourceUrlsArray'\n                        examples:\n                            '0':\n                                value: \"[\\r\\n     \\\"https://mc.gmx.net/resource/1017873547923559875\\\",\\r\\n     \\\"https://mc.gmx.net/resource/1017873547923559876\\\"\\r\\n ]\"\n            responses:\n                '207':\n                    description: MULTI STATUS\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/ResourceCopyResponseEntries'\n                '403':\n                    description: FORBIDDEN, Not allowed\n                '409':\n                    description: CONFLICT, file resource already exists (inside of the multistatus)\n                '412':\n                    description: PRECONDITION, FAILED non-matching Etag of 'If-Match' Header\n                '423':\n                    description: LOCKED, Resource or parent resource is locked (inside of the multistatus)\n                '507':\n                    description: INSUFFICIENT STORAGE, insufficient storage or quotas exceeded (inside of the multistatus)\n    /resource/{resourceId}/children/move:\n        post:\n            description: Move resources to a container\n            tags: [MoveChildren]\n            parameters:\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - name: autoRename\n                  in: query\n                  description: (deprecated) flag for enforcing automatic rename on conflict\n                  schema:\n                      type: boolean\n                - name: conflictResolution\n                  in: query\n                  description: conflictResolution - overwrite or rename\n                  schema:\n                      type: string\n                      enum:\n                          - RENAME\n                          - OVERWRITE\n                          - NONE\n                          - INVALID\n                - name: lockToken\n                  in: query\n                  description: the lock token used to access a locked resource\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CopyResourceUrlsArray'\n                        examples:\n                            '0':\n                                value: \"[\\r\\n     \\\"https://mc.gmx.net/resource/1017873844142086120\\\"\\r\\n ]\"\n            responses:\n                '207':\n                    description: MULTI STATUS\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/ResourceMoveResponseEntries'\n                '403':\n                    description: FORBIDDEN, Not allowed\n                '409':\n                    description: CONFLICT, file resource already exists (inside of the multistatus)\n                '412':\n                    description: PRECONDITION, FAILED non-matching Etag of 'If-Match' Header\n                '423':\n                    description: LOCKED, Resource or parent resource is locked (inside of the multistatus)\n                '507':\n                    description: INSUFFICIENT STORAGE, insufficient storage or quotas exceeded (inside of the multistatus)\n    /resourceAlias/{alias}:\n        get:\n            description: Retrieve the metadata of a file or of a container.\n            tags: [ListResourceAlias]\n            parameters:\n                - in: path\n                  name: alias\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-None-Match\n                  description: optional If-None-Match header\n                  schema:\n                      type: string\n                - in: query\n                  name: downloadURIValidity\n                  description: \"optional parameter to suggest a lifetime for downloadURIs received through the options 'open' and 'download'\"\n                  schema:\n                      type: string\n                - in: query\n                  name: fields\n                  schema:\n                      type: string\n                - in: query\n                  name: length\n                  schema:\n                      type: integer\n                      format: int32\n                  description: \"max number of items to return (containers only)\"\n                - in: query\n                  name: offset\n                  description: \"start offset (containers only)\"\n                  schema:\n                      type: integer\n                      format: int32\n                - in: query\n                  name: option\n                  description: \"decorator option (\u003c string \u003e array(csv))\"\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                - in: query\n                  name: sort\n                  description: \"list of sort criteria (containers only)\"\n                  schema:\n                      type: string\n            responses:\n                '200':\n                    description: metadata of a file or of a container\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/UiFsModel'\n                '304':\n                    description: NOT MODIFIED Metadata not modified\n    /resourceAlias/{alias}/children:\n        post:\n            description: Prepare upload of files or create container/nested containers like \"mkdir -p\"\n            tags: [postChildrenForAlias]\n            parameters:\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - in: path\n                  name: alias\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - name: conflictResolution\n                  in: query\n                  description: conflictResolution - rename or none (default)\n                  schema:\n                      type: string\n                      enum:\n                          - RENAME\n                          - OVERWRITE\n                          - NONE\n                          - INVALID\n                - name: lockToken\n                  in: query\n                  description: the lock token used to access a locked resource\n                  schema:\n                      type: string\n                - name: option\n                  in: query\n                  description: Optional parameter indicating if the upload should be with internal Uri\n                  schema:\n                      $ref: '#/components/schemas/OptionsQueryParam'\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ResourceCreationRepresentationArray'\n                        examples:\n                            '0':\n                                value: \"[\\r\\n     {\\r\\n         \\\"path\\\": \\\"test1/test2/test3\\\",\\r\\n         \\\"resourceType\\\": \\\"container\\\"\\r\\n     }\\r\\n ]\"\n            responses:\n                '207':\n                    description: MULTI STATUS\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/ResourceCreationResponseEntries'\n                '400':\n                    description: BAD REQUEST, No path provided, path too long or path contains illegal characters\n                '409':\n                    description: CONFLICT, file resource already exists (inside of the multistatus)\n                '412':\n                    description: PRECONDITION, FAILED non-matching Etag of 'If-Match' Header\n                '423':\n                    description: LOCKED, Resource or parent resource is locked (inside of the multistatus)\n                '507':\n                    description: INSUFFICIENT STORAGE, insufficient storage or quotas exceeded (inside of the multistatus)\n    /resourceAlias/{alias}/children/move:\n        post:\n            description: Move resources to a container\n            tags: [MoveChildrenForAliasApi]\n            parameters:\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - in: path\n                  name: alias\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - name: autoRename\n                  in: query\n                  description: (deprecated) flag for enforcing automatic rename on conflict\n                  schema:\n                      type: boolean\n                - name: conflictResolution\n                  in: query\n                  description: conflictResolution - overwrite or rename\n                  schema:\n                      type: string\n                      enum:\n                          - RENAME\n                          - OVERWRITE\n                          - NONE\n                          - INVALID\n                - name: lockToken\n                  in: query\n                  description: the lock token used to access a locked resource\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CopyResourceUrlsArray'\n                        examples:\n                            '0':\n                                value: \"[\\r\\n     \\\"https://mc.gmx.net/resource/1017873844142086120\\\"\\r\\n ]\"\n            responses:\n                '207':\n                    description: MULTI STATUS\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/ResourceMoveResponseEntries'\n                '403':\n                    description: FORBIDDEN, Not allowed\n                '409':\n                    description: CONFLICT, file resource already exists (inside of the multistatus)\n                '412':\n                    description: PRECONDITION, FAILED non-matching Etag of 'If-Match' Header\n                '423':\n                    description: LOCKED, Resource or parent resource is locked (inside of the multistatus)\n                '507':\n                    description: INSUFFICIENT STORAGE, insufficient storage or quotas exceeded (inside of the multistatus)\n    /resourceAlias/{alias}/children/copy:\n        post:\n            description: Copy resources to a container\n            tags: [CopyChildrenForAliasApi]\n            parameters:\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: header\n                  name: If-Match\n                  description: ifMatchHeader\n                  schema:\n                      type: string\n                - in: path\n                  name: alias\n                  schema:\n                      type: string\n                  required: true\n                  description: id of the resource (resourceURI)\n                - name: autoRename\n                  in: query\n                  description: (deprecated) flag for enforcing automatic rename on conflict\n                  schema:\n                      type: boolean\n                - name: conflictResolution\n                  in: query\n                  description: conflictResolution - overwrite or rename\n                  schema:\n                      type: string\n                      enum:\n                          - RENAME\n                          - OVERWRITE\n                          - NONE\n                          - INVALID\n                - name: lockToken\n                  in: query\n                  description: the lock token used to access a locked resource\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CopyResourceUrlsArray'\n                        examples:\n                            '0':\n                                value: \"[\\r\\n     \\\"https://mc.gmx.net/resource/1017873844142086120\\\"\\r\\n ]\"\n            responses:\n                '207':\n                    description: MULTI STATUS\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/ResourceCopyResponseEntries'\n                '403':\n                    description: FORBIDDEN, Not allowed\n                '409':\n                    description: CONFLICT, file resource already exists (inside of the multistatus)\n                '412':\n                    description: PRECONDITION, FAILED non-matching Etag of 'If-Match' Header\n                '423':\n                    description: LOCKED, Resource or parent resource is locked (inside of the multistatus)\n                '507':\n                    description: INSUFFICIENT STORAGE, insufficient storage or quotas exceeded (inside of the multistatus)\n    /resource/{resourceId}/share:\n        post:\n            description: Create a share for a file or container\n            tags: [CreateShare]\n            parameters:\n                - in: path\n                  name: resourceId\n                  schema:\n                      type: string\n                  required: true\n                - in: header\n                  name: cookie\n                  description: cookie\n                  schema:\n                      type: string\n                - in: query\n                  name: option\n                  description: options to specify additional resource data\n                  schema:\n                      type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ShareCreationRequestModel'\n            responses:\n                '207':\n                    description: MULTI STATUS, One entry per guest\n                    content:\n                        application/json;charset=utf-8:\n                            schema:\n                                $ref: '#/components/schemas/ShareCreationResponseModel'\n                '404':\n                    description: NOT FOUND\ncomponents:\n    securitySchemes:\n        bearerAuth:\n            type: http\n            scheme: bearer\n            bearerFormat: JWT\n    schemas:\n        Uifs:\n            properties:\n                creationMillis:\n                    type: integer\n                    format: int64\n                childrenSize:\n                    type: integer\n                    format: int64\n                metaETag:\n                    type: string\n                lastResourceOperation:\n                    type: string\n                resourceURI:\n                    type: string\n                version:\n                    type: integer\n                    format: int32\n                lastResourceOperationClient:\n                    type: string\n                size:\n                    type: integer\n                    format: int64\n                children:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Children'\n                name:\n                    type: string\n                modificationMillis:\n                    type: integer\n                    format: int64\n                childrenCount:\n                    type: integer\n                    format: int32\n                resourceType:\n                    type: string\n                cdash64:\n                    type: string\n                referenceId:\n                    type: string\n                storeId:\n                    type: string\n                guestModificationMillis:\n                    type: integer\n                    format: int64\n                originalParents:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Uifs'\n                contentETag:\n                    type: string\n                parents:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Uifs'\n                UiMetaResource:\n                    properties:\n                        ui:meta:resource:\n                            $ref: '#/components/schemas/UiMetaResourceModel'\n        Children:\n            properties:\n                ui:fs:\n                    $ref: '#/components/schemas/Uifs'\n                ui:win32:\n                    $ref: '#/components/schemas/UiWin32'\n                ui:share:\n                    $ref: '#/components/schemas/UiShareModel'\n        UiWin32:\n            properties:\n                readOnly:\n                    type: boolean\n                hidden:\n                    type: boolean\n                system:\n                    type: boolean\n                creationMillis:\n                    type: integer\n                    format: int64\n                lastModificationMillis:\n                    type: integer\n                    format: int64\n                lastAccessMillis:\n                    type: integer\n                    format: int64\n        UiLink:\n            properties:\n                downloadURI:\n                    type: string\n                thumbnailURL:\n                    type: string\n        UiFsModel:\n            properties:\n                ui:fs:\n                    $ref: '#/components/schemas/Uifs'\n                ui:win32:\n                    $ref: '#/components/schemas/UiWin32'\n                ui:link:\n                    $ref: '#/components/schemas/UiLink'\n                ui:share:\n                    $ref: '#/components/schemas/UiShareModel'\n        UiMetaResourceModel:\n            properties:\n                mimetype:\n                    type: string\n        FileUpdateResponseRepresentation:\n            properties:\n                uploadURI:\n                    type: string\n        OptionsQueryParam:\n            type: string\n            enum:\n                - DEFAULT\n                - METADATA\n                - MIGRATIONMETADATA\n                - ADDITIONALMETADATA\n                - WIN32PROPERTIES\n                - PARENTS\n                - PROPERTIES\n                - DOWNLOAD\n                - INTERNALDOWNLOAD\n                - UPLOAD\n                - INTERNALUPLOAD\n                - OPEN\n                - SHARES\n                - THUMBNAILS\n                - DISPLAYRESOURCE\n                - SYNC\n                - INVALID\n                - FULLPATH\n                - TAGS\n        ResourceCreationRepresentationArray:\n            type: array\n            items:\n                type: object\n                properties:\n                    forceOverwrite:\n                        type: boolean\n                    ovewrite:\n                        type: boolean\n                    path:\n                        type: string\n                    resourceType:\n                        type: string\n                        enum:\n                            - CONTAINER\n                            - ALIASCONTAINER\n                            - FILE\n                    sha256:\n                        type: string\n                    size:\n                        type: integer\n                        format: int64\n                    uploadType:\n                        $ref: '#/components/schemas/uploadType'\n                    properties:\n                        $ref: '#/components/schemas/ResourceCreationPropertiesModel'\n                required:\n                    - overwrite\n                    - path\n                    - resourceType\n        ResourceCreationPropertiesModel:\n            properties:\n                ui:win32:\n                    $ref: '#/components/schemas/UiWin32'\n                ui:share:\n                    $ref: '#/components/schemas/UiShareModel'\n        ResourceCreationResponseEntry:\n            type: object\n            properties:\n                statusCode:\n                    type: integer\n                reason:\n                    type: string\n                entity:\n                    type: object\n                    properties:\n                        conflicting:\n                            properties:\n                                ui:fs:\n                                    $ref: '#/components/schemas/Uifs'\n                        uploadURI:\n                            type: string\n                headers:\n                    type: object\n                    properties:\n                        Location:\n                            type: string\n        ResourceCreationResponseEntries:\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/ResourceCreationResponseEntry'\n        ResourceUpdateModel:\n            properties:\n                update:\n                    type: object\n                    properties:\n                        ui:fs:\n                            $ref: '#/components/schemas/Uifs'\n                        ui:win32:\n                            $ref: '#/components/schemas/UiWin32'\n        ResourceCopyResponseEntry:\n            type: object\n            properties:\n                statusCode:\n                    type: integer\n                reason:\n                    type: string\n                headers:\n                    type: object\n                    properties:\n                        Location:\n                            type: string\n        ResourceCopyResponseEntries:\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/ResourceCopyResponseEntry'\n        ResourceMoveResponseEntry:\n            type: object\n            properties:\n                statusCode:\n                    type: integer\n                reason:\n                    type: string\n                entity:\n                    type: object\n                    properties:\n                        conflicting:\n                            properties:\n                                ui:fs:\n                                    $ref: '#/components/schemas/Uifs'\n                        uploadURI:\n                            type: string\n        ResourceMoveResponseEntries:\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/ResourceMoveResponseEntry'\n        CopyResourceUrlsArray:\n            type: array\n            items:\n                type: string\n        Account:\n            properties:\n                lastAccessMillis:\n                    type: integer\n                    format: int64\n                language:\n                    type: string\n                schemaVersion:\n                    type: integer\n                    format: int32\n                systemVersion:\n                    type: integer\n                    format: int32\n                osServiceId:\n                    type: string\n        NumberResource:\n            properties:\n                max:\n                    type: integer\n                    format: int64\n                current:\n                    type: integer\n                    format: int64\n        ContentSize:\n            properties:\n                max:\n                    type: integer\n                    format: int64\n                current:\n                    type: integer\n                    format: int64\n        UserTrafficDownload:\n            properties:\n                max:\n                    type: integer\n                    format: int64\n                current:\n                    type: integer\n                    format: int64\n        UserTrafficUpload:\n            properties:\n                max:\n                    type: integer\n                    format: int64\n                current:\n                    type: integer\n                    format: int64\n        GuestTraffic:\n            properties:\n                max:\n                    type: integer\n                    format: int64\n                current:\n                    type: integer\n                    format: int64\n        Quotas:\n            properties:\n                numberResource:\n                    $ref: '#/components/schemas/NumberResource'\n                contentSize:\n                    $ref: '#/components/schemas/ContentSize'\n                userTrafficDownload:\n                    $ref: '#/components/schemas/UserTrafficDownload'\n                userTrafficUpload:\n                    $ref: '#/components/schemas/UserTrafficUpload'\n                guestTraffic:\n                    $ref: '#/components/schemas/GuestTraffic'\n        Limits:\n            properties:\n                fileSize:\n                    type: integer\n                    format: int64\n                resourcesPerContainer:\n                    type: integer\n                    format: int32\n                resourcesPerTrash:\n                    type: integer\n                    format: int32\n                pathLength:\n                    type: integer\n                    format: int32\n                maxGuestsPerRequest:\n                    type: integer\n                    format: int32\n        Aliases:\n            properties:\n                TRASH:\n                    type: string\n                ROOT:\n                    type: string\n        UiGeo:\n            properties:\n                databaseLatestUpdate:\n                    type: integer\n                    format: int64\n                reverseGeocodingFullyIndexed:\n                    type: boolean\n        UiShare:\n            properties:\n                credentialStoreFullyIndexed:\n                    type: boolean\n        Shares:\n            properties:\n                writableSharesMinimumProtection:\n                    type: string\n                    enum:\n                        - ANY\n                        - PIN\n                        - EXPIRATION\n                        - PIN_AND_EXPIRATION\n        Settings:\n            properties:\n                ui:geo:\n                    $ref: '#/components/schemas/UiGeo'\n                ui:share:\n                    $ref: '#/components/schemas/UiShare'\n                shares:\n                    $ref: '#/components/schemas/Shares'\n        UserInfoResponseModel:\n            properties:\n                account:\n                    $ref: '#/components/schemas/Account'\n                quotas:\n                    $ref: '#/components/schemas/Quotas'\n                limits:\n                    $ref: '#/components/schemas/Limits'\n                aliases:\n                    $ref: '#/components/schemas/Aliases'\n                settings:\n                    $ref: '#/components/schemas/Settings'\n        SharePermission:\n            properties:\n                readable:\n                    type: boolean\n                writable:\n                    type: boolean\n                deletable:\n                    type: boolean\n                notificationEnabled:\n                    type: boolean\n        ShareCreationRequestEntry:\n            type: object\n            properties:\n                guestEMail:\n                    type: string\n                name:\n                    type: string\n                permission:\n                    $ref: '#/components/schemas/SharePermission'\n                pin:\n                    type: string\n                hasPin:\n                    type: boolean\n                expirationMillis:\n                    type: integer\n                    format: int64\n                unmountable:\n                    type: boolean\n        ShareCreationRequestModel:\n            type: array\n            items:\n                $ref: '#/components/schemas/ShareCreationRequestEntry'\n        ShareCreationResponseEntity:\n            type: object\n            properties:\n                resourceURI:\n                    type: string\n                shareURI:\n                    type: string\n                guestURI:\n                    type: string\n                creationMillis:\n                    type: integer\n                    format: int64\n                guestEMail:\n                    type: string\n                pin:\n                    type: string\n                unmountable:\n                    type: boolean\n                name:\n                    type: string\n                resource:\n                    properties:\n                        ui:fs:\n                            $ref: '#/components/schemas/Uifs'\n                permission:\n                    $ref: '#/components/schemas/SharePermission'\n                displayName:\n                    type: string\n                hasPin:\n                    type: boolean\n        ShareCreationResponseEntry:\n            type: object\n            properties:\n                statusCode:\n                    type: integer\n                    format: int32\n                reason:\n                    type: string\n                entity:\n                    $ref: '#/components/schemas/ShareCreationResponseEntity'\n        ShareCreationResponseModel:\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/ShareCreationResponseEntry'\n        uploadType:\n            type: string\n            enum:\n                - SIMPLE\n                - SIMPLECHUNK\n                - CHUNKED\n                - URI\n                - FORM\n        UiShareModel:\n            properties:\n                share:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ShareModel'\n        ShareModel:\n            properties:\n                ownerName:\n                    type: string\n                name:\n                    type: string\n                expirationMillis:\n                    type: integer\n                    format: int64\n                resourcePermission:\n                    $ref: '#/components/schemas/SharePermission'\n                hasPin:\n                    type: boolean\n        UserSharesModel:\n            type: array\n            items:\n                $ref: '#/components/schemas/ShareCreationResponseEntity'\n",
			"canonicalURL": "/github.com/iterate-ch/cyberduck@3e0e4bf216f28539afc524873d2fb533ef05bd71/-/blob/eue/src/main/resources/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/iterate-ch/cyberduck/blob/3e0e4bf216f28539afc524873d2fb533ef05bd71/eue/src/main/resources/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}