{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tip-initiative/tip-initiative-apis"
		},
		"file": {
			"name": "commonSchemas.yaml",
			"size": 0,
			"path": "endpoints/schemas/commonSchemas.yaml",
			"byteSize": 58835,
			"content": "openapi: 3.0.0\ninfo:\n  version: 6.0.0\n  title: Common Schemas\n  description: TIP Common objects schemas\n  termsOfService: http://placeholderdomain.io/terms/\n  contact:\n    name: TIP Initiative\n    email: tipinitiative@frontrowadvisory.com\n    url: http://placeholderdomain.io\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\npaths: {}\ncomponents:\n  schemas:\n    TransactionHeader:\n      description: General transaction header information\n      properties:\n        tipVersion:\n          description: TIP version of the interface\n          type: string\n          example: 6.0.0\n        transactionId:\n          $ref: '#/components/schemas/TransactionId'\n        originalTransactionId:\n          $ref: '#/components/schemas/TransactionId'\n        timeStamp:\n          description: Date and time the transaction was created - date-time represent UTC of the server\n          type: string\n          format: date-time\n          example: '2021-07-21T17:32:28Z'\n      required:\n        - tipVersion\n        - transactionId\n        - timeStamp\n    TransactionId:\n      description: Transaction identifier details\n      properties:\n        transactionId:\n          description: Global unique identifier (GUID)\n          type: string\n          format: uuid\n          example: 1C237FDD-940D-499E-AA20-DF3B9CE0908E\n        transactionType:\n          description: Indicates the transaction type\n          type: string\n          enum:\n            - New\n            - Change\n            - Cancel\n            - Reject\n            - Recall\n            - Confirm\n        sourceId:\n          description: Indicates the unique identifier of the source of information from an external system\n          type: string\n          example: ABC-1234\n        sourceName:\n          description: Indicates the name of the source of information from an external system\n          type: string\n          example: TIPApi\n      required:\n        - transactionId\n        - transactionType\n        - sourceId\n        - sourceName\n    MediaOutlet:\n      description: Linear broadcast television or non-linear sell-side service\n      properties:\n        mediaOutletIds:\n          description: Array of identifier objects used to identify the mediaOutletId and its source system\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n          xml: \n            wrapped: true\n        mediaOutletName:\n          description: Station, network name or entity associated to mediaOutletId\n          type: string\n          example: MBLTV - My Best Local TV Station\n        mediaOutletType:\n          description: \u003e-\n            Indicates the type of media; for example Local TV, Diginet TV, National Cable TV,\n            Local Cable TV, Video Streaming Service, Satellite, Website, App, Audio Streaming\n            Service, Radio Station, Unwired, Parent\n          type: string\n          example: Local TV\n        mediaOutletChannel:\n          description: Station or network station identification (Channel)\n          type: string\n          example: KHOU-TV\n        mediaOutletMarketName:\n          description: Media market name such as the DMA or region\n          type: string\n          example: Houston, TX\n        mediaOutletReference:\n          description: External mediaoutlet reference name\n          type: string\n      required:\n        - mediaOutletIds\n        - mediaOutletName\n        - mediaOutletType\n      xml:\n        name: mediaOutlet\n    Advertiser:\n      description: Advertiser information\n      properties:\n        advertiserIds:\n          description: Array of identifier objects used to identify the advertiser id and its source system\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n        advertiserName:\n          description: Advertiser name\n          type: string\n          example: Hyundai\n        advertiserReference:\n          description: External advertiser reference to support data mapping differences between systems\n          type: string\n      required:\n        - advertiserIds\n        - advertiserName\n      xml:\n        name: advertiser\n    Brand:\n      description: Advertising brand information\n      properties:\n        brandIds:\n          description: Array of identifier objects used to identify the brand id and its source system\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n        brandName:\n          description: Brand Name\n          type: string\n          example: Kona\n        brandReference:\n          description: External brand reference name\n          type: string\n      required:\n        - brandIds\n        - brandName\n      xml:\n        name: brand\n    Buyer:\n      description: Buy-side organization information\n      properties:\n        buyerIds:\n          description: Array of identifier objects used to identify the buyer id and it source system\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          xml:\n            wrapped: true\n          minItems: 1\n        buyerName:\n          description: Buying organization name\n          type: string\n          example: Canvas Worldwide. LLC\n        buyerReference:\n          description: External buyer reference Name\n          type: string\n      required:\n        - buyerIds\n        - buyerName\n      xml:\n        name: buyer\n    Product:\n      description: Product category information\n      properties:\n        productIds:\n          description: Array of identifier objects used to identify the product id and its source system\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n        productName:\n          description: Product name\n          type: string\n          example: Automobile\n        productReference:\n          description: External product reference name\n          type: string\n      required:\n        - productIds\n        - productName\n      xml:\n        name: product\n    AudienceTarget:\n      description: Audience target information\n      properties:\n        excludeOrInclude:\n          description: Include or Exclude\n          type: string\n          enum:\n            - Include\n            - Exclude\n        audienceTargetIds:\n          description: Array of identifier objects used to identify the audience target id and its source system\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n          xml:\n            wrapped: true\n        targetAttribute:\n          description: \u003e-\n            Target attributes demographics could range from household income or education,\n            purchase propensity (e.g. past purchases or predicted future purchases), lifestyle\n            (a sophisticated combination of geography and demographics, e.g. affluent\n            suburbanites, media behaviors (e.g. sports fans), geography, or expressed interests\n            (e.g. music or cooking), etc.\n          type: string\n          example: HH Income\n        value:\n          description: ArrayList  containing the targetAttributes values\n          type: array\n          items:\n            type: string\n            xml:\n              name: item\n          xml:\n            wrapped: true\n          example: [\"$50,000 - $75,000\", \"$75,000, -$100,000\"]\n      required:\n        - excludeOrInclude\n        - targetAttribute\n        - value\n      xml:\n        name: audienceTarget\n    AudienceSegment:\n      description: Audience segment information\n      properties:\n        audienceSegmentIds:\n          description: Array of identifier objects to identify an audience segment id and its system source\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n          xml:\n            wrapped: true\n        audienceSegmentName:\n          description: Audience segment name\n          type: string\n          example: P18-49\n        audienceSegmentReference:\n          description: External audience segment reference\n          type: string\n        audienceMethodology:\n          description: \u003e-\n            Methodology used to aggregate the audiences that are being provided in\n            the audienceMetricValue\n          type: string\n          example: Daypart Average\n        isPrimary:\n          description: True/False. This property is unique to TIP\n          type: boolean\n        isGuarantee:\n          description: True/False\n          type: boolean\n        ratingSource:\n          description: Indicates the source for the audience data; extended enum values allowed\n          type: string\n          enum:\n            - Nielsen\n            - ComScore\n            - First-Party\n            - Distributor\n            - Licensed\n        ratingStream:\n          description: Indicates the rating stream associated to the rating source; extended eum values allowed\n          type: string\n          enum:\n            - Program Live\n            - Commercial Ratings Live\n            - Commercial Rating Live+3\n            - Commercial Rating Live+7\n      required:\n        - audienceSegmentIds\n        - audienceSegmentName\n      xml:\n        name: audienceSegment\n    AudienceSegmentDetail:\n      description: Combines a mediaoutlet id with audience segment and universe objects\n      properties:\n        mediaOutletIds:\n          description: \u003e-\n            Array of identifier objects used to identify the mediaoutletid and its system source\n            associated to the audienceSegment\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n          xml:\n            wrapped: true\n        audienceSegment:\n          $ref: '#/components/schemas/AudienceSegment'\n        universes:\n          description: Array of universe objects  used to identify the universes available for the mediaoutlet\n          type: array\n          items:\n            $ref: '#/components/schemas/Universe'\n          minItems: 1\n          xml:\n            wrapped: true\n      required:\n        - mediaOutletIds\n        - audienceSegment\n      xml:\n        name: audienceSegmentDetail\n    AudienceMetric:\n      description: Audience metric type and value information\n      properties:\n        audienceMetric:\n          description: Indicates the audience metric; extended enum values allowed\n          type: string\n          enum:\n            - Impressions\n            - Rating\n            - GRPs\n            - VPVH\n            - Composition\n        audienceMetricValue:\n          description: audienceMetric type value\n          type: integer\n          example: 43256\n      required:\n        - audienceMetric\n        - audienceMetricValue\n      xml:\n        name: audienceMetric\n    PricingMetricOption:\n      description: Pricing metric Cost-per-thousand, Cost-per-point, Cost-per-engagement, Cost-per-action\n      type: string\n      enum:\n        - CPM\n        - CPP\n        - CPE\n        - CPA\n        - SPOT\n    PricingMetric:\n      description: Audience-based pricing metric type and value\n      properties:\n        PricingMetricOption:\n          $ref: '#/components/schemas/PricingMetricOption'\n        grossValue:\n          description: Gross value amount\n          type: number\n          format: float\n        netValue:\n          description: Gross value amount minus any fixed advertising agency commission or compensation\n          type: number\n          format: float\n      required:\n        - PricingMetricOption\n        - grossValue\n      xml:\n        name: pricingMetric\n    AudiencePricingMetric:\n      description: Audience segment id with audience metric and pricing metric objects\n      properties:\n        audienceSegmentIds:\n          description: Array of identifier objects used to identify the audienceSegmentId and its system source\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n          xml:\n            wrapped: true\n        type:\n          description: \u003e-\n            Indicates the type for the audience and pricing metrics.  Selling = booked audience\n            values from Order, Actual =the delivered/actual values from a data measurement\n            service, Projection = the projected audience values\n          type: string\n          enum:\n            - Selling\n            - Actual\n            - Projection\n        audienceMetric:\n          $ref: '#/components/schemas/AudienceMetric'\n        pricingMetric:\n          $ref: '#/components/schemas/PricingMetric'\n      required:\n        - audienceSegmentIds\n        - pricingMetric\n      xml:\n        name: audiencePricingMetric\n    FrequencyCapping:\n      description: Frequency capping information\n      properties:\n        period:\n          description: \u003e-\n            Indicates the period of a time to be used for the frequency capping; extended enum\n            values accepted\n          type: string\n          enum:\n            - Minute\n            - Day\n            - Week\n            - Month\n            - Hour\n            - Site Session\n            - Order\n            - Asset\n        perPeriod:\n          description: Value defined for the period; the default is 1 per period type\n          type: integer\n        value:\n          description: FrequencyCapping value for the time period\n          type: integer\n      required:\n        - period\n        - value\n      xml:\n        name: frequencyCapping\n    PacingRule:\n      description: Pacing delivery options information\n      properties:\n        type:\n          description: Indicates the pacing delivery rule type; extended enum values allowed\n          type: string\n          enum:\n            - Frontload\n            - Even\n            - Daily Fast ASAP\n            - Daily Even\n            - Flight ASAP\n            - Flight Even\n            - Flight Ahead\n        rateType:\n          description: Indicates the rate type for the values\n          type: string\n          enum:\n            - Absolute\n            - Percent\n      required:\n        - type\n      xml:\n        name: pacingRule\n    Universe:\n      description: Universe coverage and the estimated number of households or people within the universe\n      properties:\n        universeType:\n          description: Indicates the universe type used  for the estimated number of household or people\n          type: string\n          enum:\n            - Market\n            - Total US\n            - Coverage\n            - Addressable\n        universeTypeValue:\n          description: UniverseType value\n          type: integer\n      xml:\n        name: universe\n    CancellationTerm:\n      description: Cancellation terms\n      properties:\n        cancellationType:\n          description: Indicates the type of CancellationTerm\n          type: string\n          enum:\n            - Quarterly\n            - Broadcast Date\n        cancellation:\n          description: Quarter name or broadcast date dependent on cancellation type\n          oneOf:\n            - type: string\n            - type: string\n              format: date\n        cancellationPriorDays:\n          description: \u003e-\n            Number of days notice needed prior to start quarter or broadcast date to request\n            cancellation\n          type: integer\n          example: 14\n        cancellationPercentage:\n          description: Percentage of total amount that is cancellable\n          type: number\n          format: float\n          example: 25\n      xml:\n        name: cancellationTerm\n    TimeSeparation:\n      description: Time separation terms\n      properties:\n        unitLength:\n          description: Unit length\n          type: integer\n          example: 30\n        timeSeparation:\n          description: \u003e-\n            Agreement whereby the seller agrees to separate advertiser’s commercials by a specific\n            length of time in addition to agreeing to not run another product that is directly\n            competitive within a specific time frame; agreement may defined by unit length or\n            across all lengths. Time Separation is defined in seconds\n          type: integer\n          example: 900\n      xml:\n        name: timeSeparation\n    ReferenceId:\n      description: Reference details for RFP, Proposal, Order and Invoice\n      properties:\n        referenceSourceName:\n          description: Name associated with the organization that is supplying the ids and version information\n          type: string\n          example: KHOU-TV\n        referenceSourceId:\n          description: ID associated with the organization sending the information\n          type: string\n        referenceSourceLookup:\n          description: \u003e-\n            Reference source look up such as a URI to lookup information about the reference\n            source name\n          type: string\n        referenceType:\n          description: Indicates the type of data that is being provided\n          type: string\n          enum:\n            - RFP\n            - Proposal\n            - Deal\n            - Order\n            - Invoice\n            - Subscription             \n        referenceId:\n          description: Indicates the number or string ID associated with the reference type\n          oneOf:\n            - type: integer\n            - type: string\n          example: REF-1234\n        referenceVersionId:\n          description: Version number associated with the reference id; this is used to track to track changes\n          type: string\n          example: 01\n        referenceName:\n          description: \u003e-\n            Free form name used to further identify the type of entity such as the name associated\n            to the RFP, Order, Proposal, or other types of references\n          type: string\n          example: Hyundai 1Q22\n      required:\n        - referenceSourceName\n        - referenceSourceId\n        - referenceType\n        - referenceId\n      xml:\n        name: referenceId\n    Currency:\n      description: \u003e-\n        Currency Code is based on ISO 4217. This is the short list of most widely used codes\n        for North America\n      type: string\n      enum:\n        - USD\n        - CAD\n        - EUR\n        - GBP\n        - MXN\n        - AUD\n      default: USD\n    CpeCode:\n      description: Packages the buyer's client code, product code and estimate codes\n      properties:\n        clientCode:\n          description: Client code provided from the buyer\n          type: string\n          example: 3LM            \n        productCode:\n          description: Product code provided from the buyer\n          type: string\n          example: AUTO             \n        estimateCode:\n          description: Estimate code provided from the buyer\n          type: string\n          example: AU-12345                 \n    BillingOption:\n      description: Billing and invoice information\n      properties:\n        billingCalendar:\n          description: Indicates the invoicing billing calendar\n          type: string\n          enum:\n            - Broadcast\n            - Calendar\n            - Nielsen\n        billingCycle:\n          description: Indicates the interval within the billing calendar\n          type: string\n          enum:\n            - Month\n            - Week\n        billingGranularity:\n          description: Indicates the order split parameters used in the invoice generation\n          type: string\n          enum:\n            - Order\n            - Brand\n            - Inventory Type\n            - Insertion Order\n      required:\n        - billingCalendar\n        - billingCycle\n    RateCard:\n      description: Ratecard information\n      properties:\n        rateCardId:\n          description: Seller's ratecard identifier\n          type: string\n          example: 01\n        rateCardName:\n          description: Ratecard name\n          type: string\n          example: 1Q'22 Rate Card\n        currency:\n          $ref: '#/components/schemas/Currency'\n      required:\n        - rateCardName\n    Budget:\n      description: \u003e-\n        Budget or total allocation with optional allocations per market, media outlet or\n        media type\n      properties:\n        budgetAmount:\n          description: Gross budget amount\n          type: number\n          format: float\n          minimum: 0\n          exclusiveMinimum: True\n        budgetAllocation:\n          $ref: '#/components/schemas/BudgetAllocation'\n      required:\n        - budgetAmount\n    BudgetAllocation:\n      description: Budget number and/or percentage in terms of budget type\n      properties:\n        budgetType:\n          description: Indicates the type of budget\n          type: string\n          enum:\n            - DMA\n            - MediaOutlet\n            - MediaType\n        budgetName:\n          description: \u003e-\n            Specified DMA from the selected list when budget type is equal to DMA or a string\n            containing a channel or specific type of media. The value of budget name\n            is a conditional on budgetType.\n            - If budgetType is DMA, use the canonical list of DMA names\n            - If budgetType is Mediaoutlet, use media outlet name (call sign)\n            - If budgetType is MediaType, use values from MediaOutletType Enum\n          type: string\n        budgetAmount:\n          description: Gross budget amount for the budget allocation\n          type: number\n          format: float\n          minimum: 0\n          exclusiveMinimum: True\n        budgetSharePercent:\n          description: Percentage or share of budget for the budget allocation\n          type: number\n          format: float\n          minimum: 0\n          exclusiveMinimum: True\n      required:\n        - budgetType\n        - budgetName\n    Guideline:\n      description: General guidelines or rules\n      properties:\n        guidelineType:\n          description: Indicates the type of guideline; extended enum values are allowed\n          type: string\n          enum:\n            - Content\n            - Program\n            - MPAA\n            - Rating\n            - Site Category\n            - Genre\n            - Media Outlet Type\n        excludeOrInclude:\n          type: string\n          enum:\n            - Include\n            - Exclude\n        guidelines:\n          description: List of Guideline values associated to the guideline type\n          type: array\n          items:\n            type: string\n            xml: \n              name: item\n      required:\n        - guidelineType\n        - excludeOrInclude\n      xml:\n        name: guideline\n    DateTime:\n      description: Broadcast date and broadcast time used in Logtimes \u0026 Invoices\n      properties:\n        broadcastDate:\n          description: Broadcast date on which the unit aired/scheduled; this is not a calendar date\n          type: string\n          format: date\n        calendarDateTime:\n          description: \u003e-\n            Calendar date and time on which the unit aired/scheduled. Time is interpreted based\n            on the local timezone of the mediaoutlet using military date time YYYY-MM-DDTHH;MM;SS\n          type: string\n          format: date-time\n    TimePeriod:\n      description: Combines date window, DOW and time window objects\n      properties:\n        dateWindow:\n          $ref: '#/components/schemas/DateWindow'\n        DOW:\n          $ref: '#/components/schemas/DayOfWeek'\n        timeWindow:\n          $ref: '#/components/schemas/TimeWindow'\n      required:\n        - dateWindow\n        - DOW\n      xml:\n        name: timePeriod\n    DateWindow:\n      description: Start and end dates\n      properties:\n        startDate:\n          description: Start date\n          type: string\n          format: date\n        endDate:\n          description: End date\n          type: string\n          format: date\n      required:\n        - startDate\n      xml:\n        name: dateWindow\n    TimeWindow:\n      description: Start and end times\n      properties:\n        startTime:\n          description: \u003e-\n            Start time, indicates the starting time for the period. Time is considered local\n            to the mediaoutlet. Using military time HH;MM;SS\n          type: string\n          pattern: ^(([0-1][0-9])|(2[0-3]))(:[0-5][0-9]){2}$\n        endTime:\n          description: \u003e-\n            End time, indicates the ending time for the period. Time is interpreted based on\n            the local timezone of the mediaoutlet. Using military time HH;MM;SS\n          type: string\n          pattern: ^(([0-1][0-9])|(2[0-3]))(:[0-5][0-9]){2}$\n      required:\n        - startTime\n      xml:\n        name: timeWindow\n    DayOfWeek:\n      description: Valid days of week\n      properties:\n        isMonday:\n          description: True/False\n          type: boolean\n        isTuesday:\n          description: True/False\n          type: boolean\n        isWednesday:\n          description: True/False\n          type: boolean\n        isThursday:\n          description: True/False\n          type: boolean\n        isFriday:\n          description: True/False\n          type: boolean\n        isSaturday:\n          description: True/False\n          type: boolean\n        isSunday:\n          description: True/False\n          type: boolean\n      required:\n        - isMonday\n        - isTuesday\n        - isWednesday\n        - isThursday\n        - isFriday\n        - isSaturday\n        - isSunday\n    DailyUnitDistribution:\n      description: \u003e-\n        Number of units per day of week. Zero (0) indicates no unit will be expected to air\n        on the corresponding day of the week\n      properties:\n        pacingRule:\n          $ref: '#/components/schemas/PacingRule'\n        monday:\n          description: Number of units either in impressions, linear spots or the value zero\n          type: integer\n          minimum: 0\n        tuesday:\n          description: Number of units either in impressions, linear spots or the value zero\n          type: integer\n          minimum: 0\n        wednesday:\n          description: Number of units either in impressions, linear spots or the value zero\n          type: integer\n          minimum: 0\n        thursday:\n          description: Number of units either in impressions, linear spots or the value zero\n          type: integer\n          minimum: 0\n        friday:\n          description: Number of units either in impressions, linear spots or the value zero\n          type: integer\n          minimum: 0\n        saturday:\n          description: Number of units either in impressions, linear spots or the value zero\n          type: integer\n          minimum: 0\n        sunday:\n          description: Number of units either in impressions, linear spots or the value zero\n          type: integer\n          minimum: 0\n    InventoryPosition:\n      description: \u003e-\n        Indicates a request for placement or an actual placement of a commercial unit within\n        a break or program\n      type: string\n      enum:\n        - First\n        - Middle\n        - Last\n        - Pre-Roll\n        - Mid-Roll\n        - Post-Roll\n    LinkType:\n      description: Linking of matching or related commercials\n      properties:\n        linkType:\n          description: Indicates the link constraint between two or more units (spots)\n          type: string\n          enum:\n            - Billboard\n            - Piggyback\n            - Bookend\n            - Sandwich\n            - Donut\n            - Sponsorship\n            - Package\n        linkNum:\n          description: Unique number to communicate the association of two or more units within a link type\n          type: integer\n        linkSeq:\n          description: Airing sequential order for the units linked together such as A or B, etc.\n          type: integer\n      required:\n        - linkType\n    Contact:\n      description: Contact information\n      properties:\n        contactType:\n          description: Indicates the type of Contact\n          type: string\n          enum:\n            - Account Executive\n            - Planner\n            - Assistant\n            - Buyer\n            - Payee\n            - Creative\n            - Delivery Service\n        contactIds:\n          description: Contact id\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          xml:\n            wrapped: true\n          minItems: 1\n          nullable: false\n        organizationIds:\n          description: Organization id associated to the  contact\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          xml:\n            wrapped: true\n          minItems: 1\n          nullable: false\n        salesOffices:\n          description: ArrayList of offices associated to the contact\n          type: array\n          items:\n            type: string\n            xml:\n              name: item\n          xml:\n            wrapped: true\n          uniqueItems: True\n          nullable: True\n          example: [\"Dallas, TX\", \"NYC, NY\"]\n        contactFirstName:\n          description: Contact First Name\n          type: string\n          example: John\n        contactLastName:\n          description: Contact Last Name\n          type: string\n          example: Doe\n        addressLine1:\n          description: Contact Address Line 1\n          type: string\n        addressLine2:\n          description: Contact Address Line 2\n          type: string\n          nullable: True\n        city:\n          description: City\n          type: string\n          nullable: True\n        state:\n          description: State\n          type: string\n          nullable: True\n        postalCode:\n          description: Postal Code\n          type: string\n          nullable: True\n        country:\n          description: Country\n          type: string\n          nullable: True\n        phoneNumber:\n          description: Primary telephone number\n          type: string\n          nullable: True\n        email:\n          description: Primary email\n          type: string\n          format: email\n          nullable: True\n        effectiveDate:\n          description: Effective date for contact\n          type: string\n          format: date\n      required:\n        - contactType\n        - contactIds\n        - contactFirstName\n        - contactLastName\n        - effectiveDate\n      xml:\n        name: contact\n    RemittanceInfo:\n      description: Invoice remittance Information and billing instructions\n      properties:\n        referenceSourceIds:\n          description: ID associated with the remittance\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          minItems: 1\n        referenceName:\n          description: Name associated with the remittance\n          type: string\n        contactFirstName:\n          description: Contact First Name (not necessary)\n          type: string\n        contactLastName:\n          description: Contact Last Name ( not necessary)\n          type: string\n        addressLine1:\n          description: Contact Address Line 1\n          type: string\n        addressLine2:\n          description: Contact Address Line 2\n          type: string\n          nullable: True\n        city:\n          description: City\n          type: string\n          nullable: True\n        state:\n          description: State\n          type: string\n          nullable: True\n        postalCode:\n          description: Postal Code\n          type: string\n          nullable: True\n        country:\n          description: Country\n          type: string\n          nullable: True\n        phoneNumber:\n          description: Primary telephone number\n          type: string\n          nullable: True\n        contactEmail:\n          description: Primary email for payment remittance information\n          type: string\n          format: email\n          nullable: True\n        portalInformation:\n          description: Portal information including payment instructions\n          type: string\n          nullable: True\n        paymentLink:\n          description: URL that directs buyer to invoice payment options\n          type: string\n          nullable: True\n        comments:\n          description: Comments\n          type: string\n          nullable: True\n      required:\n        - referenceSourceIds\n    SalesElementHeader:\n      description: Sales element header information\n      properties:\n        mediaOutletId:\n          description: mediaOutletId associated with the SalesElement\n          type: string\n        salesElementName:\n          description: SalesElement name; this may be a program, daypart name or another type of sales element\n          type: string\n          example: Primetime\n        salesElementId:\n          description: SaleElement identifier\n          type: string\n        salesElementType:\n          description: Indicates the type of SalesElement\n          type: string\n          enum:\n            - Time-specific\n            - Program\n            - Audience\n            - Package\n      required:\n        - mediaOutletId\n        - salesElementName\n        - salesElementId\n        - salesElementType\n    SalesElement:\n      description: \u003e-\n        Combines the sales element header, time periods, programs and sales element inventory\n        objects\n      properties:\n        salesElementHeader:\n          $ref: '#/components/schemas/SalesElementHeader'\n        timePeriods:\n          description: Array of TimePeriod objects indicating SalesElement availability\n          type: array\n          items:\n            $ref: '#/components/schemas/TimePeriod'\n        devices:\n          description: Optional array of devices valid for the sales element; extended enum values are allowed\n          type: array\n          items:\n            type: string\n            enum:\n              - PlayStation\n              - Amazon Fire\n              - Roku\n              - Chromecast\n              - Smartphones\n              - Smart TV\n            xml:\n              name: item\n        programs:\n          description: ArrayList of program names valid for the salesElement\n          type: array\n          items:\n            type: string\n            xml:\n              name: item\n        salesElementInventorys:\n          description: Array of SalesElementInventory objects\n          type: array\n          items:\n            $ref: '#/components/schemas/SalesElementInventory'\n      required:\n        - salesElementHeader\n    SalesElementInventory:\n      description: Combines the sales element inventory and sales element inventory dates objects\n      properties:\n        inventoryType:\n          description: Type of advertising such as a commercial, billboard or other type of advertisement\n          type: string\n          example: Commercial\n        linkType:\n          $ref: '#/components/schemas/LinkType'\n        companionTypeIds:\n          description: \u003e-\n            ArrayList of companionTypeIds that will accompany the inventory type e.g. a stream\n            ad or bumper ad\n          type: array\n          items:\n            type: string\n            xml:\n              name: item\n        inventoryPosition:\n          description: Indicates a specific break or position within a sales element\n          $ref: '#/components/schemas/InventoryPosition'\n        inventoryLength:\n          description: Length for the ad unit or inventoryType in seconds\n          type: integer\n          example: 30\n        salesElementInventoryDates:\n          description: Array of SalesElementInventoryDate objects\n          type: array\n          items:\n            $ref: '#/components/schemas/SalesElementInventoryDate'\n          minItems: 1\n      required:\n        - inventoryType\n      xml:\n        name: salesElementInventory\n    SalesElementInventoryDate:\n      description: Combines sales element inventory dates with audience pricing metrics objects\n      properties:\n        dateType:\n          description: Indicates the granularity type for the date window\n          type: string\n          enum:\n            - Day\n            - Week\n            - Month\n            - Quarter\n        calendarType:\n          description: Indicates the calendar for the date type and date window\n          type: string\n          enum:\n            - Broadcast\n            - Calendar\n        dateWindow:\n          $ref: '#/components/schemas/DateWindow'\n        inventoryCapacity:\n          description: Maximum capacity defined either in linear spots or the in the number of  impressions\n          type: number\n          format: float\n        inventoryAvails:\n          description: Number of units remaining either in linear spots or impressions\n          type: number\n          format: float\n        inventoryMax:\n          description: \u003e-\n            Maximum number of units remaining from the inventoryAvails in either in linear spots\n            or impressions\n          type: number\n          format: float\n        audiencesPricingMetrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/AudiencePricingMetric'\n      required:\n        - dateWindow\n    SalesElementTransaction:\n      description: Combines the sales element header, time periods, programs and transaction inventory\n      properties:\n        salesElementHeader:\n          $ref: '#/components/schemas/SalesElementHeader'\n        timePeriods:\n          description: Array of TimePeriod objects indicating SalesElement day and time period constraints\n          type: array\n          items:\n            $ref: '#/components/schemas/TimePeriod'\n        devices:\n          description: Optional array of devices valid for the sales element; extended enum values are allowed\n          type: array\n          items:\n            type: string\n            enum:\n              - PlayStation\n              - Amazon Fire\n              - Roku\n              - Chromecast\n              - Smartphones\n              - Smart TV\n            xml:\n              name: item\n        programs:\n          description: ArrayList of program names valid for the salesElement\n          type: array\n          items:\n            type: string\n            xml:\n              name: item\n        salesElementTransactionInventorys:\n          type: array\n          items:\n            $ref: '#/components/schemas/SalesElementTransactionInventory'\n      required:\n        - salesElementHeader\n        - timePeriods\n        - salesElementTransactionInventorys\n    SalesElementTransactionInventory:\n      description: Combines sales element transaction inventory with the transaction dates\n      properties:\n        lineNum:\n          description: Supplier's generated line number/id\n          type: string\n        lineReference:\n          description: \u003e-\n            Additional reference for the supplier's line number such as line num from an external\n            system source\n          type: string\n          nullable: True\n        lineReferences:\n          description: \u003e-\n            Array of identifier objects to identify a line id and system source; note- once the\n            identifier object has been adopted the goal is to remove existing lineNum\n            and lineReference\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n        inventoryType:\n          description: Type of advertising such as a commercial, billboard or other forms of advertisement\n          type: string\n        companionTypeIds:\n          description: \u003e-\n            ArrayList of companionTypeIds that will accompany the inventory type e.g. a stream\n            ad or bumper ad\n          type: array\n          items:\n            type: string\n        linkType:\n          $ref: '#/components/schemas/LinkType'\n        inventoryPosition:\n          $ref: '#/components/schemas/InventoryPosition'\n        inventoryLength:\n          description: Length of the advertisement/inventory type in seconds\n          type: integer\n          nullable: True\n        isAdu:\n          description: \u003e-\n            Audience Deficiency Unit are units of commercial advertising inventory made available\n            to advertisers as fulfillment for the inventory the advertisers purchased that ran\n            in programs that under-delivered on contracted audience demographic ratings\n          type: boolean\n          nullable: True\n        isBonus:\n          description: Free ($0) ad impressions that a publisher includes with paid media\n          type: boolean\n          nullable: True\n        externalComment:\n          description: \u003e-\n            Free form comments string that can be used in any of the many interfaces the Sales\n            Element objects appears. For example to support buyer or seller generic comments\n            to guide or explain changes that may have been applied to the line.\n          type: string\n          nullable: True\n        salesElementTransactionDates:\n          description: Array of SalesElementTransactionDates\n          type: array\n          items:\n            $ref: '#/components/schemas/SalesElementTransactionDate'\n          minItems: 1\n      required:\n        - lineNum\n        - inventoryType\n        - salesElementTransactionDates\n    SalesElementTransactionDate:\n      description: Combines sales element transaction date information with the audience pricing metrics\n      properties:\n        dateType:\n          description: Indicates the granularity type for the date window\n          type: string\n          enum:\n            - Day\n            - Week\n            - Month\n            - Quarter\n        calendarType:\n          description: Indicates the calendar for the date type and date window\n          type: string\n          enum:\n            - Broadcast\n            - Calendar\n        dateWindow:\n          $ref: '#/components/schemas/DateWindow'\n        unitCount:\n          description: Number of units either in linear television spots or audience impressions\n          type: integer\n          minimum: 0\n        dailyUnitDistribution:\n          $ref: '#/components/schemas/DailyUnitDistribution'\n        frequencyCappings:\n          description: Array of FrequencyCapping objects\n          type: array\n          items:\n            $ref: '#/components/schemas/FrequencyCapping'\n        pricingMetric:\n          $ref: '#/components/schemas/PricingMetric'\n        grossCost:\n          description: Gross value amount for the unit count across the date window\n          type: number\n          format: float\n          example: 150\n        netCost:\n          description: Gross value amount minus any fixed advertising agency commission or compensation\n          type: number\n          format: float\n          example: 127.5\n        audienceTargets:\n          description: Array of AudienceTarget objects\n          type: array\n          items:\n            $ref: '#/components/schemas/AudienceTarget'\n        audiencesPricingMetrics:\n          description: Array of audiencePricingMetrics\n          type: array\n          items:\n            $ref: '#/components/schemas/AudiencePricingMetric'\n          nullable: True\n        externalComment:\n          description: \u003e-\n            Free form comments string that can be used in any of the many interfaces the Sales\n            Element objects appears. For example it can be used to support buyer or seller generic\n            comments to guide the line-level negotiations in the proposal. It could include\n            comments about the audience, rate, date, and units.\n          type: string\n          nullable: True\n      required:\n        - dateWindow\n    Frequency:\n      description: Indicates the recurrence pattern at which an associated TIP request will be auto generated\n      properties:\n        effectiveOn:\n          description: \u003e-\n            When true, indicates that the report subscription will stay active until\n            it is terminated by the requester Cancel Request. When false, indicates that the\n            report will terminate either on the date indicated by the endOn or the number of\n            after the number of occurences indicated in endOccurAfter\n          type: string\n          format: date\n          example: 2020-08-12\n        every:\n          description: \u003e-\n            Indicates the unit of time in which to receive the information available\n            in the subscription\n          type: string\n          enum:\n            - When Available\n            - Hour\n            - Day\n            - Week\n            - Month\n        onDay:\n          description: \u003e-\n            Valid when every is equal to week; unique list the days of the week on which the\n            data (report) is expected to be generated\n          type: array\n          items:\n            type: string\n            enum:\n              - Mon\n              - Tue\n              - Wed\n              - Thu\n              - Fri\n              - Sat\n              - Sun\n            xml:\n              name: item\n          xml:\n            wrapped: true\n        onDate:\n          description: \u003e-\n            Valid when every is equal to Month; unique day(s) of the month on which the data\n            ( report) is expected to be generated; the values in onDate must be restricted\n            to 1, 2, 3, 4, 5 to indicate 1st, 2nd, ... of the month.\n          type: array\n          items:\n            type: integer\n            xml:\n              name: item\n          xml:\n            wrapped: true\n          example: [1,15]\n        isEndNever:\n          description: \u003e-\n            Indicates if the report subscription will stay active until it is terminated by the\n            requester Cancel Request\n          type: boolean\n          default: true\n        endOn:\n          description: \u003e-\n            Indicate if the subscription must end at a specific date. if specified it takes precedence\n            over isEndNever. if endOccurAfter is specified report would stop after either date\n            is reached or number of occurrences whichever comes first\n          type: string\n          format: date\n          nullable: True\n          default: \n        endOccurAfter:\n          description: \u003e-\n            Indicates if the report subscription must end after the specified number of times.\n            When specified it takes precedence over isEndNever. if endOn is specified report  would\n            stop after either date is reached or number of occurrences whichever comes first\n          type: integer\n          minimum: 0\n          nullable: True\n    DynamicDate:\n      description: \u003e-\n        Indicates the values to be used when calculating a start date, or end date relative\n        to the report date.\n      properties:\n        offsetType:\n          description: Provides the unit for the offset value\n          type: string\n          enum:\n            - Hour\n            - Day\n            - Week\n            - Month\n            - Quarter\n            - Year\n        offset:\n          description: \u003e-\n            negative offset mean number of offsetypes prior to reporting day, positive number\n            mean number of offsettypes following the reporting day.  0 indicates the reporting\n            day\n          type: integer\n          example: -7\n      required:\n        - offsetType\n        - offset\n    ItemDetail:\n      description: \u003e-\n        Indicates the values to be used in invoice tax, discount or other type of user-defined\n        invoice item\n      properties:\n        itemType:\n          description: \u003e-\n            Indicates the type of Tax type, Discount, or any other type presented in the associated\n            value\n          type: string\n          nullable: False\n          example: \"Sales Tax\"\n        value:\n          description: Indicates the value associated to the type of the item type.\n          type: number\n          format: float\n          example: 1245.55\n      required:\n        - itemType\n        - value\n    CancelConfirmRecallReject:\n      description: Recall, Cancel, Confirm or Reject for any transaction\n      properties:\n        transactionHeader:\n          $ref: '#/components/schemas/TransactionHeader'\n        referenceIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReferenceId'\n          minItems: 1\n          xml:\n            wrapped: true\n        comments:\n          description: Free form comments\n          type: string\n      required:\n        - transactionHeader\n        - referenceIds\n      xml: \n        name: CancelConfirmRecallReject\n        namespace: https://tip.schemas.org/v6.0.0\n    Error:\n      description: Defines errors returned from all APIs\n      properties:\n        errorCode:\n          type: integer\n          example: 400\n        errorMessage:\n          type: string\n          example: Bad Request\n        errorList:\n          type: object\n          additionalProperties:\n            type: string\n            example:   \n              \"startDate\": \"Invalid DateFormat\"\n              \"netCost\": \"Value Can Not be Negative\"\n      required:\n        - errorCode\n        - errorMessage\n      xml:\n        name: Error\n        namespace: https://tip.schemas.org/v6.0.0\n    AcceptedResponse:\n      description: Defines successful return from all APIs\n      properties:\n        transactionId:\n          type: string\n          format: uuid\n        timeStamp:\n          type: string\n          format: date-time\n      required:\n        - transactionId\n        - timeStamp\n      xml:\n        name: AcceptedResponse\n        namespace: https://tip.schemas.org/v6.0.0\n    Creative:\n      description: Object representing the creative\n      properties:\n        ids:\n          description: UniqueID from the seller of the Creative [who assigns this in the process]\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n        name:\n          description: Name of the creative\n          type: string\n          nullable: True\n        status:\n          type: string\n          enum:\n            - Not Final\n            - Final\n            - On-Hand\n        length:\n          description: Length (in seconds) of the Creative excluding slate\n          type: integer\n      required:\n        - ids\n    Format:\n      description: Formatting for creative asset\n      properties:\n        container:\n          description: Container format that contains the video, audio, etc.\n          type: string\n        video:\n          description: Video codes\n          type: string\n        audio:\n          description: List of audio codes\n          type: array\n          items:\n            type: string\n          example: [\n  \"ENG-US\",\n  \"ENG-UK\"\n]\n        aspect:\n          description: Aspect ratio\n          type: string\n          example: 16:19\n        resolution:\n          description: Screen resolution\n          type: string\n        screen:\n          description: Screen format\n          type: string\n        bitRate:\n          description: Delivery bitrate in kbps\n          type: integer\n        duration:\n          description: duration in seconds\n          type: integer\n          example: 30\n      required:\n        - container\n        - video\n        - audio\n        - duration\n    Identifier:\n      description: Identifies ids and system source association\n      properties:\n        id:\n          description: Identifier from the buyer or seller that indicates the id assignment\n          type: string\n        version:\n          description: Identifier from the buyer or seller that indicates the id assignment  version\n          type: string\n        srcId:\n          description: Optional identifier indicating the id of the system source providing the the id\n          type: string\n        srcName:\n          description: Name of the system source that is providing the id\n          type: string\n      required:\n        - id\n        - srcName\n      xml:\n        name: identifier\n    SupplyPath:\n      description: Impression supply path\n      properties:\n        id:\n          description: \u003e-\n            Identifier from Seller to indicate the means that the ad was delivered (SSP, PMP,\n            direct publisher integration)\n          type: string\n        extId:\n          description: External identifier from platform to indicate the supply source\n          type: string\n        batchEntry:\n          description: String from source (json, xml, etc. to indicate a batch supply entry)\n          type: string\n      required:\n        - id\n    Device:\n      description: Viewer's device information\n      properties:\n        ip:\n          description: IP address (source IP V4, or V6)\n          $ref: '#/components/schemas/IpAddress'\n        ifa:\n          description: Identifier of the device that is displaying the ad\n          type: string\n        sspId:\n          description: Identifier of the sell-side platform that enabled the inventory\n          type: string\n        ua:\n          description: User Agent of the device that is displaying the ad\n          type: string\n        catSRC:\n          description: Type of source of the inventory (SSP, PMP)\n          type: string\n        catType:\n          description: Type of device, as defined by RTB 2.3.1 section 5.17\n          type: string\n          enum:\n            - Mobile/Tablet\n            - Personal Computer\n            - Connected TV\n            - Phone\n            - Tablet\n            - Connected Device\n            - Set Top Box\n      required:\n        - ip\n    Geo:\n      description: Viewer's location\n      properties:\n        src:\n          description: Type of source providing the geographic data (ex. IP2Location, Neustar (Quova), MaxMind)\n          type: string\n        country:\n          description: Country where ad is served, Country code using ISO-3166-1-alpha-3.\n          type: string\n        region:\n          description: Region code using ISO-3166-2; 2-letter state code if USA\n          type: string\n        dma:\n          description: U.S. DMA where ad is served\n          type: string\n        postal:\n          description: Postal code where ad is served\n          type: string\n        lat:\n          description: Latitude where ad is served\n          type: number\n          format: float\n          minimum: -90\n          maximum: 90\n        long:\n          description: Longitude where ad is served\n          type: number\n          format: float\n          minimum: -180\n          maximum: 180\n        timeZone:\n          description: Timezone of location where ad is served\n          type: string\n        accuracy:\n          description: Accuracy estimate of location (applies to lat/long data)\n          type: integer\n      required:\n        - country\n    Event:\n      description: Events captured for a given Impression\n      properties:\n        type:\n          description: ImpressionID + eventType will be unique. (Please see VAST spec for all event Types)\n          type: string\n        timestamp:\n          description: Timestamp for the event\n          type: string\n          format: date-time\n        isSigVerified:\n          description: Indicates if the event has a verified signature from inventory source\n          type: boolean\n        ip:\n          description: IP address of the event\n          $ref: '#/components/schemas/IpAddress'\n        ua:\n          description: User Agent of device where event occurred\n          type: string\n        refUrl:\n          description: URL of site where event occurred\n          type: string\n        errCode:\n          description: Error code of event in case of failure\n          type: string\n        rawUrl:\n          description: Pixel URL for event\n          type: string\n      required:\n        - type\n        - timestamp\n        - isSigVerified\n    Crypto:\n      description: Cryptographically sign an impression\n      properties:\n        signatureId:\n          description: Base64 encoded ID of the signature\n          type: string\n          format: byte\n          example: SVBWNE9SSVBWNkFkZHJlc3M=\n      required:\n        - signatureId\n    IpAddress:\n      description: Type Definition to accept IPv4 or IPV6\n      type: string\n      example: 192.168.001.001\n      pattern: ^([0-9]{1,3}[.]){3}([0-9]{1,3})|([0-9a-fA-F]{4}[:]){7}[0-9a-fA-F]{4}$\n    AdId:\n      type: string\n      pattern: ^([A-Z,a-z,0-9]){11}[H,h,D,d]?$                                                                         \n    Impression:\n      description: One impression with all associated Ids\n      properties:\n        id:\n          description: Seller generated unique number for Impression Event\n          type: string\n          format: uuid\n        statSource:\n          description: \u003e-\n            Identifies the originating impressions tracking source if impressions have multiple\n            tracking sources. The combination of StatSource and MediaOutlet identifies a unique\n            impression.\n          type: string\n        timestamp:\n          description: UTC source\n          type: string\n          format: date-time\n        referenceId:\n          description: \u003e-\n            Campaign/Lineitem that the impression is associated with. Ideally it would just be\n            id+version to associate back to a broader metadata object\n          $ref: '#/components/schemas/Identifier'\n        creative:\n          description: \u003e-\n            Creative that the impression is associated with. Ideally it would just be id+version\n            to associate back to a broader metadata object\n          $ref: '#/components/schemas/Creative'\n        salesElementId:\n          description: SalesElement Id from the list on line #14\n          $ref: '#/components/schemas/Identifier'\n        contentOwnerId:\n          description: \u003e-\n            contentOwnerId is one of the mediaOutlet serving the content listed in the array\n            of mediaOutlets in the message\n          $ref: '#/components/schemas/Identifier'\n        supplyPath:\n          description: Documentation of the supply chain leading to the impression\n          $ref: '#/components/schemas/SupplyPath'\n        device:\n          description: User's device descriptor\n          $ref: '#/components/schemas/Device'\n        geo:\n          description: User's location\n          $ref: '#/components/schemas/Geo'\n        events:\n          description: Events (Start, Q1, Q2, ....)\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n          minItems: 1\n        publisherBundle:\n          description: RTB compliant site name that indicates the individual app and publisher for the content\n          type: string\n        publisherSspId:\n          description: Identifier for the supply-side platform that enabled the inventory\n          type: string\n        adLedger:\n          description: Fields needed to cryptographically validate this impression\n          $ref: '#/components/schemas/Crypto'\n      required:\n        - id\n        - timestamp\n        - referenceId\n        - creative\n        - salesElementId\n        - contentOwnerId\n        - device\n        - geo\n        - events\n",
			"canonicalURL": "/github.com/tip-initiative/tip-initiative-apis@2e3c15b6685f042803acf59e6e5f6c3a0092bcb1/-/blob/endpoints/schemas/commonSchemas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tip-initiative/tip-initiative-apis/blob/2e3c15b6685f042803acf59e6e5f6c3a0092bcb1/endpoints/schemas/commonSchemas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}