{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rstropek/htl-leo-csharp-4"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "exercises/9130-contact-list/swagger.yaml",
			"byteSize": 2692,
			"content": "openapi: 3.0.0\ninfo:\n  description: HTL Programming Homework\n  version: 1.0.0\n  title: Address Book\npaths:\n  /contacts:\n    get:\n      summary: Get all people in contact list\n      operationId: getAllPeople\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Person\"\n    post:\n      summary: Adds a new person to the list of contacts\n      operationId: addPerson\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Person\"\n        description: Person to add\n        required: true\n      responses:\n        \"201\":\n          description: Person successfully created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Person\"\n          headers:\n            Location:\n              description: URL where to get details of the created event\n              schema:\n                type: string\n        \"400\":\n          description: Invalid input (e.g. required field missing or empty)\n  \"/contacts/{personId}\":\n    delete:\n      summary: Deletes a person from the list of contacts\n      operationId: deletePerson\n      parameters:\n        - name: personId\n          in: path\n          description: ID of person to delete\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Successful operation\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Person not found\n  /contacts/findByName:\n    get:\n      summary: Finds person in contact list by name\n      description: Returns all people whose first of last name contains the specified name filter\n      operationId: findPersonByName\n      parameters:\n        - name: nameFilter\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Person\"\n        \"400\":\n          description: Invalid or missing name\ncomponents:\n  schemas:\n    Person:\n      type: object\n      required:\n        - id\n        - email\n      properties:\n        id:\n          type: integer\n          format: int32\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string",
			"canonicalURL": "/github.com/rstropek/htl-leo-csharp-4@3c0e3390b3067801578e628006f8d91b1ee10567/-/blob/exercises/9130-contact-list/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rstropek/htl-leo-csharp-4/blob/3c0e3390b3067801578e628006f8d91b1ee10567/exercises/9130-contact-list/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}