{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microsoft/AdvocacyPlatform"
		},
		"file": {
			"name": "functions-api.yaml",
			"size": 0,
			"path": "docs/api/functions-api.yaml",
			"byteSize": 18027,
			"content": "openapi: 3.0.1\ninfo:\n  title: Advocacy Platform\n  description: Advocacy Platform API.\n  contact:\n    email: noemail@noemail.com\n  license:\n    name: MIT\n    url: https://github.com/Microsoft/AdvocacyPlatform/blob/master/LICENSE\n  version: 1.0.0\nexternalDocs:\n  description: Find out more about the Advocacy Platform API\n  url: https://github.com/Microsoft/AdvocacyPlatform\nservers:\n- url: ///api\ntags:\n- name: InitiateCall\n  description: Initiate a call via Twilio\n- name: CheckCallProgress\n  description: Check the progress of a Twilio call\n- name: PullRecording\n  description: Pull a Twilio call recording into internal storage\n- name: TranscribeCall\n  description: Transcribe the text from a Twilio call recording\n- name: ExtractInfo\n  description: Extract information from the transcription of a Twilio call recording\n- name: DeleteRecordings\n  description: Delete the recordings for a specific Twilio call\n- name: DeleteAccountRecordings\n  description: Delete all stored recordings for a Twilio account\npaths:\n  /InitiateCall:\n    post:\n      tags:\n      - InitiateCall\n      summary: Initiate a call via Twilio\n      operationId: initiateCall\n      parameters:\n      - name: code\n        in: path\n        description: API key for calling function\n        required: true\n        schema:\n          type: string\n      - name: Authentication\n        in: header\n        description: Bearer token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information specifying the behavior of the call to initiate.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InitiateCallRequest'\n        required: true\n      responses:\n        200:\n          description: Input accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitiateCallResponse'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitiateCallResponse'\n  /CheckCallProgress:\n    post:\n      tags:\n      - CheckCallProgress\n      summary: Check the progress of a Twilio call\n      operationId: checkCallProgress\n      parameters:\n      - name: code\n        in: path\n        description: API key for calling function\n        required: true\n        schema:\n          type: string\n      - name: Authentication\n        in: header\n        description: Bearer token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information specifying the call to get the progress of.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckCallProgressRequest'\n        required: true\n      responses:\n        200:\n          description: Input accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckCallProgressResponse'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckCallProgressResponse'\n  /PullRecording:\n    post:\n      tags:\n      - PullRecording\n      summary: Pull a Twilio call recording into internal storage\n      operationId: pullRecording\n      parameters:\n      - name: code\n        in: path\n        description: API key for calling function\n        required: true\n        schema:\n          type: string\n      - name: Authentication\n        in: header\n        description: Bearer token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information specifying the call to get the recording for.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PullRecordingRequest'\n        required: true\n      responses:\n        200:\n          description: Input accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PullRecordingResponse'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PullRecordingResponse'\n  /TranscribeCall:\n    post:\n      tags:\n      - TranscribeCall\n      summary: Transcribe the text from a Twilio call recording\n      operationId: transcribeCall\n      parameters:\n      - name: code\n        in: path\n        description: API key for calling function\n        required: true\n        schema:\n          type: string\n      - name: Authentication\n        in: header\n        description: Bearer token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information specifying the call and recording to transcribe.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TranscribeCallRequest'\n        required: true\n      responses:\n        200:\n          description: Input accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TranscribeCallResponse'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TranscribeCallResponse'\n  /ExtractInfo:\n    post:\n      tags:\n      - ExtractInfo\n      summary: Extract information from the transcription of a Twilio call recording\n      operationId: extractInfo\n      parameters:\n      - name: code\n        in: path\n        description: API key for calling function\n        required: true\n        schema:\n          type: string\n      - name: Authentication\n        in: header\n        description: Bearer token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information specifying the transcription to extract information\n          from.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExtractInfoRequest'\n        required: true\n      responses:\n        200:\n          description: Input accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExtractInfoResponse'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExtractInfoResponse'\n  /DeleteRecordings:\n    post:\n      tags:\n      - DeleteRecordings\n      summary: Delete the recordings for a specific Twilio call\n      operationId: deleteRecordings\n      parameters:\n      - name: code\n        in: path\n        description: API key for calling function\n        required: true\n        schema:\n          type: string\n      - name: Authentication\n        in: header\n        description: Bearer token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information specifying the call to delete recordings for.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteRecordingsRequest'\n        required: true\n      responses:\n        200:\n          description: Input accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRecordingsResponse'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRecordingsResponse'\n  /DeleteAccountRecordings:\n    post:\n      tags:\n      - DeleteAccountRecordings\n      summary: Delete all stored recordings for a Twilio account\n      operationId: deleteAccountRecordings\n      parameters:\n      - name: code\n        in: path\n        description: API key for calling function\n        required: true\n        schema:\n          type: string\n      - name: Authentication\n        in: header\n        description: Bearer token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information specifying the account to delete recordings for.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteAccountRecordingsRequest'\n        required: true\n      responses:\n        200:\n          description: Input accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAccountRecordingsResponse'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAccountRecordingsResponse'\ncomponents:\n  schemas:\n    InitiateCallRequest:\n      required:\n      - inputId\n      type: object\n      properties:\n        inputId:\n          $ref: '#/components/schemas/InputId'\n        inputType:\n          type: string\n          description: Input identifier type used to determine validation rules (e.g.\n            AIN)\n        dtmf:\n          $ref: '#/components/schemas/DtmfRequest'\n    PersonInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the person extracted from the text\n        type:\n          type: string\n          description: The type of person (e.g. judge) extracted from the text based\n            on context\n      description: Specifies identity information information extracted from the text\n    DeleteAccountRecordingsResponse:\n      allOf:\n      - type: object\n        properties:\n          areAllRecordingsDeleted:\n            type: boolean\n            description: Indicates if all of the recordings associated with the account\n              were successfully deleted\n      - $ref: '#/components/schemas/BaseResponse'\n    ExtractInfoRequest:\n      required:\n      - callSid\n      - text\n      type: object\n      properties:\n        callSid:\n          $ref: '#/components/schemas/CallSid'\n        text:\n          type: string\n          description: Transcription text to extract information from. Value returned\n            in call to TranscribeCall.\n        transformations:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataTransformation'\n        minDateTime:\n          type: string\n          description: Minimum DateTime value to accept. Response will set date information to null for any dates below this threshold.\n    TranscribeCallRequest:\n      required:\n      - callSid\n      - recordingUri\n      type: object\n      properties:\n        callSid:\n          $ref: '#/components/schemas/CallSid'\n        recordingUri:\n          type: string\n          description: The URI of the Twilio call recording. Value returned in call\n            to PullRecording.\n        isLocalPath:\n          type: boolean\n          description: 'Used for local testing. TODO: Remove.'\n    DeleteAccountRecordingsRequest:\n      required:\n      - confirmDelete\n      type: object\n      properties:\n        confirmDelete:\n          type: string\n          description: Must be set to 'yes'.\n    BaseResponse:\n      type: object\n      properties:\n        statusCode:\n          type: integer\n          description: Code describing the end state of the request\n        statusDesc:\n          type: string\n          description: Friendly label describing the end state of the request\n        hasError:\n          type: boolean\n          description: Indicates if an error occured during the processing of the\n            request\n        errorCode:\n          type: integer\n          description: Code specifying the error encountered while processing the\n            request\n        errorDetails:\n          type: string\n          description: Additional details describing an error(s) encountered while\n            processing the request\n    CheckCallProgressRequest:\n      required:\n      - callSid\n      type: object\n      properties:\n        callSid:\n          $ref: '#/components/schemas/CallSid'\n    InputId:\n      type: string\n      description: Input identifier (e.g. Alien Identification Number)\n    CallSid:\n      type: string\n      description: Identifier for the Twilio call. Value returned in call to InitiateCall.\n    TranscriptionData:\n      type: object\n      properties:\n        intent:\n          type: string\n        intentConfidence:\n          type: number\n          format: float\n        transcription:\n          type: string\n        evaluatedTranscription:\n          type: string\n        dates:\n          type: array\n          items:\n            $ref: '#/components/schemas/DateInfo'\n        location:\n          $ref: '#/components/schemas/LocationInfo'\n        person:\n          $ref: '#/components/schemas/PersonInfo'\n        additionalData:\n          type: object\n          additionalProperties:\n            type: string\n    DeleteRecordingsRequest:\n      required:\n      - callSid\n      type: object\n      properties:\n        callSid:\n          $ref: '#/components/schemas/CallSid'\n    ExtractInfoResponse:\n      allOf:\n      - type: object\n        properties:\n          callSid:\n            $ref: '#/components/schemas/CallSid'\n          data:\n            $ref: '#/components/schemas/TranscriptionData'\n          flags:\n            type: array\n            items:\n              type: string\n      - $ref: '#/components/schemas/BaseResponse'\n    DeleteRecordingsResponse:\n      allOf:\n      - type: object\n        properties:\n          callSid:\n            $ref: '#/components/schemas/CallSid'\n          areAllRecordingsDeleted:\n            type: boolean\n            description: Indicates if all of the recordings associated with the call\n              were successfully deleted\n      - $ref: '#/components/schemas/BaseResponse'\n    TranscribeCallResponse:\n      allOf:\n      - type: object\n        properties:\n          callSid:\n            $ref: '#/components/schemas/CallSid'\n          text:\n            type: string\n            description: The text transcribed from the call recording\n      - $ref: '#/components/schemas/BaseResponse'\n    DateInfo:\n      type: object\n      properties:\n        year:\n          type: integer\n          description: The four digit representation of the year (e.g. 2019)\n        month:\n          type: integer\n          description: The single or two digit month value\n        day:\n          type: integer\n          description: The single or two digit day value\n        hour:\n          type: integer\n          description: The single or two digit hour value\n        minute:\n          type: integer\n          description: The single or two digit minute value\n        fullDate:\n          type: string\n          description: The full serialized datetime value\n      description: Specifies datetime information extracted from the text\n    DtmfRequest:\n      type: object\n      properties:\n        initPause:\n          type: integer\n          description: Specifies the number of seconds to pause as soon as the call\n            is initiated\n        dtmf:\n          type: string\n          description: Specifies the Dual-tone Multifrequency Signaling (DTMF) sequence\n            to use during the call\n        finalPause:\n          type: integer\n          description: Specifies the number of seconds to pause after the DTMF sequence\n            has completed\n    LocationInfo:\n      type: object\n      properties:\n        location:\n          type: string\n          description: The full address of the location\n        state:\n          type: string\n          description: The state extracted from the full address\n        city:\n          type: string\n          description: The city extracted from the full address\n        zipcode:\n          type: string\n          description: The postal zip code extracted from the full address\n      description: Specifies geographical location information extracted from the\n        text\n    PullRecordingResponse:\n      allOf:\n      - type: object\n        properties:\n          callSid:\n            $ref: '#/components/schemas/CallSid'\n          recordingLength:\n            type: integer\n            description: The length in bytes of the recording in the persistent data\n              store\n          recordingUri:\n            type: string\n            description: A relative URI to the recording\n          fullRecordingUrl:\n            type: string\n            description: The full URL to the recording\n      - $ref: '#/components/schemas/BaseResponse'\n    DataTransformation:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the requested data transformation.\n        parameters:\n          type: object\n          additionalProperties:\n            type: string\n          description: A dictionary of parameters to pass to the data transformer.\n    CheckCallProgressResponse:\n      allOf:\n      - type: object\n        properties:\n          callSid:\n            $ref: '#/components/schemas/CallSid'\n          status:\n            type: string\n            description: Friendly label for the current state of the call\n          duration:\n            type: integer\n            description: The duration of the call in seconds. Will always be 0 until\n              the call has reached a completion state.\n      - $ref: '#/components/schemas/BaseResponse'\n    InitiateCallResponse:\n      allOf:\n      - type: object\n        properties:\n          inputId:\n            $ref: '#/components/schemas/InputId'\n          callSid:\n            $ref: '#/components/schemas/CallSid'\n      - $ref: '#/components/schemas/BaseResponse'\n    PullRecordingRequest:\n      required:\n      - callSid\n      - inputId\n      type: object\n      properties:\n        inputId:\n          $ref: '#/components/schemas/InputId'\n        callSid:\n          $ref: '#/components/schemas/CallSid'",
			"canonicalURL": "/github.com/microsoft/AdvocacyPlatform@eb953cca126fa8bafce0c4ff3a30108612a158fd/-/blob/docs/api/functions-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/microsoft/AdvocacyPlatform/blob/eb953cca126fa8bafce0c4ff3a30108612a158fd/docs/api/functions-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}