{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/link-it/govway"
		},
		"file": {
			"name": "trace.yaml",
			"size": 0,
			"path": "tools/utils/src/org/openspcoop2/utils/service/schemi/standard/trace.yaml",
			"byteSize": 11123,
			"content": "# Questo file rappresenta una traccia interoperabile\n#\n# Questa traccia è stata poi riadattata nel file govway_trace.yaml, \n# lasciandone la struttura identica ma rimodulando alcuni tipo e/o aggiungendo ulteriori vincoli sui tipi in modo da utilizzarla nin GovWay.\n#\nopenapi: 3.0.0\ncomponents:\n  schemas:\n\n    Traccia:\n      type: object\n      required:\n        - emittente\n        - data_emissione\n        - id_traccia\n        - ruolo\n        - esito\n      properties:\n        emittente:\n          type: string\n          description: Identificativo dell'emittente della traccia\n          example: 'Ente'\n        data_emissione:\n          type: string\n          format: date-time\n          description: Data e Ora in cui la traccia è stata emessa, in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.\n          example: '2017-07-21T17:32:28Z'\n        id_traccia:\n          type: string\n          description: Identificativo unico della traccia per l'emittente\n          example: 'b32a7501-7788-48ff-99999-a726f8e7658e'\n        id_conversazione:\n          type: string\n          description: dove disponibile, un identificativo univoco utile a correlare invocazioni differenti\n          example: 'b32a7501-7788-48ff-99999-a726f8e7658e'\n        ruolo:\n          type: string\n          enum:\n            - fruizione\n            - erogazione\n          example: fruizione\n          description: Indica se la traccia rappresenta una erogazione o una fruizione di api\n        esito:\n          $ref: '#/components/schemas/TracciaEsito'\n        richiesta:\n          $ref: '#/components/schemas/TracciaDettaglioRichiesta'\n        risposta:\n          $ref: '#/components/schemas/TracciaDettaglioRisposta'\n        api:\n          $ref: '#/components/schemas/TracciaInformazioniApi'\n        mittente:\n          $ref: '#/components/schemas/TracciaInformazioniMittente'\n    \n    TracciaEsito:\n      type: object\n      required:\n        - codice\n      properties:\n        codice:\n          type: string\n          description: |-\n           Codice che rappresenta l'esito dell'invocazione.\n           Può essere un http status per i protocolli basati su HTTP, o un altra codifica (es. OK/KO)\n        descrizione:\n          type: string\n          description: |-\n            Fornisce una descrizione dell'esito rappresentanto dal codice. \n    \n          \n    # Dettaglio\n    \n    TracciaDettaglioRichiesta:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/TracciaDettaglioMessaggio'\n        - $ref: '#/components/schemas/TracciaDettaglioRichiestaDatiTrasporto'\n        - $ref: '#/components/schemas/TracciaDettaglioMessaggioContenuti'\n    \n    TracciaDettaglioRichiestaDatiTrasporto:\n      type: object\n      required:\n        - data_ricezione\n        - tipo\n      properties:\n        data_ricezione:\n          type: string\n          format: date-time\n          example: '2017-07-21T17:32:28Z'\n          description: |-\n            Rappresenta il momento in cui una richiesta arriva sull'API Gateway.\n            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.\n        data_consegna:\n          type: string\n          format: date-time\n          example: '2017-07-21T17:32:28Z'\n          description: |-\n            Rappresenta il momento in cui una richiesta, dopo essere stata autorizzata dall'API Gateway, \n            viene consegnata all'applicativo che implementa l'api.\n            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.\n        tipo:\n          type: string\n          description: |-\n           Tipologia dell'invocazione.\n           Può essere un http method per i protocolli basati su HTTP.\n          example: POST\n        url_invocazione:\n          type: string\n          description: |-\n           URI dell'invocazione\n          example: http://govway/in/Ente/Protocollazione/v1/documenti?test=true\n    \n    TracciaDettaglioRisposta:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/TracciaDettaglioMessaggio'\n        - $ref: '#/components/schemas/TracciaDettaglioRispostaDatiTrasporto'\n        - $ref: '#/components/schemas/TracciaDettaglioRispostaErrore'\n        - $ref: '#/components/schemas/TracciaDettaglioMessaggioContenuti'\n\n    TracciaDettaglioRispostaDatiTrasporto:\n      type: object\n      required:\n        - data_consegna\n        - esito_consegna\n      properties:\n        data_ricezione:\n          type: string\n          format: date-time\n          example: '2017-07-21T17:32:28Z'\n          description: |-\n            Rappresenta il momento in cui una risposta viene ricevuta sull'API Gateway.\n            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.\n        data_consegna:\n          type: string\n          format: date-time\n          example: '2017-07-21T17:32:28Z'\n          description: |-\n            Rappresenta il momento in cui una risposta, dopo essere stata verifica dall'API Gateway, \n            viene inoltrata all'applicativo che aveva scaturito la richiesta.\n            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.\n        esito_ricezione:\n          type: string\n          description: |-\n           Esito di trasporto associato alla risposta ricevuta sull'API Gateway.\n           Negli scenari basati su protocollo HTTP si tratta di http status.\n          example: 200\n        esito_consegna:\n          type: string\n          description: |-\n           Esito di trasporto ritornato all'applicativo che aveva scaturito la richiesta.\n           Può essere quello ritornato dall'applicativo che implementa l'API (esito_ricezione) o \n           può essere generato dall'API Gateway in presenza di errori avvenuti durante la gestione della richiesta. \n           Negli scenari basati su protocollo HTTP si tratta di http status.\n          example: 200\n\n    TracciaDettaglioRispostaErrore:\n      type: object\n      properties:\n        fault_ricezione:\n          type: string\n          format: byte\n          description: |-\n           Messaggio di errore ricevuta sull'API Gateway, in seguito ad una richiesta non andata a buon fine.\n           Può trattarsi di un Problem Details RFC7807 per i protocolli basati su HTTP o un SOAPFault per i protocolli basati su SOAP.\n        fault_consegna:\n          type: string\n          format: byte\n          description: |-\n           Messaggio di errore ritornato all'applicativo che aveva scaturito la richiesta.\n           Il Fault può essere quello ritornato dall'applicativo che implementa l'API (fault_ricezione) o \n           può essere generato dall'API Gateway in presenza di errori avvenuti durante la gestione della richiesta. \n           Può trattarsi di un Problem Details RFC7807 per i protocolli basati su HTTP o un SOAPFault per i protocolli basati su SOAP.\n        dettagli_errore:\n          type: array\n          items:\n            type: string\n            description: Eventuali messaggi di errore\n\n    TracciaDettaglioMessaggio:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |-\n            Dove applicabile, identificativo univoco del messaggio.\n            Può essere l'identificativo del messaggio in presenza di header WS-Addressing (es. wsa:MessageID),\n            l'identificativo SDI nella Fatturazione Elettronica,\n            l'id e-Gov su richieste SPCoop o altri casi. \n          example: eba4355e-403f-4e75-8d56-0751710409c2\n        id_applicativo:\n          type: string\n          description: |-\n            Dove applicabile, identificativo applicativo del messaggio.\n            Nei messaggi dove è presenta un imbustamento di protocollo (WS-Addressing, Fatturazione Elettronica, SPCoop ...),\n            può essere associato alla traccia un ulteriore identificativo applicativo che identifica il messaggio contenuto all'interno della busta di protocollo.  \n          example: ENTE-X-UFFICIOY-123\n\n    TracciaDettaglioMessaggioContenuti:\n      type: object\n      properties:\n        contenuti:\n          $ref: '#/components/schemas/TracciaContenutoMessaggio'\n\n    TracciaContenutoMessaggio:\n      type: object\n      properties:\n        headers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TracciaContenutoMessaggioHeader'\n          description: |-\n            Dove applicabile, vengono registrati gli header di trasporto (es. header HTTP).\n          example:\n            \"headers\" : [ {\n              \"nome\" : \"Accept\",\n              \"valore\" : \"application/json\"\n            }, {\n              \"nome\" : \"Content-Length\",\n              \"valore\" : \"56789\"\n            }, {\n              \"nome\" : \"Content-Type\",\n              \"valore\" : \"application/pdf\"\n            } ]\n        body:\n          type: string\n          format: byte\n          description: Contenuto del messaggio\n\n    TracciaContenutoMessaggioHeader:\n      type: object\n      required:\n        - nome\n        - valore\n      properties:\n        nome:\n          type: string\n          example: Content-Type\n          description: Nome dell'header\n        valore:\n          type: string\n          example: application/json\n          description: Valore dell'header\n\n\n    # Informazioni\n \n    TracciaInformazioniApi:\n      type: object\n      required:\n        - erogatore\n        - nome\n        - versione\n      properties:\n        erogatore:\n          type: string\n          description: Identificativo dell'erogatore dell'api\n          example: 'Ente'\n        nome:\n          type: string\n          description: Identificativo dell'api\n          example: 'Protocollazione'\n        versione:\n          type: integer\n          format: int32\n          minimum: 1\n          default: 1\n          description: Versione dell'api\n          example: 1\n        operazione:\n          type: string\n          description: Dove applicabile, identificativo dell'operazione\n          example: 'protocollazioneDocumento'\n \n    TracciaInformazioniMittente:\n      type: object\n      properties:\n        principal:\n          type: string\n          description: Dove applicabile, credenziali univoche del chiamante.\n          example: 'c=IT, O=Comune Firenze, OU=Protocollo, CN=protocollo.regionetoscana.it'\n        fruitore:\n          type: string\n          description: Identificativo del fruitore\n          example: 'Ente'\n        utente:\n          type: string\n          description: |- \n            Dove applicabile, identificativo del consumatore o altro soggetto operante la richiesta.\n            E' cura del fruitore procedere a codificare e anonimizzare ove necessario.\n          example: 'Andrea Rossi'\n        indirizzo_client:\n          type: string\n          description: Dove applicabile, indirizzo IP del client\n        indirizzo_client_inoltrato:\n          type: string\n          description: |-\n            Dove applicabile, indirizzo IP del client recuperato tramite meccanismi di header forwarding quali ad esempio\n            - [X-]Forwarded-For\n            - [X-]Forwarded\n            - [X-]Client-IP\n            - [X-]Cluster-Client-IP\n      ",
			"canonicalURL": "/github.com/link-it/govway@a2e75d237ade3c36c8967adef1b6f57ca28ca6e8/-/blob/tools/utils/src/org/openspcoop2/utils/service/schemi/standard/trace.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/link-it/govway/blob/a2e75d237ade3c36c8967adef1b6f57ca28ca6e8/tools/utils/src/org/openspcoop2/utils/service/schemi/standard/trace.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}