{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cdimascio/express-openapi-validator"
		},
		"file": {
			"name": "multipart.yaml",
			"size": 0,
			"path": "test/resources/multipart.yaml",
			"byteSize": 4199,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: /v1/\npaths:\n  /sample_1:\n    post:\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - form_p1\n              properties:\n                form_p1:\n                  type: string\n                form_p2:\n                  type: string\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - p1\n                - p2\n              properties:\n                p1:\n                  type: string\n                p2:\n                  type: string\n      responses:\n        \"200\":\n          description: form data\n\n  /sample_2:\n    post:\n      description: upload a photo of the pet\n      operationId: formData\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - file\n                - metadata\n              properties:\n                file:\n                  description: The photo\n                  type: string\n                  format: binary\n                metadata:\n                  type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - form_p1\n              properties:\n                form_p1:\n                  type: string\n                form_p2:\n                  type: string\n      responses:\n        \"200\":\n          description: form data\n\n  /sample_3:\n    post:\n      description: upload a photo of the pet\n      operationId: octetStream\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        \"200\":\n          description: binary\n\n  /sample_4:\n    post:\n      description: upload a photo of the pet\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Image'\n      responses:\n        201:\n          description: Created\n\n  /sample_5:\n    post:\n      description: upload a photo of the pet\n      requestBody:\n        $ref: '#/components/requestBodies/ImageReqBody'\n      responses:\n        201:\n          description: Created\n\n  /sample_6:\n    post:\n      description: upload a photo of the pet\n      requestBody:\n        $ref: '#/components/requestBodies/ImageReqBodyRef'\n      responses:\n        201:\n          description: Created\n          \n  # TODO add test with ImageReqBody ref to Image\n\n  /range:\n    get:\n      parameters:\n        - name: tags\n          in: query\n          description: tags to filter by\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: number\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 5\n            maximum: 10\n      responses:\n        \"200\":\n          description: form data\n\ncomponents:\n  schemas:\n    Image:\n      type: object\n      required:\n        - image\n      properties:\n        image:\n          description: The image\n          type: string\n          format: binary\n\n  requestBodies:\n    ImageReqBody:\n      required: true\n      content:\n        multipart/form-data:\n          schema:\n            type: object\n            required:\n              - image\n            properties:\n              image:\n                description: The image\n                type: string\n                format: binary\n\n    ImageReqBodyRef:\n      required: true\n      content:\n        multipart/form-data:\n          schema:\n            $ref: '#/components/schemas/Image'\n",
			"canonicalURL": "/github.com/cdimascio/express-openapi-validator@6448f4548db32bf5d2ae18e25dd36996ae9500ef/-/blob/test/resources/multipart.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cdimascio/express-openapi-validator/blob/6448f4548db32bf5d2ae18e25dd36996ae9500ef/test/resources/multipart.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}