{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/edi3/edi3.github.io"
		},
		"file": {
			"name": "townplan-schema.json",
			"size": 0,
			"path": "specs/edi3-model-interchange/master/townplan-schema.json",
			"byteSize": 6798,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"description\": \"\",\n        \"title\": \"Town Plan MetaModel\",\n        \"version\": \"\"\n    },\n    \"servers\": [],\n    \"paths\": {},\n    \"components\": {\n        \"schemas\": {\n            \"Domain\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"The name of the library element - ie the name of the domain, resource, entity, property, code, or any other specialised metamodel model element.\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"full description of the metadata element.\",\n                        \"type\": \"string\"\n                    },\n                    \"repositoryURL\": {\n                        \"description\": \"The authoritative location of the repository containing version controlled domain information (eg  https://github.com/edi3/edi3-regulatory)\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ]\n            },\n            \"IdentityScheme\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"The name of the library element - ie the name of the domain, resource, entity, property, code, or any other specialised metamodel model element.\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"full description of the metadata element.\",\n                        \"type\": \"string\"\n                    },\n                    \"scopes\": {\n                        \"items\": {\n                            \"description\": \"missing description\",\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"minItems\": 1\n                    },\n                    \"issuer\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/OrganisationIds\"\n                            },\n                            {\n                                \"type\": \"object\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"scopes\"\n                ]\n            },\n            \"OrganisationIds\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"missing description\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ]\n            },\n            \"Organisation\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"missing description\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"missing description\",\n                        \"type\": \"string\"\n                    },\n                    \"dnsDomain\": {\n                        \"description\": \"the DNS domain name of the organisation (eg unece.org)\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"dnsDomain\"\n                ]\n            },\n            \"Resource\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"The name of the library element - ie the name of the domain, resource, entity, property, code, or any other specialised metamodel model element.\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"full description of the metadata element.\",\n                        \"type\": \"string\"\n                    },\n                    \"action\": {\n                        \"items\": {\n                            \"description\": \"A list of allowed actions on this resource (create, read, update, delete).  \",\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"status\": {\n                        \"description\": \"Status of the element from a library management perspective. \\n using COSS lifecycle values (raw, draft, stable, deprecated, deleted).\",\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"proposed\",\n                            \"active\",\n                            \"deprecated\",\n                            \"deleted\"\n                        ]\n                    },\n                    \"subResource\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Resource\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ]\n            },\n            \"Service\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"The name of the library element - ie the name of the domain, resource, entity, property, code, or any other specialised metamodel model element.\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"full description of the metadata element.\",\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"description\": \"Status of the element from a library management perspective. \\n using COSS lifecycle values (raw, draft, stable, deprecated, deleted).\",\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"proposed\",\n                            \"active\",\n                            \"deprecated\",\n                            \"deleted\"\n                        ]\n                    },\n                    \"version\": {\n                        \"description\": \"The public release version of the resource  in semver format major.minor.patch (eg 0.2.3).\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"version\"\n                ]\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/edi3/edi3.github.io@2f0c874a23c5f456618995ff398d3e44ba7bc8fa/-/blob/specs/edi3-model-interchange/master/townplan-schema.json",
			"externalURLs": [
				{
					"url": "https://github.com/edi3/edi3.github.io/blob/2f0c874a23c5f456618995ff398d3e44ba7bc8fa/specs/edi3-model-interchange/master/townplan-schema.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}