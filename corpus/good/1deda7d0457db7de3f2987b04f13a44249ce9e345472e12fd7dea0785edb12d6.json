{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DevCycleHQ/go-server-sdk"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "api/swagger.yaml",
			"byteSize": 12168,
			"content": "openapi: 3.0.0\ninfo:\n  title: DevCycle Bucketing API\n  description: Documents the DevCycle Bucketing API which provides and API interface\n    to User Bucketing and for generated SDKs.\n  version: 1.0.0\nservers:\n- url: https://bucketing-api.devcycle.com/\ntags:\n- name: devcycle\npaths:\n  /v1/variables/{key}:\n    post:\n      tags:\n      - devcycle\n      summary: Get variable by key for user data\n      operationId: getVariableByKey\n      parameters:\n      - name: key\n        in: path\n        description: Variable key\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UserRequestBody'\n      responses:\n        \"200\":\n          description: Variable response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"401\":\n          description: Missing 'envKey' query parameter or 'Authorization' header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n      - bearerAuth: []\n  /v1/variables:\n    post:\n      tags:\n      - devcycle\n      summary: Get all variables by key for user data\n      operationId: getVariables\n      requestBody:\n        $ref: '#/components/requestBodies/UserRequestBody'\n      responses:\n        \"200\":\n          description: Variables response\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/Variable'\n                x-content-type: application/json\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"401\":\n          description: Missing 'envKey' query parameter or 'Authorization' header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n      - bearerAuth: []\n  /v1/features:\n    post:\n      tags:\n      - devcycle\n      summary: Get all features by key for user data\n      operationId: getFeatures\n      requestBody:\n        $ref: '#/components/requestBodies/UserRequestBody'\n      responses:\n        \"200\":\n          description: Feature response\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/Feature'\n                x-content-type: application/json\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"401\":\n          description: Missing 'envKey' query parameter or 'Authorization' header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n      - bearerAuth: []\n  /v1/track:\n    post:\n      tags:\n      - devcycle\n      summary: Post events to DevCycle for user\n      operationId: postEvents\n      requestBody:\n        $ref: '#/components/requestBodies/TrackRequestBody'\n      responses:\n        \"201\":\n          description: Feature response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_201'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"401\":\n          description: Missing 'envKey' query parameter or 'Authorization' header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security:\n      - bearerAuth: []\ncomponents:\n  schemas:\n    UserData:\n      required:\n      - user_id\n      type: object\n      properties:\n        user_id:\n          type: string\n          description: Unique id to identify the user\n        email:\n          type: string\n          description: User's email used to identify the user on the dashboard / target\n            audiences\n        name:\n          type: string\n          description: User's name used to identify the user on the dashboard / target\n            audiences\n        language:\n          maxLength: 2\n          type: string\n          description: User's language in ISO 639-1 format\n        country:\n          maxLength: 2\n          type: string\n          description: User's country in ISO 3166 alpha-2 format\n        appVersion:\n          type: string\n          description: App Version of the running application\n        appBuild:\n          type: string\n          description: App Build number of the running application\n        customData:\n          type: object\n          description: \"User's custom data to target the user with, data will be logged\\\n            \\ to DevCycle for use in dashboard.\"\n        privateCustomData:\n          type: object\n          description: \"User's custom data to target the user with, data will not\\\n            \\ be logged to DevCycle only used for feature bucketing.\"\n        createdDate:\n          type: number\n          description: \"Date the user was created, Unix epoch timestamp format\"\n        lastSeenDate:\n          type: number\n          description: \"Date the user was created, Unix epoch timestamp format\"\n        platform:\n          type: string\n          description: Platform the Client SDK is running on\n        platformVersion:\n          type: string\n          description: Version of the platform the Client SDK is running on\n        deviceModel:\n          type: string\n          description: User's device model\n        sdkType:\n          type: string\n          description: DevCycle SDK type\n          enum:\n          - api\n          - server\n        sdkVersion:\n          type: string\n          description: DevCycle SDK Version\n    UserDataAndEventsBody:\n      type: object\n      properties:\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        user:\n          $ref: '#/components/schemas/UserData'\n    Feature:\n      required:\n      - _id\n      - _variation\n      - key\n      - type\n      - variationKey\n      - variationName\n      type: object\n      properties:\n        _id:\n          type: string\n          description: unique database id\n        key:\n          type: string\n          description: \"Unique key by Project, can be used in the SDK / API to reference\\\n            \\ by 'key' rather than _id.\"\n        type:\n          type: string\n          description: Feature type\n          enum:\n          - release\n          - experiment\n          - permission\n          - ops\n        _variation:\n          type: string\n          description: Bucketed feature variation\n        variationKey:\n          type: string\n          description: Bucketed feature variation key\n        variationName:\n          type: string\n          description: Bucketed feature variation name\n        evalReason:\n          type: string\n          description: Evaluation reasoning\n      example:\n        evalReason: evalReason\n        _variation: _variation\n        _id: _id\n        type: release\n        key: key\n        variationKey: variationKey\n        variationName: variationName\n    Variable:\n      required:\n      - _id\n      - key\n      - type\n      - value\n      type: object\n      properties:\n        _id:\n          type: string\n          description: unique database id\n        key:\n          type: string\n          description: \"Unique key by Project, can be used in the SDK / API to reference\\\n            \\ by 'key' rather than _id.\"\n        type:\n          type: string\n          description: Variable type\n          enum:\n          - String\n          - Boolean\n          - Number\n          - JSON\n        value:\n          type: object\n          description: \"Variable value can be a string, number, boolean, or JSON\"\n      example:\n        _id: _id\n        type: String\n        value: {}\n        key: key\n    Event:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: Custom event type\n        target:\n          type: string\n          description: Custom event target / subject of event. Contextual to event\n            type\n        date:\n          type: number\n          description: Unix epoch time the event occurred according to client\n        value:\n          type: number\n          description: Value for numerical events. Contextual to event type\n        metaData:\n          type: object\n          description: Extra JSON metadata for event. Contextual to event type\n    ErrorResponse:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Error message\n        data:\n          type: object\n          description: Additional error information detailing the error reasoning\n    inline_response_201:\n      type: object\n      properties:\n        message:\n          type: string\n      example:\n        message: message\n  responses:\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    UnauthorizedError:\n      description: Missing 'envKey' query parameter or 'Authorization' header\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n  requestBodies:\n    UserRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserData'\n      required: true\n    TrackRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserDataAndEventsBody'\n      required: true\n  securitySchemes:\n    bearerAuth:\n      type: apiKey\n      description: Enter your DevCycle SDK token\n      name: Authorization\n      in: header\n",
			"canonicalURL": "/github.com/DevCycleHQ/go-server-sdk@a9346974c0823cdfde4805fea28b3476f8f0e027/-/blob/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DevCycleHQ/go-server-sdk/blob/a9346974c0823cdfde4805fea28b3476f8f0e027/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}