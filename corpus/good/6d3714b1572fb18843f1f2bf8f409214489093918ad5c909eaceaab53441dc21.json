{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/prisma.pan.dev"
		},
		"file": {
			"name": "AccessKeys.yaml",
			"size": 0,
			"path": "static/oas/cspm/AccessKeys.yaml",
			"byteSize": 9001,
			"content": "components:\n  requestBodies:\n    UserAccessKeyRequestModel:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserAccessKeyRequestModel'\n      description: Model for user access key\n      required: true\n  securitySchemes:\n    x-redlock-auth:\n      description: The x-redlock-auth value is a JSON Web Token (JWT).\n      in: header\n      name: x-redlock-auth\n      type: apiKey\n  schemas:\n    CreateUserAccessKeyResponseModel:\n      description: Model for create user access key response\n      properties:\n        id:\n          description: Access key ID\n          type: string\n        secretKey:\n          description: Access key secret\n          type: string\n      type: object\n    UserAccessKeyDetailResponseModel:\n      description: Model for get user access keys response\n      properties:\n        createdBy:\n          description: Created By\n          type: string\n        createdTs:\n          description: Time access key was created\n          format: int64\n          type: integer\n        expiresOn:\n          description: Access key expires on\n          format: int64\n          type: integer\n        id:\n          description: Access key id\n          type: string\n        lastUsedTime:\n          description: Access key last used\n          format: int64\n          type: integer\n        name:\n          description: Name\n          type: string\n        role:\n          additionalProperties:\n            type: string\n          description: User role\n          type: object\n        roleType:\n          description: User role permission type\n          type: string\n        status:\n          description: Access key status\n          type: string\n        username:\n          description: Access key user name\n          type: string\n      type: object\n    UserAccessKeyRequestModel:\n      description: Model for create user access key request\n      properties:\n        expiresOn:\n          description: Timestamp in milliseconds when access key expires\n          format: int64\n          type: integer\n        name:\n          description: Access key name\n          type: string\n        serviceAccountName:\n          description: Service account name\n          type: string\n      required:\n      - name\n      type: object\n    UserAccessKeyResponseModel:\n      description: Model for user access keys GET response\n      properties:\n        expiresOn:\n          description: Timestamp in milliseconds when access key expires\n          format: int64\n          type: integer\n        id:\n          description: Access key ID\n          type: string\n        name:\n          description: Access key name\n          type: string\n      type: object\ninfo:\n  contact: {}\n  description: \"Access Keys are a secure way to enable programmatic access to the\\\n    \\ Prisma Cloud API. By default, only \\nthe System Admin has API access and can\\\n    \\ enable API access for other administrators. If you have API access, \\nyou can\\\n    \\ create up to two access keys. Create an access key for a limited time period\\\n    \\ and regenerate your API \\nkeys periodically to minimize exposure and follow\\\n    \\ security best practices.\\n\"\n  title: Prisma Cloud Access Keys API Overview\n  version: Latest\nopenapi: 3.0.0\npaths:\n  /access_keys:\n    get:\n      description: Returns all access keys for your tenant if you have a Prisma Cloud\n        System Admin role. Returns just your access keys if you don't have this role.\n      operationId: get-my-access-keys\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserAccessKeyDetailResponseModel'\n                type: array\n          description: successful operation\n        '400':\n          description: user_inactive_or_not_exist\n        '403':\n          description: unauthorized_to_use_access_keys\n        '500':\n          description: failed_fetch_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: List Access Keys\n      tags:\n      - Access Keys\n    post:\n      description: \"Adds a new access key for the current user. If you have API access,\\\n        \\ you can create up to two access keys.  \\r\\n\\r\\nIf you want to create an\\\n        \\ access key for an existing Prisma Cloud service account instead of for the\\\n        \\ current user, then\\nspecify the name of the existing service account as\\\n        \\ the value for the request body parameter **serviceAccountName**.\\n\"\n      operationId: add-access-keys\n      requestBody:\n        $ref: '#/components/requestBodies/UserAccessKeyRequestModel'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUserAccessKeyResponseModel'\n          description: successful operation\n        '400':\n          description: invalid_expiry_access_key / already_have_two_access_keys /\n            invalid_access_key_name_length / invalid_access_key_name\n        '403':\n          description: unauthorized_to_use_access_keys\n        '409':\n          description: duplicate_access_key_name\n      security:\n      - x-redlock-auth: []\n      summary: Add Access Key\n      tags:\n      - Access Keys\n  /access_keys/{id}:\n    get:\n      description: Returns the metadata of the access key that has the specified ID.\n      operationId: get-access-key-by-id\n      parameters:\n      - description: Access key ID\n        in: path\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAccessKeyResponseModel'\n          description: successful operation\n        '400':\n          description: user_inactive_or_not_exist\n        '403':\n          description: unauthorized_to_use_access_keys\n        '500':\n          description: non_existing_access_key\n      security:\n      - x-redlock-auth: []\n      summary: Get Access Key by ID\n      tags:\n      - Access Keys\n    put:\n      description: \"Updates data for the access key that has the specified ID.  \\r\\\n        \\n\\r\\nThe following request body parameters are unused and should be ignored:\\n\\\n        * **serviceAccountName** \\n* **expiredOn** \\n\"\n      operationId: update-access-keys\n      parameters:\n      - description: Access key ID\n        in: path\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UserAccessKeyRequestModel'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: user_inactive_or_not_exist / invalid_access_key_name_length\n            / invalid_access_key_name / non_existing_access_key / invalid_expiry_access_key\n            / expired_access_key\n        '403':\n          description: unauthorized_to_use_access_keys\n        '500':\n          description: failed_fetch_user_profile\n      security:\n      - x-redlock-auth: []\n      summary: Update Access Key\n      tags:\n      - Access Keys\n    delete:\n      description: Deletes the access key that has the specified ID.\n      operationId: delete-access-keys\n      parameters:\n      - description: Access key ID\n        in: path\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: user_inactive_or_not_exist\n        '403':\n          description: unauthorized_to_use_access_keys\n        '500':\n          description: failed_fetch_user_profile / non_existing_access_key\n      security:\n      - x-redlock-auth: []\n      summary: Delete Access Key\n      tags:\n      - Access Keys\n  /access_keys/{id}/status/{status}:\n    patch:\n      description: Activates or deactivates the access key that has the specified\n        ID. You cannot activate an expired access key.\n      operationId: update-access-key-status\n      parameters:\n      - description: Access key ID\n        in: path\n        name: id\n        required: true\n        schema:\n          format: uuid\n          type: string\n      - description: Whether or not the access key is active. True means active.\n        in: path\n        name: status\n        required: true\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: empty_access_key_status_provided\n        '403':\n          description: unauthorized_to_use_access_keys\n        '500':\n          description: non_existing_access_key / expired_access_key\n      security:\n      - x-redlock-auth: []\n      summary: Update Access Key Status\n      tags:\n      - Access Keys\nservers:\n- url: https://api.prismacloud.io\ntags:\n- description: The Access Keys endpoints are listed below.\n  name: Access Keys\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/prisma.pan.dev@b738b3f9404554218e437ccabc9187b4ff7ec563/-/blob/static/oas/cspm/AccessKeys.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/prisma.pan.dev/blob/b738b3f9404554218e437ccabc9187b4ff7ec563/static/oas/cspm/AccessKeys.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}