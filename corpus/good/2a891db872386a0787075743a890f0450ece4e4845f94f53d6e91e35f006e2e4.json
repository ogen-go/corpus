{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/e-cordel/ecordel-restapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 7950,
			"content": "openapi: 3.0.0\n\ninfo:\n  description: \"Rest API to perform operations on e-cordels\"\n  version: \"1.0.0\"\n  title: \"E-cordel API\"\n  contact:\n    url: https://ecordel.com.br\n    email: contato@ecordel.com.br\n\nservers:\n  - url: https://ecordel-restapi.herokuapp.com/api/v1\n\npaths:\n  /auth:\n    post:\n      summary: Login and get token\n      requestBody:\n        $ref: '#/components/requestBodies/login'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n        401:\n          description: Unauthorized\n      tags:\n        - Authentication\n  /authors:\n    post:\n      summary: \"Create a new author\"\n      requestBody:\n        $ref: '#/components/requestBodies/author'\n      responses:\n        201:\n          description: New author created\n        403:\n          description: Forbidden\n      security:\n        - bearerAuth: []\n      tags:\n        - Author\n  /cordels/summaries:\n    get:\n      summary: \"Retrieve all summaries by pages\"\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type : integer\n          required: false\n          description: Number of the page, starts at 0\n        - name: size\n          in: query\n          schema:\n            type: integer\n          required: false\n          description: Cordels per page.\n        - name: title\n          in: query\n          schema:\n            type: string\n          required: false\n          description: search corldels with titles that contains the parameter. It will work such as a like operation.\n        - name: published\n          in: query\n          schema:\n            type: boolean\n          required: false\n          description: search only publish corldels. This parameter is always true if is omitted.\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReponsePage'\n      tags:\n        - Cordel\n  /cordels:\n    post:\n      summary: \"Create a new cordel\"\n      requestBody:\n        $ref: '#/components/requestBodies/cordel'\n      responses:\n        201:\n          description: Create new cordel\n        403:\n          description: Forbidden\n      security:\n        - bearerAuth: []\n      tags:\n        - Cordel\n  /cordels/{id}:\n    get:\n      summary: \"Get a cordel with full content\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          schema:\n            type: integer\n          description: \"Cordel identification number\"\n          required: true\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cordel'\n        404:\n          description: \"Not found\"\n      tags:\n        - Cordel\n    put:\n      summary: \"Update the cordel identified by id\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          schema:\n            type : integer\n          description: \"Cordel identification number\"\n          required: true\n      requestBody:\n        $ref: '#/components/requestBodies/cordel'\n      responses:\n        200:\n          description: OK\n        403:\n          description: Forbidden\n      security:\n        - bearerAuth: []\n      tags:\n        - Cordel\n    delete:\n      summary: \"Delete the cordel identified by id\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          schema:\n            type : integer\n          description: \"Cordel identification number\"\n          required: true\n      responses:\n        200:\n          description: OK\n        403:\n          description: Forbidden\n      security:\n        - bearerAuth: []\n      tags:\n        - Cordel\n  /cordels/{id}/xilogravura:\n    put:\n      summary: Associate a xilogravura to a cordel\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          schema:\n            type : integer\n          description: \"Cordel identification number\"\n          required: true\n      requestBody:\n        $ref: '#/components/requestBodies/xilogravura'\n      responses:\n        200:\n          description: OK\n        403:\n          description: Forbidden\n      security:\n        - bearerAuth: []\n      tags:\n        - Cordel\ncomponents:\n  requestBodies:\n    author:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Author'\n    cordel:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cordel'\n    login:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              username:\n                type: string\n              password:\n                type: string\n    xilogravura:\n      content:\n        multipart/form-data:\n          schema:\n            type: object\n            properties:\n              description:\n                type: string\n              file:\n                type: string\n                format: binary\n  schemas:\n    Author:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: author's id\n        name:\n          type: string\n          description: author's name\n          minLength: 3\n        email:\n          type: string\n          description: author's email\n        about:\n          type: string\n          description: small text about the author\n    Cordel:\n      type: object\n      description: Cordel data with content. For operations like POST and PUT the inner objects only need the id\n      properties:\n        author:\n          type: object\n          properties:\n            id:\n              type: integer\n        title:\n          type: string\n          description: cordel title\n        description:\n          type: string\n          description: cordel's description\n        content:\n          type: string\n          description: cordel text\n        xilogravuraUrl:\n          type: string\n        published:\n          type: boolean\n        tags:\n          type: array\n          items:\n            type: string\n    CordelSummary:\n      type: object\n      description: Cordel main data used for endpoints that return many objects. This item does not include the content.\n      properties:\n        id:\n          type: integer\n          description: cordel id\n        title:\n          type: string\n          description: cordel title\n        authorName:\n          type: string\n        xilogravuraUrl:\n          type: string\n          description: image url\n    Page:\n      type: object\n      properties:\n        pageSize:\n          type: integer\n        pageNumber:\n          type: integer\n    ReponsePage:\n      type: object\n      properties:\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/CordelSummary'\n        pageable:\n          $ref: '#/components/schemas/Page'\n        totalPages:\n          type: integer\n        totalElements:\n          type: integer\n          description: total number of elements that can be fetched\n        last:\n          type: boolean\n          description: indicates if it's the last page\n        first:\n          type: boolean\n          description: indicates if it's the last page\n        number:\n          type: integer\n          description: page number\n        numberOfElements:\n          type: integer\n          description: number of elements on the current page\n        size:\n          type: integer\n          description: size of the page\n        empty:\n          type: boolean\n          description: indicates if the page is empty\n    Token:\n      type: object\n      properties:\n        token:\n          type: string\n        authenticationMethod:\n          type: string\n        expiresAt:\n          type: integer\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT",
			"canonicalURL": "/github.com/e-cordel/ecordel-restapi@e9748f718d646f5a0c7a7bcdc77faee120a521f0/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/e-cordel/ecordel-restapi/blob/e9748f718d646f5a0c7a7bcdc77faee120a521f0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}