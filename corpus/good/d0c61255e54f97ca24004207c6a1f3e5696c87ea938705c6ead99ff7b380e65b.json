{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OlivierLD/raspberry-coffee"
		},
		"file": {
			"name": "sample.yaml",
			"size": 0,
			"path": "polo-shirt/yaml/sample.yaml",
			"byteSize": 3838,
			"content": "openapi: 3.0.1\ninfo:\n  title: Polo-shirt example\n  termsOfService: 'urn://Use-and-Reuse-at-will'\n  description: |\n    Not much to learn here, this is just an example for now. To be used with swagger, with openapi-generator.\n    From this [Repo](https://github.com/OlivierLD/raspberry-coffee/tree/master/polo-shirt).\n    This is a simple one, mostly to be used with a custom generator.\n  version: \"0.0.2\"\n  contact:\n    email: \"batman@gotham.gov\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\nservers:\n  - url: 'http://localhost:2345'\npaths:\n  /oplist:\n    get:\n      description: |\n        Returns the list of all the available operations.\n      operationId: getOperationList\n      tags:\n        - Operations\n      responses:\n        '200':\n          description: \"Read successful\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/operation-list\"\n\n  /top-root/greeting:\n    get:\n      summary: Say Hello\n      description: |\n        With one query parameter\n      operationId: greet\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      tags:\n        - Greeting\n      responses:\n        '200':\n          description: The final greeting\n          content:\n            application/json:\n              schema:\n                type: string\n\n  /top-root/greeting/v2:\n    get:\n      summary: Say Hello, in another way\n      description: |\n        With one query parameter, returns result as an object\n      operationId: greetV2\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: salutation\n          required: true\n          in: path\n          schema:\n            type: string\n      tags:\n        - Greeting\n      responses:\n        '200':\n          description: The final greeting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/greeting-message'\n\n  /top-root/greeting/v3:\n    post:\n      summary: Say Hello, in yet another way\n      description: |\n        With one body parameter, returns result as an object.\n      operationId: greetV3\n      requestBody:\n        $ref: '#/components/requestBodies/greeting-request'\n      tags:\n        - Greeting\n      responses:\n        '200':\n          description: The final greeting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/greeting-message'\n\ncomponents:\n  schemas:\n    greeting-message:\n      type: object\n      description: Result of the greeting process\n      properties:\n        message:\n          type: string\n          description: The final greeting\n\n    greeting-request:\n      type: object\n      description: Name and Greeting\n      properties:\n        name:\n          type: string\n          description: the name to greet\n        salutation:\n          type: string\n          description: the way to greet\n      required:\n        - name\n\n    operation:\n      type: object\n      description: The REST operation\n      properties:\n        verb:\n          type: string\n          description: For now restricted to GET, POST, PUT, DELETE\n          enum:\n            - GET\n            - POST\n            - PUT\n            - DELETE\n        path:\n          type: string\n          description: The path of the Request\n        description:\n          type: string\n          description: The description of the operation\n\n    operation-list:\n      type: array\n      items:\n        $ref: '#/components/schemas/operation'\n\n  requestBodies:\n    greeting-request:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/greeting-request'\n      description: An object, with name and salutation\n",
			"canonicalURL": "/github.com/OlivierLD/raspberry-coffee@e683973e85c8d24558bf2cefbd5c84b3be6e9302/-/blob/polo-shirt/yaml/sample.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OlivierLD/raspberry-coffee/blob/e683973e85c8d24558bf2cefbd5c84b3be6e9302/polo-shirt/yaml/sample.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}