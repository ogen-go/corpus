{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/UniversalMediaServer/api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 29184,
			"content": "openapi: \"3.0.1\"\ninfo:\n  version: 1.0.0\n  title: Universal Media Server API\n  description: API Endpoint used by Universal Media Server's core application to retrieve media metadata\n  contact:\n    name: Universal Media Server forums\n    url: https://www.universalmediaserver.com/forum/\nservers:\n  - url: https://api.universalmediaserver.com\npaths:\n  /:\n    get:\n      description: |\n        Returns the current health status of the API\n      responses:\n        '200':\n          description: Successful health status response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n\n  /api/subversions:\n    get:\n      description: |\n        Returns the current API subversions in use. This can be used by API consumers to purge a cached metadata document if a new endpoint subversion has been released (with bugfixes or enhancements)\n      responses:\n        '200':\n          description: API subversions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subversions'\n\n  /api/configuration:\n    get:\n      description: |\n        Returns the current configuration that an API consumer should use to fetch referenced resources, such as current baseurls for thumbnail images\n      responses:\n        '200':\n          description: Configuration values in use\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Configuration'\n\n  /api/media/osdbhash/{osdbhash}/{filebytesize}:\n    get:\n      description: |\n        Returns media metadata for the Opensubtitles hash of a file\n      externalDocs:\n        url: https://trac.opensubtitles.org/projects/opensubtitles/wiki/HashSourceCodes\n        description: Learn more about how to generate Open Subtitles file hashes\n      parameters:\n        - in: path\n          name: osdbhash\n          description: A OpenSubtitles hash of a media file\n          schema:\n            type: string\n          required: true\n        - in: path\n          name: filebytesize\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Media metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaMetadata'\n        '404':\n          description: Metadata not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNotFoundError'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationError'\n        '503':\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyError'\n\n  /api/media/title:\n    get:\n      description: |\n        Returns media metadata by title\n      parameters:\n        - in: query\n          name: title\n          description: Title of the media file\n          schema:\n            type: string\n            example: The Matrix Reloaded\n          required: true\n        - in: query\n          name: year\n          description: Release year of the media. Providing this parameter increases result accuracy.\n          schema:\n            type: string\n            example: 2003\n      responses:\n        '200':\n          description: Media metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaMetadata'\n        '404':\n          description: Metadata not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNotFoundError'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationError'\n        '503':\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyError'\n\n  /api/media/v2/title:\n    get:\n      description: |\n        Returns media metadata by title\n      parameters:\n        - in: query\n          name: title\n          description: Title of the media file\n          schema:\n            type: string\n            example: The Matrix Reloaded\n          required: true\n        - in: query\n          name: episode\n          description: Episode number, if media is a tv series episode\n          schema:\n            type: string\n            example: 8\n        - in: query\n          name: season\n          description: Season number, if media is a tv series\n          schema:\n            type: string\n            example: 1\n        - in: query\n          name: year\n          description: Release year of the media. Providing this parameter increases result accuracy.\n          schema:\n            type: string\n            example: 2003\n      responses:\n        '200':\n          description: Media metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaMetadata'\n        '404':\n          description: Metadata not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNotFoundError'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationError'\n        '503':\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyError'\n\n  /api/media/imdbid:\n    get:\n      description: |\n        Returns series metadata by title or imbdID\n      parameters:\n        - in: query\n          name: imdbid\n          description: imdb.com id\n          schema:\n            type: string\n            example: tt0455275\n          required: true\n      responses:\n        '200':\n          description: Series metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaMetadata'\n        '404':\n          description: Metadata not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNotFoundError'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationError'\n        '503':\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyError'\n  /api/media/seriestitle:\n    get:\n      description: |\n        Returns series metadata by title or imbdID\n      parameters:\n        - in: query\n          name: title\n          description: Title of the series\n          schema:\n            type: string\n            example: Prison Break\n        - in: query\n          name: year\n          description: Release year of the media. Providing this parameter increases result accuracy.\n          schema:\n            type: string\n            example: 2005\n        - in: query\n          name: imdbID\n          description: imdb.com id\n          schema:\n            type: string\n            example: tt0455275\n      responses:\n        '200':\n          description: Series metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SeriesMetadata'\n        '404':\n          description: Metadata not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNotFoundError'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationError'\n        '503':\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyError'\n\n  /api/media/video:\n    get:\n      description: |\n        Returns media metadata\n      parameters:\n        - in: query\n          name: title\n          description: Title of the media file\n          schema:\n            type: string\n            example: The Matrix Reloaded\n        - in: query\n          name: year\n          description: Release year of the media. Providing this parameter increases result accuracy.\n          schema:\n            type: string\n            example: 2003\n        - in: query\n          name: osdbHash\n          description: osdbHash of the media file\n          schema:\n            type: string\n            example: 0f0f4c9f3416e24f\n        - in: query\n          name: imdbID\n          description: imdbID of the media file\n          schema:\n            type: string\n            example: tt0816692\n        - in: query\n          name: episode\n          description: episode number of the media file\n          schema:\n            type: string\n            example: 3\n        - in: query\n          name: season\n          description: season number of the media file\n          schema:\n            type: string\n            example: 1\n        - in: query\n          name: filebytesize\n          description: filebytesize of the media file\n          schema:\n            type: string\n            example: 2431697820\n      responses:\n        '200':\n          description: Media metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaMetadata'\n        '404':\n          description: Metadata not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNotFoundError'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationError'\n        '503':\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyError'\n\n  /api/media/season:\n    get:\n      description: |\n        Returns season metadata\n      parameters:\n        - in: query\n          name: title\n          description: Title of the tv series\n          schema:\n            type: string\n            example: The Simpsons\n          required: true\n        - in: query\n          name: season\n          description: Season of the tv series\n          schema:\n            type: string\n            example: 1\n          required: true\n        - in: query\n          name: year\n          description: Year of the season aired\n          schema:\n            type: string\n            example: 1989\n      responses:\n        '200':\n          description: Media metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SeasonMetadata'\n        '404':\n          description: Metadata not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNotFoundError'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationError'\n        '503':\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyError'\n\ncomponents:\n  schemas:\n    Status:\n      type: object\n      properties:\n        status:\n          type: string\n          example: OK\n\n    Subversions:\n      type: object\n      properties:\n        configuration:\n          type: string\n          example: \"1\"\n        season:\n          type: string\n          example: \"1\"\n        series:\n          type: string\n          example: \"1\"\n        video:\n          type: string\n          example: \"1\"\n\n    Configuration:\n      type: object\n      properties:\n        imageBaseURL:\n          type: string\n\n    ExternalIds:\n      type: array\n      items:\n        type: object\n        properties:\n          imdb_id:\n            type: string\n            example: tt0455275\n          freebase_mid:\n            type: string\n            example: /m/0cmqz_\n          freebase_id:\n            type: string\n            example: /en/the_simpsons_season_1\n          tvdb_id:\n            type: number\n            example: 2727\n          tvrage_id:\n            type: string\n          facebook_id:\n            type: string\n            example: PrisonBreak\n          instagram_id:\n            type: string\n            example: prisonbreak\n          twitter_id:\n            type: string\n            example: PrisonBreak\n\n    SeasonMetadata:\n      type: object\n      properties:\n        _id:\n          type: string\n          example: 61c4fe6cdda2797a73f2bb86\n        airDate:\n          type: string\n          format: date\n          example: 1989-12-17\n        credits:\n          $ref: '#/components/schemas/Credits'\n        externalIDs:\n          $ref: '#/components/schemas/ExternalIds'\n        genres:\n          type: array\n          items:\n            type: string\n            example: Action\n        images:\n          type: array\n          items:\n            type: string\n            example: Action\n        tmdbID:\n          type: string\n          example: 3582\n        revenue:\n          type: string\n          example: 701729206\n        seasonNumner:\n          type: number\n          example: 1\n        name:\n          type: string\n          example: Season 1\n        createdAt:\n          type: string\n          format: date-time\n          example: 2021-12-16T07:10:24.066Z\n        updatedAt:\n          type: string\n          format: date-time\n          example: 2021-12-16T07:10:24.066Z\n\n    MediaMetadata:\n      type: object\n      properties:\n        _id:\n          type: string\n          example: 6178aa67dda2797a734dfbb3\n        actors:\n          type: array\n          items:\n            type: string\n            example: Keanu Reeves\n        awards:\n          type: string\n          example: 8 wins \u0026 34 nominations\n        budget:\n          type: number\n          example: 165000000\n        boxoffice: \n          type: string\n          example: $281,576,461\n        country:\n          type: string\n          example: United States\n        credits:\n          $ref: '#/components/schemas/Credits'\n        directors:\n          type: array\n          items:\n            type: string\n            example: Lana Wachowski\n        externalIDs:\n          $ref: '#/components/schemas/ExternalIds'\n        genres:\n          type: array\n          items:\n            type: string\n            example: Action\n        images:\n          type: array\n          items:\n            type: string\n            example: Action\n        imdbID:\n          type: string\n          example: tt0234215\n        metascore:\n          type: string\n          example: tt0234215\n        productionCompanies:\n          type: array\n          items:\n            type: string\n            example: Action\n        productionCountries:\n          type: array\n          items:\n            type: string\n            example: Action\n        plot:\n          type: string\n          example: In this second adventure, Neo and the rebel leaders estimate that they have 72 hours until Zion falls under siege to the Machine Army. Only a matter of hours separates the last human enclave on Earth from 250,000 Sentinels programmed to destroy mankind. But the citizens of Zion, emboldened by Morpheus conviction that the One will fulfill the Oracles Prophecy and end the war with the Machines, rest all manner of hope and expectation on Neo, who finds himself stalled by disturbing visions as he searches for a course of action.\n        poster:\n          type: string\n          example: https://m.media-amazon.com/images/M/MV5BODE0MzZhZTgtYzkwYi00YmI5LThlZWYtOWRmNWE5ODk0NzMxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\n        posterRelativePath:\n          type: string\n          example: /gEU2QniE6E77NI6lCU6MxlNBvIx.jpg\n        rated:\n          type: string\n          example: R\n        rating:\n          type: number\n          example: 7.2\n        ratings:\n          type: array\n          items:\n            type: object\n            properties:\n              Source:\n                type: string\n                example: Internet Movie Database\n              Value:\n                type: string\n                example: 7.2/10\n        released:\n          type: string\n          format: date-time\n          example: 2003-05-15T00:00:00.000Z\n        revenue:\n          type: string\n          example: 701729206\n        runtime:\n          type: string\n          example: 138 min\n        title:\n          type: string\n          example: The Matrix Reloaded\n        type:\n          type: string\n          example: movie\n        votes:\n          type: string\n          example: 544,956\n        year:\n          type: string\n          example: 2003\n        updatedAt:\n          type: string\n          format: date-time\n          example: 2021-12-16T07:10:24.066Z\n    Credits:\n      type: array\n      items:\n        type: object\n        properties:\n          cast:\n            type: array\n            items:\n              type: object\n              properties:\n                adult:\n                  type: boolean\n                  example: false\n                gender:\n                  type: number\n                  example: 2\n                id:\n                  type: number\n                  example: 3972\n                known_for_department:\n                  type: string\n                  example: Acting\n                name:\n                  type: string\n                  example: Wentworth Miller\n                original_name:\n                  type: string\n                  example: Wentworth Miller\n                popularity: \n                  type: number\n                  example: 5.008\n                profile_path:\n                  type: string\n                  example: /1apvr7onOG9OuGjQqlBytBEEY1n.jpg\n                character: \n                  type: string\n                  example: Michael Scofield\n                credit_id:\n                  type: string\n                  example: 52572f15760ee3776a320742\n                order:\n                  type: number\n                  example: 0\n          crew:\n            type: array\n            items:\n              type: object\n    SeriesMetadata:\n      type: object\n      properties:\n        _id:\n          type: string\n          example: 617b774450f42c1b646b9ee9\n        actors:\n          type: array\n          items:\n            type: string\n            example: Dominic Purcell\n        awards:\n          type: string\n          example: Nominated for 1 Primetime Emmy. 8 wins \u0026 32 nominations total\n        country:\n          type: string\n          example: United Kingdom, United States\n        createdBy:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: number\n                example: 54869\n              credit_id:\n                type: string\n                example: 52572f17760ee3776a320b04\n              name:\n                type: string\n                example: Paul Scheuring\n              gender:\n                type: number\n                example: 2\n              profile_path:\n                type: string\n        credits:\n          $ref: '#/components/schemas/Credits'\n        directors:\n          type: array\n          items:\n            type: string\n            example: Lana Wachowski\n        externalIDs:\n          $ref: '#/components/schemas/ExternalIds'\n        genres:\n          type: array\n          items:\n            type: string\n            example: Action \u0026 Adventure\n        homepage:\n          type: string\n          example: http://www.fox.com/prisonbreak\n        images:\n          $ref: '#/components/schemas/Images'\n        imdbID:\n          type: string\n          example: tt0455275\n        inProduction:\n          type: boolean\n          example: true\n        languages:\n          type: array\n          items:\n            type: string\n            example: en\n        lastAirDate:\n          type: string\n          example: 2017-05-30\n        networks:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: FOX\n              id:\n                type: number\n                example: 19\n              logo_path:\n                type: string\n                example: /1DSpHrWyOORkL9N2QHX7Adt31mQ.png\n              origin_country:\n                type: string\n                example: US\n        numberOfEpisodes:\n          type: number\n          example: 88\n        originCountry:\n          type: array\n          items:\n            type: string\n            example: US\n        originalLanguage:\n          type: string\n          example: en\n        plot:\n          type: string\n          example: Due to a political conspiracy, an innocent man is sent to death row and his only hope is his brother, who makes it his mission to deliberately get himself sent to the same prison in order to break the both of them out, from the inside out.\n        poster:\n          type: string\n          example: https://m.media-amazon.com/images/M/MV5BMTg3NTkwNzAxOF5BMl5BanBnXkFtZTcwMjM1NjI5MQ@@._V1_SX300.jpg\n        posterRelativePath:\n          type: string\n          example: /5E1BhkCgjLBlqx557Z5yzcN0i88.jpg\n        productionCompanies: \n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: number\n                example: 33423\n              logo_path:\n                type: string\n                example: /6HRO4RN1sz9Ts2hu2FhHRhDtbar.pn\n              name:\n                type: string\n                example: Cartoon Network\n              origin_country:\n                type: string\n                example: US\n        productionCountries:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: number\n                example: 90836\n              logo_path:\n                type: string\n              name:\n                type: string\n                example: Prison Break Productions\n              origin_country:\n                type: string\n        rated:\n          type: string\n          example: TV-14\n        rating:\n          type: number\n          example: 8.3\n        ratings:\n          type: array\n          items:\n            type: object\n            properties:\n              _id:\n                type: string\n                example: 6179105ace4e504b5734b674\n              Source:\n                type: string\n                example: Internet Movie Database\n              Value:\n                type: string\n                example: 8.3/10\n        released:\n          type: string\n          format: date-time\n          example: 2005-08-29T00:00:00.000Z\n        seasons:\n          type: array\n          items:\n            type: object\n            properties:\n              air_date:\n                type: string\n                format: date\n                example: 2005-08-29\n              episode_count:\n                type: number\n                example: 22\n              id:\n                type: number\n                example: 7132\n              name:\n                type: string\n                example: Season 1\n              overview:\n                type: string\n                example: Lincoln Burrows is currently on death row and scheduled to die in a few months for an assassination his younger brother Michael is convinced he did not commit. With no other options and time winding down, Michael takes drastic measures to get himself incarcerated alongside his brother in Fox River State Penitentiary. Once he's inside, Michael, a structural engineer with the blueprints for the prison, begins to execute an elaborate plan to break Lincoln out and prove him innocent.\n              poster_path:\n                type: string\n                example: /jnMW2qcOjgwsjHx6QkOIeXShsLi.jpg\n              season_number:\n                type: number\n                example: 1\n        seriesType:\n          type: string\n          example: Scripted\n        spokenLanguages:\n          type: array\n          items:\n            type: object\n            properties:\n              english_name:\n                type: string\n                example: English\n              iso_639_1:\n                type: string\n                example: en\n              name:\n                type: string\n                example: English\n        startYear:\n          type: string\n          example: 2005\n        status: \n          type: string\n          example: Ended\n        tagline:\n          type: string\n          example: Break in. Break out. Save your brother's life.\n        title:\n          type: string\n          example: Prison Break\n        tmdbID:\n          type: string\n          example: 2288\n          description: Series id on https://www.themoviedb.org/\n        totalSeasons:\n          type: number\n          example: 5\n        type:\n          type: string\n          example: series\n        votes:\n          type: string\n          example: 500,009\n        year:\n          type: string\n          example: 2005\n        createdAt:\n          type: string\n          format: date-time\n          example: 2021-10-27T08:39:54.757Z\n        updatedAt:\n          type: string\n          format: date-time\n          example: 2021-10-27T08:39:54.757Z\n\n    Images:\n      type: array\n      items:\n        type: object\n        properties:\n          backdrops:\n            type: array\n            items:\n              type: object\n              properties:\n                aspect_ratio:\n                  type: number\n                  example: 1.777\n                height:\n                  type: number\n                  example: 1294\n                iso_639_1:\n                  type: string\n                  example: en\n                file_path:\n                  type: string\n                  example: /92OPBZpLc82y8CzOtrQ8P9RDvIN.jpg\n                vote_average:\n                  type: number\n                  example: 5.322,\n                vote_count:\n                  type: number\n                  example: 5\n                width:\n                  type: number\n                  example: 2300\n          logos:\n            type: array\n            items:\n              type: object\n              properties:\n                aspect_ratio:\n                  type: number\n                  example: 1.777\n                height:\n                  type: number\n                  example: 1294\n                iso_639_1:\n                  type: string\n                  example: en\n                file_path:\n                  type: string\n                  example: /92OPBZpLc82y8CzOtrQ8P9RDvIN.jpg\n                vote_average:\n                  type: number\n                  example: 5.322,\n                vote_count:\n                  type: number\n                  example: 5\n                width:\n                  type: number\n                  example: 2300\n          posters:\n            type: array\n            items:\n              type: object\n              properties:\n                aspect_ratio:\n                  type: number\n                  example: 0.667\n                height:\n                  type: number\n                  example: 3000\n                iso_639_1:\n                  type: string\n                  example: en\n                file_path:\n                  type: string\n                  example: /a4H0UR7aUkGZlT6Q9r9grBrjJWR.jpg\n                vote_average:\n                  type: number\n                  example: 5.384\n                vote_count:\n                  type: number\n                  example: 2\n                width:\n                  type: number\n                  example: 2000\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n\n    DependencyError:\n      type: object\n      properties:\n        error:\n          type: string\n          example: Opensubtitles API is offline\n\n    MetadataNotFoundError:\n      type: object\n      properties:\n        error:\n          type: string\n          example: Metadata not found.\n\n    RequestValidationError:\n      type: object\n      properties:\n        error:\n          type: string\n          example: title, osdbHash or imdbId is a required parameter\n",
			"canonicalURL": "/github.com/UniversalMediaServer/api@ac4c3d14967233f1b6088ec6142b3adc475c222e/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/UniversalMediaServer/api/blob/ac4c3d14967233f1b6088ec6142b3adc475c222e/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}