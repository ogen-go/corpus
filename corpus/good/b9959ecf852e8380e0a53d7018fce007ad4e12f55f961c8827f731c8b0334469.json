{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/elixir-oasis/oasis"
		},
		"file": {
			"name": "pet-openapi.yaml",
			"size": 0,
			"path": "priv/example/pet-openapi.yaml",
			"byteSize": 1418,
			"content": "openapi: 3.1.0\ninfo:\n  title: Webhook Example\n  version: 1.0.0\npaths:\n  # OpenAPI documents all need a paths element\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Pets\"\n\nwebhooks:\n  # Each webhook needs a name\n  newPet:\n    # This is a Path Item Object, the only difference is that the request is initiated by the API provider\n    post:\n      requestBody:\n        description: Information about a new pet in the system\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"",
			"canonicalURL": "/github.com/elixir-oasis/oasis@370c861c7508b4c626dab955662b4242c4f1bbb7/-/blob/priv/example/pet-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/elixir-oasis/oasis/blob/370c861c7508b4c626dab955662b4242c4f1bbb7/priv/example/pet-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}