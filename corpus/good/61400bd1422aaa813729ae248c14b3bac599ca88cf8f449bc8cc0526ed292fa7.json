{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/text2data/openapi.yml",
			"byteSize": 13633,
			"content": "openapi: 3.0.1\ninfo:\n  title: Text Analytics \u0026 Sentiment Analysis API | api.text2data.com\n  description: \u003e\n    This is a generated connector for [Text Analytics \u0026 Sentiment Analysis API v3.4](http://api.text2data.com/swagger/ui/index#/) OpenAPI specification.\n    \n    The current api version is \u003cb\u003ev3.4\u003c/b\u003e\u003c/p\u003e\u003cbr\u003e\u003cbr\u003e\u003cp\u003eThe api methods\n    listed below can be called directly from this page to test the output. You might\n    set the api_key to pre-authenticate all requests on this page (this will work\n    if your secret is blank).\u003c/p\u003e\u003cbr\u003e\u003cbr\u003e API endpoint URL: http://{apiName}.text2data.com/v3/\n    {method}\u003cbr\u003e\u003cbr\u003eThe api can be consumed directly or using our SDK. Our Excel Add-In\n    and Google Sheets Add-on are also using this api to process the data.'\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n    \n    Create an [Interzoid Account](https://www.interzoid.com/register) \n    and obtain tokens by log into [Interzoid Account](https://www.interzoid.com/account).\n  x-ballerina-display:\n    label: Text2data\n    iconPath: \"icon.png\"\n  contact:\n    name: text2data.com\n    url: https://text2data.com/Integration\n  license:\n    name: See license\n    url: https://text2data.com/License\n  version: v3.4\n  x-apisguru-categories:\n  - text\n  x-logo:\n    url: https://twitter.com/Text2Data/profile_image?size=original\n  x-origin:\n  - format: swagger\n    url: http://api.text2data.org/swagger/docs/v3.4\n    version: \"2.0\"\n  x-providerName: text2data.org\nservers:\n- url: http://api.text2data.org/\npaths:\n  /v3/Analyze:\n    get:\n      tags:\n      - Analyze\n      summary: Test api response without api key\n      operationId: Analyze_Get\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n    post:\n      tags:\n      - Analyze\n      summary: Sentiment analysis service\n      description: \"Sample request:\\r\\n            \\r\\n    POST /Analyze\\r\\n    {\\r\\\n        \\n       \\\"DocumentText\\\": \\\"Excellent location, opposite a very large mall\\\n        \\ with wide variety of shops, restaurants and more.\\\",\\r\\n       \\\"PrivateKey\\\"\\\n        : \\\"your_api_key\\\",\\r\\n       \\\"Secret\\\": \\\"\\\"\\r\\n    }\"\n      operationId: Analyze_Post\n      requestBody:\n        description: Document payload in form of text, json or xml.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Document'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/Document'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n      x-codegen-request-body-name: requestDoc\n  /v3/Categorize:\n    get:\n      tags:\n      - Categorize\n      summary: Test api response without api key\n      operationId: Categorize_Get\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n    post:\n      tags:\n      - Categorize\n      summary: Document categorization service\n      description: \"Sample request:\\r\\n            \\r\\n    POST /Categorize\\r\\n  \\\n        \\  {\\r\\n       \\\"DocumentText\\\": \\\"Excellent location, opposite a very large\\\n        \\ mall with wide variety of shops, restaurants and more.\\\",\\r\\n       \\\"PrivateKey\\\"\\\n        : \\\"your_api_key\\\",\\r\\n       \\\"UserCategoryModelName\\\": \\\"your_model_name\\\"\\\n        ,\\r\\n       \\\"Secret\\\": \\\"\\\"\\r\\n    }\"\n      operationId: Categorize_Post\n      requestBody:\n        description: Document payload in form of text, json or xml.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Document'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/Document'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n      x-codegen-request-body-name: requestDoc\n  /v3/Extract:\n    get:\n      tags:\n      - Extract\n      summary: Test api response without api key\n      operationId: Extract_Get\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n    post:\n      tags:\n      - Extract\n      summary: Document extraction service\n      description: \"Sample request:\\r\\n            \\r\\n    POST /Extract\\r\\n    {\\r\\\n        \\n       \\\"DocumentText\\\": \\\"Excellent location, opposite a very large mall\\\n        \\ with wide variety of shops, restaurants and more.\\\",\\r\\n       \\\"PrivateKey\\\"\\\n        : \\\"your_api_key\\\",\\r\\n       \\\"UserCategoryModelName\\\": \\\"your_model_name\\\"\\\n        ,\\r\\n       \\\"Secret\\\": \\\"\\\"\\r\\n    }\"\n      operationId: Extract_Post\n      requestBody:\n        description: Document payload in form of text, json or xml.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Document'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/Document'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DocumentResult'\n      x-codegen-request-body-name: requestDoc\ncomponents:\n  schemas:\n    ApiConfig:\n      type: object\n      properties:\n        APIPrivateKey:\n          type: string\n        APISecret:\n          type: string\n        BlacklistedWords:\n          type: array\n          items:\n            type: string\n        ErrorMessage:\n          type: string\n        IsRequestStatusOK:\n          type: boolean\n    Category:\n      type: object\n      properties:\n        CategoryName:\n          type: string\n        Score:\n          type: number\n          format: double\n    Document:\n      required:\n      - DocumentText\n      - PrivateKey\n      type: object\n      properties:\n        DocumentLanguage:\n          type: string\n        DocumentText:\n          type: string\n        IsTwitterContent:\n          type: boolean\n        PrivateKey:\n          type: string\n        RequestIdentifier:\n          type: string\n        Secret:\n          type: string\n        SerializeFormat:\n          type: integer\n          format: int32\n        UserCategoryModelName:\n          type: string\n    DocumentResult:\n      type: object\n      properties:\n        AutoCategories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n        Citations:\n          type: array\n          items:\n            $ref: '#/components/schemas/SentencePart'\n        CloudTagHTML:\n          type: string\n        CoreSentences:\n          type: array\n          items:\n            $ref: '#/components/schemas/Sentence'\n        DetectedLanguage:\n          type: string\n        DocSentimentPolarity:\n          type: string\n        DocSentimentResultString:\n          type: string\n        DocSentimentValue:\n          type: number\n          format: double\n        Entities:\n          type: array\n          items:\n            $ref: '#/components/schemas/SentencePart'\n        ErrorMessage:\n          type: string\n        Keywords:\n          type: array\n          items:\n            $ref: '#/components/schemas/SentencePart'\n        Magnitude:\n          type: number\n          format: double\n        PartsOfSpeech:\n          type: array\n          items:\n            $ref: '#/components/schemas/PartOfSpeech'\n        ResultTextHtml:\n          type: string\n        SlangWords:\n          type: array\n          items:\n            $ref: '#/components/schemas/SlangWord'\n        Status:\n          type: integer\n          format: int32\n        StorageInfo:\n          $ref: '#/components/schemas/StorageInfo'\n        Subjectivity:\n          type: string\n        SwearWords:\n          type: array\n          items:\n            $ref: '#/components/schemas/SlangWord'\n        Themes:\n          type: array\n          items:\n            $ref: '#/components/schemas/SentencePart'\n        Timestamp:\n          type: integer\n          format: int64\n        TransactionCurrentDay:\n          type: integer\n          format: int32\n        TransactionDailyLimit:\n          type: integer\n          format: int32\n        TransactionTotalCreditsLeft:\n          type: integer\n          format: int32\n        TransactionUseByDate:\n          type: string\n          format: date-time\n        UserCategories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n    PartOfSpeech:\n      type: object\n      properties:\n        Action:\n          type: string\n        Object:\n          type: string\n        ObjectSentimentPolarity:\n          type: string\n        ObjectSentimentResultString:\n          type: string\n        ObjectSentimentValue:\n          type: number\n          format: double\n        Subject:\n          type: string\n        Text:\n          type: string\n    Sentence:\n      type: object\n      properties:\n        Magnitude:\n          type: number\n          format: double\n        SentenceNumber:\n          type: integer\n          format: int32\n        SentimentPolarity:\n          type: string\n        SentimentResultString:\n          type: string\n        SentimentValue:\n          type: number\n          format: double\n        Text:\n          type: string\n    SentencePart:\n      type: object\n      properties:\n        KeywordType:\n          type: string\n        Magnitude:\n          type: number\n          format: double\n        Mentions:\n          type: integer\n          format: int32\n        SentencePartType:\n          type: string\n        SentenceText:\n          type: string\n        SentimentPolarity:\n          type: string\n        SentimentResult:\n          type: string\n        SentimentValue:\n          type: number\n          format: double\n        Text:\n          type: string\n    SlangWord:\n      type: object\n      properties:\n        SlangWordText:\n          type: string\n        SlangWordTranslation:\n          type: string\n    StorageInfo:\n      type: object\n      properties:\n        CreateDate:\n          type: string\n          format: date-time\n        DocumentText:\n          type: string\n        IP:\n          type: string\n        IsExcel:\n          type: boolean\n        IsGSExcel:\n          type: boolean\n        IsTwitterMode:\n          type: boolean\n        PrivateKey:\n          type: string\n        RequestIdentifier:\n          type: string\n        UserCategoryModelName:\n          type: string\n  securitySchemes:\n    PrivateKey:\n      type: apiKey\n      description: \u003e\n        All requests on this API needs to include an API key. \n\n        The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `PrivateKey`.\n      name: PrivateKey\n      in: query",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/text2data/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/text2data/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}