{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kevindew/openapi3_parser"
		},
		"file": {
			"name": "uber.yaml",
			"size": 0,
			"path": "spec/support/examples/uber.yaml",
			"byteSize": 10307,
			"content": "# this is an example of the Uber API\n# as a demonstration of an API spec in YAML\nopenapi: \"3.0.0\"\ninfo:\n  title: Uber API\n  description: Move your app forward with the Uber API\n  version: \"1.0.0\"\nservers:\n  - url: https://api.uber.com/v1\npaths:\n  /products:\n    get:\n      summary: Product Types\n      description: The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.\n      parameters:\n        - name: latitude\n          in: query\n          description: Latitude component of location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: longitude\n          in: query\n          description: Longitude component of location.\n          required: true\n          schema:\n            type: number\n            format: double\n      security:\n        - apikey: []\n      tags:\n        - Products\n      responses:\n        '200':\n          description: An array of products\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductList\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /estimates/price:\n    get:\n      summary: Price Estimates\n      description: The Price Estimates endpoint returns an estimated price range for each product offered at a given location. The price estimate is provided as a formatted string with the full price range and the localized currency symbol.\u003cbr\u003e\u003cbr\u003eThe response also includes low and high estimates, and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for situations requiring currency conversion. When surge is active for a particular product, its surge_multiplier will be greater than 1, but the price estimate already factors in this multiplier.\n      parameters:\n        - name: start_latitude\n          in: query\n          description: Latitude component of start location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: start_longitude\n          in: query\n          description: Longitude component of start location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: end_latitude\n          in: query\n          description: Latitude component of end location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: end_longitude\n          in: query\n          description: Longitude component of end location.\n          required: true\n          schema:\n            type: number\n            format: double\n      tags:\n        - Estimates\n      responses:\n        '200':\n          description: An array of price estimates by product\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PriceEstimate\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /estimates/time:\n    get:\n      summary: Time Estimates\n      description: The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.\n      parameters:\n        - name: start_latitude\n          in: query\n          description: Latitude component of start location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: start_longitude\n          in: query\n          description: Longitude component of start location.\n          required: true\n          schema:\n            type: number\n            format: double\n        - name: customer_uuid\n          in: query\n          schema:\n            type: string\n            format: uuid\n          description: Unique customer identifier to be used for experience customization.\n        - name: product_id\n          in: query\n          schema:\n            type: string\n          description: Unique identifier representing a specific product for a given latitude \u0026 longitude.\n      tags:\n        - Estimates\n      responses:\n        '200':\n          description: An array of products\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Product\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /me:\n    get:\n      summary: User Profile\n      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.\n      tags:\n        - User\n      responses:\n        '200':\n          description: Profile information for a user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Profile\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /history:\n    get:\n      summary: User Activity\n      description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.\u003cbr\u003e\u003cbr\u003eThe history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.\n      parameters:\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n          description: Offset the list of returned results by this amount. Default is zero.\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n          description: Number of items to retrieve. Default is 5, maximum is 100.\n      tags:\n        - User\n      responses:\n        '200':\n          description: History information for the given user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Activities\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    apikey:\n      type: apiKey\n      name: server_token\n      in: query\n  schemas:\n    Product:\n      properties:\n        product_id:\n          type: string\n          description: Unique identifier representing a specific product for a given latitude \u0026 longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.\n        description:\n          type: string\n          description: Description of product.\n        display_name:\n          type: string\n          description: Display name of product.\n        capacity:\n          type: integer\n          description: Capacity of product. For example, 4 people.\n        image:\n          type: string\n          description: Image URL representing the product.\n    ProductList:\n      properties:\n        products:\n          description: Contains the list of products\n          type: array\n          items:\n            $ref: \"#/components/schemas/Product\"\n    PriceEstimate:\n      properties:\n        product_id:\n          type: string\n          description: Unique identifier representing a specific product for a given latitude \u0026 longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles\n        currency_code:\n          type: string\n          description: \"[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.\"\n        display_name:\n          type: string\n          description: Display name of product.\n        estimate:\n          type: string\n          description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI.\n        low_estimate:\n          type: number\n          description: Lower bound of the estimated price.\n        high_estimate:\n          type: number\n          description: Upper bound of the estimated price.\n        surge_multiplier:\n          type: number\n          description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.\n    Profile:\n      properties:\n        first_name:\n          type: string\n          description: First name of the Uber user.\n        last_name:\n          type: string\n          description: Last name of the Uber user.\n        email:\n          type: string\n          description: Email address of the Uber user\n        picture:\n          type: string\n          description: Image URL of the Uber user.\n        promo_code:\n          type: string\n          description: Promo code of the Uber user.\n    Activity:\n      properties:\n        uuid:\n          type: string\n          description: Unique identifier for the activity\n    Activities:\n      properties:\n        offset:\n          type: integer\n          format: int32\n          description: Position in pagination.\n        limit:\n          type: integer\n          format: int32\n          description: Number of items to retrieve (100 max).\n        count:\n          type: integer\n          format: int32\n          description: Total number of items available.\n        history:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Activity\"\n    Error:\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n        fields:\n          type: string\n\n",
			"canonicalURL": "/github.com/kevindew/openapi3_parser@add0a63485b5d44da985ba0ca354c9600904fe31/-/blob/spec/support/examples/uber.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kevindew/openapi3_parser/blob/add0a63485b5d44da985ba0ca354c9600904fe31/spec/support/examples/uber.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}