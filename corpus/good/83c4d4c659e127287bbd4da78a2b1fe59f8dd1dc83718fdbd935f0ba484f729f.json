{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bellhop-rs/bellhop"
		},
		"file": {
			"name": "bellhop.yaml",
			"size": 0,
			"path": "bellhop/openapi/bellhop.yaml",
			"byteSize": 13750,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 0.0.0\n  title: Bellhop\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\npaths:\n  /types:\n    get:\n      operationId: listAssetTypes\n      summary: List all asset types\n      responses:\n        '200':\n          description: A paged array of asset types\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/AssetTypes\"\n    post:\n      operationId: createAssetType\n      summary: Create a new asset type\n      requestBody:\n        description: Asset type to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAssetType\"\n      responses:\n        '201':\n          description: created asset type\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetType\"\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n  /types/{asset_type_id}:\n    get:\n      operationId: showAssetType\n      summary: Show details of an asset type\n      parameters:\n        - $ref: \"#/components/parameters/asset_type_id\"\n      responses:\n        '200':\n          description: Details of an asset type\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetType\"\n    delete:\n      operationId: deleteAssetType\n      summary: Delete an asset type and all assets and tags associated with it\n      parameters:\n        - $ref: \"#/components/parameters/asset_type_id\"\n      responses:\n        '404':\n          description: Asset type not found\n        '204':\n          description: Asset type was deleted\n  '/types/{asset_type_id}/tag-types':\n    get:\n      operationId: listTagTypes\n      summary: List tag types that belong to an asset type\n      parameters:\n        - $ref: \"#/components/parameters/asset_type_id\"\n      responses:\n        '200':\n          description: A paged array of tag types\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/TagTypes\"\n    post:\n      operationId: createTagType\n      summary: Create a new tag type\n      parameters:\n        - $ref: \"#/components/parameters/asset_type_id\"\n      requestBody:\n        description: Tag type to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTagType\"\n      responses:\n        '201':\n          description: created tag type\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagType\"\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n  /types/{asset_type_id}/tag-types/{tag_type_id}:\n    get:\n      operationId: showTagType\n      summary: Show details of a tag type\n      parameters:\n        - $ref: \"#/components/parameters/asset_type_id\"\n        - $ref: \"#/components/parameters/tag_type_id\"\n      responses:\n        '200':\n          description: Details of a tag type\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagType\"\n    delete:\n      operationId: deleteTagType\n      summary: Delete a tag type and all tags associated with it\n      parameters:\n        - $ref: \"#/components/parameters/asset_type_id\"\n        - $ref: \"#/components/parameters/tag_type_id\"\n      responses:\n        '404':\n          description: Tag type not found\n        '204':\n          description: Tag type was deleted\n  /types/{asset_type_id}/assets:\n    get:\n      operationId: listSubAssets\n      summary: List assets that belong to an asset type\n      parameters:\n        - $ref: \"#/components/parameters/asset_type_id\"\n      responses:\n        '200':\n          description: A paged array of assets\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Assets\"\n  /assets:\n    get:\n      operationId: listAssets\n      summary: List all assets\n      responses:\n        '200':\n          description: A paged array of assets\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Assets\"\n    post:\n      operationId: createAsset\n      summary: Create a new asset\n      requestBody:\n        description: Asset to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAsset\"\n      responses:\n        '201':\n          description: created asset\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Asset\"\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n  /assets/{asset_id}:\n    get:\n      operationId: showAsset\n      summary: Show details of an asset\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n      responses:\n        '200':\n          description: Details of an asset\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Asset\"\n    delete:\n      operationId: deleteAsset\n      summary: Delete an asset and all tags associated with it\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n      responses:\n        '404':\n          description: Asset not found\n        '204':\n          description: Asset was deleted\n  /assets/{asset_id}/tags:\n    get:\n      operationId: listTags\n      summary: List tags that belong to an asset\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n      responses:\n        '200':\n          description: A paged array of tags\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Tags\"\n    post:\n      operationId: createTag\n      summary: Create a new tag\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n      requestBody:\n        description: Tag to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTag\"\n      responses:\n        '201':\n          description: created tag\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n  /assets/{asset_id}/tags/{tag_type_id}:\n    get:\n      operationId: showTag\n      summary: Show details of a tag\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n        - $ref: \"#/components/parameters/tag_type_id\"\n      responses:\n        '200':\n          description: Details of a tag\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n    delete:\n      operationId: deleteTag\n      summary: Delete a tag\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n        - $ref: \"#/components/parameters/tag_type_id\"\n      responses:\n        '404':\n          description: Tag not found\n        '204':\n          description: Tag was deleted\n  /assets/{asset_id}/lease:\n    get:\n      operationId: showLease\n      summary: Show details of an asset's lease\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n      responses:\n        '200':\n          description: Details of an asset's lease\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Lease\"\n        '404':\n          description: Asset not currently leased, or asset not found\n    put:\n      operationId: createLease\n      summary: Create a new lease for this asset\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n      responses:\n        '404':\n          description: Asset not found\n        '409':\n          description: A lease already exists for that asset\n        '201':\n          description: created lease\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Lease\"\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n      requestBody:\n        description: Lease to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateLease\"\n    delete:\n      operationId: deleteLease\n      summary: Release a lease ahead of its end time\n      parameters:\n        - $ref: \"#/components/parameters/asset_id\"\n      responses:\n        '404':\n          description: Asset or lease not found\n        '204':\n          description: Lease was deleted\nsecurity:\n  - XBellhopEmail: []\ncomponents:\n  securitySchemes:\n    XBellhopEmail:\n      type: apiKey\n      in: header\n      name: X-Bellhop-Email\n  parameters:\n    tag_type_id:\n      name: tag_type_id\n      in: path\n      description: Identifier of the tag type\n      required: true\n      schema:\n        type: integer\n        format: int32\n    asset_id:\n      name: asset_id\n      in: path\n      description: Identifier of the asset\n      required: true\n      schema:\n        type: integer\n        format: int32\n    asset_type_id:\n      name: asset_type_id\n      in: path\n      description: Identifier of the asset type\n      required: true\n      schema:\n        type: integer\n        format: int32\n  headers:\n    Location:\n      description: The URL of the newly created resource\n      schema:\n        type: string\n  schemas:\n    Tags:\n      required:\n        - items\n        - pages\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        pages:\n          $ref: \"#/components/schemas/Pages\"\n    CreateTag:\n      required:\n        - tag_type_id\n        - value\n      properties:\n        value:\n          type: string\n        tag_type_id:\n          type: integer\n          format: int32\n    CreateLease:\n      required:\n        - end_time\n      properties:\n        end_time:\n          type: string\n          format: date-time\n          nullable: true\n    Lease:\n      required:\n        - id\n        - user_id\n        - last_notified\n        - end_time\n      properties:\n        id:\n          type: integer\n          format: int32\n        user_id:\n          type: integer\n          format: int32\n        last_notified:\n          type: string\n          format: date-time\n          nullable: true\n        end_time:\n          type: string\n          format: date-time\n          nullable: true\n        start_time:\n          type: string\n          format: date-time\n    Tag:\n      required:\n        - tag_type_id\n        - asset_id\n        - value\n      properties:\n        asset_id:\n          type: integer\n          format: int32\n        value:\n          type: string\n        tag_type_id:\n          type: integer\n          format: int32\n    CreateTagType:\n      required:\n        - name\n        - detail_only\n        - rightness\n      properties:\n        name:\n          type: string\n        detail_only:\n          type: boolean\n        rightness:\n          type: integer\n          format: int32\n    CreateAsset:\n      required:\n        - type_id\n        - name\n      properties:\n        type_id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        lease_id:\n          nullable: true\n          type: integer\n          format: int32\n    Asset:\n      required:\n        - id\n        - type_id\n        - lease_id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int32\n        type_id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        lease_id:\n          nullable: true\n          type: integer\n          format: int32\n    Assets:\n      required:\n        - items\n        - pages\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Asset\"\n        pages:\n          $ref: \"#/components/schemas/Pages\"\n    TagType:\n      required:\n        - id\n        - asset_type_id\n        - name\n        - detail_only\n        - rightness\n      properties:\n        id:\n          type: integer\n          format: int32\n        asset_type_id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        detail_only:\n          type: boolean\n        rightness:\n          type: integer\n          format: int32\n    TagTypes:\n      required:\n        - items\n        - pages\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TagType\"\n        pages:\n          $ref: \"#/components/schemas/Pages\"\n    Pages:\n      required:\n        - next\n        - prev\n      properties:\n        next:\n          type: string\n          nullable: true\n        prev:\n          type: string\n          nullable: true\n    CreateAssetType:\n      required:\n        - name\n        - plural_name\n      properties:\n        name:\n          type: string\n        plural_name:\n          type: string\n    AssetType:\n      required:\n        - id\n        - name\n        - plural_name\n      properties:\n        id:\n          type: integer\n          format: int32\n        plural_name:\n          type: string\n        name:\n          type: string\n    AssetTypes:\n      required:\n        - items\n        - pages\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AssetType\"\n        pages:\n          $ref: \"#/components/schemas/Pages\"\n",
			"canonicalURL": "/github.com/bellhop-rs/bellhop@e9222a20261a80ef399a77ae8128141c84eacbde/-/blob/bellhop/openapi/bellhop.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bellhop-rs/bellhop/blob/e9222a20261a80ef399a77ae8128141c84eacbde/bellhop/openapi/bellhop.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}