{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/quickbooks.online/openapi.yaml",
			"byteSize": 179167,
			"content": "openapi: 3.0.1\ninfo:\n  title: QuickBooks Online API\n  version: v3\n  description: \u003e\n    This is a generated connector for [QuickBooks Online API\n    v3](https://developer.intuit.com/app/developer/qbo/docs/get-started) OpenAPI\n    specification.  \n    \n    The QuickBooks Online Accounting API utilizes the REST\n    architecture. It lets you seamlessly integrate your app with QuickBooks\n    Online and the Intuit Financial Ecosystem \n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials.\n\n    Create a [QuickBooks account](https://quickbooks.intuit.com/global/) and\n    obtain tokens by following [this\n    guide](https://developer.intuit.com/app/developer/qbo/docs/get-started/start-developing-your-app).\n  x-ballerina-display:\n    label: QuickBooks Online\n    iconPath: icon.png\nservers:\n  - url: https://quickbooks.api.intuit.com\ntags: []\npaths:\n  /v3/company/{realm-id}/account:\n    post:\n      tags:\n        - Account\n      description: \u003e-\n        Create or Update an Account.\n        The ID of the object to update is specified in the request body.​\n      operationId: Create or Update Account\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      requestBody:\n        description: Account creation data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountCreateObject'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n  /v3/company/{realm-id}/account/{account-id}:\n    get:\n      tags:\n        - Account\n      description: \u003e-\n        Retrieves the details of an Account object that has been previously\n        created.\n      operationId: Read Account\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: path\n          name: account-id\n          required: true\n          schema:\n            type: string\n          description: Account ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountResponse'\n  /v3/company/{realm-id}/bill:\n    post:\n      tags:\n        - Bill\n      description: \u003e-\n        Create or Update a Bill.\n        The ID of the object to update is specified in the request body.​\n      operationId: Create or Update Bill\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: query\n          name: operation\n          required: false\n          schema:\n            type: string\n          description: Opearation type\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      requestBody:\n        description: Bill creation data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BillCreateObject'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BillResponse'\n  /v3/company/{realm-id}/bill/{bill-id}:\n    get:\n      tags:\n        - Bill\n      description: Retrieves the details of a bill that has been previously created.\n      operationId: Read bill\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: path\n          name: bill-id\n          required: true\n          schema:\n            type: string\n          description: Bill ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BillResponse'\n  /v3/company/{realm-id}/customer:\n    post:\n      tags:\n        - Customer\n      description: \u003e-\n        Create or Update a Customer.\n        The ID of the object to update is specified in the request body.​\n      operationId: Create or Update Customer\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      requestBody:\n        description: Customer creation data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateObject'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerResponse'\n  /v3/company/{realm-id}/customer/{customer-id}:\n    get:\n      tags:\n        - Customer\n      description: \u003e-\n        Retrieves the details of a Customer object that has been previously\n        created.\n      operationId: Read Customer\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: path\n          name: customer-id\n          required: true\n          schema:\n            type: string\n          description: Customer ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerResponse'\n  /v3/company/{realm-id}/payment:\n    post:\n      tags:\n        - Payment\n      description: \u003e-\n        Create or Update a Payment. \n        The ID of the object to update is specifiedin the request body.​\n      operationId: Create or Update Payment\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: query\n          name: operation\n          required: false\n          schema:\n            type: string\n          description: Opearation type\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      requestBody:\n        description: Payment creation data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentCreateObject'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentResponse'\n  /v3/company/{realm-id}/payment/{payment-id}:\n    get:\n      tags:\n        - Payment\n      description: \u003e-\n        Retrieves the details of a Payment object that has been previously\n        created.\n      operationId: Read Payment\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: path\n          name: payment-id\n          required: true\n          schema:\n            type: string\n          description: Payment ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentResponse'\n  /v3/company/{realm-id}/estimate:\n    post:\n      tags:\n        - Estimate\n      description: \u003e-\n        Create or Update an Estimate \n        The ID of the object to update is specifiedin the request body.​\n      operationId: Create or Update Estimate\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: query\n          name: operation\n          required: false\n          schema:\n            type: string\n          description: Opearation type\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      requestBody:\n        description: Estimate creation data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EstimateCreateObject'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EstimateResponse'\n  /v3/company/{realm-id}/estimate/{estimate-id}:\n    get:\n      tags:\n        - Estimate\n      description: \u003e-\n        Retrieves the details of an estimate that has been previously created.\n      operationId: Read Estimate\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: path\n          name: estimate-id\n          required: true\n          schema:\n            type: string\n          description: Estimate ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EstimateResponse'\n  /v3/company/{realm-id}/invoice:\n    post:\n      tags:\n        - Invoice\n      description: \u003e-\n        Create or Update an Invoice \n        The ID of the object to update is specifiedin the request body.​\n      operationId: Create or Update Invoice\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: query\n          name: operation\n          required: false\n          schema:\n            type: string\n          description: Opearation type\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      requestBody:\n        description: Invoice creation data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InvoiceCreateObject'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvoiceResponse'\n  /v3/company/{realm-id}/invoice/{invoice-id}:\n    get:\n      tags:\n        - Payment\n      description: \u003e-\n        Retrieves the details of an invoice that has been previously created.\n      operationId: Read Invoice\n      parameters:\n        - in: path\n          name: realm-id\n          required: true\n          schema:\n            type: string\n          description: Realm ID.\n        - in: path\n          name: invoice-id\n          required: true\n          schema:\n            type: string\n          description: Invoice ID.\n        - in: header\n          name: accept\n          schema:\n            type: string\n            default: application/json\n          description: Accept header\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvoiceResponse'   \n  /v3/company/{realm-id}/vendor:\n    post:\n      tags:\n        - \"Vendor\"\n      description: Create or Update a vendor\n        The ID of the object to update is specified in the request body.​\n        Either the DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes are required during create.\n      operationId: Create or Update vendor\n      parameters:\n          - in: path\n            name: realm-id\n            required: true\n            schema:\n              type: string\n            description: Realm ID.\n          - in: header\n            name: accept\n            schema:\n              type: string\n              default: application/json\n            description: Accept header\n      requestBody:\n        description: Vendor creation data\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VendorCreateObject\"        \n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VendorResponse'  \n  /v3/company/{realm-id}/vendor/{vendor-id}:\n    get:\n      tags:\n        - \"Vendor\"\n      description: Retrieves the details of a vendor object that has been previously created.\n      operationId: Read Vendor\n      parameters:\n          - in: path\n            name: realm-id\n            required: true\n            schema:\n              type: string\n            description: Realm ID.\n          - in: path\n            name: vendor-id\n            required: true\n            schema:\n              type: string\n            description: Vendor ID.      \n          - in: header\n            name: accept\n            schema:\n              type: string\n              default: application/json\n            description: Accept header    \n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VendorResponse'          \n  /v3/company/{realm-id}/query:\n    get:\n      tags:\n        - \"Other\"\n      description: Query an entity\n      operationId: Query Entity\n      parameters:\n          - in: path\n            name: realm-id\n            required: true\n            schema:\n              type: string\n            description: Realm ID.  \n          - in: query\n            name: query\n            required: true\n            schema:\n              type: string\n            description: Query statement.     \n          - in: header\n            name: accept\n            schema:\n              type: string\n              default: application/json\n            description: Accept header \n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                {}\ncomponents:\n  schemas:\n    VendorResponse:\n      type: object\n      properties: \n        Vendor:\n          $ref: '#/components/schemas/Vendor'\n    VendorCreateObject:\n      type: object\n      properties: \n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.\n        Title:\n          type: string\n          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes are required during create.\n        GivenName:\n          type: string\n          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        MiddleName:\n          type: string\n          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        Suffix:\n          type: string\n          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        FamilyName:\n          type: string\n          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        PrimaryEmailAddr:\n          description: Primary email address. \n          $ref: '#/components/schemas/EmailAddress'\n        DisplayName:\n          type: string\n          description: The name of the vendor as displayed. Must be unique across all Vendor, Customer, and Employee objects. Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating vendor name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.\n        OtherContactInfo:\n          type: object\n          description: List of ContactInfo entities of any contact info type.\n          # $ref: '#/components/schemas/ContactInfo  \n        APAccountRef:\n          type: object\n          description: Identifies the accounts payable account to be used for this supplier. Each supplier must have his own AP account. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Query the Account name list resource to determine the appropriate Account object for this reference. Use Account.Id and Account.Name from that object for APAccountRef.value and APAccountRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        TermRef:\n          type: object\n          description: Reference to a default Term associated with this Vendor object. Query the Term name list resource to determine the appropriate Term object for this reference. Use Term.Id and Term.Name from that object for TermRef.value and TermRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        Source:\n          type: string\n          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include- QBCommerce\n        GSTIN:\n          type: string\n          description: GSTIN is an identification number assigned to every GST registered business.\n        T4AEligible:\n          type: string\n          description: True if vendor is T4A eligible. Valid for CA locale\n        Fax:\n          type: object\n          description: Fax number\n          $ref: '#/components/schemas/TelephoneNumber'\n        BusinessNumber:\n          type: string\n          description: Also called, PAN (in India) is a code that acts as an identification for individuals, families and corporates, especially for those who pay taxes on their income.\n        HasTPAR:\n          type: boolean\n          description: Indicate if the vendor has TPAR enabled. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.\n        TaxReportingBasis:\n          type: string\n          description: The method in which the supplier tracks their income. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Valid values include- Cash and Accrual.\n        Mobile:\n          type: object\n          description: Mobile phone number\n          $ref: '#/components/schemas/TelephoneNumber'\n        PrimaryPhone:\n          type: object\n          description: Primary phone number\n          $ref: '#/components/schemas/TelephoneNumber'\n        Active:\n          type: boolean\n          description: If true, this object is currently enabled for use by QuickBooks.\n        AlternatePhone:\n          type: object\n          description: Alternate phone number\n          $ref: '#/components/schemas/TelephoneNumber'\n        MetaData:\n          type: object\n          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        Vendor1099:\n          type: boolean\n          description: This vendor is an independent contractor; someone who is given a 1099-MISC form at the end of the year. A 1099 vendor is paid with regular checks, and taxes are not withheld on their behalf.\n        BillRate:\n          type: number\n          description: BillRate can be set to specify this vendor's hourly billing rate.\n        WebAddr:\n          type: object\n          description: Website address.\n          $ref: '#/components/schemas/WebSiteAddress'\n        T5018Eligible:\n          type: boolean\n          description: True if vendor is T5018 eligible. Valid for CA locale\n        CompanyName:\n          type: string\n          description: The name of the company associated with the person or organization.\n        VendorPaymentBankDetail:\n          type: object\n          description: Vendor Payment Bank Detail.\n          # $ref: '#/components/schemas/VendorPaymentBankDetail'\n        TaxIdentifier:\n          type: string\n          description: The tax ID of the Person or Organization. The value is masked in responses, exposing only last four characters. For example, the ID of 123-45-6789 is returned as XXXXXXX6789.\n        AcctNum:\n          type: string\n          description: Name or number of the account associated with this vendor.\n        GSTRegistrationType:\n          type: string\n          description: For the filing of GSTR, transactions need to be classified depending on the type of vendor from whom the purchase is made. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-\n            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).\n            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.\n            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.\n            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.\n            OVERSEAS Overseas. Customer who has a business which is located out of India.\n            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.\n            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.\n        PrintOnCheckName:\n          type: string\n          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Cannot be removed with sparse update.\n        BillAddr:\n          type: object\n          description: Default billing address\n          $ref: '#/components/schemas/PhysicalAddress'\n    Vendor:\n      type: object\n      properties: \n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.\n        Title:\n          type: string\n          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes are required during create.\n        GivenName:\n          type: string\n          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        MiddleName:\n          type: string\n          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        Suffix:\n          type: string\n          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        FamilyName:\n          type: string\n          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.\n        PrimaryEmailAddr:\n          description: Primary email address. \n          $ref: '#/components/schemas/EmailAddress'\n        DisplayName:\n          type: string\n          description: The name of the vendor as displayed. Must be unique across all Vendor, Customer, and Employee objects. Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating vendor name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.\n        OtherContactInfo:\n          type: object\n          description: List of ContactInfo entities of any contact info type.\n          # $ref: '#/components/schemas/ContactInfo  \n        APAccountRef:\n          type: object\n          description: Identifies the accounts payable account to be used for this supplier. Each supplier must have his own AP account. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Query the Account name list resource to determine the appropriate Account object for this reference. Use Account.Id and Account.Name from that object for APAccountRef.value and APAccountRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        TermRef:\n          type: object\n          description: Reference to a default Term associated with this Vendor object. Query the Term name list resource to determine the appropriate Term object for this reference. Use Term.Id and Term.Name from that object for TermRef.value and TermRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        Source:\n          type: string\n          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include- QBCommerce\n        GSTIN:\n          type: string\n          description: GSTIN is an identification number assigned to every GST registered business.\n        T4AEligible:\n          type: string\n          description: True if vendor is T4A eligible. Valid for CA locale\n        Fax:\n          type: object\n          description: Fax number\n          $ref: '#/components/schemas/TelephoneNumber'\n        BusinessNumber:\n          type: string\n          description: Also called, PAN (in India) is a code that acts as an identification for individuals, families and corporates, especially for those who pay taxes on their income.\n        CurrencyRef:\n          type: object\n          description: Reference to the currency in which all amounts associated with this vendor are expressed. Once set, it cannot be changed. If specified currency is not currently in the company's currency list, it is added. If not specified, currency for this vendor is the home currency of the company, as defined by Preferences.CurrencyPrefs.HomeCurrency. Read-only after object is created.\n          $ref: '#/components/schemas/CurrencyRefType'\n        HasTPAR:\n          type: boolean\n          description: Indicate if the vendor has TPAR enabled. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.\n        TaxReportingBasis:\n          type: string\n          description: The method in which the supplier tracks their income. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Valid values include- Cash and Accrual.\n        Mobile:\n          type: object\n          description: Mobile phone number\n          $ref: '#/components/schemas/TelephoneNumber'\n        PrimaryPhone:\n          type: object\n          description: Primary phone number\n          $ref: '#/components/schemas/TelephoneNumber'\n        Active:\n          type: boolean\n          description: If true, this object is currently enabled for use by QuickBooks.\n        AlternatePhone:\n          type: object\n          description: Alternate phone number\n          $ref: '#/components/schemas/TelephoneNumber'\n        MetaData:\n          type: object\n          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        Vendor1099:\n          type: boolean\n          description: This vendor is an independent contractor; someone who is given a 1099-MISC form at the end of the year. A 1099 vendor is paid with regular checks, and taxes are not withheld on their behalf.\n        BillRate:\n          type: number\n          description: BillRate can be set to specify this vendor's hourly billing rate.\n        WebAddr:\n          type: object\n          description: Website address.\n          $ref: '#/components/schemas/WebSiteAddress'\n        T5018Eligible:\n          type: boolean\n          description: True if vendor is T5018 eligible. Valid for CA locale\n        CompanyName:\n          type: string\n          description: The name of the company associated with the person or organization.\n        VendorPaymentBankDetail:\n          type: object\n          description: Vendor Payment Bank Detail.\n          # $ref: '#/components/schemas/VendorPaymentBankDetail'\n        TaxIdentifier:\n          type: string\n          description: The tax ID of the Person or Organization. The value is masked in responses, exposing only last four characters. For example, the ID of 123-45-6789 is returned as XXXXXXX6789.\n        AcctNum:\n          type: string\n          description: Name or number of the account associated with this vendor.\n        GSTRegistrationType:\n          type: string\n          description: For the filing of GSTR, transactions need to be classified depending on the type of vendor from whom the purchase is made. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-\n            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).\n            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.\n            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.\n            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.\n            OVERSEAS Overseas. Customer who has a business which is located out of India.\n            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.\n            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.\n        PrintOnCheckName:\n          type: string\n          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Cannot be removed with sparse update.\n        BillAddr:\n          type: object\n          description: Default billing address\n          $ref: '#/components/schemas/PhysicalAddress'\n        Balance:\n          type: number\n          description: Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create, read-only otherwise.\n    InvoiceResponse:\n      type: object\n      properties:\n        Invoice:\n          $ref: '#/components/schemas/Invoice'\n    InvoiceCreateObject:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        Line:\n          type: array\n          description: \u003e-\n            Individual line items of a transaction. Valid Line types include\n            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline\n            Subtotal lines), DiscountLine and SubTotalLine (used for the overall\n            transaction)\n          items: {}\n        CustomerRef:\n          type: object\n          description: \u003e-\n            Reference to a customer or job. Query the Customer name list\n            resource to determine the appropriate Customer object for this\n            reference. Use Customer.Id and Customer.DisplayName from that object\n            for CustomerRef.value and CustomerRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        SyncToken:\n          type: string\n          description: \u003e-\n            Version number of the object. It is used to lock an object for use\n            by one app at a time. As soon as an application modifies an object,\n            its SyncToken is incremented. Attempts to modify an object\n            specifying an older SyncToken fails. Only the latest version of the\n            object is maintained by QuickBooks Online.\n        CurrencyRef:\n          type: object\n          description: \u003e-\n            Reference to the currency in which all amounts on the associated\n            transaction are expressed. This must be defined if multicurrency is\n            enabled for the company. Multicurrency is enabled for the company if\n            Preferences.MultiCurrencyEnabled is set to true. Read more about\n            multicurrency support here. Applicable if multicurrency is enabled\n            for the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n        DocNumber:\n          type: string\n          description: \u003e-\n            Reference number for the transaction. If not explicitly provided at\n            create time, this field is populated based on the setting of\n            Preferences:CustomTxnNumber as follows- If\n            Preferences:CustomTxnNumber is true a custom value can be provided.\n            If no value is supplied, the resulting DocNumber is null. If\n            Preferences:CustomTxnNumber is false, resulting DocNumber is system\n            generated by incrementing the last number by 1. If\n            Preferences:CustomTxnNumber is false then do not send a value as it\n            can lead to unwanted duplicates. If a DocNumber value is sent for an\n            Update operation, then it just updates that particular invoice and\n            does not alter the internal system DocNumber. Note- DocNumber is an\n            optional field for all locales except France. For France locale if\n            Preferences:CustomTxnNumber is enabled it will not be automatically\n            generated and is a required field. If a duplicate DocNumber needs to\n            be supplied, add the query parameter name/value pair,\n            include=allowduplicatedocnum to the URI.\n        BillEmail:\n          type: object\n          description: \u003e-\n            Identifies the e-mail address where the invoice is sent. If\n            EmailStatus=NeedToSend, BillEmailis a required input.\n          $ref: '#/components/schemas/EmailAddress'\n        TxnDate:\n          type: string\n          description: \u003e-\n            The date entered by the user when this transaction occurred.\n            yyyy/MM/dd is the valid date format. For posting transactions, this\n            is the posting date that affects the financial statements. If the\n            date is not supplied, the current date on the server is used. Sort\n            order is ASC by default.\n        ShipFromAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods are shipped from. For\n            transactions without shipping, it represents the address where the\n            sale took place. For international addresses - countries should be\n            passed as 3 ISO alpha-3 characters or the full name of the country.\n            If a physical address is updated from within the transaction object,\n            the QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ShipDate:\n          type: string\n          description: Date for delivery of goods or services.\n        TrackingNum:\n          type: string\n          description: \u003e-\n            Shipping provider's tracking number for the delivery of the goods\n            associated with the transaction.\n        ClassRef:\n          type: object\n          description: \u003e-\n            Reference to the Class associated with the transaction. Available if\n            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.\n            Query the Class name list resource to determine the appropriate\n            Class object for this reference. Use Class.Id and Class.Name from\n            that object for ClassRef.value and ClassRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        PrintStatus:\n          type: string\n          description: \u003e-\n            Printing status of the invoice. Valid values- NotSet, NeedToPrint,\n            PrintComplete .\n        SalesTermRef:\n          type: object\n          description: \u003e-\n            Reference to the sales term associated with the transaction. Query\n            the Term name list resource to determine the appropriate Term object\n            for this reference. Use Term.Id and Term.Name from that object for\n            SalesTermRef.value and SalesTermRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        TxnSource:\n          type: string\n          description: \u003e-\n            Used internally to specify originating source of a credit card\n            transaction.\n        LinkedTxn:\n          type: array\n          description: \u003e-\n            Zero or more related transactions to this Invoice object. The\n            following linked relationships are supported- Links to Estimate and\n            TimeActivity objects can be established directly to this Invoice\n            object with UI or with the API. Create, Read, Update, and Query\n            operations are avaialble at the API level for these types of links.\n            Only one link can be made to an Estimate. Progress Invoicing is not\n            supported via the API. Links to expenses incurred on behalf of the\n            customer are returned in the response with LinkedTxn.TxnType set to\n            ReimburseCharge, ChargeCredit or StatementCharge corresponding to\n            billable customer expenses of type Cash, Delayed Credit, and Delayed\n            Charge, respectively. Links to these types of transactions are\n            established within the QuickBooks UI, only, and are available as\n            read-only at the API level. Links to payments applied to an Invoice\n            object are returned in the response with LinkedTxn.TxnType set to\n            Payment. Links to Payment transactions are established within the\n            QuickBooks UI, only, and are available as read-only at the API\n            level. Use LinkedTxn.TxnId as the ID in a separate read request for\n            the specific resource to retrieve details of the linked object.\n          items: {}\n        DepositToAccountRef:\n          type: object\n          description: \u003e-\n            Account to which money is deposited. Query the Account name list\n            resource to determine the appropriate Account object for this\n            reference, where Account.AccountType is Other Current Asset or Bank.\n            Use Account.Id and Account.Name from that object for\n            DepositToAccountRef.value and DepositToAccountRef.name,\n            respectively. Before you can use this field ensure that the company\n            allows deposits in their invoices first. This can be found by\n            querying the Preferences endpoint. SalesFormsPrefs.AllowDeposit must\n            be equal to true. If you do not specify this account the payment is\n            applied to the Undeposited Funds account.\n          $ref: '#/components/schemas/ReferenceType'\n        GlobalTaxCalculation:\n          type: string\n          description: \u003e-\n            Method in which tax is applied. Allowed values are- TaxExcluded,\n            TaxInclusive, and NotApplicable.\n        AllowOnlineACHPayment:\n          type: boolean\n          description: \u003e-\n            Specifies if this invoice can be paid with online bank transfers and\n            corresponds to the Free bank transfer online payment check box on\n            the QuickBooks UI. Active when\n            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to\n            true. If set to true, allow invoice to be paid with online bank\n            transfers. The Free bank transfer online payment check box is\n            checked on the QuickBooks UI for this invoice. If set to false,\n            online bank transfers are not allowed. The Free bank transfer online\n            payment check box is not checked on the QuickBooks UI for this\n            invoice.\n        TransactionLocationType:\n          type: string\n          description: \u003e-\n            The account location. For France locale valid values include-\n            WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For UAE,\n            valid values include ABUDHABI AJMAN SHARJAH DUBAI FUJAIRAH\n            RAS_AL_KHAIMAH UMM_AL_QUWAIN OTHER_GCC\n        DueDate:\n          type: string\n          description: \u003e-\n            Date when the payment of the transaction is due. If date is not\n            provided, the number of days specified in SalesTermRef added the\n            transaction date will be used.\n        MetaData:\n          type: object\n          description: \u003e-\n            Descriptive information about the object. The MetaData values are\n            set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        PrivateNote:\n          type: string\n          description: \u003e-\n            User entered, organization-private note about the transaction. This\n            note does not appear on the invoice to the customer. This field maps\n            to the Statement Memo field on the Invoice form in the QuickBooks\n            Online UI.\n        BillEmailCc:\n          type: object\n          description: \u003e-\n            Identifies the carbon copy e-mail address where the invoice is sent.\n            If not specified, this field is populated from that defined in\n            Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is\n            invalid, carbon copy email is not sent.\n          $ref: '#/components/schemas/EmailAddress'\n        CustomerMemo:\n          type: object\n          description: \u003e-\n            User-entered message to the customer; this message is visible to end\n            user on their transactions.\n          $ref: '#/components/schemas/MemoRef'\n        EmailStatus:\n          type: string\n          description: \u003e-\n            Email status of the invoice. Valid values- NotSet, NeedToSend,\n            EmailSent\n        ExchangeRate:\n          type: number\n          description: \u003e-\n            The number of home currency units it takes to equal one unit of\n            currency specified by CurrencyRef. Applicable if multicurrency is\n            enabled for the company.\n        Deposit:\n          type: number\n          description: The deposit made towards this invoice.\n        TxnTaxDetail:\n          type: object\n          description: \u003e-\n            This data type provides information for taxes charged on the\n            transaction as a whole. It captures the details sales taxes\n            calculated for the transaction based on the tax codes referenced by\n            the transaction. This can be calculated by QuickBooks business logic\n            or you may supply it when adding a transaction. See Global tax model\n            for more information about this element. If sales tax is disabled\n            (Preferences.TaxPrefs.UsingSalesTax is set to false) then\n            TxnTaxDetail is ignored and not stored.\n          # $ref: '#/components/schemas/TxnTaxDetail'\n        AllowOnlineCreditCardPayment:\n          type: boolean\n          description: \u003e-\n            Specifies if online credit card payments are allowed for this\n            invoice and corresponds to the Cards online payment check box on the\n            QuickBooks UI. Active when\n            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to\n            true. If set to true, allow invoice to be paid with online credit\n            card payments. The Cards online payment check box is checked on the\n            QuickBooks UI. If set to false, online credit card payments are not\n            allowed. The Cards online payment check box is not checked on the\n            QuickBooks UI.\n        CustomField:\n          type: object\n          description: \u003e-\n            One of, up to three custom fields for the transaction. Available for\n            custom fields so configured for the company. Check\n            Preferences.SalesFormsPrefs.CustomField and\n            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields\n            currenly configured. Click here to learn about managing custom\n            fields.\n          # $ref: '#/components/schemas/TxnTaxDetail'\n        ShipAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods must be shipped. If\n            ShipAddris not specified, and a default Customer:ShippingAddr is\n            specified in QuickBooks for this customer, the default ship-to\n            address will be used by QuickBooks. For international addresses -\n            countries should be passed as 3 ISO alpha-3 characters or the full\n            name of the country. If a physical address is updated from within\n            the transaction object, the QuickBooks Online API flows individual\n            address components differently into the Line elements of the\n            transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and\n            company name. Original Line1 through Line 5 contents, City,\n            SubDivisionCode, and PostalCode flow into Line3 through Line5as a\n            free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        DepartmentRef:\n          type: object\n          description: \u003e-\n            A reference to a Department object specifying the location of the\n            transaction. Available if\n            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.\n            Query the Department name list resource to determine the appropriate\n            department object for this reference. Use Department.Id and\n            Department.Name from that object for DepartmentRef.value and\n            DepartmentRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        BillEmailBcc:\n          type: object\n          description: \u003e-\n            Identifies the blind carbon copy e-mail address where the invoice is\n            sent. If not specified, this field is populated from that defined in\n            Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is\n            invalid, blind carbon copy email is not sent.\n          $ref: '#/components/schemas/EmailAddress'\n        ShipMethodRef:\n          type: object\n          description: \u003e-\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n          $ref: '#/components/schemas/ReferenceType'\n        BillAddr:\n          type: object\n          description: \u003e-\n            Bill-to address of the Invoice. If BillAddris not specified, and a\n            default Customer:BillingAddr is specified in QuickBooks for this\n            customer, the default bill-to address is used by QuickBooks. For\n            international addresses - countries should be passed as 3 ISO\n            alpha-3 characters or the full name of the country. If a physical\n            address is updated from within the transaction object, the\n            QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings. Starting\n            minorversion=54 if you update the CustomerRef, the address passed\n            using BillAddr will be honored.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ApplyTaxAfterDiscount:\n          type: boolean\n          description: \u003e-\n            If false or null, calculate the sales tax first, and then apply the\n            discount. If true, subtract the discount first and then calculate\n            the sales tax.\n        FreeFormAddress:\n          type: boolean\n          description: \u003e-\n            Denotes how ShipAddr is stored- formatted or unformatted. The value\n            of this flag is system defined based on format of shipping address\n            at object create time. If set to false, shipping address is returned\n            in a formatted style using City, Country, CountrySubDivisionCode,\n            Postal code. If set to true, shipping address is returned in an\n            unformatted style using Line1 through Line5 attributes.\n      required:\n        - \"Line\"\n        - \"CustomerRef\"\n    Invoice:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        Line:\n          type: array\n          description: \u003e-\n            Individual line items of a transaction. Valid Line types include\n            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline\n            Subtotal lines), DiscountLine and SubTotalLine (used for the overall\n            transaction)\n          items: {}\n        CustomerRef:\n          type: object\n          description: \u003e-\n            Reference to a customer or job. Query the Customer name list\n            resource to determine the appropriate Customer object for this\n            reference. Use Customer.Id and Customer.DisplayName from that object\n            for CustomerRef.value and CustomerRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        SyncToken:\n          type: string\n          description: \u003e-\n            Version number of the object. It is used to lock an object for use\n            by one app at a time. As soon as an application modifies an object,\n            its SyncToken is incremented. Attempts to modify an object\n            specifying an older SyncToken fails. Only the latest version of the\n            object is maintained by QuickBooks Online.\n        CurrencyRef:\n          type: object\n          description: \u003e-\n            Reference to the currency in which all amounts on the associated\n            transaction are expressed. This must be defined if multicurrency is\n            enabled for the company. Multicurrency is enabled for the company if\n            Preferences.MultiCurrencyEnabled is set to true. Read more about\n            multicurrency support here. Applicable if multicurrency is enabled\n            for the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n        DocNumber:\n          type: string\n          description: \u003e-\n            Reference number for the transaction. If not explicitly provided at\n            create time, this field is populated based on the setting of\n            Preferences:CustomTxnNumber as follows- If\n            Preferences:CustomTxnNumber is true a custom value can be provided.\n            If no value is supplied, the resulting DocNumber is null. If\n            Preferences:CustomTxnNumber is false, resulting DocNumber is system\n            generated by incrementing the last number by 1. If\n            Preferences:CustomTxnNumber is false then do not send a value as it\n            can lead to unwanted duplicates. If a DocNumber value is sent for an\n            Update operation, then it just updates that particular invoice and\n            does not alter the internal system DocNumber. Note- DocNumber is an\n            optional field for all locales except France. For France locale if\n            Preferences:CustomTxnNumber is enabled it will not be automatically\n            generated and is a required field. If a duplicate DocNumber needs to\n            be supplied, add the query parameter name/value pair,\n            include=allowduplicatedocnum to the URI.\n        BillEmail:\n          type: object\n          description: \u003e-\n            Identifies the e-mail address where the invoice is sent. If\n            EmailStatus=NeedToSend, BillEmailis a required input.\n          $ref: '#/components/schemas/EmailAddress'\n        TxnDate:\n          type: string\n          description: \u003e-\n            The date entered by the user when this transaction occurred.\n            yyyy/MM/dd is the valid date format. For posting transactions, this\n            is the posting date that affects the financial statements. If the\n            date is not supplied, the current date on the server is used. Sort\n            order is ASC by default.\n        ShipFromAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods are shipped from. For\n            transactions without shipping, it represents the address where the\n            sale took place. For international addresses - countries should be\n            passed as 3 ISO alpha-3 characters or the full name of the country.\n            If a physical address is updated from within the transaction object,\n            the QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ShipDate:\n          type: string\n          description: Date for delivery of goods or services.\n        TrackingNum:\n          type: string\n          description: \u003e-\n            Shipping provider's tracking number for the delivery of the goods\n            associated with the transaction.\n        ClassRef:\n          type: object\n          description: \u003e-\n            Reference to the Class associated with the transaction. Available if\n            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.\n            Query the Class name list resource to determine the appropriate\n            Class object for this reference. Use Class.Id and Class.Name from\n            that object for ClassRef.value and ClassRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        PrintStatus:\n          type: string\n          description: \u003e-\n            Printing status of the invoice. Valid values- NotSet, NeedToPrint,\n            PrintComplete .\n        SalesTermRef:\n          type: object\n          description: \u003e-\n            Reference to the sales term associated with the transaction. Query\n            the Term name list resource to determine the appropriate Term object\n            for this reference. Use Term.Id and Term.Name from that object for\n            SalesTermRef.value and SalesTermRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        TxnSource:\n          type: string\n          description: \u003e-\n            Used internally to specify originating source of a credit card\n            transaction.\n        LinkedTxn:\n          type: array\n          description: \u003e-\n            Zero or more related transactions to this Invoice object. The\n            following linked relationships are supported- Links to Estimate and\n            TimeActivity objects can be established directly to this Invoice\n            object with UI or with the API. Create, Read, Update, and Query\n            operations are avaialble at the API level for these types of links.\n            Only one link can be made to an Estimate. Progress Invoicing is not\n            supported via the API. Links to expenses incurred on behalf of the\n            customer are returned in the response with LinkedTxn.TxnType set to\n            ReimburseCharge, ChargeCredit or StatementCharge corresponding to\n            billable customer expenses of type Cash, Delayed Credit, and Delayed\n            Charge, respectively. Links to these types of transactions are\n            established within the QuickBooks UI, only, and are available as\n            read-only at the API level. Links to payments applied to an Invoice\n            object are returned in the response with LinkedTxn.TxnType set to\n            Payment. Links to Payment transactions are established within the\n            QuickBooks UI, only, and are available as read-only at the API\n            level. Use LinkedTxn.TxnId as the ID in a separate read request for\n            the specific resource to retrieve details of the linked object.\n          items: {}\n        DepositToAccountRef:\n          type: object\n          description: \u003e-\n            Account to which money is deposited. Query the Account name list\n            resource to determine the appropriate Account object for this\n            reference, where Account.AccountType is Other Current Asset or Bank.\n            Use Account.Id and Account.Name from that object for\n            DepositToAccountRef.value and DepositToAccountRef.name,\n            respectively. Before you can use this field ensure that the company\n            allows deposits in their invoices first. This can be found by\n            querying the Preferences endpoint. SalesFormsPrefs.AllowDeposit must\n            be equal to true. If you do not specify this account the payment is\n            applied to the Undeposited Funds account.\n          $ref: '#/components/schemas/ReferenceType'\n        GlobalTaxCalculation:\n          type: string\n          description: \u003e-\n            Method in which tax is applied. Allowed values are- TaxExcluded,\n            TaxInclusive, and NotApplicable.\n        AllowOnlineACHPayment:\n          type: boolean\n          description: \u003e-\n            Specifies if this invoice can be paid with online bank transfers and\n            corresponds to the Free bank transfer online payment check box on\n            the QuickBooks UI. Active when\n            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to\n            true. If set to true, allow invoice to be paid with online bank\n            transfers. The Free bank transfer online payment check box is\n            checked on the QuickBooks UI for this invoice. If set to false,\n            online bank transfers are not allowed. The Free bank transfer online\n            payment check box is not checked on the QuickBooks UI for this\n            invoice.\n        TransactionLocationType:\n          type: string\n          description: \u003e-\n            The account location. For France locale valid values include-\n            WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For UAE,\n            valid values include ABUDHABI AJMAN SHARJAH DUBAI FUJAIRAH\n            RAS_AL_KHAIMAH UMM_AL_QUWAIN OTHER_GCC\n        DueDate:\n          type: string\n          description: \u003e-\n            Date when the payment of the transaction is due. If date is not\n            provided, the number of days specified in SalesTermRef added the\n            transaction date will be used.\n        MetaData:\n          type: object\n          description: \u003e-\n            Descriptive information about the object. The MetaData values are\n            set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        PrivateNote:\n          type: string\n          description: \u003e-\n            User entered, organization-private note about the transaction. This\n            note does not appear on the invoice to the customer. This field maps\n            to the Statement Memo field on the Invoice form in the QuickBooks\n            Online UI.\n        BillEmailCc:\n          type: object\n          description: \u003e-\n            Identifies the carbon copy e-mail address where the invoice is sent.\n            If not specified, this field is populated from that defined in\n            Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is\n            invalid, carbon copy email is not sent.\n          $ref: '#/components/schemas/EmailAddress'\n        CustomerMemo:\n          type: object\n          description: \u003e-\n            User-entered message to the customer; this message is visible to end\n            user on their transactions.\n          $ref: '#/components/schemas/MemoRef'\n        EmailStatus:\n          type: string\n          description: \u003e-\n            Email status of the invoice. Valid values- NotSet, NeedToSend,\n            EmailSent\n        ExchangeRate:\n          type: number\n          description: \u003e-\n            The number of home currency units it takes to equal one unit of\n            currency specified by CurrencyRef. Applicable if multicurrency is\n            enabled for the company.\n        Deposit:\n          type: number\n          description: The deposit made towards this invoice.\n        TxnTaxDetail:\n          type: object\n          description: \u003e-\n            This data type provides information for taxes charged on the\n            transaction as a whole. It captures the details sales taxes\n            calculated for the transaction based on the tax codes referenced by\n            the transaction. This can be calculated by QuickBooks business logic\n            or you may supply it when adding a transaction. See Global tax model\n            for more information about this element. If sales tax is disabled\n            (Preferences.TaxPrefs.UsingSalesTax is set to false) then\n            TxnTaxDetail is ignored and not stored.\n          # $ref: '#/components/schemas/TxnTaxDetail'\n        AllowOnlineCreditCardPayment:\n          type: boolean\n          description: \u003e-\n            Specifies if online credit card payments are allowed for this\n            invoice and corresponds to the Cards online payment check box on the\n            QuickBooks UI. Active when\n            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to\n            true. If set to true, allow invoice to be paid with online credit\n            card payments. The Cards online payment check box is checked on the\n            QuickBooks UI. If set to false, online credit card payments are not\n            allowed. The Cards online payment check box is not checked on the\n            QuickBooks UI.\n        CustomField:\n          type: array\n          description: \u003e-\n            One of, up to three custom fields for the transaction. Available for\n            custom fields so configured for the company. Check\n            Preferences.SalesFormsPrefs.CustomField and\n            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields\n            currenly configured. Click here to learn about managing custom\n            fields.\n          items: {}\n          # $ref: '#/components/schemas/TxnTaxDetail'\n        ShipAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods must be shipped. If\n            ShipAddris not specified, and a default Customer:ShippingAddr is\n            specified in QuickBooks for this customer, the default ship-to\n            address will be used by QuickBooks. For international addresses -\n            countries should be passed as 3 ISO alpha-3 characters or the full\n            name of the country. If a physical address is updated from within\n            the transaction object, the QuickBooks Online API flows individual\n            address components differently into the Line elements of the\n            transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and\n            company name. Original Line1 through Line 5 contents, City,\n            SubDivisionCode, and PostalCode flow into Line3 through Line5as a\n            free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        DepartmentRef:\n          type: object\n          description: \u003e-\n            A reference to a Department object specifying the location of the\n            transaction. Available if\n            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.\n            Query the Department name list resource to determine the appropriate\n            department object for this reference. Use Department.Id and\n            Department.Name from that object for DepartmentRef.value and\n            DepartmentRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        BillEmailBcc:\n          type: object\n          description: \u003e-\n            Identifies the blind carbon copy e-mail address where the invoice is\n            sent. If not specified, this field is populated from that defined in\n            Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is\n            invalid, blind carbon copy email is not sent.\n          $ref: '#/components/schemas/EmailAddress'\n        ShipMethodRef:\n          type: object\n          description: \u003e-\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n          $ref: '#/components/schemas/ReferenceType'\n        BillAddr:\n          type: object\n          description: \u003e-\n            Bill-to address of the Invoice. If BillAddris not specified, and a\n            default Customer:BillingAddr is specified in QuickBooks for this\n            customer, the default bill-to address is used by QuickBooks. For\n            international addresses - countries should be passed as 3 ISO\n            alpha-3 characters or the full name of the country. If a physical\n            address is updated from within the transaction object, the\n            QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings. Starting\n            minorversion=54 if you update the CustomerRef, the address passed\n            using BillAddr will be honored.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ApplyTaxAfterDiscount:\n          type: boolean\n          description: \u003e-\n            If false or null, calculate the sales tax first, and then apply the\n            discount. If true, subtract the discount first and then calculate\n            the sales tax.\n        HomeBalance:\n          type: number\n          description: \u003e-\n            Convenience field containing the amount in Balance expressed in\n            terms of the home currency. Calculated by QuickBooks business logic.\n            Value is valid only when CurrencyRef is specified and available when\n            endpoint is evoked with the minorversion=3 query parameter.\n            Applicable if multicurrency is enabled for the company\n        DeliveryInfo:\n          type: object\n          description: \u003e-\n            Email delivery information. Returned when a request has been made to\n            deliver email with the send operation.\n          # $ref: '#/components/schemas/DeliveryInfo'\n        TotalAmt:\n          type: number\n          description: \u003e-\n            Indicates the total amount of the transaction. This includes the\n            total of all the charges, allowances, and taxes. Calculated by\n            QuickBooks business logic; any value you supply is over-written by\n            QuickBooks.\n        InvoiceLink:\n          type: string\n          description: \u003e-\n            Sharable link for the invoice sent to external customers. The link\n            is generated only for invoices with online payment enabled and\n            having a valid customer email address. Include query param\n            `include=invoiceLink` to get the link back on query response.\n        RecurDataRef:\n          type: object\n          description: \u003e-\n            A reference to the Recurring Transaction. It captures what recurring\n            transaction template the Invoice was created from.\n          $ref: '#/components/schemas/ReferenceType'\n        TaxExemptionRef:\n          type: object\n          description: \u003e-\n            Reference to the TaxExepmtion ID associated with this object.\n            Available for companies that have automated sales tax enabled.\n            TaxExemptionRef.Name- The Tax Exemption Id for the customer to which\n            this object is associated. This Id is typically issued by the state.\n            TaxExemptionRef.value- The system-generated Id of the exemption\n            type.\n          $ref: '#/components/schemas/ReferenceType'\n        Balance:\n          type: number\n          description: \u003e-\n            The balance reflecting any payments made against the transaction.\n            Initially set to the value of TotalAmt. A Balance of 0 indicates the\n            invoice is fully paid. Calculated by QuickBooks business logic; any\n            value you supply is over-written by QuickBooks.\n        HomeTotalAmt:\n          type: number\n          description: \u003e-\n            Total amount of the transaction in the home currency. Includes the\n            total of all the charges, allowances and taxes. Calculated by\n            QuickBooks business logic. Value is valid only when CurrencyRef is\n            specified. Applicable if multicurrency is enabled for the company.\n        FreeFormAddress:\n          type: boolean\n          description: \u003e-\n            Denotes how ShipAddr is stored- formatted or unformatted. The value\n            of this flag is system defined based on format of shipping address\n            at object create time. If set to false, shipping address is returned\n            in a formatted style using City, Country, CountrySubDivisionCode,\n            Postal code. If set to true, shipping address is returned in an\n            unformatted style using Line1 through Line5 attributes.\n    MemoRef:\n      type: object\n      properties:\n        value:\n          type: string\n          description: \u003e-\n            User-entered message to the customer; this message is visible to the\n            end user on their transactions.\n    EstimateResponse:\n      type: object\n      properties:\n        Estimate:\n          $ref: '#/components/schemas/Estimate'\n    EstimateCreateObject:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        CustomerRef:\n          type: object\n          description: \u003e-\n            Reference to a customer or job. Query the Customer name list\n            resource to determine the appropriate Customer object for this\n            reference. Use Customer.Id and Customer.DisplayName from that object\n            for CustomerRef.value and CustomerRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        SyncToken:\n          type: string\n          description: \u003e-\n            Version number of the object. It is used to lock an object for use\n            by one app at a time. As soon as an application modifies an object,\n            its SyncToken is incremented. Attempts to modify an object\n            specifying an older SyncToken fails. Only the latest version of the\n            object is maintained by QuickBooks Online.\n        CurrencyRef:\n          type: object\n          description: \u003e-\n            Reference to the currency in which all amounts on the associated\n            transaction are expressed. This must be defined if multicurrency is\n            enabled for the company. Multicurrency is enabled for the company if\n            Preferences.MultiCurrencyEnabled is set to true. Read more about\n            multicurrency support here. Required if multicurrency is enabled for\n            the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n        BillEmail:\n          type: object\n          description: \u003e-\n            Identifies the e-mail address where the estimate is sent. If\n            EmailStatus=NeedToSend, BillEmailis a required input.\n          $ref: '#/components/schemas/EmailAddress'\n        TxnDate:\n          type: string\n          description: \u003e-\n            The date entered by the user when this transaction occurred. For\n            posting transactions, this is the posting date that affects the\n            financial statements. If the date is not supplied, the current date\n            on the server is used. Sort order is ASC by default.\n        ShipFromAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods are shipped from. For\n            transactions without shipping, it represents the address where the\n            sale took place. For international addresses - countries should be\n            passed as 3 ISO alpha-3 characters or the full name of the country.\n            If a physical address is updated from within the transaction object,\n            the QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ShipDate:\n          type: string\n          description: Date for delivery of goods or services.\n        ClassRef:\n          type: object\n          description: \u003e-\n            Reference to the Class associated with the transaction. Available if\n            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.\n            Query the Class name list resource to determine the appropriate\n            Class object for this reference. Use Class.Id and Class.Name from\n            that object for ClassRef.value and ClassRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        PrintStatus:\n          type: string\n          description: \u003e-\n            Printing status of the invoice. Valid values- NotSet, NeedToPrint,\n            PrintComplete .\n        CustomField:\n          type: object\n          description: \u003e-\n            One of, up to three custom fields for the transaction. Available for\n            custom fields so configured for the company. Check\n            Preferences.SalesFormsPrefs.CustomField and\n            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields\n            currenly configured. Click here to learn about managing custom\n            fields.\n        SalesTermRef:\n          type: object\n          description: \u003e-\n            Reference to the sales term associated with the transaction. Query\n            the Term name list resource to determine the appropriate Term object\n            for this reference. Use Term.Id and Term.Name from that object for\n            SalesTermRef.value and SalesTermRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        TxnStatus:\n          type: string\n          description: \u003e-\n            One of the following status settings- Accepted, Closed, Pending,\n            Rejected, Converted\n        LinkedTxn:\n          type: array\n          description: \u003e-\n            Zero or more Invoice objects related to this transaction. Use\n            LinkedTxn.TxnId as the ID in a separate Invoice read request to\n            retrieve details of the linked object.\n          items:\n            $ref: '#/components/schemas/LinkedTxn'\n        GlobalTaxCalculation:\n          type: string\n          description: \u003e-\n            TaxExcluded Method in which tax is applied. Allowed values are-\n            TaxExcluded, TaxInclusive, and NotApplicable.\n          enum:\n            - ''\n        AcceptedDate:\n          type: string\n          description: Date estimate was accepted.\n        ExpirationDate:\n          type: string\n          description: Date by which estimate must be accepted before invalidation.\n        TransactionLocationType:\n          type: string\n          description: \u003e-\n            The account location. Valid values include- - WithinFrance -\n            FranceOverseas - OutsideFranceWithEU - OutsideEU - For France\n            locales, only.\n        DueDate:\n          type: string\n          description: \u003e-\n            Date when the payment of the transaction is due. If date is not\n            provided, the number of days specified in SalesTermRef added the\n            transaction date will be used.\n        MetaData:\n          type: object\n          description: \u003e-\n            Descriptive information about the object. The MetaData values are\n            set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        DocNumber:\n          type: string\n          description: \u003e-\n            Reference number for the transaction. If not explicitly provided at\n            create time, this field is populated based on the setting of\n            Preferences:CustomTxnNumber as follows- If\n            Preferences:CustomTxnNumber is true a custom value can be provided.\n            If no value is supplied, the resulting DocNumber is null. If\n            Preferences:CustomTxnNumber is false, resulting DocNumber is system\n            generated by incrementing the last number by 1. If\n            Preferences:CustomTxnNumber is false then do not send a value as it\n            can lead to unwanted duplicates. If a DocNumber value is sent for an\n            Update operation, then it just updates that particular invoice and\n            does not alter the internal system DocNumber. Note- DocNumber is an\n            optional field for all locales except France. For France locale if\n            Preferences:CustomTxnNumber is enabled it will not be automatically\n            generated and is a required field.\n        PrivateNote:\n          type: string\n          description: \u003e-\n            User entered, organization-private note about the transaction. This\n            note does not appear on the invoice to the customer. This field maps\n            to the Memo field on the Invoice form.\n        Line:\n          type: array\n          description: \u003e-\n            Individual line items of a transaction. Valid Line types include-\n            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline\n            Subtotal lines), DiscountLine and SubTotalLine (used for the overall\n            transaction)\n          items: {}\n        CustomerMemo:\n          type: object\n          description: \u003e-\n            User-entered message to the customer; this message is visible to end\n            user on their transactions.\n          $ref: '#/components/schemas/MemoRef'\n        EmailStatus:\n          type: string\n          description: \u003e-\n            Email status of the invoice. Valid values- NotSet, NeedToSend,\n            EmailSent\n        TxnTaxDetail:\n          type: object\n          description: \u003e-\n            This data type provides information for taxes charged on the\n            transaction as a whole. It captures the details sales taxes\n            calculated for the transaction based on the tax codes referenced by\n            the transaction. This can be calculated by QuickBooks business logic\n            or you may supply it when adding a transaction. See Global tax model\n            for more information about this element. If sales tax is disabled\n            (Preferences.TaxPrefs.UsingSalesTax is set to false) then\n            TxnTaxDetail is ignored and not stored.\n        AcceptedBy:\n          type: string\n          description: Name of customer who accepted the estimate.\n        ExchangeRate:\n          type: number\n          description: \u003e-\n            The number of home currency units it takes to equal one unit of\n            currency specified by CurrencyRef. Applicable if multicurrency is\n            enabled for the company.\n        ShipAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods must be shipped. If\n            ShipAddris not specified, and a default Customer:ShippingAddr is\n            specified in QuickBooks for this customer, the default ship-to\n            address will be used by QuickBooks. For international addresses -\n            countries should be passed as 3 ISO alpha-3 characters or the full\n            name of the country. If a physical address is updated from within\n            the transaction object, the QuickBooks Online API flows individual\n            address components differently into the Line elements of the\n            transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and\n            company name. Original Line1 through Line 5 contents, City,\n            SubDivisionCode, and PostalCode flow into Line3 through Line5as a\n            free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        DepartmentRef:\n          type: object\n          description: \u003e-\n            A reference to a Department object specifying the location of the\n            transaction. Available if\n            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.\n            Query the Department name list resource to determine the appropriate\n            department object for this reference. Use Department.Id and\n            Department.Name from that object for DepartmentRef.value and\n            DepartmentRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        ShipMethodRef:\n          type: object\n          description: \u003e-\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n          $ref: '#/components/schemas/ReferenceType'\n        BillAddr:\n          type: object\n          description: \u003e-\n            Bill-to address of the Invoice. If BillAddris not specified, and a\n            default Customer:BillingAddr is specified in QuickBooks for this\n            customer, the default bill-to address is used by QuickBooks. For\n            international addresses - countries should be passed as 3 ISO\n            alpha-3 characters or the full name of the country. If a physical\n            address is updated from within the transaction object, the\n            QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ApplyTaxAfterDiscount:\n          type: boolean\n          description: \u003e-\n            If false or null, calculate the sales tax first, and then apply the\n            discount. If true, subtract the discount first and then calculate\n            the sales tax.\n        FreeFormAddress:\n          type: boolean\n          description: \u003e-\n            Denotes how ShipAddr is stored- formatted or unformatted. The value\n            of this flag is system defined based on format of shipping address\n            at object create time. If set to false, shipping address is returned\n            in a formatted style using City, Country, CountrySubDivisionCode,\n            Postal code. If set to true, shipping address is returned in an\n            unformatted style using Line1 through Line5 attributes.\n      required:\n        - \"CustomerRef\"\n    Estimate:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        CustomerRef:\n          type: object\n          description: \u003e-\n            Reference to a customer or job. Query the Customer name list\n            resource to determine the appropriate Customer object for this\n            reference. Use Customer.Id and Customer.DisplayName from that object\n            for CustomerRef.value and CustomerRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        SyncToken:\n          type: string\n          description: \u003e-\n            Version number of the object. It is used to lock an object for use\n            by one app at a time. As soon as an application modifies an object,\n            its SyncToken is incremented. Attempts to modify an object\n            specifying an older SyncToken fails. Only the latest version of the\n            object is maintained by QuickBooks Online.\n        CurrencyRef:\n          type: object\n          description: \u003e-\n            Reference to the currency in which all amounts on the associated\n            transaction are expressed. This must be defined if multicurrency is\n            enabled for the company. Multicurrency is enabled for the company if\n            Preferences.MultiCurrencyEnabled is set to true. Read more about\n            multicurrency support here. Required if multicurrency is enabled for\n            the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n        BillEmail:\n          type: object\n          description: \u003e-\n            Identifies the e-mail address where the estimate is sent. If\n            EmailStatus=NeedToSend, BillEmailis a required input.\n          $ref: '#/components/schemas/EmailAddress'\n        TxnDate:\n          type: string\n          description: \u003e-\n            The date entered by the user when this transaction occurred. For\n            posting transactions, this is the posting date that affects the\n            financial statements. If the date is not supplied, the current date\n            on the server is used. Sort order is ASC by default.\n        ShipFromAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods are shipped from. For\n            transactions without shipping, it represents the address where the\n            sale took place. For international addresses - countries should be\n            passed as 3 ISO alpha-3 characters or the full name of the country.\n            If a physical address is updated from within the transaction object,\n            the QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ShipDate:\n          type: string\n          description: Date for delivery of goods or services.\n        ClassRef:\n          type: object\n          description: \u003e-\n            Reference to the Class associated with the transaction. Available if\n            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.\n            Query the Class name list resource to determine the appropriate\n            Class object for this reference. Use Class.Id and Class.Name from\n            that object for ClassRef.value and ClassRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        PrintStatus:\n          type: string\n          description: \u003e-\n            Printing status of the invoice. Valid values- NotSet, NeedToPrint,\n            PrintComplete .\n        CustomField:\n          type: object\n          description: \u003e-\n            One of, up to three custom fields for the transaction. Available for\n            custom fields so configured for the company. Check\n            Preferences.SalesFormsPrefs.CustomField and\n            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields\n            currenly configured. Click here to learn about managing custom\n            fields.\n        SalesTermRef:\n          type: object\n          description: \u003e-\n            Reference to the sales term associated with the transaction. Query\n            the Term name list resource to determine the appropriate Term object\n            for this reference. Use Term.Id and Term.Name from that object for\n            SalesTermRef.value and SalesTermRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        TxnStatus:\n          type: string\n          description: \u003e-\n            One of the following status settings- Accepted, Closed, Pending,\n            Rejected, Converted\n        LinkedTxn:\n          type: array\n          description: \u003e-\n            Zero or more Invoice objects related to this transaction. Use\n            LinkedTxn.TxnId as the ID in a separate Invoice read request to\n            retrieve details of the linked object.\n          items:\n            $ref: '#/components/schemas/LinkedTxn'\n        GlobalTaxCalculation:\n          type: string\n          description: \u003e-\n            TaxExcluded Method in which tax is applied. Allowed values are-\n            TaxExcluded, TaxInclusive, and NotApplicable.\n          enum:\n            - ''\n        AcceptedDate:\n          type: string\n          description: Date estimate was accepted.\n        ExpirationDate:\n          type: string\n          description: Date by which estimate must be accepted before invalidation.\n        TransactionLocationType:\n          type: string\n          description: \u003e-\n            The account location. Valid values include- - WithinFrance -\n            FranceOverseas - OutsideFranceWithEU - OutsideEU - For France\n            locales, only.\n        DueDate:\n          type: string\n          description: \u003e-\n            Date when the payment of the transaction is due. If date is not\n            provided, the number of days specified in SalesTermRef added the\n            transaction date will be used.\n        MetaData:\n          type: object\n          description: \u003e-\n            Descriptive information about the object. The MetaData values are\n            set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        DocNumber:\n          type: string\n          description: \u003e-\n            Reference number for the transaction. If not explicitly provided at\n            create time, this field is populated based on the setting of\n            Preferences:CustomTxnNumber as follows- If\n            Preferences:CustomTxnNumber is true a custom value can be provided.\n            If no value is supplied, the resulting DocNumber is null. If\n            Preferences:CustomTxnNumber is false, resulting DocNumber is system\n            generated by incrementing the last number by 1. If\n            Preferences:CustomTxnNumber is false then do not send a value as it\n            can lead to unwanted duplicates. If a DocNumber value is sent for an\n            Update operation, then it just updates that particular invoice and\n            does not alter the internal system DocNumber. Note- DocNumber is an\n            optional field for all locales except France. For France locale if\n            Preferences:CustomTxnNumber is enabled it will not be automatically\n            generated and is a required field.\n        PrivateNote:\n          type: string\n          description: \u003e-\n            User entered, organization-private note about the transaction. This\n            note does not appear on the invoice to the customer. This field maps\n            to the Memo field on the Invoice form.\n        Line:\n          type: array\n          description: \u003e-\n            Individual line items of a transaction. Valid Line types include-\n            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline\n            Subtotal lines), DiscountLine and SubTotalLine (used for the overall\n            transaction)\n          items: {}\n        CustomerMemo:\n          type: object\n          description: \u003e-\n            User-entered message to the customer; this message is visible to end\n            user on their transactions.\n          $ref: '#/components/schemas/MemoRef'\n        EmailStatus:\n          type: string\n          description: \u003e-\n            Email status of the invoice. Valid values- NotSet, NeedToSend,\n            EmailSent\n        TxnTaxDetail:\n          type: object\n          description: \u003e-\n            This data type provides information for taxes charged on the\n            transaction as a whole. It captures the details sales taxes\n            calculated for the transaction based on the tax codes referenced by\n            the transaction. This can be calculated by QuickBooks business logic\n            or you may supply it when adding a transaction. See Global tax model\n            for more information about this element. If sales tax is disabled\n            (Preferences.TaxPrefs.UsingSalesTax is set to false) then\n            TxnTaxDetail is ignored and not stored.\n        AcceptedBy:\n          type: string\n          description: Name of customer who accepted the estimate.\n        ExchangeRate:\n          type: number\n          description: \u003e-\n            The number of home currency units it takes to equal one unit of\n            currency specified by CurrencyRef. Applicable if multicurrency is\n            enabled for the company.\n        ShipAddr:\n          type: object\n          description: \u003e-\n            Identifies the address where the goods must be shipped. If\n            ShipAddris not specified, and a default Customer:ShippingAddr is\n            specified in QuickBooks for this customer, the default ship-to\n            address will be used by QuickBooks. For international addresses -\n            countries should be passed as 3 ISO alpha-3 characters or the full\n            name of the country. If a physical address is updated from within\n            the transaction object, the QuickBooks Online API flows individual\n            address components differently into the Line elements of the\n            transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and\n            company name. Original Line1 through Line 5 contents, City,\n            SubDivisionCode, and PostalCode flow into Line3 through Line5as a\n            free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        DepartmentRef:\n          type: object\n          description: \u003e-\n            A reference to a Department object specifying the location of the\n            transaction. Available if\n            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.\n            Query the Department name list resource to determine the appropriate\n            department object for this reference. Use Department.Id and\n            Department.Name from that object for DepartmentRef.value and\n            DepartmentRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        ShipMethodRef:\n          type: object\n          description: \u003e-\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n            Reference to the ShipMethod associated with the transaction. There\n            is no shipping method list. Reference resolves to a string.\n          $ref: '#/components/schemas/ReferenceType'\n        BillAddr:\n          type: object\n          description: \u003e-\n            Bill-to address of the Invoice. If BillAddris not specified, and a\n            default Customer:BillingAddr is specified in QuickBooks for this\n            customer, the default bill-to address is used by QuickBooks. For\n            international addresses - countries should be passed as 3 ISO\n            alpha-3 characters or the full name of the country. If a physical\n            address is updated from within the transaction object, the\n            QuickBooks Online API flows individual address components\n            differently into the Line elements of the transaction response then\n            when the transaction was first created- Line1 and Line2 elements are\n            populated with the customer name and company name. Original Line1\n            through Line 5 contents, City, SubDivisionCode, and PostalCode flow\n            into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        ApplyTaxAfterDiscount:\n          type: boolean\n          description: \u003e-\n            If false or null, calculate the sales tax first, and then apply the\n            discount. If true, subtract the discount first and then calculate\n            the sales tax.\n        TotalAmt:\n          type: number\n          description: \u003e-\n            Indicates the total amount of the transaction. This includes the\n            total of all the charges, allowances, and taxes. Calculated by\n            QuickBooks business logic; any value you supply is over-written by\n            QuickBooks.\n        RecurDataRef:\n          type: object\n          description: \u003e-\n            A reference to the Recurring Transaction. It captures what recurring\n            transaction template the Estimate was created from.\n          $ref: '#/components/schemas/ReferenceType'\n        TaxExemptionRef:\n          type: object\n          description: \u003e-\n            Reference to the TaxExepmtion ID associated with this object.\n            Available for companies that have automated sales tax enabled.\n            TaxExemptionRef.Name- The Tax Exemption Id for the customer to which\n            this object is associated. This Id is typically issued by the state.\n            TaxExemptionRef.value- The system-generated Id of the exemption\n            type.\n          $ref: '#/components/schemas/ReferenceType'\n        HomeTotalAmt:\n          type: number\n          description: \u003e-\n            Total amount of the transaction in the home currency. Includes the\n            total of all the charges, allowances and taxes. Calculated by\n            QuickBooks business logic. Value is valid only when CurrencyRef is\n            specified. Applicable if multicurrency is enabled for the company.\n        FreeFormAddress:\n          type: boolean\n          description: \u003e-\n            Denotes how ShipAddr is stored- formatted or unformatted. The value\n            of this flag is system defined based on format of shipping address\n            at object create time. If set to false, shipping address is returned\n            in a formatted style using City, Country, CountrySubDivisionCode,\n            Postal code. If set to true, shipping address is returned in an\n            unformatted style using Line1 through Line5 attributes.\n    EmailAddress:\n      type: object\n      description: Email address\n      properties:\n        Address:\n          type: string\n          description: An email address. The address format must follow the RFC 822 standard.\n    PaymentResponse:\n      type: object\n      properties: \n        Payment:\n          $ref: '#/components/schemas/Payment'\n    PaymentCreateObject:\n      type: object\n      properties: \n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        TotalAmt:\n          type: number\n          description: Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.\n        CustomerRef:\n          type: object\n          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.\n        CurrencyRef:\n          type: object\n          description: Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n            Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. Read more about multicurrency support here. Required if multicurrency is enabled for the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n        PrivateNote:\n          type: string\n          description: User entered, organization-private note about the transaction.\n        PaymentMethodRef:\n          type: object\n          description: Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. \n            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType' \n        DepositToAccountRef:\n          type: object\n          description: Identifies the account to be used for this payment. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType is Other Current Asset or Bank. Use Account.Id and Account.Name from that object for DepositToAccountRef.value and DepostiToAccountRef.name, respectively.\n            If you do not specify this account, payment is applied to the Undeposited Funds account.\n        ExchangeRate:\n          type: number\n          description: The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company\n        Line:\n          type: array\n          description: Zero or more transactions accounting for this payment. Values for Line.LinkedTxn.TxnTypecan be one of the following-\n            - Expense--Payment is reimbursement for expense paid by cash made on behalf of the customer\n            - Check--Payment is reimbursement for expense paid by check made on behalf of the customer\n            - CreditCardCredit--Payment is reimbursement for a credit card credit made on behalf of the customer\n            - JournalEntry--Payment is linked to the representative journal entry\n            - CreditMemo--Payment is linked to the credit memo the customer has with the business\n            - Invoice--The invoice to which payment is applied\n            - Use Line.LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ItemBasedExpenseLine'\n              - $ref: '#/components/schemas/AccountBasedExpenseLine'\n        TxnSource:\n          type: string\n          description: Used internally to specify originating source of a credit card transaction.\n        ARAccountRef:\n          type: object\n          description: Specifies the accounts receivable account associated with this payment. \n            Query the Account name list resource to determine the appropriate Account object for this reference. \n            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively. \n            The specified account must have Account.AccountType set to Accounts Receivable.\n          $ref: '#/components/schemas/ReferenceType'\n        TxnDate:\n          type: string\n          description: The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n            Sort order is ASC by default.\n        CreditCardPayment:\n          type: object\n          description: Information about a payment received by credit card. Inject with data only if the payment was transacted through Intuit Payments API.\n          ############\n        TransactionLocationType:\n          type: string\n          description: The account location. Valid values include-\n            WithinFrance\n            FranceOverseas\n            OutsideFranceWithEU\n            OutsideEU\n            For France locales, only.\n        MetaData:\n          type: object\n          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        PaymentRefNum:\n          type: string\n          description: The reference number for the payment received. \n            For example, Â Check number for a check, envelope number for a cash donation. Required for France locales.\n      required:\n        - \"TotalAmt\"\n        - \"CustomerRef\"\n    Payment:\n      type: object\n      properties: \n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        TotalAmt:\n          type: number\n          description: Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.\n        CustomerRef:\n          type: object\n          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.\n        CurrencyRef:\n          type: object\n          description: Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n            Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. Read more about multicurrency support here. Required if multicurrency is enabled for the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n        PrivateNote:\n          type: string\n          description: User entered, organization-private note about the transaction.\n        PaymentMethodRef:\n          type: object\n          description: Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. \n            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType' \n        UnappliedAmt:\n          type: number\n          description: Indicates the amount that has not been applied to pay amounts owed for sales transactions.\n        DepositToAccountRef:\n          type: object\n          description: Identifies the account to be used for this payment. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType is Other Current Asset or Bank. Use Account.Id and Account.Name from that object for DepositToAccountRef.value and DepostiToAccountRef.name, respectively.\n            If you do not specify this account, payment is applied to the Undeposited Funds account.\n        ExchangeRate:\n          type: number\n          description: The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company\n        Line:\n          type: array\n          description: Zero or more transactions accounting for this payment. Values for Line.LinkedTxn.TxnTypecan be one of the following-\n            - Expense--Payment is reimbursement for expense paid by cash made on behalf of the customer\n            - Check--Payment is reimbursement for expense paid by check made on behalf of the customer\n            - CreditCardCredit--Payment is reimbursement for a credit card credit made on behalf of the customer\n            - JournalEntry--Payment is linked to the representative journal entry\n            - CreditMemo--Payment is linked to the credit memo the customer has with the business\n            - Invoice--The invoice to which payment is applied\n            - Use Line.LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ItemBasedExpenseLine'\n              - $ref: '#/components/schemas/AccountBasedExpenseLine'\n        TxnSource:\n          type: string\n          description: Used internally to specify originating source of a credit card transaction.\n        ARAccountRef:\n          type: object\n          description: Specifies the accounts receivable account associated with this payment. \n            Query the Account name list resource to determine the appropriate Account object for this reference. \n            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively. \n            The specified account must have Account.AccountType set to Accounts Receivable.\n          $ref: '#/components/schemas/ReferenceType'\n        TxnDate:\n          type: string\n          description: The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n            Sort order is ASC by default.\n        CreditCardPayment:\n          type: object\n          description: Information about a payment received by credit card. Inject with data only if the payment was transacted through Intuit Payments API.\n          ############\n        TransactionLocationType:\n          type: string\n          description: The account location. Valid values include-\n            WithinFrance\n            FranceOverseas\n            OutsideFranceWithEU\n            OutsideEU\n            For France locales, only.\n        MetaData:\n          type: object\n          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        PaymentRefNum:\n          type: string\n          description: The reference number for the payment received. \n            For example, Â Check number for a check, envelope number for a cash donation. Required for France locales.\n        TaxExemptionRef:\n          type: object\n          description: Reference to the TaxExepmtion ID associated with this object. Available for companies that have automated sales tax enabled.\n            TaxExemptionRef.Name- The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.\n            TaxExemptionRef.value- The system-generated Id of the exemption type.\n          $ref: '#/components/schemas/ReferenceType'\n    CurrencyRefType:\n      type: object\n      description: Currency reference type\n      properties:\n          value:\n            type: string\n            description: A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.\n          name:\n            type: string\n            description: The full name of the currency.       \n    BillResponse:\n      type: object\n      properties: \n        Bill:\n          $ref: '#/components/schemas/Bill'\n    BillCreateObject:\n      type: object\n      properties:\n        VendorRef:\n            type: object\n            description: Reference to the vendor for this transaction. \n              Query the Vendor name list resource to determine the appropriate Vendor object for this reference. \n              Use Vendor.Id and Vendor.Name from that object for VendorRef.value and VendorRef.name, respectively.  \n            properties:\n              value:\n                type: string\n                description: The ID for the referenced object as found in the Id field of the object payload. \n                  The context is set by the type of reference and is specific to the QuickBooks company file.\n              name:\n                type: string\n                description: An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. \n                  This varies by context and specific type of object referenced. \n                  For example, references to a Customer object use Customer.DisplayName to populate this field. \n                  Optionally returned in responses, implementation dependent.\n        Line:\n          type: array\n          description: Individual line items of a transaction. Valid Line types include- ItemBasedExpenseLine and AccountBasedExpenseLine\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ItemBasedExpenseLine'\n              - $ref: '#/components/schemas/AccountBasedExpenseLine'\n        CurrencyRef:\n          type: object\n          description: Reference to the currency in which all amounts on the associated transaction are expressed. \n            - This must be defined if multicurrency is enabled for the company. \n            - Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. \n            - Read more about multicurrency support here. Required if multicurrency is enabled for the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n      required:\n        - \"VendorRef\"\n        - \"Line\"\n    PhysicalAddress:\n      type: object\n      description: Physical address\n      properties:\n        Id:\n          type: string\n          description: Unique identifier of the QuickBooks object for the address, used for modifying the address.\n        PostalCode:\n          type: string\n          description: Postal code. For example, zip code for USA and Canada\n        City:\n          type: string\n          description: City name.\n        Country:\n          type: string\n          description: Country name. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.\n        Line5:\n          type: string\n          description: Fifth line of the address.\n        Line4:\n          type: string\n          description: Fourth line of the address.\n        Line3:\n          type: string\n          description: Third line of the address.\n        Line2:\n          type: string\n          description: Second line of the address.\n        Line1:\n          type: string\n          description: First line of the address.\n        Lat:\n          type: string\n          description: Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.\n        Long:\n          type: string\n          description: Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.\n        CountrySubDivisionCode:\n          type: string\n          description: Region within a country. For example, state name for USA, province name for Canada.\n    TelephoneNumber:\n      type: object\n      description: Telephone number\n      properties:\n        FreeFormNumber:\n          type: string\n          description: Specifies the telephone number in free form.\n    ReferenceType:\n      type: object\n      description: Reference type\n      properties:\n        value:\n          type: string\n          description: The ID for the referenced object as found in the Id field of the object payload. \n            The context is set by the type of reference and is specific to the QuickBooks company file.\n        name:\n          type: string\n          description: An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. \n            This varies by context and specific type of object referenced. \n            For example, references to a Customer object use Customer.DisplayName to populate this field. \n            Optionally returned in responses, implementation dependent.\n    ModificationMetaData:\n      type: object\n      description: Modification metadata\n      properties:\n        CreateTime:\n          type: string\n          description: Time the entity was created in the source domain. \n        LastUpdatedTime:\n          type: string  \n          description: Time the entity was last updated in the source domain.\n    WebSiteAddress:\n      type: object\n      description: Website address\n      properties:\n        URI:\n          type: string\n          description: Uniform Resource Identifier for the web site.\n    CustomerResponse:\n      type: object\n      properties: \n        Customer:\n          $ref: '#/components/schemas/Customer'\n    CustomerCreateObject:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. \n            As soon as an application modifies an object, its SyncToken is incremented. \n            Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.\n        DisplayName:\n          type: string\n          description: The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects.\n            Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating customer name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.\n        Title:\n          type: string\n          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        GivenName:\n          type: string\n          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        MiddleName:\n          type: string\n          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        Suffix:\n          type: string\n          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        FamilyName:\n          type: string\n          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        PrimaryEmailAddr:\n          description: Primary email address. \n          $ref: '#/components/schemas/EmailAddress'\n        ResaleNum:\n          type: string\n          description: Resale number or some additional info about the customer.\n        SecondaryTaxIdentifier:\n          type: string\n          description: Also called UTR No. in ( UK ) , CST Reg No. ( IN ) also represents the tax registration number of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.\n        ARAccountRef:\n          type: object\n          description: Identifies the accounts receivable account to be used for this customer. \n            Each customer must have his own AR account. Applicable for France companies, \n            only. Available when endpoint is evoked with the minorversion=3 query parameter. \n            Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Accounts Receivable. \n            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType' \n        DefaultTaxCodeRef:\n          type: object\n          description: Reference to a default tax code associated with this Customer object. \n            Reference is valid if Customer.Taxable is set to true; otherwise, it is ignored. \n            If automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the default tax code is set by the system and can not be overridden. \n            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. \n            Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.   \n          $ref: '#/components/schemas/ReferenceType'\n        PreferredDeliveryMethod:\n          type: string\n          description: Preferred delivery method. Values are Print, Email, or None.\n        GSTIN:\n          type: string\n          description: GSTIN is an identification number assigned to every GST registered business.   \n        SalesTermRef:\n          type: object\n          description: Reference to a SalesTerm associated with this Customer object. \n            Query the Term name list resource to determine the appropriate Term object for this reference. \n            Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.    \n          $ref: '#/components/schemas/ReferenceType'\n        CustomerTypeRef:\n          type: object\n          $ref: '#/components/schemas/CustomerTypeRefType'\n        Fax:\n          type: object\n          description: Fax number.\n          $ref: '#/components/schemas/TelephoneNumber'\n        BillWithParent:\n          type: boolean\n          description: If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.\n        Mobile:\n          type: object\n          description: Primary phone number. \n          $ref: '#/components/schemas/TelephoneNumber'\n        PrimaryPhone:\n          type: object\n          description: Mobile phone number.\n          $ref: '#/components/schemas/TelephoneNumber'\n        AlternatePhone:\n          type: object\n          description: Alternate phone number.\n          $ref: '#/components/schemas/TelephoneNumber'\n        MetaData:\n          type: object\n          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.  \n          $ref: '#/components/schemas/ModificationMetaData'\n        ParentRef:\n          type: object\n          description: A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list. \n            Required for the create operation if this object is a sub-customer or Job. \n            Query the Customer name list resource to determine the appropriate Customer object for this reference. \n            Use Customer.Id and Customer.DisplayName from that object for ParentRef.value and ParentRef.name, respectively.     \n          $ref: '#/components/schemas/ReferenceType'\n        WebAddr:\n          type: object\n          description: Website address. \n          $ref: '#/components/schemas/WebSiteAddress'\n        ShipAddr: \n          description: Default shipping address. \n            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and company name.\n            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        PaymentMethodRef:\n          type: object\n          description: Reference to a PaymentMethod associated with this Customer object. \n            Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. \n            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.      \n          $ref: '#/components/schemas/ReferenceType'\n        BillAddr:\n          description: Default billing address. \n            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and company name.\n            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        Job:\n          type: boolean\n          description: If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.\n        BalanceWithJobs:\n          type: number\n          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.\n        OpenBalanceDate:\n          type: string\n          description: Date of the Open Balance for the create operation. Write-on-create.\n        Taxable:\n          type: boolean\n          description: If true, transactions for this customer are taxable. Default behavior with minor version 10 and above- true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.\n        Notes:\n          type: string\n          description: Free form text describing the Customer.\n        Active:\n          type: boolean\n          description: If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.\n        CompanyName:\n          type: string\n          description: The name of the company associated with the person or organization.\n        Balance:\n          type: number\n          description: Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.\n        Source:\n          type: string\n          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include  QBCommerce\n        PrimaryTaxIdentifier:\n          type: string\n          description: Also called Tax Reg. No in ( UK ) , ( CA ) , ( IN ) , ( AU ) represents the tax ID of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.\n        GSTRegistrationType:\n          type: string\n          description: For the filing of GSTR, transactions need to be classified depending on the type of customer to whom the sale is done. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-\n            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).\n            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.\n            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.\n            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.\n            OVERSEAS Overseas. Customer who has a business which is located out of India.\n            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.\n            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.\n        PrintOnCheckName:\n          type: string\n          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints- Cannot be removed with sparse update.\n        Level:\n          type: integer\n          description: Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent. Constraints:up to 5 levels\n        TaxExemptionReasonId:\n          type: string\n          description: The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company. Set TaxExemptionReasonId to one of the following-\n            - Id \tReason\n            1.  Federal government\n            2. \tState government\n            3. \tLocal government\n            4. \tTribal government\n            5. \tCharitable organization\n            6. \tReligious organization\n            7. \tEducational organization\n            8. \tHospital\n            9.\tResale\n            10. Direct pay permit\n            11. Multiple points of use\n            12. Direct mail\n            13. Agricultural production\n            14. Industrial production / manufacturing\n            15. Foreign diplomat \n    CustomerTypeRefType:\n      type: object\n      description: \u003e-\n        Reference to the customer type assigned to a customer. This field is\n        only returned if the customer is assigned a customer type.\n      properties:\n        value:\n          type: string\n          description: \u003e-\n            The unique numeric Id of the customer type. This maps to the\n            CustomerType entity- CustomerType.Id.   \n    Customer:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. \n            As soon as an application modifies an object, its SyncToken is incremented. \n            Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.\n        DisplayName:\n          type: string\n          description: The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects.\n            Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating customer name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.\n        Title:\n          type: string\n          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        GivenName:\n          type: string\n          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        MiddleName:\n          type: string\n          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        Suffix:\n          type: string\n          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        FamilyName:\n          type: string\n          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.\n        PrimaryEmailAddr:\n          description: Primary email address. \n          $ref: '#/components/schemas/EmailAddress'\n        ResaleNum:\n          type: string\n          description: Resale number or some additional info about the customer.\n        SecondaryTaxIdentifier:\n          type: string\n          description: Also called UTR No. in ( UK ) , CST Reg No. ( IN ) also represents the tax registration number of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.\n        ARAccountRef:\n          type: object\n          description: Identifies the accounts receivable account to be used for this customer. \n            Each customer must have his own AR account. Applicable for France companies, \n            only. Available when endpoint is evoked with the minorversion=3 query parameter. \n            Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Accounts Receivable. \n            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType' \n        DefaultTaxCodeRef:\n          type: object\n          description: Reference to a default tax code associated with this Customer object. \n            Reference is valid if Customer.Taxable is set to true; otherwise, it is ignored. \n            If automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the default tax code is set by the system and can not be overridden. \n            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. \n            Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.   \n          $ref: '#/components/schemas/ReferenceType'\n        PreferredDeliveryMethod:\n          type: string\n          description: Preferred delivery method. Values are Print, Email, or None.\n        GSTIN:\n          type: string\n          description: GSTIN is an identification number assigned to every GST registered business.   \n        SalesTermRef:\n          type: object\n          description: Reference to a SalesTerm associated with this Customer object. \n            Query the Term name list resource to determine the appropriate Term object for this reference. \n            Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.    \n          $ref: '#/components/schemas/ReferenceType'\n        CustomerTypeRef:\n          type: object\n          $ref: '#/components/schemas/CustomerTypeRefType'\n        Fax:\n          type: object\n          description: Fax number.\n          $ref: '#/components/schemas/TelephoneNumber'\n        BillWithParent:\n          type: boolean\n          description: If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.\n        Mobile:\n          type: object\n          description: Primary phone number. \n          $ref: '#/components/schemas/TelephoneNumber'\n        PrimaryPhone:\n          type: object\n          description: Mobile phone number.\n          $ref: '#/components/schemas/TelephoneNumber'\n        AlternatePhone:\n          type: object\n          description: Alternate phone number.\n          $ref: '#/components/schemas/TelephoneNumber'\n        MetaData:\n          type: object\n          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.  \n          $ref: '#/components/schemas/ModificationMetaData'\n        ParentRef:\n          type: object\n          description: A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list. \n            Required for the create operation if this object is a sub-customer or Job. \n            Query the Customer name list resource to determine the appropriate Customer object for this reference. \n            Use Customer.Id and Customer.DisplayName from that object for ParentRef.value and ParentRef.name, respectively.     \n          $ref: '#/components/schemas/ReferenceType'\n        WebAddr:\n          type: object\n          description: Website address. \n          $ref: '#/components/schemas/WebSiteAddress'\n        ShipAddr: \n          description: Default shipping address. \n            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and company name.\n            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        PaymentMethodRef:\n          type: object\n          description: Reference to a PaymentMethod associated with this Customer object. \n            Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. \n            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.      \n          $ref: '#/components/schemas/ReferenceType'\n        BillAddr:\n          description: Default billing address. \n            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-\n            Line1 and Line2 elements are populated with the customer name and company name.\n            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.\n          $ref: '#/components/schemas/PhysicalAddress'\n        Job:\n          type: boolean\n          description: If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.\n        BalanceWithJobs:\n          type: number\n          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.\n        OpenBalanceDate:\n          type: string\n          description: Date of the Open Balance for the create operation. Write-on-create.\n        Taxable:\n          type: boolean\n          description: If true, transactions for this customer are taxable. Default behavior with minor version 10 and above- true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.\n        Notes:\n          type: string\n          description: Free form text describing the Customer.\n        Active:\n          type: boolean\n          description: If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.\n        CompanyName:\n          type: string\n          description: The name of the company associated with the person or organization.\n        Balance:\n          type: number\n          description: Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.\n        IsProject:\n          type: boolean\n          description: If true, indicates this is a Project.\n        Source:\n          type: string\n          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include  QBCommerce\n        PrimaryTaxIdentifier:\n          type: string\n          description: Also called Tax Reg. No in ( UK ) , ( CA ) , ( IN ) , ( AU ) represents the tax ID of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.\n        GSTRegistrationType:\n          type: string\n          description: For the filing of GSTR, transactions need to be classified depending on the type of customer to whom the sale is done. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-\n            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).\n            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.\n            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.\n            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.\n            OVERSEAS Overseas. Customer who has a business which is located out of India.\n            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.\n            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.\n        PrintOnCheckName:\n          type: string\n          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints- Cannot be removed with sparse update.\n        FullyQualifiedName:\n          type: string\n          description: Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels.\n        Level:\n          type: integer\n          description: Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent. Constraints:up to 5 levels\n        TaxExemptionReasonId:\n          type: string\n          description: The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company. Set TaxExemptionReasonId to one of the following-\n            - Id \tReason\n            1.  Federal government\n            2. \tState government\n            3. \tLocal government\n            4. \tTribal government\n            5. \tCharitable organization\n            6. \tReligious organization\n            7. \tEducational organization\n            8. \tHospital\n            9.\tResale\n            10. Direct pay permit\n            11. Multiple points of use\n            12. Direct mail\n            13. Agricultural production\n            14. Industrial production / manufacturing\n            15. Foreign diplomat  \n\n    Bill:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        VendorRef:\n          type: object\n          description: Reference to the vendor for this transaction. \n            Query the Vendor name list resource to determine the appropriate Vendor object for this reference. \n            Use Vendor.Id and Vendor.Name from that object for VendorRef.value and VendorRef.name, respectively.  \n          $ref: '#/components/schemas/ReferenceType'\n        Line:\n          type: array\n          description: Individual line items of a transaction. Valid Line types include- ItemBasedExpenseLine and AccountBasedExpenseLine\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ItemBasedExpenseLine'\n              - $ref: '#/components/schemas/AccountBasedExpenseLine'\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. \n            - As soon as an application modifies an object, its SyncToken is incremented. \n            - Attempts to modify an object specifying an older SyncToken fails. \n            - Only the latest version of the object is maintained by QuickBooks Online.\n        CurrencyRef:\n          type: object\n          description: Reference to the currency in which all amounts on the associated transaction are expressed. \n            - This must be defined if multicurrency is enabled for the company. \n            - Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. \n            - Read more about multicurrency support here. Required if multicurrency is enabled for the company.\n          $ref: '#/components/schemas/CurrencyRefType'\n        TxnDate:\n          type: string\n          description: The date entered by the user when this transaction occurred. \n            - For posting transactions, this is the posting date that affects the financial statements. \n            - If the date is not supplied, the current date on the server is used.\n            - Sort order is ASC by default. \n        APAccountRef:\n          type: object\n          description: Specifies to which AP account the bill is credited. Query the Account name list resource to determine the appropriate Account object for this reference. \n            - Use Account.Id and Account.Name from that object for APAccountRef.value and APAccountRef.name, respectively. \n            - The specified account must have Account.Classification set to Liability and Account.AccountSubType set to AccountsPayable. \n            - If the company has a single AP account, the account is implied. However, it is recommended that the AP Account be explicitly specified in all cases to prevent unexpected errors when relating transactions to each other. \n          $ref: '#/components/schemas/ReferenceType'\n        SalesTermRef:\n          type: object\n          description: Reference to the Term associated with the transaction. \n            - Query the Term name list resource to determine the appropriate Term object for this reference. \n            - Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.\n          $ref: '#/components/schemas/ReferenceType'\n        LinkedTxn:\n          type: array\n          description: Zero or more transactions linked to this Bill object. The LinkedTxn.TxnType can be set to PurchaseOrder, BillPaymentCheck or if using Minor Version 55 and above ReimburseCharge. Use LinkedTxn.TxnId as the ID of the transaction.\n          items:\n            $ref: '#/components/schemas/LinkedTxn'\n        GlobalTaxCalculation:\n          type: string\n          description: Method in which tax is applied. Allowed values are- TaxExcluded, TaxInclusive, and NotApplicable.\n          enum:\n            - \"\"\n        TotalAmt:\n          type: number\n          description: Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.\n        TransactionLocationType:\n          type: string\n          description: The account location. Valid values include-\n              - WithinFrance\n              - FranceOverseas\n              - OutsideFranceWithEU\n              - OutsideEU\n            * For France locales, only.\n        DueDate:\n          type: string\n          description: Date when the payment of the transaction is due. \n            If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used. \n        MetaData:\n          type: object\n          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. \n          $ref: '#/components/schemas/ModificationMetaData'\n        DocNumber:\n          type: string\n          description: Reference number for the transaction. If not explicitly provided at create time, a custom value can be provided. \n            - If no value is supplied, the resulting DocNumber is null. Throws an error when duplicate DocNumber is sent in the request. \n            - Recommended best practice- check the setting of Preferences:OtherPrefs before setting DocNumber. \n            - If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, include=allowduplicatedocnum to the URI. \n            - Sort order is ASC by default.\n        PrivateNote:\n          type: string\n          description: User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. \n            This field maps to the Memo field on the Invoice form.\n        TxnTaxDetail:\n          type: object\n          description: This data type provides information for taxes charged on the transaction as a whole. \n            - It captures the details of all taxes calculated for the transaction based on the tax codes referenced by the transaction. \n            - This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. \n            - If sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false) then TxnTaxDetail is ignored and not stored.\n          ###########\n        ExchangeRate:\n          type: number\n          description: The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company.\n        DepartmentRef:\n          type: object\n          description: A reference to a Department object specifying the location of the transaction, as defined using location tracking in QuickBooks Online. \n            Query the Department name list resource to determine the appropriate department object for this reference. \n            Use Department.Id and Department.Name from that object for DepartmentRef.value and DepartmentRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType'\n        IncludeInAnnualTPAR:\n          type: boolean\n          description: Include the supplier in the annual TPAR. TPAR stands for Taxable Payments Annual Report. \n            The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. \n            Some government entities also need to report the grants they have paid in a TPAR.\n        HomeBalance:\n          type: number\n          description: Convenience field containing the amount in Balance expressed in terms of the home currency. \n            Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified and available when endpoint is evoked with the minorversion=3 query parameter. \n            Applicable if multicurrency is enabled for the company.\n        RecurDataRef:\n          type: object\n          description: A reference to the Recurring Transaction. It captures what recurring transaction template the Bill was created from.\n          $ref: '#/components/schemas/ReferenceType'\n        Balance:\n          type: number\n          description: The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. \n            A Balance of 0 indicates the bill is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.\n    LinkedTxn:\n      type: object\n      properties:\n        TxnId:\n          type: string\n          description: Transaction Id of the related transaction.\n        TxnType: \n          type: string\n          description: Transaction type of the linked object.\n        TxnLineId:\n          type: string\n          description: Required for Deposit and Bill entities. \n            -The line number of a specific line of the linked transaction. \n            - If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.\n    AccountBasedExpenseLine:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: The Id of the line item. Its use in requests is as folllows -\n            - If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.\n            - If no Id is provided, the Idprovided is less than or equal to zero, or the Idprovided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.\n            - Available in all objects that use lines and support the update operation.\n        Amount:\n          type: number\n          description: The amount of the line item.\n        DetailType:\n          type: string\n          description: Set to AccountBasedExpenseLineDetailfor this type of line.\n          enum:\n            - \"\"\n        AccountBasedExpenseLineDetail:\n          $ref: '#/components/schemas/AccountBasedExpenseLineDetail'\n        LinkedTxn:\n          type: array\n          description: Zero or more PurchaseOrder transactions linked to this Bill object. \n            The LinkedTxn.TxnType should always be set to PurchaseOrder. Use LinkedTxn.TxnId as the ID of the PurchaseOrder. \n            When updating an existing Bill to link to a PurchaseOrder a new Line must be created. \n            This behavior matches the QuickBooks UI as it does not allow the linking of an existing line, but rather a new line must be added to link the PurchaseOrder. Over the API this is achieved by simply updating the Bill Line.Id to something new. This will ensure old bill line is deleted and the new line is linked to the PurchaseOrder.\n          items:\n            $ref: '#/components/schemas/LinkedTxn'\n        Description:\n          type: string\n          description: Free form text description of the line item that appears in the printed record.\n        LineNum:\n          type: number\n          description: Specifies the position of the line in the collection of transaction lines. Positive Integer.\n    AccountBasedExpenseLineDetail:\n      type: object\n      description: ItemBasedExpenseLineDetail\n      properties:\n        TaxInclusiveAmt:\n          type: number\n          description: The total amount of the line item including tax. Constraints- Available when endpoint is evoked with the minorversion=1query parameter.\n        TaxAmount:\n          type: number\n          description: Sales tax paid as part of the expense.\n        AccountRef:\n          type: object\n          description: Reference to the Expense account associated with this item. \n            Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Expense. Use Account.Id and Account.Name from that object for AccountRef.value and AccountRef.name, respectively. \n            For France locales- The account associated with the referenced Account object is looked up in the account category list.\n            If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then this account is used.\n            If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.\n            If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.\n          properties:\n            value:\n              type: string\n              description: The ID for the referenced object as found in the Id field of the object payload. \n                The context is set by the type of reference and is specific to the QuickBooks company file.\n            name:\n              type: string\n              description: An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. \n                This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. \n                Optionally returned in responses, implementation dependent.\n        CustomerRef:\n          type: object\n          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. \n            Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType'\n        PriceLevelRef:\n          type: object\n          description: Reference to the PriceLevel of the service or item for the line. Support for this element will be available in the coming months.\n          $ref: '#/components/schemas/ReferenceType'\n        ClassRef:\n          type: object\n          description: Reference to the Class associated with the expense. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerLine is set to true. \n            Query the Class name list resource to determine the appropriate Class object for this reference. \n            Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType'\n        TaxCodeRef:\n          type: object\n          description: Reference to the TaxCodefor this item. \n            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. \n            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType'\n        MarkupInfo:\n          type: object\n          description: Reference to the TaxCodefor this item. \n            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. \n            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.\n        BillableStatus:\n          type: string\n          description: The billable status of the expense. Valid values- Billable, NotBillable, HasBeenBilled\n    ItemBasedExpenseLine:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: The Id of the line item. Its use in requests is as folllows -\n            - If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.\n            - If no Id is provided, the Idprovided is less than or equal to zero, or the Idprovided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.\n            - Available in all objects that use lines and support the update operation.\n        Amount:\n          type: number\n          description: The amount of the line item.\n        DetailType:\n          type: string\n          description: Set to ItemBasedExpenseLineDetail for this type of line.\n          enum:\n            - \"\"\n        ItemBasedExpenseLineDetail:\n          $ref: '#/components/schemas/ItemBasedExpenseLineDetail'\n        LinkedTxn:\n          type: array\n          description: Zero or more PurchaseOrder transactions linked to this Bill object. \n            The LinkedTxn.TxnType should always be set to PurchaseOrder. Use LinkedTxn.TxnId as the ID of the PurchaseOrder. \n            When updating an existing Bill to link to a PurchaseOrder a new Line must be created. \n            This behavior matches the QuickBooks UI as it does not allow the linking of an existing line, but rather a new line must be added to link the PurchaseOrder. Over the API this is achieved by simply updating the Bill Line.Id to something new. This will ensure old bill line is deleted and the new line is linked to the PurchaseOrder.\n          items:\n            $ref: '#/components/schemas/LinkedTxn'\n        Description:\n          type: string\n          description: Free form text description of the line item that appears in the printed record.\n        LineNum:\n          type: number\n          description: Specifies the position of the line in the collection of transaction lines. Positive Integer.\n    ItemBasedExpenseLineDetail:\n      type: object\n      description: Item Based Expense Line Detail\n      properties:\n        TaxInclusiveAmt:\n          type: number\n          description: The total amount of the line item including tax. Constraints- Available when endpoint is evoked with the minorversion=1query parameter.\n        ItemRef:\n          type: object\n          description: Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. \n            - Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.\n            - When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. \n            - For France locales- The account associated with the referenced Item object is looked up in the account category list.\n            - If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.\n            - If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.\n            - If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.\n          $ref: '#/components/schemas/ReferenceType'\n        CustomerRef:\n          type: object\n          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. \n            Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType'\n        PriceLevelRef:\n          type: object\n          description: Reference to the PriceLevel of the service or item for the line. Support for this element will be available in the coming months.\n          $ref: '#/components/schemas/ReferenceType'\n        ClassRef:\n          type: object\n          description: Reference to the Class associated with the expense. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerLine is set to true. \n            Query the Class name list resource to determine the appropriate Class object for this reference. \n            Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType'\n        TaxCodeRef:\n          type: object\n          description: Reference to the TaxCodefor this item. \n            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. \n            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. \n          $ref: '#/components/schemas/ReferenceType'\n        MarkupInfo:\n          type: object\n          description: Reference to the TaxCodefor this item. \n            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. \n            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.\n        BillableStatus:\n          type: string\n          description: The billable status of the expense. Valid values- Billable, NotBillable, HasBeenBilled\n        Qty:\n          type: number\n          description: Number of items for the line.\n        UnitPrice:\n          type: number\n          description: Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.\n    AccountResponse:\n      type: object\n      properties:\n        Account:\n          $ref: '#/components/schemas/Account'\n    Account:\n      type: object\n      properties:\n        Id:\n          type: string\n          description: Unique identifier for this object. Sort order is ASC by default.\n        Name:\n          type: string \n          description: User recognizable name for the Account. Account.Name attribute must not contain double quotes (\") or colon (:).\n        SyncToken:\n          type: string\n          description: Version number of the object. It is used to lock an object for use by one app at a time. \n            - As soon as an application modifies an object, its SyncToken is incremented. \n            - Attempts to modify an object specifying an older SyncToken fails. \n            - Only the latest version of the object is maintained by QuickBooks Online.\n        AcctNum:\n          type: string   \n          description: User-defined account number to help the user in identifying the account within the chart-of-accounts and in deciding what should be posted to the account. \n            The Account.AcctNum attribute must not contain colon (:).\n            * Name must be unique.\n            * For French Locales -\n              - Length must be between 6 and 20 characters\n              - Must start with the account number from the master category list.\n              - Name limited to alpha-numeric characters.\n            * Max length for Account.AcctNum -\n              - AU \u0026 CA- 20 characters.\n              - US, UK \u0026 IN- 7 characters\n        CurrencyRef:\n          type: object\n          description: Reference to the currency in which this account holds amounts.\n          $ref: '#/components/schemas/CurrencyRefType'\n        ParentRef:\n          type: object\n          description: Specifies the Parent AccountId if this represents a SubAccount. \n          properties:\n            value:\n              type: string\n              description: The ID for the referenced object as found in the Id field of the object payload. \n               - The context is set by the type of reference and is specific to the QuickBooks company file.\n            name:\n              type: string  \n              description: An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. \n               - This varies by context and specific type of object referenced. \n               - For example, references to a Customer object use Customer.DisplayName to populate this field. \n               - Optionally returned in responses, implementation dependent.           \n        Description:\n          type: string\n          description: User entered description for the account, which may include user entered information to guide bookkeepers/accountants in deciding what journal entries to post to the account.\n        Active:\n          type: boolean \n          description: Whether or not active inactive accounts may be hidden from most display purposes and may not be posted to.\n        MetaData:\n          type: object\n          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.\n          $ref: '#/components/schemas/ModificationMetaData'\n        SubAccount:\n          type: boolean \n          description: Specifies whether this object represents a parent (false) or subaccount (true). \n            - Note that accounts of these types - OpeningBalanceEquity, UndepositedFunds, RetainedEarnings, CashReceiptIncome, CashExpenditureExpense, ExchangeGainOrLoss cannot have a sub account and cannot be a sub account of another account.\n        Classification:\n          type: string\n          description: The classification of an account. Not supported for non-posting accounts. \n            - Valid values include- Asset, Equity, Expense, Liability, Revenue\n        FullyQualifiedName:\n          type: string\n          description: Fully qualified name of the object; derived from Name and ParentRef. \n            - The fully qualified name prepends the topmost parent, followed by each subaccount separated by colons and takes the form of Parent:Account1:SubAccount1:SubAccount2. System generated. Limited to 5 levels.\n        TxnLocationType:\n          type: string\n          description: The account location. \n            * Valid values include\n              - WithinFrance\n              - FranceOverseas\n              - OutsideFranceWithEU\n              - OutsideEU\n            * For France locales, only.\n        AccountType:\n          type: string\n          description: A detailed account classification that specifies the use of this account. The type is based on the Classification. \n          enum:\n            - \"\"\n        CurrentBalanceWithSubAccounts:\n          type: number\n          description: Specifies the cumulative balance amount for the current Account and all its sub-accounts.\n        AccountAlias:\n          type: string\n          description: A user friendly name for the account. \n           - It must be unique across all account categories. \n           - For example, if an account is created under category 211 with AccountAlias of Terrains, then the system does not allow creation of an account with same AccountAlias of Terrains for any other category except 211. \n           - In other words, 211001 and 215001 accounts cannot have same AccountAlias because both belong to different account category.\n           - For France locales, only. \n        TaxCodeRef:\n          type: object\n          description: Reference to the default tax code used by this account. Tax codes are referenced by the TaxCode.\n            - Id in the TaxCode object. \n            - Available when endpoint is invoked with the minorversion=3 query parameter. For global locales, only.   \n          $ref: '#/components/schemas/ReferenceType'\n        AccountSubType:\n          type: string\n          description: The account sub-type classification and is based on the AccountType value. \n          enum:\n            - \"\"\n        CurrentBalance:\n          type: number\n          description: Specifies the balance amount for the current Account. Valid for Balance Sheet accounts.\n    AccountCreateObject:\n      type: object\n      properties:\n        Name:\n          type: string\n          description: User recognizable name for the Account. \n            Account.Name attribute must not contain double quotes (\") or colon (:).\n        AcctNum:\n          type: string\n          description: User-defined account number to help the user in identifying the account within the chart-of-accounts and in deciding what should be posted to the account. \n              The Account.AcctNum attribute must not contain colon (:). \n              For France locales:Name must be unique.\n              Length must be between 6 and 20 characters.\n              Must start with the account number from the master category list.\n              Name limited to alpha-numeric characters.\n              Required for France locales.\n        TaxCodeRef:\n          type: string\n          description: Reference to the default tax code used by this account. \n            Tax codes are referenced by the TaxCode.\n            Id in the TaxCode object. \n            Available when endpoint is invoked with the minorversion=3 query parameter. \n            For global locales, only. \n            Required for France locales\n        AccountType:\n          type: string\n          enum:\n            - Accounts Receivable\n          description: A detailed account classification that specifies the use of this account. The type is based on the Classification. \n        AccountSubType:\n          type: string\n          description: The account sub-type classification and is based on the AccountType value. \n      required:\n        - \"Name\"\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\nsecurity:\n  - bearerAuth: [] ",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/quickbooks.online/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/quickbooks.online/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}