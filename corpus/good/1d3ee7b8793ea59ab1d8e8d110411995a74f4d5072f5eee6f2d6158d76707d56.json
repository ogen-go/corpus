{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "smartapi.yaml",
			"size": 0,
			"path": "tcga_mut_freq/smartapi.yaml",
			"byteSize": 13648,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: help@biothings.io\n    name: BioThings Team\n    x-id: https://github.com/biothings\n    x-role: responsible developers\n  description: Documentation of the TCGA Mutation Frequency KP query web services.\n  termsOfService: https://biothings.io/about\n  title: TCGA Mutation Frequency KP API\n  version: '1.0'\n  x-translator:\n    infores: \"infores:biothings-tcga-mut-freq\"\n    component: KP\n    team:\n      - Multiomics Provider\n      - Service Provider\n    biolink-version: \"2.1.0\"\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/tcga_mut_freq_kp\n  x-maturity: production\n- description: Production server\n  url: http://biothings.ncats.io/tcga_mut_freq_kp\n  x-maturity: production\ntags:\n- name: gene\n- name: disease\n- name: association\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\n- name: biothings_graph\npaths:\n  /association:\n    post:\n      # parameters:\n      # - $ref: '#/components/parameters/dotfield'\n      #   name: dotfield\n      # - $ref: '#/components/parameters/fields'\n      #   name: fields\n      # - $ref: '#/components/parameters/email'\n      #   name: email\n      # - $ref: '#/components/parameters/format'\n      #   name: format\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                ids:\n                  description: 'multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.'\n                  type: string\n              required:\n              - ids\n      responses:\n        '200':\n          # content:\n          #   application/json:\n          #     schema:\n          #       items:\n          #         $ref: '#/components/schemas/Association'\n          #       type: array\n          description: A list of matching association objects\n        '400':\n          # content:\n          #   application/json:\n          #     schema:\n          #       $ref: '#/components/schemas/ErrorResult'\n          description: A response indicating an improperly formatted query\n      summary: For a list of association IDs, return the matching disease object\n      tags:\n      - association\n  /association/{associationid}:\n    get:\n      parameters:\n      - description: Retrieve association objects based on Association ID  Supports\n          JSONP and CORS as well.\n        example: NRAS-TCGA-LUAD\n        in: path\n        name: associationid\n        required: true\n        schema:\n          type: string\n      # - $ref: '#/components/parameters/dotfield'\n      #   name: dotfield\n      # - $ref: '#/components/parameters/callback'\n      #   name: callback\n      # - $ref: '#/components/parameters/fields'\n      #   name: fields\n      # - $ref: '#/components/parameters/email'\n      #   name: email\n      # - $ref: '#/components/parameters/format'\n      #   name: format\n      responses:\n        '200':\n          # content:\n          #   application/json:\n          #     schema:\n          #       $ref: '#/components/schemas/Association'\n          description: A matching association object\n        '404':\n          description: A response indicating an unknown association ID\n      summary: Retrieve association objects based on ID\n      tags:\n      - association\n  /metadata:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/callback'\n        in: query\n        name: callback\n      responses:\n        '200':\n          description: KP metadata object\n      summary: Get metadata about the data available from the API\n      tags:\n      - metadata\n  /metadata/fields:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/search'\n        name: search\n      - $ref: '#/components/parameters/callback'\n        name: callback\n      - $ref: '#/components/parameters/prefix'\n        name: prefix\n      - $ref: '#/components/parameters/format'\n        name: format\n      responses:\n        '200':\n          description: metadata fields object\n      summary: Get metadata about the data fields available\n      tags:\n      - metadata\n  /query:\n    get:\n      parameters:\n      - description: Query string.\n        example: object.MONDO:\"MONDO:0005061\"\n        in: query\n        name: q\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/dotfield'\n        name: dotfield\n      - $ref: '#/components/parameters/fields'\n        name: fields\n      - $ref: '#/components/parameters/facet_size'\n        name: facet_size\n      - $ref: '#/components/parameters/sort'\n        name: sort\n      - $ref: '#/components/parameters/callback'\n        name: callback\n      - $ref: '#/components/parameters/email'\n        name: email\n      - $ref: '#/components/parameters/facets'\n        name: facets\n      - $ref: '#/components/parameters/size'\n        name: size\n      - $ref: '#/components/parameters/from'\n        name: from\n      - $ref: '#/components/parameters/format'\n        name: format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResult'\n          description: A query response with the \"hits\" property\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n          description: A response indicating an improperly formatted query\n      summary: Make queries and return matching association hits. Supports JSONP and CORS\n        as well.\n      tags:\n      - query\n      x-bte-kgs-operations:\n      - $ref: '#/components/x-bte-kgs-operations/disease-gene'\n      - $ref: '#/components/x-bte-kgs-operations/gene-disease'\n    post:\n      parameters:\n      - $ref: '#/components/parameters/dotfield'\n        name: dotfield\n      - $ref: '#/components/parameters/email'\n        name: email\n      - $ref: '#/components/parameters/fields'\n        name: fields\n      - $ref: '#/components/parameters/size'\n        name: size\n      - $ref: '#/components/parameters/format'\n        name: format\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                q:\n                  description: multiple query terms separated by comma (also \"+\" or\n                    whitespace).  Does not support wildcard queries\n                  type: string\n                scopes:\n                  description: 'a comma-separated list of fields as the search \"scopes\"\n                    (fields to search through for query term). The available \"fields\"\n                    that can be passed to the \"scopes\" parameter are listed in the\n                    **/metadata/fields** endpoint.string Default: \"scopes=_id\".'\n                  type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryPOSTResult'\n          description: Query response objects with the \"hits\" property\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResult'\n          description: A response indicating an improperly formatted query\n      summary: Make batch disease queries and return matching disease hits\n      tags:\n      - query\ncomponents:\n  parameters:\n    callback:\n      description: 'you can pass a \"callback\" parameter to make a JSONP call. Type:\n        string.'\n      in: query\n      name: callback\n      schema:\n        type: string\n    dotfield:\n      description: 'control the format of the returned chem object. If \"true\" or \"1\",\n        all fields will be collapsed into a single level deep object (all nested objects\n        will be a single level deep, using dotfield notation to signify the nested\n        structure) Type: boolean. Default: false.'\n      in: query\n      name: dotfield\n      schema:\n        type: boolean\n    email:\n      description: If you are regular users of our services, we encourage you to provide\n        us with an email, so that we can better track the usage or follow up with\n        you.\n      in: query\n      name: email\n      schema:\n        type: string\n    facet_size:\n      description: 'the number of facet buckets to return in the response. Type: integer.\n        Default: 10. Max: 1000.'\n      in: query\n      name: facet_size\n      schema:\n        type: integer\n    facets:\n      description: 'a comma-separated list of fields to return facets on.  In addition\n        to query hits, the fields notated in \"facets\" will be aggregated by value\n        and bucklet counts will be displayed in the \"facets\" field of the response\n        object. Type: string (list). Default: None. Max: 1000.'\n      in: query\n      name: facets\n      schema:\n        type: string\n    fields:\n      description: 'a comma-separated list of fields (in dotfield notation) used to\n        limit the fields returned from the matching chem hit(s). The supported field\n        names can be found from any chem object or from the /metadata/fields endpoint.\n        If \"fields=all\", all available fields will be returned. Type: string (list).\n        Default: all. Max: 1000.'\n      in: query\n      name: fields\n      schema:\n        type: string\n    format:\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      name: format\n      schema:\n        type: string\n    from:\n      description: 'the number of matching chem hits to skip, starting from 0.  This\n        can be useful for paging in combination with the \"size\" parameter. Type: integer.\n        Default: None.'\n      in: query\n      name: from\n      schema:\n        type: integer\n    prefix:\n      description: 'Pass a prefix string to filter the available fields. Type: string.\n        Default: None.'\n      in: query\n      name: prefix\n      schema:\n        type: string\n    search:\n      description: 'Pass a search term to filter the available fields. Type: string.\n        Default: None.'\n      in: query\n      name: search\n      schema:\n        type: string\n    size:\n      description: 'the maximum number of matching chem hits to return per batch.\n        Type: integer. Default: 10.'\n      in: query\n      name: size\n      schema:\n        type: integer\n    sort:\n      description: 'the comma-separated list of fields to sort on. Prefix each with\n        \"-\" for descending order, otherwise in ascending order. Default: sort by descending\n        score.'\n      in: query\n      name: sort\n      schema:\n        type: string\n  schemas:\n    Association:\n      properties:\n        _id:\n          type: string\n      required:\n      - _id\n      type: object\n    ErrorResult:\n      properties:\n        message:\n          type: string\n        success:\n          type: boolean\n      type: object\n    QueryPOSTResult:\n      items:\n        allOf:\n        - $ref: '#/components/schemas/Association'\n        - properties:\n            _score:\n              format: float\n              type: number\n            query:\n              type: string\n          type: object\n      type: array\n    QueryResult:\n      properties:\n        hits:\n          items:\n            $ref: '#/components/schemas/Association'\n          type: array\n        max_score:\n          format: float\n          type: number\n        took:\n          type: integer\n        total:\n          type: integer\n      type: object\n    int64_or_array:\n      oneOf:\n      - items:\n          format: int64\n          type: integer\n        type: array\n      - format: int64\n        type: integer\n    string_or_array:\n      oneOf:\n      - items:\n          type: string\n        type: array\n      - type: string\n  x-bte-kgs-operations:\n    disease-gene:\n    - inputs:\n      - id: MONDO\n        semantic: Disease\n      outputs:\n      - id: SYMBOL\n        semantic: Gene\n      parameters:\n        fields: association.freq_by_sample,subject.SYMBOL\n        q: 'object.id:\"{inputs[0]}\" AND association.freq_by_sample:\u003e0.1'\n        sort: \"-association.freq_by_sample\"\n        size: '1000'\n      ## gene_has_variant_that_contributes_to_disease_association not in biolink, but nothing in biolink is as specific. The closest is condition_associated_with_gene\n      predicate: condition_associated_with_gene\n      response_mapping:\n        $ref: '#/components/x-bte-response-mapping/disease-gene'\n      ## note that this is a data source\n      source: \"infores:tgca\"\n      supportBatch: false\n    gene-disease:\n    - inputs:\n      - id: SYMBOL\n        semantic: Gene\n      outputs:\n      - id: MONDO\n        semantic: Disease\n      parameters:\n        fields: association.freq_by_sample,object.MONDO\n        q: \"subject.SYMBOL:{inputs[0]} AND association.freq_by_sample:\u003e0.1\"\n        sort: \"-association.freq_by_sample\"\n        size: '1000'\n      ## gene_has_variant_that_contributes_to_disease_association not in biolink, but nothing in biolink is as specific. The closest is gene_associated_with_condition\n      predicate: gene_associated_with_condition \n      response_mapping:\n        $ref: '#/components/x-bte-response-mapping/gene-disease'\n      ## note that this is a data source\n      source: \"infores:tgca\"\n      supportBatch: false\n  x-bte-response-mapping:\n    disease-gene:\n      SYMBOL: hits.subject.SYMBOL\n      frequency: hits.association.freq_by_sample\n    gene-disease:\n      MONDO: hits.object.MONDO\n      frequency: hits.association.freq_by_sample\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/tcga_mut_freq/smartapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/tcga_mut_freq/smartapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}