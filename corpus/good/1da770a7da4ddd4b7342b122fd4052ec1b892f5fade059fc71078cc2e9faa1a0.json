{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/googleapis.mybusiness/openapi.yml",
			"byteSize": 329515,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://mybusiness.googleapis.com/\ninfo:\n  x-ballerina-display:\n    label: Google My Business\n    iconPath: \"icon.png\"\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: |\n    This is a generated connector for [Google My Business API v4.9](https://developers.google.com/my-business/) OpenAPI specification.\n    The Google My Business API provides an interface for managing business location information on Google.\n  x-ballerina-init-description: \u003e\n    The connector initialization doesn't require setting the API credentials. \n  \n    Create a [Google account](https://accounts.google.com/signup) and obtain tokens by following [this guide](https://developers.google.com/identity/protocols/oauth2).\n\n    Some operations may require passing the token as a parameter.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Google My Business API\n  version: v4\n  x-apisguru-categories:\n    - analytics\n    - media\n    - location\n  x-logo:\n    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n    - format: google\n      url: https://developers.google.com/my-business/samples/mybusiness_google_rest_v4p9.json\n      version: v1\n  x-providerName: googleapis.com\n  x-serviceName: my-business\nexternalDocs:\n  url: https://developers.google.com/my-business/\ntags:\n  - name: accounts\n  - name: attributes\n  - name: categories\n  - name: chains\n  - name: googleLocations\npaths:\n  /v4/accounts:\n    get:\n      summary: Lists all of the accounts for the authenticated user. This includes all accounts that the user owns, as well as any accounts for which the user has management rights.\n      operationId: list.accounts\n      parameters:\n        - description: A filter constraining the accounts to return. The response includes only entries that match the filter. If `filter` is empty, then no constraints are applied and all accounts (paginated) are retrieved for the requested account. For example, a request with the filter `type=USER_GROUP` will only return user groups.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: The resource name of the account for which the list of directly accessible accounts is to be retrieved. This only makes sense for Organizations and User Groups. If empty, will return `ListAccounts` for the authenticated user.\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: How many accounts to fetch per page. Default is 20, minimum is 2, and maximum page size is 20.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, the next page of accounts is retrieved. The `pageToken` is returned when a call to `accounts.list` returns more results than can fit into the requested page size.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListAccountsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: \"Creates an account with the specified name and type under the given parent. - Personal accounts and Organizations cannot be created. - User Groups cannot be created with a Personal account as primary owner. - Location Groups cannot be created with a primary owner of a Personal account if the Personal account is in an Organization. - Location Groups cannot own Location Groups. \"\n      operationId: create.accounts\n      parameters:\n        - description: The resource name of the account which will be the primary owner of the account being created. It should be of the form `accounts/{account_id}/`.\n          in: query\n          name: primaryOwner\n          schema:\n            type: string\n      requestBody:\n        description: Account request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Account\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n          description: Successful response\n      tags:\n        - accounts\n  /v4/attributes:\n    get:\n      summary: Returns the list of available attributes that would be available for a location with the given primary category and country.\n      operationId: list.attributes\n      parameters:\n        - description: The primary category stable ID to find available attributes.\n          in: query\n          name: categoryId\n          schema:\n            type: string\n        - description: The ISO 3166-1 alpha-2 country code to find available attributes.\n          in: query\n          name: country\n          schema:\n            type: string\n        - description: The BCP 47 code of language to get attribute display names in. If this language is not available, they will be provided in English.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: Resource name of the location to look up available attributes.\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: How many attributes to include per page. Default is 200, minimum is 1.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, the next page of attribute metadata is retrieved. The `pageToken` is returned when a call to `attributes.list` returns more results than can fit into the requested page size.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListAttributeMetadataResponse\"\n          description: Successful response\n      tags:\n        - attributes\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  /v4/categories:\n    get:\n      summary: Returns a list of business categories. Search will match the category name but not the category ID. *Note:* Search only matches the front of a category name (that is, 'food' may return 'Food Court' but not 'Fast Food Restaurant').\n      operationId: list.categories\n      parameters:\n        - description: The BCP 47 code of language. If the language is not available, it will default to English.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: How many categories to fetch per page. Default is 100, minimum is 1, and maximum page size is 100.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, the next page of categories will be fetched.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: The ISO 3166-1 alpha-2 country code.\n          in: query\n          name: regionCode\n          schema:\n            type: string\n        - description: Optional filter string from user.\n          in: query\n          name: searchTerm\n          schema:\n            type: string\n        - description: Optional. Specifies which parts to the Category resource should be returned in the response.\n          in: query\n          name: view\n          schema:\n            enum:\n              - CATEGORY_VIEW_UNSPECIFIED\n              - BASIC\n              - FULL\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListBusinessCategoriesResponse\"\n          description: Successful response\n      tags:\n        - categories\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  /v4/categories:batchGet:\n    get:\n      summary: Returns a list of business categories for the provided language and GConcept ids.\n      operationId: batchGet.categories\n      parameters:\n        - description: Required. At least one name must be set. The GConcept ids the localized category names should be returned for.\n          explode: true\n          in: query\n          name: categoryIds\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Required. The BCP 47 code of language that the category names should be returned in.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: Optional. The ISO 3166-1 alpha-2 country code used to infer non-standard language.\n          in: query\n          name: regionCode\n          schema:\n            type: string\n        - description: Required. Specifies which parts to the Category resource should be returned in the response.\n          in: query\n          name: view\n          schema:\n            enum:\n              - CATEGORY_VIEW_UNSPECIFIED\n              - BASIC\n              - FULL\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchGetBusinessCategoriesResponse\"\n          description: Successful response\n      tags:\n        - categories\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  /v4/chains:search:\n    get:\n      summary: Searches the chain based on chain name.\n      operationId: search.chains\n      parameters:\n        - description: 'Search for a chain by its name. Exact/partial/fuzzy/related queries are supported. Examples: \"walmart\", \"wal-mart\", \"walmmmart\", \"沃尔玛\"'\n          in: query\n          name: chainDisplayName\n          schema:\n            type: string\n        - description: The maximum number of matched chains to return from this query. The default is 10. The maximum possible value is 500.\n          in: query\n          name: resultCount\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchChainsResponse\"\n          description: Successful response\n      tags:\n        - chains\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  /v4/googleLocations:search:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Search all of the possible locations that are a match to the specified request.\n      operationId: search.googleLocations\n      requestBody:\n        description: SearchGoogleLocations request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SearchGoogleLocationsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchGoogleLocationsResponse\"\n          description: Successful response\n      tags:\n        - googleLocations\n  \"/v4/{name}\":\n    delete:\n      summary: Deletes a specific question written by the current user.\n      operationId: delete.accounts.locations.questions\n      parameters:\n        - description: The name of the question to delete.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - accounts\n    get:\n      summary: Gets the specified chain. Returns `NOT_FOUND` if the chain does not exist.\n      operationId: get.chains\n      parameters:\n        - description: The chain's resource name, in the format `chains/{chain_place_id}`.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Chain\"\n          description: Successful response\n      tags:\n        - chains\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    patch:\n      summary: Updates a specific question written by the current user.\n      operationId: patch.accounts.locations.questions\n      parameters:\n        - description: The name of the question to update.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The specific fields to update. If no mask is specified, then this is treated as a full update and all editable fields are set to the values passed in.\n          in: query\n          name: updateMask\n          schema:\n            type: string\n      requestBody:\n        description: Question request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Question\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Question\"\n          description: Successful response\n      tags:\n        - accounts\n    put:\n      summary: \"Sets the pubsub notification settings for the account informing My Business which topic to send pubsub notifications for: - New reviews for locations administered by the account. - Updated reviews for locations administered by the account. - New `GoogleUpdates` for locations administered by the account. An account will only have one notification settings resource, and only one pubsub topic can be set.\"\n      operationId: updateNotifications.accounts\n      parameters:\n        - description: The notification settings resource name.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Notifications request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Notifications\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notifications\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}/localPosts:reportInsights\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Returns insights for a set of local posts associated with a single listing. Which metrics and how they are reported are options specified in the request proto. *Note:* Insight reports are limited to 100 `local_post_names` per call.\n      operationId: reportInsights.accounts.locations.localPosts\n      parameters:\n        - description: Required. The name of the location for which to fetch insights.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: ReportLocalPostInsights request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReportLocalPostInsightsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReportLocalPostInsightsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}/locations:batchGet\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Gets all of the specified locations in the given account.\n      operationId: batchGet.accounts.locations\n      parameters:\n        - description: The name of the account from which to fetch locations.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: BatchGetLocations request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchGetLocationsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchGetLocationsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}/locations:batchGetReviews\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Returns the paginated list of reviews for all specified locations. This operation is only valid if the specified locations are verified. *Note:* Reviews are limited to a batch size of 200 `location_names` per call.\n      operationId: batchGetReviews.accounts.locations\n      parameters:\n        - description: The name of the account from which to retrieve a list of reviews across multiple locations.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: BatchGetReviews request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchGetReviewsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchGetReviewsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}/locations:reportInsights\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Returns a report containing insights on one or more metrics by location. *Note:* Insight reports are limited to a batch size of 10 `location_names` per call.\n      operationId: reportInsights.accounts.locations\n      parameters:\n        - description: The account resource name.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: ReportLocationInsights request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReportLocationInsightsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReportLocationInsightsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}/reply\":\n    delete:\n      summary: Deletes the response to the specified review. This operation is only valid if the specified location is verified.\n      operationId: deleteReply.accounts.locations.reviews\n      parameters:\n        - description: The name of the review reply to delete.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    put:\n      summary: Updates the reply to the specified review. A reply is created if one does not exist. This operation is only valid if the specified location is verified.\n      operationId: updateReply.accounts.locations.reviews\n      parameters:\n        - description: The name of the review to respond to.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: ReviewReply request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReviewReply\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReviewReply\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:accept\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Accepts the specified invitation.\n      operationId: accept.accounts.invitations\n      parameters:\n        - description: The name of the invitation that is being accepted.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: AcceptInvitation request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AcceptInvitationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:associate\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Associates a location to a place ID. Any previous association is overwritten. This operation is only valid if the location is unverified. The association must be valid, that is, it appears in the list of `FindMatchingLocations`.\n      operationId: associate.accounts.locations\n      parameters:\n        - description: The resource name of the location to associate.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: AssociateLocation request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssociateLocationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:clearAssociation\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Clears an association between a location and its place ID. This operation is only valid if the location is unverified.\n      operationId: clearAssociation.accounts.locations\n      parameters:\n        - description: The resource name of the location to disassociate.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: ClearLocationAssociation request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ClearLocationAssociationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:complete\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Completes a `PENDING` verification. It is only necessary for non `AUTO` verification methods. `AUTO` verification request is instantly `VERIFIED` upon creation.\n      operationId: complete.accounts.locations.verifications\n      parameters:\n        - description: Resource name of the verification to complete.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: CompleteVerification request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CompleteVerificationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompleteVerificationResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:decline\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Declines the specified invitation.\n      operationId: decline.accounts.invitations\n      parameters:\n        - description: The name of the account invitation that is being declined.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: DeclineInvitation request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeclineInvitationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:fetchVerificationOptions\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Reports all eligible verification options for a location in a specific language.\n      operationId: fetchVerificationOptions.accounts.locations\n      parameters:\n        - description: Resource name of the location to verify.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: FetchVerificationOptions request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FetchVerificationOptionsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FetchVerificationOptionsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:findMatches\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Finds all of the possible locations that are a match to the specified location. This operation is only valid if the location is unverified.\n      operationId: findMatches.accounts.locations\n      parameters:\n        - description: The resource name of the location to find matches for.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: FindMatchingLocations request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FindMatchingLocationsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FindMatchingLocationsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:generateAccountNumber\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Generates an account number for this account. The account number is not provisioned when an account is created. Use this request to create an account number when it is required.\n      operationId: generateAccountNumber.accounts\n      parameters:\n        - description: The name of the account to generate an account number for.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: GenerateAccountNumber request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GenerateAccountNumberRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:getGoogleUpdated\":\n    get:\n      summary: Returns the Google updated Lodging of a specific location.\n      operationId: getGoogleUpdated.accounts.locations.lodging\n      parameters:\n        - description: \"Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/lodging`\"\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Optional. The specific fields to return. If no mask is specified, then it returns the full Lodging (same as \"*\"). Repeated field items cannot be individually specified.\n          in: query\n          name: readMask\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetGoogleUpdatedLodgingResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{name}:googleUpdated\":\n    get:\n      summary: Gets the Google-updated version of the specified location. Returns `NOT_FOUND` if the location does not exist.\n      operationId: getGoogleUpdated.accounts.locations\n      parameters:\n        - description: The name of the location to fetch.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GoogleUpdatedLocation\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{name}:recommendGoogleLocations\":\n    get:\n      summary: List all the GoogleLocations that have been recommended to the specified GMB account. Recommendations are provided for personal accounts and location groups only, requests for all other account types will result in an error. The recommendations for location groups are based on the locations in that group. The recommendations for personal accounts are based on all of the locations that the user has access to on Google My Business (which includes locations they can access through location groups), and is a superset of all recommendations generated for the user.\n      operationId: listRecommendGoogleLocations.accounts\n      parameters:\n        - description: Name of the account resource to fetch recommended Google locations for.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: How many locations to fetch per page. Default is 25, minimum is 1, and maximum page size is 100.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, the next page of locations is retrieved.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListRecommendedGoogleLocationsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{name}:report\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Report a GoogleLocation.\n      operationId: report.googleLocations\n      parameters:\n        - description: Resource name of a [GoogleLocation], in the format `googleLocations/{googleLocationId}`.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: ReportGoogleLocation request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReportGoogleLocationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - googleLocations\n  \"/v4/{name}:transfer\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Moves a location from an account that the user owns to another account that the same user administers. The user must be an owner of the account the location is currently associated with and must also be at least a manager of the destination account. Returns the Location with its new resource name.\n      operationId: transfer.accounts.locations\n      parameters:\n        - description: The name of the location to transfer.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: TransferLocation request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransferLocationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Location\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{name}:verify\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Starts the verification process for a location.\n      operationId: verify.accounts.locations\n      parameters:\n        - description: Resource name of the location to verify.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: VerifyLocation request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerifyLocationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifyLocationResponse\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/admins\":\n    get:\n      summary: Lists all of the admins for the specified location.\n      operationId: list.accounts.locations.admins\n      parameters:\n        - description: The name of the location to list admins of.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListLocationAdminsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Invites the specified user to become an administrator for the specified location. The invitee must accept the invitation in order to be granted access to the location. See AcceptInvitation to programmatically accept an invitation.\n      operationId: create.accounts.locations.admins\n      parameters:\n        - description: The resource name of the location this admin is created for.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Admin request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Admin\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Admin\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/answers\":\n    get:\n      summary: Returns the paginated list of answers for a specified question.\n      operationId: list.accounts.locations.questions.answers\n      parameters:\n        - description: The name of the question to fetch answers for.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: The order to return the answers. Valid options include 'update_time desc' and 'upvote_count desc', which will return the answers sorted descendingly by the requested field. The default sort order is 'update_time desc'.\n          in: query\n          name: orderBy\n          schema:\n            type: string\n        - description: How many answers to fetch per page. The default and maximum `page_size` values are 10.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, the next page of answers is retrieved.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListAnswersResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{parent}/answers:delete\":\n    delete:\n      summary: Deletes the answer written by the current user to a question.\n      operationId: delete.accounts.locations.questions.answers\n      parameters:\n        - description: The name of the question to delete an answer for.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{parent}/answers:upsert\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Creates an answer or updates the existing answer written by the user for the specified question. A user can only create one answer per question.\n      operationId: upsert.accounts.locations.questions.answers\n      parameters:\n        - description: The name of the question to write an answer for.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: UpsertAnswer request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpsertAnswerRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Answer\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/insuranceNetworks\":\n    get:\n      summary: Returns a list of all insurance networks supported by Google.\n      operationId: list.accounts.locations.insuranceNetworks\n      parameters:\n        - description: \"Required. The name of the location whose insurance networks will be listed. The name is in the form: accounts/{account_id}/locations/{location_id}\"\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: Optional. The BCP 47 code for the language. If a language code is not provided, it defaults to English. Right now only 'en' is supported.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: How many insurance networks to return per page. The default value is 5000. Maximum page size is 10000.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, returns the next page of insurance networks.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListInsuranceNetworksResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{parent}/invitations\":\n    get:\n      summary: Lists pending invitations for the specified account.\n      operationId: list.accounts.invitations\n      parameters:\n        - description: The name of the account from which the list of invitations is being retrieved.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: Specifies which target types should appear in the response.\n          in: query\n          name: targetType\n          schema:\n            enum:\n              - ALL\n              - ACCOUNTS_ONLY\n              - LOCATIONS_ONLY\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListInvitationsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{parent}/localPosts\":\n    get:\n      summary: Returns a list of local posts associated with a location.\n      operationId: list.accounts.locations.localPosts\n      parameters:\n        - description: The name of the location whose local posts will be listed.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: How many local posts to return per page. Default of 20. The minimum is 1, and maximum page size is 100.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, returns the next page of local posts.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListLocalPostsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Creates a new local post associated with the specified location, and returns it.\n      operationId: create.accounts.locations.localPosts\n      parameters:\n        - description: The name of the location in which to create this local post.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: LocalPost request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LocalPost\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocalPost\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/locations\":\n    get:\n      summary: Lists the locations for the specified account.\n      operationId: list.accounts.locations\n      parameters:\n        - description: The name of the account to fetch locations from. If the Account is of AccountType PERSONAL, only Locations that are directly owned by the Account are returned, otherwise it will return all accessible locations from the Account, either directly or indirectly.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: A filter constraining the locations to return. The response includes only entries that match the filter. If `filter` is empty, then constraints are applied and all locations (paginated) are retrieved for the requested account. For more information about valid fields and example usage, see [Work with Location Data Guide](https://developers.google.com/my-business/content/location-data#filter_results_when_you_list_locations).\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: The BCP 47 code of language to get display location properties in. If this language is not available, they will be provided in the language of the location. If neither is available, they will be provided in English. Deprecated. After August 15th, 2020, this field will no longer be applied. Instead, the language of the location will always be used.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: 'Sorting order for the request. Multiple fields should be comma-separated, following SQL syntax. The default sorting order is ascending. To specify descending order, a suffix \" desc\" should be added. Valid fields to order_by are location_name and store_code. For example: \"location_name, store_code desc\" or \"location_name\" or \"store_code desc\"'\n          in: query\n          name: orderBy\n          schema:\n            type: string\n        - description: How many locations to fetch per page. Default is 100, minimum is 1, and maximum page size is 100.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, it fetches the next `page` of locations. The page token is returned by previous calls to `ListLocations` when there were more locations than could fit in the requested page size.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListLocationsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Creates a new location owned by the specified account, and returns it.\n      operationId: create.accounts.locations\n      parameters:\n        - description: The name of the account in which to create this location.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: A unique request ID for the server to detect duplicated requests. We recommend using UUIDs. Max length is 50 characters.\n          in: query\n          name: requestId\n          schema:\n            type: string\n        - description: If true, the request is validated without actually creating the location.\n          in: query\n          name: validateOnly\n          schema:\n            type: boolean\n      requestBody:\n        description: Location request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Location\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Location\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/media\":\n    get:\n      summary: Returns a list of media items associated with a location.\n      operationId: list.accounts.locations.media\n      parameters:\n        - description: The name of the location whose media items will be listed.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: How many media items to return per page. The default value is 100, which is also the maximum supported number of media items able to be added to a location with the My Business API. Maximum page size is 2500.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, returns the next page of media items.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListMediaItemsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Creates a new media item for the location.\n      operationId: create.accounts.locations.media\n      parameters:\n        - description: The resource name of the location where this media item will be created.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: MediaItem request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MediaItem\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItem\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/media/customers\":\n    get:\n      summary: Returns a list of media items associated with a location that have been contributed by customers.\n      operationId: list.accounts.locations.media.customers\n      parameters:\n        - description: The name of the location whose customer media items will be listed.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: How many media items to return per page. The default value is 100, the maximum supported page size is 200.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, returns the next page of media items.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListCustomerMediaItemsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{parent}/media:startUpload\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Generates a `MediaItemDataRef` for media item uploading.\n      operationId: startUpload.accounts.locations.media\n      parameters:\n        - description: The resource name of the location this media item is to be added to.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: StartUploadMediaItemData request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartUploadMediaItemDataRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItemDataRef\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/questions\":\n    get:\n      summary: Returns the paginated list of questions and some of its answers for a specified location.\n      operationId: list.accounts.locations.questions\n      parameters:\n        - description: The name of the location to fetch questions for.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: How many answers to fetch per question. The default and maximum `answers_per_question` values are 10.\n          in: query\n          name: answersPerQuestion\n          schema:\n            type: integer\n        - description: A filter constraining the questions to return. The only filter currently supported is \"ignore_answered=true\"\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: The order to return the questions. Valid options include 'update_time desc' and 'upvote_count desc', which will return the questions sorted descendingly by the requested field. The default sort order is 'update_time desc'.\n          in: query\n          name: orderBy\n          schema:\n            type: string\n        - description: How many questions to fetch per page. The default and maximum `page_size` values are 10.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, the next page of questions is retrieved.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListQuestionsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      summary: Adds a question for the specified location.\n      operationId: create.accounts.locations.questions\n      parameters:\n        - description: The name of the location to write a question for.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Question request\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Question\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Question\"\n          description: Successful response\n      tags:\n        - accounts\n  \"/v4/{parent}/reviews\":\n    get:\n      summary: Returns the paginated list of reviews for the specified location. This operation is only valid if the specified location is verified.\n      operationId: list.accounts.locations.reviews\n      parameters:\n        - description: The name of the location to fetch reviews for.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`.\n          in: query\n          name: orderBy\n          schema:\n            type: string\n        - description: How many reviews to fetch per page. The maximum `page_size` is 50.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, it fetches the next page of reviews.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListReviewsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v4/{parent}/verifications\":\n    get:\n      summary: List verifications of a location, ordered by create time.\n      operationId: list.accounts.locations.verifications\n      parameters:\n        - description: Resource name of the location that verification requests belong to.\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: How many verification to include per page. If not set, return all.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: If specified, returns the next page of verifications.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListVerificationsResponse\"\n          description: Successful response\n      tags:\n        - accounts\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\ncomponents:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n          - \"1\"\n          - \"2\"\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n          - media\n          - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AcceptInvitationRequest:\n      description: Request message for AccessControl.AcceptInvitation.\n      properties: {}\n      type: object\n    Accessibility:\n      description: Physical adaptations made to the property in consideration of varying levels of human physical ability.\n      properties:\n        mobilityAccessible:\n          description: Mobility accessible. Throughout the property there are physical adaptations to ease the stay of a person in a wheelchair, such as auto-opening doors, wide elevators, wide bathrooms or ramps.\n          type: boolean\n        mobilityAccessibleElevator:\n          description: Mobility accessible elevator. A lift that transports people from one level to another and is built to accommodate a wheelchair-using passenger owing to the width of its doors and placement of call buttons.\n          type: boolean\n        mobilityAccessibleElevatorException:\n          description: Mobility accessible elevator exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobilityAccessibleException:\n          description: Mobility accessible exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobilityAccessibleParking:\n          description: Mobility accessible parking. The presence of a marked, designated area of prescribed size in which only registered, labeled vehicles transporting a person with physical challenges may park.\n          type: boolean\n        mobilityAccessibleParkingException:\n          description: Mobility accessible parking exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobilityAccessiblePool:\n          description: Mobility accessible pool. A swimming pool equipped with a mechanical chair that can be lowered and raised for the purpose of moving physically challenged guests into and out of the pool. May be powered by electricity or water. Also known as pool lift.\n          type: boolean\n        mobilityAccessiblePoolException:\n          description: Mobility accessible pool exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Account:\n      description: An account is a container for your business's locations. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).\n      properties:\n        accountName:\n          description: The name of the account. *Note:* For an account with AccountType `PERSONAL`, this is the first and last name of the user account.\n          type: string\n        accountNumber:\n          description: Account reference number if provisioned.\n          type: string\n        name:\n          description: The resource name, in the format `accounts/{account_id}`.\n          type: string\n        organizationInfo:\n          $ref: \"#/components/schemas/OrganizationInfo\"\n          description: Additional info for an organization. This is populated only for an organization account.\n        permissionLevel:\n          description: Output only. Specifies the PermissionLevel the caller has for this account.\n          enum:\n            - PERMISSION_LEVEL_UNSPECIFIED\n            - OWNER_LEVEL\n            - MEMBER_LEVEL\n          type: string\n        role:\n          description: Output only. Specifies the AccountRole the caller has for this account.\n          enum:\n            - ACCOUNT_ROLE_UNSPECIFIED\n            - OWNER\n            - CO_OWNER\n            - MANAGER\n            - COMMUNITY_MANAGER\n          type: string\n        state:\n          $ref: \"#/components/schemas/AccountState\"\n          description: Output only. Indicates the AccountState of this account.\n        type:\n          description: Output only. Specifies the AccountType of this account.\n          enum:\n            - ACCOUNT_TYPE_UNSPECIFIED\n            - PERSONAL\n            - LOCATION_GROUP\n            - USER_GROUP\n            - ORGANIZATION\n          type: string\n      type: object\n    AccountState:\n      description: Indicates status of the account, such as whether the account has been verified by Google.\n      properties:\n        status:\n          description: If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation.\n          enum:\n            - ACCOUNT_STATUS_UNSPECIFIED\n            - VERIFIED\n            - UNVERIFIED\n            - VERIFICATION_REQUESTED\n          type: string\n      type: object\n    Activities:\n      description: Amenities and features related to leisure and play.\n      properties:\n        beachAccess:\n          description: Beach access. The hotel property is in close proximity to a beach and offers a way to get to that beach. This can include a route to the beach such as stairs down if hotel is on a bluff, or a short trail. Not the same as beachfront (with beach access, the hotel's proximity is close to but not right on the beach).\n          type: boolean\n        beachAccessException:\n          description: Beach access exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        beachFront:\n          description: Breach front. The hotel property is physically located on the beach alongside an ocean, sea, gulf, or bay. It is not on a lake, river, stream, or pond. The hotel is not separated from the beach by a public road allowing vehicular, pedestrian, or bicycle traffic.\n          type: boolean\n        beachFrontException:\n          description: Beach front exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        bicycleRental:\n          description: Bicycle rental. The hotel owns bicycles that it permits guests to borrow and use. Can be free or for a fee.\n          type: boolean\n        bicycleRentalException:\n          description: Bicycle rental exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        boutiqueStores:\n          description: Boutique stores. There are stores selling clothing, jewelry, art and decor either on hotel premises or very close by. Does not refer to the hotel gift shop or convenience store.\n          type: boolean\n        boutiqueStoresException:\n          description: Boutique stores exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        casino:\n          description: Casino. A space designated for gambling and gaming featuring croupier-run table and card games, as well as electronic slot machines. May be on hotel premises or located nearby.\n          type: boolean\n        casinoException:\n          description: Casino exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeBicycleRental:\n          description: Free bicycle rental. The hotel owns bicycles that it permits guests to borrow and use for free.\n          type: boolean\n        freeBicycleRentalException:\n          description: Free bicycle rental exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeWatercraftRental:\n          description: Free watercraft rental. The hotel owns watercraft that it permits guests to borrow and use for free.\n          type: boolean\n        freeWatercraftRentalException:\n          description: Free Watercraft rental exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        gameRoom:\n          description: Game room. There is a room at the hotel containing electronic machines for play such as pinball, prize machines, driving simulators, and other items commonly found at a family fun center or arcade. May also include non-electronic games like pool, foosball, darts, and more. May or may not be designed for children. Also known as arcade, fun room, or family fun center.\n          type: boolean\n        gameRoomException:\n          description: Game room exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        golf:\n          description: Golf. There is a golf course on hotel grounds or there is a nearby, independently run golf course that allows use by hotel guests. Can be free or for a fee.\n          type: boolean\n        golfException:\n          description: Golf exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        horsebackRiding:\n          description: Horseback riding. The hotel has a horse barn onsite or an affiliation with a nearby barn to allow for guests to sit astride a horse and direct it to walk, trot, cantor, gallop and/or jump. Can be in a riding ring, on designated paths, or in the wilderness. May or may not involve instruction.\n          type: boolean\n        horsebackRidingException:\n          description: Horseback riding exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        nightclub:\n          description: Nightclub. There is a room at the hotel with a bar, a dance floor, and seating where designated staffers play dance music. There may also be a designated area for the performance of live music, singing and comedy acts.\n          type: boolean\n        nightclubException:\n          description: Nightclub exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        privateBeach:\n          description: Private beach. The beach which is in close proximity to the hotel is open only to guests.\n          type: boolean\n        privateBeachException:\n          description: Private beach exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        scuba:\n          description: Scuba. The provision for guests to dive under naturally occurring water fitted with a self-contained underwater breathing apparatus (SCUBA) for the purpose of exploring underwater life. Apparatus consists of a tank providing oxygen to the diver through a mask. Requires certification of the diver and supervision. The hotel may have the activity at its own waterfront or have an affiliation with a nearby facility. Required equipment is most often supplied to guests. Can be free or for a fee. Not snorkeling. Not done in a swimming pool.\n          type: boolean\n        scubaException:\n          description: Scuba exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        snorkeling:\n          description: Snorkeling. The provision for guests to participate in a recreational water activity in which swimmers wear a diving mask, a simple, shaped breathing tube and flippers/swim fins for the purpose of exploring below the surface of an ocean, gulf or lake. Does not usually require user certification or professional supervision. Equipment may or may not be available for rent or purchase. Not scuba diving.\n          type: boolean\n        snorkelingException:\n          description: Snorkeling exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        tennis:\n          description: Tennis. The hotel has the requisite court(s) on site or has an affiliation with a nearby facility for the purpose of providing guests with the opportunity to play a two-sided court-based game in which players use a stringed racquet to hit a ball across a net to the side of the opposing player. The court can be indoors or outdoors. Instructors, racquets and balls may or may not be provided.\n          type: boolean\n        tennisException:\n          description: Tennis exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        waterSkiing:\n          description: Water skiing. The provision of giving guests the opportunity to be pulled across naturally occurring water while standing on skis and holding a tow rope attached to a motorboat. Can occur on hotel premises or at a nearby waterfront. Most often performed in a lake or ocean.\n          type: boolean\n        waterSkiingException:\n          description: Water skiing exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        watercraftRental:\n          description: Watercraft rental. The hotel owns water vessels that it permits guests to borrow and use. Can be free or for a fee. Watercraft may include boats, pedal boats, rowboats, sailboats, powerboats, canoes, kayaks, or personal watercraft (such as a Jet Ski).\n          type: boolean\n        watercraftRentalException:\n          description: Watercraft rental exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    AdWordsLocationExtensions:\n      description: Additional information that is surfaced in AdWords.\n      properties:\n        adPhone:\n          description: An alternate phone number to display on AdWords location extensions instead of the location's primary phone number.\n          type: string\n      type: object\n    AddressInput:\n      description: Input for ADDRESS verification.\n      properties:\n        mailerContactName:\n          description: Contact name the mail should be sent to.\n          type: string\n      type: object\n    AddressVerificationData:\n      description: Display data for verifications through postcard.\n      properties:\n        address:\n          $ref: \"#/components/schemas/PostalAddress\"\n          description: Address that a postcard can be sent to.\n        businessName:\n          description: Merchant's business name.\n          type: string\n      type: object\n    Admin:\n      description: An administrator of an Account or a Location.\n      properties:\n        adminName:\n          description: The name of the admin. When making the initial invitation, this is the invitee's email address. On `GET` calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names.\n          type: string\n        name:\n          description: \"The resource name. For account admins, this is in the form: `accounts/{account_id}/admins/{admin_id}` For location admins, this is in the form: `accounts/{account_id}/locations/{location_id}/admins/{admin_id}`\"\n          type: string\n        pendingInvitation:\n          description: Output only. Indicates whether this admin has a pending invitation for the specified resource.\n          type: boolean\n        role:\n          description: Specifies the AdminRole that this admin uses with the specified Account or Location resource.\n          enum:\n            - ADMIN_ROLE_UNSPECIFIED\n            - OWNER\n            - CO_OWNER\n            - MANAGER\n            - COMMUNITY_MANAGER\n          type: string\n      type: object\n    Answer:\n      description: Represents an answer to a question\n      properties:\n        author:\n          $ref: \"#/components/schemas/Author\"\n          description: Output only. The author of the answer.\n        createTime:\n          description: Output only. The timestamp for when the answer was written.\n          format: google-datetime\n          type: string\n        name:\n          description: Output only. The unique name for the answer accounts/*/locations/*/questions/*/answers/*\n          type: string\n        text:\n          description: The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters.\n          type: string\n        updateTime:\n          description: Output only. The timestamp for when the answer was last modified.\n          format: google-datetime\n          type: string\n        upvoteCount:\n          description: Output only. The number of upvotes for the answer.\n          format: int32\n          type: integer\n      type: object\n    AssociateLocationRequest:\n      description: Request message for Locations.AssociateLocationRequest.\n      properties:\n        placeId:\n          description: The association to establish. If not set, it indicates no match.\n          type: string\n      type: object\n    Attribute:\n      description: A location attribute. Attributes provide additional information about a location. The attributes that can be set on a location may vary based on the properties of that location (for example, category). Available attributes are determined by Google and may be added and removed without API changes.\n      properties:\n        attributeId:\n          description: The ID of the attribute. Attribute IDs are provided by Google.\n          type: string\n        repeatedEnumValue:\n          $ref: \"#/components/schemas/RepeatedEnumAttributeValue\"\n          description: When the attribute value type is REPEATED_ENUM, this contains the attribute value, and the other values fields must be empty.\n        urlValues:\n          description: When the attribute value type is URL, this field contains the value(s) for this attribute, and the other values fields must be empty.\n          items:\n            $ref: \"#/components/schemas/UrlAttributeValue\"\n          type: array\n        valueType:\n          description: Output only. The type of value that this attribute contains. This should be used to determine how to interpret the value.\n          enum:\n            - ATTRIBUTE_VALUE_TYPE_UNSPECIFIED\n            - BOOL\n            - ENUM\n            - URL\n            - REPEATED_ENUM\n          type: string\n        values:\n          description: The values for this attribute. The type of the values supplied must match that expected for that attribute; see [AttributeValueType](/my-business/reference/rest/v4/AttributeValueType). This is a repeated field where multiple attribute values may be provided. Attribute types only support one value.\n          items: {}\n          type: array\n      type: object\n    AttributeMetadata:\n      description: Metadata for an attribute. Contains display information for the attribute, including a localized name and a heading for grouping related attributes together.\n      properties:\n        attributeId:\n          description: The ID of the attribute.\n          type: string\n        displayName:\n          description: The localized display name for the attribute, if available; otherwise, the English display name.\n          type: string\n        groupDisplayName:\n          description: The localized display name of the group that contains this attribute, if available; otherwise, the English group name. Related attributes are collected into a group and should be displayed together under the heading given here.\n          type: string\n        isDeprecated:\n          description: If true, the attribute is deprecated and should no longer be used. If deprecated, updating this attribute will not result in an error, but updates will not be saved. At some point after being deprecated, the attribute will be removed entirely and it will become an error.\n          type: boolean\n        isRepeatable:\n          description: If true, the attribute supports multiple values. If false, only a single value should be provided.\n          type: boolean\n        valueMetadata:\n          description: For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided.\n          items:\n            $ref: \"#/components/schemas/AttributeValueMetadata\"\n          type: array\n        valueType:\n          description: The value type for the attribute. Values set and retrieved should be expected to be of this type.\n          enum:\n            - ATTRIBUTE_VALUE_TYPE_UNSPECIFIED\n            - BOOL\n            - ENUM\n            - URL\n            - REPEATED_ENUM\n          type: string\n      type: object\n    AttributeValueMetadata:\n      description: Metadata for supported attribute values.\n      properties:\n        displayName:\n          description: The display name for this value, localized where available; otherwise, in English. The value display name is intended to be used in context with the attribute display name. For example, for a \"WiFi\" enum attribute, this could contain \"Paid\" to represent paid Wi-Fi.\n          type: string\n        value:\n          description: The attribute value.\n      type: object\n    Attribution:\n      description: Attribution information for customer media items, such as the contributor's name and profile picture.\n      properties:\n        profileName:\n          description: The user name to attribute the media item to.\n          type: string\n        profilePhotoUrl:\n          description: URL of the attributed user's profile photo thumbnail.\n          type: string\n        profileUrl:\n          description: The URL of the attributed user's Google Maps profile page.\n          type: string\n        takedownUrl:\n          description: The URL of the takedown page, where the media item can be reported if it is inappropriate.\n          type: string\n      type: object\n    Author:\n      description: Represents the author of a question or answer\n      properties:\n        displayName:\n          description: The display name of the user\n          type: string\n        profilePhotoUrl:\n          description: The profile photo URL of the user.\n          type: string\n        type:\n          description: The type of user the author is.\n          enum:\n            - AUTHOR_TYPE_UNSPECIFIED\n            - REGULAR_USER\n            - LOCAL_GUIDE\n            - MERCHANT\n          type: string\n      type: object\n    BasicMetricsRequest:\n      description: A request for basic metric insights.\n      properties:\n        metricRequests:\n          description: A collection of metrics to return values for including the options for how the data should be returned.\n          items:\n            $ref: \"#/components/schemas/MetricRequest\"\n          type: array\n        timeRange:\n          $ref: \"#/components/schemas/TimeRange\"\n          description: The range to gather metrics for. The maximum range is 18 months from the request date. In some cases, the data may still be missing for days close to the request date. Missing data will be specified in the `metricValues` in the response.\n      type: object\n    BatchGetBusinessCategoriesResponse:\n      description: Response message for BusinessCategories.BatchGetBusinessCategories.\n      properties:\n        categories:\n          description: Categories that match the GConcept ids provided in the request. They will not come in the same order as category ids in the request.\n          items:\n            $ref: \"#/components/schemas/Category\"\n          type: array\n      type: object\n    BatchGetLocationsRequest:\n      description: Request message for Locations.BatchGetLocations.\n      properties:\n        locationNames:\n          description: A collection of locations to fetch, specified by their names.\n          items:\n            type: string\n          type: array\n      type: object\n    BatchGetLocationsResponse:\n      description: Response message for Locations.BatchGetLocations.\n      properties:\n        locations:\n          description: A collection of locations.\n          items:\n            $ref: \"#/components/schemas/Location\"\n          type: array\n      type: object\n    BatchGetReviewsRequest:\n      description: Request message for Reviews.BatchGetReviews.\n      properties:\n        ignoreRatingOnlyReviews:\n          description: Whether to ignore rating-only reviews.\n          type: boolean\n        locationNames:\n          description: A collection of locations to fetch reviews for, specified by their names.\n          items:\n            type: string\n          type: array\n        orderBy:\n          description: Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.\n          type: string\n        pageSize:\n          description: How many reviews to fetch per page. The default value is 200.\n          format: int32\n          type: integer\n        pageToken:\n          description: If specified, it fetches the next page of reviews.\n          type: string\n      type: object\n    BatchGetReviewsResponse:\n      description: Response message for Reviews.BatchGetReviews.\n      properties:\n        locationReviews:\n          description: Reviews with location information.\n          items:\n            $ref: \"#/components/schemas/LocationReview\"\n          type: array\n        nextPageToken:\n          description: If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent calls. If there are no more reviews, this field will not be present in the response.\n          type: string\n      type: object\n    Business:\n      description: Features of the property of specific interest to the business traveler.\n      properties:\n        businessCenter:\n          description: Business center. A designated room at the hotel with one or more desks and equipped with guest-use computers, printers, fax machines and/or photocopiers. May or may not be open 24/7. May or may not require a key to access. Not a meeting room or conference room.\n          type: boolean\n        businessCenterException:\n          description: Business center exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        meetingRooms:\n          description: Meeting rooms. Rooms at the hotel designated for business-related gatherings. Rooms are usually equipped with tables or desks, office chairs and audio/visual facilities to allow for presentations and conference calls. Also known as conference rooms.\n          type: boolean\n        meetingRoomsCount:\n          description: Meeting rooms count. The number of meeting rooms at the property.\n          format: int32\n          type: integer\n        meetingRoomsCountException:\n          description: Meeting rooms count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        meetingRoomsException:\n          description: Meeting rooms exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    BusinessHours:\n      description: Represents the time periods that this location is open for business. Holds a collection of TimePeriod instances.\n      properties:\n        periods:\n          description: A collection of times that this location is open for business. Each period represents a range of hours when the location is open during the week.\n          items:\n            $ref: \"#/components/schemas/TimePeriod\"\n          type: array\n      type: object\n    CallToAction:\n      description: An action that is performed when the user clicks through the post\n      properties:\n        actionType:\n          description: The type of action that will be performed.\n          enum:\n            - ACTION_TYPE_UNSPECIFIED\n            - BOOK\n            - ORDER\n            - SHOP\n            - LEARN_MORE\n            - SIGN_UP\n            - GET_OFFER\n            - CALL\n          type: string\n        url:\n          description: The URL the user will be directed to upon clicking. This field should be left unset for Call CTA.\n          type: string\n      type: object\n    CaloriesFact:\n      description: This message denotes calories information with an upper bound and lower bound range. Lower amount must be specified. Both lower and upper amounts are non-negative numbers.\n      properties:\n        lowerAmount:\n          description: Required. Lower amount of calories\n          format: int32\n          type: integer\n        unit:\n          description: Required. Unit of the given calories information.\n          enum:\n            - ENERGY_UNIT_UNSPECIFIED\n            - CALORIE\n            - JOULE\n          type: string\n        upperAmount:\n          description: Optional. Upper amount of calories\n          format: int32\n          type: integer\n      type: object\n    Category:\n      description: A category describing what this business is (not what it does). For a list of valid category IDs, and the mappings to their human-readable names, see [categories.list](https://developers.google.com/my-business/reference/rest/v4/categories/list).\n      properties:\n        categoryId:\n          description: \"@OutputOnly. A stable ID (provided by Google) for this category. The `category_id` must be specified when modifying the category (when creating or updating a location).\"\n          type: string\n        displayName:\n          description: \"@OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, `category_id` must be set.\"\n          type: string\n        moreHoursTypes:\n          description: Output only. More hours types that are available for this business category.\n          items:\n            $ref: \"#/components/schemas/MoreHoursType\"\n          readOnly: true\n          type: array\n        serviceTypes:\n          description: \"@OutputOnly. A list of all the service types that are available for this business category.\"\n          items:\n            $ref: \"#/components/schemas/ServiceType\"\n          type: array\n      type: object\n    Chain:\n      description: A chain is a brand that your business's locations can be affiliated with.\n      properties:\n        chainNames:\n          description: Names of the chain.\n          items:\n            $ref: \"#/components/schemas/ChainName\"\n          type: array\n        locationCount:\n          description: Number of locations that are part of this chain.\n          format: int32\n          type: integer\n        name:\n          description: The chain's resource name, in the format `chains/{chain_place_id}`.\n          type: string\n        websites:\n          description: Websites of the chain.\n          items:\n            $ref: \"#/components/schemas/ChainUrl\"\n          type: array\n      type: object\n    ChainName:\n      description: Name to be used when displaying the chain.\n      properties:\n        displayName:\n          description: The display name for this chain.\n          type: string\n        languageCode:\n          description: The BCP 47 code of language of the name.\n          type: string\n      type: object\n    ChainUrl:\n      description: Url to be used when displaying the chain.\n      properties:\n        url:\n          description: The url for this chain.\n          type: string\n      type: object\n    ClearLocationAssociationRequest:\n      description: Request message for Locations.ClearLocationAssociationRequest.\n      properties: {}\n      type: object\n    CompleteVerificationRequest:\n      description: Request message for Verifications.CompleteVerificationAction.\n      properties:\n        pin:\n          description: PIN code received by the merchant to complete the verification.\n          type: string\n      type: object\n    CompleteVerificationResponse:\n      description: Response message for Verifications.CompleteVerificationAction.\n      properties:\n        verification:\n          $ref: \"#/components/schemas/Verification\"\n          description: The completed verification.\n      type: object\n    Connectivity:\n      description: The ways in which the property provides guests with the ability to access the internet.\n      properties:\n        freeWifi:\n          description: Free wifi. The hotel offers guests wifi for free.\n          type: boolean\n        freeWifiException:\n          description: Free wifi exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        publicAreaWifiAvailable:\n          description: Public area wifi available. Guests have the ability to wirelessly connect to the internet in the areas of the hotel accessible to anyone. Can be free or for a fee.\n          type: boolean\n        publicAreaWifiAvailableException:\n          description: Public area wifi available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        publicInternetTerminal:\n          description: Public internet terminal. An area of the hotel supplied with computers and designated for the purpose of providing guests with the ability to access the internet.\n          type: boolean\n        publicInternetTerminalException:\n          description: Public internet terminal exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        wifiAvailable:\n          description: Wifi available. The hotel provides the ability for guests to wirelessly connect to the internet. Can be in the public areas of the hotel and/or in the guest rooms. Can be free or for a fee.\n          type: boolean\n        wifiAvailableException:\n          description: Wifi available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Date:\n      description: \"Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.\"\n      properties:\n        day:\n          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.\n          format: int32\n          type: integer\n        month:\n          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.\n          format: int32\n          type: integer\n        year:\n          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.\n          format: int32\n          type: integer\n      type: object\n    DeclineInvitationRequest:\n      description: Request message for AccessControl.DeclineInvitation.\n      properties: {}\n      type: object\n    DimensionalMetricValue:\n      description: A value for a single metric with a given time dimension.\n      properties:\n        metricOption:\n          description: The option that requested this dimensional value.\n          enum:\n            - METRIC_OPTION_UNSPECIFIED\n            - AGGREGATED_TOTAL\n            - AGGREGATED_DAILY\n            - BREAKDOWN_DAY_OF_WEEK\n            - BREAKDOWN_HOUR_OF_DAY\n          type: string\n        timeDimension:\n          $ref: \"#/components/schemas/TimeDimension\"\n          description: The dimension for the value.\n        value:\n          description: The value. If no value is set, then the requested data is missing.\n          format: int64\n          type: string\n      type: object\n    Dimensions:\n      description: Dimensions of the media item.\n      properties:\n        heightPixels:\n          description: Height of the media item, in pixels.\n          format: int32\n          type: integer\n        widthPixels:\n          description: Width of the media item, in pixels.\n          format: int32\n          type: integer\n      type: object\n    DrivingDirectionMetricsRequest:\n      description: A request for driving direction insights.\n      properties:\n        languageCode:\n          description: The BCP 47 code for the language. If a language code is not provided, it defaults to English.\n          type: string\n        numDays:\n          description: The number of days to aggregate data for. Results returned will be available data over the last number of requested days. Valid values are 7, 30, and 90.\n          enum:\n            - SEVEN\n            - THIRTY\n            - NINETY\n          type: string\n      type: object\n    Duplicate:\n      description: Information about the location that this location duplicates.\n      properties:\n        access:\n          description: Indicates whether the user has access to the location it duplicates.\n          enum:\n            - ACCESS_UNSPECIFIED\n            - ACCESS_UNKNOWN\n            - ALLOWED\n            - INSUFFICIENT\n          type: string\n        locationName:\n          description: The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted.\n          type: string\n        placeId:\n          description: The place ID of the location that this duplicates.\n          type: string\n      type: object\n    EmailInput:\n      description: Input for EMAIL verification.\n      properties:\n        emailAddress:\n          description: Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name.\n          type: string\n      type: object\n    EmailVerificationData:\n      description: Display data for verifications through email.\n      properties:\n        domainName:\n          description: Domain name in the email address. e.g. \"gmail.com\" in foo@gmail.com\n          type: string\n        isUserNameEditable:\n          description: Whether client is allowed to provide a different user name.\n          type: boolean\n        userName:\n          description: User name in the email address. e.g. \"foo\" in foo@gmail.com\n          type: string\n      type: object\n    Empty:\n      description: \"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.\"\n      properties: {}\n      type: object\n    EnhancedCleaning:\n      description: Enhanced cleaning measures implemented by the hotel during COVID-19.\n      properties:\n        commercialGradeDisinfectantCleaning:\n          description: Commercial-grade disinfectant used to clean the property.\n          type: boolean\n        commercialGradeDisinfectantCleaningException:\n          description: Commercial grade disinfectant cleaning exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        commonAreasEnhancedCleaning:\n          description: Enhanced cleaning of common areas.\n          type: boolean\n        commonAreasEnhancedCleaningException:\n          description: Common areas enhanced cleaning exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        employeesTrainedCleaningProcedures:\n          description: Employees trained in COVID-19 cleaning procedures.\n          type: boolean\n        employeesTrainedCleaningProceduresException:\n          description: Employees trained cleaning procedures exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        employeesTrainedThoroughHandWashing:\n          description: Employees trained in thorough hand-washing.\n          type: boolean\n        employeesTrainedThoroughHandWashingException:\n          description: Employees trained thorough hand washing exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        employeesWearProtectiveEquipment:\n          description: Employees wear masks, face shields, and/or gloves.\n          type: boolean\n        employeesWearProtectiveEquipmentException:\n          description: Employees wear protective equipment exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        guestRoomsEnhancedCleaning:\n          description: Enhanced cleaning of guest rooms.\n          type: boolean\n        guestRoomsEnhancedCleaningException:\n          description: Guest rooms enhanced cleaning exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Families:\n      description: Services and amenities for families and young guests.\n      properties:\n        babysitting:\n          description: Babysitting. Child care that is offered by hotel staffers or coordinated by hotel staffers with local child care professionals. Can be free or for a fee.\n          type: boolean\n        babysittingException:\n          description: Babysitting exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        kidsActivities:\n          description: Kids activities. Recreational options such as sports, films, crafts and games designed for the enjoyment of children and offered at the hotel. May or may not be supervised. May or may not be at a designated time or place. Cab be free or for a fee.\n          type: boolean\n        kidsActivitiesException:\n          description: Kids activities exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        kidsClub:\n          description: Kids club. An organized program of group activities held at the hotel and designed for the enjoyment of children. Facilitated by hotel staff (or staff procured by the hotel) in an area(s) designated for the purpose of entertaining children without their parents. May include games, outings, water sports, team sports, arts and crafts, and films. Usually has set hours. Can be free or for a fee. Also known as Kids Camp or Kids program.\n          type: boolean\n        kidsClubException:\n          description: Kids club exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    FetchVerificationOptionsRequest:\n      description: Request message for Verifications.FetchVerificationOptions.\n      properties:\n        context:\n          $ref: \"#/components/schemas/ServiceBusinessContext\"\n          description: Extra context information for the verification of service businesses. Required for the locations whose business type is CUSTOMER_LOCATION_ONLY. INVALID_ARGUMENT will be thrown if it is set for other business types of locations.\n        languageCode:\n          description: The BCP 47 language code representing the language that is to be used for the verification process. Available options vary by language.\n          type: string\n      type: object\n    FetchVerificationOptionsResponse:\n      description: Response message for Verifications.FetchVerificationOptions.\n      properties:\n        options:\n          description: The available verification options.\n          items:\n            $ref: \"#/components/schemas/VerificationOption\"\n          type: array\n      type: object\n    FindMatchingLocationsRequest:\n      description: Request message for Locations.FindMatchingLocations.\n      properties:\n        languageCode:\n          description: The preferred language for the matching location (in BCP-47 format).\n          type: string\n        maxCacheDuration:\n          description: Deprecated. This field is ignored for all requests.\n          format: google-duration\n          type: string\n        numResults:\n          description: The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.\n          format: int32\n          type: integer\n      type: object\n    FindMatchingLocationsResponse:\n      description: Response message for Locations.FindMatchingLocations.\n      properties:\n        matchTime:\n          description: When the matching algorithm was last executed for this location.\n          format: google-datetime\n          type: string\n        matchedLocations:\n          description: A collection of locations that are potential matches to the specified location, listed in order from best to least match. If there is an exact match, it will be in the first position.\n          items:\n            $ref: \"#/components/schemas/MatchedLocation\"\n          type: array\n      type: object\n    FollowersMetadata:\n      description: Follower metadata for a location.\n      properties:\n        count:\n          description: Total number of followers for the location.\n          format: uint64\n          type: string\n        name:\n          description: The resource name for this. accounts/{account_id}/locations/{location_id}/followers/metadata\n          type: string\n      type: object\n    FoodAndDrink:\n      description: Meals, snacks, and beverages available at the property.\n      properties:\n        bar:\n          description: Bar. A designated room, lounge or area of an on-site restaurant with seating at a counter behind which a hotel staffer takes the guest's order and provides the requested alcoholic drink. Can be indoors or outdoors. Also known as Pub.\n          type: boolean\n        barException:\n          description: Bar exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        breakfastAvailable:\n          description: Breakfast available. The morning meal is offered to all guests. Can be free or for a fee.\n          type: boolean\n        breakfastAvailableException:\n          description: Breakfast available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        breakfastBuffet:\n          description: Breakfast buffet. Breakfast meal service where guests serve themselves from a variety of dishes/foods that are put out on a table.\n          type: boolean\n        breakfastBuffetException:\n          description: Breakfast buffet exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        buffet:\n          description: Buffet. A type of meal where guests serve themselves from a variety of dishes/foods that are put out on a table. Includes lunch and/or dinner meals. A breakfast-only buffet is not sufficient.\n          type: boolean\n        buffetException:\n          description: Buffet exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        dinnerBuffet:\n          description: Dinner buffet. Dinner meal service where guests serve themselves from a variety of dishes/foods that are put out on a table.\n          type: boolean\n        dinnerBuffetException:\n          description: Dinner buffet exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeBreakfast:\n          description: Free breakfast. Breakfast is offered for free to all guests. Does not apply if limited to certain room packages.\n          type: boolean\n        freeBreakfastException:\n          description: Free breakfast exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        restaurant:\n          description: Restaurant. A business onsite at the hotel that is open to the public as well as guests, and offers meals and beverages to consume at tables or counters. May or may not include table service. Also known as cafe, buffet, eatery. A \"breakfast room\" where the hotel serves breakfast only to guests (not the general public) does not count as a restaurant.\n          type: boolean\n        restaurantException:\n          description: Restaurant exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        restaurantsCount:\n          description: Restaurants count. The number of restaurants at the hotel.\n          format: int32\n          type: integer\n        restaurantsCountException:\n          description: Restaurants count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        roomService:\n          description: Room service. A hotel staffer delivers meals prepared onsite to a guest's room as per their request. May or may not be available during specific hours. Services should be available to all guests (not based on rate/room booked/reward program, etc).\n          type: boolean\n        roomServiceException:\n          description: Room service exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        tableService:\n          description: Table service. A restaurant in which a staff member is assigned to a guest's table to take their order, deliver and clear away food, and deliver the bill, if applicable. Also known as sit-down restaurant.\n          type: boolean\n        tableServiceException:\n          description: Table service exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        twentyFourHourRoomService:\n          description: 24hr room service. Room service is available 24 hours a day.\n          type: boolean\n        twentyFourHourRoomServiceException:\n          description: 24hr room service exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        vendingMachine:\n          description: Vending machine. A glass-fronted mechanized cabinet displaying and dispensing snacks and beverages for purchase by coins, paper money and/or credit cards.\n          type: boolean\n        vendingMachineException:\n          description: Vending machine exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    FoodMenu:\n      description: Menu of a business that serves food dishes.\n      properties:\n        cuisines:\n          description: Optional. Cuisine information for the food menu. It is highly recommended to provide this field.\n          items:\n            enum:\n              - CUISINE_UNSPECIFIED\n              - AMERICAN\n              - ASIAN\n              - BRAZILIAN\n              - BREAK_FAST\n              - BRUNCH\n              - CHICKEN\n              - CHINESE\n              - FAMILY\n              - FAST_FOOD\n              - FRENCH\n              - GREEK\n              - GERMAN\n              - HAMBURGER\n              - INDIAN\n              - INDONESIAN\n              - ITALIAN\n              - JAPANESE\n              - KOREAN\n              - LATIN_AMERICAN\n              - MEDITERRANEAN\n              - MEXICAN\n              - PAKISTANI\n              - PIZZA\n              - SEAFOOD\n              - SPANISH\n              - SUSHI\n              - THAI\n              - TURKISH\n              - VEGETARIAN\n              - VIETNAMESE\n              - OTHER_CUISINE\n            type: string\n          type: array\n        labels:\n          description: Required. Language-tagged labels for the menu. E.g. \"menu\", \"lunch special\". Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.\n          items:\n            $ref: \"#/components/schemas/MenuLabel\"\n          type: array\n        sections:\n          description: Required. Sections of the menu.\n          items:\n            $ref: \"#/components/schemas/FoodMenuSection\"\n          type: array\n        sourceUrl:\n          description: Optional. Source URL of menu if there is a webpage to go to.\n          type: string\n      type: object\n    FoodMenuItem:\n      description: Item of a Section. It can be the dish itself, or can contain multiple FoodMenuItemOption.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/FoodMenuItemAttributes\"\n          description: Required. Detailed attributes of the item. When item options are specified, this is considered as the base attributes and populate to each options.\n        labels:\n          description: Required. Language tagged labels for this menu item. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.\n          items:\n            $ref: \"#/components/schemas/MenuLabel\"\n          type: array\n        options:\n          description: Optional. This is for an item that comes in multiple different options, and users are required to make choices. E.g. \"regular\" vs. \"large\" pizza. When options are specified, labels and attributes at item level will automatically become the first option's labels and attributes. Clients only need to specify other additional food options in this field.\n          items:\n            $ref: \"#/components/schemas/FoodMenuItemOption\"\n          type: array\n      type: object\n    FoodMenuItemAttributes:\n      description: Attributes of a food item/dish.\n      properties:\n        allergen:\n          description: Optional. Allergens associated with the food dish. It is highly recommended to provide this field.\n          items:\n            enum:\n              - ALLERGEN_UNSPECIFIED\n              - DAIRY\n              - EGG\n              - FISH\n              - PEANUT\n              - SHELLFISH\n              - SOY\n              - TREE_NUT\n              - WHEAT\n            type: string\n          type: array\n        dietaryRestriction:\n          description: Optional. Dietary information of the food dish. It is highly recommended to provide this field.\n          items:\n            enum:\n              - DIETARY_RESTRICTION_UNSPECIFIED\n              - HALAL\n              - KOSHER\n              - ORGANIC\n              - VEGAN\n              - VEGETARIAN\n            type: string\n          type: array\n        ingredients:\n          description: Optional. Ingredients of the food dish option.\n          items:\n            $ref: \"#/components/schemas/Ingredient\"\n          type: array\n        mediaKeys:\n          description: Optional. The media keys of the media associated with the dish. Only photo media is supported. When there are multiple photos associated, the first photo is considered as the preferred photo.\n          items:\n            type: string\n          type: array\n        nutritionFacts:\n          $ref: \"#/components/schemas/NutritionFacts\"\n          description: Optional. Nutrition facts of the food dish option. It is highly recommended to provide this field.\n        portionSize:\n          $ref: \"#/components/schemas/PortionSize\"\n          description: Optional. Size of the order, represented in units of items. (e.g. 4 \"skewers\", 6 \"pieces\")\n        preparationMethods:\n          description: Optional. Methods on how the food dish option is prepared.\n          items:\n            enum:\n              - PREPARATION_METHOD_UNSPECIFIED\n              - BAKED\n              - BARBECUED\n              - BASTED\n              - BLANCHED\n              - BOILED\n              - BRAISED\n              - CODDLED\n              - FERMENTED\n              - FRIED\n              - GRILLED\n              - KNEADED\n              - MARINATED\n              - PAN_FRIED\n              - PICKLED\n              - PRESSURE_COOKED\n              - ROASTED\n              - SAUTEED\n              - SEARED\n              - SIMMERED\n              - SMOKED\n              - STEAMED\n              - STEEPED\n              - STIR_FRIED\n              - OTHER_METHOD\n            type: string\n          type: array\n        price:\n          $ref: \"#/components/schemas/Money\"\n          description: Required. Price of the food dish.\n        servesNumPeople:\n          description: Optional. Number of people can be served by this food dish option.\n          format: int32\n          type: integer\n        spiciness:\n          description: Optional. Spiciness level of the food dish.\n          enum:\n            - SPICINESS_UNSPECIFIED\n            - MILD\n            - MEDIUM\n            - HOT\n          type: string\n      type: object\n    FoodMenuItemOption:\n      description: Option of an Item. It requires an explicit user selection.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/FoodMenuItemAttributes\"\n          description: Required. Detailed attributes of the item option. Individual unspecified attributes will be inherited from the item-level attibutes as the base.\n        labels:\n          description: 'Required. Language tagged labels for this menu item option. E.g.: \"beef pad thai\", \"veggie pad thai\", \"small pizza\", \"large pizza\". Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.'\n          items:\n            $ref: \"#/components/schemas/MenuLabel\"\n          type: array\n      type: object\n    FoodMenuSection:\n      description: Section of a menu. It can contain multiple items/dishes.\n      properties:\n        items:\n          description: Required. Items of the section. Each Section must have at least an item.\n          items:\n            $ref: \"#/components/schemas/FoodMenuItem\"\n          type: array\n        labels:\n          description: Required. Language tagged labels for this menu section. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.\n          items:\n            $ref: \"#/components/schemas/MenuLabel\"\n          type: array\n      type: object\n    FoodMenus:\n      description: Menus of a business that serve food dishes.\n      properties:\n        menus:\n          description: Optional. A collection of food menus.\n          items:\n            $ref: \"#/components/schemas/FoodMenu\"\n          type: array\n        name:\n          description: \"Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/foodMenus`\"\n          type: string\n      type: object\n    FreeFormServiceItem:\n      description: Represents a free-form service offered by the merchant. These are services that are not exposed as part of our structure service data. The merchant manually enters the names for of such services via a geomerchant surface.\n      properties:\n        categoryId:\n          description: Required. The `category_id` and `service_type_id` should match the possible combinations provided in the `Category` message.\n          type: string\n        label:\n          $ref: \"#/components/schemas/Label\"\n          description: Required. Language-tagged labels for the item. We recommend that item names be 140 characters or less, and descriptions 250 characters or less. This field should only be set if the input is a custom service item. Standardized service types should be updated via service_type_id.\n      type: object\n    GenerateAccountNumberRequest:\n      description: Request message for Accounts.GenerateAccountNumber.\n      properties: {}\n      type: object\n    GetGoogleUpdatedLodgingResponse:\n      description: Response message for LodgingService.GetGoogleUpdatedLodging\n      properties:\n        diffMask:\n          description: Required. The fields in the Lodging that have been updated by Google. Repeated field items are not individually specified.\n          format: google-fieldmask\n          type: string\n        lodging:\n          $ref: \"#/components/schemas/Lodging\"\n          description: Required. The Google updated Lodging.\n      type: object\n    GoogleLocation:\n      description: Represents a Location that is present on Google. This can be a location that has been claimed by the user, someone else, or could be unclaimed.\n      properties:\n        location:\n          $ref: \"#/components/schemas/Location\"\n          description: The sparsely populated Location information. This field can be re-used in CreateLocation if it is not currently claimed by a user.\n        name:\n          description: Resource name of this GoogleLocation, in the format `googleLocations/{googleLocationId}`.\n          type: string\n        requestAdminRightsUrl:\n          description: A URL that will redirect the user to the request admin rights UI. This field is only present if the location has already been claimed by any user, including the current user.\n          type: string\n      type: object\n    GoogleUpdatedLocation:\n      description: Represents a location that was modified by Google.\n      properties:\n        diffMask:\n          description: The fields that Google updated.\n          format: google-fieldmask\n          type: string\n        location:\n          $ref: \"#/components/schemas/Location\"\n          description: The Google-updated version of this location.\n      type: object\n    GuestUnitFeatures:\n      description: Features and available amenities in the guest unit.\n      properties:\n        bungalowOrVilla:\n          description: Bungalow or villa. An independent structure that is part of a hotel or resort that is rented to one party for a vacation stay. The hotel or resort may be completely comprised of bungalows or villas, or they may be one of several guestroom options. Guests in the bungalows or villas most often have the same, if not more, amenities and services offered to guests in other guestroom types.\n          type: boolean\n        bungalowOrVillaException:\n          description: Bungalow or villa exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        connectingUnitAvailable:\n          description: Connecting unit available. A guestroom type that features access to an adjacent guestroom for the purpose of booking both rooms. Most often used by families who need more than one room to accommodate the number of people in their group.\n          type: boolean\n        connectingUnitAvailableException:\n          description: Connecting unit available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        executiveFloor:\n          description: Executive floor. A floor of the hotel where the guestrooms are only bookable by members of the hotel's frequent guest membership program. Benefits of this room class include access to a designated lounge which may or may not feature free breakfast, cocktails or other perks specific to members of the program.\n          type: boolean\n        executiveFloorException:\n          description: Executive floor exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        maxAdultOccupantsCount:\n          description: Max adult occupants count. The total number of adult guests allowed to stay overnight in the guestroom.\n          format: int32\n          type: integer\n        maxAdultOccupantsCountException:\n          description: Max adult occupants count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        maxChildOccupantsCount:\n          description: Max child occupants count. The total number of children allowed to stay overnight in the room.\n          format: int32\n          type: integer\n        maxChildOccupantsCountException:\n          description: Max child occupants count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        maxOccupantsCount:\n          description: Max occupants count. The total number of guests allowed to stay overnight in the guestroom.\n          format: int32\n          type: integer\n        maxOccupantsCountException:\n          description: Max occupants count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        privateHome:\n          description: Private home. A privately owned home (house, townhouse, apartment, cabin, bungalow etc) that may or not serve as the owner's residence, but is rented out in its entirety or by the room(s) to paying guest(s) for vacation stays. Not for lease-based, long-term residency.\n          type: boolean\n        privateHomeException:\n          description: Private home exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        suite:\n          description: Suite. A guestroom category that implies both a bedroom area and a separate living area. There may or may not be full walls and doors separating the two areas, but regardless, they are very distinct. Does not mean a couch or chair in a bedroom.\n          type: boolean\n        suiteException:\n          description: Suite exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        tier:\n          description: Tier. Classification of the unit based on available features/amenities. A non-standard tier is only permitted if at least one other unit type falls under the standard tier.\n          enum:\n            - UNIT_TIER_UNSPECIFIED\n            - STANDARD_UNIT\n            - DELUXE_UNIT\n          type: string\n        tierException:\n          description: Tier exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        totalLivingAreas:\n          $ref: \"#/components/schemas/LivingArea\"\n          description: Features available in the living areas in the guest unit.\n        views:\n          $ref: \"#/components/schemas/ViewsFromUnit\"\n          description: Views available from the guest unit itself.\n      type: object\n    GuestUnitType:\n      description: A specific type of unit primarily defined by its features.\n      properties:\n        codes:\n          description: Required. Unit or room code identifiers for a single GuestUnitType. Each code must be unique within a Lodging instance.\n          items:\n            type: string\n          type: array\n        features:\n          $ref: \"#/components/schemas/GuestUnitFeatures\"\n          description: Features and available amenities of the GuestUnitType.\n        label:\n          description: Required. Short, English label or name of the GuestUnitType. Target \u003c50 chars.\n          type: string\n      type: object\n    HealthAndSafety:\n      description: Health and safety measures implemented by the hotel during COVID-19.\n      properties:\n        enhancedCleaning:\n          $ref: \"#/components/schemas/EnhancedCleaning\"\n          description: Enhanced cleaning measures implemented by the hotel during COVID-19.\n        increasedFoodSafety:\n          $ref: \"#/components/schemas/IncreasedFoodSafety\"\n          description: Increased food safety measures implemented by the hotel during COVID-19.\n        minimizedContact:\n          $ref: \"#/components/schemas/MinimizedContact\"\n          description: Minimized contact measures implemented by the hotel during COVID-19.\n        personalProtection:\n          $ref: \"#/components/schemas/PersonalProtection\"\n          description: Personal protection measures implemented by the hotel during COVID-19.\n        physicalDistancing:\n          $ref: \"#/components/schemas/PhysicalDistancing\"\n          description: Physical distancing measures implemented by the hotel during COVID-19.\n      type: object\n    HealthProviderAttributes:\n      description: The Health provider attributes linked with this location.\n      properties:\n        insuranceNetworks:\n          description: Optional. A list of insurance networks accpected by this location.\n          items:\n            $ref: \"#/components/schemas/InsuranceNetwork\"\n          type: array\n        name:\n          description: \"Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/healthProviderAttributes`\"\n          type: string\n      type: object\n    Housekeeping:\n      description: Conveniences provided in guest units to facilitate an easier, more comfortable stay.\n      properties:\n        dailyHousekeeping:\n          description: Daily housekeeping. Guest units are cleaned by hotel staff daily during guest's stay.\n          type: boolean\n        dailyHousekeepingException:\n          description: Daily housekeeping exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        housekeepingAvailable:\n          description: Housekeeping available. Guest units are cleaned by hotel staff during guest's stay. Schedule may vary from daily, weekly, or specific days of the week.\n          type: boolean\n        housekeepingAvailableException:\n          description: Housekeeping available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        turndownService:\n          description: Turndown service. Hotel staff enters guest units to prepare the bed for sleep use. May or may not include some light housekeeping. May or may not include an evening snack or candy. Also known as evening service.\n          type: boolean\n        turndownServiceException:\n          description: Turndown service exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    IncreasedFoodSafety:\n      description: Increased food safety measures implemented by the hotel during COVID-19.\n      properties:\n        diningAreasAdditionalSanitation:\n          description: Additional sanitation in dining areas.\n          type: boolean\n        diningAreasAdditionalSanitationException:\n          description: Dining areas additional sanitation exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        disposableFlatware:\n          description: Disposable flatware.\n          type: boolean\n        disposableFlatwareException:\n          description: Disposable flatware exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        foodPreparationAndServingAdditionalSafety:\n          description: Additional safety measures during food prep and serving.\n          type: boolean\n        foodPreparationAndServingAdditionalSafetyException:\n          description: Food preparation and serving additional safety exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        individualPackagedMeals:\n          description: Individually-packaged meals.\n          type: boolean\n        individualPackagedMealsException:\n          description: Individual packaged meals exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        singleUseFoodMenus:\n          description: Single-use menus.\n          type: boolean\n        singleUseFoodMenusException:\n          description: Single use food menus exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Ingredient:\n      description: This message denotes an ingredient information of a food dish.\n      properties:\n        labels:\n          description: Required. Labels to describe ingredient. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.\n          items:\n            $ref: \"#/components/schemas/MenuLabel\"\n          type: array\n      type: object\n    InsuranceNetwork:\n      description: \"A single insurance network. Next id: 5\"\n      properties:\n        networkId:\n          description: Required. The id of this insurance network generated by Google.\n          type: string\n        networkNames:\n          additionalProperties:\n            type: string\n          description: Output only. A map of network display names in requested languages where the language is the key and localized display name is the value. The display name in English is set by default.\n          readOnly: true\n          type: object\n        payerNames:\n          additionalProperties:\n            type: string\n          description: Output only. A map of payer display names in requested languages where the language is the key and localized display name is the value. The display name in English is set by default.\n          readOnly: true\n          type: object\n        state:\n          description: Output only. The state of this insurance network.\n          enum:\n            - NETWORK_STATE_UNSPECIFIED\n            - ACCEPTED\n            - PENDING_ADD\n            - PENDING_DELETE\n            - NOT_ACCEPTED\n          readOnly: true\n          type: string\n      type: object\n    Invitation:\n      description: Output only. Represents a pending invitation.\n      properties:\n        name:\n          description: The resource name for the invitation.\n          type: string\n        role:\n          description: The invited role on the account.\n          enum:\n            - ADMIN_ROLE_UNSPECIFIED\n            - OWNER\n            - CO_OWNER\n            - MANAGER\n            - COMMUNITY_MANAGER\n          type: string\n        targetAccount:\n          $ref: \"#/components/schemas/Account\"\n          description: The sparsely populated account this invitation is for.\n        targetLocation:\n          $ref: \"#/components/schemas/TargetLocation\"\n          description: The target location this invitation is for.\n      type: object\n    Item:\n      description: A single list item. Each variation of an item in the price list should have its own Item with its own price data.\n      properties:\n        itemId:\n          description: Required. ID for the item. Price list, section, and item IDs cannot be duplicated within this Location.\n          type: string\n        labels:\n          description: Required. Language-tagged labels for the item. We recommend that item names be 140 characters or less, and descriptions 250 characters or less. At least one set of labels is required.\n          items:\n            $ref: \"#/components/schemas/Label\"\n          type: array\n        price:\n          $ref: \"#/components/schemas/Money\"\n          description: Optional. Price of the item.\n      type: object\n    Label:\n      description: Label to be used when displaying the price list, section, or item.\n      properties:\n        description:\n          description: Optional. Description of the price list, section, or item.\n          type: string\n        displayName:\n          description: Required. Display name for the price list, section, or item.\n          type: string\n        languageCode:\n          description: Optional. The BCP-47 language code that these strings apply for. Only one set of labels may be set per language.\n          type: string\n      type: object\n    LanguagesSpoken:\n      description: Languages spoken by at least one staff member.\n      properties:\n        arabicSpoken:\n          description: Arabic. At least one staff member speaks Arabic.\n          type: boolean\n        arabicSpokenException:\n          description: Arabic exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        cantoneseSpoken:\n          description: Cantonese. At least one staff member speaks Cantonese.\n          type: boolean\n        cantoneseSpokenException:\n          description: Cantonese exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        dutchSpoken:\n          description: Dutch. At least one staff member speaks Dutch.\n          type: boolean\n        dutchSpokenException:\n          description: Dutch exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        englishSpoken:\n          description: English. At least one staff member speaks English.\n          type: boolean\n        englishSpokenException:\n          description: English exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        filipinoSpoken:\n          description: Filipino. At least one staff member speaks Filipino.\n          type: boolean\n        filipinoSpokenException:\n          description: Filipino exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        frenchSpoken:\n          description: French. At least one staff member speaks French.\n          type: boolean\n        frenchSpokenException:\n          description: French exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        germanSpoken:\n          description: German. At least one staff member speaks German.\n          type: boolean\n        germanSpokenException:\n          description: German exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        hindiSpoken:\n          description: Hindi. At least one staff member speaks Hindi.\n          type: boolean\n        hindiSpokenException:\n          description: Hindi exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        indonesianSpoken:\n          description: Indonesian. At least one staff member speaks Indonesian.\n          type: boolean\n        indonesianSpokenException:\n          description: Indonesian exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        italianSpoken:\n          description: Italian. At least one staff member speaks Italian.\n          type: boolean\n        italianSpokenException:\n          description: Italian exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        japaneseSpoken:\n          description: Japanese. At least one staff member speaks Japanese.\n          type: boolean\n        japaneseSpokenException:\n          description: Japanese exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        koreanSpoken:\n          description: Korean. At least one staff member speaks Korean.\n          type: boolean\n        koreanSpokenException:\n          description: Korean exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mandarinSpoken:\n          description: Mandarin. At least one staff member speaks Mandarin.\n          type: boolean\n        mandarinSpokenException:\n          description: Mandarin exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        portugueseSpoken:\n          description: Portuguese. At least one staff member speaks Portuguese.\n          type: boolean\n        portugueseSpokenException:\n          description: Portuguese exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        russianSpoken:\n          description: Russian. At least one staff member speaks Russian.\n          type: boolean\n        russianSpokenException:\n          description: Russian exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        spanishSpoken:\n          description: Spanish. At least one staff member speaks Spanish.\n          type: boolean\n        spanishSpokenException:\n          description: Spanish exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        vietnameseSpoken:\n          description: Vietnamese. At least one staff member speaks Vietnamese.\n          type: boolean\n        vietnameseSpokenException:\n          description: Vietnamese exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    LatLng:\n      description: An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges.\n      properties:\n        latitude:\n          description: The latitude in degrees. It must be in the range [-90.0, +90.0].\n          format: double\n          type: number\n        longitude:\n          description: The longitude in degrees. It must be in the range [-180.0, +180.0].\n          format: double\n          type: number\n      type: object\n    ListAccountAdminsResponse:\n      description: Response message for AccessControl.ListAccountAdmins.\n      properties:\n        admins:\n          description: A collection of Admin instances.\n          items:\n            $ref: \"#/components/schemas/Admin\"\n          type: array\n      type: object\n    ListAccountsResponse:\n      description: Response message for Accounts.ListAccounts.\n      properties:\n        accounts:\n          description: A collection of accounts to which the user has access. The personal account of the user doing the query will always be the first item of the result, unless it is filtered out.\n          items:\n            $ref: \"#/components/schemas/Account\"\n          type: array\n        nextPageToken:\n          description: If the number of accounts exceeds the requested page size, this field is populated with a token to fetch the next page of accounts on a subsequent call to `accounts.list`. If there are no more accounts, this field is not present in the response.\n          type: string\n      type: object\n    ListAnswersResponse:\n      description: Response message for QuestionsAndAnswers.ListAnswers\n      properties:\n        answers:\n          description: The requested answers.\n          items:\n            $ref: \"#/components/schemas/Answer\"\n          type: array\n        nextPageToken:\n          description: If the number of answers exceeds the requested max page size, this field is populated with a token to fetch the next page of answers on a subsequent call. If there are no more answers, this field is not present in the response.\n          type: string\n        totalSize:\n          description: The total number of answers posted for this question across all pages.\n          format: int32\n          type: integer\n      type: object\n    ListAttributeMetadataResponse:\n      description: Response message for Locations.ListAttributeMetadata.\n      properties:\n        attributes:\n          description: A collection of attribute metadata for the available attributes.\n          items:\n            $ref: \"#/components/schemas/AttributeMetadata\"\n          type: array\n        nextPageToken:\n          description: If the number of attributes exceeded the requested page size, this field will be populated with a token to fetch the next page of attributes on a subsequent call to `attributes.list`. If there are no more attributes, this field will not be present in the response.\n          type: string\n      type: object\n    ListBusinessCategoriesResponse:\n      properties:\n        categories:\n          description: The categories. Categories are BASIC view. They don't contain any ServiceType information.\n          items:\n            $ref: \"#/components/schemas/Category\"\n          type: array\n        nextPageToken:\n          description: If the number of categories exceeded the requested page size, this field will be populated with a token to fetch the next page of categories on a subsequent call to `ListBusinessCategories`.\n          type: string\n        totalCategoryCount:\n          description: The total number of categories for the request parameters.\n          format: int32\n          type: integer\n      type: object\n    ListCustomerMediaItemsResponse:\n      description: Response message for Media.ListCustomerMediaItems.\n      properties:\n        mediaItems:\n          description: The returned list of media items.\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        nextPageToken:\n          description: If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListCustomerMediaItems.\n          type: string\n        totalMediaItemCount:\n          description: The total number of media items for this location, irrespective of pagination. This number is approximate, particularly when there are multiple pages of results.\n          format: int32\n          type: integer\n      type: object\n    ListInsuranceNetworksResponse:\n      description: Response message for InsuranceNetworkService.ListInsuranceNetworks\n      properties:\n        networks:\n          description: A list of insurance networks that are supported by Google.\n          items:\n            $ref: \"#/components/schemas/InsuranceNetwork\"\n          type: array\n        nextPageToken:\n          description: If there are more insurance networks than the requested page size, then this field is populated with a token to fetch the next page of insurance networks on a subsequent call to ListInsuranceNetworks.\n          type: string\n      type: object\n    ListInvitationsResponse:\n      description: Response message for AccessControl.ListInvitations.\n      properties:\n        invitations:\n          description: A collection of location invitations that are pending for the account. The number of invitations listed here cannot exceed 1000.\n          items:\n            $ref: \"#/components/schemas/Invitation\"\n          type: array\n      type: object\n    ListLocalPostsResponse:\n      description: Response message for ListLocalPosts\n      properties:\n        localPosts:\n          description: The returned list of local posts.\n          items:\n            $ref: \"#/components/schemas/LocalPost\"\n          type: array\n        nextPageToken:\n          description: If there are more local posts than the requested page size, then this field is populated with a token to fetch the next page of local posts on a subsequent call to `ListLocalPosts`.\n          type: string\n      type: object\n    ListLocationAdminsResponse:\n      description: Response message for AccessControl.ListLocationAdmins.\n      properties:\n        admins:\n          description: A collection of Admin instances.\n          items:\n            $ref: \"#/components/schemas/Admin\"\n          type: array\n      type: object\n    ListLocationsResponse:\n      description: Response message for Locations.ListLocations.\n      properties:\n        locations:\n          description: The locations.\n          items:\n            $ref: \"#/components/schemas/Location\"\n          type: array\n        nextPageToken:\n          description: If the number of locations exceeded the requested page size, this field is populated with a token to fetch the next page of locations on a subsequent call to `ListLocations`. If there are no more locations, this field is not present in the response.\n          type: string\n        totalSize:\n          description: The approximate number of Locations in the list irrespective of pagination.\n          format: int32\n          type: integer\n      type: object\n    ListMediaItemsResponse:\n      description: Response message for Media.ListMediaItems.\n      properties:\n        mediaItems:\n          description: The returned list of media items.\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        nextPageToken:\n          description: If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListMediaItems.\n          type: string\n        totalMediaItemCount:\n          description: The total number of media items for this location, irrespective of pagination.\n          format: int32\n          type: integer\n      type: object\n    ListQuestionsResponse:\n      description: Response message for QuestionsAndAnswers.ListQuestions\n      properties:\n        nextPageToken:\n          description: If the number of questions exceeds the requested max page size, this field is populated with a token to fetch the next page of questions on a subsequent call. If there are no more questions, this field is not present in the response.\n          type: string\n        questions:\n          description: The requested questions,\n          items:\n            $ref: \"#/components/schemas/Question\"\n          type: array\n        totalSize:\n          description: The total number of questions posted for this location across all pages.\n          format: int32\n          type: integer\n      type: object\n    ListRecommendedGoogleLocationsResponse:\n      description: Response message for GoogleLocations.ListRecommendedGoogleLocations. It also contains some locations that have been claimed by other GMB users since the last time they were recommended to this GMB account.\n      properties:\n        googleLocations:\n          description: The locations recommended to a GMB account. Each of these represents a GoogleLocation that is present on Maps. The locations are sorted in decreasing order of relevance to the GMB account.\n          items:\n            $ref: \"#/components/schemas/GoogleLocation\"\n          type: array\n        nextPageToken:\n          description: During pagination, if there are more locations available to be fetched in the next page, this field is populated with a token to fetch the next page of locations in a subsequent call. If there are no more locations to be fetched, this field is not present in the response.\n          type: string\n        totalSize:\n          description: The total number of recommended locations for this GMB account, irrespective of pagination.\n          format: int32\n          type: integer\n      type: object\n    ListReviewsResponse:\n      description: Response message for Reviews.ListReviews.\n      properties:\n        averageRating:\n          description: The average star rating of all reviews for this location on a scale of 1 to 5, where 5 is the highest rating.\n          format: double\n          type: number\n        nextPageToken:\n          description: If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent call to ListReviews. If there are no more reviews, this field is not present in the response.\n          type: string\n        reviews:\n          description: The reviews.\n          items:\n            $ref: \"#/components/schemas/Review\"\n          type: array\n        totalReviewCount:\n          description: The total number of reviews for this location.\n          format: int32\n          type: integer\n      type: object\n    ListVerificationsResponse:\n      description: Response message for Verifications.ListVerifications.\n      properties:\n        nextPageToken:\n          description: If the number of verifications exceeded the requested page size, this field will be populated with a token to fetch the next page of verification on a subsequent call. If there are no more attributes, this field will not be present in the response.\n          type: string\n        verifications:\n          description: List of the verifications.\n          items:\n            $ref: \"#/components/schemas/Verification\"\n          type: array\n      type: object\n    LivingArea:\n      description: An individual room, such as kitchen, bathroom, bedroom, within a bookable guest unit.\n      properties:\n        accessibility:\n          $ref: \"#/components/schemas/LivingAreaAccessibility\"\n          description: Accessibility features of the living area.\n        eating:\n          $ref: \"#/components/schemas/LivingAreaEating\"\n          description: Information about eating features in the living area.\n        features:\n          $ref: \"#/components/schemas/LivingAreaFeatures\"\n          description: Features in the living area.\n        layout:\n          $ref: \"#/components/schemas/LivingAreaLayout\"\n          description: Information about the layout of the living area.\n        sleeping:\n          $ref: \"#/components/schemas/LivingAreaSleeping\"\n          description: Information about sleeping features in the living area.\n      type: object\n    LivingAreaAccessibility:\n      description: Accessibility features of the living area.\n      properties:\n        adaCompliantUnit:\n          description: ADA compliant unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues, as determined by legislative policy. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged.\n          type: boolean\n        adaCompliantUnitException:\n          description: ADA compliant unit exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        hearingAccessibleDoorbell:\n          description: Hearing-accessible doorbell. A visual indicator(s) of a knock or ring at the door.\n          type: boolean\n        hearingAccessibleDoorbellException:\n          description: Hearing-accessible doorbell exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        hearingAccessibleFireAlarm:\n          description: Hearing-accessible fire alarm. A device that gives warning of a fire through flashing lights.\n          type: boolean\n        hearingAccessibleFireAlarmException:\n          description: Hearing-accessible fire alarm exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        hearingAccessibleUnit:\n          description: Hearing-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with auditory issues.\n          type: boolean\n        hearingAccessibleUnitException:\n          description: Hearing-accessible unit exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobilityAccessibleBathtub:\n          description: Mobility-accessible bathtub. A bathtub that accomodates the physically challenged with additional railings or hand grips, a transfer seat or lift, and/or a door to enable walking into the tub.\n          type: boolean\n        mobilityAccessibleBathtubException:\n          description: Mobility-accessible bathtub exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobilityAccessibleShower:\n          description: Mobility-accessible shower. A shower with an enlarged door or access point to accommodate a wheelchair or a waterproof seat for the physically challenged.\n          type: boolean\n        mobilityAccessibleShowerException:\n          description: Mobility-accessible shower exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobilityAccessibleToilet:\n          description: Mobility-accessible toilet. A toilet with a higher seat, grab bars, and/or a larger area around it to accommodate the physically challenged.\n          type: boolean\n        mobilityAccessibleToiletException:\n          description: Mobility-accessible toilet exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobilityAccessibleUnit:\n          description: Mobility-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged.\n          type: boolean\n        mobilityAccessibleUnitException:\n          description: Mobility-accessible unit exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    LivingAreaEating:\n      description: Information about eating features in the living area.\n      properties:\n        coffeeMaker:\n          description: Coffee maker. An electric appliance that brews coffee by heating and forcing water through ground coffee.\n          type: boolean\n        coffeeMakerException:\n          description: Coffee maker exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        cookware:\n          description: Cookware. Kitchen pots, pans and utensils used in connection with the preparation of food.\n          type: boolean\n        cookwareException:\n          description: Cookware exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        dishwasher:\n          description: Dishwasher. A counter-height electrical cabinet containing racks for dirty dishware, cookware and cutlery, and a dispenser for soap built into the pull-down door. The cabinet is attached to the plumbing system to facilitate the automatic cleaning of its contents.\n          type: boolean\n        dishwasherException:\n          description: Dishwasher exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        indoorGrill:\n          description: Indoor grill. Metal grates built into an indoor cooktop on which food is cooked over an open flame or electric heat source.\n          type: boolean\n        indoorGrillException:\n          description: Indoor grill exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        kettle:\n          description: Kettle. A covered container with a handle and a spout used for boiling water.\n          type: boolean\n        kettleException:\n          description: Kettle exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        kitchenAvailable:\n          description: Kitchen available. An area of the guestroom designated for the preparation and storage of food via the presence of a refrigerator, cook top, oven and sink, as well as cutlery, dishes and cookware. Usually includes small appliances such a coffee maker and a microwave. May or may not include an automatic dishwasher.\n          type: boolean\n        kitchenAvailableException:\n          description: Kitchen available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        microwave:\n          description: Microwave. An electric oven that quickly cooks and heats food by microwave energy. Smaller than a standing or wall mounted oven. Usually placed on a kitchen counter, a shelf or tabletop or mounted above a cooktop.\n          type: boolean\n        microwaveException:\n          description: Microwave exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        minibar:\n          description: Minibar. A small refrigerated cabinet in the guestroom containing bottles/cans of soft drinks, mini bottles of alcohol, and snacks. The items are most commonly available for a fee.\n          type: boolean\n        minibarException:\n          description: Minibar exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        outdoorGrill:\n          description: Outdoor grill. Metal grates on which food is cooked over an open flame or electric heat source. Part of an outdoor apparatus that supports the grates. Also known as barbecue grill or barbecue.\n          type: boolean\n        outdoorGrillException:\n          description: Outdoor grill exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        oven:\n          description: Oven. A temperature controlled, heated metal cabinet powered by gas or electricity in which food is placed for the purpose of cooking or reheating.\n          type: boolean\n        ovenException:\n          description: Oven exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        refrigerator:\n          description: Refrigerator. A large, climate-controlled electrical cabinet with vertical doors. Built for the purpose of chilling and storing perishable foods.\n          type: boolean\n        refrigeratorException:\n          description: Refrigerator exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        sink:\n          description: Sink. A basin with a faucet attached to a water source and used for the purpose of washing and rinsing.\n          type: boolean\n        sinkException:\n          description: Sink exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        snackbar:\n          description: Snackbar. A small cabinet in the guestroom containing snacks. The items are most commonly available for a fee.\n          type: boolean\n        snackbarException:\n          description: Snackbar exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        stove:\n          description: Stove. A kitchen appliance powered by gas or electricity for the purpose of creating a flame or hot surface on which pots of food can be cooked. Also known as cooktop or hob.\n          type: boolean\n        stoveException:\n          description: Stove exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        teaStation:\n          description: Tea station. A small area with the supplies needed to heat water and make tea.\n          type: boolean\n        teaStationException:\n          description: Tea station exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        toaster:\n          description: Toaster. A small, temperature controlled electric appliance with rectangular slots at the top that are lined with heated coils for the purpose of browning slices of bread products.\n          type: boolean\n        toasterException:\n          description: Toaster exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    LivingAreaFeatures:\n      description: Features in the living area.\n      properties:\n        airConditioning:\n          description: Air conditioning. An electrical machine used to cool the temperature of the guestroom.\n          type: boolean\n        airConditioningException:\n          description: Air conditioning exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        bathtub:\n          description: Bathtub. A fixed plumbing feature set on the floor and consisting of a large container that accommodates the body of an adult for the purpose of seated bathing. Includes knobs or fixtures to control the temperature of the water, a faucet through which the water flows, and a drain that can be closed for filling and opened for draining.\n          type: boolean\n        bathtubException:\n          description: Bathtub exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        bidet:\n          description: Bidet. A plumbing fixture attached to a toilet or a low, fixed sink designed for the purpose of washing after toilet use.\n          type: boolean\n        bidetException:\n          description: Bidet exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        dryer:\n          description: Dryer. An electrical machine designed to dry clothing.\n          type: boolean\n        dryerException:\n          description: Dryer exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        electronicRoomKey:\n          description: Electronic room key. A card coded by the check-in computer that is read by the lock on the hotel guestroom door to allow for entry.\n          type: boolean\n        electronicRoomKeyException:\n          description: Electronic room key exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        fireplace:\n          description: Fireplace. A framed opening (aka hearth) at the base of a chimney in which logs or an electrical fire feature are burned to provide a relaxing ambiance or to heat the room. Often made of bricks or stone.\n          type: boolean\n        fireplaceException:\n          description: Fireplace exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        hairdryer:\n          description: Hairdryer. A handheld electric appliance that blows temperature-controlled air for the purpose of drying wet hair. Can be mounted to a bathroom wall or a freestanding device stored in the guestroom's bathroom or closet.\n          type: boolean\n        hairdryerException:\n          description: Hairdryer exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        heating:\n          description: Heating. An electrical machine used to warm the temperature of the guestroom.\n          type: boolean\n        heatingException:\n          description: Heating exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        inunitSafe:\n          description: In-unit safe. A strong fireproof cabinet with a programmable lock, used for the protected storage of valuables in a guestroom. Often built into a closet.\n          type: boolean\n        inunitSafeException:\n          description: In-unit safe exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        inunitWifiAvailable:\n          description: In-unit Wifi available. Guests can wirelessly connect to the Internet in the guestroom. Can be free or for a fee.\n          type: boolean\n        inunitWifiAvailableException:\n          description: In-unit Wifi available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        ironingEquipment:\n          description: Ironing equipment. A device, usually with a flat metal base, that is heated to smooth, finish, or press clothes and a flat, padded, cloth-covered surface on which the clothes are worked.\n          type: boolean\n        ironingEquipmentException:\n          description: Ironing equipment exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        payPerViewMovies:\n          description: Pay per view movies. Televisions with channels that offer films that can be viewed for a fee, and have an interface to allow the viewer to accept the terms and approve payment.\n          type: boolean\n        payPerViewMoviesException:\n          description: Pay per view movies exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        privateBathroom:\n          description: Private bathroom. A bathroom designated for the express use of the guests staying in a specific guestroom.\n          type: boolean\n        privateBathroomException:\n          description: Private bathroom exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        shower:\n          description: Shower. A fixed plumbing fixture for standing bathing that features a tall spray spout or faucet through which water flows, a knob or knobs that control the water's temperature, and a drain in the floor.\n          type: boolean\n        showerException:\n          description: Shower exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        toilet:\n          description: Toilet. A fixed bathroom feature connected to a sewer or septic system and consisting of a water-flushed bowl with a seat, as well as a device that elicites the water-flushing action. Used for the process and disposal of human waste.\n          type: boolean\n        toiletException:\n          description: Toilet exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        tv:\n          description: TV. A television is available in the guestroom.\n          type: boolean\n        tvCasting:\n          description: TV casting. A television equipped with a device through which the video entertainment accessed on a personal computer, phone or tablet can be wirelessly delivered to and viewed on the guestroom's television.\n          type: boolean\n        tvCastingException:\n          description: TV exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        tvException:\n          description: TV exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        tvStreaming:\n          description: TV streaming. Televisions that embed a range of web-based apps to allow for watching media from those apps.\n          type: boolean\n        tvStreamingException:\n          description: TV streaming exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        universalPowerAdapters:\n          description: Universal power adapters. A power supply for electronic devices which plugs into a wall for the purpose of converting AC to a single DC voltage. Also know as AC adapter or charger.\n          type: boolean\n        universalPowerAdaptersException:\n          description: Universal power adapters exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        washer:\n          description: Washer. An electrical machine connected to a running water source designed to launder clothing.\n          type: boolean\n        washerException:\n          description: Washer exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    LivingAreaLayout:\n      description: Information about the layout of the living area.\n      properties:\n        balcony:\n          description: Balcony. An outdoor platform attached to a building and surrounded by a short wall, fence or other safety railing. The balcony is accessed through a door in a guestroom or suite and is for use by the guest staying in that room. May or may not include seating or outdoor furniture. Is not located on the ground floor. Also lanai.\n          type: boolean\n        balconyException:\n          description: Balcony exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        livingAreaSqMeters:\n          description: Living area sq meters. The measurement in meters of the area of a guestroom's living space.\n          format: float\n          type: number\n        livingAreaSqMetersException:\n          description: Living area sq meters exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        loft:\n          description: Loft. A three-walled upper area accessed by stairs or a ladder that overlooks the lower area of a room.\n          type: boolean\n        loftException:\n          description: Loft exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        nonSmoking:\n          description: Non smoking. A guestroom in which the smoking of cigarettes, cigars and pipes is prohibited.\n          type: boolean\n        nonSmokingException:\n          description: Non smoking exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        patio:\n          description: Patio. A paved, outdoor area with seating attached to and accessed through a ground-floor guestroom for use by the occupants of the guestroom.\n          type: boolean\n        patioException:\n          description: Patio exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        stairs:\n          description: Stairs. There are steps leading from one level or story to another in the unit.\n          type: boolean\n        stairsException:\n          description: Stairs exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    LivingAreaSleeping:\n      description: Information about sleeping features in the living area.\n      properties:\n        bedsCount:\n          description: Beds count. The number of permanent beds present in a guestroom. Does not include rollaway beds, cribs or sofabeds.\n          format: int32\n          type: integer\n        bedsCountException:\n          description: Beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        bunkBedsCount:\n          description: Bunk beds count. The number of furniture pieces in which one framed mattress is fixed directly above another by means of a physical frame. This allows one person(s) to sleep in the bottom bunk and one person(s) to sleep in the top bunk. Also known as double decker bed.\n          format: int32\n          type: integer\n        bunkBedsCountException:\n          description: Bunk beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        cribsCount:\n          description: Cribs count. The number of small beds for an infant or toddler that the guestroom can obtain. The bed is surrounded by a high railing to prevent the child from falling or climbing out of the bed\n          format: int32\n          type: integer\n        cribsCountException:\n          description: Cribs count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        doubleBedsCount:\n          description: Double beds count. The number of medium beds measuring 53\"W x 75\"L (135cm x 191cm). Also known as full size bed.\n          format: int32\n          type: integer\n        doubleBedsCountException:\n          description: Double beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        featherPillows:\n          description: Feather pillows. The option for guests to obtain bed pillows that are stuffed with the feathers and down of ducks or geese.\n          type: boolean\n        featherPillowsException:\n          description: Feather pillows exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        hypoallergenicBedding:\n          description: Hypoallergenic bedding. Bedding such as linens, pillows, mattress covers and/or mattresses that are made of materials known to be resistant to allergens such as mold, dust and dander.\n          type: boolean\n        hypoallergenicBeddingException:\n          description: Hypoallergenic bedding exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        kingBedsCount:\n          description: King beds count. The number of large beds measuring 76\"W x 80\"L (193cm x 102cm). Most often meant to accompany two people. Includes California king and super king.\n          format: int32\n          type: integer\n        kingBedsCountException:\n          description: King beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        memoryFoamPillows:\n          description: Memory foam pillows. The option for guests to obtain bed pillows that are stuffed with a man-made foam that responds to body heat by conforming to the body closely, and then recovers its shape when the pillow cools down.\n          type: boolean\n        memoryFoamPillowsException:\n          description: Memory foam pillows exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        otherBedsCount:\n          description: Other beds count. The number of beds that are not standard mattress and boxspring setups such as Japanese tatami mats, trundle beds, air mattresses and cots.\n          format: int32\n          type: integer\n        otherBedsCountException:\n          description: Other beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        queenBedsCount:\n          description: Queen beds count. The number of medium-large beds measuring 60\"W x 80\"L (152cm x 102cm).\n          format: int32\n          type: integer\n        queenBedsCountException:\n          description: Queen beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        rollAwayBedsCount:\n          description: Roll away beds count. The number of mattresses on wheeled frames that can be folded in half and rolled away for easy storage that the guestroom can obtain upon request.\n          format: int32\n          type: integer\n        rollAwayBedsCountException:\n          description: Roll away beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        singleOrTwinBedsCount:\n          description: Single or twin count beds. The number of smaller beds measuring 38\"W x 75\"L (97cm x 191cm) that can accommodate one adult.\n          format: int32\n          type: integer\n        singleOrTwinBedsCountException:\n          description: Single or twin beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        sofaBedsCount:\n          description: Sofa beds count. The number of specially designed sofas that can be made to serve as a bed by lowering its hinged upholstered back to horizontal position or by pulling out a concealed mattress.\n          format: int32\n          type: integer\n        sofaBedsCountException:\n          description: Sofa beds count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        syntheticPillows:\n          description: Synthetic pillows. The option for guests to obtain bed pillows stuffed with polyester material crafted to reproduce the feel of a pillow stuffed with down and feathers.\n          type: boolean\n        syntheticPillowsException:\n          description: Synthetic pillows exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    LocalPost:\n      description: Represents a [local post](https://support.google.com/business/answer/7662907) for a location.\n      properties:\n        alertType:\n          description: The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts.\n          enum:\n            - ALERT_TYPE_UNSPECIFIED\n            - COVID_19\n          type: string\n        callToAction:\n          $ref: \"#/components/schemas/CallToAction\"\n          description: The URL that users are sent to when clicking through the promotion. Ignored for topic type `OFFER`.\n        createTime:\n          description: Output only. Time of the creation of the post.\n          format: google-datetime\n          type: string\n        event:\n          $ref: \"#/components/schemas/LocalPostEvent\"\n          description: Event information. Required for topic types `EVENT` and `OFFER`.\n        languageCode:\n          description: The language of the local post.\n          type: string\n        media:\n          description: The media associated with the post. source_url is the only supported data field for a LocalPost MediaItem.\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        name:\n          description: \"Output only. Google identifier for this local post in the form: `accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id}`\"\n          type: string\n        offer:\n          $ref: \"#/components/schemas/LocalPostOffer\"\n          description: Additional data for offer posts. This should only be set when the topic_type is OFFER.\n        searchUrl:\n          description: Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc.\n          type: string\n        state:\n          description: Output only. The state of the post, indicating what part of its lifecycle it is in.\n          enum:\n            - LOCAL_POST_STATE_UNSPECIFIED\n            - REJECTED\n            - LIVE\n            - PROCESSING\n          type: string\n        summary:\n          description: Description/body of the local post.\n          type: string\n        topicType:\n          description: \"Required. The topic type of the post: standard, event, offer, or alert.\"\n          enum:\n            - LOCAL_POST_TOPIC_TYPE_UNSPECIFIED\n            - STANDARD\n            - EVENT\n            - OFFER\n            - ALERT\n          type: string\n        updateTime:\n          description: Output only. Time of the last modification of the post made by the user.\n          format: google-datetime\n          type: string\n      type: object\n    LocalPostEvent:\n      description: All the information pertaining to an event featured in a local post.\n      properties:\n        schedule:\n          $ref: \"#/components/schemas/TimeInterval\"\n          description: Event start and end date/time.\n        title:\n          description: Name of the event.\n          type: string\n      type: object\n    LocalPostMetrics:\n      description: All the metrics requested for a Local Post.\n      properties:\n        localPostName:\n          description: Local post name\n          type: string\n        metricValues:\n          description: A list of values for the requested metrics.\n          items:\n            $ref: \"#/components/schemas/MetricValue\"\n          type: array\n      type: object\n    LocalPostOffer:\n      description: Specific fields for offer posts.\n      properties:\n        couponCode:\n          description: Optional. Offer code that is usable in store or online.\n          type: string\n        redeemOnlineUrl:\n          description: Optional. Online link to redeem offer.\n          type: string\n        termsConditions:\n          description: Optional. Offer terms and conditions.\n          type: string\n      type: object\n    Location:\n      description: A location. See the [help center article] (https://support.google.com/business/answer/3038177) for a detailed description of these fields, or the [category endpoint](/my-business/reference/rest/v4/categories) for a list of valid business categories.\n      properties:\n        adWordsLocationExtensions:\n          $ref: \"#/components/schemas/AdWordsLocationExtensions\"\n          description: Additional information that is surfaced in AdWords.\n        additionalCategories:\n          description: Additional categories to describe your business. Categories help your customers find accurate, specific results for services they're interested in. To keep your business information accurate and live, make sure that you use as few categories as possible to describe your overall core business. Choose categories that are as specific as possible, but representative of your main business.\n          items:\n            $ref: \"#/components/schemas/Category\"\n          type: array\n        additionalPhones:\n          description: Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.\n          items:\n            type: string\n          type: array\n        address:\n          $ref: \"#/components/schemas/PostalAddress\"\n          description: A precise, accurate address to describe your business location. PO boxes or mailboxes located at remote locations are not acceptable. At this time, you can specify a maximum of five `address_lines` values in the address.\n        attributes:\n          description: Attributes for this location.\n          items:\n            $ref: \"#/components/schemas/Attribute\"\n          type: array\n        labels:\n          description: A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label).\n          items:\n            type: string\n          type: array\n        languageCode:\n          description: The language of the location. Set during creation and not updateable.\n          type: string\n        latlng:\n          $ref: \"#/components/schemas/LatLng\"\n          description: User-provided latitude and longitude. When creating a location, this field is ignored if the provided address geocodes successfully. This field is only returned on get requests if the user-provided `latlng` value was accepted during create, or the `latlng` value was updated through the Google My Business website. This field cannot be updated.\n        locationKey:\n          $ref: \"#/components/schemas/LocationKey\"\n          description: A collection of keys that link this business to other Google properties, such as a Google+ page and Google Maps Places.\n        locationName:\n          description: Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\").\n          type: string\n        locationState:\n          $ref: \"#/components/schemas/LocationState\"\n          description: Output only. A set of booleans that reflects the [state of a location.](https://support.google.com/business/answer/3480862)\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n          description: Output Only. Additional non-user-editable information.\n        moreHours:\n          description: More hours for a business's different departments or specific customers.\n          items:\n            $ref: \"#/components/schemas/MoreHours\"\n          type: array\n        name:\n          description: \"Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}` In the context of matches, this field will not be populated.\"\n          type: string\n        openInfo:\n          $ref: \"#/components/schemas/OpenInfo\"\n          description: A flag that indicates whether the location is currently open for business.\n        priceLists:\n          description: Price list information for this location.\n          items:\n            $ref: \"#/components/schemas/PriceList\"\n          type: array\n        primaryCategory:\n          $ref: \"#/components/schemas/Category\"\n          description: Category that best describes the core business this location engages in.\n        primaryPhone:\n          description: A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.\n          type: string\n        profile:\n          $ref: \"#/components/schemas/Profile\"\n          description: Describes your business in your own voice and shares with users the unique story of your business and offerings.\n        regularHours:\n          $ref: \"#/components/schemas/BusinessHours\"\n          description: Operating hours for the business.\n        relationshipData:\n          $ref: \"#/components/schemas/RelationshipData\"\n          description: All locations and chain related to this one.\n        serviceArea:\n          $ref: \"#/components/schemas/ServiceAreaBusiness\"\n          description: Service area businesses provide their service at the customer's location. If this business is a service area business, this field describes the area(s) serviced by the business.\n        specialHours:\n          $ref: \"#/components/schemas/SpecialHours\"\n          description: Special hours for the business. This typically includes holiday hours, and other times outside of regular operating hours. These override regular business hours.\n        storeCode:\n          description: External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records.\n          type: string\n        websiteUrl:\n          description: A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.\n          type: string\n      type: object\n    LocationAssociation:\n      description: How the media item is associated with its location.\n      properties:\n        category:\n          description: The category that this location photo belongs to.\n          enum:\n            - CATEGORY_UNSPECIFIED\n            - COVER\n            - PROFILE\n            - LOGO\n            - EXTERIOR\n            - INTERIOR\n            - PRODUCT\n            - AT_WORK\n            - FOOD_AND_DRINK\n            - MENU\n            - COMMON_AREA\n            - ROOMS\n            - TEAMS\n            - ADDITIONAL\n          type: string\n        priceListItemId:\n          description: The ID of a price list item that this location photo is associated with.\n          type: string\n      type: object\n    LocationDrivingDirectionMetrics:\n      description: A location indexed with the regions that people usually come from. This is captured by counting how many driving-direction requests to this location are from each region.\n      properties:\n        locationName:\n          description: The location resource name this metric value belongs to.\n          type: string\n        timeZone:\n          description: Time zone (IANA timezone IDs, for example, 'Europe/London') of the location.\n          type: string\n        topDirectionSources:\n          description: Driving-direction requests by source region. By convention, these are sorted by count with at most 10 results.\n          items:\n            $ref: \"#/components/schemas/TopDirectionSources\"\n          type: array\n      type: object\n    LocationKey:\n      description: Alternate/surrogate key references for a location.\n      properties:\n        explicitNoPlaceId:\n          description: Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet.\n          type: boolean\n        placeId:\n          description: If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional `explicit_no_place_id` bool qualifies whether an unset place ID is deliberate or not.\n          type: string\n        plusPageId:\n          description: Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location.\n          type: string\n        requestId:\n          description: Output only. The `request_id` used to create this location. May be empty if this location was created outside of the GMB API or Google My Business Locations.\n          type: string\n      type: object\n    LocationMetrics:\n      description: A series of Metrics and BreakdownMetrics associated with a Location over some time range.\n      properties:\n        locationName:\n          description: The location resource name these values belong to.\n          type: string\n        metricValues:\n          description: A list of values for the requested metrics.\n          items:\n            $ref: \"#/components/schemas/MetricValue\"\n          type: array\n        timeZone:\n          description: IANA timezone for the location.\n          type: string\n      type: object\n    LocationReview:\n      description: Represents a review with location information.\n      properties:\n        name:\n          description: Location resource name.\n          type: string\n        review:\n          $ref: \"#/components/schemas/Review\"\n          description: A review for the location.\n      type: object\n    LocationState:\n      description: Contains a set of booleans that reflect the [state of a Location.](https://support.google.com/business/answer/3480862)\n      properties:\n        canDelete:\n          description: Output only. Indicates whether the location can be deleted using the Google My Business API.\n          type: boolean\n        canHaveFoodMenus:\n          description: Output only. Indicates if the listing is eligible for food menu.\n          readOnly: true\n          type: boolean\n        canModifyServiceList:\n          description: Output only. Indicates if the listing can modify a ServiceList.\n          readOnly: true\n          type: boolean\n        canOperateHealthData:\n          description: Output only. Indicates whether the location can operate on Health data.\n          readOnly: true\n          type: boolean\n        canOperateLodgingData:\n          description: Output only. Indicates whether the location can operate on Lodging data.\n          readOnly: true\n          type: boolean\n        canUpdate:\n          description: Output only. Indicates whether the location can be updated.\n          type: boolean\n        hasPendingEdits:\n          description: Output only. Indicates whether any of this Location's properties are in the edit pending state.\n          type: boolean\n        hasPendingVerification:\n          description: Output only. Indicates whether the location has pending verification requests.\n          type: boolean\n        isDisabled:\n          description: Output only. Indicates whether the location is disabled.\n          type: boolean\n        isDisconnected:\n          description: Output only. Indicates whether the location is disconnected from a place on Google Maps.\n          type: boolean\n        isDuplicate:\n          description: Output only. Indicates whether the location is a duplicate of another location.\n          type: boolean\n        isGoogleUpdated:\n          description: Output only. Indicates whether the place ID associated with this location has updates.\n          type: boolean\n        isLocalPostApiDisabled:\n          description: Output only. Indicates whether [accounts.locations.localPosts](/my-business/reference/rest/v4/accounts.locations.localPosts) is disabled for this location.\n          type: boolean\n        isPendingReview:\n          description: Output only. Indicates whether the review of the location is pending.\n          type: boolean\n        isPublished:\n          description: Output only. Indicates whether the location is published.\n          type: boolean\n        isSuspended:\n          description: Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145).\n          type: boolean\n        isVerified:\n          description: Output only. Indicates whether the location is verified.\n          type: boolean\n        needsReverification:\n          description: Output only. Indicates whether the location requires reverification.\n          type: boolean\n      type: object\n    Lodging:\n      description: Lodging of a location that provides accomodations.\n      properties:\n        accessibility:\n          $ref: \"#/components/schemas/Accessibility\"\n          description: Physical adaptations made to the property in consideration of varying levels of human physical ability.\n        activities:\n          $ref: \"#/components/schemas/Activities\"\n          description: Amenities and features related to leisure and play.\n        allUnits:\n          $ref: \"#/components/schemas/GuestUnitFeatures\"\n          description: All units on the property have at least these attributes.\n        business:\n          $ref: \"#/components/schemas/Business\"\n          description: Features of the property of specific interest to the business traveler.\n        commonLivingArea:\n          $ref: \"#/components/schemas/LivingArea\"\n          description: Features of the shared living areas available in this Lodging.\n        connectivity:\n          $ref: \"#/components/schemas/Connectivity\"\n          description: The ways in which the property provides guests with the ability to access the internet.\n        families:\n          $ref: \"#/components/schemas/Families\"\n          description: Services and amenities for families and young guests.\n        foodAndDrink:\n          $ref: \"#/components/schemas/FoodAndDrink\"\n          description: Meals, snacks, and beverages available at the property.\n        guestUnits:\n          description: Individual GuestUnitTypes that are available in this Lodging.\n          items:\n            $ref: \"#/components/schemas/GuestUnitType\"\n          type: array\n        healthAndSafety:\n          $ref: \"#/components/schemas/HealthAndSafety\"\n          description: Health and safety measures implemented by the hotel during COVID-19.\n        housekeeping:\n          $ref: \"#/components/schemas/Housekeeping\"\n          description: Conveniences provided in guest units to facilitate an easier, more comfortable stay.\n        metadata:\n          $ref: \"#/components/schemas/LodgingMetadata\"\n          description: Required. Metadata for the lodging.\n        name:\n          description: \"Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/lodging`\"\n          type: string\n        parking:\n          $ref: \"#/components/schemas/Parking\"\n          description: Parking options at the property.\n        pets:\n          $ref: \"#/components/schemas/Pets\"\n          description: Policies regarding guest-owned animals.\n        policies:\n          $ref: \"#/components/schemas/Policies\"\n          description: Property rules that impact guests.\n        pools:\n          $ref: \"#/components/schemas/Pools\"\n          description: Swimming pool or recreational water facilities available at the hotel.\n        property:\n          $ref: \"#/components/schemas/Property\"\n          description: General factual information about the property's physical structure and important dates.\n        services:\n          $ref: \"#/components/schemas/Services\"\n          description: Conveniences or help provided by the property to facilitate an easier, more comfortable stay.\n        someUnits:\n          $ref: \"#/components/schemas/GuestUnitFeatures\"\n          description: Some units on the property have as much as these attributes.\n        transportation:\n          $ref: \"#/components/schemas/Transportation\"\n          description: Vehicles or vehicular services facilitated or owned by the property.\n        wellness:\n          $ref: \"#/components/schemas/Wellness\"\n          description: Guest facilities at the property to promote or maintain health, beauty, and fitness.\n      type: object\n    LodgingMetadata:\n      description: Metadata for the Lodging.\n      properties:\n        updateTime:\n          description: Required. The latest time at which the Lodging data is asserted to be true in the real world. This is not necessarily the time at which the request is made.\n          format: google-datetime\n          type: string\n      type: object\n    MatchedLocation:\n      description: Represents a possible match to a location.\n      properties:\n        isExactMatch:\n          description: Is this an exact match?\n          type: boolean\n        location:\n          $ref: \"#/components/schemas/Location\"\n          description: \"The sparsely populated location that is a potential match. Unpopulated fields include, but may not be limited to: name (the matched location cannot be retrieved via `GetLocation` nor `BatchGetLocations`); `store_code`; `service_area` coverage area details; `labels`; `ad_words_location_extensions`; `photos`\"\n      type: object\n    MediaInsights:\n      description: Insights and statistics for the media item.\n      properties:\n        viewCount:\n          description: Output only. The number of times the media item has been viewed.\n          format: int64\n          type: string\n      type: object\n    MediaItem:\n      description: A single media item.\n      properties:\n        attribution:\n          $ref: \"#/components/schemas/Attribution\"\n          description: Output only. Attribution information for customer media items. You must display this attribution as provided to your users and must not delete or alter the attribution.\n        createTime:\n          description: Output only. Creation time of this media item.\n          format: google-datetime\n          type: string\n        dataRef:\n          $ref: \"#/components/schemas/MediaItemDataRef\"\n          description: Input only. A reference to media item binary data as obtained by the `StartUploadMediaItemData` method. When creating a media item, either sourceUrl or dataRef must be set.\n        description:\n          description: Description for this media item. Descriptions cannot be modified through the My Business API, but can be set when creating a new media item that is not a cover photo.\n          type: string\n        dimensions:\n          $ref: \"#/components/schemas/Dimensions\"\n          description: Output only. The dimensions (width and height) in pixels.\n        googleUrl:\n          description: Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon.\n          type: string\n        insights:\n          $ref: \"#/components/schemas/MediaInsights\"\n          description: Output only. Statistics for this media item.\n        locationAssociation:\n          $ref: \"#/components/schemas/LocationAssociation\"\n          description: Required when calling `CreatePhoto`. Describes how this media item is connected to its location. Must be either a category (for example, EXTERIOR) or the ID of a price list item. This is required when adding new media to a location with `CreateMediaItem`. For other types of media, for example, photos on local posts, this will not be present.\n        mediaFormat:\n          description: The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated.\n          enum:\n            - MEDIA_FORMAT_UNSPECIFIED\n            - PHOTO\n            - VIDEO\n          type: string\n        name:\n          description: The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`\n          type: string\n        sourceUrl:\n          description: A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated.\n          type: string\n        thumbnailUrl:\n          description: Output only. Where provided, the URL of a thumbnail image for this media item.\n          type: string\n      type: object\n    MediaItemDataRef:\n      description: Reference to the photo binary data of a `MediaItem` uploaded through the My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem.\n      properties:\n        resourceName:\n          description: \"The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: `curl -X POST -T{path_to_file} \\\"http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media\\\"` For CreateMediaItem calls, set this as the `MediaItem` `data_ref`.\"\n          type: string\n      type: object\n    MenuLabel:\n      description: Label to be used when displaying the menu and its various sub-components.\n      properties:\n        description:\n          description: Optional. Supplementary information of the component.\n          type: string\n        displayName:\n          description: Required. Display name of the component.\n          type: string\n        languageCode:\n          description: Optional. The BCP 47 code of language. If the language is not available, it will default to English.\n          type: string\n      type: object\n    Metadata:\n      description: Additional non-user-editable information about the location.\n      properties:\n        duplicate:\n          $ref: \"#/components/schemas/Duplicate\"\n          description: \"Information about the location that this location duplicates. Only present when `location_state.is_duplicate` is true. Deprecated: We are no longer supporting detailed information for duplicates.\"\n        mapsUrl:\n          description: A link to the location on Maps.\n          type: string\n        newReviewUrl:\n          description: A link to the page on Google Search where a customer can leave a review for the location.\n          type: string\n      type: object\n    MetricRequest:\n      description: A request to return values for one metric and the options for how those values should be returned.\n      properties:\n        metric:\n          description: The requested metric.\n          enum:\n            - METRIC_UNSPECIFIED\n            - ALL\n            - QUERIES_DIRECT\n            - QUERIES_INDIRECT\n            - QUERIES_CHAIN\n            - VIEWS_MAPS\n            - VIEWS_SEARCH\n            - ACTIONS_WEBSITE\n            - ACTIONS_PHONE\n            - ACTIONS_DRIVING_DIRECTIONS\n            - PHOTOS_VIEWS_MERCHANT\n            - PHOTOS_VIEWS_CUSTOMERS\n            - PHOTOS_COUNT_MERCHANT\n            - PHOTOS_COUNT_CUSTOMERS\n            - LOCAL_POST_VIEWS_SEARCH\n            - LOCAL_POST_ACTIONS_CALL_TO_ACTION\n          type: string\n        options:\n          description: How the values should appear when returned.\n          items:\n            enum:\n              - METRIC_OPTION_UNSPECIFIED\n              - AGGREGATED_TOTAL\n              - AGGREGATED_DAILY\n              - BREAKDOWN_DAY_OF_WEEK\n              - BREAKDOWN_HOUR_OF_DAY\n            type: string\n          type: array\n      type: object\n    MetricValue:\n      description: A value for a single Metric from a starting time.\n      properties:\n        dimensionalValues:\n          description: Dimensional values for this metric.\n          items:\n            $ref: \"#/components/schemas/DimensionalMetricValue\"\n          type: array\n        metric:\n          description: The metric for which the value applies.\n          enum:\n            - METRIC_UNSPECIFIED\n            - ALL\n            - QUERIES_DIRECT\n            - QUERIES_INDIRECT\n            - QUERIES_CHAIN\n            - VIEWS_MAPS\n            - VIEWS_SEARCH\n            - ACTIONS_WEBSITE\n            - ACTIONS_PHONE\n            - ACTIONS_DRIVING_DIRECTIONS\n            - PHOTOS_VIEWS_MERCHANT\n            - PHOTOS_VIEWS_CUSTOMERS\n            - PHOTOS_COUNT_MERCHANT\n            - PHOTOS_COUNT_CUSTOMERS\n            - LOCAL_POST_VIEWS_SEARCH\n            - LOCAL_POST_ACTIONS_CALL_TO_ACTION\n          type: string\n        totalValue:\n          $ref: \"#/components/schemas/DimensionalMetricValue\"\n          description: The total aggregated value for this metric. Set for the AGGREGATED_TOTAL option.\n      type: object\n    MinimizedContact:\n      description: Minimized contact measures implemented by the hotel during COVID-19.\n      properties:\n        contactlessCheckinCheckout:\n          description: No-contact check-in and check-out.\n          type: boolean\n        contactlessCheckinCheckoutException:\n          description: Contactless check-in check-out exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        digitalGuestRoomKeys:\n          description: Keyless mobile entry to guest rooms.\n          type: boolean\n        digitalGuestRoomKeysException:\n          description: Digital guest room keys exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        housekeepingScheduledRequestOnly:\n          description: Housekeeping scheduled by request only.\n          type: boolean\n        housekeepingScheduledRequestOnlyException:\n          description: Housekeeping scheduled request only exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        noHighTouchItemsCommonAreas:\n          description: High-touch items, such as magazines, removed from common areas.\n          type: boolean\n        noHighTouchItemsCommonAreasException:\n          description: No high touch items common areas exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        noHighTouchItemsGuestRooms:\n          description: High-touch items, such as decorative pillows, removed from guest rooms.\n          type: boolean\n        noHighTouchItemsGuestRoomsException:\n          description: No high touch items guest rooms exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        plasticKeycardsDisinfected:\n          description: Plastic key cards are disinfected or discarded.\n          type: boolean\n        plasticKeycardsDisinfectedException:\n          description: Plastic keycards disinfected exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        roomBookingsBuffer:\n          description: Buffer maintained between room bookings.\n          type: boolean\n        roomBookingsBufferException:\n          description: Room bookings buffer exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Money:\n      description: Represents an amount of money with its currency type.\n      properties:\n        currencyCode:\n          description: The three-letter currency code defined in ISO 4217.\n          type: string\n        nanos:\n          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.\n          format: int32\n          type: integer\n        units:\n          description: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.\n          format: int64\n          type: string\n      type: object\n    MoreHours:\n      description: The time periods during which a location is open for certain types of business.\n      properties:\n        hoursTypeId:\n          description: Required. Type of hours. Clients should call {#link businessCategories:BatchGet} to get supported hours types for categories of their locations.\n          type: string\n        periods:\n          description: Required. A collection of times that this location is open. Each period represents a range of hours when the location is open during the week.\n          items:\n            $ref: \"#/components/schemas/TimePeriod\"\n          type: array\n      type: object\n    MoreHoursType:\n      description: More hours types that a business can offers, in addition to its regular hours.\n      properties:\n        displayName:\n          description: Output only. The human-readable English display name for the hours type.\n          readOnly: true\n          type: string\n        hoursTypeId:\n          description: Output only. A stable ID provided by Google for this hours type.\n          readOnly: true\n          type: string\n        localizedDisplayName:\n          description: Output only. The human-readable localized display name for the hours type.\n          readOnly: true\n          type: string\n      type: object\n    Notifications:\n      description: A Google Cloud Pub/Sub topic where notifications can be published when a location is updated or has a new review. There will be only one notification settings resource per-account.\n      properties:\n        name:\n          description: Output only. The notifications resource name.\n          type: string\n        notificationTypes:\n          description: The types of notifications that will be sent to the Cloud Pub/Sub topic. At least one must be specified. To stop receiving notifications entirely, use DeleteNotifications.\n          items:\n            enum:\n              - NOTIFICATION_TYPE_UNSPECIFIED\n              - GOOGLE_UPDATE\n              - NEW_REVIEW\n              - UPDATED_REVIEW\n              - NEW_CUSTOMER_MEDIA\n              - NEW_QUESTION\n              - UPDATED_QUESTION\n              - NEW_ANSWER\n              - UPDATED_ANSWER\n              - UPDATED_LOCATION_STATE\n            type: string\n          type: array\n        topicName:\n          description: The Google Cloud Pub/Sub topic that will receive notifications when locations managed by this account are updated. If unset, no notifications will be posted. The account mybusiness-api-pubsub@system.gserviceaccount.com must have at least Publish permissions on the Cloud Pub/Sub topic.\n          type: string\n      type: object\n    NutritionFact:\n      description: This message denotes nutrition information with an upper bound and lower bound range and can be represented by mass unit. Lower amount must be specified. Both lower and upper amounts are non-negative numbers.\n      properties:\n        lowerAmount:\n          description: Required. Lower amount of nutrition\n          format: double\n          type: number\n        unit:\n          description: Required. Unit of the given nutrition information.\n          enum:\n            - MASS_UNIT_UNSPECIFIED\n            - GRAM\n            - MILLIGRAM\n          type: string\n        upperAmount:\n          description: Optional. Upper amount of nutrition\n          format: double\n          type: number\n      type: object\n    NutritionFacts:\n      description: This message represents nutrition facts for a food dish.\n      properties:\n        calories:\n          $ref: \"#/components/schemas/CaloriesFact\"\n          description: Optional. Calories of the dish.\n        cholesterol:\n          $ref: \"#/components/schemas/NutritionFact\"\n          description: Optional. Cholesterol information for a given food dish.\n        protein:\n          $ref: \"#/components/schemas/NutritionFact\"\n          description: Optional. Protein information for a given food dish.\n        sodium:\n          $ref: \"#/components/schemas/NutritionFact\"\n          description: Optional. Sodium information for a given food dish.\n        totalCarbohydrate:\n          $ref: \"#/components/schemas/NutritionFact\"\n          description: Optional. Carbohydrate information for a given food dish.\n        totalFat:\n          $ref: \"#/components/schemas/NutritionFact\"\n          description: Optional. Fat information for a given food dish.\n      type: object\n    OpenInfo:\n      description: Information related to the opening state of the business.\n      properties:\n        canReopen:\n          description: Output only. Indicates whether this business is eligible for re-open.\n          type: boolean\n        openingDate:\n          $ref: \"#/components/schemas/Date\"\n          description: The date on which the location first opened. If the exact day is not known, month and year only can be provided. The date must be in the past or be no more than one year in the future.\n        status:\n          description: Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed.\n          enum:\n            - OPEN_FOR_BUSINESS_UNSPECIFIED\n            - OPEN\n            - CLOSED_PERMANENTLY\n            - CLOSED_TEMPORARILY\n          type: string\n      type: object\n    OrganizationInfo:\n      description: Additional Info stored for an organization.\n      properties:\n        phoneNumber:\n          description: The contact number for the organization.\n          type: string\n        postalAddress:\n          $ref: \"#/components/schemas/PostalAddress\"\n          description: The postal address for the account.\n        registeredDomain:\n          description: The registered domain for the account.\n          type: string\n      type: object\n    Parking:\n      description: Parking options at the property.\n      properties:\n        electricCarChargingStations:\n          description: Electric car charging stations. Electric power stations, usually located outdoors, into which guests plug their electric cars to receive a charge.\n          type: boolean\n        electricCarChargingStationsException:\n          description: Electric car charging stations exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeParking:\n          description: Free parking. The hotel allows the cars of guests to be parked for free. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply. Parking may be performed by the guest or by hotel staff. Free parking must be available to all guests (limited conditions does not apply).\n          type: boolean\n        freeParkingException:\n          description: Free parking exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeSelfParking:\n          description: Free self parking. Guests park their own cars for free. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply.\n          type: boolean\n        freeSelfParkingException:\n          description: Free self parking exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeValetParking:\n          description: Free valet parking. Hotel staff member parks the cars of guests. Parking with this service is free.\n          type: boolean\n        freeValetParkingException:\n          description: Free valet parking exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        parkingAvailable:\n          description: Parking available. The hotel allows the cars of guests to be parked. Can be free or for a fee. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply. Parking may be performed by the guest or by hotel staff.\n          type: boolean\n        parkingAvailableException:\n          description: Parking available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        selfParkingAvailable:\n          description: Self parking available. Guests park their own cars. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply. Can be free or for a fee.\n          type: boolean\n        selfParkingAvailableException:\n          description: Self parking available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        valetParkingAvailable:\n          description: Valet parking available. Hotel staff member parks the cars of guests. Parking with this service can be free or for a fee.\n          type: boolean\n        valetParkingAvailableException:\n          description: Valet parking available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    PaymentOptions:\n      description: Forms of payment accepted at the property.\n      properties:\n        cash:\n          description: Cash. The hotel accepts payment by paper/coin currency.\n          type: boolean\n        cashException:\n          description: Cash exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        cheque:\n          description: Cheque. The hotel accepts a printed document issued by the guest's bank in the guest's name as a form of payment.\n          type: boolean\n        chequeException:\n          description: Cheque exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        creditCard:\n          description: Credit card. The hotel accepts payment by a card issued by a bank or credit card company. Also known as charge card, debit card, bank card, or charge plate.\n          type: boolean\n        creditCardException:\n          description: Credit card exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        debitCard:\n          description: Debit card. The hotel accepts a bank-issued card that immediately deducts the charged funds from the guest's bank account upon processing.\n          type: boolean\n        debitCardException:\n          description: Debit card exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        mobileNfc:\n          description: Mobile nfc. The hotel has the compatible computer hardware terminal that reads and charges a payment app on the guest's smartphone without requiring the two devices to make physical contact. Also known as Apple Pay, Google Pay, Samsung Pay.\n          type: boolean\n        mobileNfcException:\n          description: Mobile nfc exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    PersonalProtection:\n      description: Personal protection measures implemented by the hotel during COVID-19.\n      properties:\n        commonAreasOfferSanitizingItems:\n          description: Hand-sanitizer and/or sanitizing wipes are offered in common areas.\n          type: boolean\n        commonAreasOfferSanitizingItemsException:\n          description: Common areas offer sanitizing items exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        faceMaskRequired:\n          description: Masks required on the property.\n          type: boolean\n        faceMaskRequiredException:\n          description: Face mask required exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        guestRoomHygieneKitsAvailable:\n          description: In-room hygiene kits with masks, hand sanitizer, and/or antibacterial wipes.\n          type: boolean\n        guestRoomHygieneKitsAvailableException:\n          description: Guest room hygiene kits available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        protectiveEquipmentAvailable:\n          description: Masks and/or gloves available for guests.\n          type: boolean\n        protectiveEquipmentAvailableException:\n          description: Protective equipment available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Pets:\n      description: Policies regarding guest-owned animals.\n      properties:\n        catsAllowed:\n          description: Cats allowed. Domesticated felines are permitted at the property and allowed to stay in the guest room of their owner. May or may not require a fee.\n          type: boolean\n        catsAllowedException:\n          description: Cats allowed exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        dogsAllowed:\n          description: Dogs allowed. Domesticated canines are permitted at the property and allowed to stay in the guest room of their owner. May or may not require a fee.\n          type: boolean\n        dogsAllowedException:\n          description: Dogs allowed exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        petsAllowed:\n          description: Pets allowed. Household animals are allowed at the property and in the specific guest room of their owner. May or may not include dogs, cats, reptiles and/or fish. May or may not require a fee. Service animals are not considered to be pets, so not governed by this policy.\n          type: boolean\n        petsAllowedException:\n          description: Pets allowed exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        petsAllowedFree:\n          description: Pets allowed free. Household animals are allowed at the property and in the specific guest room of their owner for free. May or may not include dogs, cats, reptiles, and/or fish.\n          type: boolean\n        petsAllowedFreeException:\n          description: Pets allowed free exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    PhoneInput:\n      description: Input for PHONE_CALL/SMS verification.\n      properties:\n        phoneNumber:\n          description: The phone number that should be called or be sent SMS to. It must be one of the phone numbers in the eligible options.\n          type: string\n      type: object\n    PhoneVerificationData:\n      description: Display Data for verifications through phone, e.g. phone call, sms.\n      properties:\n        phoneNumber:\n          description: Phone number that the PIN will be sent to.\n          type: string\n      type: object\n    PhysicalDistancing:\n      description: Physical distancing measures implemented by the hotel during COVID-19.\n      properties:\n        commonAreasPhysicalDistancingArranged:\n          description: Common areas arranged to maintain physical distancing.\n          type: boolean\n        commonAreasPhysicalDistancingArrangedException:\n          description: Common areas physical distancing arranged exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        physicalDistancingRequired:\n          description: Physical distancing required.\n          type: boolean\n        physicalDistancingRequiredException:\n          description: Physical distancing required exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        safetyDividers:\n          description: Safety dividers at front desk and other locations.\n          type: boolean\n        safetyDividersException:\n          description: Safety dividers exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        sharedAreasLimitedOccupancy:\n          description: Guest occupancy limited within shared facilities.\n          type: boolean\n        sharedAreasLimitedOccupancyException:\n          description: Shared areas limited occupancy exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        wellnessAreasHavePrivateSpaces:\n          description: Private spaces designated in spa and wellness areas.\n          type: boolean\n        wellnessAreasHavePrivateSpacesException:\n          description: Wellness areas have private spaces exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    PlaceInfo:\n      description: Defines an area that's represented by a place ID.\n      properties:\n        name:\n          description: The localized name of the place. For example, `Scottsdale, AZ`.\n          type: string\n        placeId:\n          description: The ID of the place. Must correspond to a [region.] (https://developers.google.com/places/web-service/supported_types#table3)\n          type: string\n      type: object\n    Places:\n      description: Defines the union of areas represented by a set of places.\n      properties:\n        placeInfos:\n          description: The areas represented by place IDs. Limited to a maximum of 20 places.\n          items:\n            $ref: \"#/components/schemas/PlaceInfo\"\n          type: array\n      type: object\n    PointRadius:\n      description: A radius around a particular point (latitude/longitude).\n      properties:\n        latlng:\n          $ref: \"#/components/schemas/LatLng\"\n          description: The latitude/longitude that specifies the center of an area defined by the radius.\n        radiusKm:\n          description: The distance in kilometers of the area around the point.\n          format: float\n          type: number\n      type: object\n    Policies:\n      description: Property rules that impact guests.\n      properties:\n        allInclusiveAvailable:\n          description: All inclusive available. The hotel offers a rate option that includes the cost of the room, meals, activities, and other amenities that might otherwise be charged separately.\n          type: boolean\n        allInclusiveAvailableException:\n          description: All inclusive available exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        allInclusiveOnly:\n          description: All inclusive only. The only rate option offered by the hotel is a rate that includes the cost of the room, meals, activities and other amenities that might otherwise be charged separately.\n          type: boolean\n        allInclusiveOnlyException:\n          description: All inclusive only exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        checkinTime:\n          $ref: \"#/components/schemas/TimeOfDay\"\n          description: Check-in time. The time of the day at which the hotel begins providing guests access to their unit at the beginning of their stay.\n        checkinTimeException:\n          description: Check-in time exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        checkoutTime:\n          $ref: \"#/components/schemas/TimeOfDay\"\n          description: Check-out time. The time of the day on the last day of a guest's reserved stay at which the guest must vacate their room and settle their bill. Some hotels may offer late or early check out for a fee.\n        checkoutTimeException:\n          description: Check-out time exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        kidsStayFree:\n          description: Kids stay free. The children of guests are allowed to stay in the room/suite of a parent or adult without an additional fee. The policy may or may not stipulate a limit of the child's age or the overall number of children allowed.\n          type: boolean\n        kidsStayFreeException:\n          description: Kids stay free exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        maxChildAge:\n          description: Max child age. The hotel allows children up to a certain age to stay in the room/suite of a parent or adult without an additional fee.\n          format: int32\n          type: integer\n        maxChildAgeException:\n          description: Max child age exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        maxKidsStayFreeCount:\n          description: Max kids stay free count. The hotel allows a specific, defined number of children to stay in the room/suite of a parent or adult without an additional fee.\n          format: int32\n          type: integer\n        maxKidsStayFreeCountException:\n          description: Max kids stay free count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        paymentOptions:\n          $ref: \"#/components/schemas/PaymentOptions\"\n          description: Forms of payment accepted at the property.\n        smokeFreeProperty:\n          description: Smoke free property. Smoking is not allowed inside the building, on balconies, or in outside spaces. Hotels that offer a designated area for guests to smoke are not considered smoke-free properties.\n          type: boolean\n        smokeFreePropertyException:\n          description: Smoke free property exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Pools:\n      description: Swimming pool or recreational water facilities available at the hotel.\n      properties:\n        adultPool:\n          description: Adult pool. A pool restricted for use by adults only. Can be indoors or outdoors.\n          type: boolean\n        adultPoolException:\n          description: Adult pool exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        hotTub:\n          description: Hot tub. A man-made pool containing bubbling water maintained at a higher temperature and circulated by aerating jets for the purpose of soaking, relaxation and hydrotherapy. Can be indoors or outdoors. Not used for active swimming. Also known as Jacuzzi. Hot tub must be in a common area where all guests can access it. Does not apply to room-specific hot tubs that are only accessible to guest occupying that room.\n          type: boolean\n        hotTubException:\n          description: Hot tub exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        indoorPool:\n          description: Indoor pool. A pool located inside the hotel and available for guests to use for swimming and/or soaking. Use may or may not be restricted to adults and/or children.\n          type: boolean\n        indoorPoolException:\n          description: Indoor pool exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        indoorPoolsCount:\n          description: Indoor pools count. The sum of all indoor pools at the hotel.\n          format: int32\n          type: integer\n        indoorPoolsCountException:\n          description: Indoor pools count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        lazyRiver:\n          description: Lazy river. A man-made pool or several interconnected recreational pools built to mimic the shape and current of a winding river where guests float in the water on inflated rubber tubes. Can be indoors or outdoors.\n          type: boolean\n        lazyRiverException:\n          description: Lazy river exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        lifeguard:\n          description: Lifeguard. A trained member of the hotel staff stationed by the hotel's indoor or outdoor swimming area and responsible for the safety of swimming guests.\n          type: boolean\n        lifeguardException:\n          description: Lifeguard exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        outdoorPool:\n          description: Outdoor pool. A pool located outside on the grounds of the hotel and available for guests to use for swimming, soaking or recreation. Use may or may not be restricted to adults and/or children.\n          type: boolean\n        outdoorPoolException:\n          description: Outdoor pool exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        outdoorPoolsCount:\n          description: Outdoor pools count. The sum of all outdoor pools at the hotel.\n          format: int32\n          type: integer\n        outdoorPoolsCountException:\n          description: Outdoor pools count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        pool:\n          description: Pool. The presence of a pool, either indoors or outdoors, for guests to use for swimming and/or soaking. Use may or may not be restricted to adults and/or children.\n          type: boolean\n        poolException:\n          description: Pool exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        poolsCount:\n          description: Pools count. The sum of all pools at the hotel.\n          format: int32\n          type: integer\n        poolsCountException:\n          description: Pools count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        wadingPool:\n          description: Wading pool. A shallow pool designed for small children to play in. Can be indoors or outdoors. Also known as kiddie pool.\n          type: boolean\n        wadingPoolException:\n          description: Wading pool exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        waterPark:\n          description: Water park. An aquatic recreation area with a large pool or series of pools that has features such as a water slide or tube, wavepool, fountains, rope swings, and/or obstacle course. Can be indoors or outdoors. Also known as adventure pool.\n          type: boolean\n        waterParkException:\n          description: Water park exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        waterslide:\n          description: Waterslide. A continuously wetted chute positioned by an indoor or outdoor pool which people slide down into the water.\n          type: boolean\n        waterslideException:\n          description: Waterslide exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        wavePool:\n          description: Wave pool. A large indoor or outdoor pool with a machine that produces water currents to mimic the ocean's crests.\n          type: boolean\n        wavePoolException:\n          description: Wave pool exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    PortionSize:\n      description: Serving portion size of a food dish.\n      properties:\n        quantity:\n          description: Required. Number of the portion.\n          format: int32\n          type: integer\n        unit:\n          description: Required. The repeated name_info field is for the unit in multiple languages.\n          items:\n            $ref: \"#/components/schemas/MenuLabel\"\n          type: array\n      type: object\n    PostalAddress:\n      description: \"Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478\"\n      properties:\n        addressLines:\n          description: Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).\n          items:\n            type: string\n          type: array\n        administrativeArea:\n          description: Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.\n          type: string\n        languageCode:\n          description: \"Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \\\"zh-Hant\\\", \\\"ja\\\", \\\"ja-Latn\\\", \\\"en\\\".\"\n          type: string\n        locality:\n          description: \"Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.\"\n          type: string\n        organization:\n          description: Optional. The name of the organization at the address.\n          type: string\n        postalCode:\n          description: Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).\n          type: string\n        recipients:\n          description: Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.\n          items:\n            type: string\n          type: array\n        regionCode:\n          description: 'Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.'\n          type: string\n        revision:\n          description: The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.\n          format: int32\n          type: integer\n        sortingCode:\n          description: Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).\n          type: string\n        sublocality:\n          description: Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.\n          type: string\n      type: object\n    PriceList:\n      description: A list of item price information. Price lists are structured as one or more price lists, each containing one or more sections with one or more items. For example, food price lists may represent breakfast/lunch/dinner menus, with sections for burgers/steak/seafood.\n      properties:\n        labels:\n          description: Required. Language-tagged labels for the price list.\n          items:\n            $ref: \"#/components/schemas/Label\"\n          type: array\n        priceListId:\n          description: Required. ID for the price list. Price list, section, and item IDs cannot be duplicated within this Location.\n          type: string\n        sections:\n          description: Required. Sections for this price list. Each price list must contain at least one section.\n          items:\n            $ref: \"#/components/schemas/Section\"\n          type: array\n        sourceUrl:\n          description: Optional source URL of where the price list was retrieved from. For example, this could be the URL of the page that was automatically scraped to populate the menu information.\n          type: string\n      type: object\n    Profile:\n      description: All information pertaining to the location's profile.\n      properties:\n        description:\n          description: Description of the location in your own voice, not editable by anyone else.\n          type: string\n      type: object\n    Property:\n      description: General factual information about the property's physical structure and important dates.\n      properties:\n        builtYear:\n          description: Built year. The year that construction of the property was completed.\n          format: int32\n          type: integer\n        builtYearException:\n          description: Built year exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        floorsCount:\n          description: Floors count. The number of stories the building has from the ground floor to the top floor that are accessible to guests.\n          format: int32\n          type: integer\n        floorsCountException:\n          description: Floors count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        lastRenovatedYear:\n          description: \"Last renovated year. The year when the most recent renovation of the property was completed. Renovation may include all or any combination of the following: the units, the public spaces, the exterior, or the interior.\"\n          format: int32\n          type: integer\n        lastRenovatedYearException:\n          description: Last renovated year exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        roomsCount:\n          description: Rooms count. The total number of rooms and suites bookable by guests for an overnight stay. Does not include event space, public spaces, conference rooms, fitness rooms, business centers, spa, salon, restaurants/bars, or shops.\n          format: int32\n          type: integer\n        roomsCountException:\n          description: Rooms count exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Question:\n      description: Represents a single question and some of its answers.\n      properties:\n        author:\n          $ref: \"#/components/schemas/Author\"\n          description: Output only. The author of the question.\n        createTime:\n          description: Output only. The timestamp for when the question was written.\n          format: google-datetime\n          type: string\n        name:\n          description: Output only. The unique name for the question. accounts/*/locations/*/questions/*\n          type: string\n        text:\n          description: The text of the question. It should contain at least three words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters.\n          type: string\n        topAnswers:\n          description: Output only. A list of answers to the question, sorted by upvotes. This may not be a complete list of answers depending on the request parameters (answers_per_question)\n          items:\n            $ref: \"#/components/schemas/Answer\"\n          type: array\n        totalAnswerCount:\n          description: Output only. The total number of answers posted for this question.\n          format: int32\n          type: integer\n        updateTime:\n          description: Output only. The timestamp for when the question was last modified.\n          format: google-datetime\n          type: string\n        upvoteCount:\n          description: Output only. The number of upvotes for the question.\n          format: int32\n          type: integer\n      type: object\n    RegionCount:\n      description: A region with its associated request count.\n      properties:\n        count:\n          description: Number of driving-direction requests from this region.\n          format: int64\n          type: string\n        label:\n          description: Human-readable label for the region.\n          type: string\n        latlng:\n          $ref: \"#/components/schemas/LatLng\"\n          description: Center of region.\n      type: object\n    RelationshipData:\n      description: Information of all parent and children locations related to this one.\n      properties:\n        parentChain:\n          description: The resource name of the Chain that this location is member of. How to find Chain ID\n          type: string\n      type: object\n    RepeatedEnumAttributeValue:\n      description: \"Values for an attribute with a `value_type` of REPEATED_ENUM. This consists of two lists of value IDs: those that are set (true) and those that are unset (false). Values absent are considered unknown. At least one value must be specified.\"\n      properties:\n        setValues:\n          description: Enum values that are set.\n          items:\n            type: string\n          type: array\n        unsetValues:\n          description: Enum values that are unset.\n          items:\n            type: string\n          type: array\n      type: object\n    ReportGoogleLocationRequest:\n      description: Request message for reporting a GoogleLocation.\n      properties:\n        locationGroupName:\n          description: Optional. The resource name of the location group that this Google Location is being reported for, in the format `accounts/{account_id}`.\n          type: string\n        reportReasonBadLocation:\n          description: The reason for which the user is reporting this location when the issue is with the location itself.\n          enum:\n            - BAD_LOCATION_REASON_UNSPECIFIED\n            - NOT_A_LOCATION\n            - PERMANENTLY_CLOSED\n            - DOES_NOT_EXIST\n            - SPAM\n            - NOT_A_BUSINESS\n            - MOVED\n            - DUPLICATE\n          type: string\n        reportReasonBadRecommendation:\n          description: The reason for which the user is reporting this location when the issue is with the recommendation. This report is useful if the location has been recommended to the GMB account.\n          enum:\n            - BAD_RECOMMENDATION_REASON_UNSPECIFIED\n            - NOT_A_STORE_FRONT\n            - NOT_PART_OF_SUGGESTED_CHAIN\n            - IRRELEVANT\n          type: string\n        reportReasonElaboration:\n          description: Optional. A text entry for elaborating on the reason for which the user is reporting this location. The maximum length is 512 characters.\n          type: string\n        reportReasonLanguageCode:\n          description: Optional. The BCP 47 code of language used in `report_reason_elaboration`.\n          type: string\n      type: object\n    ReportLocalPostInsightsRequest:\n      description: Request message for Insights.ReportLocalPostInsights\n      properties:\n        basicRequest:\n          $ref: \"#/components/schemas/BasicMetricsRequest\"\n          description: A request to include basic metric insights in the report. This request applies to all posts requested.\n        localPostNames:\n          description: Required. The list of posts for which to fetch insights data. All posts have to belong to the location whose name is specified in the `name` field.\n          items:\n            type: string\n          type: array\n      type: object\n    ReportLocalPostInsightsResponse:\n      description: Response message for Insights.ReportLocalPostInsights\n      properties:\n        localPostMetrics:\n          description: One entry per requested post corresponding to this location.\n          items:\n            $ref: \"#/components/schemas/LocalPostMetrics\"\n          type: array\n        name:\n          description: Name\n          type: string\n        timeZone:\n          description: Time zone (IANA timezone IDs, eg, 'Europe/London') of the location.\n          type: string\n      type: object\n    ReportLocationInsightsRequest:\n      description: Request message for Insights.ReportLocationInsights.\n      properties:\n        basicRequest:\n          $ref: \"#/components/schemas/BasicMetricsRequest\"\n          description: A request to include basic metric insights in the report.\n        drivingDirectionsRequest:\n          $ref: \"#/components/schemas/DrivingDirectionMetricsRequest\"\n          description: A request to include insights about driving-direction requests in the report.\n        locationNames:\n          description: A collection of locations to fetch insights for, specified by their names.\n          items:\n            type: string\n          type: array\n      type: object\n    ReportLocationInsightsResponse:\n      description: Response message for `Insights.ReportLocationInsights`.\n      properties:\n        locationDrivingDirectionMetrics:\n          description: A collection of values for driving direction-related metrics.\n          items:\n            $ref: \"#/components/schemas/LocationDrivingDirectionMetrics\"\n          type: array\n        locationMetrics:\n          description: A collection of metric values by location.\n          items:\n            $ref: \"#/components/schemas/LocationMetrics\"\n          type: array\n      type: object\n    Review:\n      description: Output only. Represents a review for a location.\n      properties:\n        comment:\n          description: The body of the review as plain text with markups.\n          type: string\n        createTime:\n          description: The timestamp for when the review was written.\n          format: google-datetime\n          type: string\n        name:\n          description: The resource name. For Review it is of the form `accounts/{account_id}/locations/{location_id}/reviews/{review_id}`\n          type: string\n        reviewId:\n          description: The encrypted unique identifier.\n          type: string\n        reviewReply:\n          $ref: \"#/components/schemas/ReviewReply\"\n          description: The owner/manager of this location's reply to this review.\n        reviewer:\n          $ref: \"#/components/schemas/Reviewer\"\n          description: The author of the review.\n        starRating:\n          description: The star rating of the review.\n          enum:\n            - STAR_RATING_UNSPECIFIED\n            - ONE\n            - TWO\n            - THREE\n            - FOUR\n            - FIVE\n          type: string\n        updateTime:\n          description: The timestamp for when the review was last modified.\n          format: google-datetime\n          type: string\n      type: object\n    ReviewReply:\n      description: Represents the location owner/manager's reply to a review.\n      properties:\n        comment:\n          description: The body of the reply as plain text with markups. The maximum length is 4096 bytes.\n          type: string\n        updateTime:\n          description: Output only. The timestamp for when the reply was last modified.\n          format: google-datetime\n          type: string\n      type: object\n    Reviewer:\n      description: Represents the author of the review.\n      properties:\n        displayName:\n          description: The name of the reviewer. Only populated with the reviewer's real name if `is_anonymous` is false.\n          type: string\n        isAnonymous:\n          description: Indicates whether the reviewer has opted to remain anonymous.\n          type: boolean\n        profilePhotoUrl:\n          description: The profile photo link of the reviewer. Only populated if `is_anonymous` is false.\n          type: string\n      type: object\n    SearchChainsResponse:\n      description: Response message for Locations.SearchChains.\n      properties:\n        chains:\n          description: Chains that match the queried chain_display_name in SearchChainsRequest. If there are no matches, this field will be empty. Results are listed in order of relevance.\n          items:\n            $ref: \"#/components/schemas/Chain\"\n          type: array\n      type: object\n    SearchGoogleLocationsRequest:\n      description: Request message for GoogleLocations.SearchGoogleLocations.\n      properties:\n        location:\n          $ref: \"#/components/schemas/Location\"\n          description: Location to search for. If provided, will find locations which match the provided location details.\n        query:\n          description: Text query to search for. The search results from a query string will be less accurate than if providing an exact location, but can provide more inexact matches.\n          type: string\n        resultCount:\n          description: The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.\n          format: int32\n          type: integer\n      type: object\n    SearchGoogleLocationsResponse:\n      description: Response message for GoogleLocations.SearchGoogleLocations.\n      properties:\n        googleLocations:\n          description: A collection of GoogleLocations that are potential matches to the specified request, listed in order from most to least accuracy.\n          items:\n            $ref: \"#/components/schemas/GoogleLocation\"\n          type: array\n      type: object\n    Section:\n      description: A section of the price list containing one or more items.\n      properties:\n        items:\n          description: Items that are contained within this section of the price list.\n          items:\n            $ref: \"#/components/schemas/Item\"\n          type: array\n        labels:\n          description: Required. Language-tagged labels for the section. We recommend that section names and descriptions be 140 characters or less. At least one set of labels is required.\n          items:\n            $ref: \"#/components/schemas/Label\"\n          type: array\n        sectionId:\n          description: Required. ID for the section. Price list, section, and item IDs cannot be duplicated within this Location.\n          type: string\n        sectionType:\n          description: Optional. Type of the current price list section. Default value is FOOD.\n          enum:\n            - SECTION_TYPE_UNSPECIFIED\n            - FOOD\n            - SERVICES\n          type: string\n      type: object\n    ServiceAreaBusiness:\n      description: Service area businesses provide their service at the customer's location (for example, a locksmith or plumber).\n      properties:\n        businessType:\n          description: Indicates the type of the service area business.\n          enum:\n            - BUSINESS_TYPE_UNSPECIFIED\n            - CUSTOMER_LOCATION_ONLY\n            - CUSTOMER_AND_BUSINESS_LOCATION\n          type: string\n        places:\n          $ref: \"#/components/schemas/Places\"\n          description: The area that this business serves defined through a set of places.\n        radius:\n          $ref: \"#/components/schemas/PointRadius\"\n          description: Output only. The area that this business serves centered around a point.\n      type: object\n    ServiceBusinessContext:\n      description: Additional data for service business verification.\n      properties:\n        address:\n          $ref: \"#/components/schemas/PostalAddress\"\n          description: The verification address of the location. It is used to either enable more verification options or send a postcard.\n      type: object\n    ServiceItem:\n      description: A message that describes a single service item. It is used to describe the type of service that the merchant provides. For example, haircut can be a service.\n      properties:\n        freeFormServiceItem:\n          $ref: \"#/components/schemas/FreeFormServiceItem\"\n          description: This field will be set case of free-form services data.\n        isOffered:\n          description: Optional. This field decides whether or not the input service is offered by the merchant.\n          type: boolean\n        price:\n          $ref: \"#/components/schemas/Money\"\n          description: Optional. Represents the monetary price of the service item. We recommend that currency_code and units should be set when including a price.\n        structuredServiceItem:\n          $ref: \"#/components/schemas/StructuredServiceItem\"\n          description: This field will be set case of structured services data.\n      type: object\n    ServiceList:\n      description: A service list containing one or more service items.\n      properties:\n        name:\n          description: \"Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/serviceList`\"\n          type: string\n        serviceItems:\n          description: Service items that are contained within this service list. Duplicated service items will be removed automatically.\n          items:\n            $ref: \"#/components/schemas/ServiceItem\"\n          type: array\n      type: object\n    ServiceType:\n      description: A message describing a service type that the business offers.\n      properties:\n        displayName:\n          description: Output only. The human-readable display name for the service type.\n          readOnly: true\n          type: string\n        serviceTypeId:\n          description: Output only. A stable ID (provided by Google) for this service type.\n          readOnly: true\n          type: string\n      type: object\n    Services:\n      description: Conveniences or help provided by the property to facilitate an easier, more comfortable stay.\n      properties:\n        baggageStorage:\n          description: Baggage storage. A provision for guests to leave their bags at the hotel when they arrive for their stay before the official check-in time. May or may not apply for guests who wish to leave their bags after check-out and before departing the locale. Also known as bag dropoff.\n          type: boolean\n        baggageStorageException:\n          description: Baggage storage exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        concierge:\n          description: Concierge. Hotel staff member(s) responsible for facilitating an easy, comfortable stay through making reservations for meals, sourcing theater tickets, arranging tours, finding a doctor, making recommendations, and answering questions.\n          type: boolean\n        conciergeException:\n          description: Concierge exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        convenienceStore:\n          description: Convenience store. A shop at the hotel primarily selling snacks, drinks, non-prescription medicines, health and beauty aids, magazines and newspapers.\n          type: boolean\n        convenienceStoreException:\n          description: Convenience store exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        currencyExchange:\n          description: Currency exchange. A staff member or automated machine tasked with the transaction of providing the native currency of the hotel's locale in exchange for the foreign currency provided by a guest.\n          type: boolean\n        currencyExchangeException:\n          description: Currency exchange exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        elevator:\n          description: Elevator. A passenger elevator that transports guests from one story to another. Also known as lift.\n          type: boolean\n        elevatorException:\n          description: Elevator exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        frontDesk:\n          description: Front desk. A counter or desk in the lobby or the immediate interior of the hotel where a member of the staff greets guests and processes the information related to their stay (including check-in and check-out). May or may not be manned and open 24/7.\n          type: boolean\n        frontDeskException:\n          description: Front desk exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        fullServiceLaundry:\n          description: Full service laundry. Laundry and dry cleaning facilitated and handled by the hotel on behalf of the guest. Does not include the provision for guests to do their own laundry in on-site machines.\n          type: boolean\n        fullServiceLaundryException:\n          description: Full service laundry exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        giftShop:\n          description: Gift shop. An on-site store primarily selling souvenirs, mementos and other gift items. May or may not also sell sundries, magazines and newspapers, clothing, or snacks.\n          type: boolean\n        giftShopException:\n          description: Gift shop exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        languagesSpoken:\n          $ref: \"#/components/schemas/LanguagesSpoken\"\n          description: Languages spoken by at least one staff member.\n        selfServiceLaundry:\n          description: Self service laundry. On-site clothes washers and dryers accessible to guests for the purpose of washing and drying their own clothes. May or may not require payment to use the machines.\n          type: boolean\n        selfServiceLaundryException:\n          description: Self service laundry exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        socialHour:\n          description: Social hour. A reception with complimentary soft drinks, tea, coffee, wine and/or cocktails in the afternoon or evening. Can be hosted by hotel staff or guests may serve themselves. Also known as wine hour. The availability of coffee/tea in the lobby throughout the day does not constitute a social or wine hour.\n          type: boolean\n        socialHourException:\n          description: Social hour exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        twentyFourHourFrontDesk:\n          description: 24hr front desk. Front desk is staffed 24 hours a day.\n          type: boolean\n        twentyFourHourFrontDeskException:\n          description: 24hr front desk exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        wakeUpCalls:\n          description: Wake up calls. By direction of the guest, a hotel staff member will phone the guest unit at the requested hour. Also known as morning call.\n          type: boolean\n        wakeUpCallsException:\n          description: Wake up calls exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    SpecialHourPeriod:\n      description: \"Represents a single time period when a location's operational hours differ from its normal business hours. A special hour period must represent a range of less than 24 hours. The `open_time` and `start_date` must predate the `close_time` and `end_date`. The `close_time` and `end_date` can extend to 11:59 a.m. on the day after the specified `start_date`. For example, the following inputs are valid: start_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=11:59 The following inputs are not valid: start_date=2015-11-23, open_time=13:00, close_time=11:59 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=12:00 start_date=2015-11-23, end_date=2015-11-25, open_time=08:00, close_time=18:00\"\n      properties:\n        closeTime:\n          description: The wall time on `end_date` when a location closes, expressed in 24hr ISO 8601 extended format. (hh:mm) Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field. Must be specified if `is_closed` is false.\n          type: string\n        endDate:\n          $ref: \"#/components/schemas/Date\"\n          description: The calendar date this special hour period ends on. If `end_date` field is not set, default to the date specified in `start_date`. If set, this field must be equal to or at most 1 day after `start_date`.\n        isClosed:\n          description: If true, `end_date`, `open_time`, and `close_time` are ignored, and the date specified in `start_date` is treated as the location being closed for the entire day.\n          type: boolean\n        openTime:\n          description: The wall time on `start_date` when a location opens, expressed in 24hr ISO 8601 extended format. (hh:mm) Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field. Must be specified if `is_closed` is false.\n          type: string\n        startDate:\n          $ref: \"#/components/schemas/Date\"\n          description: The calendar date this special hour period starts on.\n      type: object\n    SpecialHours:\n      description: Represents a set of time periods when a location's operational hours differ from its normal business hours.\n      properties:\n        specialHourPeriods:\n          description: A list of exceptions to the business's regular hours.\n          items:\n            $ref: \"#/components/schemas/SpecialHourPeriod\"\n          type: array\n      type: object\n    StartUploadMediaItemDataRequest:\n      description: Request message for Media.StartUploadMediaItemData.\n      properties: {}\n      type: object\n    StructuredServiceItem:\n      description: \"Represents a structured service offered by the merchant. For eg: toilet_installation.\"\n      properties:\n        description:\n          description: Optional. Description of structured service item. The character limit is 300.\n          type: string\n        serviceTypeId:\n          description: Required. The `service_type_id` field is a Google provided unique ID that can be found in `ServiceTypeMetadata`. This information is provided by BatchGetBusinessCategories rpc service.\n          type: string\n      type: object\n    TargetLocation:\n      description: Represents a target location for a pending invitation.\n      properties:\n        locationAddress:\n          description: The address of the location to which the user is invited.\n          type: string\n        locationName:\n          description: The name of the location to which the user is invited.\n          type: string\n      type: object\n    TimeDimension:\n      description: The dimension for which data is divided over.\n      properties:\n        dayOfWeek:\n          description: The day of the week (\"MONDAY\" to \"SUNDAY\") this value corresponds to. Set for BREAKDOWN_DAY_OF_WEEK option.\n          enum:\n            - DAY_OF_WEEK_UNSPECIFIED\n            - MONDAY\n            - TUESDAY\n            - WEDNESDAY\n            - THURSDAY\n            - FRIDAY\n            - SATURDAY\n            - SUNDAY\n          type: string\n        timeOfDay:\n          $ref: \"#/components/schemas/TimeOfDay\"\n          description: The hour of the day (0 to 23) this value corresponds to. Set for BREAKDOWN_HOUR_OF_DAY option.\n        timeRange:\n          $ref: \"#/components/schemas/TimeRange\"\n          description: The range of time this value covers. Set for AGGREGATED_TOTAL and AGGREGATED_DAILY options.\n      type: object\n    TimeInterval:\n      description: An interval of time, inclusive. It must contain all fields to be valid.\n      properties:\n        endDate:\n          $ref: \"#/components/schemas/Date\"\n          description: The end date of this period.\n        endTime:\n          $ref: \"#/components/schemas/TimeOfDay\"\n          description: The end time of this period.\n        startDate:\n          $ref: \"#/components/schemas/Date\"\n          description: The start date of this period.\n        startTime:\n          $ref: \"#/components/schemas/TimeOfDay\"\n          description: The start time of this period.\n      type: object\n    TimeOfDay:\n      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.\n      properties:\n        hours:\n          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.\n          format: int32\n          type: integer\n        minutes:\n          description: Minutes of hour of day. Must be from 0 to 59.\n          format: int32\n          type: integer\n        nanos:\n          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.\n          format: int32\n          type: integer\n        seconds:\n          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.\n          format: int32\n          type: integer\n      type: object\n    TimePeriod:\n      description: Represents a span of time that the business is open, starting on the specified open day/time and closing on the specified close day/time. The closing time must occur after the opening time, for example later in the same day, or on a subsequent day.\n      properties:\n        closeDay:\n          description: Indicates the day of the week this period ends on.\n          enum:\n            - DAY_OF_WEEK_UNSPECIFIED\n            - MONDAY\n            - TUESDAY\n            - WEDNESDAY\n            - THURSDAY\n            - FRIDAY\n            - SATURDAY\n            - SUNDAY\n          type: string\n        closeTime:\n          description: Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.\n          type: string\n        openDay:\n          description: Indicates the day of the week this period starts on.\n          enum:\n            - DAY_OF_WEEK_UNSPECIFIED\n            - MONDAY\n            - TUESDAY\n            - WEDNESDAY\n            - THURSDAY\n            - FRIDAY\n            - SATURDAY\n            - SUNDAY\n          type: string\n        openTime:\n          description: Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.\n          type: string\n      type: object\n    TimeRange:\n      description: A range of time. Data will be pulled over the range as a half-open inverval (that is, [start_time, end_time)).\n      properties:\n        endTime:\n          description: Epoch timestamp for the end of the range (exclusive).\n          format: google-datetime\n          type: string\n        startTime:\n          description: Epoch timestamp for the start of the range (inclusive).\n          format: google-datetime\n          type: string\n      type: object\n    TopDirectionSources:\n      description: Top regions where driving-direction requests originated from.\n      properties:\n        dayCount:\n          description: The number of days data is aggregated over.\n          format: int32\n          type: integer\n        regionCounts:\n          description: Regions sorted in descending order by count.\n          items:\n            $ref: \"#/components/schemas/RegionCount\"\n          type: array\n      type: object\n    TransferLocationRequest:\n      description: Request message for Locations.TransferLocation.\n      properties:\n        toAccount:\n          description: Name of the account resource to transfer the location to (for example, \"accounts/8675309\").\n          type: string\n      type: object\n    Transportation:\n      description: Vehicles or vehicular services facilitated or owned by the property.\n      properties:\n        airportShuttle:\n          description: Airport shuttle. The hotel provides guests with a chauffeured van or bus to and from the airport. Can be free or for a fee. Guests may share the vehicle with other guests unknown to them. Applies if the hotel has a third-party shuttle service (office/desk etc.) within the hotel. As long as hotel provides this service, it doesn't matter if it's directly with them or a third party they work with. Does not apply if guest has to coordinate with an entity outside/other than the hotel.\n          type: boolean\n        airportShuttleException:\n          description: Airport shuttle exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        carRentalOnProperty:\n          description: Car rental on property. A branch of a rental car company with a processing desk in the hotel. Available cars for rent may be awaiting at the hotel or in a nearby lot.\n          type: boolean\n        carRentalOnPropertyException:\n          description: Car rental on property exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeAirportShuttle:\n          description: Free airport shuttle. Airport shuttle is free to guests. Must be free to all guests without any conditions.\n          type: boolean\n        freeAirportShuttleException:\n          description: Free airport shuttle exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freePrivateCarService:\n          description: Free private car service. Private chauffeured car service is free to guests.\n          type: boolean\n        freePrivateCarServiceException:\n          description: Free private car service exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        localShuttle:\n          description: Local shuttle. A car, van or bus provided by the hotel to transport guests to destinations within a specified range of distance around the hotel. Usually shopping and/or convention centers, downtown districts, or beaches. Can be free or for a fee.\n          type: boolean\n        localShuttleException:\n          description: Local shuttle exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        privateCarService:\n          description: Private car service. Hotel provides a private chauffeured car to transport guests to destinations. Passengers in the car are either alone or are known to one another and have requested the car together. Service can be free or for a fee and travel distance is usually limited to a specific range. Not a taxi.\n          type: boolean\n        privateCarServiceException:\n          description: Private car service exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        transfer:\n          description: Transfer. Hotel provides a shuttle service or car service to take guests to and from the nearest airport or train station. Can be free or for a fee. Guests may share the vehicle with other guests unknown to them.\n          type: boolean\n        transferException:\n          description: Transfer exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    UpsertAnswerRequest:\n      description: Request message for QuestionsAndAnswers.UpsertAnswer\n      properties:\n        answer:\n          $ref: \"#/components/schemas/Answer\"\n          description: The new answer.\n      type: object\n    UrlAttributeValue:\n      description: Values for an attribute with a `value_type` of URL.\n      properties:\n        url:\n          description: The URL.\n          type: string\n      type: object\n    Verification:\n      description: A verification represents a verification attempt on a location.\n      properties:\n        createTime:\n          description: The timestamp when the verification is requested.\n          format: google-datetime\n          type: string\n        method:\n          description: The method of the verification.\n          enum:\n            - VERIFICATION_METHOD_UNSPECIFIED\n            - ADDRESS\n            - EMAIL\n            - PHONE_CALL\n            - SMS\n            - AUTO\n          type: string\n        name:\n          description: Resource name of the verification.\n          type: string\n        state:\n          description: The state of the verification.\n          enum:\n            - VERIFICATION_STATE_UNSPECIFIED\n            - PENDING\n            - COMPLETED\n            - FAILED\n          type: string\n      type: object\n    VerificationOption:\n      description: The verification option represents how to verify the location (indicated by verification method) and where the verification will be sent to (indicated by display data).\n      properties:\n        addressData:\n          $ref: \"#/components/schemas/AddressVerificationData\"\n          description: Set only if the method is MAIL.\n        emailData:\n          $ref: \"#/components/schemas/EmailVerificationData\"\n          description: Set only if the method is EMAIL.\n        phoneData:\n          $ref: \"#/components/schemas/PhoneVerificationData\"\n          description: Set only if the method is PHONE_CALL or SMS.\n        verificationMethod:\n          description: Method to verify the location.\n          enum:\n            - VERIFICATION_METHOD_UNSPECIFIED\n            - ADDRESS\n            - EMAIL\n            - PHONE_CALL\n            - SMS\n            - AUTO\n          type: string\n      type: object\n    VerifyLocationRequest:\n      description: Request message for Verifications.VerifyLocation.\n      properties:\n        addressInput:\n          $ref: \"#/components/schemas/AddressInput\"\n          description: The input for ADDRESS method.\n        context:\n          $ref: \"#/components/schemas/ServiceBusinessContext\"\n          description: Extra context information for the verification of service businesses. Required for the locations whose business type is CUSTOMER_LOCATION_ONLY. For ADDRESS verification, the address will be used to send out postcard. For other methods, it should be the same as the one that is passed to FetchVerificationOptions. INVALID_ARGUMENT will be thrown if it is set for other types of business locations.\n        emailInput:\n          $ref: \"#/components/schemas/EmailInput\"\n          description: The input for EMAIL method.\n        languageCode:\n          description: The BCP 47 language code representing the language that is to be used for the verification process.\n          type: string\n        method:\n          description: Verification method.\n          enum:\n            - VERIFICATION_METHOD_UNSPECIFIED\n            - ADDRESS\n            - EMAIL\n            - PHONE_CALL\n            - SMS\n            - AUTO\n          type: string\n        phoneInput:\n          $ref: \"#/components/schemas/PhoneInput\"\n          description: The input for PHONE_CALL/SMS method\n      type: object\n    VerifyLocationResponse:\n      description: Response message for Verifications.VerifyLocation.\n      properties:\n        verification:\n          $ref: \"#/components/schemas/Verification\"\n          description: The created verification request.\n      type: object\n    ViewsFromUnit:\n      description: Views available from the guest unit itself.\n      properties:\n        beachView:\n          description: Beach view. A guestroom that features a window through which guests can see the beach.\n          type: boolean\n        beachViewException:\n          description: Beach view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        cityView:\n          description: City view. A guestroom that features a window through which guests can see the buildings, parks and/or streets of the city.\n          type: boolean\n        cityViewException:\n          description: City view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        gardenView:\n          description: Garden view. A guestroom that features a window through which guests can see a garden.\n          type: boolean\n        gardenViewException:\n          description: Garden view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        lakeView:\n          description: Lake view.\n          type: boolean\n        lakeViewException:\n          description: Lake view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        landmarkView:\n          description: Landmark view. A guestroom that features a window through which guests can see a landmark such as the countryside, a golf course, the forest, a park, a rain forst, a mountain or a slope.\n          type: boolean\n        landmarkViewException:\n          description: Landmark view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        oceanView:\n          description: Ocean view. A guestroom that features a window through which guests can see the ocean.\n          type: boolean\n        oceanViewException:\n          description: Ocean view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        poolView:\n          description: Pool view. A guestroom that features a window through which guests can see the hotel's swimming pool.\n          type: boolean\n        poolViewException:\n          description: Pool view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        valleyView:\n          description: Valley view. A guestroom that features a window through which guests can see over a valley.\n          type: boolean\n        valleyViewException:\n          description: Valley view exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n    Wellness:\n      description: Guest facilities at the property to promote or maintain health, beauty, and fitness.\n      properties:\n        doctorOnCall:\n          description: Doctor on call. The hotel has a contract with a medical professional who provides services to hotel guests should they fall ill during their stay. The doctor may or may not have an on-site office or be at the hotel at all times.\n          type: boolean\n        doctorOnCallException:\n          description: Doctor on call exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        ellipticalMachine:\n          description: Elliptical machine. An electric, stationary fitness machine with pedals that simulates climbing, walking or running and provides a user-controlled range of speeds and tensions. May not have arm-controlled levers to work out the upper body as well. Commonly found in a gym, fitness room, health center, or health club.\n          type: boolean\n        ellipticalMachineException:\n          description: Elliptical machine exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        fitnessCenter:\n          description: Fitness center. A room or building at the hotel containing equipment to promote physical activity, such as treadmills, elliptical machines, stationary bikes, weight machines, free weights, and/or stretching mats. Use of the fitness center can be free or for a fee. May or may not be staffed. May or may not offer instructor-led classes in various styles of physical conditioning. May or may not be open 24/7. May or may not include locker rooms and showers. Also known as health club, gym, fitness room, health center.\n          type: boolean\n        fitnessCenterException:\n          description: Fitness center exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeFitnessCenter:\n          description: Free fitness center. Guests may use the fitness center for free.\n          type: boolean\n        freeFitnessCenterException:\n          description: Free fitness center exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        freeWeights:\n          description: Free weights. Individual handheld fitness equipment of varied weights used for upper body strength training or bodybuilding. Also known as barbells, dumbbells, or kettlebells. Often stored on a rack with the weights arranged from light to heavy. Commonly found in a gym, fitness room, health center, or health club.\n          type: boolean\n        freeWeightsException:\n          description: Free weights exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        massage:\n          description: Massage. A service provided by a trained massage therapist involving the physical manipulation of a guest's muscles in order to achieve relaxation or pain relief.\n          type: boolean\n        massageException:\n          description: Massage exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        salon:\n          description: Salon. A room at the hotel where professionals provide hair styling services such as shampooing, blow drying, hair dos, hair cutting and hair coloring. Also known as hairdresser or beauty salon.\n          type: boolean\n        salonException:\n          description: Salon exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        sauna:\n          description: Sauna. A wood-paneled room heated to a high temperature where guests sit on built-in wood benches for the purpose of perspiring and relaxing their muscles. Can be dry or slightly wet heat. Not a steam room.\n          type: boolean\n        saunaException:\n          description: Sauna exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        spa:\n          description: Spa. A designated area, room or building at the hotel offering health and beauty treatment through such means as steam baths, exercise equipment, and massage. May also offer facials, nail care, and hair care. Services are usually available by appointment and for an additional fee. Does not apply if hotel only offers a steam room; must offer other beauty and/or health treatments as well.\n          type: boolean\n        spaException:\n          description: Spa exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        treadmill:\n          description: Treadmill. An electric stationary fitness machine that simulates a moving path to promote walking or running within a range of user-controlled speeds and inclines. Also known as running machine. Commonly found in a gym, fitness room, health center, or health club.\n          type: boolean\n        treadmillException:\n          description: Treadmill exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n        weightMachine:\n          description: Weight machine. Non-electronic fitness equipment designed for the user to target the exertion of different muscles. Usually incorporates a padded seat, a stack of flat weights and various bars and pulleys. May be designed for toning a specific part of the body or may involve different user-controlled settings, hardware and pulleys so as to provide an overall workout in one machine. Commonly found in a gym, fitness center, fitness room, or health club.\n          type: boolean\n        weightMachineException:\n          description: Weight machine exception.\n          enum:\n            - EXCEPTION_UNSPECIFIED\n            - UNDER_CONSTRUCTION\n            - DEPENDENT_ON_SEASON\n            - DEPENDENT_ON_DAY_OF_WEEK\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/googleapis.mybusiness/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/googleapis.mybusiness/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}