{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/waldemarnt/node-typescript-api"
		},
		"file": {
			"name": "api-schema.json",
			"size": 0,
			"path": "src/api-schema.json",
			"byteSize": 14687,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"version\": \"1.3.0\",\n    \"title\": \"Surf Forecast\",\n    \"description\": \"Surf Forecast API\",\n    \"termsOfService\": \"http://api_url/terms/\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://waldemarnt-com.umbler.net/\",\n      \"description\": \"Production Server\"\n    },\n    {\n      \"url\": \"http://localhost:3000/\",\n      \"description\": \"Local server\"\n    }\n  ],\n  \"paths\": {\n    \"/users\": {\n      \"post\": {\n        \"description\": \"Create a new User\",\n        \"operationId\": \"createUser\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"The user has been created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserCreatedResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Invalid parameters\",\n                  \"code\": \"400\",\n                  \"error\": \"Bad Request\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Conflict\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Conflict\",\n                  \"code\": \"409\",\n                  \"error\": \"Conflict\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/authenticate\": {\n      \"post\": {\n        \"description\": \"Authenticate the user on the API generating a JWT token\",\n        \"operationId\": \"authenticateUser\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserAuth\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The user has been authenticate and the JWT returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthenticatedUserResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"User unauthorized\",\n                  \"code\": \"401\",\n                  \"error\": \"Unauthorized\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/me\": {\n      \"get\": {\n        \"security\": [{ \"apiKey\": [] }],\n        \"description\": \"Get the profile of the token's owner\",\n        \"operationId\": \"getUserProfile\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The user information\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserProfileResponse\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found!\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"User not found\",\n                  \"code\": \"404\",\n                  \"error\": \"Not Found\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/beaches\": {\n      \"post\": {\n        \"security\": [{ \"apiKey\": [] }],\n        \"description\": \"Create a new Beach belonging to the authenticated user\",\n        \"operationId\": \"createBeach\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Beach\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"The Beach has been created!\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BeachCreatedResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Error validating the beach data.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"message\": \"Error validating beach data\",\n                  \"code\": \"400\",\n                  \"error\": \"Bad Request\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/forecast\": {\n      \"get\": {\n        \"security\": [{ \"apiKey\": [] }],\n        \"description\": \"Get the list of forecast ordered by the most ranked\",\n        \"operationId\": \"getForecast\",\n        \"parameters\": [\n          {\n            \"name\": \"orderBy\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderBy\"\n            }\n          },\n          {\n            \"name\": \"orderField\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/orderField\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The list of forecast has been returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TimeForecast\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"apiKey\": {\n        \"type\": \"apiKey\",\n        \"name\": \"x-access-token\",\n        \"in\": \"header\"\n      }\n    },\n    \"schemas\": {\n      \"orderBy\": {\n        \"type\": \"string\",\n        \"example\": \"desc\",\n        \"enum\": [\n          \"asc\",\n          \"desc\"\n        ],\n        \"default\": \"desc\"\n      },\n      \"orderField\": {\n        \"type\": \"string\",\n        \"example\": \"rating\",\n        \"default\": \"rating\"\n      },\n      \"jwtToken\": {\n        \"type\": \"string\",\n        \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTdmZTQ0YzQzYWQwYjAwMThmOGQ5ZmQiLCJuYW1lIjoiV2FsZGVtYXIgTmV0byIsImVtYWlsIjoid2FsZGVtYXJudEBnbWFpbC5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRsUlZjWkc5d0dIVWJXcHF2TnJNR0F1SnNoWWJTR1RLSElQL3NycDlmTlkzZENFZDBJQjN6TyIsImlhdCI6MTU4NTQ0MDUxNywiZXhwIjoxNTg1NDYwNTE3fQ.JNtzLgCKGTAU9_-QjYUNxtM7X4nMU_pPIsNXDsEM-vP\"\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"example\": \"John Doe\"\n      },\n      \"email\": {\n        \"type\": \"string\",\n        \"example\": \"john@mail.com\"\n      },\n      \"password\": {\n        \"type\": \"string\",\n        \"example\": \"12345#@$$%\"\n      },\n      \"beachName\": {\n        \"type\": \"string\",\n        \"example\": \"Copacabana beach\"\n      },\n      \"beachLat\": {\n        \"type\": \"number\",\n        \"example\": 10.55\n      },\n      \"beachLng\": {\n        \"type\": \"number\",\n        \"example\": -10.55\n      },\n      \"id\": {\n        \"type\": \"string\",\n        \"example\": \"5e8131eba7768d9e4f06c884\"\n      },\n      \"beachPosition\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"N\",\n          \"S\",\n          \"W\",\n          \"E\"\n        ],\n        \"example\": \"S\"\n      },\n      \"forecastPropertyKey\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"source\": {\n            \"type\": \"string\",\n            \"example\": \"noa\"\n          },\n          \"value\": {\n            \"type\": \"number\",\n            \"example\": \"10.1\"\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"$ref\": \"#/components/schemas/name\"\n          },\n          \"email\": {\n            \"$ref\": \"#/components/schemas/email\"\n          },\n          \"password\": {\n            \"$ref\": \"#/components/schemas/password\"\n          }\n        }\n      },\n      \"Beach\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"$ref\": \"#/components/schemas/beachName\"\n          },\n          \"lat\": {\n            \"$ref\": \"#/components/schemas/beachLat\"\n          },\n          \"lng\": {\n            \"$ref\": \"#/components/schemas/beachLng\"\n          },\n          \"position\": {\n            \"$ref\": \"#/components/schemas/beachPosition\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"lat\",\n          \"lng\",\n          \"position\"\n        ]\n      },\n      \"TimeForecast\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"time\": {\n              \"type\": \"string\",\n              \"example\": \"2019-05-31T08:00:00+00:00\"\n            },\n            \"forecast\": {\n              \"$ref\": \"#/components/schemas/BeachForecast\"\n            }\n          }\n        }\n      },\n      \"BeachForecast\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"$ref\": \"#/components/schemas/beachName\"\n            },\n            \"lat\": {\n              \"$ref\": \"#/components/schemas/beachLat\"\n            },\n            \"lng\": {\n              \"$ref\": \"#/components/schemas/beachLng\"\n            },\n            \"position\": {\n              \"$ref\": \"#/components/schemas/beachPosition\"\n            },\n            \"rating\": {\n              \"type\": \"number\",\n              \"example\": 3\n            },\n            \"swellDirection\": {\n              \"type\": \"number\",\n              \"description\": \"Swell direction in degrees\",\n              \"example\": 300\n            },\n            \"swellHeight\": {\n              \"type\": \"number\",\n              \"description\": \"Swell height in meters\",\n              \"example\": 1\n            },\n            \"swellPeriod\": {\n              \"type\": \"number\",\n              \"description\": \"Swell period in seconds\",\n              \"example\": 13.67\n            },\n            \"waveDirection\": {\n              \"type\": \"number\",\n              \"description\": \"Wave direction in degrees\",\n              \"example\": 234\n            },\n            \"waveHeight\": {\n              \"type\": \"number\",\n              \"description\": \"Wave height in meters\",\n              \"example\": 1.5\n            },\n            \"windDirection\": {\n              \"type\": \"number\",\n              \"description\": \"Wind direction in degrees\",\n              \"example\": 234\n            },\n            \"windSpeed\": {\n              \"type\": \"number\",\n              \"description\": \"Wind speed in meters per second\",\n              \"example\": 10\n            },\n            \"time\": {\n              \"type\": \"string\",\n              \"example\": \"2019-05-31T08:00:00+00:00\"\n            }\n          }\n        }\n      },\n      \"UserAuth\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"$ref\": \"#/components/schemas/email\"\n          },\n          \"password\": {\n            \"$ref\": \"#/components/schemas/password\"\n          }\n        }\n      },\n      \"UserCreatedResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"$ref\": \"#/components/schemas/name\"\n              },\n              \"email\": {\n                \"$ref\": \"#/components/schemas/email\"\n              },\n              \"password\": {\n                \"$ref\": \"#/components/schemas/password\"\n              },\n              \"id\": {\n                \"$ref\": \"#/components/schemas/id\"\n              }\n            }\n          }\n        }\n      },\n      \"AuthenticatedUserResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"$ref\": \"#/components/schemas/name\"\n              },\n              \"email\": {\n                \"$ref\": \"#/components/schemas/email\"\n              },\n              \"password\": {\n                \"$ref\": \"#/components/schemas/password\"\n              },\n              \"id\": {\n                \"$ref\": \"#/components/schemas/id\"\n              },\n              \"token\": {\n                \"$ref\": \"#/components/schemas/jwtToken\"\n              }\n            }\n          }\n        }\n      },\n      \"UserProfileResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"$ref\": \"#/components/schemas/name\"\n              },\n              \"email\": {\n                \"$ref\": \"#/components/schemas/email\"\n              },\n              \"password\": {\n                \"$ref\": \"#/components/schemas/password\"\n              },\n              \"id\": {\n                \"$ref\": \"#/components/schemas/id\"\n              }\n            }\n          }\n        }\n      },\n      \"BeachCreatedResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/id\"\n          },\n          \"name\": {\n            \"$ref\": \"#/components/schemas/beachName\"\n          },\n          \"lat\": {\n            \"$ref\": \"#/components/schemas/beachLat\"\n          },\n          \"lng\": {\n            \"$ref\": \"#/components/schemas/beachLng\"\n          },\n          \"position\": {\n            \"$ref\": \"#/components/schemas/beachPosition\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"code\": {\n            \"type\": \"number\"\n          },\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"documentation\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/waldemarnt/node-typescript-api@d3429f5ca289d7101a733f44f3dc9e862ab53556/-/blob/src/api-schema.json",
			"externalURLs": [
				{
					"url": "https://github.com/waldemarnt/node-typescript-api/blob/d3429f5ca289d7101a733f44f3dc9e862ab53556/src/api-schema.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}