{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/levelkdev/swapr-dapp"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/services/EcoBridge/Socket/api/swagger.json",
			"byteSize": 70964,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Movr Aggregator API\",\n    \"description\": \"The Movr Aggregator API description\",\n    \"version\": \"1.0\",\n    \"contact\": {}\n  },\n  \"tags\": [],\n  \"servers\": [],\n  \"components\": {\n    \"schemas\": {\n      \"HealthResponseDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ok\": {\n            \"type\": \"boolean\",\n            \"readOnly\": true\n          }\n        },\n        \"required\": [\"ok\"]\n      },\n      \"GasPriceResponseDTO\": {\n        \"type\": \"object\",\n        \"required\": [\"success\", \"result\"],\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"result\": {\n            \"type\": \"object\",\n            \"required\": [\"chainId\", \"txType\"],\n            \"properties\": {\n              \"chainId\": {\n                \"type\": \"number\"\n              },\n              \"txType\": {\n                \"type\": \"number\"\n              },\n              \"fast\": {\n                \"type\": \"object\",\n                \"required\": [\"gasPrice\", \"estimatedSeconds\"],\n                \"properties\": {\n                  \"gasPrice\": {\n                    \"type\": \"number\"\n                  },\n                  \"estimatedSeconds\": {\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"normal\": {\n                \"type\": \"object\",\n                \"required\": [\"gasPrice\", \"estimatedSeconds\"],\n                \"properties\": {\n                  \"gasPrice\": {\n                    \"type\": \"number\"\n                  },\n                  \"estimatedSeconds\": {\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"slow\": {\n                \"type\": \"object\",\n                \"required\": [\"gasPrice\", \"estimatedSeconds\"],\n                \"properties\": {\n                  \"gasPrice\": {\n                    \"type\": \"number\"\n                  },\n                  \"estimatedSeconds\": {\n                    \"type\": \"number\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"TokenPriceResponseDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"result\": {\n            \"type\": \"object\",\n            \"required\": [\"chainId\", \"tokenAddress\", \"tokenPrice\", \"currency\"],\n            \"properties\": {\n              \"chainId\": {\n                \"type\": \"number\"\n              },\n              \"tokenAddress\": {\n                \"type\": \"string\"\n              },\n              \"tokenPrice\": {\n                \"type\": \"number\"\n              },\n              \"currency\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"BridgeSwapInputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"bridgeName\": {\n            \"type\": \"string\"\n          },\n          \"fromChainId\": {\n            \"type\": \"number\"\n          },\n          \"toChainId\": {\n            \"type\": \"number\"\n          },\n          \"fromTokenAddress\": {\n            \"type\": \"string\"\n          },\n          \"toTokenAddress\": {\n            \"type\": \"string\"\n          },\n          \"adminKey\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"adminKey\"]\n      },\n      \"DexSwapInputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dexId\": {\n            \"type\": \"string\"\n          },\n          \"chainId\": {\n            \"type\": \"number\"\n          },\n          \"fromTokenAddress\": {\n            \"type\": \"string\"\n          },\n          \"toTokenAddress\": {\n            \"type\": \"string\"\n          },\n          \"adminKey\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"adminKey\"]\n      },\n      \"ChainGasBalances\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      },\n      \"Route\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"routeId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique id for each route.\",\n            \"example\": \"6a4c26b6-b008-431d-a37c-028e0b30482b\"\n          },\n          \"fromAmount\": {\n            \"type\": \"string\",\n            \"description\": \"Sending token amount.\",\n            \"example\": \"100000000000000000000\"\n          },\n          \"chainGasBalances\": {\n            \"$ref\": \"#/components/schemas/ChainGasBalances\"\n          },\n          \"toAmount\": {\n            \"type\": \"string\",\n            \"description\": \"Approximate receiving token amount.\",\n            \"example\": \"100000000000000000000\"\n          },\n          \"usedBridgeNames\": {\n            \"description\": \"Array of bridges used in the route\",\n            \"example\": \"[anyswap-router-v4]\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n            }\n          },\n          \"totalUserTx\": {\n            \"type\": \"number\",\n            \"description\": \"Total number of transactions for the route.\",\n            \"example\": 3\n          },\n          \"totalGasFeesInUsd\": {\n            \"type\": \"number\",\n            \"description\": \"Combined USD gas fees for all transactions in the route.\",\n            \"example\": 125.4\n          },\n          \"sender\": {\n            \"type\": \"string\",\n            \"description\": \"Address of user making the transactions.\",\n            \"example\": \"0x3e8cB4bd04d81498aB4b94a392c334F5328b237b\"\n          },\n          \"userTxs\": {\n            \"description\": \"Array of user transactions.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"serviceTime\": {\n            \"type\": \"number\",\n            \"description\": \"Estimate of total time in seconds, excluding the transaction time.\",\n            \"example\": 600\n          }\n        },\n        \"required\": [\n          \"routeId\",\n          \"fromAmount\",\n          \"chainGasBalances\",\n          \"toAmount\",\n          \"usedBridgeNames\",\n          \"totalUserTx\",\n          \"totalGasFeesInUsd\",\n          \"sender\",\n          \"userTxs\",\n          \"serviceTime\"\n        ]\n      },\n      \"SingleTxDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"route\": {\n            \"$ref\": \"#/components/schemas/Route\"\n          }\n        },\n        \"required\": [\"route\"]\n      },\n      \"ApprovalData\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"minimumApprovalAmount\": {\n            \"type\": \"string\",\n            \"description\": \"Minimum amount of approval needed.\",\n            \"example\": \"10000000000000000\"\n          },\n          \"approvalTokenAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Address of token for which approval is required.\",\n            \"example\": \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\"\n          },\n          \"allowanceTarget\": {\n            \"type\": \"string\",\n            \"description\": \"Contract address that needs approval.\",\n            \"example\": \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\"\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"description\": \"Address of owner.\",\n            \"example\": \"0x3e8cB4bd04d81498aB4b94a392c334F5328b237b\"\n          }\n        },\n        \"required\": [\"minimumApprovalAmount\", \"approvalTokenAddress\", \"allowanceTarget\", \"owner\"]\n      },\n      \"SingleTxResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userTxType\": {\n            \"type\": \"string\",\n            \"description\": \"Type of user transaction.\",\n            \"example\": \"dex-swap\",\n            \"enum\": [\"approve\", \"fund-movr\", \"claim\", \"dex-swap\", \"sign\"]\n          },\n          \"txTarget\": {\n            \"type\": \"string\",\n            \"description\": \"Address to which transaction has to be sent.\",\n            \"example\": \"0x3e8cB4bd04d81498aB4b94a392c334F5328b237b\"\n          },\n          \"chainId\": {\n            \"type\": \"string\",\n            \"description\": \"Id of chain where transaction has to be sent.\",\n            \"example\": 137,\n            \"enum\": [\"ETHEREUM\", \"OPTIMISM\", \"BSC\", \"XDAI\", \"POLYGON\", \"FANTOM\", \"ARBITRUM\", \"AVALANCHE\"]\n          },\n          \"txData\": {\n            \"type\": \"string\",\n            \"description\": \"Calldata for transaction.\",\n            \"example\": \"0xasjajfbalkfajfalalglaglagbalga\"\n          },\n          \"txType\": {\n            \"type\": \"string\",\n            \"description\": \"Type of transaction.\",\n            \"example\": \"eth_sendTransaction\",\n            \"enum\": [\"eth_sendTransaction\", \"eth_signMessage\"]\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"Native token amount to be sent with transaction.\",\n            \"example\": \"10000000000000000\"\n          },\n          \"totalUserTx\": {\n            \"type\": \"number\",\n            \"description\": \"Total number of transactions in Active Route.\",\n            \"example\": 2\n          },\n          \"approvalData\": {\n            \"$ref\": \"#/components/schemas/ApprovalData\"\n          }\n        },\n        \"required\": [\"userTxType\", \"txTarget\", \"chainId\", \"txData\", \"txType\", \"value\", \"totalUserTx\", \"approvalData\"]\n      },\n      \"SingleTxOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"$ref\": \"#/components/schemas/SingleTxResponse\"\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"BridgeStatusResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sourceTx\": {\n            \"type\": \"string\",\n            \"description\": \"Source Transaction.\",\n            \"example\": \"0xa6574b28b36dceb147a7ff3ca06839f1f0835bcfd5f0409406fbc524412e281a\"\n          },\n          \"sourceTxStatus\": {\n            \"type\": \"string\",\n            \"description\": \"Status of source transaction while bridging.\",\n            \"example\": \"COMPLETED\",\n            \"enum\": [\"PENDING\", \"COMPLETED\"]\n          },\n          \"destinationTransactionHash\": {\n            \"type\": \"string\",\n            \"description\": \"Destination Transaction hash.\",\n            \"example\": \"0xa6574b28b36dceb147a7ff3ca06839f1f0835bcfd5f0409406fbc524412e281a\"\n          },\n          \"destinationTxStatus\": {\n            \"type\": \"string\",\n            \"description\": \"Status of destination transaction while bridging.\",\n            \"example\": \"COMPLETED\",\n            \"enum\": [\"PENDING\", \"COMPLETED\"]\n          },\n          \"fromChainId\": {\n            \"type\": \"number\",\n            \"description\": \"Source Chain Id\",\n            \"example\": 1\n          },\n          \"toChainId\": {\n            \"type\": \"number\",\n            \"description\": \"Destination Chain Id.\",\n            \"example\": 137\n          }\n        },\n        \"required\": [\n          \"sourceTx\",\n          \"sourceTxStatus\",\n          \"destinationTransactionHash\",\n          \"destinationTxStatus\",\n          \"fromChainId\",\n          \"toChainId\"\n        ]\n      },\n      \"BridgeStatusResponseDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"$ref\": \"#/components/schemas/BridgeStatusResponse\"\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"TransactionReceiptResponseDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"ApprovalOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"result\": {\n            \"type\": \"object\",\n            \"required\": [\"value\", \"tokenAddress\"],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\"\n              },\n              \"tokenAddress\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"ApprovalTxOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"result\": {\n            \"type\": \"object\",\n            \"required\": [\"data\", \"to\", \"from\"],\n            \"properties\": {\n              \"data\": {\n                \"type\": \"string\"\n              },\n              \"to\": {\n                \"type\": \"string\"\n              },\n              \"from\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"TokenAsset\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of token.\",\n            \"example\": \"USD Coin\"\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Address of token.\",\n            \"example\": \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\"\n          },\n          \"icon\": {\n            \"type\": \"string\",\n            \"description\": \"URL for icon of token.\",\n            \"example\": \"https://maticnetwork.github.io/polygon-token-assets/assets/usdc.svg\"\n          },\n          \"decimals\": {\n            \"type\": \"number\",\n            \"description\": \"Decimal used for token.\",\n            \"example\": 6\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"Symbol of token.\",\n            \"example\": \"USDC\"\n          },\n          \"chainId\": {\n            \"description\": \"Chain id of the token\",\n            \"example\": 137,\n            \"enum\": [\"ETHEREUM\", \"OPTIMISM\", \"BSC\", \"XDAI\", \"POLYGON\", \"FANTOM\", \"ARBITRUM\", \"AVALANCHE\"],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"address\", \"symbol\", \"chainId\"]\n      },\n      \"QuoteOutputDTO\": {\n        \"type\": \"object\",\n        \"required\": [\"success\", \"result\"],\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"type\": \"object\",\n            \"required\": [\"routes\", \"fromChainId\", \"fromAsset\", \"toChainId\", \"toAsset\"],\n            \"properties\": {\n              \"routes\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Route\"\n                }\n              },\n              \"fromChainId\": {\n                \"type\": \"number\"\n              },\n              \"fromAsset\": {\n                \"$ref\": \"#/components/schemas/TokenAsset\"\n              },\n              \"toChainId\": {\n                \"type\": \"number\"\n              },\n              \"toAsset\": {\n                \"$ref\": \"#/components/schemas/TokenAsset\"\n              }\n            }\n          }\n        }\n      },\n      \"BridgeDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"bridgeName\": {\n            \"type\": \"string\",\n            \"description\": \"Name of bridge.\",\n            \"example\": \"anyswap-router-v4\",\n            \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n          },\n          \"icon\": {\n            \"type\": \"string\",\n            \"description\": \"URL for icon of bridge.\",\n            \"example\": \"https://bridgelogos.s3.ap-south-1.amazonaws.com/anyswap.png\"\n          },\n          \"serviceTime\": {\n            \"type\": \"number\",\n            \"description\": \"Approx time for bridging in seconds.\",\n            \"example\": 600\n          },\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"Display name of bridge.\",\n            \"example\": \"Anyswap\"\n          }\n        },\n        \"required\": [\"bridgeName\", \"serviceTime\", \"displayName\"]\n      },\n      \"SupportedBridgesOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BridgeDetails\"\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"GasTokenDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Address of gas token.\",\n            \"example\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"\n          },\n          \"icon\": {\n            \"type\": \"string\",\n            \"description\": \"URL for icon of gas token.\",\n            \"example\": \"https://maticnetwork.github.io/polygon-token-assets/assets/matic.svg\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of gas token.\",\n            \"example\": \"Matic\"\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"Symbol of gas token.\",\n            \"example\": \"MATIC\"\n          },\n          \"decimals\": {\n            \"type\": \"number\",\n            \"description\": \"Decimals of gas token.\",\n            \"example\": 18\n          },\n          \"minNativeCurrencyForGas\": {\n            \"type\": \"string\",\n            \"description\": \"Minimum amount to be left for gas while using max amount.\",\n            \"example\": \"100000000000000000\"\n          }\n        },\n        \"required\": [\"address\", \"icon\", \"name\", \"symbol\", \"decimals\", \"minNativeCurrencyForGas\"]\n      },\n      \"ChainDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chainId\": {\n            \"type\": \"number\",\n            \"description\": \"Id of chain.\",\n            \"example\": 137\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of chain.\",\n            \"example\": \"Polygon\"\n          },\n          \"icon\": {\n            \"type\": \"string\",\n            \"description\": \"URL for icon of chain.\",\n            \"example\": \"https://movricons.s3.ap-south-1.amazonaws.com/Matic.svg\"\n          },\n          \"isL1\": {\n            \"type\": \"boolean\",\n            \"description\": \"Flag indicating whether the chain is L1.\",\n            \"example\": false\n          },\n          \"sendingEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Flag indicating whether sending of tokens is supported from chain.\",\n            \"example\": true\n          },\n          \"receivingEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Flag indicating whether receiving of tokens is supported to chain.\",\n            \"example\": true\n          },\n          \"currency\": {\n            \"$ref\": \"#/components/schemas/GasTokenDetails\"\n          },\n          \"rpcs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"explorers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\n          \"chainId\",\n          \"name\",\n          \"icon\",\n          \"isL1\",\n          \"sendingEnabled\",\n          \"receivingEnabled\",\n          \"currency\",\n          \"rpcs\",\n          \"explorers\"\n        ]\n      },\n      \"SupportedChainsOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChainDetails\"\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"BalanceResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"chainId\": {\n            \"type\": \"number\"\n          },\n          \"address\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"symbol\": {\n            \"type\": \"string\"\n          },\n          \"decimals\": {\n            \"type\": \"number\"\n          },\n          \"price\": {\n            \"type\": \"number\"\n          },\n          \"amount\": {\n            \"type\": \"number\"\n          },\n          \"currency\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"chainId\", \"address\", \"name\", \"symbol\", \"decimals\", \"price\", \"amount\", \"currency\"]\n      },\n      \"Balance\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BalanceResult\"\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"TokenBalanceReponseDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"result\": {\n            \"type\": \"object\",\n            \"required\": [\"chainId\", \"tokenAddress\", \"userAddress\", \"balance\", \"decimals\", \"icon\", \"symbol\", \"name\"],\n            \"properties\": {\n              \"chainId\": {\n                \"type\": \"number\"\n              },\n              \"tokenAddress\": {\n                \"type\": \"string\"\n              },\n              \"userAddress\": {\n                \"type\": \"string\"\n              },\n              \"balance\": {\n                \"type\": \"string\"\n              },\n              \"decimals\": {\n                \"type\": \"number\"\n              },\n              \"icon\": {\n                \"type\": \"string\"\n              },\n              \"symbol\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"StartActiveRouteInputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromChainId\": {\n            \"type\": \"string\",\n            \"description\": \"Chain id of source chain.\",\n            \"example\": 137,\n            \"enum\": [\"ETHEREUM\", \"OPTIMISM\", \"BSC\", \"XDAI\", \"POLYGON\", \"FANTOM\", \"ARBITRUM\", \"AVALANCHE\"]\n          },\n          \"toChainId\": {\n            \"type\": \"string\",\n            \"description\": \"Chain id of destination chain.\",\n            \"example\": 56,\n            \"enum\": [\"ETHEREUM\", \"OPTIMISM\", \"BSC\", \"XDAI\", \"POLYGON\", \"FANTOM\", \"ARBITRUM\", \"AVALANCHE\"]\n          },\n          \"fromAssetAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Token address on source chain.\",\n            \"example\": \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\"\n          },\n          \"toAssetAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Token address on destination chain.\",\n            \"example\": \"0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3\"\n          },\n          \"includeFirstTxDetails\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include the tx details for the first user transaction. If true it will return the txData txType etc.\\nIf false, it will only return the active route Id of the selected route.\",\n            \"example\": true\n          },\n          \"route\": {\n            \"description\": \"Selected route by the user to bridge tokens from one chain to another.\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Route\"\n              }\n            ]\n          }\n        },\n        \"required\": [\"fromChainId\", \"toChainId\", \"fromAssetAddress\", \"toAssetAddress\", \"route\"]\n      },\n      \"StartActiveRouteResponseDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userTxType\": {\n            \"type\": \"string\",\n            \"enum\": [\"approve\", \"fund-movr\", \"claim\", \"dex-swap\", \"sign\"]\n          },\n          \"txTarget\": {\n            \"type\": \"string\"\n          },\n          \"chainId\": {\n            \"type\": \"string\",\n            \"enum\": [\"ETHEREUM\", \"OPTIMISM\", \"BSC\", \"XDAI\", \"POLYGON\", \"FANTOM\", \"ARBITRUM\", \"AVALANCHE\"]\n          },\n          \"activeRouteId\": {\n            \"type\": \"number\"\n          },\n          \"txData\": {\n            \"type\": \"string\"\n          },\n          \"txType\": {\n            \"type\": \"string\",\n            \"enum\": [\"eth_sendTransaction\", \"eth_signMessage\"]\n          },\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"userTxIndex\": {\n            \"type\": \"number\"\n          },\n          \"totalUserTx\": {\n            \"type\": \"number\"\n          },\n          \"approvalData\": {\n            \"$ref\": \"#/components/schemas/ApprovalData\"\n          }\n        },\n        \"required\": [\"activeRouteId\", \"totalUserTx\"]\n      },\n      \"ActiveRouteResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"activeRouteId\": {\n            \"type\": \"number\",\n            \"description\": \"Id of the Active Route.\",\n            \"example\": 420\n          },\n          \"userAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Address of user doing the Active Route.\",\n            \"example\": \"0x3e8cB4bd04d81498aB4b94a392c334F5328b237b\"\n          },\n          \"totalUserTx\": {\n            \"type\": \"number\",\n            \"description\": \"Total number of txs required in Active Route.\",\n            \"example\": 3\n          },\n          \"userTxs\": {\n            \"description\": \"Array of user txs.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"fromChainId\": {\n            \"type\": \"number\",\n            \"description\": \"Id of source chain.\",\n            \"example\": 137\n          },\n          \"toChainId\": {\n            \"type\": \"number\",\n            \"description\": \"Id of destination chain.\",\n            \"example\": 56\n          },\n          \"fromAssetAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Address of token on source chain.\",\n            \"example\": \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\"\n          },\n          \"toAssetAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Address of token on destination chain.\",\n            \"example\": \"0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3\"\n          },\n          \"fromAmount\": {\n            \"type\": \"string\",\n            \"description\": \"Amount of sending tokens.\",\n            \"example\": \"100000000\"\n          },\n          \"toAmount\": {\n            \"type\": \"string\",\n            \"description\": \"Approximate amount of receiving tokens.\",\n            \"example\": \"100000000\"\n          },\n          \"routeStatus\": {\n            \"type\": \"string\",\n            \"description\": \"Status of the Active Route.\",\n            \"example\": \"PENDING\"\n          },\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\",\n            \"description\": \"Timestamp of Route start.\",\n            \"example\": 1642009930239\n          },\n          \"updatedAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\",\n            \"description\": \"Timestamp of last route update.\",\n            \"example\": 1642009930239\n          },\n          \"currentUserTxIndex\": {\n            \"type\": \"number\",\n            \"description\": \"Index of current tx in userTxs array.\",\n            \"example\": 1642009930239\n          },\n          \"fromAsset\": {\n            \"$ref\": \"#/components/schemas/TokenAsset\"\n          },\n          \"toAsset\": {\n            \"$ref\": \"#/components/schemas/TokenAsset\"\n          }\n        },\n        \"required\": [\n          \"activeRouteId\",\n          \"userAddress\",\n          \"totalUserTx\",\n          \"userTxs\",\n          \"fromChainId\",\n          \"toChainId\",\n          \"fromAssetAddress\",\n          \"toAssetAddress\",\n          \"fromAmount\",\n          \"toAmount\",\n          \"routeStatus\",\n          \"createdAt\",\n          \"updatedAt\",\n          \"currentUserTxIndex\",\n          \"fromAsset\",\n          \"toAsset\"\n        ]\n      },\n      \"ActiveRoutesOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API response.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"$ref\": \"#/components/schemas/ActiveRouteResponse\"\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      },\n      \"NextTxResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userTxType\": {\n            \"type\": \"string\",\n            \"description\": \"Type of user transaction.\",\n            \"example\": \"dex-swap\",\n            \"enum\": [\"approve\", \"fund-movr\", \"claim\", \"dex-swap\", \"sign\"]\n          },\n          \"txTarget\": {\n            \"type\": \"string\",\n            \"description\": \"Address to which transaction has to be sent.\",\n            \"example\": \"0x3e8cB4bd04d81498aB4b94a392c334F5328b237b\"\n          },\n          \"chainId\": {\n            \"type\": \"string\",\n            \"description\": \"Id of chain where transaction has to be sent.\",\n            \"example\": 137,\n            \"enum\": [\"ETHEREUM\", \"OPTIMISM\", \"BSC\", \"XDAI\", \"POLYGON\", \"FANTOM\", \"ARBITRUM\", \"AVALANCHE\"]\n          },\n          \"txData\": {\n            \"type\": \"string\",\n            \"description\": \"Calldata for transaction.\",\n            \"example\": \"0xaajlafnalfnal\"\n          },\n          \"txType\": {\n            \"type\": \"string\",\n            \"description\": \"Type of transaction.\",\n            \"example\": \"eth_sendTransaction\",\n            \"enum\": [\"eth_sendTransaction\", \"eth_signMessage\"]\n          },\n          \"activeRouteId\": {\n            \"type\": \"number\",\n            \"description\": \"Id of Active Route.\",\n            \"example\": 420\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"Native token amount to be sent with transaction.\",\n            \"example\": \"10000000000000000\"\n          },\n          \"userTxIndex\": {\n            \"type\": \"number\",\n            \"description\": \"Index of transaction in Active Route. Index of the object in the userTxs array.\",\n            \"example\": 2\n          },\n          \"totalUserTx\": {\n            \"type\": \"number\",\n            \"description\": \"Total number of transactions in Active Route.\",\n            \"example\": 2\n          },\n          \"approvalData\": {\n            \"$ref\": \"#/components/schemas/ApprovalData\"\n          }\n        },\n        \"required\": [\n          \"userTxType\",\n          \"txTarget\",\n          \"chainId\",\n          \"txData\",\n          \"txType\",\n          \"activeRouteId\",\n          \"value\",\n          \"userTxIndex\",\n          \"totalUserTx\",\n          \"approvalData\"\n        ]\n      },\n      \"NextTxOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"$ref\": \"#/components/schemas/NextTxResponse\"\n          }\n        },\n        \"required\": [\"status\", \"result\"]\n      },\n      \"RouteStatusOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"type\": \"string\",\n            \"enum\": [\"PENDING\", \"COMPLETED\"]\n          }\n        },\n        \"required\": [\"status\", \"result\"]\n      },\n      \"TokenListOutputDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of API.\",\n            \"example\": true\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TokenAsset\"\n            }\n          }\n        },\n        \"required\": [\"success\", \"result\"]\n      }\n    }\n  },\n  \"paths\": {\n    \"/v2/health\": {\n      \"get\": {\n        \"operationId\": \"AppController_getHealth\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Health Check for Fund Movr API\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HealthResponseDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/gas-price\": {\n      \"get\": {\n        \"operationId\": \"AppController_getGasPrice\",\n        \"parameters\": [\n          {\n            \"name\": \"chainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"1\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Current gas prices for a chain\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GasPriceResponseDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/token-price\": {\n      \"get\": {\n        \"operationId\": \"AppController_getTokenPrice\",\n        \"parameters\": [\n          {\n            \"name\": \"tokenAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Token contract address on network, e.g USDC on Ethereum Mainnet\",\n            \"example\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"chainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"1\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns price of token for a given chain\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenPriceResponseDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/enable-bridge-swap\": {\n      \"post\": {\n        \"operationId\": \"AppController_enableBridgeSwap\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BridgeSwapInputDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/disable-bridge-swap\": {\n      \"post\": {\n        \"operationId\": \"AppController_disableBridgeSwap\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BridgeSwapInputDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/enable-dex-swap\": {\n      \"post\": {\n        \"operationId\": \"AppController_enableDexSwap\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DexSwapInputDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/disable-dex-swap\": {\n      \"post\": {\n        \"operationId\": \"AppController_disableDexSwap\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DexSwapInputDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/build-tx\": {\n      \"post\": {\n        \"operationId\": \"AppController_getSingleTx\",\n        \"parameters\": [\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SingleTxDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get the tx details for the route.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SingleTxOutputDTO\"\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/bridge-status\": {\n      \"get\": {\n        \"operationId\": \"AppController_getBridgingStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"transactionHash\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Transaction hash originating from the source chain while bridging assets.\",\n            \"example\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of source chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"1\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"toChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of destination chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"137\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"bridgeName\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Name of the bridge used while bridging.\",\n            \"example\": \"hop\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the status of the bridging transaction if completed or pending.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BridgeStatusResponseDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/tx-receipt\": {\n      \"get\": {\n        \"operationId\": \"AppController_getTransactionReceipt\",\n        \"parameters\": [\n          {\n            \"name\": \"transactionHash\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Transaction hash originating from the source chain while bridging assets.\",\n            \"example\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"chainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of source chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"1\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the receipt of the transaction.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TransactionReceiptResponseDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Server\"]\n      }\n    },\n    \"/v2/approval/check-allowance\": {\n      \"get\": {\n        \"operationId\": \"ApproveController_fetchApprovals\",\n        \"parameters\": [\n          {\n            \"name\": \"chainID\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"1\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Wallet address of token holder\",\n            \"example\": \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"allowanceTarget\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Address whose spending allowance is to be checked\",\n            \"example\": \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tokenAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Contract address of token\",\n            \"example\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Gives approval values of given tokens for a given owner \u0026 chainId\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApprovalOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Approvals\"]\n      }\n    },\n    \"/v2/approval/build-tx\": {\n      \"get\": {\n        \"operationId\": \"ApproveController_fetchApprovalsCalldata\",\n        \"parameters\": [\n          {\n            \"name\": \"chainID\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"1\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Wallet address of token holder\",\n            \"example\": \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"allowanceTarget\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Address whose spending allowance is to be checked\",\n            \"example\": \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tokenAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Contract address of token\",\n            \"example\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"amount\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Amount of tokens to approve, e.g 10 USDC (6 decimals)\",\n            \"example\": \"10000000\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return the Approval Tx Data for the given params.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApprovalTxOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Approvals\"]\n      }\n    },\n    \"/v2/quote\": {\n      \"get\": {\n        \"operationId\": \"QuoteController_getQuote\",\n        \"parameters\": [\n          {\n            \"name\": \"fromChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Chain id of source chain.\",\n            \"example\": \"137\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromTokenAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Token address on source chain.\",\n            \"example\": \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"toChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Chain id of destination chain.\",\n            \"example\": \"56\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"toTokenAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Token address on destination chain.\",\n            \"example\": \"0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromAmount\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Amount of sending tokens.\",\n            \"example\": \"100000000\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Address of user. This will be used to check approvals.\",\n            \"example\": \"0x3e8cB4bd04d81498aB4b94a392c334F5328b237b\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"uniqueRoutesPerBridge\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Flag to return only best route per bridge using the sort criteria\",\n            \"example\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"disableSwapping\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Flag to specify if routes that have dex swap should be ignored.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"includeDexes\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Dexes that should be included in routes.\",\n            \"schema\": {\n              \"enum\": [\"oneinch\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"excludeDexes\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Dexes that should be excluded in routes.\\nThis option will be ignored if includeDexes is specified.\",\n            \"schema\": {\n              \"enum\": [\"oneinch\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"includeBridges\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Bridges that should be included in routes.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n              }\n            }\n          },\n          {\n            \"name\": \"excludeBridges\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Bridges that should be excluded in routes.\\nThis option will be ignored if includeBridges is specified.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n              }\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Param to sort routes based on.\",\n            \"schema\": {\n              \"enum\": [\"output\", \"gas\", \"time\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxUserTxs\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Maximum number of transactions.\\nThis option will be ignored if singleTxOnly is marked as true.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"singleTxOnly\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Only get quotes with one user transaction to bridge.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns all the possible routes for bridging tokens from one chain to another. One of the routes can be selected and passed in to start the route.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QuoteOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Quote\"]\n      }\n    },\n    \"/v2/supported/bridges\": {\n      \"get\": {\n        \"operationId\": \"SupportedController_getAllBridges\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"All Supported Bridges\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SupportedBridgesOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Supported\"]\n      }\n    },\n    \"/v2/supported/chains\": {\n      \"get\": {\n        \"operationId\": \"SupportedController_getAllSupportedRoutes\",\n        \"parameters\": [\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"All Supported Chains by Movr\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SupportedChainsOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Supported\"]\n      }\n    },\n    \"/v2/balances\": {\n      \"get\": {\n        \"operationId\": \"BalancesController_getBalances\",\n        \"parameters\": [\n          {\n            \"name\": \"userAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"example\": \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the balance of all tokens for a user address on all supported chains\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Balance\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Balances\"]\n      }\n    },\n    \"/v2/balances/token-balance\": {\n      \"get\": {\n        \"operationId\": \"BalancesController_getBalance\",\n        \"parameters\": [\n          {\n            \"name\": \"tokenAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Token contract address on network, e.g USDC on Ethereum Mainnet\",\n            \"example\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"chainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"ID of chain, e.g Ethereum Mainnet = 1\",\n            \"example\": \"1\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Address of the user\",\n            \"example\": \"0x0E1B5AB67aF1c99F8c7Ebc71f41f75D4D6211e53\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the balance of the token on any given chain\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenBalanceReponseDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Balances\"]\n      }\n    },\n    \"/v2/route/start\": {\n      \"post\": {\n        \"operationId\": \"ActiveRoutesController_startActiveRoute\",\n        \"summary\": \"\",\n        \"description\": \"Function that takes in a route and starts the selected route.\\n  Function is responsible for\\n  - Saving the selected route to bridge tokens from one chain to another.\\n  - Saving the fromChain, toChain, and fromAsssetAddress and toAssetAddress\\n  - Returns the Active Route Id, Current Tx, Total number of txs, txType\",\n        \"parameters\": [\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/StartActiveRouteInputDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Starts the Active Route and gives back the data to start the route\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StartActiveRouteResponseDTO\"\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\"Routes\"]\n      }\n    },\n    \"/v2/route/active-routes\": {\n      \"get\": {\n        \"operationId\": \"ActiveRoutesController_getActiveRoutes\",\n        \"parameters\": [\n          {\n            \"name\": \"activeRouteId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Id of the Active Route.\",\n            \"example\": \"420\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get active route details using active route id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ActiveRoutesOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Routes\"]\n      }\n    },\n    \"/v2/route/active-routes/users\": {\n      \"get\": {\n        \"operationId\": \"ActiveRoutesController_getActiveRoutesForUser\",\n        \"parameters\": [\n          {\n            \"name\": \"userAddress\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Address of user starting the route.\",\n            \"example\": \"0x3e8cB4bd04d81498aB4b94a392c334F5328b237b\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Sort param for routes.\",\n            \"schema\": {\n              \"enum\": [\"updatedAt\", \"createdAt\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"offset\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Offset for fetching active routes.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Number of active routes to return in one API call.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"routeStatus\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Status of the route. The route will only be marked completed if all the user txs have been completed.\",\n            \"schema\": {\n              \"enum\": [\"PENDING\", \"COMPLETED\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromChainId\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Id of sending chain\",\n            \"example\": \"137\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"toChainId\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Id of destination chain.\",\n            \"example\": \"56\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromTokenAddress\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Address of token on source chain.\",\n            \"example\": \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"toTokenAddress\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Token address on destination chain.\",\n            \"example\": \"0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get all the active routes from a user address. Filters like fromChainId, toChainId and token addresses can be used to get back specific active routes.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ActiveRoutesOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Routes\"]\n      }\n    },\n    \"/v2/route/build-next-tx\": {\n      \"get\": {\n        \"operationId\": \"ActiveRoutesController_nextTx\",\n        \"parameters\": [\n          {\n            \"name\": \"activeRouteId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Id of Active Route.\",\n            \"example\": \"420\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get next tx details of an active route\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NextTxOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Routes\"]\n      }\n    },\n    \"/v2/route/prepare\": {\n      \"get\": {\n        \"operationId\": \"ActiveRoutesController_getActiveRouteStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"activeRouteId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Id of Active Route.\",\n            \"example\": \"420\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userTxIndex\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Index of the userTxs in the Active Route. Every active route will have a userTxs array. userTxIndex is the index of the object in the userTxs array.\",\n            \"example\": \"2\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"txHash\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Transaction hash that relates to the userTxIndex. Each object in the userTxs is a transaction that has to be done by the user to progress in the route. If all the transactions are completed in the route, it will be marked complete.\",\n            \"example\": \"0x66b41ab61c3fd3a20649b9a722e69bdab58706c0\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"signature\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Signature to be sent in case the next transaction is dependant on the signature.\",\n            \"example\": \"xyz\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get status of an active route\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RouteStatusOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Routes\"]\n      }\n    },\n    \"/v2/token-lists/from-token-list\": {\n      \"get\": {\n        \"operationId\": \"TokenListController_getfromTokenList\",\n        \"parameters\": [\n          {\n            \"name\": \"fromChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Id of source chain, e.g Optimism = 10\",\n            \"example\": \"10\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"toChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Id of destination chain, e.g xDAI = 100\",\n            \"example\": \"100\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"disableSwapping\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Flag to specify if tokens that need dex swap should be ignored.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"includeDexes\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Dexes that should be included for token support.\",\n            \"schema\": {\n              \"enum\": [\"oneinch\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"excludeDexes\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Dexes that should be excluded for token support.\\nThis option will be ignored if includeDexes is specified.\",\n            \"schema\": {\n              \"enum\": [\"oneinch\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"includeBridges\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Bridges that should be included for token support.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n              }\n            }\n          },\n          {\n            \"name\": \"excludeBridges\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Bridges that should be excluded for token support.\\nThis option will be ignored if includeBridges is specified.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n              }\n            }\n          },\n          {\n            \"name\": \"singleTxOnly\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"To be Marked true if you want the token list that needs only a single transaction from the user to bridge.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"All Supported token by a given chainId\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenListOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Token Lists\"]\n      }\n    },\n    \"/v2/token-lists/to-token-list\": {\n      \"get\": {\n        \"operationId\": \"TokenListController_getToTokenList\",\n        \"parameters\": [\n          {\n            \"name\": \"fromChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Id of source chain, e.g Optimism = 10\",\n            \"example\": \"10\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"toChainId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Id of destination chain, e.g xDAI = 100\",\n            \"example\": \"100\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"disableSwapping\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Flag to specify if tokens that need dex swap should be ignored.\\nThis option will be ignored if singleTxOnly is marked true.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"includeDexes\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Dexes that should be included for token support.\",\n            \"schema\": {\n              \"enum\": [\"oneinch\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"excludeDexes\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Dexes that should be excluded for token support.\\nThis option will be ignored if includeDexes is specified.\",\n            \"schema\": {\n              \"enum\": [\"oneinch\"],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"includeBridges\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Bridges that should be included for token support.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n              }\n            }\n          },\n          {\n            \"name\": \"excludeBridges\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"Specify Bridges that should be excluded for token support.\\nThis option will be ignored if includeBridges is specified.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\"polygon-bridge\", \"hop\", \"anyswap-router-v4\", \"hyphen\", \"arbitrum-bridge\", \"connext\"]\n              }\n            }\n          },\n          {\n            \"name\": \"singleTxOnly\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"description\": \"To be Marked true if you want the token list that needs only a single transaction from the user to bridge.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"API-KEY\",\n            \"in\": \"header\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"All Supported token by a given route\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TokenListOutputDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"Token Lists\"]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/levelkdev/swapr-dapp@b00abe2cd76e7038736d363e5d911ca5277b5f69/-/blob/src/services/EcoBridge/Socket/api/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/levelkdev/swapr-dapp/blob/b00abe2cd76e7038736d363e5d911ca5277b5f69/src/services/EcoBridge/Socket/api/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}