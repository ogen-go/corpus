{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/IBM-Cloud/slack-chatbot-database-watson"
		},
		"file": {
			"name": "slackbot-openapi-spec.json",
			"size": 0,
			"path": "slackbot-openapi-spec.json",
			"byteSize": 12847,
			"content": "{\n  \"info\": {\n    \"title\": \"Events API for Watson Assistant\",\n    \"version\": \"1.0.1\"\n  },\n  \"tags\": [],\n  \"servers\": [\n    {\n      \"description\": \"Code Engine deployment\",\n      \"url\": \"https://{appname}.{projectid}.{region}.codeengine.appdomain.cloud\",\n      \"variables\": {\n        \"appname\": {\n          \"default\": \"myapp\",\n          \"description\": \"application name\"\n        },\n        \"projectid\": {\n          \"default\": \"projectid\",\n          \"description\": \"the Code Engine project ID\"\n        },\n        \"region\": {\n          \"default\": \"us-south\",\n          \"description\": \"the deployment region, e.g., us-south\"\n        }\n      }\n    },\n    {\n      \"description\": \"local test\",\n      \"url\": \"http://127.0.0.1:{port}\",\n      \"variables\": {\n        \"port\": {\n          \"default\": \"5000\",\n          \"description\": \"local port to use\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Greeting\",\n        \"description\": \"health check\"\n      }\n    },\n    \"/events\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"per_page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 20,\n              \"maximum\": 30\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventsOut\"\n                }\n              }\n            },\n            \"description\": \"Successful response\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation error\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Authentication error\"\n          }\n        },\n        \"summary\": \"all events\",\n        \"description\": \"Retrieve all event records\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"parameters\": [],\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventOut\"\n                }\n              }\n            },\n            \"description\": \"Successful response\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation error\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Authentication error\"\n          }\n        },\n        \"summary\": \"Insert a new event record\",\n        \"description\": \"Insert a new event record with the given attributes. Its new EID is returned.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EventIn\"\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"ApiKeyAuth\": []\n          }\n        ]\n      }\n    },\n    \"/database/recreate\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"confirmation\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            },\n            \"description\": \"Successful response\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"Validation error\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Authentication error\"\n          }\n        },\n        \"summary\": \"Recreate the database schema\",\n        \"description\": \"Recreate the database schema and insert sample data.\\nRequest must be confirmed by passing query parameter.\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": []\n          }\n        ]\n      }\n    },\n    \"/events/eid/{eid}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"eid\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventOut\"\n                }\n              }\n            },\n            \"description\": \"Successful response\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Authentication error\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Not found\"\n          }\n        },\n        \"summary\": \"Event record by EID\",\n        \"description\": \"Retrieve a single event record by its EID\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"eid\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Authentication error\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Not found\"\n          }\n        },\n        \"summary\": \"Delete an event record by EID\",\n        \"description\": \"Delete a single event record identified by its EID.\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": []\n          }\n        ]\n      }\n    },\n    \"/events/name/{short_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"short_name\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventOut\"\n                }\n              }\n            },\n            \"description\": \"Successful response\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Authentication error\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPError\"\n                }\n              }\n            },\n            \"description\": \"Not found\"\n          }\n        },\n        \"summary\": \"Event record by name\",\n        \"description\": \"Retrieve a single event record by its short name\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": []\n          }\n        ]\n      }\n    }\n  },\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"ValidationError\": {\n        \"properties\": {\n          \"detail\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"\u003clocation\u003e\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"\u003cfield_name\u003e\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"HTTPError\": {\n        \"properties\": {\n          \"detail\": {\n            \"type\": \"object\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Pagination\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"current\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"first\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"prev\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"pages\": {\n            \"type\": \"integer\"\n          },\n          \"last\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"per_page\": {\n            \"type\": \"integer\"\n          },\n          \"next\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"total\": {\n            \"type\": \"integer\"\n          },\n          \"page\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"EventOut\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"begindate\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"enddate\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"contact\": {\n            \"type\": \"string\"\n          },\n          \"shortname\": {\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"eid\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"EventsOut\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          },\n          \"events\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EventOut\"\n            }\n          }\n        }\n      },\n      \"EventIn\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"begindate\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"enddate\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"contact\": {\n            \"type\": \"string\",\n            \"minLength\": 0,\n            \"maxLength\": 255\n          },\n          \"shortname\": {\n            \"type\": \"string\",\n            \"minLength\": 0,\n            \"maxLength\": 20\n          },\n          \"location\": {\n            \"type\": \"string\",\n            \"minLength\": 0,\n            \"maxLength\": 60\n          }\n        },\n        \"required\": [\n          \"begindate\",\n          \"contact\",\n          \"enddate\",\n          \"location\",\n          \"shortname\"\n        ]\n      }\n    },\n    \"securitySchemes\": {\n      \"ApiKeyAuth\": {\n        \"type\": \"apiKey\",\n        \"name\": \"API_TOKEN\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/IBM-Cloud/slack-chatbot-database-watson@3e9c69624a4e6087b7834a605be9b09c2ecebc7f/-/blob/slackbot-openapi-spec.json",
			"externalURLs": [
				{
					"url": "https://github.com/IBM-Cloud/slack-chatbot-database-watson/blob/3e9c69624a4e6087b7834a605be9b09c2ecebc7f/slackbot-openapi-spec.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}