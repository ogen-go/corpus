{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/uclouvain/osis"
		},
		"file": {
			"name": "schema.yml",
			"size": 0,
			"path": "webservices/schema.yml",
			"byteSize": 4621,
			"content": "openapi: 3.0.0\nservers:\n - url: https://{environment}.osis.uclouvain.be/api/v1\n   variables:\n     environment:\n       default: dev\n       enum:\n         - dev # Development server\n         - qa # Staging server\n         - test # Test server\n - url: https://osis.uclouvain.be/api/v1\n   description: Production server\ninfo:\n  version: '1.01'\n  title: Auth Service\n  description: |-\n    A set of API endpoints that allow you to get a token.\npaths:\n  /auth/token:\n    post:\n      description: Return a token linked to the username. Only Admin can access to this endpoint\n      operationId: token_create\n      parameters:\n        - $ref: '#/components/parameters/Accept-Language'\n        - $ref: '#/components/parameters/X-User-FirstName'\n        - $ref: '#/components/parameters/X-User-LastName'\n        - $ref: '#/components/parameters/X-User-Email'\n        - $ref: '#/components/parameters/X-User-GlobalID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                  username:\n                    type: string\n                    description: The username which we want to get a token\n                  force_user_creation:\n                    type: boolean\n                    description: If the username specified doesn't not exist, force creation of user\n                    default: false\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                    token:\n                      type: string\n                      description: The token linked to the user\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n      tags:\n      - auth\n  /users/current:\n    get:\n      description: Return basic information of the connected user\n      operationId: user_get\n      parameters:\n        - $ref: '#/components/parameters/Accept-Language'\n        - $ref: '#/components/parameters/X-User-FirstName'\n        - $ref: '#/components/parameters/X-User-LastName'\n        - $ref: '#/components/parameters/X-User-Email'\n        - $ref: '#/components/parameters/X-User-GlobalID'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n      tags:\n        - users\ncomponents:\n  securitySchemes:\n    Token:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Enter your token in the format **Token \u0026lt;token\u003e**\n  parameters:\n    X-User-FirstName:\n      in: header\n      name: X-User-FirstName\n      schema:\n        type: string\n      required: false\n    X-User-LastName:\n      in: header\n      name: X-User-LastName\n      schema:\n        type: string\n      required: false\n    X-User-Email:\n      in: header\n      name: X-User-Email\n      schema:\n        type: string\n      required: false\n    X-User-GlobalID:\n      in: header\n      name: X-User-GlobalID\n      schema:\n        type: string\n      required: false\n    Accept-Language:\n      in: header\n      name: Accept-Language\n      description: \u003e\n        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)\n      schema:\n        $ref: '#/components/schemas/AcceptedLanguageEnum'\n      required: false\n  responses:\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    User:\n      type: object\n      properties:\n        username:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        middle_name:\n          type: string\n        email:\n          type: string\n          format: email\n    AcceptedLanguageEnum:\n      type: string\n      enum:\n        - 'en'\n        - 'fr-be'\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\nsecurity:\n  - Token: []\n",
			"canonicalURL": "/github.com/uclouvain/osis@2f6a70d9f81a16d144849b9e01d0f3f6768b8f08/-/blob/webservices/schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/uclouvain/osis/blob/2f6a70d9f81a16d144849b9e01d0f3f6768b8f08/webservices/schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}