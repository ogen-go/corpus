{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "digitallinguistics.io-0.3.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/digitallinguistics.io-0.3.1-swagger.yaml",
			"byteSize": 34214,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: dhieber@umail.ucsb.edu\n    name: Daniel W. Hieber\n    url: http://danielhieber.com/\n  description: The Digital Linguistics (DLx) REST API\n  license:\n    name: MIT\n  title: DLx\n  version: 0.3.1\n  x-apisguru-categories:\n    - text\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://avatars3.githubusercontent.com/u/5896943?s=200\u0026v=4\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/digitallinguistics/api/master/public/swagger/swagger.json\n      version: \"2.0\"\n  x-providerName: digitallinguistics.io\nexternalDocs:\n  description: How to use the API\n  url: http://developer.digitallinguistics.io/api/\nsecurity:\n  - Authorization: []\ntags:\n  - description: Operations on Languages\n    name: Language\n  - description: Operations on Lexemes\n    name: Lexeme\npaths:\n  /languages:\n    get:\n      description: Retrieves all the Languages that the authenticated user or client has\n        permission to access.\n      operationId: getLanguages\n      parameters:\n        - description: The `dlx-continuation` header is used to send a continuation token\n            with the request, when retrieving the next page of results.\n          in: header\n          name: continuation\n          required: false\n          schema:\n            type: string\n        - description: Setting the `deleted` option to `true` will return results that have\n            been marked for deletion, but not yet deleted from the database.\n            Otherwise requests for a resource marked for deletion will return a\n            410 error.\n          in: query\n          name: deleted\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: The `If-Modified-Since` header is used to retrieve only results\n            modified since a given time. The value of this header must be a\n            valid date string.\n          in: header\n          name: ifModifiedSince\n          required: false\n          schema:\n            type: string\n        - description: The `dlx-max-item-count` header is used to limit the number of\n            results to a certain amount at a time (by default all results will\n            be returned). If there are more results to be returned, a\n            continuation token will also be sent in the `dlx-continuation`\n            header.\n          in: header\n          name: maxItemCount\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter to `true` to include all publicly-accessible\n            resources, not just those that the user is listed as an Owner,\n            Contributor, or Viewer for.\n          in: query\n          name: public\n          required: false\n          schema:\n            type: string\n            default: \"false\"\n      responses:\n        \"200\":\n          description: \"200: Operation successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n            dlx-continuation:\n              description: A continuation token for retrieving more results\n              schema:\n                type: string\n            dlx-item-count:\n              description: The number of items returned in the response\n              schema:\n                type: string\n      summary: Get all Languages\n      tags:\n        - Language\n    post:\n      operationId: addLanguage\n      requestBody:\n        $ref: \"#/components/requestBodies/addLanguageBody\"\n      responses:\n        \"201\":\n          description: \"201: The resource was created successfully.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Add a new Language\n      tags:\n        - Language\n    put:\n      description: Creates a Language if it does not yet exist (i.e. if the resource does\n        not have an `id` property yet), or replaces the existing Language\n        resource if it does. Note that this replaces the *entire* Language. It\n        is not a partial update.\n      operationId: upsertLanguage\n      parameters:\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/addLanguageBody\"\n      responses:\n        \"201\":\n          description: \"201: Upsert successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Upsert (create or replace) a Language\n      tags:\n        - Language\n  \"/languages/{languageID}\":\n    delete:\n      operationId: deleteLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: \"204: Delete operation successful.\"\n      summary: Delete a Language by ID\n      tags:\n        - Language\n    get:\n      operationId: getLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: Setting the `deleted` option to `true` will return results that have\n            been marked for deletion, but not yet deleted from the database.\n            Otherwise requests for a resource marked for deletion will return a\n            410 error.\n          in: query\n          name: deleted\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: If `If-None-Match` header is used with GET requests to check whether\n            you already have the most up-to-date version of the resource, and\n            therefore do not need the resource sent again. The value of the\n            `If-None-Match` header is the ETag (`_etag`) property of the\n            resource. It is recommended that your application use this header\n            whenever possible to reduce bandwidth.\n          in: header\n          name: ifNoneMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"200: Operation successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n            dlx-continuation:\n              description: A continuation token for retrieving more results\n              schema:\n                type: string\n            dlx-item-count:\n              description: The number of items returned in the response\n              schema:\n                type: string\n        \"304\":\n          description: \"304: Not modified.\"\n      summary: Retrieve a Language by ID\n      tags:\n        - Language\n    patch:\n      description: Performs a partial update the Language whose ID is specified in the URL.\n        If the Language object has an `id` property, is ignored in favor of the\n        ID in the URL.\n      operationId: updateLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/addLanguageBody\"\n      responses:\n        \"200\":\n          description: \"200: Update successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Perform a partial update on a Language\n      tags:\n        - Language\n  \"/languages/{languageID}/lexemes\":\n    get:\n      operationId: getLexemesByLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: The `dlx-continuation` header is used to send a continuation token\n            with the request, when retrieving the next page of results.\n          in: header\n          name: continuation\n          required: false\n          schema:\n            type: string\n        - description: Setting the `deleted` option to `true` will return results that have\n            been marked for deletion, but not yet deleted from the database.\n            Otherwise requests for a resource marked for deletion will return a\n            410 error.\n          in: query\n          name: deleted\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: The `If-Modified-Since` header is used to retrieve only results\n            modified since a given time. The value of this header must be a\n            valid date string.\n          in: header\n          name: ifModifiedSince\n          required: false\n          schema:\n            type: string\n        - description: The `dlx-max-item-count` header is used to limit the number of\n            results to a certain amount at a time (by default all results will\n            be returned). If there are more results to be returned, a\n            continuation token will also be sent in the `dlx-continuation`\n            header.\n          in: header\n          name: maxItemCount\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter to `true` to include all publicly-accessible\n            resources, not just those that the user is listed as an Owner,\n            Contributor, or Viewer for.\n          in: query\n          name: public\n          required: false\n          schema:\n            type: string\n            default: \"false\"\n      responses:\n        \"200\":\n          description: \"200: Operation successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n            dlx-continuation:\n              description: A continuation token for retrieving more results\n              schema:\n                type: string\n            dlx-item-count:\n              description: The number of items returned in the response\n              schema:\n                type: string\n      summary: Get all Lexemes for a Language\n      tags:\n        - Language\n        - Lexeme\n    post:\n      operationId: addLexemeByLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: \"201: The resource was created successfully.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Add a new Lexeme to a Language\n      tags:\n        - Language\n        - Lexeme\n    put:\n      operationId: upsertLexemeByLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: \"201: Upsert successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Upsert (add or replace) a Lexeme\n      tags:\n        - Language\n        - Lexeme\n  \"/languages/{languageID}/lexemes/{lexemeID}\":\n    delete:\n      operationId: deleteLexemeByLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the Lexeme to perform the operation on\n          in: path\n          name: lexemeID\n          required: true\n          schema:\n            type: string\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: \"204: Delete operation successful.\"\n      summary: Delete a Lexeme by ID\n      tags:\n        - Language\n        - Lexeme\n    get:\n      operationId: getLexemeByLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the Lexeme to perform the operation on\n          in: path\n          name: lexemeID\n          required: true\n          schema:\n            type: string\n        - description: Setting the `deleted` option to `true` will return results that have\n            been marked for deletion, but not yet deleted from the database.\n            Otherwise requests for a resource marked for deletion will return a\n            410 error.\n          in: query\n          name: deleted\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: If `If-None-Match` header is used with GET requests to check whether\n            you already have the most up-to-date version of the resource, and\n            therefore do not need the resource sent again. The value of the\n            `If-None-Match` header is the ETag (`_etag`) property of the\n            resource. It is recommended that your application use this header\n            whenever possible to reduce bandwidth.\n          in: header\n          name: ifNoneMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"200: Operation successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n            dlx-continuation:\n              description: A continuation token for retrieving more results\n              schema:\n                type: string\n            dlx-item-count:\n              description: The number of items returned in the response\n              schema:\n                type: string\n        \"304\":\n          description: \"304: Not modified.\"\n      summary: Get a Lexeme by ID\n      tags:\n        - Language\n        - Lexeme\n    patch:\n      operationId: updateLexemeByLanguage\n      parameters:\n        - description: The ID of the Language to perform the operation on\n          in: path\n          name: languageID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the Lexeme to perform the operation on\n          in: path\n          name: lexemeID\n          required: true\n          schema:\n            type: string\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"200: Update successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Perform a partial update on a Lexeme\n      tags:\n        - Lexeme\n  /lexemes:\n    get:\n      description: Retrieve all Lexemes that the authenticated user has permission to\n        access. Include a `languageID` query parameter to limit results to\n        Lexemes from a particular Language.\n      operationId: getLexemes\n      parameters:\n        - description: The `dlx-continuation` header is used to send a continuation token\n            with the request, when retrieving the next page of results.\n          in: header\n          name: continuation\n          required: false\n          schema:\n            type: string\n        - description: Setting the `deleted` option to `true` will return results that have\n            been marked for deletion, but not yet deleted from the database.\n            Otherwise requests for a resource marked for deletion will return a\n            410 error.\n          in: query\n          name: deleted\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: The `If-Modified-Since` header is used to retrieve only results\n            modified since a given time. The value of this header must be a\n            valid date string.\n          in: header\n          name: ifModifiedSince\n          required: false\n          schema:\n            type: string\n        - allowEmptyValue: true\n          description: The ID of the Language to perform the operation on\n          in: query\n          name: languageID\n          required: false\n          schema:\n            type: string\n        - description: The `dlx-max-item-count` header is used to limit the number of\n            results to a certain amount at a time (by default all results will\n            be returned). If there are more results to be returned, a\n            continuation token will also be sent in the `dlx-continuation`\n            header.\n          in: header\n          name: maxItemCount\n          required: false\n          schema:\n            type: string\n        - description: Set this parameter to `true` to include all publicly-accessible\n            resources, not just those that the user is listed as an Owner,\n            Contributor, or Viewer for.\n          in: query\n          name: public\n          required: false\n          schema:\n            type: string\n            default: \"false\"\n      responses:\n        \"200\":\n          description: \"200: Operation successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n            dlx-continuation:\n              description: A continuation token for retrieving more results\n              schema:\n                type: string\n            dlx-item-count:\n              description: The number of items returned in the response\n              schema:\n                type: string\n      summary: Get all Lexemes\n      tags:\n        - Lexeme\n    post:\n      description: Add a new Lexeme. A `languageID` must be provided either as a query\n        parameter, or as an attribute on the Lexeme body.\n      operationId: addLexeme\n      parameters:\n        - allowEmptyValue: true\n          description: The ID of the Language to perform the operation on\n          in: query\n          name: languageID\n          required: false\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: \"201: The resource was created successfully.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Add a new Lexeme\n      tags:\n        - Lexeme\n    put:\n      description: Upsert (add or replace) a Lexeme. A `languageID` must be provided either\n        as a query parameter, or as an attribute on the Lexeme body.\n      operationId: upsertLexeme\n      parameters:\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n        - allowEmptyValue: true\n          description: The ID of the Language to perform the operation on\n          in: query\n          name: languageID\n          required: false\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: \"201: Upsert successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Upsert (add or replace) a Lexeme\n      tags:\n        - Lexeme\n  \"/lexemes/{lexemeID}\":\n    delete:\n      operationId: deleteLexeme\n      parameters:\n        - description: The ID of the Lexeme to perform the operation on\n          in: path\n          name: lexemeID\n          required: true\n          schema:\n            type: string\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: \"204: Delete operation successful.\"\n      summary: Delete a Lexeme by ID\n      tags:\n        - Lexeme\n    get:\n      operationId: getLexeme\n      parameters:\n        - description: The ID of the Lexeme to perform the operation on\n          in: path\n          name: lexemeID\n          required: true\n          schema:\n            type: string\n        - description: Setting the `deleted` option to `true` will return results that have\n            been marked for deletion, but not yet deleted from the database.\n            Otherwise requests for a resource marked for deletion will return a\n            410 error.\n          in: query\n          name: deleted\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: If `If-None-Match` header is used with GET requests to check whether\n            you already have the most up-to-date version of the resource, and\n            therefore do not need the resource sent again. The value of the\n            `If-None-Match` header is the ETag (`_etag`) property of the\n            resource. It is recommended that your application use this header\n            whenever possible to reduce bandwidth.\n          in: header\n          name: ifNoneMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"200: Operation successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n            dlx-continuation:\n              description: A continuation token for retrieving more results\n              schema:\n                type: string\n            dlx-item-count:\n              description: The number of items returned in the response\n              schema:\n                type: string\n        \"304\":\n          description: \"304: Not modified.\"\n      summary: Get a Lexeme by ID\n      tags:\n        - Lexeme\n    patch:\n      description: Perform a partial update on a Lexeme.\n      operationId: updateLexeme\n      parameters:\n        - description: The ID of the Lexeme to perform the operation on\n          in: path\n          name: lexemeID\n          required: true\n          schema:\n            type: string\n        - description: The `If-Match` header is used with PUT and DELETE requests to check\n            whether you have the most up-to-date version of the resource before\n            updating or deleting it. The value of the `If-Match` header is the\n            ETag (`_etag`) property of the resource. It is recommended that your\n            application use this header whenever possible to avoid data\n            conflicts.\n          in: header\n          name: ifMatch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"200: Update successful.\"\n          headers:\n            Last-Modified:\n              description: The time that the item was last modified\n              schema:\n                type: string\n      summary: Perform a partial update on a Lexeme\n      tags:\n        - Lexeme\nservers:\n  - url: https://api.digitallinguistics.io/v0\ncomponents:\n  parameters:\n    continuation:\n      description: The `dlx-continuation` header is used to send a continuation token with\n        the request, when retrieving the next page of results.\n      in: header\n      name: continuation\n      required: false\n      schema:\n        type: string\n    deleted:\n      description: Setting the `deleted` option to `true` will return results that have\n        been marked for deletion, but not yet deleted from the database.\n        Otherwise requests for a resource marked for deletion will return a 410\n        error.\n      in: query\n      name: deleted\n      required: false\n      schema:\n        type: boolean\n        default: false\n    ifMatch:\n      description: The `If-Match` header is used with PUT and DELETE requests to check\n        whether you have the most up-to-date version of the resource before\n        updating or deleting it. The value of the `If-Match` header is the ETag\n        (`_etag`) property of the resource. It is recommended that your\n        application use this header whenever possible to avoid data conflicts.\n      in: header\n      name: ifMatch\n      required: false\n      schema:\n        type: string\n    ifModifiedSince:\n      description: The `If-Modified-Since` header is used to retrieve only results modified\n        since a given time. The value of this header must be a valid date\n        string.\n      in: header\n      name: ifModifiedSince\n      required: false\n      schema:\n        type: string\n    ifNoneMatch:\n      description: If `If-None-Match` header is used with GET requests to check whether you\n        already have the most up-to-date version of the resource, and therefore\n        do not need the resource sent again. The value of the `If-None-Match`\n        header is the ETag (`_etag`) property of the resource. It is recommended\n        that your application use this header whenever possible to reduce\n        bandwidth.\n      in: header\n      name: ifNoneMatch\n      required: false\n      schema:\n        type: string\n    languageID:\n      description: The ID of the Language to perform the operation on\n      in: path\n      name: languageID\n      required: true\n      schema:\n        type: string\n    languageIDQuery:\n      allowEmptyValue: true\n      description: The ID of the Language to perform the operation on\n      in: query\n      name: languageID\n      required: false\n      schema:\n        type: string\n    lexemeID:\n      description: The ID of the Lexeme to perform the operation on\n      in: path\n      name: lexemeID\n      required: true\n      schema:\n        type: string\n    maxItemCount:\n      description: The `dlx-max-item-count` header is used to limit the number of results\n        to a certain amount at a time (by default all results will be returned).\n        If there are more results to be returned, a continuation token will also\n        be sent in the `dlx-continuation` header.\n      in: header\n      name: maxItemCount\n      required: false\n      schema:\n        type: string\n    public:\n      description: Set this parameter to `true` to include all publicly-accessible\n        resources, not just those that the user is listed as an Owner,\n        Contributor, or Viewer for.\n      in: query\n      name: public\n      required: false\n      schema:\n        type: string\n        default: \"false\"\n  responses:\n    BadRequest:\n      description: \"400: There was a problem with the request.\"\n    Conflict:\n      description: \"409: There was a data conflict in the database.\"\n    Created:\n      description: \"201: The resource was created successfully.\"\n      headers:\n        Last-Modified:\n          description: The time that the item was last modified\n          schema:\n            type: string\n    DeleteSuccessful:\n      description: \"204: Delete operation successful.\"\n    Forbidden:\n      description: \"403: Unauthorized.\"\n    LargePayload:\n      description: \"413: Request payload is too large.\"\n    MethodNotAllowed:\n      description: \"405: Method not allowed.\"\n    NotAcceptable:\n      description: \"406: Cannot return data in requested format.\"\n    NotFound:\n      description: \"404: Database resource not found.\"\n    NotImplemented:\n      description: \"501: This feature is not yet implemented.\"\n    NotModified:\n      description: \"304: Not modified.\"\n    PreconditionFailed:\n      description: \"412: A precondition for the operation was not met.\"\n    RetryOperation:\n      description: \"449: Retry the operation\"\n    ServerError:\n      description: \"500: An error occurred on the server.\"\n    Success:\n      description: \"200: Operation successful.\"\n      headers:\n        Last-Modified:\n          description: The time that the item was last modified\n          schema:\n            type: string\n        dlx-continuation:\n          description: A continuation token for retrieving more results\n          schema:\n            type: string\n        dlx-item-count:\n          description: The number of items returned in the response\n          schema:\n            type: string\n    Timeout:\n      description: \"408: The request timed out.\"\n    TokenExpired:\n      description: \"419: Access token expired.\"\n    TooManyRequests:\n      description: \"429: Too many requests.\"\n    Unauthorized:\n      description: \"401: Authorization missing or invalid.\"\n      headers:\n        WWW-Authenticate:\n          description: An access token is required.\n          schema:\n            type: string\n    Unprocessable:\n      description: \"422: The data is not properly formatted.\"\n    UpdateSuccessful:\n      description: \"200: Update successful.\"\n      headers:\n        Last-Modified:\n          description: The time that the item was last modified\n          schema:\n            type: string\n    UpsertSuccessful:\n      description: \"201: Upsert successful.\"\n      headers:\n        Last-Modified:\n          description: The time that the item was last modified\n          schema:\n            type: string\n  requestBodies:\n    addLanguageBody:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: A database resource to upsert\n      required: true\n  securitySchemes:\n    Authorization:\n      description: An access token (JSON Web Token) included in the `Authorization` header\n        in the format `Bearer {token}`. Tokens may be retrieved programmatically\n        from https://digitallinguistics.auth0.com. See the authorization\n        documentation at http://developer.digitallinguistics.io/api/.\n      in: header\n      name: Authorization\n      type: apiKey\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/digitallinguistics.io-0.3.1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/digitallinguistics.io-0.3.1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}