{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CloudNativeSDWAN/cnwan-adaptor"
		},
		"file": {
			"name": "adaptor_api.yaml",
			"size": 0,
			"path": "adaptor_server/adaptor_api.yaml",
			"byteSize": 10919,
			"content": "\nopenapi: \"3.0.0\"\n\ninfo:\n  title: \"CN-WAN Adaptor API\"\n  description: \"API that connects to a SDWAN controller to update endpoint policies using metadata from Kubernetes services.\"\n  version: \"2.0.0\"\n  termsOfService: \"https://github.com/CloudNativeSDWAN/cnwan-adaptor\"\n  contact:\n    email: \"cnwan@cisco.com\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n\ntags:\n- name: \"CN-WAN Adaptor API\"\n  description: \"API to configure SDWAN controller credentials, traffic profiles and update endpoint metadata.\"\n\npaths:\n  /credentials:\n    get:\n      tags:\n      - \"configure\"\n      summary: \"Get current SDWAN controller credentials\"\n      operationId: \"getCredentials\"\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/credentials\"\n        default:\n          description: Unexpected error\n    post:\n      tags:\n      - \"configure\"\n      summary: \"Configure SDWAN controller credentials\"\n      operationId: \"postCredentials\"\n      requestBody:\n        description: \"SDWAN controller User, Password and IP address or URL\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/credentials\"\n      responses:\n        '200':\n          description: 'Login OK'\n        '401':\n          description:  \"Login error\"\n        default:\n          description: Unexpected error\n    delete:\n      tags:\n        - \"configure\"\n      summary: \"Delete SDWAN controller credentials\"\n      operationId: \"deleteCredentials\"\n      responses:\n        '200':\n          description: \"Success\"\n        '500':\n          description: \"Server Error\"\n\n\n\n  /mappings:\n    get:\n      tags:\n      - \"configure\"\n      summary: \"Get current mappings\"\n      operationId: \"getMappings\"\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/mapping\"\n        default:\n          description: Unexpected error\n\n    post:\n      tags:\n      - \"configure\"\n      summary: \"Create a new mapping entry\"\n      operationId: \"postMapping\"\n      requestBody:\n        description: 'Definition of a new mapping'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/mapping\"\n      responses:\n        '200':\n          description: 'Config OK'\n        default:\n          description: Unexpected error\n\n  /mappings/{metadataValue}:\n    put:\n      tags:\n      - \"configure\"\n      summary: \"Update the definition of an existing mapping\"\n      operationId: \"putMapping\"\n      parameters:\n        - name: metadataValue\n          in: path\n          description: \"Metadata value\"\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: \"mapping definition\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/mappingUpdate\"\n      responses:\n        '200':\n          description: 'Update OK'\n        '404':\n          description: 'Cannot find mapping name'\n        default:\n          description: Unexpected error\n\n    delete:\n      tags:\n      - \"configure\"\n      summary: \"Delete mapping\"\n      operationId: \"delete Mapping\"\n      parameters:\n        - name: metadataValue\n          in: path\n          description: \"Metadata value\"\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Delete OK'\n        '400':\n          description: 'Cannot find mapping'\n        default:\n          description: Unexpected error\n\n  /cnwan/events:\n   post:\n    tags:\n    - \"configure\"\n    summary: \"Send metadata updates for several endpoints at the same time\"\n    operationId: \"events\"\n    requestBody:\n      description: \"An array of endpoints to update, with the associated operation and metadata\"\n      required: true\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/serviceEndpointEvents\"\n    responses:\n      \"200\":\n        content:\n          application/json:\n            examples:\n              With body:\n                value:\n                  status: 200\n                  title: OK\n                  description: All resources processed successfully.\n              Empty body:\n                value: {}\n            schema:\n              $ref: '#/components/schemas/Response'\n        description: OK, all resources have been processed successfully. Body can\n          optionally include more information about the response or be empty.\n      \"204\":\n        description: No content, all resources have been processed successfully.\n      \"207\":\n        content:\n          application/json:\n            examples:\n              Some resources failed:\n                value:\n                  status: 207\n                  title: INVALID RESOURCES\n                  description: Some resources have not been processed successfully.\n                    List of failed resources is included.\n                  errors:\n                  - status: 400\n                    resource: custom-endpoint\n                    title: MISSING METADATA KEY\n                    description: The required metadata key was not found in this\n                      resource\n                  - status: 404\n                    resource: example-endpoint\n                    title: NOT FOUND\n                    description: 'Cannot process DELETE event: resource does not\n                      exist.'\n            schema:\n              $ref: '#/components/schemas/Response'\n        description: One or more resources have not been processed successfully.\n          A list of errors is provided.\n      \"404\":\n        description: Not found, most probably the `--adaptor-api` argument in CN-WAN\n          Reader is misconfigured.\n      \"500\":\n        content:\n          application/json:\n            examples:\n              Generic internal server error:\n                value:\n                  status: 500\n                  title: INTERNAL SERVER ERROR\n                  description: An unexpected error occurred while handling the request.\n            schema:\n              $ref: '#/components/schemas/Response'\n        description: Internal Server Error, something went wrong on the adaptor\n          side. A `Response` object *may* be returned, containing a description\n            of why the adaptor had this error and what went wrong.\n      \"503\":\n        content:\n          application/json:\n            examples:\n              Authentication error:\n                value:\n                  status: 503\n                  title: AUTHENTICATION ERROR\n                  description: Request rejected because wrong or invalid credentials\n                    have been provided to the adaptor.\n              Service unavailalbe:\n                value:\n                  status: 503\n                  title: SERVICE UNAVAILABLE\n                  description: Adaptor encountered an unexpected error while trying\n                    to update resources on Service X.\n            schema:\n              $ref: '#/components/schemas/Response'\n        description: Service Unavailable. The returned `Response` object may contain\n          a description of why the service is not available.\n      default:\n        description: Unexpected error\n\ncomponents:\n  schemas:\n    credentials:\n      type: object\n      required:\n        - sdwanControllerIpAddress\n        - user\n        - password\n        - sdwanMergedPolicyName\n      properties:\n        sdwanControllerIpAddress:\n          type: \"string\"\n        user:\n          type: \"string\"\n        password:\n          type: \"string\"\n        sdwanMergedPolicyName:\n          type: \"string\"\n\n    serviceEndpointEvents:\n      type: object\n      required:\n        - event\n        - service\n      properties:\n        event:\n          type: \"string\"\n          enum: [\"create\", \"update\", \"delete\"]\n        service:\n          type: object\n          properties:\n            address:\n              description: The observed IP address of the endpoint. Can be IPv4 or IPv6.\n              example: 131.37.88.10\n              type: string\n            port:\n              description: The observed port of the endpoint.\n              example: 8080\n              type: integer\n\n            metadata:\n              type: array\n              items:\n                type: object\n                required:\n                  - key\n                  - value\n                properties:\n                  key:\n                    type: \"string\"\n                  value:\n                    type: \"string\"\n\n    mapping:\n      type: object\n      required:\n      - metadataKey\n      - metadataValue\n      - policyType\n      - policyName\n      properties:\n        metadataKey:\n          type: \"string\"\n          example: \"traffic-profile\"\n        metadataValue:\n          type: \"string\"\n          example: \"video\"\n        policyType:\n          type: \"string\"\n          enum: [\"AppRoute\", \"Data\"]\n          example: \"AppRoute\"\n        policyName:\n          type: \"string\"\n          example: \"Gold SLA\"\n\n    mappingUpdate:\n      type: object\n      required:\n      - policyType\n      - policyName\n      properties:\n        policyType:\n          type: \"string\"\n          enum: [\"AppRoute\", \"Data\"]\n        policyName:\n          type: \"string\"\n\n    Response:\n\n      allOf:\n      - $ref: '#/components/schemas/ResourceResponse'\n      - $ref: '#/components/schemas/Errors'\n      description: Response returned.\n      type: object\n    ResourceResponse:\n      description: Information about the error occurred with the resource.\n      properties:\n        status:\n          description: The HTTP status code.\n          example: 404\n          type: integer\n        resource:\n          description: The name of the resource that triggered this error.\n          example: customer-endpoint\n          type: string\n        title:\n          description: A short title describing the error.\n          example: NOT FOUND\n          type: string\n        description:\n          description: Additional information about the error.\n          example: The resource does not exist on the server\n          type: string\n      required:\n      - description\n      - title\n      type: object\n    Errors:\n      properties:\n        errors:\n          description: A list of errors occurred, if any.\n          items:\n            $ref: '#/components/schemas/ResourceResponse'\n          type: array\n      type: object\n\nexternalDocs:\n  description: \"Find out more about the CN-WAN Adaptor\"\n  url: \"https://github.com/CloudNativeSDWAN/cnwan-adaptor\"\n",
			"canonicalURL": "/github.com/CloudNativeSDWAN/cnwan-adaptor@728609eb27f5bd6be48aa432943112bd1526b3c0/-/blob/adaptor_server/adaptor_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CloudNativeSDWAN/cnwan-adaptor/blob/728609eb27f5bd6be48aa432943112bd1526b3c0/adaptor_server/adaptor_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}