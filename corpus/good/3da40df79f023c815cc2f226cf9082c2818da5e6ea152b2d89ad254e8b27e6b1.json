{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openreferral/api-specification"
		},
		"file": {
			"name": "openapi-hsda-taxonomy.yaml",
			"size": 0,
			"path": "v2.0/openapi-hsda-taxonomy.yaml",
			"byteSize": 48142,
			"content": "openapi: 3.0.3\ninfo:\n  title: Human Services Data Taxonomy API\n  description: This is a complimentary API to the HSDA API focusing just on taxonomy.\n  termsOfService: 'https://openreferral.org/documentation/'\n  contact:\n    name: Open Referral\n    url: 'https://openreferral.org/'\n    email: info@openreferral.org\n  license:\n    name: Open Data Commons Public Domain\n    url: 'https://creativecommons.org/licenses/by-sa/4.0/'\n  version: v2.0\nservers:\n- url: \"{{ hsda_base_url }}\"\n  variables:\n    basePath:\n      default: \"/v2\"\npaths:\n  /taxonomies/:\n    get:\n      summary: Get Taxonomy\n      description: Get Taxonomy\n      operationId: listTaxonomy\n      parameters:\n      - in: query\n        name: query\n        description: |-\n          A query to filter list by (up to provider to determine what to\n          search)\n        schema:\n          type: string\n      - in: query\n        name: fields\n        description: A list of fields to be returned with the response, if not included,\n          all are returned.\n        schema:\n          type: string\n      - in: query\n        name: page\n        description: The particular page of results.\n        schema:\n          type: number\n      - in: query\n        name: per_page\n        description: Number of records to return per page, up to 100.\n        schema:\n          type: number\n      - in: query\n        name: sort_by\n        description: Which field to sort by.\n        schema:\n          type: string\n      - in: query\n        name: order\n        description: Which order to sort by (asc,desc).\n        schema:\n          type: string\n      - in: query\n        name: format\n        description: |-\n          The data format of the response (csv, json, xml).\n        schema:\n          type: string\n      security:\n        - appid: []\n        - appkey: []\n      responses:\n        '200':\n          description: Item Response\n          headers:\n            X-pagination-page:\n                description: The current page being returned.\n                schema:\n                    type: integer\n            X-pagination-per-page:\n                description: The number of records returned per page.\n                schema:\n                    type: integer\n            X-pagination-total-pages:\n                description: The total number of available pages.\n                schema:\n                    type: integer\n            X-pagination-total-records:\n                description: The the total number of available records.\n                schema:\n                    type: integer\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomies'\n      tags:\n        - Taxonomy\n    post:\n      summary: Add taxonomy\n      description: Addtaxonomy\n      operationId: addTaxonomy\n      requestBody:\n        $ref: '#/components/requestBodies/taxonomy'\n      security:\n        - appid: []\n        - appkey: []\n      responses:\n        '200':\n          description: Taxonomy Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomy'\n        '403':\n          description: No Access Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Taxonomy\n  '/taxonomies/{taxonomy_id}/':\n    get:\n      summary: Get Taxonomy\n      description: Get Taxonomy\n      operationId: getTaxonomy\n      parameters:\n        - in: path\n          required: true\n          name: taxonomy_id\n          description: The taxonomy id.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Taxonomy Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomy'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Taxonomy\n    put:\n      summary: Update Taxonomy\n      description: Update Taxonomy\n      operationId: updateTaxonomy\n      parameters:\n        - in: path\n          required: true\n          name: taxonomy_id\n          description: The unique taxonomy id.\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/taxonomy'\n      security:\n        - appid: []\n        - appkey: []\n      responses:\n        '200':\n          description: Taxonomy Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomy'\n        '403':\n          description: No Access Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Taxonomy\n    delete:\n      summary: Delete Taxonomy\n      description: Delete Taxonomy\n      operationId: deleteTaxonomy\n      parameters:\n        - in: path\n          required: true\n          name: taxonomy_id\n          description: The taxonomy id.\n          schema:\n            type: string\n      tags:\n        - Taxonomy\n      security:\n        - appid: []\n        - appkey: []\n      responses:\n        '200':\n          description: Taxonomy Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomy'\n        '403':\n          description: No Access Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n  '/{taxonomy_name}/services/':\n    get:\n      summary: Get Services by Taxonomy\n      description: Get all the services for a taxonmy term.\n      operationId: listTaxonomyServices\n      parameters:\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n        - in: query\n          name: page\n          description: The particular page of results.\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: per_page\n          description: 'Number of records return per page, up to 100.'\n          schema:\n            type: number\n            default: 25\n        - in: query\n          name: sort_by\n          description: Which field to sort by.\n          schema:\n            type: string\n            default: name\n        - in: query\n          name: order\n          description: 'Which order to sort by (asc,desc).'\n          schema:\n            type: string\n            default: asc\n      responses:\n        '200':\n          description: Service Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/services'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Services\n  '/services/{service_id}/attributes/':\n    get:\n      summary: Get Service Attributes\n      description: Gets all of the attributes for a service.\n      operationId: listServiceAttributes\n      parameters:\n        - in: path\n          required: true\n          name: service_id\n          description: The id of the service.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Service Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomies'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Services\n  '/services/{service_id}/attributes/{taxonomy_name}/':\n    post:\n      summary: Add Taxonomy Keyword to Service\n      description: Associates a specific taxonomy keyword to a service.\n      operationId: addTaxonomyKeywordToService\n      parameters:\n        - in: path\n          required: true\n          name: service_id\n          description: The id of the service.\n          schema:\n            type: string\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Service Response\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Services\n        - Taxonomy\n    delete:\n      summary: Delete Taxonomy Keyword to Service\n      description: Remove a specific taxonomy keyword from a service.\n      operationId: deleteTaxonomyKeywordFromService\n      parameters:\n        - in: path\n          required: true\n          name: service_id\n          description: The id of the service.\n          schema:\n            type: string\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Service Response\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Services\n        - Taxonomy\n  '/{taxonomy_name}/organizations/':\n    get:\n      summary: Get Organizations by Taxonomy\n      description: Get all the organizations for a taxonmy term.\n      operationId: listTaxonomyOrganizations\n      parameters:\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n        - in: query\n          name: page\n          description: The particular page of results.\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: per_page\n          description: 'Number of records return per page, up to 100.'\n          schema:\n            type: number\n            default: 25\n        - in: query\n          name: sort_by\n          description: Which field to sort by.\n          schema:\n            type: string\n            default: name\n        - in: query\n          name: order\n          description: 'Which order to sort by (asc,desc).'\n          schema:\n            type: string\n            default: asc\n      responses:\n        '200':\n          description: Service Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organizations'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Organizations\n  '/organizations/{organization_id}/attributes/':\n    get:\n      summary: Get Service Attributes\n      description: Gets all of the attributes for a service.\n      operationId: listOrganizationAttributes\n      parameters:\n        - in: path\n          required: true\n          name: organization_id\n          description: The id of the organization.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Service Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomies'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Organizations\n  '/organizations/{organization_id}/attributes/{taxonomy_name}/':\n    post:\n      summary: Add Taxonomy Keyword to Service\n      description: Associates a specific taxonomy keyword to a service.\n      operationId: addTaxonomyKeywordToOrganization\n      parameters:\n        - in: path\n          required: true\n          name: organization_id\n          description: The id of the organization.\n          schema:\n            type: string\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Service Response\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Organizations\n        - Taxonomy\n    delete:\n      summary: Delete Taxonomy Keyword to Service\n      description: Remove a specific taxonomy keyword from a service.\n      operationId: deleteTaxonomyKeywordFromOrganization\n      parameters:\n        - in: path\n          required: true\n          name: organization_id\n          description: The id of the organization.\n          schema:\n            type: string\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Service Response\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Organizations\n        - Taxonomy\n  '/{taxonomy_name}/locations/':\n    get:\n      summary: Get Locations by Taxonomy\n      description: Get all the locations for a taxonmy term.\n      operationId: listTaxonomyLocations\n      parameters:\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n        - in: query\n          name: page\n          description: The particular page of results.\n          schema:\n            type: number\n            default: 0\n        - in: query\n          name: per_page\n          description: 'Number of records return per page, up to 100.'\n          schema:\n            type: number\n            default: 25\n        - in: query\n          name: sort_by\n          description: Which field to sort by.\n          schema:\n            type: string\n            default: name\n        - in: query\n          name: order\n          description: 'Which order to sort by (asc,desc).'\n          schema:\n            type: string\n            default: asc\n      responses:\n        '200':\n          description: Service Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/locations'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Locations\n  '/locations/{location_id}/attributes/':\n    get:\n      summary: Get Service Attributes\n      description: Gets all of the attributes for a service.\n      operationId: listLocationsAttributes\n      parameters:\n        - in: path\n          required: true\n          name: location_id\n          description: The id of the location.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Service Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomies'\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Locations\n  '/locations/{location_id}/attributes/{taxonomy_name}/':\n    post:\n      summary: Add Taxonomy Keyword to Service\n      description: Associates a specific taxonomy keyword to a service.\n      operationId: addTaxonomyKeywordToLocation\n      parameters:\n        - in: path\n          required: true\n          name: location_id\n          description: The id of the location.\n          schema:\n            type: string\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Service Response\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Locations\n        - Taxonomy\n    delete:\n      summary: Delete Taxonomy Keyword to Service\n      description: Remove a specific taxonomy keyword from a service.\n      operationId: deleteTaxonomyKeywordFromLocation\n      parameters:\n        - in: path\n          required: true\n          name: location_id\n          description: The id of the location.\n          schema:\n            type: string\n        - in: path\n          required: true\n          name: taxonomy_name\n          description: The taxonomy name.\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Service Response\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/problems'\n      tags:\n        - Locations\n        - Taxonomy\ncomponents:\n  requestBodies:\n    taxonomy:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/taxonomy'\n  securitySchemes:\n    appid:\n      type: apiKey\n      in: header\n      name: x-appid\n    appkey:\n      type: apiKey\n      in: header\n      name: x-appkey\n  schemas:\n    taxonomies:\n      type: array\n      items:\n        $ref: '#/components/schemas/taxonomy'\n    taxonomy:\n      properties:\n        id:\n          description: 'Each taxonomy term must have a unique identifier, within the scope of the dataset'\n          type: string\n        term:\n          description: The taxonomy term itself.\n          type: string\n        description:\n          description: What the term means.\n          type: string\n        parent_id:\n          description: 'If this is a child term in a hierarchical taxonomy, give the identifier of the parent category. For top-level categories, this should be left blank.'\n          type: string\n        taxonomy:\n          description: 'If this is an established taxonomy, detail which taxonomy is in use. For example, AIRS or Open Eligibility. If possible, provide a URI.'\n          type: string\n        language:\n          description: 'An ISO 639-1, or ISO 639-2 [language code](available at http://www.loc.gov/standards/iso639-2/php/code_list.php) to represent the language of the term. The three-letter codes from ISO 639-2 provide greater accuracy when describing variants of languages, which may be relevant to particular communities.'\n          type: string\n      required:\n        - id\n        - name\n        - description\n    contacts:\n      type: array\n      items:\n        $ref: '#/components/schemas/contact'\n    paymentAccepted:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        service_id:\n          type: string\n          description: The identifier of the services for which the entry describes the accepted payment methods\n        payment:\n          type: string\n          description: The methods of payment accepted for the service\n      description: The payment_accepted table contains details of the methods of payment that can be used in order to pay for services\n    phones:\n      type: array\n      items:\n        $ref: '#/components/schemas/phone'\n    schedules:\n      type: array\n      items:\n        $ref: '#/components/schemas/schedule'\n    eligibility:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        service_id:\n          type: string\n          description: The identifier of the service for which this entry describes the eligibility criteria\n      description: The eligibility tables contains details of the eligibility criteria for particular services\n    language:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each language must have a unique identifier\n        service_id:\n          type: string\n          description: The identifier of the service for which the entry describes the languages in which services are delivered\n        location_id:\n          type: string\n          description: The identifier of the location for which the entry describes the languages in which services are delivered\n        language:\n          type: string\n          description: 'Languages, other than English, in which the service is delivered. Languages are listed as ISO639-1 codes.'\n      description: The language table contains details of the languages that are spoken at locations or services. This does not include languages which can only be used with interpretation.\n    eligibilities:\n      type: array\n      items:\n        $ref: '#/components/schemas/eligibility'\n    program:\n      required:\n        - id\n        - name\n        - organization_id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each program must have a unique identifier.\n        organization_id:\n          type: string\n          description: Each program must belong to a single organization. The identifier of the organization should be given here.\n        name:\n          type: string\n          description: The name of the program\n        alternate_name:\n          type: string\n          description: An alternative name for the program\n      description: Some organizations organise their services into programs. A program brings together a number of related services.\n    postalAddresses:\n      type: array\n      items:\n        $ref: '#/components/schemas/postalAddress'\n    problem:\n      required:\n        - detail\n        - status\n        - title\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: 'A URI reference [RFC3986] that identifies the problem type.  This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be  about:blank .'\n        title:\n          type: string\n          description: 'A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4)'''\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of the problem.\n        status:\n          type: string\n          description: 'The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.'\n      description: The meta_table_description table contains metadata about individual tables.\n    fundings:\n      type: array\n      items:\n        $ref: '#/components/schemas/funding'\n    accessibilityForDisabilities:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        location_id:\n          type: string\n          description: The identifier of the location for which the entry describes the accessibility provision\n        accessibility:\n          type: string\n          description: Description of assistance or infrastructure that facilitate access to clients with disabilities.\n        details:\n          type: string\n          description: Any further details relating to the relevant accessibility arrangements at this location. E.g. whether advance notice is required to use an accessibility facility.\n      description: The accessibility_for_disabilities table contains details of the arrangements for access to locations for people who have disabilities\n    contact:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each contact must have a unique identifier\n        organization_id:\n          type: string\n          description: The identifier of the organization for which this is a contact\n        service_id:\n          type: string\n          description: The identifier of the service for which this is a contact\n        service_at_location_id:\n          type: string\n          description: 'The identifier of the ''service at location'' table entry, when this contact is specific to a service in a particular location.'\n        name:\n          type: string\n          description: The name of the person\n        title:\n          type: string\n          description: The job title of the person\n        department:\n          type: string\n          description: The department that the person is part of\n        email:\n          type: string\n          description: The email address of the person\n      description: 'The contact table contains details of the named contacts for services and organizations. Note that in the HSDS data package format, if an individual is the contact for multiple services, their details may be duplicated multiple times in this table, each time with a new identifier, and with the rows containing different service ids.'\n    physicalAddresses:\n      type: array\n      items:\n        $ref: '#/components/schemas/physicalAddress'\n    physicalAddress:\n      required:\n        - address_1\n        - city\n        - country\n        - id\n        - postal_code\n        - state_province\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each physical address must have a unique identifier.\n        location_id:\n          type: string\n          description: The identifier of the location for which this is the address.\n        attention:\n          type: string\n          description: The person or entity whose attention should be sought at the location (Often included as 'care of' component of an address.)\n        address_1:\n          type: string\n          description: 'The first line(s) of the address, including office, building number and street.'\n        address_2:\n          type: string\n          description: '(Deprecated) A second (additional) line of address information. (This field is deprecated: we recommend including all address information before ''city'' as a comma or newline separated list in address_1. There is no guarantee that systems will read this line of address information.)'\n        address_3:\n          type: string\n          description: '(Deprecated) A third (additional) line of address information. (This field is deprecated: we recommend including all address information before ''city'' as a comma or newline separated list in address_1. There is no guarantee that systems will read this line of address information.)'\n        address_4:\n          type: string\n          description: '(Deprecated) The fourth (additional) line of address information. (This field is deprecated: we recommend including all address information before ''city'' as a comma or newline separated list in address_1. There is no guarantee that systems will read this line of address information.)'\n        city:\n          type: string\n          description: The city in which the address is located.\n        region:\n          type: string\n          description: The region in which the address is located (optional).\n        state_province:\n          type: string\n          description: The state or province in which the address is located.\n        postal_code:\n          type: string\n          description: The postal code for the address.\n        country:\n          type: string\n          description: The country in which the address is located. This should be given as an ISO 3361-1 country code (two letter abbreviation).\n      description: The addresses table contains the physical addresses for locations\n    programs:\n      type: array\n      items:\n        $ref: '#/components/schemas/program'\n    locations:\n      type: array\n      items:\n        $ref: '#/components/schemas/location'\n    organizations:\n      type: array\n      items:\n        $ref: '#/components/schemas/organization'\n    paymentsAccepted:\n      type: array\n      items:\n        $ref: '#/components/schemas/paymentAccepted'\n    funding:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        organization_id:\n          type: string\n          description: The identifier of the organization in receipt of this funding.\n        service_id:\n          type: string\n          description: The identifier of the service in receipt of this funding\n        source:\n          type: string\n          description: A free text description of the source of funds for this organization or service.\n      description: The funding table describes the sources of funding for a service or organisation\n    serviceArea:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each service area must have a unique identifier\n        service_id:\n          type: string\n          description: The identifier of the service for which this entry describes the service area\n        service_area:\n          type: string\n          description: 'The geographic area where a service is available. This is a free-text description, and so may be precise or indefinite as necessary.'\n        description:\n          type: string\n          description: A more detailed description of this service area. Used to provide any additional information that cannot be communicated using the structured area and geometry fields.\n      description: The service_area table contains details of the geographic area for which a service is available.\n    accessibilitiesForDisabilities:\n      type: array\n      items:\n        $ref: '#/components/schemas/accessibilityForDisabilities'\n    serviceAreas:\n      type: array\n      items:\n        $ref: '#/components/schemas/serviceArea'\n    schedule:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        service_id:\n          type: string\n          description: The identifier of the service for which this is the regular schedule\n        location_id:\n          type: string\n          description: The identifier of the location for which this is the regular schedule\n        service_at_location_id:\n          type: string\n          description: 'The identifier of the ''service at location'' table entry, when this schedule is specific to a service in a particular location.'\n        valid_from:\n          type: string\n          description: The date from which the schedule information is valid.\n          format: date\n        valid_to:\n          type: string\n          description: The last date on which the schedule information is valid.\n          format: date\n        dtstart:\n          type: string\n          description: 'iCal - The date of the first event is the schedule. Necessary when using the ''interval'' feature, optional otherwise.'\n          format: date\n        timezone:\n          type: number\n          description: 'The timezone that all dates are expressed as, expressed as a UTC offset. Dates are assumed to be UTC otherwise.'\n        until:\n          type: string\n          description: iCal - The date of the last occurence of the recurring event.\n          format: date\n        count:\n          type: string\n          description: 'iCal - The number of times that the event occurs. Use this instead of ''until'', if appropriate.'\n          format: date\n        wkst:\n          type: string\n          description: 'iCal - The day on which the week starts, eg MO.'\n          format: date\n        freq:\n          type: string\n          description: iCal - How often the frequency repeats. E.g. Frequency use one of WEEKLY or MONTHLY.\n        interval:\n          type: number\n          description: iCal - How often the frequency repeats. E.g. Interval 2 for Frequency WEEKLY gives Fortnightly\n        byday:\n          type: string\n          description: 'iCal - Comma seperated days of the week. E.g. SU,MO,TU,WE,TH,FR,SA. Where freq is MONTHLY each part can be preceded by a positive or negative integer to represent which occurrence in a month; e.g. 2MO is the second Monday in a month. -1FR is the last Friday'\n        byweekno:\n          type: string\n          description: iCal - Comma seperated numeric weeks of the year if freq is WEEKLY. Can be negative to represent weeks before the end of the year; e.g. -5 is the 5th to last week in a year.\n        bymonthday:\n          type: number\n          description: iCal - Comma separated numeric days of the month if frequency is MONTHLY. Can be negative to represent days before the end of the month; e.g. -5 is the 5th to last day in a month.\n        byyearday:\n          type: number\n          description: iCal - Comma separated numeric days of the month if frequency is YEARLY. Can be negative to represent days before the end of the year; e.g. -1 is the last day in a year.\n        description:\n          type: string\n          description: Human readable description of the availability of the service.\n        opens_at:\n          type: string\n          description: 'The time when a service or location opens. This should use HH:MM format and should include timezone information, either adding the suffix ''Z'' when the date is in UTC, or including an offset from UTC (e.g. 09:00-05:00 for 9am EST.)'\n          format: time\n        closes_at:\n          type: string\n          description: 'The time when a service or location closes. This should use HH:MM format and should include timezone information, either adding the suffix ''Z'' when the date is in UTC, or including an offset from UTC (e.g. 09:00-05:00 for 9am EST.)'\n          format: time\n      description: The schedule table contains details of when a service or location is open. Entries are RFC 5545 RRULES.\n    languages:\n      type: array\n      items:\n        $ref: '#/components/schemas/language'\n    postalAddress:\n      required:\n        - address_1\n        - city\n        - country\n        - id\n        - postal_code\n        - state_province\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each postal address must have a unique identifier\n        location_id:\n          type: string\n          description: The identifier of the location for which this is the postal address.\n        attention:\n          type: string\n          description: The person or entity whose attention should be sought at the location (Often included as 'care of' component of an address.)\n        address_1:\n          type: string\n          description: 'The first line(s) of the address, including office, building number and street.'\n        address_2:\n          type: string\n          description: '(Deprecated) A second (additional) line of address information. (This field is deprecated: we recommend including all address information before ''city'' as a comma or newline separated list in address_1. There is no guarantee that systems will read this line of address information.)'\n        address_3:\n          type: string\n          description: '(Deprecated) A third (additional) line of address information. (This field is deprecated: we recommend including all address information before ''city'' as a comma or newline separated list in address_1. There is no guarantee that systems will read this line of address information.)'\n        address_4:\n          type: string\n          description: '(Deprecated) The fourth (additional) line of address information. (This field is deprecated: we recommend including all address information before ''city'' as a comma or newline separated list in address_1. There is no guarantee that systems will read this line of address information.)'\n        city:\n          type: string\n          description: The city in which the address is located.\n        region:\n          type: string\n          description: The region in which the address is located (optional).\n        state_province:\n          type: string\n          description: The state or province in which the address is located.\n        postal_code:\n          type: string\n          description: The postal code for the address.\n        country:\n          type: string\n          description: The country in which the address is located. This should be given as an ISO 3361-1 country code (two letter abbreviation)\n      description: The postalAddress table contains the postal addresses for mail to a certain location. This may differ from the physical location.\n    requiredDocuments:\n      type: array\n      items:\n        $ref: '#/components/schemas/requiredDocument'\n    requiredDocument:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each document must have a unique identifier\n        service_id:\n          type: string\n          description: The identifier of the service for which this entry describes the required document\n        document:\n          type: string\n          description: 'The document required to apply for or receive the service. e.g. ''Government-issued ID'', ''EU Passport'''\n      description: The required_document table contains details of any documents that are required in order to access or use services.\n    phone:\n      required:\n        - id\n        - number\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        location_id:\n          type: string\n          description: The identifier of the location where this phone number is located\n        service_id:\n          type: string\n          description: The identifier of the service for which this is the phone number\n        organization_id:\n          type: string\n          description: The identifier of the organisation for which this is the phone number\n        contact_id:\n          type: string\n          description: The identifier of the contact for which this is the phone number\n        service_at_location_id:\n          type: string\n          description: 'The identifier of the ''service at location'' table entry, when this phone number is specific to a service in a particular location.'\n        number:\n          type: string\n          description: The phone number\n        extension:\n          type: number\n          description: The extension of the phone number\n        type:\n          type: string\n          description: 'Indicates the type of phone service, drawing from the RFC6350 list of types (text (for SMS), voice, fax, cell, video, pager, textphone).'\n        language:\n          type: string\n          description: 'A comma separated list of ISO 639-1, or ISO 639-2 [language codes](available at http://www.loc.gov/standards/iso639-2/php/code_list.php) to represent the languages available from this phone service. The three-letter codes from ISO 639-2 provide greater accuracy when describing variants of languages, which may be relevant to particular communities.'\n        description:\n          type: string\n          description: 'A description providing extra information about the phone service (e.g. any special arrangements for accessing, or details of availability at particular times.'\n        department:\n          type: string\n          description: (Deprecated) The department for which this is the phone number. This field is deprecated and will be removed in a future version of HSDS.\n      description: 'The phone table contains details of the telephone numbers are used to contact organizations, services, and locations.'\n    service:\n      required:\n        - id\n        - name\n        - organization_id\n        - status\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each service must have a unique identifier.\n        organization_id:\n          type: string\n          description: The identifier of the organization that provides this service.\n        program_id:\n          type: string\n          description: The identifier of the program this service is delivered under.\n        name:\n          type: string\n          description: The official or public name of the service.\n        alternate_name:\n          type: string\n          description: Alternative or commonly used name for a service.\n        description:\n          type: string\n          description: A description of the service.\n        url:\n          type: string\n          description: URL of the service\n        email:\n          type: string\n          description: Email address for the service\n        status:\n          type: string\n          description: The current status of the service.\n        interpretation_services:\n          type: string\n          description: A description of any interpretation services available for accessing this service.\n        application_process:\n          type: string\n          description: The steps needed to access the service.\n        wait_time:\n          type: string\n          description: Time a client may expect to wait before receiving a service.\n        fees:\n          type: string\n          description: Details of any charges for service users to access this service.\n        accreditations:\n          type: string\n          description: Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\n        licenses:\n          type: string\n          description: An organization may have a license issued by a government entity to operate legally. A list of any such licenses can be provided here.\n      description: Services are provided by organizations to a range of different groups. Details on where each service is delivered are contained in the services_at_location table.\n    organization:\n      required:\n        - description\n        - id\n        - name\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each organization must have a unique identifier.\n        name:\n          type: string\n          description: The official or public name of the organization.\n        alternate_name:\n          type: string\n          description: Alternative or commonly used name for the organization.\n        description:\n          type: string\n          description: A brief summary about the organization. It can contain markup such as HTML or Markdown.\n        email:\n          type: string\n          description: The contact e-mail address for the organization.\n        url:\n          type: string\n          description: The URL (website address) of the organization.\n        tax_status:\n          type: string\n          description: Government assigned tax designation for tax-exempt organizations.\n        tax_id:\n          type: string\n          description: A government issued identifier used for the purpose of tax administration.\n        year_incorporated:\n          type: string\n          description: The year in which the organization was legally formed.\n          format: date\n        legal_status:\n          type: string\n          description: 'The legal status defines the conditions that an organization is operating under; e.g. non-profit, private corporation or a government organization.'\n      description: The organization record is used to provide basic description and details about each organization delivering services. Each service should be linked to the organization responsible for its delivery. One organization may deliver many services.\n    services:\n      type: array\n      items:\n        $ref: '#/components/schemas/service'\n    location:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Each location must have a unique identifier\n        organization_id:\n          type: string\n          description: Each location entry should be linked to a single organization. This is the organization that is responsible for maintaining information about this location. The identifier of the organization should be given here. Details of the services the organisation delivers at this location should be provided in the services_at_location table.\n        name:\n          type: string\n          description: The name of the location\n        alternate_name:\n          type: string\n          description: An alternative name for the location\n        description:\n          type: string\n          description: A description of this location.\n        transportation:\n          type: string\n          description: A description of the access to public or private transportation to and from the location.\n        latitude:\n          type: number\n          description: Y coordinate of location expressed in decimal degrees in WGS84 datum.\n        longitude:\n          type: number\n          description: X coordinate of location expressed in decimal degrees in WGS84 datum.\n      description: 'The location tables provides details of the locations where organizations operate. Locations may be virtual, and one organization may have many locations.'\n    problems:\n      type: array\n      items:\n        $ref: '#/components/schemas/problem'\n",
			"canonicalURL": "/github.com/openreferral/api-specification@38d42f29aa1779db44257c0276ba07579f203641/-/blob/v2.0/openapi-hsda-taxonomy.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openreferral/api-specification/blob/38d42f29aa1779db44257c0276ba07579f203641/v2.0/openapi-hsda-taxonomy.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}