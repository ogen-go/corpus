{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/smilofoundation/go-smilo"
		},
		"file": {
			"name": "swagger_v2.yml",
			"size": 0,
			"path": "vendor/github.com/influxdata/platform/chronograf/server/swagger_v2.yml",
			"byteSize": 18032,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Chronograf\n  version: 1.5.0.0\nservers:\n  - url: /chronograf/v2\npaths:\n  /cells:\n    post:\n      tags:\n        - Cells\n      summary: Create a cell\n      requestBody:\n          description: cell to create\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Cell\"\n      responses:\n        '201':\n          description: Added cell\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Cell\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      tags:\n        - Cells\n      summary: Get all cells\n      responses:\n        '200':\n          description: all cells\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Cells\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  '/cells/{cellID}':\n   get:\n    tags:\n      - Cells\n    summary: Get a single Cell\n    parameters:\n        - in: path\n          name: cellID\n          schema:\n            type: string\n          required: true\n          description: ID of cell to update\n    responses:\n        '200':\n          description: get a single cell\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Cell\"\n        '404':\n          description: cell not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n   patch:\n      tags:\n        - Cells\n      summary: Update a single cell\n      requestBody:\n          description: patching of a cell\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Cell\"\n      parameters:\n        - in: path\n          name: cellID\n          schema:\n            type: string\n          required: true\n          description: ID of cell to update\n      responses:\n        '200':\n          description: Updated cell\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Cell\"\n        '404':\n          description: cell not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n   delete:\n      tags:\n        - Cells\n      summary: Delete a cell\n      parameters:\n        - in: path\n          name: cellID\n          schema:\n            type: string\n          required: true\n          description: ID of cell to update\n      responses:\n        '204':\n          description: delete has been accepted\n        '404':\n          description: cell not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /dashboards:\n    post:\n      tags:\n        - Dashboards\n      summary: Create a dashboard\n      requestBody:\n          description: dashboard to create\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dashboard\"\n      responses:\n        '201':\n          description: Added dashboard\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dashboard\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      tags:\n        - Dashboards\n      summary: Get all dashboards\n      responses:\n        '200':\n          description: all dashboards\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dashboards\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  '/dashboards/{dashboardID}':\n   get:\n    tags:\n      - Dashboards\n    summary: Get a single Dashboard\n    parameters:\n        - in: path\n          name: dashboardID\n          schema:\n            type: string\n          required: true\n          description: ID of dashboard to update\n    responses:\n        '200':\n          description: get a single dashboard\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dashboard\"\n        '404':\n          description: dashboard not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n   patch:\n      tags:\n        - Dashboards\n      summary: Update a single dashboard\n      requestBody:\n          description: patching of a dashboard\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dashboard\"\n      parameters:\n        - in: path\n          name: dashboardID\n          schema:\n            type: string\n          required: true\n          description: ID of dashboard to update\n      responses:\n        '200':\n          description: Updated dashboard\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dashboard\"\n        '404':\n          description: dashboard not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n   delete:\n      tags:\n        - Dashboards\n      summary: Delete a dashboard\n      parameters:\n        - in: path\n          name: dashboardID\n          schema:\n            type: string\n          required: true\n          description: ID of dashboard to update\n      responses:\n        '204':\n          description: delete has been accepted\n        '404':\n          description: dashboard not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Link:\n      type: object\n      readOnly: true\n      description: URI of resource.\n      properties:\n        href:\n          type: string\n          format: url\n      required: [href]\n    Links:\n      type: object\n      readOnly: true\n      properties:\n        self:\n          $ref: \"#/components/schemas/Link\"\n      required: [self]\n    Field:\n      type: object\n      properties:\n        value:\n          description: \u003e-\n            value is the value of the field.  Meaning of the value is implied by\n            the `type` key\n          type: string\n        type:\n          description: \u003e-\n            type describes the field type. func is a function; field is a field\n            reference\n          type: string\n          enum:\n            - func\n            - field\n            - integer\n            - number\n            - regex\n            - wildcard\n        alias:\n          description: \u003e-\n            Alias overrides the field name in the returned response.  Applies only\n            if type is `func`\n          type: string\n        args:\n          description: Args are the arguments to the function\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n    QueryConfig:\n      type: object\n      required:\n        - database\n        - measurement\n        - retentionPolicy\n        - areTagsAccepted\n        - tags\n        - groupBy\n        - fields\n      properties:\n        id:\n          type: string\n        database:\n          type: string\n        measurement:\n          type: string\n        retentionPolicy:\n          type: string\n        areTagsAccepted:\n          type: boolean\n        rawText:\n          type: string\n        tags:\n          type: object\n        groupBy:\n          type: object\n          properties:\n            time:\n              type: string\n            tags:\n              type: array\n              items:\n                type: string\n          required:\n            - time\n            - tags\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n        range:\n          type: object\n          properties:\n            lower:\n              type: string\n            upper:\n              type: string\n          required:\n            - lower\n            - upper\n    DashboardQuery:\n      type: object\n      required:\n        - query\n      properties:\n        label:\n          type: string\n          description: Optional Y-axis user-facing label\n        range:\n          description: Optional default range of the Y-axis\n          type: object\n          required:\n            - upper\n            - lower\n          properties:\n            upper:\n              description: Upper bound of the display range of the Y-axis\n              type: integer\n              format: int64\n            lower:\n              description: Lower bound of the display range of the Y-axis\n              type: integer\n              format: int64\n        query:\n          type: string\n        source:\n          type: string\n          format: url\n          description: Optional URI for data source for this query\n        queryConfig:\n          $ref: '#/components/schemas/QueryConfig'\n    Axis:\n      type: object\n      description: A description of a particular axis for a visualization\n      properties:\n        bounds:\n          type: array\n          minItems: 0\n          maxItems: 2\n          description: \u003e-\n            The extents of an axis in the form [lower, upper]. Clients determine\n            whether bounds are to be inclusive or exclusive of their limits\n          items:\n            type: integer\n            format: int64\n        label:\n          description: label is a description of this Axis\n          type: string\n        prefix:\n          description: Prefix represents a label prefix for formatting axis values.\n          type: string\n        suffix:\n          description: Suffix represents a label suffix for formatting axis values.\n          type: string\n        base:\n          description: Base represents the radix for formatting axis values.\n          type: string\n        scale:\n          description: 'Scale is the axis formatting scale. Supported: \"log\", \"linear\"'\n          type: string\n    DashboardColor:\n      type: object\n      description: Color defines an encoding of data value into color space\n      properties:\n        id:\n          description: ID is the unique id of the cell color\n          type: string\n        type:\n          description: Type is how the color is used.\n          type: string\n          enum:\n            - min\n            - max\n            - threshold\n        hex:\n          description: Hex is the hex number of the color\n          type: string\n          maxLength: 7\n          minLength: 7\n        name:\n          description: Name is the user-facing name of the hex color\n          type: string\n        value:\n          description: Value is the data value mapped to this color\n          type: string\n    RenamableField:\n      description: Describes a field that can be renamed and made visible or invisible\n      type: object\n      properties:\n        internalName:\n          description: This is the calculated name of a field\n          readOnly: true\n          type: string\n        displayName:\n          description: This is the name that a field is renamed to by the user\n          type: string\n        visible:\n          description: Indicates whether this field should be visible on the table\n          type: boolean\n    V1Visualization:\n      properties:\n        type:\n          type: string\n          enum: [\"chronograf-v1\"]\n        queries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DashboardQuery\"\n        axes:\n          description: The viewport for a Cell's visualizations\n          type: object\n          properties:\n            x:\n              $ref: '#/components/schemas/Axis'\n            y:\n              $ref: '#/components/schemas/Axis'\n            y2:\n              $ref: '#/components/schemas/Axis'\n        graphType:\n          description: The viewport for a cell's graph/visualization\n          type: string\n          enum:\n            - single-stat\n            - line\n            - line-plus-single-stat\n            - line-stacked\n            - line-stepplot\n            - bar\n            - gauge\n            - table\n          default: line\n        colors:\n          description: Colors define color encoding of data into a visualization\n          type: array\n          items:\n            $ref: \"#/components/schemas/DashboardColor\"\n        legend:\n          description: Legend define encoding of data into a cell's legend\n          type: object\n          properties:\n            type:\n              description: type is the style of the legend\n              type: string\n              enum:\n                - static\n            orientation:\n              description: \u003e-\n                orientation is the location of the legend with respect to the cell\n                graph\n              type: string\n              enum:\n                - top\n                - bottom\n                - left\n                - right\n        tableOptions:\n          properties:\n            verticalTimeAxis:\n              description: \u003e-\n                verticalTimeAxis describes the orientation of the table by\n                indicating whether the time axis will be displayed vertically\n              type: boolean\n            sortBy:\n              $ref: \"#/components/schemas/RenamableField\"\n            wrapping:\n              description: wrapping describes the text wrapping style to be used in table cells\n              type: string\n              enum:\n                - truncate\n                - wrap\n                - single-line\n            fixFirstColumn:\n              description: \u003e-\n                fixFirstColumn indicates whether the first column of the table\n                should be locked\n              type: boolean\n        fieldOptions:\n          description: \u003e-\n            fieldOptions represent the fields retrieved by the query with\n            customization options\n          type: array\n          items:\n            $ref: '#/components/schemas/RenamableField'\n        timeFormat:\n          description: \u003e-\n            timeFormat describes the display format for time values according to\n            moment.js date formatting\n          type: string\n        decimalPoints:\n          description: \u003e-\n            decimal points indicates whether and how many digits to show after\n            decimal point\n          type: object\n          properties:\n            isEnforced:\n              description: Indicates whether decimal point setting should be enforced\n              type: boolean\n            digits:\n              description: The number of digists after decimal to display\n              type: integer\n    EmptyVisualization:\n      properties:\n        type:\n          type: string\n          enum: [\"empty\"]\n    Cell:\n      properties:\n        links:\n          $ref: \"#/components/schemas/Links\"\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        visualization:\n          oneOf:\n            - $ref: \"#/components/schemas/V1Visualization\"\n            - $ref: \"#/components/schemas/EmptyVisualization\"\n    Cells:\n      type: object\n      properties:\n        links:\n          $ref: \"#/components/schemas/Links\"\n        cells:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Cell\"\n    DashboardCell:\n      type: object\n      properties:\n        x:\n          type: integer\n          format: int32\n        y:\n          type: integer\n          format: int32\n        w:\n          type: integer\n          format: int32\n        h:\n          type: integer\n          format: int32\n        ref:\n          type: string\n          description: The reference to a cell from the cells API\n    Dashboard:\n      properties:\n        links:\n          $ref: \"#/components/schemas/Links\"\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        cells:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DashboardCell\"\n    Dashboards:\n      type: object\n      properties:\n        links:\n          $ref: \"#/components/schemas/Links\"\n        dashboards:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Dashboards\"\n    Error:\n      properties:\n        code:\n          readOnly: true\n          type: integer\n          format: int32\n        message:\n          readOnly: true\n          type: string\n      required: [code, message]\n",
			"canonicalURL": "/github.com/smilofoundation/go-smilo@5cf8a823a2a3bb32a03b45fa812f8ca801d16be7/-/blob/vendor/github.com/influxdata/platform/chronograf/server/swagger_v2.yml",
			"externalURLs": [
				{
					"url": "https://github.com/smilofoundation/go-smilo/blob/5cf8a823a2a3bb32a03b45fa812f8ca801d16be7/vendor/github.com/influxdata/platform/chronograf/server/swagger_v2.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}