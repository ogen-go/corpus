{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aeraki-mesh/aeraki"
		},
		"file": {
			"name": "redisdestination.gen.json",
			"size": 0,
			"path": "api/redis/v1alpha1/redisdestination.gen.json",
			"byteSize": 5985,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Configuration affecting auth , discovery_endpoints etc.\",\n    \"version\": \"v1alpha1\"\n  },\n  \"components\": {\n    \"schemas\": {\n      \"redis.aeraki.io.v1alpha1.TrafficPolicy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"connectionPool\": {\n            \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.ConnectionPoolSettings\"\n          }\n        }\n      },\n      \"redis.aeraki.io.v1alpha1.ConnectionPoolSettings\": {\n        \"description\": \"Connection pool settings for an upstream host. The settings apply to each individual host in the upstream service.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"tcp\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings\"\n          },\n          \"redis\": {\n            \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.RedisSettings\"\n          }\n        }\n      },\n      \"redis.aeraki.io.v1alpha1.RedisDestination\": {\n        \"description\": \"RedisDestination defines policies that apply to redis traffic intended for a redis service\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"host\": {\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"trafficPolicy\": {\n            \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.TrafficPolicy\"\n          }\n        }\n      },\n      \"redis.aeraki.io.v1alpha1.RedisSettings\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mode\": {\n            \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.RedisSettings.Mode\"\n          },\n          \"auth\": {\n            \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.Auth\"\n          },\n          \"discoveryEndpoints\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          }\n        }\n      },\n      \"redis.aeraki.io.v1alpha1.Auth\": {\n        \"description\": \"Auth provide a way to get redis auth token.\",\n        \"type\": \"object\",\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"secret\"\n                  ],\n                  \"properties\": {\n                    \"secret\": {\n                      \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.SecretReference\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"plain\"\n                  ],\n                  \"properties\": {\n                    \"plain\": {\n                      \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.PlainAuth\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"secret\"\n            ],\n            \"properties\": {\n              \"secret\": {\n                \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.SecretReference\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"plain\"\n            ],\n            \"properties\": {\n              \"plain\": {\n                \"$ref\": \"#/components/schemas/redis.aeraki.io.v1alpha1.PlainAuth\"\n              }\n            }\n          }\n        ]\n      },\n      \"redis.aeraki.io.v1alpha1.SecretReference\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"passwordField\": {\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"usernameField\": {\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"redis.aeraki.io.v1alpha1.PlainAuth\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"redis.aeraki.io.v1alpha1.RedisSettings.Mode\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"PROXY\",\n          \"CLUSTER\"\n        ]\n      },\n      \"istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"maxConnections\": {\n            \"description\": \"Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"connectTimeout\": {\n            \"description\": \"TCP connection timeout. format: 1h/1m/1s/1ms. MUST BE \\u003e=1ms. Default is 10s.\",\n            \"type\": \"string\"\n          },\n          \"tcpKeepalive\": {\n            \"$ref\": \"#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive\"\n          }\n        }\n      },\n      \"istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive\": {\n        \"description\": \"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"time\": {\n            \"description\": \"The time duration a connection needs to be idle before keep-alive probes start being sent. Default is to use the OS level configuration (unless overridden, Linux defaults to 7200s (ie 2 hours.)\",\n            \"type\": \"string\"\n          },\n          \"probes\": {\n            \"description\": \"Maximum number of keepalive probes to send without response before deciding the connection is dead. Default is to use the OS level configuration (unless overridden, Linux defaults to 9.)\",\n            \"type\": \"integer\"\n          },\n          \"interval\": {\n            \"description\": \"The time duration between keep-alive probes. Default is to use the OS level configuration (unless overridden, Linux defaults to 75s.)\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/aeraki-mesh/aeraki@21ed76d677469b0db1131e25bf657d8e5a896c72/-/blob/api/redis/v1alpha1/redisdestination.gen.json",
			"externalURLs": [
				{
					"url": "https://github.com/aeraki-mesh/aeraki/blob/21ed76d677469b0db1131e25bf657d8e5a896c72/api/redis/v1alpha1/redisdestination.gen.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}