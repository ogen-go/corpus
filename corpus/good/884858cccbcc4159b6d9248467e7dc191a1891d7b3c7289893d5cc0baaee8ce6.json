{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HAECHI-LABS/henesis-wallet-sdk"
		},
		"file": {
			"name": "swagger-spec-v2-klaytn.yaml",
			"size": 0,
			"path": "packages/api-proxy/swagger/swagger-spec-v2-klaytn.yaml",
			"byteSize": 73189,
			"content": "openapi: 3.0.0\ninfo:\n  title: KLAYTN\n  description: Henesis API Proxy - v2 - klaytn OpenAPI Documentation\n  version: '1.0'\n  contact: {}\ntags: []\nservers:\n  - url: http://localhost:3000\ncomponents:\n  schemas:\n    NoCoinException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: there is no '2' coin at 'ETHEREUM'\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4000\n      required:\n        - message\n        - code\n    CoinDTO:\n      type: object\n      properties:\n        id:\n          type: number\n          description: 암호화폐 ID\n          example: 576\n        name:\n          type: string\n          description: 암호화폐 이름\n          example: Ampleforth\n        symbol:\n          type: string\n          description: 암호화폐의 기호 (symbol)\n          example: AMPL\n        address:\n          type: string\n          description: 암호화폐 주소\n          example: '0x35b1dc534959fa547047a3dcdf1eb1eebd704561'\n        desc:\n          type: string\n          description: 암호화폐 설명\n          example: AMPL\n        blockchain:\n          type: string\n          description: 암호화폐가 발행된 블록체인 플랫폼\n          example: ETHEREUM\n        decimals:\n          type: number\n          description: 암호화폐의 소수점 자릿수\n          example: 9\n        attributes:\n          description: 암호화폐의 메타 데이터\n          example: \u0026ref_2\n            - ERC20_STANDARD\n            - ERC20_REBASE\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - name\n        - symbol\n        - address\n        - blockchain\n        - decimals\n        - attributes\n    ValueTransferEventDTO:\n      type: object\n      properties:\n        id:\n          type: number\n          description: 입출금/호출 내역의 ID\n          example: 100393\n        createdAt:\n          type: string\n          description: '트랜잭션 생성 시간 (형식: ms, UNIX time)'\n          example: '1620056478365'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'\n          example: '1620056481504'\n        status:\n          type: string\n          description: 트랜잭션 상태\n          example: CONFIRMED\n        transactionHash:\n          type: string\n          description: 트랜잭션 해시\n          example: '0xb53d099ca4ad755f3c66f0d64057eae26420d946241685a6745e2f09bc81cf7e'\n        walletId:\n          type: string\n          description: 입출금 지갑 ID\n          example: 98fa482e258bbd5cbac1393acef9e0e6\n        transactionId:\n          type: string\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          example: 2def027e99e906f8b912c691def10861\n        orgId:\n          type: string\n          description: 지갑이 속한 팀(Org)의 ID\n          example: 575a431dc73615a9e65648180bbd4fbb\n        masterWalletId:\n          type: string\n          description: 입출금된 지갑이 속해있는 마스터 지갑 ID\n          example: 98fa482e258bbd5cbac1393acef9e0e6\n        confirmation:\n          type: string\n          description: 블록 컨펌 수 (16진법)\n          example: '0x3ed'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n        amount:\n          type: string\n          description: 암호화폐의 양\n          example: '0x2386f26fc10000'\n        decimals:\n          type: number\n          description: 암호화폐의 소수점 자릿수\n          example: 18\n        coinSymbol:\n          type: string\n          description: 암호화폐의 기호 (symbol)\n          example: ETH\n        from:\n          type: string\n          description: 출금 주소\n          example: '0xd5fcc938ad42a56f1c60e7bd41f646ad844b2273'\n        to:\n          type: string\n          description: 입금 주소\n          example: '0xb659b6db08cdb7c24bd35b72222807c2567086f3'\n        transferType:\n          type: string\n          description: 입출금 타입\n          example: WITHDRAWAL\n        walletName:\n          type: string\n          description: 해당 내역의 지갑 이름\n          example: bit\n        walletType:\n          type: string\n          description: 해당 내역의 지갑 종류\n          example: MASTER_WALLET\n        hopTransactionId:\n          type: string\n          description: \u003e-\n            홉 트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          example: 6f831cf03c3ff08c87c578d7568edc15\n        hopTransactionHash:\n          type: string\n          description: 홉 트랜잭션 해시\n          example: '0x60603c815f0ba0ad6b7f2ae398bd7cb9fe71347f984e32453fe4fe53f255dfd3'\n      required:\n        - id\n        - createdAt\n        - updatedAt\n        - status\n        - walletId\n        - confirmation\n        - amount\n        - decimals\n        - coinSymbol\n        - from\n        - to\n        - transferType\n        - walletName\n        - walletType\n        - hopTransactionId\n        - hopTransactionHash\n    CallEventDTO:\n      type: object\n      properties:\n        id:\n          type: number\n          description: 입출금/호출 내역의 ID\n          example: 100393\n        createdAt:\n          type: string\n          description: '트랜잭션 생성 시간 (형식: ms, UNIX time)'\n          example: '1620056478365'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'\n          example: '1620056481504'\n        status:\n          type: string\n          description: 트랜잭션 상태\n          example: CONFIRMED\n        transactionHash:\n          type: string\n          description: 트랜잭션 해시\n          example: '0xb53d099ca4ad755f3c66f0d64057eae26420d946241685a6745e2f09bc81cf7e'\n        walletId:\n          type: string\n          description: 입출금 지갑 ID\n          example: 98fa482e258bbd5cbac1393acef9e0e6\n        transactionId:\n          type: string\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.)\n          example: 2def027e99e906f8b912c691def10861\n        orgId:\n          type: string\n          description: 지갑이 속한 팀(Org)의 ID\n          example: 575a431dc73615a9e65648180bbd4fbb\n        masterWalletId:\n          type: string\n          description: 입출금된 지갑이 속해있는 마스터 지갑 ID\n          example: 98fa482e258bbd5cbac1393acef9e0e6\n        confirmation:\n          type: string\n          description: 블록 컨펌 수 (16진법)\n          example: '0x3ed'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n        fromAddress:\n          type: string\n          description: 호출한 스마트 컨트랙트 주소\n          example: '0x4c49f0ead605aca868364769c9a4ef24930810b5'\n        toAddress:\n          type: string\n          description: 호출한 스마트 컨트랙트 주소\n          example: '0xe3d9325576bf491c2f35e92b020b7b990557f545'\n        data:\n          type: string\n          description: data\n          example: '0x6eea436c'\n      required:\n        - id\n        - createdAt\n        - updatedAt\n        - status\n        - walletId\n        - confirmation\n        - fromAddress\n        - toAddress\n        - data\n    PaginationMetadata:\n      type: object\n      properties:\n        nextUrl:\n          type: string\n          description: 다음 pagination url\n          example: http://localhost:3000/api/v3/ethereum/transfers?page=2\n        previousUrl:\n          type: string\n          description: 이전 pagination url\n          example: http://localhost:3000/api/v3/ethereum/transfers?page=1\n        totalCount:\n          type: number\n          description: 총 갯수\n          example: 5\n      required:\n        - nextUrl\n        - previousUrl\n        - totalCount\n    GetManyResponseForValueTransferEventDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ValueTransferEventDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    GetManyResponseForCallEventDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/CallEventDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    BalanceDTO:\n      type: object\n      properties:\n        coinId:\n          type: number\n          nullable: true\n          description: 암호화폐 ID\n          example: 2\n        coinType:\n          type: string\n          description: 암호화폐 타입\n          example: ETHEREUM\n        amount:\n          type: string\n          description: '확정된 잔액 (단위: wei, peb) (16진법)'\n          example: '0x6e59a23fd4698039'\n        spendableAmount:\n          type: string\n          description: |-\n            출금 가능한 잔액 (= 총 잔액 - 확정되지 않은 출금 요청액)\n            (단위: wei, peb) (형식: 16진법)\n          example: '0x6e59a23fd4698039'\n        name:\n          type: string\n          description: 암호화폐 이름\n          example: Ethereum\n        symbol:\n          type: string\n          description: 암호화폐 심볼 (ticker)\n          example: ETH\n        aggregatedAmount:\n          type: string\n          description: symbol\n          example: '0x6e59592eb170bcb9'\n        decimals:\n          type: number\n          description: 암호화폐의 소수점 자릿수\n          example: 18\n      required:\n        - coinId\n        - coinType\n        - amount\n        - name\n        - symbol\n        - decimals\n    TransactionDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 트랜잭션 ID\n          example: 2def027e99e906f8b912c691def10861\n        blockchain:\n          enum:\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - LITECOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - BITCOIN_CASH\n            - POLYGON\n          type: string\n          description: 블록체인 플랫폼\n          example: ETHEREUM\n        sender:\n          type: string\n          description: Henesis Key의 주소\n          example: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n        keyId:\n          type: string\n          description: 트랜잭션을 발생시킨 Henesis Key의 ID\n          example: 52e779750bb1330d2f23439c6da821ee\n        hash:\n          type: string\n          description: 트랜잭션 해시\n          example: '0xb53d099ca4ad755f3c66f0d64057eae26420d946241685a6745e2f09bc81cf7e'\n        error:\n          type: string\n          description: 트랜잭션 전송 시 발생한 에러\n          example: null\n        status:\n          enum:\n            - PENDING_APPROVAL\n            - REJECTED\n            - REQUESTED\n            - PENDING\n            - FAILED\n            - MINED\n            - REVERTED\n            - INTERNAL_REVERTED\n            - CONFIRMED\n            - REPLACED\n          type: string\n          description: 트랜잭션 상태\n          example: CONFIRMED\n        isFeeDelegated:\n          type: boolean\n          description: 트랜잭션 수수료 대납 여부\n          example: false\n        fee:\n          type: string\n          description: '트랜잭션 수수료 (형식: hex string)'\n          example: '0x896da43e8000'\n        estimatedFee:\n          type: string\n          description: '트랜잭션 예상 수수료 (형식: hex string)'\n          example: '0x8ac02d65cc00'\n        signedMultiSigPayload:\n          type: object\n          description: Account Key로 서명한 트랜잭션 Payload\n          example: \u0026ref_12\n            signature: sig\n            multiSigPayload:\n              walletAddress: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n              toAddress: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n              value: '0x1'\n              walletNonce: '1'\n              hexData: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n        rawTransaction:\n          type: object\n          description: 블록체인에 전파된 트랜잭션\n          example: \u0026ref_13\n            nonce: '1'\n            gasPrice: '0x1'\n            gasLimit: '0x1'\n            to: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n            value: '0x1'\n            data: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n        hopAddress:\n          type: string\n          description: 홉 주소\n          example: '0x1AA2705a26452cC22430F31A5c85974bBEDDe5a5'\n        createdAt:\n          type: string\n          description: '트랜잭션 생성 시간 (형식: ms, UNIX time)'\n          example: '1614582928222'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 변한 시간 (형식: ms, UNIX time)'\n          example: '1612411724023'\n      required:\n        - sender\n        - keyId\n        - status\n        - isFeeDelegated\n        - createdAt\n        - updatedAt\n    GetManyResponseForTransactionDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransactionDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    KeyDTO:\n      type: object\n      properties:\n        address:\n          type: string\n          description: ''\n          example: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n        pub:\n          type: string\n          description: pub\n          example: \u003e-\n            0x31bd93d049fefed19b640c8069046c223126505754b9a57f5df43a89b104d92c8d4be4f51a6b5bb08a3ec6c2ff022e8ff018bad52ee05fa81b4eeae16a0e2db1\n        feeDelegationEnabled:\n          type: boolean\n          description: feeDelegationEnabled\n          example: false\n        keyFile:\n          type: string\n          description: keyFile\n          example: '1'\n        keyId:\n          type: string\n          description: keyId\n          example: 52e779750bb1330d2f23439c6da821ee\n      required:\n        - pub\n    MasterWalletDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 지갑 ID\n          example: 407a31c97902faf2b5b2cd4b1fa1cfcd\n        name:\n          type: string\n          description: 지갑 이름\n          example: bit\n        address:\n          type: string\n          description: 지갑 주소\n          example: '0x2c27695429903b1e36299ce1eb89a3c1c34d115d'\n        createdAt:\n          type: string\n          description: '지갑 생성 시간 (단위: ms, UNIX time)'\n          example: '1615793637580'\n        updatedAt:\n          type: string\n          description: '지갑 정보 수정 시간 (단위: ms, UNIX time)'\n          example: '1615793656270'\n        status:\n          enum:\n            - ACTIVE\n            - CREATING\n            - FAILED\n            - INACTIVE\n          type: string\n          description: 지갑 상태\n          example: ACTIVE\n        blockchain:\n          enum:\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - LITECOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - BITCOIN_CASH\n            - POLYGON\n          type: string\n          description: 블록체인 타입\n          example: ETHEREUM\n        version:\n          type: string\n          description: 컨트랙트 버전\n          example: v3\n        transactionId:\n          type: string\n          nullable: true\n          description: 지갑 생성 트랜잭션의 ID\n          example: 183365bc7837eceb5c9292e5be1655b7\n        error:\n          type: string\n          nullable: true\n          description: 지갑 생성 실패 시 발생한 에러\n          example: null\n        accountKey:\n          description: KEY\n          example: \u0026ref_20\n            address: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n            pub: \u003e-\n              0x31bd93d049fefed19b640c8069046c223126505754b9a57f5df43a89b104d92c8d4be4f51a6b5bb08a3ec6c2ff022e8ff018bad52ee05fa81b4eeae16a0e2db1\n            feeDelegationEnabled: false\n            keyFile: '1'\n            keyId: 52e779750bb1330d2f23439c6da821ee\n          allOf:\n            - $ref: '#/components/schemas/KeyDTO'\n        encryptionKey:\n          type: string\n          description: 마스터 지갑 비밀번호를 복구하기 위해 암호화하는 데 쓰인 키\n          example: f0880e48251dd2f8574a8c8a4d65311030185d5e451e8a474b89c2b473b5d953\n        whitelistActivated:\n          type: boolean\n          description: 출금 주소 화이트리스팅의 활성화 유무\n          example: false\n      required:\n        - id\n        - name\n        - address\n        - createdAt\n        - updatedAt\n        - status\n        - blockchain\n        - accountKey\n        - encryptionKey\n        - whitelistActivated\n    UserWalletDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 지갑 ID\n          example: 407a31c97902faf2b5b2cd4b1fa1cfcd\n        name:\n          type: string\n          description: 지갑 이름\n          example: bit\n        address:\n          type: string\n          description: 지갑 주소\n          example: '0x2c27695429903b1e36299ce1eb89a3c1c34d115d'\n        createdAt:\n          type: string\n          description: '지갑 생성 시간 (단위: ms, UNIX time)'\n          example: '1615793637580'\n        updatedAt:\n          type: string\n          description: '지갑 정보 수정 시간 (단위: ms, UNIX time)'\n          example: '1615793656270'\n        status:\n          enum:\n            - ACTIVE\n            - CREATING\n            - FAILED\n            - INACTIVE\n          type: string\n          description: 지갑 상태\n          example: ACTIVE\n        blockchain:\n          enum:\n            - ETHEREUM\n            - KLAYTN\n            - BITCOIN\n            - LITECOIN\n            - FILECOIN\n            - BINANCE_SMART_CHAIN\n            - BITCOIN_CASH\n            - POLYGON\n          type: string\n          description: 블록체인 타입\n          example: ETHEREUM\n        version:\n          type: string\n          description: 컨트랙트 버전\n          example: v3\n        transactionId:\n          type: string\n          nullable: true\n          description: 지갑 생성 트랜잭션의 ID\n          example: 183365bc7837eceb5c9292e5be1655b7\n        error:\n          type: string\n          nullable: true\n          description: 지갑 생성 실패 시 발생한 에러\n          example: null\n      required:\n        - id\n        - name\n        - address\n        - createdAt\n        - updatedAt\n        - status\n        - blockchain\n    SendMasterWalletContractCallRequestDTO:\n      type: object\n      properties:\n        contractAddress:\n          type: string\n          description: 트랜잭션을 보낼 스마트 컨트랙트 주소\n          example: '0x2c27695429903b1e36299ce1eb89a3c1c34d115d'\n        value:\n          type: string\n          description: 트랜잭션에 담을 암호화폐의 양\n          example: '0x1'\n        data:\n          type: string\n          description: 트랜잭션에 담을 데이터\n          example: data\n        passphrase:\n          type: string\n          description: 마스터 지갑의 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n        gasLimit:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas limit\n            null일 경우, Henesis가 자동으로 설정합니다.\n          example: '0x1'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - contractAddress\n        - value\n        - data\n        - passphrase\n    ChangeMasterWalletNameRequestDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 마스터 지갑의 새로운 이름\n          example: masterWalletName\n      required:\n        - name\n    SendMasterWalletCoinRequestDTO:\n      type: object\n      properties:\n        ticker:\n          type: string\n          description: 암호화폐의 기호 (symbol)\n          example: ETH\n        to:\n          type: string\n          description: 암호화폐를 받을 지갑 주소\n          example: '0x2c27695429903b1e36299ce1eb89a3c1c34d115d'\n        amount:\n          type: string\n          description: |-\n            암호화폐의 양 (단위: wei, peb)\n            (16진법, 맨 앞에 반드시 '0x' 붙여야 함)\n          example: '0xDBE16A831'\n        passphrase:\n          type: string\n          description: 마스터 지갑의 비밀번호\n          example: passphrase\n        isHopTransaction:\n          type: boolean\n          description: 컨트랙트를 통한 입금을 원치 않는 경우, 컨트랙트가 아닌 EOA로 출금을 진행 합니다.\n          example: 'true'\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei, peb)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n        gasLimit:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas limit\n            null일 경우, Henesis가 자동으로 설정합니다.\n          example: '0x1'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - ticker\n        - to\n        - amount\n        - passphrase\n    SendMasterWalletBatchTransactionsRequestDTO:\n      type: object\n      properties:\n        passphrase:\n          type: string\n          description: 마스터 지갑의 비밀번호\n          example: passphrase\n        requests:\n          type: object\n          description: 전송할 트랜잭션 요청들\n          example: ContractCallRequest or TransferRequest\n      required:\n        - passphrase\n        - requests\n    FlushRequestDTO:\n      type: object\n      properties:\n        ticker:\n          type: string\n          description: 옮기고자 하는 코인/토큰의 기호 (symbol)\n          example: ETH\n        userWalletIds:\n          description: 옮기고자 하는 사용자 지갑 ID 목록 (최대 50개)\n          example: '[ \"70d1205b97eb651413d34d14ec5cb285\" ]'\n          type: array\n          items:\n            type: string\n        passphrase:\n          type: string\n          description: 마스터 지갑의 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei, peb)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n        gasLimit:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas limit\n            null일 경우, Henesis가 자동으로 설정합니다.\n          example: '0x1'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - ticker\n        - userWalletIds\n        - passphrase\n    GetManyResponseForUserWalletDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserWalletDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    CreateUserWalletRequestDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 지갑 이름\n          example: userWalletName\n        passphrase:\n          type: string\n          description: 지갑 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: '트랜잭션에 사용할 gas price (단위: wei, peb)'\n          example: '0x1'\n        salt:\n          type: string\n          description: 지갑 생성에 사용되는 난수\n          example: salt\n      required:\n        - name\n        - passphrase\n    SendUserWalletContractCallRequestDTO:\n      type: object\n      properties:\n        contractAddress:\n          type: string\n          description: 트랜잭션을 보낼 스마트 컨트랙트 주소\n          example: '0x2c27695429903b1e36299ce1eb89a3c1c34d115d'\n        value:\n          type: string\n          description: 트랜잭션에 담을 암호화폐의 양\n          example: '0x1'\n        data:\n          type: string\n          description: 트랜잭션에 담을 데이터\n          example: data\n        passphrase:\n          type: string\n          description: 지갑의 비밀번호\n          example: passphrase\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei, peb)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n        gasLimit:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas limit\n            null일 경우, Henesis가 자동으로 설정합니다.\n          example: '0x1'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - contractAddress\n        - value\n        - data\n        - passphrase\n    ChangeUserWalletNameRequestDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 사용자 지갑의 새로운 이름\n          example: userWalletName\n      required:\n        - name\n    SendUserWalletCoinRequestDTO:\n      type: object\n      properties:\n        ticker:\n          type: string\n          description: 암호화폐의 기호 (symbol)\n          example: ETH\n        to:\n          type: string\n          description: 암호화폐를 받을 지갑 주소\n          example: '0x2c27695429903b1e36299ce1eb89a3c1c34d115d'\n        amount:\n          type: string\n          description: |-\n            암호화폐의 양 (단위: wei, peb)\n            (16진법, 맨 앞에 반드시 '0x' 붙여야 함)\n          example: '0xDBE16A831'\n        passphrase:\n          type: string\n          description: 마스터 지갑의 비밀번호\n          example: passphrase\n        isHopTransaction:\n          type: boolean\n          description: 컨트랙트를 통한 입금을 원치 않는 경우, 컨트랙트가 아닌 EOA로 출금을 진행 합니다.\n          example: 'true'\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei, peb)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n        gasLimit:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas limit\n            null일 경우, Henesis가 자동으로 설정합니다.\n          example: '0x1'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - ticker\n        - to\n        - amount\n        - passphrase\n    RetryCreateMasterWalletRequestDTO:\n      type: object\n      properties:\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei, peb)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n    RetryCreateUserWalletRequestDTO:\n      type: object\n      properties:\n        gasPrice:\n          type: string\n          description: |-\n            트랜잭션에 사용할 gas price (단위: wei, peb)\n            null일 경우, Henesis가 자동으로 5분 안에 채굴될 수 있는 값으로 설정합니다.\n          example: '0x1'\n    InvalidAccessIpException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: ip '106.101.128.133' is not allowed\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4008\n      required:\n        - message\n        - code\n    InvalidAccessTokenException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: expired or invalid access token and signature\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4001\n      required:\n        - message\n        - code\n    AccessTokenNotProvidedException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: access token not provided\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4001\n      required:\n        - message\n        - code\npaths:\n  /api/v2/klay/coins:\n    get:\n      operationId: klaytn-CoinsController_getCoins\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 코인/토큰 목록 조회하기\n      description: Henesis Wallet에서 지원하는 모든 가상자산(토큰, 코인)을 조회합니다.\n      parameters:\n        - \u0026ref_0\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_1\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: flag\n          required: false\n          in: query\n          description: COIN FLAG\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CoinDTO'\n          description: ''\n        '401': \u0026ref_3\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: \u0026ref_4\n                    message: expired or invalid access token and signature\n                    code: 4001\n                AccessTokenNotProvidedException:\n                  value: \u0026ref_5\n                    message: access token not provided\n                    code: 4001\n                InvalidAccessIpException:\n                  value: \u0026ref_6\n                    message: ip '106.101.128.133' is not allowed\n                    code: 4008\n      tags:\n        - coins\n  /api/v2/klay/coins/{ticker}:\n    get:\n      operationId: klaytn-CoinsController_getCoin\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 코인/토큰 정보 조회하기\n      description: Henesis Wallet에서 지원하는 특정 가상자산(토큰, 코인)을 조회합니다.\n      parameters:\n        - *ref_0\n        - *ref_1\n        - name: ticker\n          required: true\n          in: path\n          description: 암호화폐의 기호 (symbol)\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CoinDTO'\n              example:\n                id: 576\n                name: Ampleforth\n                symbol: AMPL\n                address: '0x35b1dc534959fa547047a3dcdf1eb1eebd704561'\n                desc: AMPL\n                blockchain: ETHEREUM\n                decimals: 9\n                attributes: *ref_2\n          description: ''\n        '401': *ref_3\n      tags:\n        - coins\n  /api/v2/klay/events/value-transfer-events:\n    get:\n      operationId: klaytn-EventsController_getValueTransferEvents\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 코인/토큰 입출금 내역 조회하기\n      description: 모든 지갑의 가상자산 입출금 내역을 조회합니다.\n      parameters:\n        - \u0026ref_7\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_8\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: symbol\n          required: false\n          in: query\n          description: 토큰별로 필터링하여 조회하고 싶은 경우, 토큰의 symbol을 입력합니다.\n          schema:\n            type: string\n        - name: walletId\n          required: false\n          in: query\n          description: 단일 지갑을 조회하고 싶은 경우, 해당 지갑 ID를 입력합니다.\n          schema:\n            type: string\n        - name: masterWalletId\n          required: false\n          in: query\n          description: 마스터 지갑 ID (해당 마스터 지갑을 포함하여 하위의 사용자 지갑 입출금 내역도 함께 조회합니다.)\n          schema:\n            type: string\n        - name: transactionId\n          required: false\n          in: query\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.) \n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 트랜잭션 해시\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: \u003e-\n            트랜잭션 상태\n\n            ex. PENDING_APPROVAL, REJECTED, REQUESTED, PENDING, MINED,\n            CONFIRMED, FAILED \n          schema:\n            type: string\n        - name: transferType\n          required: false\n          in: query\n          description: 입금, 출금 타입을 지정합니다. DEPOSIT, WITHDRAWAL 2 가지 타입만 입력할 수 있습니다.\n          schema:\n            type: string\n        - name: updatedAtGte\n          required: false\n          in: query\n          description: |-\n            updatedAt이 해당 시점과 같거나 그보다 이후인 트랜잭션 조회 \n            (형식: ms, UNIX time) \n            ex. 1593669619000\n          schema:\n            type: string\n        - name: updatedAtLt\n          required: false\n          in: query\n          description: |-\n            updatedAt이 해당 시점보다 이전인 트랜잭션 조회 \n            (형식: ms, UNIX time) \n            ex. 1593670000000 \n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15) '\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForValueTransferEventDTO'\n              example:\n                pagination: \u0026ref_9\n                  nextUrl: http://localhost:3000/api/v2/eth/transfers?page=2\n                  previousUrl: http://localhost:3000/api/v2/eth/transfers?page=1\n                  totalCount: 5\n                results:\n                  - \u0026ref_10\n                    id: 100393\n                    createdAt: '1620056478365'\n                    updatedAt: '1620056481504'\n                    status: CONFIRMED\n                    transactionHash: \u003e-\n                      0xb53d099ca4ad755f3c66f0d64057eae26420d946241685a6745e2f09bc81cf7e\n                    walletId: 98fa482e258bbd5cbac1393acef9e0e6\n                    transactionId: 2def027e99e906f8b912c691def10861\n                    orgId: 575a431dc73615a9e65648180bbd4fbb\n                    masterWalletId: 98fa482e258bbd5cbac1393acef9e0e6\n                    confirmation: '0x3ed'\n                    metadata: metadata\n                    amount: '0x2386f26fc10000'\n                    decimals: 18\n                    coinSymbol: ETH\n                    from: '0xd5fcc938ad42a56f1c60e7bd41f646ad844b2273'\n                    to: '0xb659b6db08cdb7c24bd35b72222807c2567086f3'\n                    transferType: WITHDRAWAL\n                    walletName: bit\n                    walletType: MASTER_WALLET\n                    hopTransactionId: 6f831cf03c3ff08c87c578d7568edc15\n                    hopTransactionHash: \u003e-\n                      0x60603c815f0ba0ad6b7f2ae398bd7cb9fe71347f984e32453fe4fe53f255dfd3\n                    fromAddress: '0x4c49f0ead605aca868364769c9a4ef24930810b5'\n                    toAddress: '0xe3d9325576bf491c2f35e92b020b7b990557f545'\n                    data: '0x6eea436c'\n          description: ''\n        '401': \u0026ref_11\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_4\n                AccessTokenNotProvidedException:\n                  value: *ref_5\n                InvalidAccessIpException:\n                  value: *ref_6\n      tags:\n        - events\n  /api/v2/klay/events/call-events:\n    get:\n      operationId: klaytn-EventsController_getCallEvents\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 스마트 컨트랙트 호출 내역 조회하기\n      description: 내가 발생시킨 스마트 컨트랙트 호출 내역을 조회합니다.\n      parameters:\n        - *ref_7\n        - *ref_8\n        - name: walletId\n          required: false\n          in: query\n          description: 단일 지갑을 조회하고 싶은 경우, 해당 지갑 ID를 입력합니다.\n          schema:\n            type: string\n        - name: masterWalletId\n          required: false\n          in: query\n          description: 마스터 지갑 ID (해당 마스터 지갑을 포함하여 하위의 사용자 지갑 입출금 내역도 함께 조회합니다.)\n          schema:\n            type: string\n        - name: transactionId\n          required: false\n          in: query\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인상 트랜잭션 해시와 다른\n            개념입니다.) \n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 트랜잭션 해시\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: \u003e-\n            트랜잭션 상태\n\n            ex. PENDING_APPROVAL, REJECTED, REQUESTED, PENDING, MINED,\n            CONFIRMED, FAILED \n          schema:\n            type: string\n        - name: updatedAtGte\n          required: false\n          in: query\n          description: |-\n            updatedAt이 해당 시점과 같거나 그보다 이후인 트랜잭션 조회 \n            (형식: ms, UNIX time) \n            ex. 1593669619000\n          schema:\n            type: string\n        - name: updatedAtLt\n          required: false\n          in: query\n          description: |-\n            updatedAt이 해당 시점보다 이전인 트랜잭션 조회 \n            (형식: ms, UNIX time) \n            ex. 1593670000000 \n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15) '\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForCallEventDTO'\n              example:\n                pagination: *ref_9\n                results:\n                  - *ref_10\n          description: ''\n        '401': *ref_11\n      tags:\n        - events\n  /api/v2/klay/henesis-keys/balance:\n    get:\n      operationId: klaytn-HenesisKeysController_getHenesisKeyBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 수수료 지갑 잔액 조회하기\n      description: 수수료 지갑의 잔액을 조회합니다.\n      parameters:\n        - name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BalanceDTO'\n              example:\n                coinId: 2\n                coinType: ETHEREUM\n                amount: '0x6e59a23fd4698039'\n                spendableAmount: '0x6e59a23fd4698039'\n                name: Ethereum\n                symbol: ETH\n                aggregatedAmount: '0x6e59592eb170bcb9'\n                decimals: 18\n          description: ''\n        '401':\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_4\n                AccessTokenNotProvidedException:\n                  value: *ref_5\n                InvalidAccessIpException:\n                  value: *ref_6\n      tags:\n        - henesis-keys\n  /api/v2/klay/transactions:\n    get:\n      operationId: klaytn-TransactionsController_getTransactions\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 모든 트랜잭션 정보 조회하기\n      description: 내가 발생시킨 모든 트랜잭션의 정보를 조회합니다.\n      parameters:\n        - \u0026ref_14\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_15\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: address\n          required: false\n          in: query\n          description: 트랜잭션 주소\n          schema:\n            type: string\n        - name: toAddress\n          required: false\n          in: query\n          description: 받는 주소\n          schema:\n            type: string\n        - name: fromAddress\n          required: false\n          in: query\n          description: 보내는 주소\n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 트랜잭션 해시\n          schema:\n            type: string\n        - name: start\n          required: false\n          in: query\n          description: 해당 시점 이후의 트랜잭션 조회\n          schema:\n            type: string\n        - name: end\n          required: false\n          in: query\n          description: 해당 시점 이전의 트랜잭션 조회)\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: 트랜잭션 상태\n          schema:\n            type: string\n        - name: statuses\n          required: false\n          in: query\n          description: 트랜잭션 상태\n          schema:\n            type: array\n            items:\n              type: string\n        - name: types\n          required: false\n          in: query\n          description: 트랜잭션 종류\n          schema:\n            type: array\n            items:\n              type: string\n        - name: keyId\n          required: false\n          in: query\n          description: 키 ID\n          schema:\n            type: string\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: sort\n          required: false\n          in: query\n          description: 결과 정렬 방식\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForTransactionDTO'\n              example:\n                pagination: *ref_9\n                results:\n                  - \u0026ref_16\n                    id: 2def027e99e906f8b912c691def10861\n                    blockchain: ETHEREUM\n                    sender: '0x4ef3ba60c8710f45371835cddafabf33daa83e1d'\n                    keyId: 52e779750bb1330d2f23439c6da821ee\n                    hash: \u003e-\n                      0xb53d099ca4ad755f3c66f0d64057eae26420d946241685a6745e2f09bc81cf7e\n                    error: null\n                    status: CONFIRMED\n                    isFeeDelegated: false\n                    fee: '0x896da43e8000'\n                    estimatedFee: '0x8ac02d65cc00'\n                    signedMultiSigPayload: *ref_12\n                    rawTransaction: *ref_13\n                    hopAddress: '0x1AA2705a26452cC22430F31A5c85974bBEDDe5a5'\n                    createdAt: '1614582928222'\n                    updatedAt: '1612411724023'\n          description: ''\n        '401': \u0026ref_17\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_4\n                AccessTokenNotProvidedException:\n                  value: *ref_5\n                InvalidAccessIpException:\n                  value: *ref_6\n      tags:\n        - transactions\n  /api/v2/klay/transactions/{transactionId}:\n    get:\n      operationId: klaytn-TransactionsController_getTransaction\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 특정 트랜잭션 정보 조회하기\n      description: 내가 발생시킨 특정 트랜잭션의 정보를 조회합니다.\n      parameters:\n        - *ref_14\n        - *ref_15\n        - name: transactionId\n          required: true\n          in: path\n          description: 트랜잭션 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_17\n      tags:\n        - transactions\n  /api/v2/klay/wallets:\n    get:\n      operationId: klaytn-WalletsController_getMasterWallets\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 마스터 지갑 목록 조회하기\n      description: 모든 마스터 지갑 목록을 조회합니다.\n      parameters:\n        - \u0026ref_18\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_19\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: name\n          required: false\n          in: query\n          description: 지갑 이름\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MasterWalletDTO'\n          description: ''\n        '401': \u0026ref_21\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_4\n                AccessTokenNotProvidedException:\n                  value: *ref_5\n                InvalidAccessIpException:\n                  value: *ref_6\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}:\n    get:\n      operationId: klaytn-WalletsController_getMasterWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 조회하기\n      description: 특정 마스터 지갑을 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MasterWalletDTO'\n              example: \u0026ref_22\n                id: 407a31c97902faf2b5b2cd4b1fa1cfcd\n                name: bit\n                address: '0x2c27695429903b1e36299ce1eb89a3c1c34d115d'\n                createdAt: '1615793637580'\n                updatedAt: '1615793656270'\n                status: ACTIVE\n                blockchain: ETHEREUM\n                version: v3\n                transactionId: 183365bc7837eceb5c9292e5be1655b7\n                error: null\n                accountKey: *ref_20\n                encryptionKey: \u003e-\n                  f0880e48251dd2f8574a8c8a4d65311030185d5e451e8a474b89c2b473b5d953\n                whitelistActivated: false\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/contract-call:\n    post:\n      operationId: klaytn-WalletsController_sendMasterWalletContractCall\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑에서 스마트 컨트랙트 호출하기\n      description: 특정 마스터 지갑에서 일반적인 스마트 컨트랙트 함수를 호출하는 트랜잭션을 발생시킵니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendMasterWalletContractCallRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/name:\n    patch:\n      operationId: klaytn-WalletsController_changeMasterWalletName\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 이름 변경하기\n      description: 특정 마스터 지갑의 이름을 변경합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeMasterWalletNameRequestDTO'\n      responses:\n        '200':\n          description: ''\n        '204':\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/balance:\n    get:\n      operationId: klaytn-WalletsController_getMasterWalletBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 잔고 조회하기\n      description: 특정 마스터 지갑의 잔액을 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: flag\n          required: false\n          in: query\n          description: FLAG\n          schema:\n            type: string\n        - name: symbol\n          required: false\n          in: query\n          description: 토큰별로 필터링하여 조회하고 싶은 경우, 토큰의 symbol을 입력합니다.\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BalanceDTO'\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/transfer:\n    post:\n      operationId: klaytn-WalletsController_sendMasterWalletCoin\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑에서 코인/토큰 전송하기\n      description: 특정 마스터 지갑에서 가상자산을 송금합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendMasterWalletCoinRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/batch-transactions:\n    post:\n      operationId: klaytn-WalletsController_sendMasterWalletBatchTransactions\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑에서 여러 트랜잭션들을 모아서 호출하기\n      description: |-\n        특정 마스터 지갑에서 여러 트랜잭션을 모아 한꺼번에 발생니다.\n        최대 10개까지 보낼 수 있습니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendMasterWalletBatchTransactionsRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransactionDTO'\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/flush:\n    post:\n      operationId: klaytn-WalletsController_flush\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 잔액을 모두 끌어오기\n      description: 여러 사용자 지갑의 특정 코인/토큰 잔액을 모두 상위의 마스터 지갑으로 끌어옵니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FlushRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/user-wallets/{userWalletId}:\n    get:\n      operationId: klaytn-WalletsController_getUserWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 정보 조회하기\n      description: 특정 사용자 지갑을 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 유저 지갑 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWalletDTO'\n              example: *ref_22\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/user-wallets:\n    get:\n      operationId: klaytn-WalletsController_getUserWallets\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 사용자 지갑 목록 조회하기\n      description: 특정 마스터 지갑에 속한 모든 사용자 지갑 목록을 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15) '\n          schema:\n            type: number\n        - name: sort\n          required: false\n          in: query\n          description: 결과 정렬 방식\n          schema:\n            type: string\n        - name: name\n          required: false\n          in: query\n          description: 지갑 이름\n          schema:\n            type: string\n        - name: address\n          required: false\n          in: query\n          description: 지갑 주소\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForUserWalletDTO'\n              example:\n                pagination: *ref_9\n                results:\n                  - *ref_22\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n    post:\n      operationId: klaytn-WalletsController_createUserWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 생성하기\n      description: 특정 마스터 지갑 하위에 새로운 사용자 지갑을 생성합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserWalletRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWalletDTO'\n              example: *ref_22\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/user-wallets/{userWalletId}/contract-call:\n    post:\n      operationId: klaytn-WalletsController_sendUserWalletContractCall\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑에서 스마트 컨트랙트 호출하기\n      description: 사용자 지갑에서 일반적인 스마트 컨트랙트 함수를 호출하는 트랜잭션을 발생시킵니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 유저 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendUserWalletContractCallRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/user-wallets/{userWalletId}/name:\n    patch:\n      operationId: klaytn-WalletsController_changeUserWalletName\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 이름 변경하기\n      description: 특정 사용자 지갑의 이름을 변경합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 유저 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeUserWalletNameRequestDTO'\n      responses:\n        '200':\n          description: ''\n        '204':\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/user-wallets/{userWalletId}/balance:\n    get:\n      operationId: klaytn-WalletsController_getUserWalletBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 잔고 조회하기\n      description: 특정 사용자 지갑의 잔액을 조회합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 유저 지갑 ID\n          schema:\n            type: string\n        - name: flag\n          required: false\n          in: query\n          description: FLAG\n          schema:\n            type: string\n        - name: symbol\n          required: false\n          in: query\n          description: 토큰별로 필터링하여 조회하고 싶은 경우, 토큰의 symbol을 입력합니다.\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BalanceDTO'\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/user-wallets/{userWalletId}/transfer:\n    post:\n      operationId: klaytn-WalletsController_sendUserWalletCoin\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑에서 코인/토큰 전송하기\n      description: 특정 사용자 지갑에서 가상자산을 전송합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 유저 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendUserWalletCoinRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/recreate:\n    post:\n      operationId: klaytn-WalletsController_retryCreateMasterWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 마스터 지갑 재생성하기\n      description: 마스터 지갑을 재생성합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RetryCreateMasterWalletRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MasterWalletDTO'\n              example: *ref_22\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n  /api/v2/klay/wallets/{masterWalletId}/user-wallets/{userWalletId}/recreate:\n    post:\n      operationId: klaytn-WalletsController_retryCreateUserWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 사용자 지갑 생성 실패시 재시도하기\n      description: 특정 마스터 지갑 하위에 특정 사용자 지갑 생성 트랜잭션이 실패했을 때 재시도합니다.\n      parameters:\n        - *ref_18\n        - *ref_19\n        - name: masterWalletId\n          required: true\n          in: path\n          description: 마스터 지갑 ID\n          schema:\n            type: string\n        - name: userWalletId\n          required: true\n          in: path\n          description: 유저 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RetryCreateUserWalletRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionDTO'\n              example: *ref_16\n          description: ''\n        '401': *ref_21\n      tags:\n        - wallets\n",
			"canonicalURL": "/github.com/HAECHI-LABS/henesis-wallet-sdk@d34e228791020f526d875f9a4f0874012112d5ee/-/blob/packages/api-proxy/swagger/swagger-spec-v2-klaytn.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HAECHI-LABS/henesis-wallet-sdk/blob/d34e228791020f526d875f9a4f0874012112d5ee/packages/api-proxy/swagger/swagger-spec-v2-klaytn.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}