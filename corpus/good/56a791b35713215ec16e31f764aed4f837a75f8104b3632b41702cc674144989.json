{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/sinch.verification/openapi.yaml",
			"byteSize": 30826,
			"content": "openapi: 3.0.0\ninfo:\n  title: Verification\n  description: \n    This is a generated connector for [Sinch Verification API v2.0](https://www.sinch.com/) OpenAPI specification. \n\n    Verify users with SMS, flash calls (missed calls), a regular call, or data verification.\n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create a [Sinch account](https://www.sinch.com/) and obtain tokens by following [this guide](https://developers.sinch.com/docs/verification/api-reference/authentication/).\n  x-ballerina-display:\n    label: sinch.verification\n    iconPath: \"icon.png\"\n  termsOfService: https://www.sinch.com/terms-of-service/\n  license:\n    name: MIT\n    url: https://www.sinch.com/toc\n  contact:\n    name: Sinch\n    url: https://www.sinch.com/contact-us/\n    email: support@sinch.com\n  version: '2.0'\nservers:\n  - url: https://verificationapi-v1.sinch.com\nsecurity:\n  - Basic: []\nx-webhooks:\n  VerificationRequestEvent:\n    operationId: VerificationRequestEvent\n    summary: Verification Request Event\n    post:\n      security: []\n      tags:\n        - Verification callbacks\n      summary: Verification Request Event\n      description: \u003e-\n        This callback event is a POST request to the specified verification\n        callback URL and is triggered when a new verification request is made\n        from the SDK client or the Verification Request API. This callback event\n        is only triggered when a verification callback URL is specified in your\n        [dashboard](https://dashboard.sinch.com/verification/apps).\n      requestBody:\n        $ref: '#/components/requestBodies/VerificationRequestEventRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/VerificationRequestEventResponse'\n  VerificationResultEvent:\n    operationId: VerificationResultEvent\n    summary: Verification Result Event\n    post:\n      security: []\n      tags:\n        - Verification callbacks\n      summary: Verification Result Event\n      description: \u003e-\n        This callback event is a POST request to the specified verification\n        callback URL and triggered when a verification has been completed and\n        the result is known. It's used to report the verification result to the\n        developer's backend application. This callback event is only triggered\n        when the verification callback URL is specified in your\n        [dashboard](https://dashboard.sinch.com/verification/apps).\n      requestBody:\n        $ref: '#/components/requestBodies/VerificationResultEventRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/VerificationResultEventResponse'\npaths:\n  /verification/v1/verifications:\n    post:\n      tags:\n        - Verifications\n      summary: Start verification\n      description: \u003e-\n        This method is used by the mobile and web Verification SDKs to start a\n        verification. It can also be used to request a verification from your\n        backend, by making an request.\n      operationId: StartVerification\n      requestBody:\n        $ref: '#/components/requestBodies/StartVerificationRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/StartVerificationResponse'\n  /verification/v1/verifications/{type}/{endpoint}:\n    parameters:\n      - $ref: '#/components/parameters/type'\n      - $ref: '#/components/parameters/endpoint'\n    put:\n      tags:\n        - Verifications\n      summary: Report back on a started verification\n      description: \u003e-\n        Verify verification code by Identity. After the SMS or flashcall is\n        received (and intercepted, in the case of Android), the client needs to\n        report to the Sinch Verification service either the PIN (for SMS) or CLI\n        (for flashCall).\n      operationId: ReportVerificationByIdentity\n      requestBody:\n        $ref: '#/components/requestBodies/VerificationReportRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/VerificationReportResponse'\n  /verification/v1/verifications/id/{id}:\n    parameters:\n      - $ref: '#/components/parameters/id'\n    put:\n      tags:\n        - Verifications\n      summary: Report back on a started verification\n      description: Used to report OTP code.\n      operationId: ReportVerificationById\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n          x-position: 1\n      requestBody:\n        x-name: request\n        description: Verification report request resource payload.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerificationReportRequestResource'\n        required: true\n        x-position: 2\n      responses:\n        '200':\n          description: 'A sucessful response.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerificationResponse'\n    get:\n      tags:\n        - Verification queries\n      summary: Get verification by ID\n      description: \u003e-\n        Queries the verification result by sending the verification ID. With\n        this query you can get the result of a verification.\n      operationId: VerificationStatusById\n      responses:\n        '200':\n          $ref: '#/components/responses/VerificationResult'\n  /verification/v1/verifications/{method}/{type}/{endpoint}:\n    parameters:\n      - $ref: '#/components/parameters/type'\n      - $ref: '#/components/parameters/endpoint'\n      - $ref: '#/components/parameters/method'\n    get:\n      tags:\n        - Verification queries\n      summary: Get verification by Identity\n      description: \u003e-\n        Queries the verification result by sending the verification Identity and\n        its method. With this query you can get the result of a verification.\n      operationId: VerificationStatusByIdentity\n      responses:\n        '200':\n          $ref: '#/components/responses/VerificationResult'\n  /verification/v1/verifications/reference/{reference}:\n    parameters:\n      - $ref: '#/components/parameters/reference'\n    get:\n      tags:\n        - Verification queries\n      summary: Get verification by Reference\n      description: \u003e-\n        Queries the verification result by sending the verification Reference.\n        With this query you can get the result of a verification.\n      operationId: VerificationStatusByReference\n      responses:\n        '200':\n          $ref: '#/components/responses/VerificationResult'\ntags:\n  - name: Verifications\n    description: \u003e-\n      Start new verification requests and report on existing verification\n      requests.\n  - name: Verification queries\n    description: Query existing verification requests.\n  - name: Verification callbacks\n    description: \u003e-\n      Callback events are used to authorize and manage your verification\n      requests and return verification results.\ncomponents:\n  parameters:\n    id:\n      name: id\n      in: path\n      required: true\n      description: The ID of the verification.\n      schema:\n        type: string\n    method:\n      name: method\n      in: path\n      required: true\n      description: The method of the verification.\n      schema:\n        type: string\n    type:\n      name: type\n      in: path\n      required: true\n      description: Currently only `number` type is supported.\n      schema:\n        type: string\n    endpoint:\n      name: endpoint\n      in: path\n      required: true\n      description: \u003e-\n        For `number` use a\n        [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)-compatible\n        phone number.\n      schema:\n        type: string\n    reference:\n      name: reference\n      in: path\n      required: true\n      description: The custom reference of the verification.\n      schema:\n        type: string\n  examples:\n    verificationRequestFlashCall:\n      summary: FlashCall\n      value:\n        identity:\n          type: number\n          endpoint: '+46700000000'\n        method: flashCall\n    verificationRequestFlashCallnoSDK:\n      summary: FlashCall specifying CLI (no SDK scenario)\n      value:\n        identity:\n          type: number\n          endpoint: '+46700000000'\n        method: flashCall\n        flashCallOptions:\n          dialTimeout: 10\n    verificationRequestSMS:\n      summary: SMS\n      value:\n        identity:\n          type: number\n          endpoint: '+46700000000'\n        method: sms\n    verificationRequestCallout:\n      summary: Callout\n      value:\n        identity:\n          type: number\n          endpoint: '+46700000000'\n        method: callout\n    verificationRequestData:\n      summary: Data (seamless)\n      value:\n        identity:\n          type: number\n          endpoint: '+46700000000'\n        method: seamless\n  responses:\n    VerificationRequestEventResponse:\n      description: A successful response.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerificationRequestEventResponse'\n    VerificationResultEventResponse:\n      description: A successful response.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerificationResultEventResponse'\n    StartVerificationResponse:\n      description: A successful response.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InitiateVerificationResponse'\n    VerificationReportResponse:\n      description: A successful response.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerificationResponse'\n    VerificationResult:\n      description: A sucessful response.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerificationResponse'\n  requestBodies:\n    VerificationRequestEventRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerificationRequestEvent'\n    VerificationResultEventRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerificationResultEvent'\n    StartVerificationRequest:\n      required: true\n      description: Start verification request payload.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InitiateVerificationResource'\n          examples:\n            verificationRequestSMS:\n              $ref: '#/components/examples/verificationRequestSMS'\n            verificationRequestFlashCall:\n              $ref: '#/components/examples/verificationRequestFlashCall'\n            verificationRequestFlashCallnoSDK:\n              $ref: '#/components/examples/verificationRequestFlashCallnoSDK'\n            verificationRequestCallout:\n              $ref: '#/components/examples/verificationRequestCallout'\n            verificationRequestData:\n              $ref: '#/components/examples/verificationRequestData'\n    VerificationReportRequest:\n      description: Verification report request payload.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerificationReportRequestResource'\n      required: true\n  schemas:\n    VerificationRequestEvent:\n      required:\n        - id\n        - event\n        - method\n        - identity\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the verification request.\n          example: '1234567890'\n        event:\n          type: string\n          description: The type of the event.\n          example: VerificationRequestEvent\n        method:\n          type: string\n          description: The verification method.\n          enum:\n            - sms\n            - flashCall\n            - callout\n          example: sms\n        identity:\n          $ref: '#/components/schemas/Identity'\n        price:\n          description: The amount of money and currency of the verification request.\n          type: object\n          properties:\n            amount:\n              type: integer\n              description: The amount of money of the verification request.\n              example: 10.5\n            currencyId:\n              type: string\n              description: The currency of the price.\n              example: USD\n        reference:\n          type: string\n          description: \u003e-\n            Used to pass your own reference in the request for tracking\n            purposes.\n        custom:\n          type: string\n          description: Can be used to pass custom data in the request.\n        acceptLanguage:\n          type: array\n          description: \u003e-\n            Allows you to set or override if provided in the API request, the\n            SMS verification content language. Only used with the SMS\n            verification method. The content language specified in the API\n            request or in the callback can be overridden by carrier provider\n            specific templates, due to compliance and legal requirements, such\n            as [US shortcode requirements\n            (pdf)](https://community.sinch.com/t5/SMS/Sinch-US-Short-Code-Onboarding-Overview/ta-p/7085).\n          items:\n            type: string\n            example: es-ES\n    VerificationRequestEventResponse:\n      oneOf:\n        - $ref: '#/components/schemas/SMSRequestEventResponse'\n        - $ref: '#/components/schemas/FlashCallRequestEventResponse'\n        - $ref: '#/components/schemas/CalloutRequestEventResponse'\n    VerificationResultEventResponse:\n      oneOf:\n        - $ref: '#/components/schemas/SMSRequestEventResponse'\n        - $ref: '#/components/schemas/FlashCallRequestEventResponse'\n        - $ref: '#/components/schemas/CalloutRequestEventResponse'\n    SMSRequestEventResponse:\n      title: SMS Request Event Response\n      type: object\n      properties:\n        action:\n          type: string\n          description: Determines whether the verification can be executed.\n          enum:\n            - allow\n            - deny\n          example: allow\n        sms:\n          type: object\n          properties:\n            code:\n              type: string\n              description: \u003e-\n                The SMS PIN that should be used. By default, the Sinch dashboard\n                will automatically generate PIN codes for SMS verification. If\n                you want to set your own PIN, you can specify it in the response\n                to the Verification Request Event.\n              example: '12345'\n            acceptLanguage:\n              type: array\n              description: \u003e-\n                The SMS verification content language. Set in the verification\n                request.\n              items:\n                type: string\n                example: es-ES\n    FlashCallRequestEventResponse:\n      title: FlashCall Request Event Response\n      type: object\n      properties:\n        action:\n          type: string\n          description: Determines whether the verification can be executed.\n          enum:\n            - allow\n            - deny\n          example: allow\n        flashCall:\n          type: object\n          properties:\n            cli:\n              type: string\n              description: \u003e-\n                The phone number that will be displayed to the user when the\n                flashcall is received on the user's phone. By default, the Sinch\n                dashboard will randomly select the CLI that will be displayed\n                during a flashcall from a pool of numbers. If you want to set\n                your own CLI, you can specify it in the response to the\n                Verification Request Event.\n            dialTimeout:\n              type: integer\n              description: \u003e-\n                The maximum time that a flashcall verification will be active\n                and can be completed. If the phone number hasn't been verified\n                successfully during this time, then the verification request\n                will fail. By default, the Sinch dashboard will automatically\n                optimize dial time out during a flashcall. If you want to set\n                your own dial time out for the flashcall, you can specify it in\n                the response to the Verification Request Event.\n    CalloutRequestEventResponse:\n      title: Callout Request Event Response\n      type: object\n      properties:\n        action:\n          type: string\n          description: Determines whether the verification can be executed.\n          enum:\n            - allow\n            - deny\n          example: allow\n        callout:\n          type: object\n          properties:\n            locale:\n              type: string\n              description: \u003e-\n                Indicates the language that should be used for the\n                text-to-speech message. Currently, only `en-US` is supported.\n              example: en-US\n            ttsMenu:\n              type: string\n              description: \u003e-\n                The message that can be played to the user when the phone call\n                is picked up. The default value is: \"To verify your phone\n                number, please press {pin}. If you didnâ€™t request this call,\n                please hang up.\"\n              example: Please press 1 to verify your phone\n            wavFile:\n              type: string\n              description: \u003e-\n                The `.wav` file that can be played to the user when the phone\n                call is picked up.\n            pin:\n              type: string\n              description: \u003e-\n                The digit that the user should press to verify the phone number.\n                The default value is `1`.\n              example: '3'\n    VerificationResultEvent:\n      required:\n        - id\n        - event\n        - method\n        - identity\n        - status\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the verification request.\n          example: '1234567890'\n        event:\n          type: string\n          description: The type of the event.\n          example: VerificationResultEvent\n        method:\n          type: string\n          description: The verification method.\n          enum:\n            - sms\n            - flashCall\n            - callout\n            - seamless\n          example: sms\n        identity:\n          $ref: '#/components/schemas/Identity'\n        status:\n          type: string\n          description: The status of the verification request.\n          example: PENDING\n          x-enumDescriptions:\n            PENDING: The verification is ongoing.\n            SUCCESSFUL: The verification was successful.\n            FAIL: The verification attempt was made, but the number wasn't verified.\n            DENIED: The verification attempt was denied by Sinch or your backend.\n            ABORTED: \u003e-\n              The verification attempt was aborted by requesting a new\n              verification.\n            ERROR: \u003e-\n              The verification couldn't be completed due to a network error or\n              the number being unreachable.\n        reason:\n          type: string\n          description: \u003e-\n            Displays the reason why a verification has `FAILED`, was `DENIED`,\n            or was `ABORTED`.\n          enum:\n            - Not enough credit\n            - Blocked\n            - Denied by callback\n            - Invalid callback\n            - Internal error\n            - Destination denied\n            - Network error or number unreachable\n            - Failed pending\n            - SMS delivery failure\n            - Invalid CLI\n            - Invalid code\n            - Expired\n            - Hung up without entering valid code\n        reference:\n          type: string\n          description: \u003e-\n            The reference ID that was optionally passed together with the\n            verification request.\n          example: '12345'\n        source:\n          type: string\n          description: \u003e-\n            Free text that the client is sending, used to show if the call/SMS\n            was intercepted or not.\n          enum:\n            - intercepted\n            - manual\n          example: intercept\n        custom:\n          type: string\n          description: A custom string that can be provided during a verification request.\n    SMSInitiateVerificationResponse:\n      title: SMS Response\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - sms\n      properties:\n        id:\n          type: string\n          description: Verification identifier used to query for status.\n          example: '1234567890'\n        sms:\n          type: object\n          description: \u003e-\n            The response contains the `template` of the SMS to be expected and\n            intercepted.\n          properties:\n            template:\n              type: string\n              description: The expected SMS response.\n              example: Your verfication code is {{CODE}}\n    FlashCallInitiateVerificationResponse:\n      title: FlashCall Response\n      type: object\n      required:\n        - id\n        - flashCall\n      properties:\n        id:\n          type: string\n          description: Verification identifier used to query for status.\n          example: '1234567890'\n        flashCall:\n          description: \u003e-\n            The response contains the `cliFilter` and `interceptionTimeout`\n            properties.\n          required:\n            - cliFilter\n            - interceptionTimeout\n          type: object\n          properties:\n            cliFilter:\n              type: string\n              description: \u003e-\n                Filter that should be applied for incoming calls to intercept\n                the Flashcall.\n              example: (.*)70123(.*)\n            interceptionTimeout:\n              type: integer\n              description: Amount of seconds client should wait for the Flashcall.\n              format: int32\n              example: 120\n    CalloutInitiateVerificationResponse:\n      title: Callout Response\n      type: object\n      required:\n        - id\n        - callout\n      properties:\n        id:\n          type: string\n          description: Verification identifier used to query for status.\n          example: '1234567890'\n        callout:\n          description: \u003e-\n            The response contains information for the client to poll for the\n            verification result.\n          type: object\n          properties:\n            startPollingAfter:\n              type: integer\n              description: \u003e-\n                The amount of time in seconds after the request is sent that the\n                polling should start.\n              example: 3\n            stopPollingAfter:\n              type: integer\n              description: \u003e-\n                The amount of time in seconds after the request is sent that\n                polling should stop.\n              example: 30\n            pollingInterval:\n              type: integer\n              description: The amount of time in seconds between each poll.\n              example: 3\n    DataInitiateVerificationResponse:\n      title: Data Response\n      type: object\n      required:\n        - id\n        - callout\n      properties:\n        id:\n          type: string\n          description: Verification identifier used to query for status.\n          example: '1234567890'\n        seamless:\n          description: The response contains the target URI.\n          type: object\n          properties:\n            targetUri:\n              type: string\n              description: The target URI.\n              example: https://targetURI.com\n    InitiateVerificationResponse:\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/SMSInitiateVerificationResponse'\n        - $ref: '#/components/schemas/FlashCallInitiateVerificationResponse'\n        - $ref: '#/components/schemas/CalloutInitiateVerificationResponse'\n        - $ref: '#/components/schemas/DataInitiateVerificationResponse'\n    VerificationMethod:\n      type: string\n      description: The type of the verification request.\n      example: sms\n      x-enumDescriptions:\n        sms: Verification by SMS message with a PIN code.\n        flashCall: \u003e-\n          Verification by placing a flashcall (missed call) and detecting the\n          incoming calling number (CLI).\n        callout: \u003e-\n          Verification by placing a PSTN call to the user's phone and playing an\n          announcement, asking the user to press a particular digit to verify\n          the phone number (only iOS).\n        seamless: \u003e-\n          Data verification. Verification by accessing internal infrastrcuture\n          of mobile carriers to verify if given verification attempt was\n          originated from device with matching phone number.\n    InitiateVerificationResource:\n      type: object\n      additionalProperties: false\n      required:\n        - identity\n        - method\n      properties:\n        identity:\n          $ref: '#/components/schemas/Identity'\n        method:\n          $ref: '#/components/schemas/VerificationMethod'\n        reference:\n          type: string\n          description: \u003e-\n            Used to pass your own reference in the request for tracking\n            purposes.\n        custom:\n          type: string\n          description: Can be used to pass custom data in the request.\n        flashCallOptions:\n          type: object\n          description: \u003e-\n            An optional object for flashCall verifications. It allows you to\n            specify dial time out parameter for flashCall. FlashCallOptions\n            object can be specified optionally, and only if the verification\n            request was triggered from your backend (no SDK client) through an\n            [Application signed\n            request](/docs/voice/api-reference/authentication#application-signed-request).\n          properties:\n            dialTimeout:\n              type: integer\n              description: The dial timeout in seconds.\n              maxLength: 120\n              minLength: 5\n    Identity:\n      type: object\n      description: \u003e-\n        Specifies the type of endpoint that will be verified and the particular\n        endpoint. `number` is currently the only supported endpoint type.\n      required:\n        - type\n        - endpoint\n      properties:\n        type:\n          type: string\n          description: Currently only `number` type is supported.\n          enum:\n            - number\n        endpoint:\n          type: string\n          description: \u003e-\n            For `number` use an\n            [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)-compatible\n            phone number.\n          example: '+11235551234'\n    VerificationResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          description: Verification identifier used to query for status.\n          example: '1234567890'\n        method:\n          $ref: '#/components/schemas/VerificationMethod'\n        status:\n          type: string\n          description: The status of the verification request.\n          example: FAIL\n          x-enumDescriptions:\n            PENDING: The verification is ongoing.\n            SUCCESSFUL: The verification was successful.\n            FAIL: The verification attempt was made, but the number wasn't verified.\n            DENIED: The verification attempt was denied by Sinch or your backend.\n            ABORTED: \u003e-\n              The verification attempt was aborted by requesting a new\n              verification.\n            ERROR: \u003e-\n              The verification couldn't be completed due to a network error or\n              the number being unreachable.\n        reason:\n          type: string\n          description: \u003e-\n            Displays the reason why a verification has `FAILED`, was `DENIED`,\n            or was `ABORTED`.\n          enum:\n            - Not enough credit\n            - Blocked\n            - Denied by callback\n            - Invalid callback\n            - Internal error\n            - Destination denied\n            - Network error or number unreachable\n            - Failed pending\n            - SMS delivery failure\n            - Invalid CLI\n            - Invalid code\n            - Expired\n            - Hung up without entering valid code\n        reference:\n          type: string\n          description: \u003e-\n            The reference ID that was optionally passed together with the\n            verification request.\n          example: '12345'\n        source:\n          type: string\n          description: \u003e-\n            Free text that the client is sending, used to show if the call/SMS\n            was intercepted or not.\n          enum:\n            - intercepted\n            - manual\n          example: intercept\n    VerificationReportRequestResource:\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/SmsVerificationReportRequest'\n        - $ref: '#/components/schemas/FlashcallVerificationReportRequest'\n    SmsVerificationReportRequest:\n      title: SMS Verification Report Request\n      type: object\n      required:\n        - method\n        - sms\n      properties:\n        method:\n          type: string\n          description: The type of verification.\n          example: sms\n        sms:\n          required:\n            - code\n          description: Contains information about the SMS verification.\n          type: object\n          properties:\n            code:\n              type: string\n              description: \u003e-\n                The code which was input by the user submitting the SMS\n                verification.\n              example: '123'\n            cli:\n              type: string\n              description: The sender ID of the SMS.\n              example: '+46000000000'\n    FlashcallVerificationReportRequest:\n      title: FlashCall Verification Report Request\n      required:\n        - method\n        - flashCall\n      properties:\n        method:\n          type: string\n          description: The type of verification.\n          example: flashCall\n        flashCall:\n          required:\n            - cli\n          description: Contains information about the FlashCall verification.\n          type: object\n          properties:\n            cli:\n              type: string\n              description: The caller ID of the FlashCall.\n              example: '+46000000000'\n  securitySchemes:\n    Basic:\n      type: http\n      scheme: basic\n      description: \u003e-\n        For more information about basic authentication, see [Basic\n        Authentication](newdocs/docs/voice/api-reference/authentication.md#basic-authentication).\nx-explorer-enabled: false\nx-samples-languages:\n  - curl\n  - csharp\n  - java\n  - node\n  - php\nx-proxy-enabled: true\nx-samples-enabled: true\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/sinch.verification/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/sinch.verification/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}