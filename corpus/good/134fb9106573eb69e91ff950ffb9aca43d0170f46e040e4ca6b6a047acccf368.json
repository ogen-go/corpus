{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TempleEight/temple"
		},
		"file": {
			"name": "sample-complex-project.openapi.yaml",
			"size": 0,
			"path": "src/test/resources/project-builder-complex/api/sample-complex-project.openapi.yaml",
			"byteSize": 21217,
			"content": "openapi: 3.0.0\ninfo:\n  title: SampleComplexProject\n  version: 0.0.1\npaths:\n  /complex-user:\n    post:\n      summary: Register a new complexuser\n      security:\n      - bearerAuth: []\n      tags:\n      - ComplexUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                smallIntField:\n                  type: number\n                  format: int32\n                  minimum: 10\n                  maximum: 100\n                intField:\n                  type: number\n                  format: int32\n                  minimum: 10\n                  maximum: 100\n                bigIntField:\n                  type: number\n                  format: int64\n                  minimum: 10\n                  maximum: 100\n                floatField:\n                  type: number\n                  format: float\n                  minimum: 0.0\n                  maximum: 300.0\n                doubleField:\n                  type: number\n                  format: double\n                  minimum: 0.0\n                  maximum: 123.0\n                stringField:\n                  type: string\n                  minLength: 1\n                boundedStringField:\n                  type: string\n                  minLength: 0\n                  maxLength: 5\n                boolField:\n                  type: boolean\n                dateField:\n                  type: string\n                  format: date\n                timeField:\n                  type: string\n                  format: time\n                dateTimeField:\n                  type: string\n                  format: date-time\n                blobField:\n                  type: string\n      responses:\n        '200':\n          description: ComplexUser successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  smallIntField:\n                    type: number\n                    format: int32\n                    minimum: 10\n                    maximum: 100\n                  intField:\n                    type: number\n                    format: int32\n                    minimum: 10\n                    maximum: 100\n                  bigIntField:\n                    type: number\n                    format: int64\n                    minimum: 10\n                    maximum: 100\n                  floatField:\n                    type: number\n                    format: float\n                    minimum: 0.0\n                    maximum: 300.0\n                  doubleField:\n                    type: number\n                    format: double\n                    minimum: 0.0\n                    maximum: 123.0\n                  stringField:\n                    type: string\n                    minLength: 1\n                  boundedStringField:\n                    type: string\n                    minLength: 0\n                    maxLength: 5\n                  boolField:\n                    type: boolean\n                  dateField:\n                    type: string\n                    format: date\n                  timeField:\n                    type: string\n                    format: time\n                  dateTimeField:\n                    type: string\n                    format: date-time\n                  blobField:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n    get:\n      summary: Look up the single complexuser associated with the access token\n      security:\n      - bearerAuth: []\n      tags:\n      - ComplexUser\n      responses:\n        '302':\n          description: The single complexuser is accessible from the provided Location\n          headers:\n            Location:\n              description: The location where the single complexuser can be found\n              schema:\n                type: string\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /complex-user/{id}:\n    parameters:\n    - in: path\n      name: id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the complexuser to perform operations on\n    get:\n      summary: Look up a single complexuser\n      security:\n      - bearerAuth: []\n      tags:\n      - ComplexUser\n      responses:\n        '200':\n          description: ComplexUser details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  smallIntField:\n                    type: number\n                    format: int32\n                    minimum: 10\n                    maximum: 100\n                  intField:\n                    type: number\n                    format: int32\n                    minimum: 10\n                    maximum: 100\n                  bigIntField:\n                    type: number\n                    format: int64\n                    minimum: 10\n                    maximum: 100\n                  floatField:\n                    type: number\n                    format: float\n                    minimum: 0.0\n                    maximum: 300.0\n                  doubleField:\n                    type: number\n                    format: double\n                    minimum: 0.0\n                    maximum: 123.0\n                  stringField:\n                    type: string\n                    minLength: 1\n                  boundedStringField:\n                    type: string\n                    minLength: 0\n                    maxLength: 5\n                  boolField:\n                    type: boolean\n                  dateField:\n                    type: string\n                    format: date\n                  timeField:\n                    type: string\n                    format: time\n                  dateTimeField:\n                    type: string\n                    format: date-time\n                  blobField:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    put:\n      summary: Update a single complexuser\n      security:\n      - bearerAuth: []\n      tags:\n      - ComplexUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                smallIntField:\n                  type: number\n                  format: int32\n                  minimum: 10\n                  maximum: 100\n                intField:\n                  type: number\n                  format: int32\n                  minimum: 10\n                  maximum: 100\n                bigIntField:\n                  type: number\n                  format: int64\n                  minimum: 10\n                  maximum: 100\n                floatField:\n                  type: number\n                  format: float\n                  minimum: 0.0\n                  maximum: 300.0\n                doubleField:\n                  type: number\n                  format: double\n                  minimum: 0.0\n                  maximum: 123.0\n                stringField:\n                  type: string\n                  minLength: 1\n                boundedStringField:\n                  type: string\n                  minLength: 0\n                  maxLength: 5\n                boolField:\n                  type: boolean\n                dateField:\n                  type: string\n                  format: date\n                timeField:\n                  type: string\n                  format: time\n                dateTimeField:\n                  type: string\n                  format: date-time\n                blobField:\n                  type: string\n      responses:\n        '200':\n          description: ComplexUser successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  smallIntField:\n                    type: number\n                    format: int32\n                    minimum: 10\n                    maximum: 100\n                  intField:\n                    type: number\n                    format: int32\n                    minimum: 10\n                    maximum: 100\n                  bigIntField:\n                    type: number\n                    format: int64\n                    minimum: 10\n                    maximum: 100\n                  floatField:\n                    type: number\n                    format: float\n                    minimum: 0.0\n                    maximum: 300.0\n                  doubleField:\n                    type: number\n                    format: double\n                    minimum: 0.0\n                    maximum: 123.0\n                  stringField:\n                    type: string\n                    minLength: 1\n                  boundedStringField:\n                    type: string\n                    minLength: 0\n                    maxLength: 5\n                  boolField:\n                    type: boolean\n                  dateField:\n                    type: string\n                    format: date\n                  timeField:\n                    type: string\n                    format: time\n                  dateTimeField:\n                    type: string\n                    format: date-time\n                  blobField:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    delete:\n      summary: Delete a single complexuser\n      security:\n      - bearerAuth: []\n      tags:\n      - ComplexUser\n      responses:\n        '200':\n          description: ComplexUser successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /complex-user/{parent_id}/temple-user:\n    parameters:\n    - in: path\n      name: parent_id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the parent which owns this entity\n    post:\n      summary: Register a new templeuser\n      security:\n      - bearerAuth: []\n      tags:\n      - TempleUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                intField:\n                  type: number\n                  format: int32\n                doubleField:\n                  type: number\n                  format: double\n                stringField:\n                  type: string\n                boolField:\n                  type: boolean\n                dateField:\n                  type: string\n                  format: date\n                timeField:\n                  type: string\n                  format: time\n                dateTimeField:\n                  type: string\n                  format: date-time\n                blobField:\n                  type: string\n      responses:\n        '200':\n          description: TempleUser successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  intField:\n                    type: number\n                    format: int32\n                  doubleField:\n                    type: number\n                    format: double\n                  stringField:\n                    type: string\n                  boolField:\n                    type: boolean\n                  dateField:\n                    type: string\n                    format: date\n                  timeField:\n                    type: string\n                    format: time\n                  dateTimeField:\n                    type: string\n                    format: date-time\n                  blobField:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /complex-user/{parent_id}/temple-user/{id}:\n    parameters:\n    - in: path\n      name: id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the templeuser to perform operations on\n    - in: path\n      name: parent_id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the parent which owns this entity\n    get:\n      summary: Look up a single templeuser\n      security:\n      - bearerAuth: []\n      tags:\n      - TempleUser\n      responses:\n        '200':\n          description: TempleUser details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  intField:\n                    type: number\n                    format: int32\n                  doubleField:\n                    type: number\n                    format: double\n                  stringField:\n                    type: string\n                  boolField:\n                    type: boolean\n                  dateField:\n                    type: string\n                    format: date\n                  timeField:\n                    type: string\n                    format: time\n                  dateTimeField:\n                    type: string\n                    format: date-time\n                  blobField:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    put:\n      summary: Update a single templeuser\n      security:\n      - bearerAuth: []\n      tags:\n      - TempleUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                intField:\n                  type: number\n                  format: int32\n                doubleField:\n                  type: number\n                  format: double\n                stringField:\n                  type: string\n                boolField:\n                  type: boolean\n                dateField:\n                  type: string\n                  format: date\n                timeField:\n                  type: string\n                  format: time\n                dateTimeField:\n                  type: string\n                  format: date-time\n                blobField:\n                  type: string\n      responses:\n        '200':\n          description: TempleUser successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  intField:\n                    type: number\n                    format: int32\n                  doubleField:\n                    type: number\n                    format: double\n                  stringField:\n                    type: string\n                  boolField:\n                    type: boolean\n                  dateField:\n                    type: string\n                    format: date\n                  timeField:\n                    type: string\n                    format: time\n                  dateTimeField:\n                    type: string\n                    format: date-time\n                  blobField:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    delete:\n      summary: Delete a single templeuser\n      security:\n      - bearerAuth: []\n      tags:\n      - TempleUser\n      responses:\n        '200':\n          description: TempleUser successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /auth/register:\n    post:\n      summary: Register and get an access token\n      tags:\n      - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Email:\n                  type: string\n                  format: email\n                Password:\n                  type: string\n                  format: password\n                  minLength: 8\n                  maxLength: 64\n      responses:\n        '200':\n          description: Successful registration\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  AccessToken:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '403':\n          $ref: '#/components/responses/Error403'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /auth/login:\n    post:\n      summary: Login and get an access token\n      tags:\n      - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Email:\n                  type: string\n                  format: email\n                Password:\n                  type: string\n                  format: password\n                  minLength: 8\n                  maxLength: 64\n      responses:\n        '200':\n          description: Successful login\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  AccessToken:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  responses:\n    Error400:\n      description: Invalid request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: 'Invalid request parameters: name'\n    Error401:\n      description: Valid request but forbidden by server\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: Not authorised to create this object\n    Error403:\n      description: Valid request but server will not fulfill\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: User with this ID already exists\n    Error404:\n      description: ID not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: Object not found with ID 1\n    Error500:\n      description: The server encountered an error while serving this request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: 'Unable to reach user service: connection timeout'\n",
			"canonicalURL": "/github.com/TempleEight/temple@d30423eac2fd8f8ab276260575cd928547e059d9/-/blob/src/test/resources/project-builder-complex/api/sample-complex-project.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/TempleEight/temple/blob/d30423eac2fd8f8ab276260575cd928547e059d9/src/test/resources/project-builder-complex/api/sample-complex-project.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}