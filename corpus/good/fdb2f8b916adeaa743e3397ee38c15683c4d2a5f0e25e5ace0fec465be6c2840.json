{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sagikazarmark/todobackend-go-kit"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "internal/generated/api/todo/v1/rest/api/openapi.yaml",
			"byteSize": 6936,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    The Todo API manages a list of todo items as described by the TodoMVC backend project: http://todobackend.com\n  title: Todo API\n  version: 1.0.0\nservers:\n- url: https://todo.api/todos\n- url: http://todo.api/todos\n- url: http://localhost:8000/todos\ntags:\n- description: Manage a todo list\n  name: TodoList\npaths:\n  /todos:\n    delete:\n      operationId: deleteItems\n      responses:\n        \"204\":\n          description: Items were deleted successfully\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete all items\n      tags:\n      - TodoList\n    get:\n      operationId: listItems\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoItems'\n          description: A list of items\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List items\n      tags:\n      - TodoList\n    post:\n      operationId: addItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTodoItemRequest'\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoItem'\n          description: Item was created successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid request\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The request did not pass the business validation rules\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a new item to the list\n      tags:\n      - TodoList\n  /todos/{id}:\n    delete:\n      operationId: deleteItem\n      parameters:\n      - description: Item ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Item was successfully deleted\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete an item\n      tags:\n      - TodoList\n    get:\n      operationId: getItem\n      parameters:\n      - description: Item ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoItem'\n          description: An item\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource cannot be found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Get an item\n      tags:\n      - TodoList\n    patch:\n      operationId: updateItem\n      parameters:\n      - description: Item ID\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTodoItemRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoItem'\n          description: Item was successfully updated\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The resource cannot be found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update an existing item\n      tags:\n      - TodoList\ncomponents:\n  responses:\n    Error:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unexpected error\n    InvalidRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Invalid request\n    ValidationError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request did not pass the business validation rules\n    NotFound:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The resource cannot be found\n  schemas:\n    Error:\n      example:\n        type: about:blank\n        title: Not Found\n        status: 404\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          type: integer\n        detail:\n          type: string\n        instance:\n          type: string\n      required:\n      - type\n      type: object\n    AddTodoItemRequest:\n      example:\n        title: title\n        order: 0\n      properties:\n        title:\n          type: string\n        order:\n          type: integer\n      required:\n      - order\n      - title\n      type: object\n    TodoItem:\n      example:\n        id: id\n        completed: true\n        title: title\n        url: https://openapi-generator.tech\n        order: 0\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        completed:\n          type: boolean\n        order:\n          type: integer\n        url:\n          format: uri\n          type: string\n      required:\n      - completed\n      - id\n      - order\n      - title\n      - url\n      type: object\n    TodoItems:\n      items:\n        $ref: '#/components/schemas/TodoItem'\n      type: array\n    UpdateTodoItemRequest:\n      example:\n        completed: true\n        title: title\n        order: 0\n      properties:\n        title:\n          nullable: true\n          type: string\n        completed:\n          nullable: true\n          type: boolean\n        order:\n          nullable: true\n          type: integer\n      type: object\n",
			"canonicalURL": "/github.com/sagikazarmark/todobackend-go-kit@78d3c55d4e8def8f07e1a4a2794e76794e922538/-/blob/internal/generated/api/todo/v1/rest/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sagikazarmark/todobackend-go-kit/blob/78d3c55d4e8def8f07e1a4a2794e76794e922538/internal/generated/api/todo/v1/rest/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}