{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DGEXSolutions/osrd"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "core/openapi.yaml",
			"byteSize": 12208,
			"content": "openapi: 3.0.1\ninfo:\n  title: OSRD Core\n  description: 'OSRD backend api description.'\n  termsOfService: http://swagger.io/terms/\n  license:\n    name: GNU GPLv3\n    url: https://www.gnu.org/licenses/gpl-3.0.fr.html\n  version: 0.1.0\nservers:\n- url: http://gateway.dgexsol.fr/osrd/\n  description: Production server\n- url: http://gateway.staging.dgexsol.fr/osrd/\n  description: Staging server\ntags:\n- name: health\n  description: Check server health\n- name: pathfinding\n  description: Execute pathfinding on the infrastructure\n- name: simulation\n  description: Simulate a schedule on the infrastructure\npaths:\n  /health:\n    get:\n      tags:\n      - health\n      summary: Check server health\n      operationId: health\n      responses:\n        200:\n          description: The server is responding\n  /pathfinding/routes:\n    post:\n      tags:\n      - pathfinding\n      summary: Find a path in the route graph that passes through waypoints.\n      operationId: pathfinding_routes\n      requestBody:\n        description: Infrastructure id and waypoints\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PathfindingRequest'\n        required: true\n      responses:\n        200:\n          description: Path found\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PathfindingRoutesResult'\n        400:\n          description: The request body is invalid\n  /pathfinding/tracks:\n    post:\n      tags:\n      - pathfinding\n      summary: Find a path in the track section graph that passes through waypoints.\n      operationId: pathfinding_tracks\n      requestBody:\n        description: Infrastructure id and waypoints\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PathfindingRequest'\n        required: true\n      responses:\n        200:\n          description: Path found\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PathfindingTracksResult'\n        400:\n          description: The request body is invalid\n  /simulation:\n    post:\n      tags:\n      - simulation\n      summary: Simulate a scenario.\n      operationId: simulation\n      requestBody:\n        description: Infra id, train rolling stocks and schedules.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimulationRequest'\n        required: true\n      responses:\n        200:\n          description: List of infrastructure changes and train movements.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SimulationResult'\n        400:\n          description: The request body is invalid\ncomponents:\n  schemas:\n    Waypoint:\n      required:\n      - track_section\n      - direction\n      - offset\n      properties:\n        track_section:\n          type: string\n        direction:\n          type: string\n          enum:\n          - START_TO_STOP\n          - STOP_TO_START\n        offset:\n          type: number\n          format: double\n          minimum: 0\n    PathfindingRoutesResult:\n      required:\n      - track_sections\n      - routes\n      properties:\n        routes:\n          type: array\n          minItems: 2\n          items:\n            type: string\n        track_sections:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/TrackSectionRange'\n      example:\n       routes: [\"route_foo\", \"route_bar\"]\n       track_sections:\n       -  track_section: \"track_foo\"\n          begin_position: 4.2\n          end_position: 178.3\n    PathfindingTracksResult:\n      required:\n      - track_sections\n      properties:\n        track_sections:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/TrackSectionRange'\n      example:\n       track_sections:\n       -  track_section: \"track_foo\"\n          begin_position: 4.2\n          end_position: 178.3\n    TrackLocation:\n      required:\n      - track_section\n      - offset\n      properties:\n        track_section:\n          type: string\n        offset:\n          type: number\n          format: double\n          minimum: 0\n    TrackSectionRange:\n      required:\n      - track_section\n      - begin_position\n      - end_position\n      properties:\n        track_section:\n          type: string\n        begin_position:\n          type: number\n          format: double\n          minimum: 0\n        end_position:\n          type: number\n          format: double\n          minimum: 0\n    RollingStock:\n      required:\n      - id\n      - length\n      - mass\n      - inertia_coefficient\n      - rolling_resistance\n      - capabilities\n      - max_speed\n      - startup_time\n      - startup_acceleration\n      - comfort_acceleration\n      - timetable_gamma\n      - tractive_effort_curve\n      properties:\n        id:\n          type: string\n        length:\n          type: number\n          format: double\n          minimum: 0\n          example: 400\n        mass:\n          type: number\n          format: double\n          minimum: 0\n          example: 900000\n        inertia_coefficient:\n          type: number\n          format: double\n          minimum: 0\n          example: 1.05\n        rolling_resistance:\n          oneOf:\n          - $ref: '#/components/schemas/RollingResistanceDavis'\n          discriminator:\n            propertyName: type\n            mapping:\n              davis: '#/components/schemas/RollingResistanceDavis'\n        capabilities:\n          type: array\n          items:\n            type: string\n            enum:\n            - TVM300\n            - TVM430\n            - ETCS1\n            - ETCS2\n            - ETCS3\n            - KVB\n        max_speed:\n          type: number\n          format: double\n          minimum: 0\n          example: 80\n        startup_time:\n          type: number\n          format: double\n        startup_acceleration:\n          type: number\n          format: double\n          example: 0.05\n        comfort_acceleration:\n          type: number\n          format: double\n          example: 0.25\n        timetable_gamma:\n          type: number\n          format: double\n          example: 0.5\n        tractive_effort_curve:\n          type: array\n          items:\n            type: object\n            properties:\n              speed:\n                type: number\n                format: double\n                minimum: 0\n              max_effort:\n                type: number\n                format: double\n                minimum: 0\n            example:\n              speed: 20\n              max_effort: 400000\n    RollingResistanceDavis:\n      required:\n      - type\n      - A\n      - B\n      - C\n      properties:\n        type:\n          type: string\n        A:\n           type: number\n           format: double\n        B:\n           type: number\n           format: double\n        C:\n           type: number\n           format: double\n      example:\n        type: \"davis\"\n        A: 5400\n        B: 200\n        C: 12\n    TrainSchedule:\n      required:\n      - id\n      - rolling_stock\n      - departure_time\n      - initial_head_location\n      - initial_route\n      - initial_speed\n      - phases\n      properties:\n        id:\n          type: string\n          example: \"TrainID\"\n        rolling_stock:\n          type: string\n          example: \"RollingStockID\"\n        departure_time:\n          type: number\n          format: double\n          minimum: 0\n        initial_head_location:\n          $ref: '#/components/schemas/TrackLocation'\n        initial_route:\n          type: string\n        initial_speed:\n          type: number\n          format: double\n        phases:\n          type: array\n          items:\n            oneOf:\n            - $ref: '#/components/schemas/NavigatePhase'\n            - $ref: '#/components/schemas/StopPhase'\n            discriminator:\n              propertyName: type\n              mapping:\n                navigate: '#/components/schemas/NavigatePhase'\n                stop: '#/components/schemas/StopPhase'\n    NavigatePhase:\n      required:\n      - type\n      - routes\n      - end_location\n      - driver_sight_distance\n      properties:\n        type:\n          type: string\n          example: \"navigate\"\n        routes:\n          type: array\n          items:\n            type: string\n          example: [\"route1\", \"route2\", \"route3\"]\n        end_location:\n          $ref: '#/components/schemas/TrackLocation'\n        driver_sight_distance:\n          type: number\n          format: double\n          minimum: 0\n          example: 400\n    StopPhase:\n      required:\n      - type\n      - duration\n      properties:\n        type:\n          type: string\n          example: \"stop\"\n        duration:\n          type: number\n          format: double\n          minimum: 0\n          example: 600\n    SimulationResult:\n      oneOf:\n      - $ref: '#/components/schemas/SimulationResultRouteStatus'\n      - $ref: '#/components/schemas/SimulationResultTrainLocation'\n      - $ref: '#/components/schemas/SimulationResultSignalChange'\n      discriminator:\n        propertyName: type\n        mapping:\n          route_status: '#/components/schemas/SimulationResultRouteStatus'\n          train_location: '#/components/schemas/SimulationResultTrainLocation'\n          signal_change: '#/components/schemas/SimulationResultSignalChange'\n    SimulationResultRouteStatus:\n      required:\n      - type\n      - time\n      - id\n      - status\n      properties:\n        type:\n          type: string\n          example: \"route_status\"\n        time:\n          type: number\n          format: double\n        id:\n          type: string\n          example: \"routeID\"\n        status:\n          type: string\n          enum:\n          - FREE\n          - RESERVED\n          - OCCUPIED\n          - CONFLICT\n          - REQUESTED\n    SimulationResultTrainLocation:\n      required:\n      - type\n      - time\n      - train_name\n      - track_section\n      - offset\n      properties:\n        type:\n          type: string\n          example: \"train_location\"\n        time:\n          type: number\n          format: double\n        train_name:\n          type: string\n          example: \"trainID\"\n        track_section:\n          type: string\n          example: \"trackSectionID\"\n        offset:\n          type: number\n          format: double\n          minimum: 0\n          example: 42\n    SimulationResultSignalChange:\n      required:\n      - type\n      - time\n      - signal\n      - aspects\n      properties:\n        type:\n          type: string\n          example: \"signal_change\"\n        time:\n          type: number\n          format: double\n        signal:\n          type: string\n          example: \"signalID\"\n        aspects:\n          type: array\n          items:\n            type: string\n            example: \"AspectID\"\n    PathfindingRequest:\n      required:\n      - infra\n      - waypoints\n      properties:\n        infra:\n          type: string\n          example: \"infraID\"\n        waypoints:\n          type: array\n          minItems: 2\n          items:\n            type: array\n            minItems: 1\n            items:\n              $ref: '#/components/schemas/Waypoint'\n          example:\n            -\n              - track_section: \"track_departure\"\n                direction: \"START_TO_STOP\"\n                offset: 4.2\n              - track_section: \"track_departure_bis\"\n                direction: \"START_TO_STOP\"\n                offset: 14.2\n            -\n              - track_section: \"track_destination\"\n                direction: \"STOP_TO_START\"\n                offset: 138.32\n    SimulationRequest:\n      required:\n      - infra\n      - rolling_stocks\n      - train_schedules\n      properties:\n        infra:\n          type: string\n          example: \"infraID\"\n        rolling_stocks:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/RollingStock'\n        train_schedules:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/TrainSchedule'\n",
			"canonicalURL": "/github.com/DGEXSolutions/osrd@9c54904a5e3291aa1b9ed464e03b88714433b4f3/-/blob/core/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DGEXSolutions/osrd/blob/9c54904a5e3291aa1b9ed464e03b88714433b4f3/core/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}