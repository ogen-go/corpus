{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/aayu.mftg.as2/openapi.yaml",
			"byteSize": 85926,
			"content": "openapi: 3.0.0\ninfo:\n  title: MFT Gateway REST API\n  contact:\n    name: MFT Gateway Team\n    email: support@mftgateway.com\n  version: '1.0'\n  description: \u003e\n    This is a generated connector for [MFT REST API v1.0](https://documenter.getpostman.com/view/12285357/UV5WEe66) OpenAPI specification.\n\n    The [MFT REST API](https://documenter.getpostman.com/view/12285357/UV5WEe66)  provides a secure AS2 secured channel for such communications, and offers your company, multiple ways to upload/download files, or automate the exchange through integration mechanisms.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n  \n    Create a [MFT account](https://console.mftgateway.com/auth/register) and obtain tokens following [this guide](https://aayutechnologies.com/docs/product/mft-gateway/user-guide/).\n  x-ballerina-display:\n    label: MFT\n    iconPath: \"icon.png\"\nservers:\n  - url: https://api.mftgateway.com\n    variables: {}\npaths:\n  # Authorization\n  /authorize:\n    post:\n      tags:\n        - Authorization\n      summary: Authorize\n      description: \u003e-\n        MFT Gateway authorization end-point. After successfully authorized, you\n        will receive two tokens **api_token** and **refresh_token**. The\n        **api_token** must be included in the **Authorization** header of every\n        protected API request. The **refresh_token** can be used for\n        re-authorization process without user password by using \"Refresh Auth\n        Token\" end-point.\n      operationId: Authorize\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#21-authorize--post-authorize\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizeRequest'\n            example:\n              username: myemail@mydomain.com\n              password: Abc@1234\n        required: true\n      responses:\n        '200':\n          description: 'Successful Authorization'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAuthorizationResponse'\n              example:\n                api_token: \u003cJWT_token\u003e\n                refresh_token: \u003cJWT_token\u003e\n        '401':\n          description: 'Failed Authorization'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: 'Authentication Failed: Bad credentials'\n  /refresh-session:\n    post:\n      tags:\n        - Authorization\n      summary: Refresh Auth Token\n      description: \u003e-\n        This end-point can be used to re-authorize without entering user\n        password, by using **refresh-token** received from initial\n        authentication.\n      operationId: RefreshAuthToken\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#22-refresh--post-refresh-session\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RefreshAuthTokenRequest'\n            example:\n              username: myemail@mydomain.com\n              refreshToken: refresh_token\n        required: true\n      responses:\n        '200':\n          description: 'Successful Auth Token Refresh'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAuthorizationResponse'\n              example:\n                api_token: \u003cJWT_token\u003e\n                refresh_token: \u003cJWT_token\u003e\n        '500':\n          description: 'Failed Auth Token Refresh'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Error occurred while refreshing the user session\n      deprecated: false\n  # Submit message\n  /message/submit:\n    post:\n      tags:\n        - Sending Messages\n      summary: Send Message\n      description: \u003e-\n        Send (enqueue) an AS2 message with a single or multiple attachments.\n\n\n        Similar to the MFT Gateway web dashboard, this simply places the newly\n        submitted message into a queue, in a **queued**(to-be-sent) state; it\n        may take several seconds before the message actually gets sent out.\n\n\n        Additionally, if the actual send action fails, the message will not\n        appear under the **outbox**; and the URL previously returned in the\n        **Link** header would no longer be valid.\n\n        In such cases it is advised to check **outbox/failed** and\n        **outbox/queued** to find out the current status of the message.\n      operationId: SendMessage\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#31-send-enqueue-as2-messages--post-messagesubmit\n      security:\n        - TokenAuth: [ ]\n      parameters:\n        - name: AS2-From\n          in: header\n          description: 'Station AS2 identifier which sends the message'\n          required: true\n          schema:\n            type: string\n            example: MyStation\n        - name: AS2-To\n          in: header\n          description: 'Partner AS2 identifier which intends to receive the message'\n          required: true\n          schema:\n            type: string\n            example: MyPartner\n        - name: Subject\n          in: header\n          description: 'Subject of the message. If not specified, the default subject configured for the intended partner will be applied.'\n          required: false\n          schema:\n            type: string\n            example: Test message from MFTG API\n        - name: Attachment-Name\n          in: header\n          description: 'Name of the message attachment (Only applicable when sending a message with single attachment)'\n          required: false\n          schema:\n            type: string\n            example: Attachment.txt\n        - name: Content-Type\n          in: header\n          description: 'Content type of the message payload. For multiple attachments, content type should be **multipart/form-data** with valid form content'\n          required: true\n          schema:\n            type: string\n            example: text/plain\n      requestBody:\n        content:\n          multipart/form-data:\n            # encoding: { }\n            schema:\n              required:\n                - File\n              type: object\n              properties:\n                File:\n                  type: string\n                  format: binary\n        required: true\n      responses:\n        '202':\n          description: Accepted for Processing\n          headers:\n            link:\n              description: \u003e-\n                An absolute URL to the AS2 message which will be created after the outgoing message entry is processed.\n                Therefore the resource in this URL may not be available immediately after the response for this API call\n                is returned. It would be better to wait around 5 to 10 seconds before querying for the resource\n                represented in the **Link** header value.\n              schema:\n                type: string\n                example: \u003e-\n                  https://api.mftgateway.com/message/outbox/\u003c159599863352334660@mftgateway.com\u003e\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageSubmitResponse'\n              example:\n                message: Message queued successfully\n                as2MessageId: '\u003c16037890537199092@mftgateway.com\u003e'\n        '422':\n          description: Message submission faild (One or more invalid identifiers)\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: 'Unable to find partner with AS2 identifier: MyPartner'\n  # Inbox messages\n  /message/inbox:\n    get:\n      tags:\n        - Inbox Messages\n      summary: List Received Messages\n      description: \u003e-\n        This API endpoint can be used to list **received** messages with\n        **optional** filters as **query** parameters.\n\n\n        Following **General filters** can be applied along with other filters(primary/secondary) without any restrictions\n\n        - sortDir\n\n        - pageOffset\n\n        - pageLength\n\n        - fetchAll\n\n\n        Following **Primary filters** have higher precedence over secondary filters. If both primary and secondary filters\n        are used in the same API request, **secondary filters** will be **ignored**.\n\n        - partnerAS2Id\n\n        - stationAS2Id\n\n\n        Only one of the following **Secondary filters** can be applied per API request. If multiple secondary filters\n        are used in a single API request, only the filter with **the highest precedence** will be applied and the rest will\n        be ignored. The precedence of the secondary filters are in the listed order.\n\n        - as2MessageId\n\n        - subject\n      operationId: ListReceivedMessages\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#32-list-messages--get-messagebox\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: sortDir\n          in: query\n          description: 'Sort direction of messages'\n          required: false\n          schema:\n            type: string\n            enum: [asc, desc]\n            default: desc\n        - name: pageLength\n          in: query\n          description: 'Length of a page. An integer value greater than or equal to 1 and less than or equal to 100 is accepted.'\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 10\n        - name: pageOffset\n          in: query\n          description: 'Page offset, supports non-negative integer values'\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n        - name: stationAS2Id\n          in: query\n          description: 'AS2 identifier of the AS2 Station that received these messages'\n          required: false\n          schema:\n            type: string\n            example: test-station\n        - name: partnerAS2Id\n          in: query\n          description: 'AS2 identifier of the AS2 Partner that sent these messages'\n          required: false\n          schema:\n            type: string\n            example: test-partner\n        - name: as2MessageId\n          in: query\n          description: 'AS2 message identifier of the required AS2 message(s)'\n          required: false\n          schema:\n            type: string\n            example: '\u003c1595831212322@mftgateway.com\u003e'\n        - name: subject\n          in: query\n          description: 'Any subject string to filter messages against'\n          required: false\n          schema:\n            type: string\n            example: message subject\n        - name: fetchAll\n          in: query\n          description: 'Fetch all messages including already been \"marked as read\" within the API scope'\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Successful\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageListRetrievalResponse'\n              examples:\n                'Has messages':\n                  description: Has messages matching the provided filters\n                  value:\n                    messages:\n                      - \u003c15947211062750@mftgateway.com\u003e\n                      - \u003c15947210997311@mftgateway.com\u003e\n                      - \u003c15947210989114@mftgateway.com\u003e\n                      - \u003c15947210979767@mftgateway.com\u003e\n                      - \u003c15947210969966@mftgateway.com\u003e\n                      - \u003c15947210950640@mftgateway.com\u003e\n                      - \u003c15947210941011@mftgateway.com\u003e\n                'No messages':\n                  description: No messages matching the provided filters\n                  value:\n                    messages: []\n  /message/inbox/{as2MessageId}:\n    get:\n      tags:\n        - Inbox Messages\n      summary: Retrieve an Inbox (Received) Message\n      description: \u003e-\n        This API endpoint can be used to retrieve a **received** message with optional capability to **Mark\n        it as Read**\n      operationId: RetrieveInboxMessage\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#331-retrieve-inbox-received-message--get-messageinboxas2-message-id\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to be retrieved'\n          required: true\n          schema:\n            type: string\n            example: \u003c158719527.1469.1594924294697@as2gateway.com\u003e\n        - name: markAsRead\n          in: query\n          description: \u003e-\n            If this is set to **true**, the message will be \"marked as read\" upon retrieval.\n            Any message list queries with `fetchAll` query param set to `false`, will not return the corresponding message\n            afterwards. You can combine this and the `fetchAll` query parameter, to ensure one-time processing of\n            received messages.\n\n              *(Note that this marking will be applied only at API scope; \"marked as read\" messages may\n            still appear as unread on the MFT Gateway webapp inbox.)*\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: Successfully Retrieved\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/AS2Message'\n              example:\n                id: 10959001878639\n                as2MessageId: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\n                incoming: true\n                msgStatus: Received\n                mdnStatus: Sent Signed MDN\n                receiverAS2Id: MyStation\n                senderAS2Id: MyPartner\n                subject: AS2 Message from MyPartner\n                failures: 0\n                attachmentPaths:\n                  - 'AS2/files/MyStation/MyPartner/inbox/1594924300560-333/Attachment1.raw'\n                  - 'AS2/files/MyStation/MyPartner/inbox/1594924300560-333/Attachment2.raw'\n                compressed: false\n                signed: true\n                encrypted: true\n                mic: cxbzphztud4C6z8+lJa0R9V6uUw=, sha1\n                micMatches: false\n                transportStatusReceived: 0\n                userAgent: AdroitLogic UltraESB-X\n                timestamp: 1594924304442\n                apiFetched: true\n                transportHeaders:\n                  AS2-From: MyPartner\n                  AS2-To: MyStation\n                  User-Agent: AdroitLogic UltraESB-X\n                  Accept-Encoding: gzip\n                  Content-Transfer-Encoding: binary\n                  Message-ID: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\n                  Disposition-Notification-Options: \u003e-\n                    signed-receipt-protocol=optional,pkcs7-signature;\n                    signed-receipt-micalg=optional,sha1,md5\n                  Content-Type: \u003e-\n                    application/octet-stream; name=\"smime.p7m\";\n                    smime-type=enveloped-data\n                  Disposition-Notification-To: mystation@mymail.com\n                  AS2-Version: '1.1'\n                  Host: service.mftgateway.com\n                  From: mystation@mymail.com\n                  MIME-Version: '1.0'\n                  Subject: 'AS2 Message from: MyPartner'\n                mdnMessage:\n                  mdnId: \u003c1870054092.0.1594924307180@mftgateway.com\u003e\n                  messageId: 10959001878639\n                  as2MessageId: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\n                  disposition: automatic-action/MDN-sent-automatically; processed\n                  humanMessage: \"MDN for Message-ID: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\\r\\nFrom: MyPartner\\r\\nTo: MyStation\\r\\nReceived on: Thu Jul 16 18:31:46 UTC 2020\\r\\nStatus: processed\\r\\nComment: This is not a guarantee that the message has been completely processed or understood by the receiving translator.\\r\\nPowered by MFT Gateway\\r\\n\"\n                  rawMdnS3Key: AS2/raw-mdn/incoming/10959001878639/mdn.raw\n                  mic: cxbzphztud4C6z8+lJa0R9V6uUw=, sha1\n                  signed: true\n                  incoming: false\n                  status: Sent Signed MDN\n                  timestamp: 1594924307980\n        '404':\n          description: Message Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Message not found\n    delete:\n      tags:\n        - Inbox Messages\n      summary: Delete Inbox (Received) Message\n      description: This API endpoint can be used to delete an **inbox** message\n      operationId: DeleteInboxMessage\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to be deleted'\n          required: true\n          schema:\n            type: string\n            example: \u003c1696315973.0.1620624078702@as2gateway.com\u003e\n      responses:\n        '200':\n          description: Successfully Deleted\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageDeletionResponse'\n              example:\n                deleted: \u003c16206212538784367@mftgateway.com\u003e\n        '404':\n          description: Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Unable to find message\n  /message/inbox/{as2MessageId}/markUnread:\n    post:\n      tags:\n        - Inbox Messages\n      summary: Mark Received Message As UnRead\n      description: \u003e-\n        This end-point can be used to mark a received AS2 message as **API unread**. Please note that the result of this\n        operation will not affect the status on the MFT Gateway dashboard.\n      operationId: MarkReceivedMessageAsUnRead\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#332-mark-received-message-as-unread--post-messageinboxas2_message_idmarkunread\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: AS2 ID of the message to be marked as unread\n          required: true\n          schema:\n            type: string\n            example: \u003c1594723844328@mftgateway.com\u003e\n      responses:\n        '200':\n          description: Successfully marked as Unread\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: 'Successfully marked message \u003c1594723844329@mftgateway.com\u003e as unread'\n        '404':\n          description: Message Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Message not found\n  /message/inbox/{as2MessageId}/attachments:\n    get:\n      tags:\n        - Inbox Messages\n      summary: Retrieve Inbox (Received) Message Attachment(s)\n      description: \u003e-\n        This API endpoint can be used to retrieve pre-signed URL(s) to download attachments of a received message from\n        Amazon S3 bucket. Please note that the **validity of the S3 signed URL is limited to 10 minutes**.\n      operationId: RetrieveInboxMessageAttachments\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#334-retrieve-message-attachments\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to retrieve attachments of'\n          required: true\n          schema:\n            type: string\n            example: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\n      responses:\n        '200':\n          description: Successfully Retrieved\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAttachmentListResponse'\n              example:\n                total: 2\n                attachments:\n                  - name: Attachment1.raw\n                    url: \u003e-\n                      https://mftg-my-bucket.s3.amazonaws.com/AS2/files/MyStation/MyPartner/inbox/1594924300560-333/Attachment1.raw?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIA5ZHZSFAWLSPHUVP7%2F20200728%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20200728T110019Z\u0026X-Amz-Expires=600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDMaCXVzLWVhc3QtMSJIMEYCIQCWmQLPrM6yJuGXyfa02uwVj9nhO9TgykFYgnO7pw3PzQIhAOd2qR0LQ%2BIpU2izw%2BMcYK0R5C8UgWX3oVC%2BKzt70ZaWKuMBCOz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMOTQ3NTYzNjY5NTQ4Igx5mzeWLIVApF6w7sYqtwGpje0TL%2F3Kwj7wCI1LRmIUfKK6YUaNtzPfftPS1ZA54rfOrAV29yyJym5ZJ4BMBUL1dtclA5Uwejg%2F5m8zcBHP75DmFRKVyO1U74h%2FknuIxjh7qtObkHXf3vvD6amFCdDB1hdqBs7pk2yB93IsFRkyBJtZAU7EOaGC%2BbhCghClqEmcLsMkC5FWAoHxM%2FncSSwkdDa1VBLy3%2BRDhzPlQddhggymrGgNlYdbHIi9DUbVtB83qC2fbB4wjIqA%2BQU63wFAj3I5FFE4C6IpvPnokaVJ93h9Iegy0zVaaQjOYBG3QdyTyefc%2BJWSuVhJMk770mYyWsVcTJMUUb1FWQ%2BKL2gqlxKjJGqdyxJR9ZuX3CJC3dKQWCUeIjausiJevBW7ReeUwCJEM52tOHwNvTMSPStkV%2FHUleAhmGQ0Q%2F5x8Sz%2BHgbxlUD%2B%2FfEuJq3N4ZKt80BX%2FlKRUnmoNAub8%2BpHbZBLKZPIJQt1aBMIHNn1EdCmx4li00EXdLSYCrDTmob7Vw8SIhwOFlOxQ1qNfKmKNUwN5xNyvLgzzyavdrnJwfgq\u0026X-Amz-Signature=2972481f458e4b4aa0453264885f345fdbbb889f87fb08d8b3cb2577266d9b92\u0026X-Amz-SignedHeaders=host\n                  - name: Attachment2.raw\n                    url: \u003e-\n                      https://mftg-my-bucket.s3.amazonaws.com/AS2/files/MyStation/MyPartner/inbox/1594924300560-333/Attachment2.raw?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIA5ZHZSFAWLSPHUVP7%2F20200728%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20200728T110019Z\u0026X-Amz-Expires=600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDMaCXVzLWVhc3QtMSJIMEYCIQCWmQLPrM6yJuGXyfa02uwVj9nhO9TgykFYgnO7pw3PzQIhAOd2qR0LQ%2BIpU2izw%2BMcYK0R5C8UgWX3oVC%2BKzt70ZaWKuMBCOz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMOTQ3NTYzNjY5NTQ4Igx5mzeWLIVApF6w7sYqtwGpje0TL%2F3Kwj7wCI1LRmIUfKK6YUaNtzPfftPS1ZA54rfOrAV29yyJym5ZJ4BMBUL1dtclA5Uwejg%2F5m8zcBHP75DmFRKVyO1U74h%2FknuIxjh7qtObkHXf3vvD6amFCdDB1hdqBs7pk2yB93IsFRkyBJtZAU7EOaGC%2BbhCghClqEmcLsMkC5FWAoHxM%2FncSSwkdDa1VBLy3%2BRDhzPlQddhggymrGgNlYdbHIi9DUbVtB83qC2fbB4wjIqA%2BQU63wFAj3I5FFE4C6IpvPnokaVJ93h9Iegy0zVaaQjOYBG3QdyTyefc%2BJWSuVhJMk770mYyWsVcTJMUUb1FWQ%2BKL2gqlxKjJGqdyxJR9ZuX3CJC3dKQWCUeIjausiJevBW7ReeUwCJEM52tOHwNvTMSPStkV%2FHUleAhmGQ0Q%2F5x8Sz%2BHgbxlUD%2B%2FfEuJq3N4ZKt80BX%2FlKRUnmoNAub8%2BpHbZBLKZPIJQt1aBMIHNn1EdCmx4li00EXdLSYCrDTmob7Vw8SIhwOFlOxQ1qNfKmKNUwN5xNyvLgzzyavdrnJwfgq\u0026X-Amz-Signature=2972481f458e4b4aa0453264885f345fdbbb889f87fb08d8b3cb2577266d9b92\u0026X-Amz-SignedHeaders=host\n        '404':\n          description: Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Attachment(s) not found\n  /message/inbox/{as2MessageId}/mdn:\n    get:\n      tags:\n        - Inbox Messages\n      summary: Retrieve Inbox (Received) Message MDN\n      description: \u003e-\n        This API endpoint can be used to retrieve S3 pre-signed URL to download the MDN sent for a received message\n        from Amazon S3 bucket. Please note that the **validity of the S3 signed URL is limited 10 minutes**.\n      operationId: RetrieveInboxMessageMDN\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#335-retrieve-message-mdn\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to retrieve MDN of'\n          required: true\n          schema:\n            type: string\n            example: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\n      responses:\n        '200':\n          description: Successfully Retrieved\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMDNRetrievalResponse'\n              example:\n                url: \u003e-\n                  https://mftg-my-bucket.s3.amazonaws.com/AS2/raw-mdn/incoming/10959001878639/mdn.raw?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIA5ZHZSFAWLSPHUVP7%2F20200728%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20200728T111420Z\u0026X-Amz-Expires=600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDMaCXVzLWVhc3QtMSJIMEYCIQCWmQLPrM6yJuGXyfa02uwVj9nhO9TgykFYgnO7pw3PzQIhAOd2qR0LQ%2BIpU2izw%2BMcYK0R5C8UgWX3oVC%2BKzt70ZaWKuMBCOz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMOTQ3NTYzNjY5NTQ4Igx5mzeWLIVApF6w7sYqtwGpje0TL%2F3Kwj7wCI1LRmIUfKK6YUaNtzPfftPS1ZA54rfOrAV29yyJym5ZJ4BMBUL1dtclA5Uwejg%2F5m8zcBHP75DmFRKVyO1U74h%2FknuIxjh7qtObkHXf3vvD6amFCdDB1hdqBs7pk2yB93IsFRkyBJtZAU7EOaGC%2BbhCghClqEmcLsMkC5FWAoHxM%2FncSSwkdDa1VBLy3%2BRDhzPlQddhggymrGgNlYdbHIi9DUbVtB83qC2fbB4wjIqA%2BQU63wFAj3I5FFE4C6IpvPnokaVJ93h9Iegy0zVaaQjOYBG3QdyTyefc%2BJWSuVhJMk770mYyWsVcTJMUUb1FWQ%2BKL2gqlxKjJGqdyxJR9ZuX3CJC3dKQWCUeIjausiJevBW7ReeUwCJEM52tOHwNvTMSPStkV%2FHUleAhmGQ0Q%2F5x8Sz%2BHgbxlUD%2B%2FfEuJq3N4ZKt80BX%2FlKRUnmoNAub8%2BpHbZBLKZPIJQt1aBMIHNn1EdCmx4li00EXdLSYCrDTmob7Vw8SIhwOFlOxQ1qNfKmKNUwN5xNyvLgzzyavdrnJwfgq\u0026X-Amz-Signature=2641a9625dc0cab29702dcb67fc33ee66e0df5edfb0aa6c2c7029cc54110602f\u0026X-Amz-SignedHeaders=host\n        '404':\n          description: Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: MDN not found\n  /message/inbox/delete:\n    post:\n      tags:\n        - Inbox Messages\n      summary: Batch Delete Inbox (Received) Messages\n      description: \u003e-\n        This API endpoint can be used to delete multiple **inbox** messages as a batch operation. Endpoint supports upto\n        100 messages per API call.\n      operationId: BatchDeleteInboxMessages\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#35-batch-delete--post-messageboxdelete\n      security:\n        - TokenAuth: []\n      requestBody:\n        description: 'AS2 IDs of the messages to be deleted'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MessageBatchOperationRequest'\n            example:\n              as2MessageIds:\n                - \u003c16206212538784368@mftgateway.com\u003e\n                - \u003c16094169443904964@mftgateway.com\u003e\n        required: true\n      responses:\n        '200':\n          description: Successfully Deleted\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageBatchDeletionResponse'\n              example:\n                deleted:\n                  - \u003c16206212538784368@mftgateway.com\u003e\n                  - \u003c16094169443904964@mftgateway.com\u003e\n        '404':\n          description: Message Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Unable to find messages\n  # Outbox messages\n  /message/outbox:\n    get:\n      tags:\n        - Outbox Messages\n      summary: List Sent Messages\n      description: \u003e-\n        This API endpoint can be used to list **successfully sent** messages with\n        **optional** filters as **query** parameters.\n\n\n        Following **General filters** can be applied along with other filters(primary/secondary) without any restrictions\n\n        - sortDir\n\n        - pageOffset\n\n        - pageLength\n\n\n        Following **Primary filters** have higher precedence over secondary filters. If both primary and secondary filters\n        are used in the same API request, **secondary filters** will be **ignored**.\n\n        - partnerAS2Id\n\n        - stationAS2Id\n\n\n        Only one of the following **Secondary filters** can be applied per API request. If multiple secondary filters\n        are used in a single API request, only the filter with **the highest precedence** will be applied and the rest will\n        be ignored. The precedence of the secondary filters are in the listed order.\n\n        - as2MessageId\n\n        - subject\n      operationId: ListSentMessages\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#32-list-messages--get-messagebox\n      security:\n      - TokenAuth: []\n      parameters:\n      - name: sortDir\n        in: query\n        description: 'Sort direction of messages'\n        required: false\n        schema:\n          type: string\n          enum: [asc, desc]\n          default: desc\n      - name: pageLength\n        in: query\n        description: 'Length of a page. An integer value greater than or equal to 1 and less than or equal to 100 is accepted.'\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 100\n          default: 10\n      - name: pageOffset\n        in: query\n        description: 'Page offset, supports non-negative integer values'\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          default: 0\n      - name: stationAS2Id\n        in: query\n        description: 'AS2 identifier of the AS2 Station that sent these messages'\n        required: false\n        schema:\n          type: string\n          example: test-station\n      - name: partnerAS2Id\n        in: query\n        description: 'AS2 identifier of the AS2 Partner that received these messages'\n        required: false\n        schema:\n          type: string\n          example: test-partner\n      - name: as2MessageId\n        in: query\n        description: 'AS2 message identifier of the required AS2 message(s)'\n        required: false\n        schema:\n          type: string\n          example: '\u003c1595831212322@mftgateway.com\u003e'\n      - name: subject\n        in: query\n        description: 'Any subject string to filter messages against'\n        required: false\n        schema:\n          type: string\n          example: message subject\n      responses:\n        '200':\n          description: Successful\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageListRetrievalResponse'\n              examples:\n                'Has messages':\n                  description: Has messages matching the provided filters\n                  value:\n                    messages:\n                      - \u003c15947211062750@mftgateway.com\u003e\n                      - \u003c15947210997311@mftgateway.com\u003e\n                      - \u003c15947210989114@mftgateway.com\u003e\n                      - \u003c15947210979767@mftgateway.com\u003e\n                      - \u003c15947210969966@mftgateway.com\u003e\n                      - \u003c15947210950640@mftgateway.com\u003e\n                      - \u003c15947210941011@mftgateway.com\u003e\n                'No messages':\n                  description: No messages matching the provided filters\n                  value:\n                    messages: []\n  /message/outbox/queued:\n    get:\n      tags:\n        - Outbox Messages\n      summary: List Queued Messages\n      description: \u003e-\n        This API endpoint can be used to list **queued (pending-send)** messages with\n        **optional** filters as **query** parameters.\n\n\n        Following **General filters** can be applied along with other filters(primary/secondary) without any restrictions\n\n        - sortDir\n\n        - pageOffset\n\n        - pageLength\n\n\n        Following **Primary filters** have higher precedence over secondary filters. If both primary and secondary filters\n        are used in the same API request, **secondary filters** will be **ignored**.\n\n        - partnerAS2Id\n\n        - stationAS2Id\n\n\n        Only one of the following **Secondary filters** can be applied per API request. If multiple secondary filters\n        are used in a single API request, only the filter with **the highest precedence** will be applied and the rest will\n        be ignored. The precedence of the secondary filters are in the listed order.\n\n        - as2MessageId\n\n        - subject\n      operationId: ListQueuedMessages\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#32-list-messages--get-messagebox\n      security:\n      - TokenAuth: []\n      parameters:\n      - name: sortDir\n        in: query\n        description: 'Sort direction of messages'\n        required: false\n        schema:\n          type: string\n          enum: [asc, desc]\n          default: desc\n      - name: pageLength\n        in: query\n        description: 'Length of a page. An integer value greater than or equal to 1 and less than or equal to 100 is accepted.'\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 100\n          default: 10\n      - name: pageOffset\n        in: query\n        description: 'Page offset, supports non-negative integer values'\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          default: 0\n      - name: stationAS2Id\n        in: query\n        description: 'AS2 identifier of the AS2 Station that will be sending these messages'\n        required: false\n        schema:\n          type: string\n          example: test-station\n      - name: partnerAS2Id\n        in: query\n        description: 'AS2 identifier of the AS2 Partner that will be receiving these messages'\n        required: false\n        schema:\n          type: string\n          example: test-partner\n      - name: as2MessageId\n        in: query\n        description: 'AS2 message identifier of the required AS2 message(s)'\n        required: false\n        schema:\n          type: string\n          example: '\u003c1595831212322@mftgateway.com\u003e'\n      - name: subject\n        in: query\n        description: 'Any subject string to filter messages against'\n        required: false\n        schema:\n          type: string\n          example: message subject\n      responses:\n        '200':\n          description: Successful\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageListRetrievalResponse'\n              examples:\n                'Has messages':\n                  description: Has messages matching the provided filters\n                  value:\n                    messages:\n                      - \u003c15947211062750@mftgateway.com\u003e\n                      - \u003c15947210997311@mftgateway.com\u003e\n                      - \u003c15947210989114@mftgateway.com\u003e\n                      - \u003c15947210979767@mftgateway.com\u003e\n                      - \u003c15947210969966@mftgateway.com\u003e\n                      - \u003c15947210950640@mftgateway.com\u003e\n                      - \u003c15947210941011@mftgateway.com\u003e\n                'No messages':\n                  description: No messages matching the provided filters\n                  value:\n                    messages: []\n  /message/outbox/failed:\n    get:\n      tags:\n        - Outbox Messages\n      summary: List Failed Messages\n      description: \u003e-\n        This API endpoint can be used to list **sending failed** messages with\n        **optional** filters as **query** parameters.\n\n\n        Following **General filters** can be applied along with other filters(primary/secondary) without any restrictions\n\n        - sortDir\n\n        - pageOffset\n\n        - pageLength\n\n\n        Following **Primary filters** have higher precedence over secondary filters. If both primary and secondary filters\n        are used in the same API request, **secondary filters** will be **ignored**.\n\n        - partnerAS2Id\n\n        - stationAS2Id\n\n\n        Only one of the following **Secondary filters** can be applied per API request. If multiple secondary filters\n        are used in a single API request, only the filter with **the highest precedence** will be applied and the rest will\n        be ignored. The precedence of the secondary filters are in the listed order.\n\n        - as2MessageId\n\n        - subject\n      operationId: ListFailedMessages\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#32-list-messages--get-messagebox\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: sortDir\n          in: query\n          description: 'Sort direction of messages'\n          required: false\n          schema:\n            type: string\n            enum: [asc, desc]\n            default: desc\n        - name: pageLength\n          in: query\n          description: 'Length of a page. An integer value greater than or equal to 1 and less than or equal to 100 is accepted.'\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 10\n        - name: pageOffset\n          in: query\n          description: 'Page offset, supports non-negative integer values'\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n        - name: stationAS2Id\n          in: query\n          description: 'AS2 identifier of the AS2 Station that that was intended to sent these messages'\n          required: false\n          schema:\n            type: string\n            example: test-station\n        - name: partnerAS2Id\n          in: query\n          description: 'AS2 identifier of the AS2 Partner that was intended to receive these messages'\n          required: false\n          schema:\n            type: string\n            example: test-partner\n        - name: as2MessageId\n          in: query\n          description: 'AS2 message identifier of the required AS2 message(s)'\n          required: false\n          schema:\n            type: string\n            example: '\u003c1595831212322@mftgateway.com\u003e'\n        - name: subject\n          in: query\n          description: 'Any subject string to filter messages against'\n          required: false\n          schema:\n            type: string\n            example: message subject\n      responses:\n        '200':\n          description: Successful\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageListRetrievalResponse'\n              examples:\n                'Has messages':\n                  description: Has messages matching the provided filters\n                  value:\n                    messages:\n                      - \u003c15947211062750@mftgateway.com\u003e\n                      - \u003c15947210997311@mftgateway.com\u003e\n                      - \u003c15947210989114@mftgateway.com\u003e\n                      - \u003c15947210979767@mftgateway.com\u003e\n                      - \u003c15947210969966@mftgateway.com\u003e\n                      - \u003c15947210950640@mftgateway.com\u003e\n                      - \u003c15947210941011@mftgateway.com\u003e\n                'No messages':\n                  description: No messages matching the provided filters\n                  value:\n                    messages: []\n  /message/outbox/incomplete:\n    get:\n      tags:\n        - Outbox Messages\n      summary: List Incompleted Messages\n      description: \u003e-\n        This API endpoint can be used to list **successfully sent** messages with\n        **optional** filters as **query** parameters.\n\n\n        Following **General filters** can be applied along with other filters(primary/secondary) without any restrictions\n\n        - sortDir\n\n        - pageOffset\n\n        - pageLength\n\n\n        Following **Primary filters** have higher precedence over secondary filters. If both primary and secondary filters\n        are used in the same API request, **secondary filters** will be **ignored**.\n\n        - partnerAS2Id\n\n        - stationAS2Id\n\n\n        Only one of the following **Secondary filters** can be applied per API request. If multiple secondary filters\n        are used in a single API request, only the filter with **the highest precedence** will be applied and the rest will\n        be ignored. The precedence of the secondary filters are in the listed order.\n\n        - as2MessageId\n\n        - subject\n      operationId: ListIncompletedMessages(ComingSoon)\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#32-list-messages--get-messagebox\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: sortDir\n          in: query\n          description: 'Sort direction of messages'\n          required: false\n          schema:\n            type: string\n            enum: [asc, desc]\n            default: desc\n        - name: pageLength\n          in: query\n          description: 'Length of a page. An integer value greater than or equal to 1 and less than or equal to 100 is accepted.'\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 10\n        - name: pageOffset\n          in: query\n          description: 'Page offset, supports non-negative integer values'\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n        - name: stationAS2Id\n          in: query\n          description: 'AS2 identifier of the AS2 Station that sent these messages'\n          required: false\n          schema:\n            type: string\n            example: test-station\n        - name: partnerAS2Id\n          in: query\n          description: 'AS2 identifier of the AS2 Partner that received these messages'\n          required: false\n          schema:\n            type: string\n            example: test-partner\n        - name: as2MessageId\n          in: query\n          description: 'AS2 message identifier of the required AS2 message(s)'\n          required: false\n          schema:\n            type: string\n            example: '\u003c1595831212322@mftgateway.com\u003e'\n        - name: subject\n          in: query\n          description: 'Any subject string to filter messages against'\n          required: false\n          schema:\n            type: string\n            example: message subject\n      responses:\n        '200':\n          description: Successful\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageListRetrievalResponse'\n              examples:\n                'Has messages':\n                  description: Has messages matching the provided filters\n                  value:\n                    messages:\n                      - \u003c15947211062750@mftgateway.com\u003e\n                      - \u003c15947210997311@mftgateway.com\u003e\n                      - \u003c15947210989114@mftgateway.com\u003e\n                      - \u003c15947210979767@mftgateway.com\u003e\n                      - \u003c15947210969966@mftgateway.com\u003e\n                      - \u003c15947210950640@mftgateway.com\u003e\n                      - \u003c15947210941011@mftgateway.com\u003e\n                'No messages':\n                  description: No messages matching the provided filters\n                  value:\n                    messages: []\n  /message/outbox/{as2MessageId}:\n    get:\n      tags:\n        - Outbox Messages\n      summary: Retrieve Outbox (Sent/Queued/Failed/Incomplete) Message\n      description: \u003e-\n        This API endpoint can be used to retrieve an outbox\n        (sent/queued/failed/incomplete) message by AS2 message identifier.\n      operationId: RetrieveOutboxMessage\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#33-retrieve-message\n      security:\n        - TokenAuth: []\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to be retrieved'\n          required: true\n          schema:\n            type: string\n            example: \u003c159592985268202051@mftgateway.com\u003e\n      responses:\n        '200':\n          description: Successfully Retrieved\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/AS2Message'\n              example:\n                id: 159592985268293700\n                as2MessageId: \u003c159592985268202050@mftgateway.com\u003e\n                incoming: false\n                msgStatus: Sent\n                mdnStatus: Received; MDN Signature Verified\n                receiverAS2Id: MyPartner\n                senderAS2Id: MyStation\n                subject: Test Message from API\n                attachmentPaths:\n                  - \u003e-\n                    AS2/files/MyStation/MyPartner/outbox/1595929852764-479/Attachment.raw\n                compressed: false\n                signed: true\n                encrypted: true\n                mic: rx3QMbPGeKtkoubnmibSxBbe9Gs=, sha1\n                micMatches: true\n                transportStatusReceived: 200\n                timestamp: 1595929857954\n                apiFetched: false\n                transportHeaders:\n                  AS2-From: MyStation\n                  AS2-To: MyPartner\n                  User-Agent: MFT Gateway\n                  Disposition-Notification-To: mystation@mymail.com\n                  AS2-Version: '1.1'\n                  From: mystation@mymail.com\n                  Message-Id: \u003c159592985268202050@mftgateway.com\u003e\n                  Content-Transfer-Encoding: binary\n                  Disposition-Notification-Options: \u003e-\n                    signed-receipt-protocol=required,pkcs7-signature;\n                    signed-receipt-micalg=required,sha1,md5\n                  Subject: Test Message from API\n                  MIME-Version: '1.0'\n                  Content-Type: \u003e-\n                    application/octet-stream; name=\"smime.p7m\";\n                    smime-type=enveloped-data\n                mdnMessage:\n                  mdnId: \u003c1129007699.17286.1595929857998@as2gateway.com\u003e\n                  messageId: 159592985268293700\n                  as2MessageId: \u003c159592985268202050@mftgateway.com\u003e\n                  disposition: automatic-action/MDN-sent-automatically;processed\n                  humanMessage: \"MDN for Message-ID: \u003c159592985268202050@mftgateway.com\u003e\\r\\nFrom: MyStation\\r\\nTo: MyPartner\\r\\nReceived on: Tue Jul 28 09:50:57 UTC 2020\\r\\nStatus: processed\\r\\nComment: This is not a guarantee that the message has been completely processed or understood by the receiving translator\\r\\nPowered by the AdroitLogic UltraESB-X (https://www.adroitlogic.com)\\r\\n\"\n                  rawMdnS3Key: AS2/raw-mdn/incoming/159592985268293700/mdn.raw\n                  mic: rx3QMbPGeKtkoubnmibSxBbe9Gs=, sha1\n                  signed: true\n                  incoming: true\n                  status: Received; MDN Signature Verified\n                  timestamp: 1595929858171\n        '404':\n          description: Message Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Message not found\n    delete:\n      tags:\n        - Outbox Messages\n      summary: Delete Outbox (Sent/Queued/Failed) Message\n      description: \u003e-\n        This API endpoint can be used to delete an outbox\n        (Sent/Queued/Failed) message.\n      operationId: DeleteOutboxMessage\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#34-delete-message\n      security:\n        - TokenAuth: [ ]\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to be deleted'\n          required: true\n          schema:\n            type: string\n            example: \u003c16206212538784368@mftgateway.com\u003e\n      responses:\n        '200':\n          description: Successfully Deleted\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageDeletionResponse'\n              example:\n                deleted: \u003c16206212538784367@mftgateway.com\u003e\n        '404':\n          description: Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Unable to find message\n  /message/outbox/{as2MessageId}/attachments:\n    get:\n      tags:\n        - Outbox Messages\n      summary: Retrieve Outbox (Sent/Queued/Failed) Message Attachment(s)\n      description: \u003e-\n        This API endpoint can be used to retrieve pre-signed URL(s) to download attachments of an outbox message from\n        Amazon S3 bucket. Please note that the **validity of the S3 signed URL is limited to 10 minutes**.\n      operationId: RetrieveOutboxMessageAttachments\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#334-retrieve-message-attachments\n      security:\n        - TokenAuth: [ ]\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to retrieve attachments of'\n          required: true\n          schema:\n            type: string\n            example: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\n      responses:\n        '200':\n          description: Successfully Retrieved\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAttachmentListResponse'\n              example:\n                total: 2\n                attachments:\n                  - name: Attachment1.raw\n                    url: \u003e-\n                      https://mftg-my-bucket.s3.amazonaws.com/AS2/files/MyStation/MyPartner/outbox/1594924300560-333/Attachment1.raw?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIA5ZHZSFAWLSPHUVP7%2F20200728%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20200728T110019Z\u0026X-Amz-Expires=600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDMaCXVzLWVhc3QtMSJIMEYCIQCWmQLPrM6yJuGXyfa02uwVj9nhO9TgykFYgnO7pw3PzQIhAOd2qR0LQ%2BIpU2izw%2BMcYK0R5C8UgWX3oVC%2BKzt70ZaWKuMBCOz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMOTQ3NTYzNjY5NTQ4Igx5mzeWLIVApF6w7sYqtwGpje0TL%2F3Kwj7wCI1LRmIUfKK6YUaNtzPfftPS1ZA54rfOrAV29yyJym5ZJ4BMBUL1dtclA5Uwejg%2F5m8zcBHP75DmFRKVyO1U74h%2FknuIxjh7qtObkHXf3vvD6amFCdDB1hdqBs7pk2yB93IsFRkyBJtZAU7EOaGC%2BbhCghClqEmcLsMkC5FWAoHxM%2FncSSwkdDa1VBLy3%2BRDhzPlQddhggymrGgNlYdbHIi9DUbVtB83qC2fbB4wjIqA%2BQU63wFAj3I5FFE4C6IpvPnokaVJ93h9Iegy0zVaaQjOYBG3QdyTyefc%2BJWSuVhJMk770mYyWsVcTJMUUb1FWQ%2BKL2gqlxKjJGqdyxJR9ZuX3CJC3dKQWCUeIjausiJevBW7ReeUwCJEM52tOHwNvTMSPStkV%2FHUleAhmGQ0Q%2F5x8Sz%2BHgbxlUD%2B%2FfEuJq3N4ZKt80BX%2FlKRUnmoNAub8%2BpHbZBLKZPIJQt1aBMIHNn1EdCmx4li00EXdLSYCrDTmob7Vw8SIhwOFlOxQ1qNfKmKNUwN5xNyvLgzzyavdrnJwfgq\u0026X-Amz-Signature=2972481f458e4b4aa0453264885f345fdbbb889f87fb08d8b3cb2577266d9b92\u0026X-Amz-SignedHeaders=host\n                  - name: Attachment2.raw\n                    url: \u003e-\n                      https://mftg-my-bucket.s3.amazonaws.com/AS2/files/MyStation/MyPartner/outbox/1594924300560-333/Attachment2.raw?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIA5ZHZSFAWLSPHUVP7%2F20200728%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20200728T110019Z\u0026X-Amz-Expires=600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDMaCXVzLWVhc3QtMSJIMEYCIQCWmQLPrM6yJuGXyfa02uwVj9nhO9TgykFYgnO7pw3PzQIhAOd2qR0LQ%2BIpU2izw%2BMcYK0R5C8UgWX3oVC%2BKzt70ZaWKuMBCOz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMOTQ3NTYzNjY5NTQ4Igx5mzeWLIVApF6w7sYqtwGpje0TL%2F3Kwj7wCI1LRmIUfKK6YUaNtzPfftPS1ZA54rfOrAV29yyJym5ZJ4BMBUL1dtclA5Uwejg%2F5m8zcBHP75DmFRKVyO1U74h%2FknuIxjh7qtObkHXf3vvD6amFCdDB1hdqBs7pk2yB93IsFRkyBJtZAU7EOaGC%2BbhCghClqEmcLsMkC5FWAoHxM%2FncSSwkdDa1VBLy3%2BRDhzPlQddhggymrGgNlYdbHIi9DUbVtB83qC2fbB4wjIqA%2BQU63wFAj3I5FFE4C6IpvPnokaVJ93h9Iegy0zVaaQjOYBG3QdyTyefc%2BJWSuVhJMk770mYyWsVcTJMUUb1FWQ%2BKL2gqlxKjJGqdyxJR9ZuX3CJC3dKQWCUeIjausiJevBW7ReeUwCJEM52tOHwNvTMSPStkV%2FHUleAhmGQ0Q%2F5x8Sz%2BHgbxlUD%2B%2FfEuJq3N4ZKt80BX%2FlKRUnmoNAub8%2BpHbZBLKZPIJQt1aBMIHNn1EdCmx4li00EXdLSYCrDTmob7Vw8SIhwOFlOxQ1qNfKmKNUwN5xNyvLgzzyavdrnJwfgq\u0026X-Amz-Signature=2972481f458e4b4aa0453264885f345fdbbb889f87fb08d8b3cb2577266d9b92\u0026X-Amz-SignedHeaders=host\n        '404':\n          description: Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Attachment(s) not found\n  /message/outbox/{as2MessageId}/mdn:\n    get:\n      tags:\n        - Outbox Messages\n      summary: Retrieve Outbox (Sent/Queued/Failed) Message MDN\n      description: \u003e-\n        This API endpoint can be used to retrieve S3 pre-signed URL to download the MDN received for a sent message\n        from Amazon S3 bucket. Please note that the **validity of the S3 signed URL is limited 10 minutes**.\n      operationId: RetrieveOutboxMessageMDN\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#335-retrieve-message-mdn\n      security:\n        - TokenAuth: [ ]\n      parameters:\n        - name: as2MessageId\n          in: path\n          description: 'AS2 ID of the message to retrieve MDN of'\n          required: true\n          schema:\n            type: string\n            example: \u003c158719527.1469.1594924294698@as2gateway.com\u003e\n      responses:\n        '200':\n          description: Successfully Retrieved\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMDNRetrievalResponse'\n              example:\n                url: \u003e-\n                  https://mftg-my-bucket.s3.amazonaws.com/AS2/raw-mdn/incoming/10959001878639/mdn.raw?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASIA5ZHZSFAWLSPHUVP7%2F20200728%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20200728T111420Z\u0026X-Amz-Expires=600\u0026X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDMaCXVzLWVhc3QtMSJIMEYCIQCWmQLPrM6yJuGXyfa02uwVj9nhO9TgykFYgnO7pw3PzQIhAOd2qR0LQ%2BIpU2izw%2BMcYK0R5C8UgWX3oVC%2BKzt70ZaWKuMBCOz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMOTQ3NTYzNjY5NTQ4Igx5mzeWLIVApF6w7sYqtwGpje0TL%2F3Kwj7wCI1LRmIUfKK6YUaNtzPfftPS1ZA54rfOrAV29yyJym5ZJ4BMBUL1dtclA5Uwejg%2F5m8zcBHP75DmFRKVyO1U74h%2FknuIxjh7qtObkHXf3vvD6amFCdDB1hdqBs7pk2yB93IsFRkyBJtZAU7EOaGC%2BbhCghClqEmcLsMkC5FWAoHxM%2FncSSwkdDa1VBLy3%2BRDhzPlQddhggymrGgNlYdbHIi9DUbVtB83qC2fbB4wjIqA%2BQU63wFAj3I5FFE4C6IpvPnokaVJ93h9Iegy0zVaaQjOYBG3QdyTyefc%2BJWSuVhJMk770mYyWsVcTJMUUb1FWQ%2BKL2gqlxKjJGqdyxJR9ZuX3CJC3dKQWCUeIjausiJevBW7ReeUwCJEM52tOHwNvTMSPStkV%2FHUleAhmGQ0Q%2F5x8Sz%2BHgbxlUD%2B%2FfEuJq3N4ZKt80BX%2FlKRUnmoNAub8%2BpHbZBLKZPIJQt1aBMIHNn1EdCmx4li00EXdLSYCrDTmob7Vw8SIhwOFlOxQ1qNfKmKNUwN5xNyvLgzzyavdrnJwfgq\u0026X-Amz-Signature=2641a9625dc0cab29702dcb67fc33ee66e0df5edfb0aa6c2c7029cc54110602f\u0026X-Amz-SignedHeaders=host\n        '404':\n          description: Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: MDN not found\n  /message/outbox/delete:\n    post:\n      tags:\n        - Outbox Messages\n      summary: Batch Delete Outbox (Sent/Queued/Failed) Messages\n      description: \u003e-\n        This API endpoint can be used to delete multiple **outbox** messages as a batch operation. Endpoint supports upto\n        100 messages per API call.\n      operationId: BatchDeleteOutboxMessages\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#35-batch-delete--post-messageboxdelete\n      security:\n        - TokenAuth: [ ]\n      requestBody:\n        description: 'AS2 IDs of the messages to be deleted'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MessageBatchOperationRequest'\n            example:\n              as2MessageIds:\n                - \u003c16206212538784368@mftgateway.com\u003e\n                - \u003c16094169443904964@mftgateway.com\u003e\n        required: true\n      responses:\n        '200':\n          description: Successfully Deleted\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulMessageBatchDeletionResponse'\n              example:\n                deleted:\n                  - \u003c16206212538784368@mftgateway.com\u003e\n                  - \u003c16094169443904964@mftgateway.com\u003e\n        '404':\n          description: Message Not Found\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: Unable to find messages\n  # Certificates\n  /certificate:\n    get:\n      tags:\n        - Certificate\n      summary: List Certificates\n      description: \u003e-\n        This API endpoint can be used to list **available certificates** on the\n        MFT Gateway account.\n      operationId: ListCertificates\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#6-certificates--get-certificatecerttypetype\n      security:\n        - TokenAuth: [ ]\n      parameters:\n        - name: certType\n          in: query\n          description: 'Certificate type to filter. Allowed values: ''STATION'', ''PARTNER'', ''HTTPS'', ''PARTNER_CHAIN'' and ''HTTPS_CHAIN'' Defaults to null (all certificates)'\n          required: false\n          allowEmptyValue: true\n          schema:\n            type: string\n            enum: [STATION, PARTNER, HTTPS, PARTNER_CHAIN, HTTPS_CHAIN]\n      responses:\n        '200':\n          description: Successful Certificate List Retrieval\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulCertListRetrievalResponse'\n              examples:\n                'Without filter':\n                  description: 'Certificate list response without certType filter'\n                  value:\n                    - alias: f54967f4-23fb-4b1a-9759-ba6b94cd7922\n                      type: HTTPS\n                    - alias: 5208e1af-cd9e-4106-8cd0-04b1be74db1d\n                      type: PARTNER\n                    - alias: d710c1e7-9fe3-44fe-b68c-f5823668b698\n                      type: PARTNER\n                    - alias: 32ed186f-346e-4a7d-9b9b-562c0a510e54\n                      type: PARTNER\n                    - alias: f07b6f2e-ac1a-4499-994c-66f839671f8a\n                      type: PARTNER\n                    - alias: 48f358bb-f815-45ad-a5b8-11916ece0d88\n                      type: STATION\n                    - alias: 99f931e2-57dc-467a-805c-fbe1849b2908\n                      type: STATION\n                'With filter':\n                  description: 'Certificate list response with certType filter as ''STATION'''\n                  value:\n                    - alias: 48f358bb-f815-45ad-a5b8-11916ece0d88\n                      type: STATION\n                    - alias: 99f931e2-57dc-467a-805c-fbe1849b2908\n                      type: STATION\n  /certificate/{alias}:\n    get:\n      tags:\n        - Certificate\n      summary: Retrieve Certificate Metadata\n      description: \u003e-\n        This API endpoint can be used to retrieve the **metadata** of a certificate with the given certificate alias.\n      operationId: RetrieveCertificateMetadata\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#6-certificates--get-certificatecerttypetype\n      security:\n        - TokenAuth: [ ]\n      parameters:\n        - name: alias\n          in: path\n          description: 'Alias of the certificate to retrieve'\n          required: true\n          schema:\n            type: string\n            example: f54967f4-23fb-4b1a-9759-ba6b94cd79222\n      responses:\n        '200':\n          description: 'A certificate with given alias found'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulCertRetrievalResponse'\n              example:\n                alias: f54967f4-23fb-4b1a-9759-ba6b94cd7922\n                type: HTTPS\n                serial_number: 66c9fcf99bf8c0a39e2f0788a43e696365bca\n                subject_common_name: Amazon Root CA 1\n                subject_distinguish_name: CN=Amazon Root CA 1, O=Amazon, C=US\n                issuer_common_name: Amazon Root CA 1\n                issuer_distinguish_name: CN=Amazon Root CA 1, O=Amazon, C=US\n                valid_from: Tue May 26 00:00:00 UTC 2015\n                expiry: Sun Jan 17 00:00:00 UTC 2038\n                belongsTo:\n                  - Partner-01\n                  - Station_02\n        '404':\n          description: 'A certificate with given alias not found'\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ResponseWithMessage'\n              example:\n                message: 'Unable to find certificate with alias: f54967f4-23fb-4b1a-9759-ba6b94cd79222'\n  # Station\n  /station:\n    post:\n      tags:\n        - Station\n      summary: Create Station\n      description: \u003e-\n        This endpoint can be used to create a new station\n      operationId: CreateStation\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#4-station--post-station\n      security:\n        - TokenAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStationRequest'\n            example:\n              name: Station\n              as2Identifier: station\n              email: email1@email.com,email3@email.com,email3@email.com\n              certificate:\n                type: NEW_SELF_SIGN_CERTIFICATE\n                commonName: Certificate CN\n                password: private-key-password\n                keyLength: 2048\n                validity: 5\n                orgUnit: Organization Unit\n                orgName: Organization Name\n                city: City\n                state: State\n                country: US\n        required: true\n      responses:\n        '200':\n          description: Successfully Created\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulStationCreationResponse'\n              example:\n                message: Station created successfully\n                stationId: 555119144483082\n        '422':\n          description: Creation Failed\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/CreationErrorResponse'\n              example:\n                message: User input validation failed. Please try again\n                errors:\n                  - as2Identifier: 'Station already exists with AS2 identifier: station_as2_id'\n  # Partner\n  /partner:\n    post:\n      tags:\n        - Partner\n      summary: Create Partner\n      description: \u003e-\n        This endpoint can be used to create a new trading partner\n      operationId: CreatePartner\n      externalDocs:\n        url: https://aayutechnologies.com/docs/product/mft-gateway/rest-api-integration/#5-partner--post-partner\n      security:\n        - TokenAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePartnerRequest'\n            example:\n              name: Partner Name\n              as2Identifier: partner_as2_id\n              url: https://partner.com\n              encryptionCertificate: \u003cBase64 encoded encryption certificate\u003e\n              encryptMessage: true\n              encryptionAlgorithm: DES_EDE3_CBC\n              signMessage: true\n              signatureAlgorithm: SHA1\n              httpsCertificate: \u003cBase64 encoded SSL certificate\u003e\n              httpsChainCertificates:\n                - \u003cBase64 encoded SSL chain certificate one\u003e\n                - \u003cBase64 encoded SSL chain certificate two\u003e\n              customHeaders:\n                - headerName: \u003ccustom-header-name\u003e\n                  headerValue: \u003ccustom-header-value\u003e\n        required: true\n      responses:\n        '200':\n          description: Successfully Created\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/SuccessfulPartnerCreationResponse'\n              example:\n                message: Partner created successfully\n                partnerId: 555131984980067\n        '422':\n          description: Creation Failed\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/CreationErrorResponse'\n              example:\n                message: User input validation failed. Please try again\n                errors:\n                  - as2Identifier: 'Partner already exists with AS2 identifier: partner_as2_id'\n\ncomponents:\n  securitySchemes:\n    TokenAuth: # arbitrary name for the security scheme\n      type: apiKey\n      in: header\n      name: Authorization\n      description: 'Auth token retrieved from authorization endpoint or refresh token endpoint'\n  schemas:\n    # Common\n    ResponseWithMessage:\n      title: Response with message\n      required:\n        - message\n      type: object\n      properties:\n        message:\n          type: string\n    RequestFieldError:\n      title: Request Field Error\n      type: object\n      maxProperties: 1\n      example:\n        fieldName: Error Reason\n    CreationErrorResponse:\n       title: Creation Error Response\n       required:\n         - message\n         - errors\n       type: object\n       properties:\n         message:\n           type: string\n         errors:\n           type: array\n           items:\n             $ref: '#/components/schemas/RequestFieldError'\n           description: ''\n    # Authorize\n    AuthorizeRequest:\n      title: Authorize Request\n      required:\n        - username\n        - password\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n    SuccessfulAuthorizationResponse:\n      title: Successful Authorization Response\n      required:\n        - api_token\n        - refresh_token\n      type: object\n      properties:\n        api_token:\n          type: string\n        refresh_token:\n          type: string\n    # Refresh Auth Token\n    RefreshAuthTokenRequest:\n      title: Refresh Auth Token Request\n      required:\n        - username\n        - refreshToken\n      type: object\n      properties:\n        username:\n          type: string\n        refreshToken:\n          type: string\n    # Certificates\n    SuccessfulCertListRetrievalResponse:\n      title: Successful Certificate List Retrieval Response\n      required:\n        - alias\n        - type\n      type: array\n      items:\n        type: object\n        properties:\n          alias:\n            type: string\n          type:\n            type: string\n    SuccessfulCertRetrievalResponse:\n      title: Successful Certificate Retrieval Response\n      type: object\n      required:\n        - alias\n        - type\n        - serial_number\n        - subject_common_name\n        - subject_distinguish_name\n        - issuer_common_name\n        - issuer_distinguish_name\n        - valid_from\n        - expiry\n        - belongsTo\n      properties:\n        alias:\n          type: string\n        type:\n          type: string\n        serial_number:\n          type: string\n        subject_common_name:\n          type: string\n        subject_distinguish_name:\n          type: string\n        issuer_common_name:\n          type: string\n        issuer_distinguish_name:\n          type: string\n        valid_from:\n          type: string\n        expiry:\n          type: string\n        belongsTo:\n          type: array\n          items:\n            type: string\n          description: 'To which entities this certificate belongs to'\n    # Send message\n    SuccessfulMessageSubmitResponse:\n      title: Successful Message Submission Response\n      type: object\n      properties:\n        message:\n          type: string\n        as2MessageId:\n          type: string\n    # Message\n    AS2Message:\n      title: AS2 Message\n      required:\n        - id\n        - as2MessageId\n        - incoming\n        - msgStatus\n        - mdnStatus\n        - receiverAS2Id\n        - senderAS2Id\n        - subject\n        - failures\n        - attachmentPaths\n        - compressed\n        - signed\n        - encrypted\n        - mic\n        - micMatches\n        - transportStatusReceived\n        - userAgent\n        - timestamp\n        - apiFetched\n        - transportHeaders\n        - mdnMessage\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        as2MessageId:\n          type: string\n        incoming:\n          type: boolean\n        msgStatus:\n          type: string\n        mdnStatus:\n          type: string\n        receiverAS2Id:\n          type: string\n        senderAS2Id:\n          type: string\n        subject:\n          type: string\n        failures:\n          type: integer\n        attachmentPaths:\n          type: array\n          items:\n            type: string\n        compressed:\n          type: boolean\n        signed:\n          type: boolean\n        encrypted:\n          type: boolean\n        mic:\n          type: string\n        micMatches:\n          type: boolean\n        transportStatusReceived:\n          type: integer\n          format: int32\n        userAgent:\n          type: string\n        timestamp:\n          type: integer\n          format: int64\n        apiFetched:\n          type: boolean\n        transportHeaders:\n          $ref: '#/components/schemas/TransportHeader'\n        mdnMessage:\n          $ref: '#/components/schemas/MdnMessage'\n    TransportHeader:\n      title: Transport Header\n      required:\n        - AS2-From\n        - User-Agent\n        - Accept-Encoding\n        - Content-Transfer-Encoding\n        - Message-ID\n        - Disposition-Notification-Options\n        - AS2-To\n        - Content-Type\n        - Disposition-Notification-To\n        - AS2-Version\n        - Host\n        - From\n        - MIME-Version\n        - Subject\n      type: object\n      properties:\n        AS2-From:\n          type: string\n        User-Agent:\n          type: string\n        Accept-Encoding:\n          type: string\n        Content-Transfer-Encoding:\n          type: string\n        Message-ID:\n          type: string\n        Disposition-Notification-Options:\n          type: string\n        AS2-To:\n          type: string\n        Content-Type:\n          type: string\n        Disposition-Notification-To:\n          type: string\n        AS2-Version:\n          type: string\n        Host:\n          type: string\n        From:\n          type: string\n        MIME-Version:\n          type: string\n        Subject:\n          type: string\n    MdnMessage:\n      title: MDN Message\n      required:\n        - mdnId\n        - messageId\n        - as2MessageId\n        - disposition\n        - humanMessage\n        - rawMdnS3Key\n        - mic\n        - signed\n        - incoming\n        - status\n        - timestamp\n      type: object\n      properties:\n        mdnId:\n          type: string\n        messageId:\n          type: integer\n          format: int64\n        as2MessageId:\n          type: string\n        disposition:\n          type: string\n        humanMessage:\n          type: string\n        rawMdnS3Key:\n          type: string\n        mic:\n          type: string\n        signed:\n          type: boolean\n        incoming:\n          type: boolean\n        status:\n          type: string\n        timestamp:\n          type: integer\n          format: int64\n    Attachment:\n      title: Attachment\n      required:\n        - name\n        - url\n      type: object\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n    SuccessfulMessageListRetrievalResponse:\n      title: Successful Message List Retrieval Response\n      required:\n        - messages\n      type: object\n      properties:\n        messages:\n          type: array\n          items:\n            type: string\n          description: 'Array of AS2 IDs of the messages'\n    SuccessfulMessageDeletionResponse:\n      title: Successful Message Deletion Response\n      required:\n        - deleted\n      type: object\n      properties:\n        deleted:\n          type: string\n          description: 'AS2 ID of the deleted message'\n    SuccessfulAttachmentListResponse:\n      title: Successful Attachment List Retrieval Response\n      required:\n        - total\n        - attachments\n      type: object\n      properties:\n        total:\n          type: integer\n        attachments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Attachment'\n    SuccessfulMDNRetrievalResponse:\n      title: Successful MDN Retrieval Response\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          type: string\n    MessageBatchOperationRequest:\n      title: Message Batch Operation Request\n      required:\n        - as2MessageIds\n      type: object\n      properties:\n        as2MessageIds:\n          type: array\n          items:\n            type: string\n            maxItems: 100\n          description: 'AS2 IDs of the messages'\n    SuccessfulMessageBatchDeletionResponse:\n      title: Successful Message Batch Deletion Response\n      required:\n        - deleted\n      type: object\n      properties:\n        deleted:\n          type: array\n          items:\n            type: string\n            maxItems: 100\n          description: 'AS2 IDs of the deleted messages'\n    # Station\n    NewCertificateForStation:\n      title: New Self-Signed Certificate for Station\n      required:\n        - type\n        - commonName\n        - password\n        - keyLength\n        - validity\n      type: object\n      properties:\n        type:\n          description: Certificate configuration type\n          type: string\n          enum:\n            - NEW_SELF_SIGN_CERTIFICATE\n          default: NEW_SELF_SIGN_CERTIFICATE\n        commonName:\n          description: Certificate Common Name\n          type: string\n        password:\n          description: Private key password\n          type: string\n        keyLength:\n          description: Certificate key length\n          type: integer\n          enum:\n            - 1024\n            - 2048\n            - 4096\n          default: 2048\n        validity:\n          description: Certificate validity in years\n          type: integer\n          enum:\n            - 1\n            - 2\n            - 5\n            - 8\n            - 10\n          default: 5\n        orgUnit:\n          description: Organization unit\n          type: string\n        orgName:\n          description: Organization name\n          type: string\n        city:\n          description: City\n          type: string\n        state:\n          description: State code ISO 3166-1 alpha-2\n          type: string\n        country:\n          description: Country code ISO 3166-1 alpha-2\n          type: string\n      example:\n        type: NEW_SELF_SIGN_CERTIFICATE\n        commonName: Certificate CN\n        password: private-key-password\n        keyLength: 2048\n        validity: 5\n        orgUnit: Organization Unit\n        orgName: Organization Name\n        city: City\n        state: State\n        country: US\n    CertificateFromKeystoreForStation:\n      title: Existing Certificate from Keystore for Station\n      required:\n        - type\n        - keystore\n        - keystorePassword\n        - alias\n        - privateKeyPassword\n      type: object\n      properties:\n        type:\n          description: Certificate configuration type\n          type: string\n          enum:\n            - FROM_KEYSTORE\n          default: FROM_KEYSTORE\n        keystore:\n          description: S3 key of the existing keystore in your MFT Gateway S3 bucket\n          type: string\n        keystorePassword:\n          description: Keystore password\n          type: string\n        alias:\n          description: Certificate alias\n          type: string\n        privateKeyPassword:\n          description: Existing private key password\n          type: string\n        newPrivateKeyPassword:\n          description: New private key password. If not provided, the existing private key password will be used as new password.\n          type: string\n    CertificateFromCertStoreForStation:\n      title: Existing Certificate from Certificate Store for Station\n      required:\n        - type\n        - alias\n      type: object\n      properties:\n        type:\n          description: Certificate configuration type\n          type: string\n          enum:\n            - FROM_CERTIFICATE_STORE\n          default: FROM_CERTIFICATE_STORE\n        alias:\n          description: Existing MFT Gateway **IDENTITY** type certificate alias\n          type: string\n    CreateStationRequest:\n      title: Create Station Request\n      required:\n        - name\n        - as2Identifier\n        - email\n        - certificate\n      type: object\n      properties:\n        name:\n          type: string\n        as2Identifier:\n          type: string\n        email:\n          description: Comma separated list of emails (up to maximum of 3 emails)\n          type: string\n        certificate:\n          description: Nested JSON object with station identity certificate configuration\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/NewCertificateForStation'\n            - $ref: '#/components/schemas/CertificateFromKeystoreForStation'\n            - $ref: '#/components/schemas/CertificateFromCertStoreForStation'\n        description:\n          type: string\n        receivedMessageNotifications:\n          description: Whether to enable email notifications for received messages\n          type: boolean\n          default: false\n        failedMessageNotifications:\n          description: Whether to enable email notifications for send failures\n          type: boolean\n          default: true\n        largePayloadSupport:\n          description: Whether to receive messages with payload size larger than 3MB through static IP address (Business/Enterprise tier feature)\n          type: boolean\n          default: false\n    SuccessfulStationCreationResponse:\n      title: Successful Station Creation Response\n      required:\n        - message\n        - stationId\n      type: object\n      properties:\n        message:\n          type: string\n        stationId:\n          type: integer\n          format: int64\n    # Partner\n    CreatePartnerRequest:\n      title: Create Partner Request\n      required:\n        - name\n        - as2Identifier\n        - url\n        - encryptionCertificate\n      type: object\n      properties:\n        name:\n          type: string\n        as2Identifier:\n          type: string\n        description:\n          type: string\n        url:\n          description: Trading partner message delivery endpoint\n          type: string\n        encryptionCertificate:\n          description: \u003e-\n            **Base64 encoded** encryption certificate\n          type: string\n        encryptMessage:\n          description: Whether to encrypt outbound messages\n          type: boolean\n          default: true\n        encryptionAlgorithm:\n          description: Encryption algorithm to be used\n          type: string\n          enum:\n            - DES_EDE3_CBC\n            - AES128_CBC\n            - AES192_CBC\n            - AES256_CBC\n            - CAMELLIA128_CBC\n            - CAMELLIA192_CBC\n            - CAMELLIA256_CBC\n            - CAST5_CBC\n            - RC2_CBC\n            - SEED_CBC\n            - ECDH_SHA1KDF\n          default: DES_EDE3_CBC\n        signMessage:\n          description: Whether to sign outbound messages\n          type: boolean\n          default: true\n        signatureAlgorithm:\n          description: Signature algorithm to be used\n          type: string\n          enum:\n            - SHA1\n            - MD2\n            - MD5\n            - SHA224\n            - SHA256\n            - SHA384\n            - SHA512\n          default: SHA1\n        useDiffCertAsSignCert:\n          description: \u003e-\n            Whether to use a different certificate to verify signature of the inbound messages. If set to\n            `false`, **encryptionCertificate** will be used to validate incoming message signatures.\n          type: boolean\n          default: false\n        signatureCertificate:\n          description: \u003e-\n            Base64 encoded signature certificate (Required if **useDiffCertAsSignCert** set to `true`)\n          type: string\n        httpsCertificate:\n          description: Base64 encoded SSL certificate\n          type: string\n        encryptSignChainCertificates:\n          description: Base64 encoded encryption/sign chain certificate(s)\n          type: array\n          items:\n            type: string\n        httpsChainCertificates:\n          description: Base64 encoded SSL chain certificate(s)\n          type: array\n          items:\n            type: string\n        validateTrustAnchor:\n          description: Whether to validate trust anchor of the uploaded certificates\n          type: boolean\n          default: false\n        messageSubject:\n          description: Default message subject for trading partner\n          type: string\n          minLength: 1\n          maxLength: 128\n        compressBefore:\n          description: Whether to compress messages before encryption/sign\n          type: boolean\n          default: false\n        compressAfter:\n          description: Whether to compress messages after encryption/sign\n          type: boolean\n          default: false\n        requestMDN:\n          description: Whether to request Message Disposition Notification\n          type: boolean\n          default: true\n        requestSignedMDN:\n          description: Whether to request signed Message Disposition Notification\n          type: boolean\n          default: true\n        requestAsyncMDN:\n          description: Whether to request asynchronous Disposition Notification\n          type: boolean\n          default: false\n        useStaticIP:\n          description: Whether to use Static IP for outbound messages (Business/Enterprise tier feature)\n          type: boolean\n          default: false\n        transmissionTimeout:\n          description: Maximum waiting time (in seconds) before closing the outbound connection\n          type: integer\n          enum: [60, 120, 180, 300]\n          default: 120\n        deleteAttachmentsOnSuccessMdn:\n          description: Whether to delete Attachments from the S3 bucket when a success MDN is received\n          type: boolean\n          default: false\n        autoRetryIncompleteMessages:\n          description: \u003e-\n            Whether to auto retry incomplete messages.\n              Incomplete messages may have successfully processed by the trading partner but failed to acknowledge before\n              the configured timeout. If sets to `true` there is a possibility of duplicating outbound messages.\n          type: boolean\n          default: false\n        customHeaders:\n          description: \u003e-\n            Custom transport headers to be included in the outbound messages to this trading partner.\n              Following header names are reserved and cannot be used. 'as2-from', 'as2-to', 'as2-version',\n              'content-transfer-encoding', 'content-type', 'disposition-notification-options', 'mime-version',\n              'message-id', 'receipt-delivery-option', 'destination'\n          type: array\n          items:\n            type: object\n            required:\n              - headerName\n              - headerValue\n            properties:\n              headerName:\n                type: string\n              headerValue:\n                type: string\n    SuccessfulPartnerCreationResponse:\n      title: Successful Partner Creation Response\n      required:\n        - message\n        - partnerId\n      type: object\n      properties:\n        message:\n          type: string\n        partnerId:\n          type: integer\n          format: int64\ntags:\n  - name: Authorization\n    description: Authentication token related operations\n  - name: Sending Messages\n    description: Submitting messages for sending\n  - name: Inbox Messages\n    description: Operations related to inbox (received) messages\n  - name: Outbox Messages\n    description: Operations related to outbox (sent, queued, failed, incomplete)s messages\n  - name: Certificate\n    description: Operations related to certificate management\n  - name: Station\n    description: Operations related to station management\n  - name: Partner\n    description: Operations related to partner management",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/aayu.mftg.as2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/aayu.mftg.as2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}