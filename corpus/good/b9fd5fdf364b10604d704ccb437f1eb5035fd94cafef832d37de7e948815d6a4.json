{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GoogleCloudPlatform/emblem"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "content-api/openapi.yaml",
			"byteSize": 22705,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Emblem API\n  description: REST API for any Emblem server\n  version: '2021-09-01'\n\nservers:\n- url: https://example.com\n  description: Development server\n\npaths:\n  /approvers:\n    get:\n      summary: Returns a list of approvers\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: A JSON array of approvers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Approver'\n        '403':\n          description: Forbidden\n        '404':\n          description: not found. The path must have a typo\n        default:\n          description: Unexpected error\n\n    post:\n      summary: Create a new approver\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single approver\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Approver'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Approver'\n        '403':\n          description: Forbidden\n        '404':\n          description: approvers must have been misspelled in path\n\n  /approvers/{id}:\n    get:\n      summary: returns a single approver\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: Approver Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: JSON representation of a approver\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Approver'\n        '403':\n          description: Forbidden\n        '404':\n          description: not found\n        default:\n          description: Unexpected error\n\n    patch:\n      summary: updates a single approver\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: Approver Id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: JSON representation of a single approver\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Approver'\n      responses:\n        '201':\n          description: JSON representation of a approver\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Approver'\n        '403':\n          description: Forbidden\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n    delete:\n      summary: deletes a single approver\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: id\n          in: path\n          description: Approver Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No content\n        '403':\n          description: Forbidden\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n  /campaigns:\n    get:\n      summary: Returns a list of campaigns\n      responses:\n        '200':\n          description: A JSON array of campaigns\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Campaign'\n        '404':\n          description: not found. The path must have a typo\n        default:\n          description: Unexpected error\n\n    post:\n      summary: Create a new campaign\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single campaign\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Campaign'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n        '404':\n          description: campaigns must have been misspelled in path\n\n  /campaigns/{id}:\n    get:\n      summary: returns a single campaign\n      parameters:\n        - name: id\n          in: path\n          description: Campaign Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: JSON representation of a campaign\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n        '404':\n          description: not found\n        default:\n          description: Unexpected error\n\n    patch:\n      summary: updates a single campaign\n      parameters:\n        - name: id\n          in: path\n          description: Campaign Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single campaign\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Campaign'\n      responses:\n        '201':\n          description: JSON representation of a campaign\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n    delete:\n      summary: deletes a single campaign\n      parameters:\n        - name: id\n          in: path\n          description: Campaign Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '204':\n          description: No content\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n  /campaigns/{id}/donations:\n    get:\n      summary: lists all donations for the specified campaign\n      parameters:\n        - name: id\n          in: path\n          description: Campaign Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: JSON representation of an array of donations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Donation'\n        '404':\n          description: not found\n        default:\n          description: Unexpected error\n\n  /causes:\n    get:\n      summary: Returns a list of causes\n      responses:\n        '200':\n          description: A JSON array of causes\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Cause'\n        '404':\n          description: not found. The path must have a typo\n        default:\n          description: Unexpected error\n\n    post:\n      summary: Create a new cause\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single cause\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Cause'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cause'\n        '404':\n          description: causes must have been misspelled in path\n\n  /causes/{id}:\n    get:\n      summary: returns a single cause\n      parameters:\n        - name: id\n          in: path\n          description: Cause Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: JSON representation of a cause\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cause'\n        '404':\n          description: not found\n        default:\n          description: Unexpected error\n\n    patch:\n      summary: updates a single cause\n      parameters:\n        - name: id\n          in: path\n          description: Cause Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single cause\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Cause'\n      responses:\n        '201':\n          description: JSON representation of a cause\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cause'\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n    delete:\n      summary: deletes a single cause\n      parameters:\n        - name: id\n          in: path\n          description: Cause Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '204':\n          description: No content\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n  /donations:\n    get:\n      summary: Returns a list of donations\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: A JSON array of donations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Donation'\n        '404':\n          description: not found. The path must have a typo\n        default:\n          description: Unexpected error\n\n    post:\n      summary: Create a new donation\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single donation\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Donation'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Donation'\n        '404':\n          description: donations must have been misspelled in path\n\n  /donations/{id}:\n    get:\n      summary: returns a single donation\n      parameters:\n        - name: id\n          in: path\n          description: Donation Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: JSON representation of a donation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Donation'\n        '404':\n          description: not found\n        default:\n          description: Unexpected error\n\n    patch:\n      summary: updates a single donation\n      parameters:\n        - name: id\n          in: path\n          description: Donation Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single donation\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Donation'\n      responses:\n        '201':\n          description: JSON representation of a donation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Donation'\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n    delete:\n      summary: deletes a single donation\n      parameters:\n        - name: id\n          in: path\n          description: Donation Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '204':\n          description: No content\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n  /donors:\n    get:\n      summary: Returns a list of donors\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: A JSON array of donors\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Donor'\n        '404':\n          description: not found. The path must have a typo\n        default:\n          description: Unexpected error\n\n    post:\n      summary: Create a new donor or update existing donor with matching\n        email address. Email address should uniquely specify a donor.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single donor\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Donor'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Donor'\n        '404':\n          description: donors must have been misspelled in path\n\n  /donors/{id}:\n    get:\n      summary: returns a single donor\n      parameters:\n        - name: id\n          in: path\n          description: Donor Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: JSON representation of a donor\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Donor'\n        '404':\n          description: not found\n        default:\n          description: Unexpected error\n\n    patch:\n      summary: updates a single donor\n      parameters:\n        - name: id\n          in: path\n          description: Donor Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: JSON representation of a single donor\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Donor'\n      responses:\n        '201':\n          description: JSON representation of a donor\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Donor'\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n    delete:\n      summary: deletes a single donor\n      parameters:\n        - name: id\n          in: path\n          description: Donor Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '204':\n          description: No content\n        '404':\n          description: not found\n        '409':\n          description: Conflict. If-Match header provided does not match current contents\n        default:\n          description: Unexpected error\n\n  /donors/{id}/donations:\n    get:\n      summary: lists all donations for the specified donor\n      parameters:\n        - name: id\n          in: path\n          description: Donor Id\n          required: true\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        '201':\n          description: JSON representation of an array of donations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Donation'\n        '404':\n          description: not found\n        default:\n          description: Unexpected error\n\ncomponents:\n  schemas:\n    Approver:\n      required:\n      - email\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: unique, system-assigned identifier\n        name:\n          type: string\n          nullable: true\n          description: the display name of this Approver\n        email:\n          type: string\n          description: the Approver's email address\n        active:\n          type: boolean\n          default: false\n          description: is this approver currently active?\n        timeCreated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned creation timestamp\n        updated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned update timestamp\n        selfLink:\n          type: string\n          format: uri\n          readOnly: true\n          description: full URI of the resource\n\n    Campaign:\n      required:\n      - name\n      - cause\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: unique, system-assigned identifier\n        name:\n          type: string\n          description: the campaign's display name\n        description:\n          type: string\n          default: \"no description\"\n          description: the purpose of the campaign\n        cause:\n          type: string\n          description: the id of the Cause this campaign is for\n        managers:\n          type: array\n          default: []\n          items:\n            type: string\n            format: email\n            description: a manager's email address\n        goal:\n          type: number\n          default: 0\n          description: the fundraising goal, in USD\n        imageUrl:\n          type: string\n          format: uri\n          nullable: true\n          description: location of image to display for the campaign\n        active:\n          type: boolean\n          default: false\n          description: is this campaign accepting donations at this time?\n        timeCreated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned creation timestamp\n        updated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned update timestamp\n        selfLink:\n          type: string\n          format: uri\n          readOnly: true\n          description: full URI of the resource\n\n    Cause:\n      required:\n      - name\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: unique, system-assigned identifier\n        name:\n          type: string\n          description: the cause's display name\n        description:\n          type: string\n          default: \"no description\"\n          description: the purpose of the cause\n        imageUrl:\n          type: string\n          format: uri\n          nullable: true\n          description: location of image to display for the cause\n        active:\n          type: boolean\n          default: false\n          description: is this cause accepting donations at this time?\n        timeCreated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned creation timestamp\n        updated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned update timestamp\n        selfLink:\n          type: string\n          format: uri\n          readOnly: true\n          description: full URI of the resource\n\n    Donation:\n      required:\n      - campaign\n      - donor\n      - amount\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: unique, system-assigned identifier\n        campaign:\n          type: string\n          description: the id of the campaign this donation is for\n        donor:\n          type: string\n          description: the id of the donor this donation is from\n        amount:\n          type: number\n          description: the amount donated, in USD\n        timeCreated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned creation timestamp\n        updated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned update timestamp\n        selfLink:\n          type: string\n          format: uri\n          readOnly: true\n          description: full URI of the resource\n\n    Donor:\n      required:\n      - name\n      - email\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: unique, system-assigned identifier\n        name:\n          type: string\n          description: the display name of this donor\n        email:\n          type: string\n          description: the donor's email address\n        mailing_address:\n          type: string\n          nullable: true\n          description: the donor's physical address\n        timeCreated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned creation timestamp\n        updated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: system-assigned update timestamp\n        selfLink:\n          type: string\n          format: uri\n          readOnly: true\n          description: full URI of the resource\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/GoogleCloudPlatform/emblem@16faf3df6fc353ad511d166537779280554b4a3f/-/blob/content-api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GoogleCloudPlatform/emblem/blob/16faf3df6fc353ad511d166537779280554b4a3f/content-api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}