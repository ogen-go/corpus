{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nao-sec/tknk_scanner"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 11665,
			"content": "openapi: \"3.0.0\"\r\ninfo:\r\n  version: 1.0.0\r\n  title: tknk_scanner API\r\nservers:\r\n  - url: http://0.0.0.0/api\r\npaths:\r\n  /analyze:\r\n    post:\r\n      tags:\r\n        - analyze\r\n      requestBody:\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/conf\"\r\n      responses:\r\n        '200':\r\n          description: \"OK response\"\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/analyze_response\"\r\n        '404':\r\n          description: \"something wrong\"\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /upload:\r\n    post:\r\n      tags:\r\n        - upload\r\n      requestBody:\r\n        content:\r\n          application/exe:\r\n            schema:\r\n              type: string\r\n              format: binary\r\n              example: \r\n      responses:\r\n        '200':\r\n          description: \"OK response\"\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/upload_response\"\r\n        '404':\r\n          description: \"something wrong\"\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /download/{UUID}:\r\n    get:\r\n      tags:\r\n        - download\r\n      parameters:\r\n        - name: UUID\r\n          in: path\r\n          description: MongoDB's UUID\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: \"OK response\"\r\n          content:\r\n            application/zip:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n                example:\r\n        '404':\r\n          description: \"something wrong\"\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /results/{UUID}:  \r\n    get:\r\n      tags:\r\n        - results\r\n      parameters:\r\n        - name: UUID\r\n          in: path\r\n          description: MongoDB's UUID\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        200:\r\n          description:\r\n            Expected response to a valid request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/result_response\"\r\n        404:\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\" \r\n\r\n  /jobs:\r\n    get:\r\n      tags:\r\n        - jobs\r\n      responses:\r\n        '200':\r\n          description: Expected response to a valid request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/jobs\"\r\n        '404':\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /page/{page_num}:\r\n    get:\r\n      tags:\r\n        - results\r\n      parameters:\r\n        - name: page_num\r\n          in: path\r\n          required: true\r\n          description: The nuber of page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Expected response to a valid request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/page\"\r\n        '404':\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /yara/{rule_name}:\r\n    get:\r\n      tags:\r\n        - yara\r\n      parameters:\r\n        - name: rule_name\r\n          in: path\r\n          required: true\r\n          description: detect rule name\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Expected response to a valid request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/yara\"\r\n        '404':\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        '400':\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /search/{type}/{value}:\r\n    get:\r\n      tags:\r\n        - results\r\n      parameters:\r\n        - name: type\r\n          in: path\r\n          required: true\r\n          description: md5 or sha1 or sha256\r\n          schema:\r\n            type: string\r\n        - name: value\r\n          in: path\r\n          required: true\r\n          description: hash value\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Expected response to a valid request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/search_results\"\r\n        '404':\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"  \r\ncomponents:\r\n  schemas:\r\n    conf:\r\n      required:\r\n        - path\r\n        - mode\r\n        - time\r\n      properties:\r\n        path:\r\n          type: string\r\n          example: \"target/gandcrab.exe\"\r\n        mode:\r\n          type: string\r\n          example: \"hollows_hunter\"\r\n        time:\r\n          type: integer\r\n          format: int32\r\n          example: 20\r\n    upload_response:\r\n      properties:\r\n        status_code:\r\n          type: integer\r\n          format: int32\r\n          example: 0\r\n        path:\r\n          type: string\r\n          example: \"target/hoge.exe\"\r\n    result_response:\r\n      type: object\r\n      required:\r\n        - status_code\r\n        - result\r\n      properties:\r\n        status_code:\r\n          type: integer\r\n          format: int32\r\n          example: 0\r\n        report:\r\n          $ref: \"#/components/schemas/report\"  \r\n    report:\r\n      properties:\r\n        mode:\r\n          type: string\r\n          example: \"hollows_hunter\"\r\n        timestamp:\r\n          type: string\r\n          example: \"2018-11-23T20:42:23.749302\"\r\n        run_time:\r\n          type: integer\r\n          format: int32\r\n          example: 20\r\n        scans:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/scans\"\r\n        target_scan:\r\n            $ref: \"#/components/schemas/target_scan\"\r\n        status_code:\r\n          type: integer\r\n          format: int32\r\n          example: 0\r\n        UUID:\r\n          type: string\r\n          example: \"41ad0e99-f982-4355-abf9-b6a85078efc4\"\r\n        magic:\r\n          type: string\r\n          example: \"PE32 executable (GUI) Intel 80386, for MS Windows\"\r\n        virus_total:\r\n          type: boolean\r\n          format: int32\r\n          example: 1\r\n        avclass:\r\n          $ref: \"#/components/schemas/avclass_key\"\r\n        die:\r\n          type: string\r\n          example: \r\n            - \"PE: compiler: MASM32(8-11)[-]\"\r\n            - \"PE: linker: Microsoft Linker(12.0)[EXE32]\"\r\n    avclass_key:\r\n      type: object\r\n      properties:\r\n        flag:\r\n          type: integer\r\n          format: int32\r\n          example: 1\r\n        data:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/data\"\r\n    data:\r\n      properties:\r\n        family_name:\r\n          type: string\r\n          example: \"nymaim\"\r\n        count:\r\n          type: integer\r\n          format: int32\r\n          example: 2\r\n    target_scan:\r\n      properties:\r\n        md5:\r\n          type: string    \r\n          example: \"b45cea3d89ee2f7087e6a6180d10b494\"\r\n        sha1:\r\n          type: string\r\n          example: \"ba74895fbf97bb6d88e2ed2df0853c21b6a93a33\"\r\n        sha256:\r\n          type: string\r\n          example: \"27c064b345343c9d3152164b8ea0f777e71ce9c4bd7b79ae39fd716533dd8b49\"\r\n        detect_rule:\r\n          type: array\r\n          items:\r\n            type: string\r\n            example: \"nymaim\"\r\n        file_name:\r\n          type: string\r\n          example: \"TempuzL51.exe\"\r\n        size:\r\n          type: string\r\n          example: \"86.0KB\"\r\n    scans:\r\n      properties:\r\n        detect_rule:\r\n          type: array\r\n          items:\r\n            type: string\r\n            example: \"nymaim\"\r\n        file_name:\r\n          type: string\r\n          example: \"TempuzL51.exe\"\r\n        size:\r\n          type: string\r\n          example: \"4.1KB\"\r\n    page:\r\n      properties:\r\n        page:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/report\"\r\n        page_size:\r\n          type: integer\r\n          format: int32\r\n          example: 1\r\n    search_results:\r\n      properties:\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/report\"\r\n    jobs:\r\n      properties:\r\n        current_job:\r\n          $ref: \"#/components/schemas/current_job\"\r\n        queued_jobs:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/queued_jobs\"     \r\n    current_job:\r\n      properties:\r\n        config:\r\n            $ref: \"#/components/schemas/job_conf\"  \r\n        id:\r\n          type: string\r\n          example: \"de9e01a2-7603-4098-8503-e82742a4b2c1\"\r\n    queued_jobs:\r\n      properties:\r\n        config:\r\n          $ref: \"#/components/schemas/job_conf\"\r\n        id:\r\n          type: string\r\n          example: \"f5f5f39d-6421-4824-b724-e532704b1d83\"\r\n    job_conf:\r\n      properties:\r\n        target_file:\r\n          type: string\r\n          example: \"netwire1\"\r\n        mode:\r\n          type: string\r\n          example: \"hollows_hunter\"\r\n        time:\r\n          type: integer\r\n          format: int32\r\n          example: 20\r\n        timestamp:\r\n          type: integer\r\n          format: int32\r\n          example: 1542780044\r\n    yara:\r\n      properties:\r\n        status_code:\r\n          type: integer\r\n          format: int32\r\n          example: 0\r\n        rule:\r\n          type: string\r\n          example: \"rule Emotet\\n{\\n    meta:\\n        author = \\\"kevoreilly\\\"\\n        description = \\\"Emotet Payload\\\"\\n        cape_type = \\\"Emotet Payload\\\"\\n    strings:\\n        $snippet1 = {FF 15 ?? ?? ?? ?? 83 C4 0C 68 40 00 00 F0 6A 18}\\n        $snippet2 = {6A 13 68 01 00 01 00 FF 15 ?? ?? ?? ?? 85 C0}\\n        $snippet3 = {83 3D ?? ?? ?? ?? 00 C7 05 ?? ?? ?? ?? ?? ?? ?? ?? C7 05 ?? ?? ?? ?? ?? ?? ?? ?? 74 0A 51 E8 ?? ?? ?? ?? 83 C4 04 C3 33 C0 C3}\\n        $snippet4 = {33 C0 C7 05 ?? ?? ?? ?? ?? ?? ?? ?? C7 05 ?? ?? ?? ?? ?? ?? ?? ?? A3 ?? ?? ?? ?? A3 ?? ?? ?? ?? A3 ?? ?? ?? ?? 39 05 ?? ?? ?? ?? 74 1D 8D 49 00 40 A3 ?? ?? ?? ?? 83 3C C5 ?? ?? ?? ?? 00 75 F0 51 E8 ?? ?? ?? ?? 83 C4 04 C3}\\n    condition:\\n        //check for MZ Signature at offset 0\\n        uint16(0) == 0x5A4D and (($snippet1) and ($snippet2)) or ($snippet3) or ($snippet4)\\n}\\n\"\r\n    analyze_response:\r\n      properties:\r\n        UUID:\r\n          type: string\r\n          example: \"41ad0e99-f982-4355-abf9-b6a85078efc4\"\r\n        message:\r\n          type: string\r\n          example: \"Submission Success!\"\r\n        status_code:\r\n            type: integer\r\n            format: int32\r\n            example: 0\r\n    Error:\r\n      required:\r\n        - status_code\r\n        - message\r\n      properties:\r\n        status_code:\r\n          type: integer\r\n          format: int32\r\n          example: 2\r\n        message:\r\n          type: string",
			"canonicalURL": "/github.com/nao-sec/tknk_scanner@8459a88ecdc76656c6a5bc1af14a5cd1298d72e5/-/blob/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nao-sec/tknk_scanner/blob/8459a88ecdc76656c6a5bc1af14a5cd1298d72e5/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}