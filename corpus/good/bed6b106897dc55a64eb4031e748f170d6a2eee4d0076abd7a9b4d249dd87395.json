{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ogen-go/ogen"
		},
		"file": {
			"name": "2ch.yml",
			"size": 0,
			"path": "_testdata/positive/2ch.yml",
			"byteSize": 27164,
			"content": "openapi: 3.0.3\ninfo:\n  title: Два.ч\n  description: Открытое апи Два.ч\n  version: 1.0.29\nservers:\n  - url: 'http://127.0.0.1/'\n  - url: 'https://2ch.hk/'\n  - url: 'https://beta.2ch.hk/'\n\npaths:\n  /api/mobile/v2/boards:\n    get:\n      summary: Получение списка досок и их настроек.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Boards'\n\n  /api/mobile/v2/after/{board}/{thread}/{num}:\n    get:\n      summary: Получение постов в треде \u003e= указанного. Не рекомендуется использовать для получения треда целиком, только для проверки новых постов.\n      parameters:\n        - in: path\n          name: board\n          schema:\n            type: string\n          required: true\n          description: ID доски, например, b.\n        - in: path\n          name: thread\n          schema:\n            type: integer\n            minimum: 1\n          required: true\n          description: Номер треда.\n        - in: path\n          name: num\n          schema:\n            type: integer\n            minimum: 1\n          required: true\n          description: Номер поста.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MobileThreadPostsAfter'\n\n  /api/mobile/v2/info/{board}/{thread}:\n    get:\n      summary: Получение информации о треде.\n      parameters:\n        - in: path\n          name: board\n          schema:\n            type: string\n          required: true\n          description: ID доски, например, b.\n        - in: path\n          name: thread\n          schema:\n            type: integer\n            minimum: 1\n          required: true\n          description: Номер треда.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MobileThreadLastInfo'\n\n  /api/mobile/v2/post/{board}/{num}:\n    get:\n      summary: Получение информации о посте.\n      parameters:\n        - in: path\n          name: board\n          schema:\n            type: string\n          required: true\n          description: ID доски, например, b.\n        - in: path\n          name: num\n          schema:\n            type: integer\n            minimum: 1\n          required: true\n          description: Номер поста.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MobilePost'\n\n  /api/captcha/recaptcha/id:\n    get:\n      summary: Получение публичного ключа recaptcha v2.\n      parameters:\n        - in: query\n          name: board\n          schema:\n            type: string\n          description: ID доски, например, b.\n        - in: query\n          name: thread\n          schema:\n            type: integer\n            minimum: 1\n          description: Номер треда.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Captcha'\n\n  /api/captcha/recaptcha/mobile:\n    get:\n      summary: Получение html страницы для решения капчи, CORS отключён.\n      responses:\n        '200':\n          description: OK\n\n  /api/captcha/invisible_recaptcha/id:\n    get:\n      summary: Получение публичного ключа invisible recaptcha.\n      parameters:\n        - in: query\n          name: board\n          schema:\n            type: string\n          description: ID доски, например, b.\n        - in: query\n          name: thread\n          schema:\n            type: integer\n            minimum: 1\n          description: Номер треда.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Captcha'\n\n  /api/captcha/invisible_recaptcha/mobile:\n    get:\n      summary: Получение html страницы для решения капчи, CORS отключён.\n      responses:\n        '200':\n          description: OK\n\n  /api/captcha/2chcaptcha/id:\n    get:\n      summary: Получение ид для использования 2chcaptcha.\n      parameters:\n        - in: query\n          name: board\n          schema:\n            type: string\n          description: ID доски, например, b.\n        - in: query\n          name: thread\n          schema:\n            type: integer\n            minimum: 1\n          description: Номер треда.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Captcha'\n\n  /api/captcha/2chcaptcha/show:\n    get:\n      summary: Отображение 2chcaptcha по id.\n      parameters:\n        - in: query\n          name: id\n          schema:\n            type: string\n          description: ID капчи\n          required: true\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not found\n\n  /api/captcha/app/id/{public_key}:\n    get:\n      summary: Получение app_response_id для отправки поста.\n      description: |\n        Полученный id вам нужно отправить вместе с постом как app_response_id.\n        При этом нужно отправить app_response = sha256(app_response_id + '|' + private key).\n        Срок жизни id: 180 секунд.\n      parameters:\n        - in: path\n          name: public_key\n          schema:\n            type: string\n          required: true\n          description: Публичный ключ, для получения напишите admin@2ch.hk с темой письма \"Получение ключа для приложения\" и ссылкой на ваш клиент.\n        - in: query\n          name: board\n          schema:\n            type: string\n          description: ID доски, например, b.\n        - in: query\n          name: thread\n          schema:\n            type: integer\n            minimum: 1\n          description: Номер треда.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Captcha'\n\n  /user/posting:\n    post:\n      summary: Создание нового поста или треда.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                captcha_type:\n                  $ref: '#/components/schemas/CaptchaType'\n                board:\n                  type: string\n                thread:\n                  type: integer\n                  description: Если не указано, будет создан тред.\n                name:\n                  type: string\n                  description: Если не включено в настройках доски - поле будет проигнорировано.\n                email:\n                  type: string\n                  description: Если не включено в настройках доски - поле будет проигнорировано.\n                tags:\n                  type: string\n                  description: Если не включено в настройках доски - поле будет проигнорировано.\n                subject:\n                  type: string\n                  description: Если не включено в настройках доски - поле будет проигнорировано.\n                comment:\n                  type: string\n                icon:\n                  type: integer\n                op_mark:\n                  type: integer\n                  description: Если не включено в настройках доски - поле будет проигнорировано.\n                file[]:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n\n              required:\n                - captcha_type\n                - board\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/PostingNewThread'\n                  - $ref: '#/components/schemas/PostingNewPost'\n\n  /user/report:\n    post:\n      summary: Отправка жалобы.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                board:\n                  type: string\n                thread:\n                  type: integer\n                post:\n                  type: array\n                  items:\n                    type: integer\n                comment:\n                  type: string\n\n              required:\n                - board\n                - thread\n                - comment\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Report'\n\n  /user/passlogin:\n    post:\n      summary: Авторизация пасскода.\n      parameters:\n        - in: query\n          name: json\n          description: Параметр, указывающий что запрос выполняется не пользователем и ответ нужен в формате json.\n          schema:\n            type: integer\n            default: 1\n          required: true\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                passcode:\n                  type: string\n\n              required:\n                - passcode\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Passcode'\n\n  /api/like:\n    get:\n      summary: Добавление лайка на пост.\n      parameters:\n        - in: query\n          name: board\n          schema:\n            type: string\n          required: true\n          description: ID доски, например, b.\n        - in: query\n          name: num\n          schema:\n            type: integer\n            minimum: 1\n          required: true\n          description: Номер поста.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Like'\n\n  /api/dislike:\n    get:\n      summary: Добавление дизлайка на пост.\n      parameters:\n        - in: query\n          name: board\n          schema:\n            type: string\n          required: true\n          description: ID доски, например, b.\n        - in: query\n          name: num\n          schema:\n            type: integer\n            minimum: 1\n          required: true\n          description: Номер поста.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Like'\n\ncomponents:\n  schemas:\n    ErrorCode:\n      type: integer\n      description: |\n        * 0 NoError, ошибки нет.\n        * 403 ErrorForbidden, ошибка доступа.\n        * 666 ErrorInternal, внутренняя ошибка.\n        * 667 ErrorNotFound, используется для совместимости, если запрос не существует.\n\n        * -2 ErrorNoBoard, доска не существует.\n        * -3 ErrorNoParent, тред не существует.\n        * -31 ErrorNoPost, пост не существует.\n        * -4 ErrorNoAccess, контент существует, но у вас нет доступа.\n        * -41 ErrorBoardClosed, доска закрыта.\n        * -42 ErrorBoardOnlyVIP, доступ к доске возможен только с пасскодом.\n        * -5 ErrorCaptchaNotValid, капча не валидна.\n        * -6 ErrorBanned, вы были забанены. Сообщение содержит причину и номер бана.\n        * -7 ErrorThreadClosed, тред закрыт.\n        * -8 ErrorPostingToFast, вы постите слишком быстро ИЛИ установлен лимит на создание тредов на доске.\n        * -9 ErrorFieldTooBig, поле слишком большое. Например, комментарий превысил лимит.\n        * -10 ErrorFileSimilar, похожий файл уже был загружен.\n        * -11 ErrorFileNotSupported, файл не поддерживается.\n        * -12 ErrorFileTooBig, слишком большой файл.\n        * -13 ErrorFilesTooMuch, вы загрузили больше файлов, чем разрешено на доске.\n        * -14 ErrorTripBanned, трипкод был забанен.\n        * -15 ErrorWordBanned, в комментарии недопустимое выражение.\n        * -16 ErrorSpamList, в комментарии выражение из спамлиста.\n        * -19 ErrorEmptyOp, при создании треда необходимо загрузить файл.\n        * -20 ErrorEmptyPost, пост не может быть пустым, необходим комментарий/файл/etc.\n        * -21 ErrorPasscodeNotExist, пасскод не существует.\n        * -22 ErrorLimitReached, достигнут лимит запросов, попробуйте позже.\n        * -23 ErrorFieldTooSmall, слишком короткое сообщение. (используется в поиске).\n\n        * -50 ErrorReportTooManyPostsm, слишком много постов для жалобы.\n        * -51 ErrorReportEmpty, вы ничего не написали в жалобе.\n        * -52 ErrorReportExist, вы уже отправляли жалобу.\n\n        * -300 ErrorAppNotExist, приложение не существует или было отключено.\n        * -301 ErrorAppIDWrong, некорректный идентификатор приложения.\n        * -302 ErrorAppIDExpired, идентификатор приложения истёк.\n        * -303 ErrorAppIDSignature, неверная подпись поста с помощью идентификатора.\n        * -304 ErrorAppIDUsed, указанный идентификатор уже был использован.\n\n        * -24 ErrorWrongStickerID, некорректный идентификатор стикера.\n        * -25 ErrorStickerNotFound, стикер не найден.\n      enum:\n        - 0\n        - 403\n        - 666\n        - 667\n\n        - -2\n        - -3\n        - -31\n        - -4\n        - -41\n        - -42\n        - -5\n        - -6\n        - -7\n        - -8\n        - -9\n        - -10\n        - -11\n        - -12\n        - -13\n        - -14\n        - -15\n        - -16\n        - -19\n        - -20\n        - -21\n        - -22\n        - -23\n\n        - -300\n        - -301\n        - -302\n        - -303\n        - -304\n\n        - -24\n        - -25\n\n    Error:\n      type: object\n      description: Ошибка запроса.\n      properties:\n        code:\n          $ref: '#/components/schemas/ErrorCode'\n        message:\n          type: string\n          description: Описание ошибки на русском языке.\n\n    FileType:\n      type: integer\n      description: |\n        * 0 FileTypeNone\n        * 1 FileTypeJpg\n        * 2 FileTypePng\n        * 3 FileTypeAPng\n        * 4 FileTypeGif\n        * 5 FileTypeBmp\n        * 6 FileTypeWebm\n        * 7 FileTypeMp3, не используется в данный момент.\n        * 8 FileTypeOgg, не используется в данный момент.\n        * 10 FileTypeMp4\n        * 100 FileTypeSticker\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n        - 8\n        - 10\n        - 100\n\n    CaptchaType:\n      type: string\n      description: |\n        Каждый тип капчи так же требует дополнительные параметры для её валидации:\n        * recaptcha: g-recaptcha-response\n        * invisible_recaptcha: g-recaptcha-response\n        * recaptcha3: g-recaptcha-response\n        * 2chcaptcha: Два.ч капча\n        2chcaptcha_id - идентификатор Два.ч капчи.\n        2chcaptcha_value - строка, которую пользователь увидел на картинке.\n        * appid: app_response_id и app_response\n        app_response_id - результат запроса к этому методу с публичным ключём приложения: /api/captcha/app/id/{public_key}\n        app_response - sha256(app_response_id + '|' + private_key)\n        * passcode: cookie passcode_auth\n        * nocaptcha: капча не требуется, никакие дополнительные параметры тоже.\n      enum:\n        - recaptcha\n        - invisible_recaptcha\n        - recaptcha3\n        - 2chcaptcha\n        - appid\n        - passcode\n        - nocaptcha\n\n    File:\n      type: object\n      description: Модель файла.\n      properties:\n        name:\n          type: string\n        fullname:\n          type: string\n        displayname:\n          type: string\n        path:\n          type: string\n        thumbnail:\n          type: string\n        md5:\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n        size:\n          type: integer\n          description: Размер файла, в КБ.\n        width:\n          type: integer\n        height:\n          type: integer\n        tn_width:\n          type: integer\n        tn_height:\n          type: integer\n        nsfw:\n          type: integer\n          description: Если \u003e= 0, файл содержит NSFW контент, в данный момент реализовано не на всех досках.\n        duration:\n          type: string\n          description: В случае видео/аудио файла, содержит продолжительность в формате XX:XX:XX.\n        duration_secs:\n          type: integer\n          description: В случае видео/аудио файла, содержит продолжительность в секундах.\n        pack:\n          type: string\n          description: В случае стикера, содержит ID стикер пака.\n        sticker:\n          type: string\n          description: В случае стикера, содержит ID стикера.\n        install:\n          type: string\n          description: В случае стикера, содержит ссылку на установку.\n      required:\n        - name\n        - fullname\n        - displayname\n        - path\n        - thumbnail\n        - type\n        - size\n        - width\n        - height\n        - tn_width\n        - tn_height\n\n    Board:\n      type: object\n      description: Модель доски.\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        category:\n          type: string\n        info:\n          type: string\n          description: Информация о доске.\n        info_outer:\n          type: string\n          description: Информация о доске для главной.\n        threads_per_page:\n          type: integer\n        bump_limit:\n          type: integer\n        max_pages:\n          type: integer\n        default_name:\n          type: string\n        enable_names:\n          type: boolean\n        enable_trips:\n          type: boolean\n        enable_subject:\n          type: boolean\n        enable_sage:\n          type: boolean\n        enable_icons:\n          type: boolean\n        enable_flags:\n          type: boolean\n        enable_dices:\n          type: boolean\n        enable_shield:\n          type: boolean\n        enable_thread_tags:\n          type: boolean\n        enable_posting:\n          type: boolean\n        enable_likes:\n          type: boolean\n        enable_oekaki:\n          type: boolean\n        file_types:\n          type: array\n          items:\n            type: string\n            description: Например, webm/jpeg/png/etc.\n        max_comment:\n          type: integer\n        max_files_size:\n          type: integer\n        tags:\n          type: array\n          description: Массив тегов, которые доступны на этой доске, если они включены.\n          items:\n            type: string\n        icons:\n          type: array\n          description: Массив иконок, которые доступны на этой доске, если они включены.\n          items:\n            type: object\n            properties:\n              num:\n                type: integer\n              name:\n                type: string\n              url:\n                type: string\n      required:\n        - id\n        - name\n        - category\n        - info\n        - info_outer\n        - threads_per_page\n        - bump_limit\n        - max_pages\n        - default_name\n        - enable_names\n        - enable_trips\n        - enable_subject\n        - enable_sage\n        - enable_icons\n        - enable_flags\n        - enable_dices\n        - enable_shield\n        - enable_thread_tags\n        - enable_posting\n        - enable_likes\n        - enable_oekaki\n        - file_types\n        - max_comment\n        - max_files_size\n\n    Boards:\n      type: array\n      items:\n        $ref: '#/components/schemas/Board'\n\n    Post:\n      type: object\n      description: Модель поста.\n      properties:\n        num:\n          type: integer\n        parent:\n          type: integer\n        board:\n          type: string\n        timestamp:\n          type: integer\n        lasthit:\n          type: integer\n        date:\n          type: string\n        email:\n          type: string\n        subject:\n          type: string\n        comment:\n          type: string\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/File'\n        views:\n          type: integer\n        sticky:\n          type: integer\n        endless:\n          type: integer\n        closed:\n          type: integer\n        banned:\n          type: integer\n        op:\n          type: integer\n        name:\n          type: string\n        icon:\n          type: string\n        trip:\n          type: string\n        trip_style:\n          type: string\n        tags:\n          type: string\n        likes:\n          type: integer\n        dislikes:\n          type: integer\n      required:\n        - num\n        - parent\n        - board\n        - timestamp\n        - lasthit\n        - date\n        - comment\n        - views\n        - sticky\n        - endless\n        - closed\n        - banned\n        - op\n\n    MobileThreadPostsAfter:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n        unique_posters:\n          type: integer\n        posts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Post'\n\n    MobileThreadLastInfo:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n        thread:\n          type: object\n          properties:\n            num:\n              type: integer\n            timestamp:\n              type: integer\n            posts:\n              type: integer\n\n    MobilePost:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n        post:\n          $ref: '#/components/schemas/Post'\n\n    Captcha:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n        type:\n          $ref: '#/components/schemas/CaptchaType'\n        id:\n          type: string\n        expires:\n          type: integer\n          description: Время в секундах после которого id перестанет действовать.\n        input:\n          type: string\n          description: |\n            Тип текста, изображённого на картинке капчи. Возможные варианты:\n            * numeric - только цифры. (0123456789)\n            * english - цифры и английские буквы. (0123456789abcdefghijklmnopqrstuvwxyz)\n            * russian - цифры и русские буквы. (0123456789абвгдеёжзийклмнопрстуфхцчшщъыьэюя)\n            * all - цифры, русские и английские буквы. (0123456789abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя)\n      required:\n        - result\n        - type\n        - id\n\n    PostingNewThread:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n        thread:\n          type: integer\n          description: Номер нового треда.\n\n    PostingNewPost:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n        num:\n          type: integer\n          description: Номер нового поста.\n\n    Report:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n\n    Passcode:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n        passcode:\n          type: object\n          properties:\n            type:\n              type: string\n            expires:\n              type: integer\n\n    Like:\n      type: object\n      properties:\n        result:\n          type: integer\n        error:\n          $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/ogen-go/ogen@c32616b6ac950daeea1ef813fadd242a139e147a/-/blob/_testdata/positive/2ch.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ogen-go/ogen/blob/c32616b6ac950daeea1ef813fadd242a139e147a/_testdata/positive/2ch.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}