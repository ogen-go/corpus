{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jina-ai/api"
		},
		"file": {
			"name": "2.0.0rc8.json",
			"size": 0,
			"path": "daemon/2.0.0rc8.json",
			"byteSize": 37982,
			"content": "{\"openapi\": \"3.0.2\", \"info\": {\"title\": \"JinaD (Daemon)\", \"description\": \"REST interface for managing distributed Jina\", \"version\": \"2.0.0rc8\", \"x-logo\": {\"url\": \"https://api.jina.ai/logo/logo-product/jina-core/horizontal-layout/colored/Product%20logo_Core_vertical_colorful%402x-margin.png\"}}, \"paths\": {\"/\": {\"get\": {\"tags\": [\"daemon\"], \"summary\": \" Home\", \"description\": \"The instruction HTML when user visits `/` directly\\n\\n\\n.. #noqa: DAR201\", \"operationId\": \"_home__get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/status\": {\"get\": {\"tags\": [\"daemon\"], \"summary\": \"Get the status of the daemon\", \"operationId\": \"_status_status_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/DaemonStatus\"}}}}}}}, \"/logs/{workspace_id}/{log_id}\": {\"get\": {\"tags\": [\"logs\"], \"summary\": \" Export Logs\", \"operationId\": \"_export_logs_logs__workspace_id___log_id__get\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Workspace Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"workspace_id\", \"in\": \"path\"}, {\"required\": true, \"schema\": {\"title\": \"Log Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"log_id\", \"in\": \"path\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/peas\": {\"get\": {\"tags\": [\"peas\"], \"summary\": \"Get all alive Pea' status\", \"operationId\": \"_get_items_peas_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/StoreStatus\"}}}}}}, \"post\": {\"tags\": [\"peas\"], \"summary\": \"Create a Pea\", \"description\": \"Create a Pea and add it to the store\", \"operationId\": \"_create_peas_post\", \"requestBody\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/PeaModel\"}}}, \"required\": true}, \"responses\": {\"201\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"title\": \"Response  Create Peas Post\", \"type\": \"string\", \"format\": \"uuid\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"peas\"], \"summary\": \"Terminate all running Peas\", \"operationId\": \"_clear_all_peas_delete\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/peas/arguments\": {\"get\": {\"tags\": [\"peas\"], \"summary\": \"Get all accept arguments of a Pea\", \"operationId\": \"_fetch_pea_params_peas_arguments_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/peas/{id}\": {\"get\": {\"tags\": [\"peas\"], \"summary\": \"Get status of a running Pea\", \"operationId\": \"_status_peas__id__get\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/StoreItemStatus\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"peas\"], \"summary\": \"Terminate a running Pea\", \"description\": \"Terminate a running Pea and release its resources\", \"operationId\": \"_delete_peas__id__delete\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}, {\"required\": false, \"schema\": {\"title\": \"Workspace\", \"type\": \"boolean\", \"default\": false}, \"name\": \"workspace\", \"in\": \"query\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/pods\": {\"get\": {\"tags\": [\"pods\"], \"summary\": \"Get all alive Pods' status\", \"operationId\": \"_get_items_pods_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/StoreStatus\"}}}}}}, \"post\": {\"tags\": [\"pods\"], \"summary\": \"Create a Pod\", \"description\": \"Create a Pod and add it to the store\", \"operationId\": \"_create_pods_post\", \"requestBody\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/PodModel\"}}}, \"required\": true}, \"responses\": {\"201\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"title\": \"Response  Create Pods Post\", \"type\": \"string\", \"format\": \"uuid\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"pods\"], \"summary\": \"Terminate all running Pods\", \"operationId\": \"_clear_all_pods_delete\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/pods/arguments\": {\"get\": {\"tags\": [\"pods\"], \"summary\": \"Get all accept arguments of a Pod\", \"operationId\": \"_fetch_pod_params_pods_arguments_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/pods/{id}\": {\"get\": {\"tags\": [\"pods\"], \"summary\": \"Get status of a running Pod\", \"operationId\": \"_status_pods__id__get\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/StoreItemStatus\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"pods\"], \"summary\": \"Terminate a running Pod\", \"description\": \"Terminate a running Pod and release its resources\", \"operationId\": \"_delete_pods__id__delete\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}, {\"required\": false, \"schema\": {\"title\": \"Workspace\", \"type\": \"boolean\", \"default\": false}, \"name\": \"workspace\", \"in\": \"query\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/flows\": {\"get\": {\"tags\": [\"flows\"], \"summary\": \"Get all alive Flows' status\", \"operationId\": \"_get_items_flows_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/FlowStoreStatus\"}}}}}}, \"post\": {\"tags\": [\"flows\"], \"summary\": \"Create a Flow from a YAML config\", \"operationId\": \"_create_flows_post\", \"requestBody\": {\"content\": {\"multipart/form-data\": {\"schema\": {\"$ref\": \"#/components/schemas/Body__create_flows_post\"}}}, \"required\": true}, \"responses\": {\"201\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"title\": \"Response  Create Flows Post\", \"type\": \"string\", \"format\": \"uuid\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"flows\"], \"summary\": \"Terminate all running Flows\", \"operationId\": \"_clear_all_flows_delete\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/flows/arguments\": {\"get\": {\"tags\": [\"flows\"], \"summary\": \"Get all accept arguments of a Flow\", \"operationId\": \"_fetch_flow_params_flows_arguments_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/flows/{id}\": {\"get\": {\"tags\": [\"flows\"], \"summary\": \"Get the status of a running Flow\", \"operationId\": \"_status_flows__id__get\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/FlowItemStatus\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"put\": {\"tags\": [\"flows\"], \"summary\": \"Run an update operation on the Flow object\", \"description\": \"Types supported: \\\"rolling_update\\\" and \\\"dump\\\"\", \"operationId\": \"_update_flows__id__put\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}, {\"required\": true, \"schema\": {\"$ref\": \"#/components/schemas/UpdateOperationEnum\"}, \"name\": \"kind\", \"in\": \"query\"}, {\"required\": true, \"schema\": {\"title\": \"Dump Path\", \"type\": \"string\"}, \"name\": \"dump_path\", \"in\": \"query\"}, {\"required\": true, \"schema\": {\"title\": \"Pod Name\", \"type\": \"string\"}, \"name\": \"pod_name\", \"in\": \"query\"}, {\"required\": false, \"schema\": {\"title\": \"Shards\", \"type\": \"integer\"}, \"name\": \"shards\", \"in\": \"query\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"flows\"], \"summary\": \"Terminate a running Flow\", \"description\": \"Terminate a running Flow and release its resources\", \"operationId\": \"_delete_flows__id__delete\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}, {\"required\": false, \"schema\": {\"title\": \"Workspace\", \"type\": \"boolean\", \"default\": false}, \"name\": \"workspace\", \"in\": \"query\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/workspaces\": {\"get\": {\"tags\": [\"workspaces\"], \"summary\": \"Get all existing Workspaces' status\", \"operationId\": \"_get_items_workspaces_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/StoreStatus\"}}}}}}, \"post\": {\"tags\": [\"workspaces\"], \"summary\": \"Upload files to a workspace\", \"description\": \"Return a UUID to the workspace, which can be used later when create Pea/Pod/Flow\", \"operationId\": \"_create_workspaces_post\", \"requestBody\": {\"content\": {\"multipart/form-data\": {\"schema\": {\"$ref\": \"#/components/schemas/Body__create_workspaces_post\"}}}, \"required\": true}, \"responses\": {\"201\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"title\": \"Response  Create Workspaces Post\", \"type\": \"string\", \"format\": \"uuid\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"workspaces\"], \"summary\": \"Deleting all Workspaces\", \"operationId\": \"_clear_all_workspaces_delete\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}}}}, \"/workspaces/{id}\": {\"get\": {\"tags\": [\"workspaces\"], \"summary\": \"Get the status of an existing Workspace\", \"operationId\": \"_list_workspaces__id__get\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/StoreItemStatus\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}, \"delete\": {\"tags\": [\"workspaces\"], \"summary\": \"Deleting an existing Workspace\", \"operationId\": \"_delete_workspaces__id__delete\", \"parameters\": [{\"required\": true, \"schema\": {\"title\": \"Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"name\": \"id\", \"in\": \"path\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}}, \"components\": {\"schemas\": {\"Body__create_flows_post\": {\"title\": \"Body__create_flows_post\", \"required\": [\"flow\"], \"type\": \"object\", \"properties\": {\"flow\": {\"title\": \"Flow\", \"type\": \"string\", \"format\": \"binary\"}, \"workspace_id\": {\"title\": \"Workspace Id\", \"type\": \"string\", \"format\": \"uuid\"}}}, \"Body__create_workspaces_post\": {\"title\": \"Body__create_workspaces_post\", \"required\": [\"files\"], \"type\": \"object\", \"properties\": {\"files\": {\"title\": \"Files\", \"type\": \"array\", \"items\": {\"type\": \"string\", \"format\": \"binary\"}}, \"workspace_id\": {\"title\": \"Workspace Id\", \"type\": \"string\", \"format\": \"uuid\"}}}, \"DaemonStatus\": {\"title\": \"DaemonStatus\", \"required\": [\"jina\", \"envs\", \"peas\", \"pods\", \"flows\", \"workspaces\", \"used_memory\"], \"type\": \"object\", \"properties\": {\"jina\": {\"title\": \"Jina\", \"type\": \"object\"}, \"envs\": {\"title\": \"Envs\", \"type\": \"object\"}, \"peas\": {\"$ref\": \"#/components/schemas/StoreStatus\"}, \"pods\": {\"$ref\": \"#/components/schemas/StoreStatus\"}, \"flows\": {\"$ref\": \"#/components/schemas/FlowStoreStatus\"}, \"workspaces\": {\"$ref\": \"#/components/schemas/StoreStatus\"}, \"used_memory\": {\"title\": \"Used Memory\", \"type\": \"string\"}}}, \"FlowItemStatus\": {\"title\": \"FlowItemStatus\", \"required\": [\"time_created\", \"arguments\", \"workspace_id\", \"workdir\", \"yaml_source\"], \"type\": \"object\", \"properties\": {\"time_created\": {\"title\": \"Time Created\", \"type\": \"string\", \"format\": \"date-time\"}, \"arguments\": {\"title\": \"Arguments\", \"anyOf\": [{\"type\": \"object\"}, {\"type\": \"array\", \"items\": {}}]}, \"workspace_id\": {\"title\": \"Workspace Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"workdir\": {\"title\": \"Workdir\", \"type\": \"string\"}, \"yaml_source\": {\"title\": \"Yaml Source\", \"type\": \"string\"}}}, \"FlowStoreStatus\": {\"title\": \"FlowStoreStatus\", \"required\": [\"size\", \"time_created\", \"time_updated\", \"num_add\", \"num_del\", \"items\"], \"type\": \"object\", \"properties\": {\"size\": {\"title\": \"Size\", \"type\": \"integer\"}, \"time_created\": {\"title\": \"Time Created\", \"type\": \"string\", \"format\": \"date-time\"}, \"time_updated\": {\"title\": \"Time Updated\", \"type\": \"string\", \"format\": \"date-time\"}, \"num_add\": {\"title\": \"Num Add\", \"type\": \"integer\"}, \"num_del\": {\"title\": \"Num Del\", \"type\": \"integer\"}, \"items\": {\"title\": \"Items\", \"type\": \"object\", \"additionalProperties\": {\"$ref\": \"#/components/schemas/FlowItemStatus\"}}}}, \"HTTPValidationError\": {\"title\": \"HTTPValidationError\", \"type\": \"object\", \"properties\": {\"detail\": {\"title\": \"Detail\", \"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"}}}}, \"PeaModel\": {\"title\": \"PeaModel\", \"type\": \"object\", \"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\", \"description\": \"\\nThe name of this object.\\n\\nThis will be used in the following places:\\n- how you refer to this object in Python/YAML/CLI\\n- visualization\\n- log message header\\n- ...\\n\\nWhen not given, then the default naming strategy will apply. \\n                    \"}, \"workspace\": {\"title\": \"Workspace\", \"type\": \"string\", \"description\": \"The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.\"}, \"log_config\": {\"title\": \"Log Config\", \"type\": \"string\", \"description\": \"The YAML config of the logger used in this object.\", \"default\": \"/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/jina/resources/logging.default.yml\"}, \"quiet\": {\"title\": \"Quiet\", \"type\": \"boolean\", \"description\": \"If set, then no log will be emitted from this object.\", \"default\": false}, \"quiet_error\": {\"title\": \"Quiet Error\", \"type\": \"boolean\", \"description\": \"If set, then exception stack information will not be added to the log\", \"default\": false}, \"port_ctrl\": {\"title\": \"Port Ctrl\", \"type\": \"integer\", \"description\": \"The port for controlling the runtime, default a random port between [49152, 65535]\", \"example\": 45817}, \"ctrl_with_ipc\": {\"title\": \"Ctrl With Ipc\", \"type\": \"boolean\", \"description\": \"If set, use ipc protocol for control socket\", \"default\": false}, \"timeout_ctrl\": {\"title\": \"Timeout Ctrl\", \"type\": \"integer\", \"description\": \"The timeout in milliseconds of the control request, -1 for waiting forever\", \"default\": 5000}, \"ssh_server\": {\"title\": \"Ssh Server\", \"type\": \"string\", \"description\": \"The SSH server through which the tunnel will be created, can actually be a fully specified `user@server:port` ssh url.\"}, \"ssh_keyfile\": {\"title\": \"Ssh Keyfile\", \"type\": \"string\", \"description\": \"This specifies a key to be used in ssh login, default None. regular default ssh keys will be used without specifying this argument.\"}, \"ssh_password\": {\"title\": \"Ssh Password\", \"type\": \"string\", \"description\": \"The ssh password to the ssh server.\"}, \"uses\": {\"title\": \"Uses\", \"type\": \"string\", \"description\": \"\\n        The config of the executor, it could be one of the followings:\\n        * an Executor-level YAML file path (.yml, .yaml, .jaml)\\n        * a docker image (must start with `docker://`)\\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\\n        * the string literal of a JSON config\\n        \\n        When use it under Python, one can use the following values additionally:\\n        - a Python dict that represents the config\\n        - a text file stream has `.read()` interface\\n        \", \"default\": \"BaseExecutor\"}, \"py_modules\": {\"title\": \"Py Modules\", \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"\\nThe customized python modules need to be imported before loading the executor\\n\\nNote, when importing multiple files and there is a dependency between them, then one has to write the dependencies in\\nreverse order. That is, if `__init__.py` depends on `A.py`, which again depends on `B.py`, then you need to write:\\n\\n--py-modules __init__.py --py-modules B.py --py-modules A.py\\n\\n\"}, \"port_in\": {\"title\": \"Port In\", \"type\": \"integer\", \"description\": \"The port for input data, default a random port between [49152, 65535]\", \"example\": 42945}, \"port_out\": {\"title\": \"Port Out\", \"type\": \"integer\", \"description\": \"The port for output data, default a random port between [49152, 65535]\", \"example\": 47841}, \"host_in\": {\"title\": \"Host In\", \"type\": \"string\", \"description\": \"The host address for input, by default it is 0.0.0.0\", \"default\": \"0.0.0.0\"}, \"host_out\": {\"title\": \"Host Out\", \"type\": \"string\", \"description\": \"The host address for output, by default it is 0.0.0.0\", \"default\": \"0.0.0.0\"}, \"socket_in\": {\"title\": \"Socket In\", \"type\": \"string\", \"description\": \"The socket type for input port\", \"default\": \"PULL_BIND\"}, \"socket_out\": {\"title\": \"Socket Out\", \"type\": \"string\", \"description\": \"The socket type for output port\", \"default\": \"PUSH_BIND\"}, \"memory_hwm\": {\"title\": \"Memory Hwm\", \"type\": \"integer\", \"description\": \"The memory high watermark of this pod in Gigabytes, pod will restart when this is reached. -1 means no restriction\", \"default\": -1}, \"on_error_strategy\": {\"title\": \"On Error Strategy\", \"type\": \"string\", \"description\": \"\\nThe skip strategy on exceptions.\\n\\n- IGNORE: Ignore it, keep running all Executors in the sequel flow\\n- SKIP_HANDLE: Skip all Executors in the sequel, only `pre_hook` and `post_hook` are called\\n- THROW_EARLY: Immediately throw the exception, the sequel flow will not be running at all\\n\\nNote, `IGNORE`, `SKIP_EXECUTOR` and `SKIP_HANDLE` do not guarantee the success execution in the sequel flow. If something\\nis wrong in the upstream, it is hard to carry this exception and moving forward without any side-effect.\\n\", \"default\": \"IGNORE\"}, \"uses_internal\": {\"title\": \"Uses Internal\", \"type\": \"string\", \"description\": \"\\nThe config runs inside the Docker container. \\n\\nSyntax and function are the same as `--uses`. This is designed when `--uses=\\\"docker://...\\\"` this config is passed to \\nthe Docker container.\\n\", \"default\": \"BaseExecutor\"}, \"entrypoint\": {\"title\": \"Entrypoint\", \"type\": \"string\", \"description\": \"The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.\"}, \"docker_kwargs\": {\"title\": \"Docker Kwargs\", \"type\": \"object\", \"description\": \"\\nDictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\\ncontainer. \\n\\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/\\n\\n\"}, \"pull_latest\": {\"title\": \"Pull Latest\", \"type\": \"boolean\", \"description\": \"Pull the latest image before running\", \"default\": false}, \"volumes\": {\"title\": \"Volumes\", \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"\\nThe path on the host to be mounted inside the container. \\n\\nNote, \\n- If separated by `:`, then the first part will be considered as the local host path and the second part is the path in the container system. \\n- If no split provided, then the basename of that directory will be mounted into container's root path, e.g. `--volumes=\\\"/user/test/my-workspace\\\"` will be mounted into `/my-workspace` inside the container. \\n- All volumes are mounted with read-write mode.\\n\"}, \"host\": {\"title\": \"Host\", \"type\": \"string\", \"description\": \"The host address of the runtime, by default it is 0.0.0.0.\", \"default\": \"0.0.0.0\"}, \"port_expose\": {\"title\": \"Port Expose\", \"type\": \"integer\", \"description\": \"The port of the host exposed to the public\", \"example\": 34931}, \"proxy\": {\"title\": \"Proxy\", \"type\": \"boolean\", \"description\": \"If set, respect the http_proxy and https_proxy environment variables. otherwise, it will unset these proxy variables before start. gRPC seems to prefer no proxy\", \"default\": false}, \"quiet_remote_logs\": {\"title\": \"Quiet Remote Logs\", \"type\": \"boolean\", \"description\": \"Do not display the streaming of remote logs on local console\", \"default\": false}, \"upload_files\": {\"title\": \"Upload Files\", \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"\\nThe files on the host to be uploaded to the remote\\nworkspace. This can be useful when your Pod has more\\nfile dependencies beyond a single YAML file, e.g.\\nPython files, data files.\\n\\nNote,\\n- currently only flatten structure is supported, which means if you upload `[./foo/a.py, ./foo/b.pp, ./bar/c.yml]`, then they will be put under the _same_ workspace on the remote, losing all hierarchies.\\n- by default, `--uses` YAML file is always uploaded.\\n- uploaded files are by default isolated across the runs. To ensure files are submitted to the same workspace across different runs, use `--workspace-id` to specify the workspace.\\n\"}, \"workspace_id\": {\"title\": \"Workspace Id\", \"type\": \"string\", \"description\": \"the UUID for identifying the workspace. When not given a random id will be assigned.Multiple Pea/Pod/Flow will work under the same workspace if they share the same `workspace-id`.\", \"example\": \"d5149211-1803-4ecc-a3b7-847031e0a93b\"}, \"daemon\": {\"title\": \"Daemon\", \"type\": \"boolean\", \"description\": \"The Pea attempts to terminate all of its Runtime child processes/threads on existing. setting it to true basically tell the Pea do not wait on the Runtime when closing\", \"default\": false}, \"runtime_backend\": {\"title\": \"Runtime Backend\", \"type\": \"string\", \"description\": \"The parallel backend of the runtime inside the Pea\", \"default\": \"PROCESS\"}, \"runtime_cls\": {\"title\": \"Runtime Cls\", \"type\": \"string\", \"description\": \"The runtime class to run inside the Pea\", \"default\": \"ZEDRuntime\"}, \"timeout_ready\": {\"title\": \"Timeout Ready\", \"type\": \"integer\", \"description\": \"The timeout in milliseconds of a Pea waits for the runtime to be ready, -1 for waiting forever\", \"default\": 600000}, \"env\": {\"title\": \"Env\", \"type\": \"object\", \"description\": \"The map of environment variables that are available inside runtime\"}, \"expose_public\": {\"title\": \"Expose Public\", \"type\": \"boolean\", \"description\": \"If set, expose the public IP address to remote when necessary, by default it exposesprivate IP address, which only allows accessing under the same network/subnet. Important to set this to true when the Pea will receive input connections from remote Peas\", \"default\": false}}}, \"PodModel\": {\"title\": \"PodModel\", \"type\": \"object\", \"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\", \"description\": \"\\nThe name of this object.\\n\\nThis will be used in the following places:\\n- how you refer to this object in Python/YAML/CLI\\n- visualization\\n- log message header\\n- ...\\n\\nWhen not given, then the default naming strategy will apply. \\n                    \"}, \"workspace\": {\"title\": \"Workspace\", \"type\": \"string\", \"description\": \"The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.\"}, \"log_config\": {\"title\": \"Log Config\", \"type\": \"string\", \"description\": \"The YAML config of the logger used in this object.\", \"default\": \"/opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/jina/resources/logging.default.yml\"}, \"quiet\": {\"title\": \"Quiet\", \"type\": \"boolean\", \"description\": \"If set, then no log will be emitted from this object.\", \"default\": false}, \"quiet_error\": {\"title\": \"Quiet Error\", \"type\": \"boolean\", \"description\": \"If set, then exception stack information will not be added to the log\", \"default\": false}, \"port_ctrl\": {\"title\": \"Port Ctrl\", \"type\": \"integer\", \"description\": \"The port for controlling the runtime, default a random port between [49152, 65535]\", \"example\": 52475}, \"ctrl_with_ipc\": {\"title\": \"Ctrl With Ipc\", \"type\": \"boolean\", \"description\": \"If set, use ipc protocol for control socket\", \"default\": false}, \"timeout_ctrl\": {\"title\": \"Timeout Ctrl\", \"type\": \"integer\", \"description\": \"The timeout in milliseconds of the control request, -1 for waiting forever\", \"default\": 5000}, \"ssh_server\": {\"title\": \"Ssh Server\", \"type\": \"string\", \"description\": \"The SSH server through which the tunnel will be created, can actually be a fully specified `user@server:port` ssh url.\"}, \"ssh_keyfile\": {\"title\": \"Ssh Keyfile\", \"type\": \"string\", \"description\": \"This specifies a key to be used in ssh login, default None. regular default ssh keys will be used without specifying this argument.\"}, \"ssh_password\": {\"title\": \"Ssh Password\", \"type\": \"string\", \"description\": \"The ssh password to the ssh server.\"}, \"uses\": {\"title\": \"Uses\", \"type\": \"string\", \"description\": \"\\n        The config of the executor, it could be one of the followings:\\n        * an Executor-level YAML file path (.yml, .yaml, .jaml)\\n        * a docker image (must start with `docker://`)\\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\\n        * the string literal of a JSON config\\n        \\n        When use it under Python, one can use the following values additionally:\\n        - a Python dict that represents the config\\n        - a text file stream has `.read()` interface\\n        \", \"default\": \"BaseExecutor\"}, \"py_modules\": {\"title\": \"Py Modules\", \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"\\nThe customized python modules need to be imported before loading the executor\\n\\nNote, when importing multiple files and there is a dependency between them, then one has to write the dependencies in\\nreverse order. That is, if `__init__.py` depends on `A.py`, which again depends on `B.py`, then you need to write:\\n\\n--py-modules __init__.py --py-modules B.py --py-modules A.py\\n\\n\"}, \"port_in\": {\"title\": \"Port In\", \"type\": \"integer\", \"description\": \"The port for input data, default a random port between [49152, 65535]\", \"example\": 43697}, \"port_out\": {\"title\": \"Port Out\", \"type\": \"integer\", \"description\": \"The port for output data, default a random port between [49152, 65535]\", \"example\": 58677}, \"host_in\": {\"title\": \"Host In\", \"type\": \"string\", \"description\": \"The host address for input, by default it is 0.0.0.0\", \"default\": \"0.0.0.0\"}, \"host_out\": {\"title\": \"Host Out\", \"type\": \"string\", \"description\": \"The host address for output, by default it is 0.0.0.0\", \"default\": \"0.0.0.0\"}, \"socket_in\": {\"title\": \"Socket In\", \"type\": \"string\", \"description\": \"The socket type for input port\", \"default\": \"PULL_BIND\"}, \"socket_out\": {\"title\": \"Socket Out\", \"type\": \"string\", \"description\": \"The socket type for output port\", \"default\": \"PUSH_BIND\"}, \"memory_hwm\": {\"title\": \"Memory Hwm\", \"type\": \"integer\", \"description\": \"The memory high watermark of this pod in Gigabytes, pod will restart when this is reached. -1 means no restriction\", \"default\": -1}, \"on_error_strategy\": {\"title\": \"On Error Strategy\", \"type\": \"string\", \"description\": \"\\nThe skip strategy on exceptions.\\n\\n- IGNORE: Ignore it, keep running all Executors in the sequel flow\\n- SKIP_HANDLE: Skip all Executors in the sequel, only `pre_hook` and `post_hook` are called\\n- THROW_EARLY: Immediately throw the exception, the sequel flow will not be running at all\\n\\nNote, `IGNORE`, `SKIP_EXECUTOR` and `SKIP_HANDLE` do not guarantee the success execution in the sequel flow. If something\\nis wrong in the upstream, it is hard to carry this exception and moving forward without any side-effect.\\n\", \"default\": \"IGNORE\"}, \"uses_internal\": {\"title\": \"Uses Internal\", \"type\": \"string\", \"description\": \"\\nThe config runs inside the Docker container. \\n\\nSyntax and function are the same as `--uses`. This is designed when `--uses=\\\"docker://...\\\"` this config is passed to \\nthe Docker container.\\n\", \"default\": \"BaseExecutor\"}, \"entrypoint\": {\"title\": \"Entrypoint\", \"type\": \"string\", \"description\": \"The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.\"}, \"docker_kwargs\": {\"title\": \"Docker Kwargs\", \"type\": \"object\", \"description\": \"\\nDictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\\ncontainer. \\n\\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/\\n\\n\"}, \"pull_latest\": {\"title\": \"Pull Latest\", \"type\": \"boolean\", \"description\": \"Pull the latest image before running\", \"default\": false}, \"volumes\": {\"title\": \"Volumes\", \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"\\nThe path on the host to be mounted inside the container. \\n\\nNote, \\n- If separated by `:`, then the first part will be considered as the local host path and the second part is the path in the container system. \\n- If no split provided, then the basename of that directory will be mounted into container's root path, e.g. `--volumes=\\\"/user/test/my-workspace\\\"` will be mounted into `/my-workspace` inside the container. \\n- All volumes are mounted with read-write mode.\\n\"}, \"host\": {\"title\": \"Host\", \"type\": \"string\", \"description\": \"The host address of the runtime, by default it is 0.0.0.0.\", \"default\": \"0.0.0.0\"}, \"port_expose\": {\"title\": \"Port Expose\", \"type\": \"integer\", \"description\": \"The port of the host exposed to the public\", \"example\": 50709}, \"proxy\": {\"title\": \"Proxy\", \"type\": \"boolean\", \"description\": \"If set, respect the http_proxy and https_proxy environment variables. otherwise, it will unset these proxy variables before start. gRPC seems to prefer no proxy\", \"default\": false}, \"quiet_remote_logs\": {\"title\": \"Quiet Remote Logs\", \"type\": \"boolean\", \"description\": \"Do not display the streaming of remote logs on local console\", \"default\": false}, \"upload_files\": {\"title\": \"Upload Files\", \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"\\nThe files on the host to be uploaded to the remote\\nworkspace. This can be useful when your Pod has more\\nfile dependencies beyond a single YAML file, e.g.\\nPython files, data files.\\n\\nNote,\\n- currently only flatten structure is supported, which means if you upload `[./foo/a.py, ./foo/b.pp, ./bar/c.yml]`, then they will be put under the _same_ workspace on the remote, losing all hierarchies.\\n- by default, `--uses` YAML file is always uploaded.\\n- uploaded files are by default isolated across the runs. To ensure files are submitted to the same workspace across different runs, use `--workspace-id` to specify the workspace.\\n\"}, \"workspace_id\": {\"title\": \"Workspace Id\", \"type\": \"string\", \"description\": \"the UUID for identifying the workspace. When not given a random id will be assigned.Multiple Pea/Pod/Flow will work under the same workspace if they share the same `workspace-id`.\", \"example\": \"d8d5a326-7fef-4aa2-be83-27fe683bfc5b\"}, \"daemon\": {\"title\": \"Daemon\", \"type\": \"boolean\", \"description\": \"The Pea attempts to terminate all of its Runtime child processes/threads on existing. setting it to true basically tell the Pea do not wait on the Runtime when closing\", \"default\": false}, \"runtime_backend\": {\"title\": \"Runtime Backend\", \"type\": \"string\", \"description\": \"The parallel backend of the runtime inside the Pea\", \"default\": \"PROCESS\"}, \"runtime_cls\": {\"title\": \"Runtime Cls\", \"type\": \"string\", \"description\": \"The runtime class to run inside the Pea\", \"default\": \"ZEDRuntime\"}, \"timeout_ready\": {\"title\": \"Timeout Ready\", \"type\": \"integer\", \"description\": \"The timeout in milliseconds of a Pea waits for the runtime to be ready, -1 for waiting forever\", \"default\": 600000}, \"env\": {\"title\": \"Env\", \"type\": \"object\", \"description\": \"The map of environment variables that are available inside runtime\"}, \"expose_public\": {\"title\": \"Expose Public\", \"type\": \"boolean\", \"description\": \"If set, expose the public IP address to remote when necessary, by default it exposesprivate IP address, which only allows accessing under the same network/subnet. Important to set this to true when the Pea will receive input connections from remote Peas\", \"default\": false}, \"uses_before\": {\"title\": \"Uses Before\", \"type\": \"string\", \"description\": \"The executor attached after the Peas described by --uses, typically before sending to all parallels, accepted type follows `--uses`\"}, \"uses_after\": {\"title\": \"Uses After\", \"type\": \"string\", \"description\": \"The executor attached after the Peas described by --uses, typically used for receiving from all parallels, accepted type follows `--uses`\"}, \"parallel\": {\"title\": \"Parallel\", \"type\": \"integer\", \"description\": \"The number of parallel peas in the pod running at the same time, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary\", \"default\": 1}, \"replicas\": {\"title\": \"Replicas\", \"type\": \"integer\", \"description\": \"The number of replicas in the pod, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary\", \"default\": 1}, \"polling\": {\"title\": \"Polling\", \"type\": \"string\", \"description\": \"\\nThe polling strategy of the Pod (when `parallel\u003e1`)\\n- ANY: only one (whoever is idle) Pea polls the message\\n- ALL: all Peas poll the message (like a broadcast)\\n\", \"default\": \"ANY\"}, \"scheduling\": {\"title\": \"Scheduling\", \"type\": \"string\", \"description\": \"The strategy of scheduling workload among Peas\", \"default\": \"LOAD_BALANCE\"}, \"external\": {\"title\": \"External\", \"type\": \"boolean\", \"description\": \"The Pod will be considered an external Pod that has been started independently from the Flow.This Pod will not be context managed by the Flow.\", \"default\": false}, \"peas_hosts\": {\"title\": \"Peas Hosts\", \"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"The hosts of the peas when parallel greater than 1.\\n        Peas will be evenly distributed among the hosts. By default,\\n        peas are running on host provided by the argument ``host``\"}, \"pod_role\": {\"title\": \"Pod Role\", \"type\": \"string\", \"description\": \"The role of this pod in the flow\"}}}, \"StoreItemStatus\": {\"title\": \"StoreItemStatus\", \"required\": [\"time_created\", \"arguments\", \"workspace_id\", \"workdir\"], \"type\": \"object\", \"properties\": {\"time_created\": {\"title\": \"Time Created\", \"type\": \"string\", \"format\": \"date-time\"}, \"arguments\": {\"title\": \"Arguments\", \"anyOf\": [{\"type\": \"object\"}, {\"type\": \"array\", \"items\": {}}]}, \"workspace_id\": {\"title\": \"Workspace Id\", \"type\": \"string\", \"format\": \"uuid\"}, \"workdir\": {\"title\": \"Workdir\", \"type\": \"string\"}}}, \"StoreStatus\": {\"title\": \"StoreStatus\", \"required\": [\"size\", \"time_created\", \"time_updated\", \"num_add\", \"num_del\", \"items\"], \"type\": \"object\", \"properties\": {\"size\": {\"title\": \"Size\", \"type\": \"integer\"}, \"time_created\": {\"title\": \"Time Created\", \"type\": \"string\", \"format\": \"date-time\"}, \"time_updated\": {\"title\": \"Time Updated\", \"type\": \"string\", \"format\": \"date-time\"}, \"num_add\": {\"title\": \"Num Add\", \"type\": \"integer\"}, \"num_del\": {\"title\": \"Num Del\", \"type\": \"integer\"}, \"items\": {\"title\": \"Items\", \"type\": \"object\", \"additionalProperties\": {\"$ref\": \"#/components/schemas/StoreItemStatus\"}}}}, \"UpdateOperationEnum\": {\"title\": \"UpdateOperationEnum\", \"enum\": [\"rolling_update\", \"dump\"], \"description\": \"Represents the type of operation to perform in the update\\n\\nWe consider these an `update` operation since they **change** the underlying state\"}, \"ValidationError\": {\"title\": \"ValidationError\", \"required\": [\"loc\", \"msg\", \"type\"], \"type\": \"object\", \"properties\": {\"loc\": {\"title\": \"Location\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"msg\": {\"title\": \"Message\", \"type\": \"string\"}, \"type\": {\"title\": \"Error Type\", \"type\": \"string\"}}}}}, \"tags\": [{\"name\": \"daemon\", \"description\": \"API to manage the Daemon\"}, {\"name\": \"flows\", \"description\": \"API to manage Flows\"}, {\"name\": \"pods\", \"description\": \"API to manage Pods\"}, {\"name\": \"peas\", \"description\": \"API to manage Peas\"}, {\"name\": \"logs\", \"description\": \"API to stream Logs\"}, {\"name\": \"workspaces\", \"description\": \"API to manage Workspaces\"}], \"servers\": [{\"url\": \"http://localhost:8000\", \"description\": \"Local JinaD server\"}]}",
			"canonicalURL": "/github.com/jina-ai/api@5110f331c48e7139f5fe041c4bc51ba4d8549524/-/blob/daemon/2.0.0rc8.json",
			"externalURLs": [
				{
					"url": "https://github.com/jina-ai/api/blob/5110f331c48e7139f5fe041c4bc51ba4d8549524/daemon/2.0.0rc8.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}