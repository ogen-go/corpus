{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "quoteNotification.api.yaml",
			"size": 0,
			"path": "productApi/quote/quoteNotification.api.yaml",
			"byteSize": 10819,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    **This file forms part of MEF 115**\n\n    This API implements Business Requirements described in MEF 80\n\n    Quote API allows the Buyer to submit a request to find out how much the installation\n    of an instance of a Product Offering, an update to an existing Product, or\n    a disconnect of an existing Product will cost.\n\n    List of supported Use Cases:\n    - Send Quote Notification\n\n    Copyright 2021 MEF Forum and its contributors.\n\n    This file includes content based on the TM Forum Quote Management API\n    (TMF648 v4.0.0) available at\n    https://github.com/tmforum-apis/TMF648_QuoteManagement, which is licensed by\n    the TM Forum under the Apache License version 2.0. Such content has been\n    modified by the MEF Forum and its contributors.\n  title: Quote Notification\n  version: 8.0.1\n  x-logo:\n    url: /redoc/logo.png\n    backgroundColor: '#FFFFFF'\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/quoteNotification/v8/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Buyer's URL.\ntags:\n  - description: |\n      The Buyer's endpoint to send particular event types notifications to.\n    name: Notification listeners\npaths:\n  /listener/quoteStateChangeEvent:\n    post:\n      deprecated: false\n      description: |\n        This endpoint is used to receive notifications on Quote state change\n      operationId: listenToQuoteStateChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/Event'\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Quote State Change Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\n  /listener/quoteItemStateChangeEvent:\n    post:\n      deprecated: false\n      description: \u003e\n        This endpoint is used to receive notifications on Quote Item state\n        change\n      operationId: listenToQuoteItemStateChangeEvent\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/Event'\n        required: true\n      responses:\n        '204':\n          description:\n            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Quote Item State Change Notification endpoint\n      tags:\n        - Notification listeners\n      x-codegen-request-body-name: data\ncomponents:\n  schemas:\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error\n\n        Not intended to be used directly. The `code` in the HTTP header is used\n        as a discriminator for the type of error returned in runtime.\n      properties:\n        reason:\n          description: \u003e-\n            Text that explains the reason for the error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        message:\n          description: \u003e-\n            Text that provides more details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingQueryParameter: The URI is missing a required\n                query-string parameter\n\n                - missingQueryValue: The URI is missing a required query-string\n                parameter value\n\n                - invalidQuery: The query section of the URI is invalid.\n\n                - invalidBody: The request has an invalid body\n              $ref: '#/components/schemas/Error400Code'\n          required:\n            - code\n          type: object\n      description:\n        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - missingCredentials: No credentials provided.\n\n                - invalidCredentials: Provided credentials are invalid or\n                expired\n              $ref: '#/components/schemas/Error401Code'\n          required:\n            - code\n          type: object\n      description:\n        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                This code indicates that the server understood\n                the request but refuses to authorize it because\n                of one of the following error codes:\n                - accessDenied: Access denied\n                - forbiddenRequester: Forbidden requester\n                - tooManyUsers: Too many users\n              $ref: '#/components/schemas/Error403Code'\n          required:\n            - code\n          type: object\n      description:\n        'Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)'\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                One of the following error codes:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Event:\n      description: \u003e-\n        Event class is used to describe information structure used for\n        notification.\n      properties:\n        eventId:\n          description: Id of the event\n          type: string\n        eventTime:\n          description: Datetime when the event occurred\n          format: date-time\n          type: string\n        eventType:\n          $ref: '#/components/schemas/QuoteEventType'\n        event:\n          $ref: '#/components/schemas/QuoteEvent'\n      required:\n        - event\n        - eventId\n        - eventTime\n        - eventType\n      type: object\n    QuoteEvent:\n      description: \u003e-\n        The identifier of the Quote and/or Quote Item being subject of this\n        event.\n      properties:\n        sellerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when the requester\n            entity represents more than one Seller.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n        id:\n          description: ID of the Quote attributed by quoting system\n          type: string\n        href:\n          description: Hyperlink to access the quote\n          type: string\n        quoteItemId:\n          description: \u003e-\n            ID of the Quote Item (within the Quote) which state change\n            triggered the event\n          type: string\n        buyerId:\n          description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the responding\n            represents more than one Buyer.\n\n            Reference: MEF 79 (Sn 8.8)\n          type: string\n      required:\n        - id\n      type: object\n    QuoteEventType:\n      description: Type of the Event\n      enum:\n        - quoteStateChangeEvent\n        - quoteItemStateChangeEvent\n      type: string\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/productApi/quote/quoteNotification.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/productApi/quote/quoteNotification.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}