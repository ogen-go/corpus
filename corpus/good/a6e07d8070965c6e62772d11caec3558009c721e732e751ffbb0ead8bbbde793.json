{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "org_projects.yaml",
			"size": 0,
			"path": "providers/src/github/v0.1.1/services/org_projects.yaml",
			"byteSize": 18026,
			"content": "paths:\n  /orgs/{org}/projects:\n    get:\n      summary: List organization projects\n      description: Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n      tags:\n        - projects\n      operationId: projects/list-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#list-organization-projects\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - name: state\n          description: Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n            default: open\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/project'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: null\n    post:\n      summary: Create an organization project\n      description: Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n      tags:\n        - projects\n      operationId: projects/create-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/projects#create-an-organization-project\n      parameters:\n        - $ref: '#/components/parameters/org'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the project.\n                body:\n                  type: string\n                  description: The description of the project.\n              required:\n                - name\n            example:\n              name: Organization Roadmap\n              body: High-level roadmap for the upcoming year.\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/project'\n              examples:\n                default:\n                  $ref: '#/components/examples/project-2'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: projects\n        subcategory: null\ncomponents:\n  schemas:\n    project:\n      title: Project\n      description: Projects are a way to organize columns and cards of work.\n      type: object\n      properties:\n        owner_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/api-playground/projects-test\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/1002604\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/api-playground/projects-test/projects/12\n        columns_url:\n          type: string\n          format: uri\n          example: https://api.github.com/projects/1002604/columns\n        id:\n          type: integer\n          example: 1002604\n        node_id:\n          type: string\n          example: MDc6UHJvamVjdDEwMDI2MDQ=\n        name:\n          description: Name of the project\n          example: Week One Sprint\n          type: string\n        body:\n          description: Body of the project\n          example: This project represents the sprint of the first week in January\n          type: string\n          nullable: true\n        number:\n          type: integer\n          example: 1\n        state:\n          description: State of the project; either 'open' or 'closed'\n          example: open\n          type: string\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-10T20:09:31Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2014-03-03T18:58:10Z'\n        organization_permission:\n          description: The baseline permission that all organization members have on this project. Only present if owner is an organization.\n          type: string\n          enum:\n            - read\n            - write\n            - admin\n            - none\n        private:\n          description: Whether or not this project can be seen by everyone. Only present if owner is an organization.\n          type: boolean\n      required:\n        - id\n        - node_id\n        - number\n        - name\n        - body\n        - state\n        - url\n        - html_url\n        - owner_url\n        - creator\n        - columns_url\n        - created_at\n        - updated_at\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    validation-error-simple:\n      title: Validation Error Simple\n      description: Validation Error Simple\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n  parameters:\n    org:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n  responses:\n    validation_failed_simple:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error-simple'\n    requires_authentication:\n      description: Requires authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    gone:\n      description: Gone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    project-items:\n      value:\n        - owner_url: https://api.github.com/orgs/octocat\n          url: https://api.github.com/projects/1002605\n          html_url: https://github.com/orgs/api-playground/projects/1\n          columns_url: https://api.github.com/projects/1002605/columns\n          id: 1002605\n          node_id: MDc6UHJvamVjdDEwMDI2MDU=\n          name: Organization Roadmap\n          body: High-level roadmap for the upcoming year.\n          number: 1\n          state: open\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          created_at: '2011-04-11T20:09:31Z'\n          updated_at: '2014-03-04T18:58:10Z'\n    project-2:\n      value:\n        owner_url: https://api.github.com/orgs/octocat\n        url: https://api.github.com/projects/1002605\n        html_url: https://github.com/orgs/api-playground/projects/1\n        columns_url: https://api.github.com/projects/1002605/columns\n        id: 1002605\n        node_id: MDc6UHJvamVjdDEwMDI2MDU=\n        name: Organization Roadmap\n        body: High-level roadmap for the upcoming year.\n        number: 1\n        state: open\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2011-04-11T20:09:31Z'\n        updated_at: '2014-03-04T18:58:10Z'\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    org_projects:\n      id: github.org_projects.org_projects\n      name: org_projects\n      title: org_projects\n      methods:\n        list_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1projects/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1projects/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/org_projects/methods/list_for_org'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/org_projects/methods/create_for_org'\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - org_projects\n  description: Interact with GitHub Projects.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.1.1/services/org_projects.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.1.1/services/org_projects.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}