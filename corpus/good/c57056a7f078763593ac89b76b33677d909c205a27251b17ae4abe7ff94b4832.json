{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenMSP/OpenMSP-ContainerCloud"
		},
		"file": {
			"name": "istio.mixer.v1.config.client.gen.json",
			"size": 0,
			"path": "vendor/istio.io/api/mixer/v1/config/client/istio.mixer.v1.config.client.gen.json",
			"byteSize": 31098,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Configuration state for the Mixer client library.\",\n    \"version\": \"client\"\n  },\n  \"components\": {\n    \"schemas\": {\n      \"istio.mixer.v1.config.client.HTTPAPISpec\": {\n        \"description\": \"HTTPAPISpec defines the canonical configuration for generating API-related attributes from HTTP requests based on the method and uri templated path matches. It is sufficient for defining the API surface of a service for the purposes of API attribute generation. It is not intended to represent auth, quota, documentation, or other information commonly found in other API specifications, e.g. OpenAPI.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"attributes\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          },\n          \"patterns\": {\n            \"description\": \"List of HTTP patterns to match.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.HTTPAPISpecPattern\"\n            }\n          },\n          \"apiKeys\": {\n            \"description\": \"List of APIKey that describes how to extract an API-KEY from an HTTP request. The first API-Key match found in the list is used, i.e. 'OR' semantics.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.APIKey\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.HTTPAPISpecPattern\": {\n        \"description\": \"HTTPAPISpecPattern defines a single pattern to match against incoming HTTP requests. The per-pattern list of attributes is generated if both the http_method and uri_template match. In addition, the top-level list of attributes in the HTTPAPISpec is also generated.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"attributes\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          },\n          \"httpMethod\": {\n            \"description\": \"HTTP request method to match against as defined by [rfc7231](https://tools.ietf.org/html/rfc7231#page-21). For example: GET, HEAD, POST, PUT, DELETE.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        },\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"uriTemplate\"\n                  ],\n                  \"properties\": {\n                    \"uriTemplate\": {\n                      \"description\": \"URI template to match against as defined by [rfc6570](https://tools.ietf.org/html/rfc6570). For example, the following are valid URI templates: /pets /pets/{id} /dictionary/{term:1}/{term} /search{?q*,lang}\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"regex\"\n                  ],\n                  \"properties\": {\n                    \"regex\": {\n                      \"description\": \"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax)\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"uriTemplate\"\n            ],\n            \"properties\": {\n              \"uriTemplate\": {\n                \"description\": \"URI template to match against as defined by [rfc6570](https://tools.ietf.org/html/rfc6570). For example, the following are valid URI templates: /pets /pets/{id} /dictionary/{term:1}/{term} /search{?q*,lang}\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"regex\"\n            ],\n            \"properties\": {\n              \"regex\": {\n                \"description\": \"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax)\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          }\n        ]\n      },\n      \"istio.mixer.v1.config.client.APIKey\": {\n        \"description\": \"APIKey defines the explicit configuration for generating the `request.api_key` attribute from HTTP requests.\",\n        \"type\": \"object\",\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"query\"\n                  ],\n                  \"properties\": {\n                    \"query\": {\n                      \"description\": \"API Key is sent as a query parameter. `query` represents the query string parameter name.\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"header\"\n                  ],\n                  \"properties\": {\n                    \"header\": {\n                      \"description\": \"API key is sent in a request header. `header` represents the header name.\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"cookie\"\n                  ],\n                  \"properties\": {\n                    \"cookie\": {\n                      \"description\": \"API key is sent in a [cookie](https://swagger.io/docs/specification/authentication/cookie-authentication),\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"query\"\n            ],\n            \"properties\": {\n              \"query\": {\n                \"description\": \"API Key is sent as a query parameter. `query` represents the query string parameter name.\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"header\"\n            ],\n            \"properties\": {\n              \"header\": {\n                \"description\": \"API key is sent in a request header. `header` represents the header name.\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"cookie\"\n            ],\n            \"properties\": {\n              \"cookie\": {\n                \"description\": \"API key is sent in a [cookie](https://swagger.io/docs/specification/authentication/cookie-authentication),\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          }\n        ]\n      },\n      \"istio.mixer.v1.config.client.HTTPAPISpecReference\": {\n        \"description\": \"HTTPAPISpecReference defines a reference to an HTTPAPISpec. This is typically used for establishing bindings between an HTTPAPISpec and an IstioService. For example, the following defines an HTTPAPISpecReference for service `foo` in namespace `bar`.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The short name of the HTTPAPISpec. This is the resource name defined by the metadata name field.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Optional namespace of the HTTPAPISpec. Defaults to the encompassing HTTPAPISpecBinding's metadata namespace field.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.HTTPAPISpecBinding\": {\n        \"description\": \"HTTPAPISpecBinding defines the binding between HTTPAPISpecs and one or more IstioService. For example, the following establishes a binding between the HTTPAPISpec `petstore` and service `foo` in namespace `bar`.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"services\": {\n            \"description\": \"One or more services to map the listed HTTPAPISpec onto.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.IstioService\"\n            }\n          },\n          \"apiSpecs\": {\n            \"description\": \"One or more HTTPAPISpec references that should be mapped to the specified service(s). The aggregate collection of match conditions defined in the HTTPAPISpecs should not overlap.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.HTTPAPISpecReference\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.IstioService\": {\n        \"description\": \"IstioService identifies a service and optionally service version. The FQDN of the service is composed from the name, namespace, and implementation-specific domain suffix (e.g. on Kubernetes, \\\"reviews\\\" + \\\"default\\\" + \\\"svc.cluster.local\\\" -\\u003e \\\"reviews.default.svc.cluster.local\\\").\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The short name of the service such as \\\"foo\\\".\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Optional namespace of the service. Defaults to value of metadata namespace field.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"domain\": {\n            \"description\": \"Domain suffix used to construct the service FQDN in implementations that support such specification.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"service\": {\n            \"description\": \"The service FQDN.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"labels\": {\n            \"description\": \"Optional one or more labels that uniquely identify the service version.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.NetworkFailPolicy\": {\n        \"description\": \"Specifies the behavior when the client is unable to connect to Mixer.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"policy\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.NetworkFailPolicy.FailPolicy\"\n          },\n          \"maxRetry\": {\n            \"description\": \"Max retries on transport error.\",\n            \"type\": \"integer\"\n          },\n          \"baseRetryWait\": {\n            \"description\": \"Base time to wait between retries. Will be adjusted by exponential backoff and jitter.\",\n            \"type\": \"string\"\n          },\n          \"maxRetryWait\": {\n            \"description\": \"Max time to wait between retries.\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.NetworkFailPolicy.FailPolicy\": {\n        \"description\": \"Describes the policy.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"FAIL_OPEN\",\n          \"FAIL_CLOSE\"\n        ]\n      },\n      \"istio.mixer.v1.config.client.ServiceConfig\": {\n        \"description\": \"Defines the per-service client configuration.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"disableCheckCalls\": {\n            \"description\": \"If true, do not call Mixer Check.\",\n            \"type\": \"boolean\"\n          },\n          \"disableReportCalls\": {\n            \"description\": \"If true, do not call Mixer Report.\",\n            \"type\": \"boolean\"\n          },\n          \"mixerAttributes\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          },\n          \"httpApiSpec\": {\n            \"description\": \"HTTP API specifications to generate API attributes.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.HTTPAPISpec\"\n            }\n          },\n          \"quotaSpec\": {\n            \"description\": \"Quota specifications to generate quota requirements.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.QuotaSpec\"\n            }\n          },\n          \"networkFailPolicy\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.NetworkFailPolicy\"\n          },\n          \"forwardAttributes\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.QuotaSpec\": {\n        \"description\": \"Determines the quotas used for individual requests.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"rules\": {\n            \"description\": \"A list of Quota rules.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.QuotaRule\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.TransportConfig\": {\n        \"description\": \"Defines the transport config on how to call Mixer.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"networkFailPolicy\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.NetworkFailPolicy\"\n          },\n          \"disableCheckCache\": {\n            \"description\": \"The flag to disable check cache.\",\n            \"type\": \"boolean\"\n          },\n          \"disableQuotaCache\": {\n            \"description\": \"The flag to disable quota cache.\",\n            \"type\": \"boolean\"\n          },\n          \"disableReportBatch\": {\n            \"description\": \"The flag to disable report batch.\",\n            \"type\": \"boolean\"\n          },\n          \"statsUpdateInterval\": {\n            \"description\": \"Specify refresh interval to write Mixer client statistics to Envoy share memory. If not specified, the interval is 10 seconds.\",\n            \"type\": \"string\"\n          },\n          \"checkCluster\": {\n            \"description\": \"Name of the cluster that will forward check calls to a pool of mixer servers. Defaults to \\\"mixer_server\\\". By using different names for checkCluster and reportCluster, it is possible to have one set of Mixer servers handle check calls, while another set of Mixer servers handle report calls.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"reportCluster\": {\n            \"description\": \"Name of the cluster that will forward report calls to a pool of mixer servers. Defaults to \\\"mixer_server\\\". By using different names for checkCluster and reportCluster, it is possible to have one set of Mixer servers handle check calls, while another set of Mixer servers handle report calls.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"attributesForMixerProxy\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          },\n          \"reportBatchMaxEntries\": {\n            \"description\": \"When disable_report_batch is false, this value specifies the maximum number of requests that are batched in report. If left unspecified, the default value of report_batch_max_entries == 0 will use the hardcoded defaults of istio::mixerclient::ReportOptions.\",\n            \"type\": \"integer\"\n          },\n          \"reportBatchMaxTime\": {\n            \"description\": \"When disable_report_batch is false, this value specifies the maximum elapsed time a batched report will be sent after a user request is processed. If left unspecified, the default report_batch_max_time == 0 will use the hardcoded defaults of istio::mixerclient::ReportOptions.\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.HttpClientConfig\": {\n        \"description\": \"Defines the client config for HTTP.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"mixerAttributes\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          },\n          \"forwardAttributes\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          },\n          \"transport\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.TransportConfig\"\n          },\n          \"serviceConfigs\": {\n            \"description\": \"Map of control configuration indexed by destination.service. This is used to support per-service configuration for cases where a mixerclient serves multiple services.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.ServiceConfig\"\n            }\n          },\n          \"defaultDestinationService\": {\n            \"description\": \"Default destination service name if none was specified in the client request.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"ignoreForwardedAttributes\": {\n            \"description\": \"Whether or not to use attributes forwarded in the request headers to create the attribute bag to send to mixer. For intra-mesh traffic, this should be set to \\\"false\\\". For ingress/egress gateways, this should be set to \\\"true\\\".\",\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.TcpClientConfig\": {\n        \"description\": \"Defines the client config for TCP.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"disableCheckCalls\": {\n            \"description\": \"If set to true, disables Mixer check calls.\",\n            \"type\": \"boolean\"\n          },\n          \"disableReportCalls\": {\n            \"description\": \"If set to true, disables Mixer check calls.\",\n            \"type\": \"boolean\"\n          },\n          \"mixerAttributes\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes\"\n          },\n          \"transport\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.TransportConfig\"\n          },\n          \"connectionQuotaSpec\": {\n            \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.QuotaSpec\"\n          },\n          \"reportInterval\": {\n            \"description\": \"Specify report interval to send periodical reports for long TCP connections. If not specified, the interval is 10 seconds. This interval should not be less than 1 second, otherwise it will be reset to 1 second.\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.QuotaRule\": {\n        \"description\": \"Specifies a rule with list of matches and list of quotas. If any clause matched, the list of quotas will be used.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"quotas\": {\n            \"description\": \"The list of quotas to charge.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.Quota\"\n            }\n          },\n          \"match\": {\n            \"description\": \"If empty, match all request. If any of match is true, it is matched.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.AttributeMatch\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.AttributeMatch\": {\n        \"description\": \"Specifies a match clause to match Istio attributes\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"clause\": {\n            \"description\": \"Map of attribute names to StringMatch type. Each map element specifies one condition to match.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.StringMatch\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.Quota\": {\n        \"description\": \"Specifies a quota to use with quota name and amount.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"quota\": {\n            \"description\": \"The quota name to charge\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"charge\": {\n            \"description\": \"The quota amount to charge\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.StringMatch\": {\n        \"description\": \"Describes how to match a given string in HTTP headers. Match is case-sensitive.\",\n        \"type\": \"object\",\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"exact\"\n                  ],\n                  \"properties\": {\n                    \"exact\": {\n                      \"description\": \"exact string match\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"prefix\"\n                  ],\n                  \"properties\": {\n                    \"prefix\": {\n                      \"description\": \"prefix-based match\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"regex\"\n                  ],\n                  \"properties\": {\n                    \"regex\": {\n                      \"description\": \"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"exact\"\n            ],\n            \"properties\": {\n              \"exact\": {\n                \"description\": \"exact string match\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"prefix\"\n            ],\n            \"properties\": {\n              \"prefix\": {\n                \"description\": \"prefix-based match\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"regex\"\n            ],\n            \"properties\": {\n              \"regex\": {\n                \"description\": \"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          }\n        ]\n      },\n      \"istio.mixer.v1.config.client.QuotaSpecBinding\": {\n        \"description\": \"QuotaSpecBinding defines the binding between QuotaSpecs and one or more IstioService.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"services\": {\n            \"description\": \"One or more services to map the listed QuotaSpec onto.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.IstioService\"\n            }\n          },\n          \"quotaSpecs\": {\n            \"description\": \"One or more QuotaSpec references that should be mapped to the specified service(s). The aggregate collection of match conditions defined in the QuotaSpecs should not overlap.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference\": {\n        \"description\": \"QuotaSpecReference uniquely identifies the QuotaSpec used in the Binding.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The short name of the QuotaSpec. This is the resource name defined by the metadata name field.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Optional namespace of the QuotaSpec. Defaults to the value of the metadata namespace field.\",\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        }\n      },\n      \"istio.mixer.v1.Attributes\": {\n        \"description\": \"Default attributes to send to Mixer in both Check and Report. This typically includes \\\"destination.ip\\\" and \\\"destination.uid\\\" attributes.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"attributes\": {\n            \"description\": \"A map of attribute name to its value.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes.AttributeValue\"\n            }\n          }\n        }\n      },\n      \"istio.mixer.v1.Attributes.AttributeValue\": {\n        \"type\": \"object\",\n        \"oneOf\": [\n          {\n            \"not\": {\n              \"anyOf\": [\n                {\n                  \"required\": [\n                    \"stringValue\"\n                  ],\n                  \"properties\": {\n                    \"stringValue\": {\n                      \"description\": \"Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI\",\n                      \"type\": \"string\",\n                      \"format\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"int64Value\"\n                  ],\n                  \"properties\": {\n                    \"int64Value\": {\n                      \"description\": \"Used for values of type INT64\",\n                      \"type\": \"integer\",\n                      \"format\": \"int64\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"doubleValue\"\n                  ],\n                  \"properties\": {\n                    \"doubleValue\": {\n                      \"description\": \"Used for values of type DOUBLE\",\n                      \"type\": \"number\",\n                      \"format\": \"double\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"boolValue\"\n                  ],\n                  \"properties\": {\n                    \"boolValue\": {\n                      \"description\": \"Used for values of type BOOL\",\n                      \"type\": \"boolean\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"bytesValue\"\n                  ],\n                  \"properties\": {\n                    \"bytesValue\": {\n                      \"description\": \"Used for values of type BYTES\",\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"timestampValue\"\n                  ],\n                  \"properties\": {\n                    \"timestampValue\": {\n                      \"description\": \"Used for values of type TIMESTAMP\",\n                      \"type\": \"string\",\n                      \"format\": \"dateTime\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"durationValue\"\n                  ],\n                  \"properties\": {\n                    \"durationValue\": {\n                      \"description\": \"Used for values of type DURATION\",\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                {\n                  \"required\": [\n                    \"stringMapValue\"\n                  ],\n                  \"properties\": {\n                    \"stringMapValue\": {\n                      \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes.StringMap\"\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"required\": [\n              \"stringValue\"\n            ],\n            \"properties\": {\n              \"stringValue\": {\n                \"description\": \"Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI\",\n                \"type\": \"string\",\n                \"format\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"int64Value\"\n            ],\n            \"properties\": {\n              \"int64Value\": {\n                \"description\": \"Used for values of type INT64\",\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"doubleValue\"\n            ],\n            \"properties\": {\n              \"doubleValue\": {\n                \"description\": \"Used for values of type DOUBLE\",\n                \"type\": \"number\",\n                \"format\": \"double\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"boolValue\"\n            ],\n            \"properties\": {\n              \"boolValue\": {\n                \"description\": \"Used for values of type BOOL\",\n                \"type\": \"boolean\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"bytesValue\"\n            ],\n            \"properties\": {\n              \"bytesValue\": {\n                \"description\": \"Used for values of type BYTES\",\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"timestampValue\"\n            ],\n            \"properties\": {\n              \"timestampValue\": {\n                \"description\": \"Used for values of type TIMESTAMP\",\n                \"type\": \"string\",\n                \"format\": \"dateTime\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"durationValue\"\n            ],\n            \"properties\": {\n              \"durationValue\": {\n                \"description\": \"Used for values of type DURATION\",\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"required\": [\n              \"stringMapValue\"\n            ],\n            \"properties\": {\n              \"stringMapValue\": {\n                \"$ref\": \"#/components/schemas/istio.mixer.v1.Attributes.StringMap\"\n              }\n            }\n          }\n        ]\n      },\n      \"istio.mixer.v1.Attributes.StringMap\": {\n        \"description\": \"Used for values of type STRING_MAP\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"entries\": {\n            \"description\": \"Holds a set of name/value pairs.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"format\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/OpenMSP/OpenMSP-ContainerCloud@a365077b14e82dbf3e65a0f49413acbc3e8d5038/-/blob/vendor/istio.io/api/mixer/v1/config/client/istio.mixer.v1.config.client.gen.json",
			"externalURLs": [
				{
					"url": "https://github.com/OpenMSP/OpenMSP-ContainerCloud/blob/a365077b14e82dbf3e65a0f49413acbc3e8d5038/vendor/istio.io/api/mixer/v1/config/client/istio.mixer.v1.config.client.gen.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}