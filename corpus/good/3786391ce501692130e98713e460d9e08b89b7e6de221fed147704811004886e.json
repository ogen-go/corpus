{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/microsoft.com/cognitiveservices-Prediction/3.0/openapi.yaml",
			"byteSize": 36400,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://southcentralus.api.cognitive.microsoft.com/customvision/v3.0/prediction\n  - url: \"{Endpoint}/customvision/v3.0/prediction\"\n    variables:\n      Endpoint:\n        default: \"\"\n        description: Supported Cognitive Services endpoints.\n        x-ms-parameter-location: client\n        x-ms-skip-url-encoding: true\ninfo:\n  contact:\n    x-twitter: microsoft\n  title: Custom Vision Prediction Client\n  version: \"3.0\"\n  x-apisguru-categories:\n    - developer_tools\n    - cloud\n  x-logo:\n    url: https://twitter.com/microsoft/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/CustomVision/Prediction/stable/v3.0/Prediction.json\n      version: \"3.0\"\n  x-preferred: true\n  x-providerName: microsoft.com\n  x-serviceName: cognitiveservices-Prediction\n  x-tags:\n    - Microsoft\nsecurity:\n  - apim_key: []\npaths:\n  \"/{projectId}/classify/iterations/{publishedName}/image\":\n    post:\n      operationId: ClassifyImage\n      parameters:\n        - description: The project id.\n          examples:\n            Successful ClassifyImage request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful ClassifyImage request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ClassifyImage\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful ClassifyImage request:\n                  $ref: \"#/components/examples/Successful_ClassifyImage_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful ClassifyImage request:\n                  $ref: \"#/components/examples/Successful_ClassifyImage_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful ClassifyImage request:\n                  $ref: \"#/components/examples/Successful_ClassifyImage_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Classify an image and saves the result.\n      tags:\n        - ImagePredictionApi\n  \"/{projectId}/classify/iterations/{publishedName}/image/nostore\":\n    post:\n      operationId: ClassifyImageWithNoStore\n      parameters:\n        - description: The project id.\n          examples:\n            Successful ClassifyImageWithNoStore request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful ClassifyImageWithNoStore request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ClassifyImageWithNoStore\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful ClassifyImageWithNoStore request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful ClassifyImageWithNoStore request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful ClassifyImageWithNoStore request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Classify an image without saving the result.\n      tags:\n        - ImagePredictionApi\n  \"/{projectId}/classify/iterations/{publishedName}/url\":\n    post:\n      operationId: ClassifyImageUrl\n      parameters:\n        - description: The project id.\n          examples:\n            Successful ClassifyImageUrl request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful ClassifyImageUrl request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageUrl2\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful ClassifyImageUrl request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageUrl_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful ClassifyImageUrl request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageUrl_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful ClassifyImageUrl request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageUrl_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Classify an image url and saves the result.\n      tags:\n        - ImagePredictionApi\n  \"/{projectId}/classify/iterations/{publishedName}/url/nostore\":\n    post:\n      operationId: ClassifyImageUrlWithNoStore\n      parameters:\n        - description: The project id.\n          examples:\n            Successful ClassifyImageUrlWithNoStore request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful ClassifyImageUrlWithNoStore request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageUrl\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful ClassifyImageUrlWithNoStore request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageUrlWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful ClassifyImageUrlWithNoStore request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageUrlWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful ClassifyImageUrlWithNoStore request:\n                  $ref: \"#/components/examples/Successful_ClassifyImageUrlWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Classify an image url without saving the result.\n      tags:\n        - ImagePredictionApi\n  \"/{projectId}/detect/iterations/{publishedName}/image\":\n    post:\n      operationId: DetectImage\n      parameters:\n        - description: The project id.\n          examples:\n            Successful DetectImage request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful DetectImage request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ClassifyImage\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful DetectImage request:\n                  $ref: \"#/components/examples/Successful_DetectImage_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful DetectImage request:\n                  $ref: \"#/components/examples/Successful_DetectImage_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful DetectImage request:\n                  $ref: \"#/components/examples/Successful_DetectImage_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Detect objects in an image and saves the result.\n      tags:\n        - ImagePredictionApi\n  \"/{projectId}/detect/iterations/{publishedName}/image/nostore\":\n    post:\n      operationId: DetectImageWithNoStore\n      parameters:\n        - description: The project id.\n          examples:\n            Successful DetectImageWithNoStore request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful DetectImageWithNoStore request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ClassifyImageWithNoStore\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful DetectImageWithNoStore request:\n                  $ref: \"#/components/examples/Successful_DetectImageWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful DetectImageWithNoStore request:\n                  $ref: \"#/components/examples/Successful_DetectImageWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful DetectImageWithNoStore request:\n                  $ref: \"#/components/examples/Successful_DetectImageWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Detect objects in an image without saving the result.\n      tags:\n        - ImagePredictionApi\n  \"/{projectId}/detect/iterations/{publishedName}/url\":\n    post:\n      operationId: DetectImageUrl\n      parameters:\n        - description: The project id.\n          examples:\n            Successful DetectImageUrl request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful DetectImageUrl request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageUrl2\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful DetectImageUrl request:\n                  $ref: \"#/components/examples/Successful_DetectImageUrl_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful DetectImageUrl request:\n                  $ref: \"#/components/examples/Successful_DetectImageUrl_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful DetectImageUrl request:\n                  $ref: \"#/components/examples/Successful_DetectImageUrl_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Detect objects in an image url and saves the result.\n      tags:\n        - ImagePredictionApi\n  \"/{projectId}/detect/iterations/{publishedName}/url/nostore\":\n    post:\n      operationId: DetectImageUrlWithNoStore\n      parameters:\n        - description: The project id.\n          examples:\n            Successful DetectImageUrlWithNoStore request:\n              value: 64b822c5-8082-4b36-a426-27225f4aa18c\n          in: path\n          name: projectId\n          required: true\n          schema:\n            format: uuid\n            type: string\n          x-nullable: false\n        - description: Specifies the name of the model to evaluate against.\n          examples:\n            Successful DetectImageUrlWithNoStore request:\n              value: MyModel1\n          in: path\n          name: publishedName\n          required: true\n          schema:\n            type: string\n        - description: Optional. Specifies the name of application using the endpoint.\n          in: query\n          name: application\n          required: false\n          schema:\n            type: string\n          x-nullable: true\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageUrl\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Successful DetectImageUrlWithNoStore request:\n                  $ref: \"#/components/examples/Successful_DetectImageUrlWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            application/xml:\n              examples:\n                Successful DetectImageUrlWithNoStore request:\n                  $ref: \"#/components/examples/Successful_DetectImageUrlWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n            text/xml:\n              examples:\n                Successful DetectImageUrlWithNoStore request:\n                  $ref: \"#/components/examples/Successful_DetectImageUrlWithNoStore_request\"\n              schema:\n                $ref: \"#/components/schemas/ImagePrediction\"\n          description: OK\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomVisionError\"\n          description: Error response\n      summary: Detect objects in an image url without saving the result.\n      tags:\n        - ImagePredictionApi\ncomponents:\n  examples:\n    Successful_ClassifyImageUrlWithNoStore_request:\n      value:\n        created: 2019-03-06T02:15:00Z\n        id: 951098b2-9b69-427b-bddb-d5cb618874e3\n        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a\n        predictions:\n          - probability: 0.05149666\n            tagId: e31ff107-5505-4753-be42-b369b21b026c\n            tagName: Hemlock\n          - probability: 0.000193528482\n            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a\n            tagName: Japanese Cherry\n        project: 64b822c5-8082-4b36-a426-27225f4aa18c\n    Successful_ClassifyImageUrl_request:\n      value:\n        created: 2019-03-06T02:15:00Z\n        id: 951098b2-9b69-427b-bddb-d5cb618874e3\n        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a\n        predictions:\n          - probability: 0.05149666\n            tagId: e31ff107-5505-4753-be42-b369b21b026c\n            tagName: Hemlock\n          - probability: 0.000193528482\n            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a\n            tagName: Japanese Cherry\n        project: 64b822c5-8082-4b36-a426-27225f4aa18c\n    Successful_ClassifyImageWithNoStore_request:\n      value:\n        created: 2019-03-06T02:15:00Z\n        id: 951098b2-9b69-427b-bddb-d5cb618874e3\n        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a\n        predictions:\n          - probability: 0.05149666\n            tagId: e31ff107-5505-4753-be42-b369b21b026c\n            tagName: Hemlock\n          - probability: 0.000193528482\n            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a\n            tagName: Japanese Cherry\n        project: 64b822c5-8082-4b36-a426-27225f4aa18c\n    Successful_ClassifyImage_request:\n      value:\n        created: 2019-03-06T02:15:00Z\n        id: 951098b2-9b69-427b-bddb-d5cb618874e3\n        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a\n        predictions:\n          - probability: 0.05149666\n            tagId: e31ff107-5505-4753-be42-b369b21b026c\n            tagName: Hemlock\n          - probability: 0.000193528482\n            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a\n            tagName: Japanese Cherry\n        project: 64b822c5-8082-4b36-a426-27225f4aa18c\n    Successful_DetectImageUrlWithNoStore_request:\n      value:\n        created: 2019-03-10T06:10:28Z\n        id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1\n        iteration: 45c79472-7198-46e1-8ed7-bad2ca111957\n        predictions:\n          - boundingBox:\n              height: 0.156851858\n              left: 0.955476165\n              top: 0\n              width: 0.0412225723\n            probability: 0.05149666\n            tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75\n            tagName: Tag 1\n          - boundingBox:\n              height: 0.6830492\n              left: 0.062178582\n              top: 0\n              width: 0.9378114\n            probability: 0.000193528482\n            tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8\n            tagName: Tag 2\n        project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1\n    Successful_DetectImageUrl_request:\n      value:\n        created: 2019-03-10T06:10:28Z\n        id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1\n        iteration: 45c79472-7198-46e1-8ed7-bad2ca111957\n        predictions:\n          - boundingBox:\n              height: 0.156851858\n              left: 0.955476165\n              top: 0\n              width: 0.0412225723\n            probability: 0.05149666\n            tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75\n            tagName: Tag 1\n          - boundingBox:\n              height: 0.6830492\n              left: 0.062178582\n              top: 0\n              width: 0.9378114\n            probability: 0.000193528482\n            tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8\n            tagName: Tag 2\n        project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1\n    Successful_DetectImageWithNoStore_request:\n      value:\n        created: 2019-03-10T06:10:28Z\n        id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1\n        iteration: 45c79472-7198-46e1-8ed7-bad2ca111957\n        predictions:\n          - boundingBox:\n              height: 0.156851858\n              left: 0.955476165\n              top: 0\n              width: 0.0412225723\n            probability: 0.05149666\n            tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75\n            tagName: Tag 1\n          - boundingBox:\n              height: 0.6830492\n              left: 0.062178582\n              top: 0\n              width: 0.9378114\n            probability: 0.000193528482\n            tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8\n            tagName: Tag 2\n        project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1\n    Successful_DetectImage_request:\n      value:\n        created: 2019-03-10T06:10:28Z\n        id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1\n        iteration: 45c79472-7198-46e1-8ed7-bad2ca111957\n        predictions:\n          - boundingBox:\n              height: 0.156851858\n              left: 0.955476165\n              top: 0\n              width: 0.0412225723\n            probability: 0.05149666\n            tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75\n            tagName: Tag 1\n          - boundingBox:\n              height: 0.6830492\n              left: 0.062178582\n              top: 0\n              width: 0.9378114\n            probability: 0.000193528482\n            tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8\n            tagName: Tag 2\n        project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1\n  parameters:\n    Endpoint:\n      description: Supported Cognitive Services endpoints.\n      in: path\n      name: Endpoint\n      required: true\n      schema:\n        type: string\n      x-ms-parameter-location: client\n      x-ms-skip-url-encoding: true\n  requestBodies:\n    ClassifyImage:\n      content:\n        multipart/form-data:\n          schema:\n            properties:\n              imageData:\n                description: Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.\n                format: binary\n                type: string\n            required:\n              - imageData\n            type: object\n      required: true\n    ClassifyImageWithNoStore:\n      content:\n        multipart/form-data:\n          schema:\n            properties:\n              imageData:\n                description: Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB.\n                format: binary\n                type: string\n            required:\n              - imageData\n            type: object\n      required: true\n    ImageUrl:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n      description: An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.\n      required: true\n    ImageUrl2:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/ImageUrl\"\n      description: An ImageUrl that contains the url of the image to be evaluated.\n      required: true\n  schemas:\n    BoundingBox:\n      description: Bounding box that defines a region of an image.\n      properties:\n        height:\n          description: Height.\n          format: float\n          nullable: false\n          readOnly: false\n          type: number\n        left:\n          description: Coordinate of the left boundary.\n          format: float\n          nullable: false\n          readOnly: false\n          type: number\n        top:\n          description: Coordinate of the top boundary.\n          format: float\n          nullable: false\n          readOnly: false\n          type: number\n        width:\n          description: Width.\n          format: float\n          nullable: false\n          readOnly: false\n          type: number\n      required:\n        - left\n        - top\n        - width\n        - height\n      type: object\n    CustomVisionError:\n      properties:\n        code:\n          description: The error code.\n          enum:\n            - NoError\n            - BadRequest\n            - BadRequestExceededBatchSize\n            - BadRequestNotSupported\n            - BadRequestInvalidIds\n            - BadRequestProjectName\n            - BadRequestProjectNameNotUnique\n            - BadRequestProjectDescription\n            - BadRequestProjectUnknownDomain\n            - BadRequestProjectUnknownClassification\n            - BadRequestProjectUnsupportedDomainTypeChange\n            - BadRequestProjectUnsupportedExportPlatform\n            - BadRequestIterationName\n            - BadRequestIterationNameNotUnique\n            - BadRequestIterationDescription\n            - BadRequestIterationIsNotTrained\n            - BadRequestWorkspaceCannotBeModified\n            - BadRequestWorkspaceNotDeletable\n            - BadRequestTagName\n            - BadRequestTagNameNotUnique\n            - BadRequestTagDescription\n            - BadRequestTagType\n            - BadRequestMultipleNegativeTag\n            - BadRequestImageTags\n            - BadRequestImageRegions\n            - BadRequestNegativeAndRegularTagOnSameImage\n            - BadRequestRequiredParamIsNull\n            - BadRequestIterationIsPublished\n            - BadRequestInvalidPublishName\n            - BadRequestInvalidPublishTarget\n            - BadRequestUnpublishFailed\n            - BadRequestSubscriptionApi\n            - BadRequestExceedProjectLimit\n            - BadRequestExceedIterationPerProjectLimit\n            - BadRequestExceedTagPerProjectLimit\n            - BadRequestExceedTagPerImageLimit\n            - BadRequestExceededQuota\n            - BadRequestCannotMigrateProjectWithName\n            - BadRequestNotLimitedTrial\n            - BadRequestImageBatch\n            - BadRequestImageStream\n            - BadRequestImageUrl\n            - BadRequestImageFormat\n            - BadRequestImageSizeBytes\n            - BadRequestImageExceededCount\n            - BadRequestTrainingNotNeeded\n            - BadRequestTrainingNotNeededButTrainingPipelineUpdated\n            - BadRequestTrainingValidationFailed\n            - BadRequestClassificationTrainingValidationFailed\n            - BadRequestMultiClassClassificationTrainingValidationFailed\n            - BadRequestMultiLabelClassificationTrainingValidationFailed\n            - BadRequestDetectionTrainingValidationFailed\n            - BadRequestTrainingAlreadyInProgress\n            - BadRequestDetectionTrainingNotAllowNegativeTag\n            - BadRequestInvalidEmailAddress\n            - BadRequestDomainNotSupportedForAdvancedTraining\n            - BadRequestExportPlatformNotSupportedForAdvancedTraining\n            - BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining\n            - BadRequestExportValidationFailed\n            - BadRequestExportAlreadyInProgress\n            - BadRequestPredictionIdsMissing\n            - BadRequestPredictionIdsExceededCount\n            - BadRequestPredictionTagsExceededCount\n            - BadRequestPredictionResultsExceededCount\n            - BadRequestPredictionInvalidApplicationName\n            - BadRequestPredictionInvalidQueryParameters\n            - BadRequestInvalid\n            - UnsupportedMediaType\n            - Forbidden\n            - ForbiddenUser\n            - ForbiddenUserResource\n            - ForbiddenUserSignupDisabled\n            - ForbiddenUserSignupAllowanceExceeded\n            - ForbiddenUserDoesNotExist\n            - ForbiddenUserDisabled\n            - ForbiddenUserInsufficientCapability\n            - ForbiddenDRModeEnabled\n            - ForbiddenInvalid\n            - NotFound\n            - NotFoundProject\n            - NotFoundProjectDefaultIteration\n            - NotFoundIteration\n            - NotFoundIterationPerformance\n            - NotFoundTag\n            - NotFoundImage\n            - NotFoundDomain\n            - NotFoundApimSubscription\n            - NotFoundInvalid\n            - Conflict\n            - ConflictInvalid\n            - ErrorUnknown\n            - ErrorProjectInvalidWorkspace\n            - ErrorProjectInvalidPipelineConfiguration\n            - ErrorProjectInvalidDomain\n            - ErrorProjectTrainingRequestFailed\n            - ErrorProjectExportRequestFailed\n            - ErrorFeaturizationServiceUnavailable\n            - ErrorFeaturizationQueueTimeout\n            - ErrorFeaturizationInvalidFeaturizer\n            - ErrorFeaturizationAugmentationUnavailable\n            - ErrorFeaturizationUnrecognizedJob\n            - ErrorFeaturizationAugmentationError\n            - ErrorExporterInvalidPlatform\n            - ErrorExporterInvalidFeaturizer\n            - ErrorExporterInvalidClassifier\n            - ErrorPredictionServiceUnavailable\n            - ErrorPredictionModelNotFound\n            - ErrorPredictionModelNotCached\n            - ErrorPrediction\n            - ErrorPredictionStorage\n            - ErrorRegionProposal\n            - ErrorInvalid\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: CustomVisionErrorCodes\n        message:\n          description: A message explaining the error reported by the service.\n          type: string\n      required:\n        - code\n        - message\n      type: object\n    ImagePrediction:\n      description: Result of an image prediction request.\n      properties:\n        created:\n          description: Date this prediction was created.\n          format: date-time\n          nullable: false\n          readOnly: true\n          type: string\n        id:\n          description: Prediction Id.\n          format: uuid\n          nullable: false\n          readOnly: true\n          type: string\n        iteration:\n          description: Iteration Id.\n          format: uuid\n          nullable: false\n          readOnly: true\n          type: string\n        predictions:\n          description: List of predictions.\n          items:\n            $ref: \"#/components/schemas/Prediction\"\n          readOnly: true\n          type: array\n        project:\n          description: Project Id.\n          format: uuid\n          nullable: false\n          readOnly: true\n          type: string\n      type: object\n    ImageUrl:\n      description: Image url.\n      properties:\n        url:\n          description: Url of the image.\n          nullable: false\n          readOnly: false\n          type: string\n      required:\n        - url\n      type: object\n    Prediction:\n      description: Prediction result.\n      properties:\n        boundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        probability:\n          description: Probability of the tag.\n          format: float\n          nullable: false\n          readOnly: true\n          type: number\n        tagId:\n          description: Id of the predicted tag.\n          format: uuid\n          nullable: false\n          readOnly: true\n          type: string\n        tagName:\n          description: Name of the predicted tag.\n          nullable: true\n          readOnly: true\n          type: string\n      type: object\n  securitySchemes:\n    apim_key:\n      in: header\n      name: Prediction-Key\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/microsoft.com/cognitiveservices-Prediction/3.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/microsoft.com/cognitiveservices-Prediction/3.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}