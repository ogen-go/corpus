{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/provisioner/v1beta1/openapi.yaml",
			"byteSize": 18229,
			"content": "components:\n  parameters:\n    AuthorizationHeader:\n      description: Bearer token of the user\n      in: header\n      name: Authorization\n      required: true\n      schema:\n        pattern: ^Bearer .+\n        type: string\n    EcStackName:\n      in: path\n      name: ecStackName\n      required: true\n      schema:\n        maxLength: 200\n        minLength: 1\n        type: string\n    Entitlement:\n      in: path\n      name: entitlement\n      required: true\n      schema:\n        maxLength: 100\n        minLength: 4\n        type: string\n    InviteId:\n      in: path\n      name: inviteId\n      required: true\n      schema:\n        type: string\n    JobId:\n      in: path\n      name: jobId\n      required: true\n      schema:\n        maxLength: 250\n        minLength: 1\n        type: string\n    PrincipalName:\n      in: path\n      name: principalName\n      required: true\n      schema:\n        type: string\n    Tenant:\n      in: path\n      name: tenant\n      required: true\n      schema:\n        type: string\n    TenantName:\n      in: path\n      name: tenantName\n      required: true\n      schema:\n        maxLength: 36\n        minLength: 2\n        type: string\n  requestBodies:\n    SetEntitlement:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SetEntitlement'\n      required: true\n  schemas:\n    AnyValue: {}\n    CreateEntitlementsJobBody:\n      properties:\n        appClientID:\n          maxLength: 250\n          minLength: 2\n          type: string\n        entitlements:\n          $ref: '#/components/schemas/JobEntitlements'\n        subscriptionID:\n          maxLength: 250\n          minLength: 2\n          type: string\n      required:\n      - appClientID\n      - subscriptionID\n      - entitlements\n      type: object\n    CreateProvisionJobBody:\n      properties:\n        apps:\n          items:\n            maxLength: 36\n            minLength: 4\n            pattern: ^[_a-z][_\\.a-z0-9]*$\n            type: string\n          type: array\n        tenant:\n          maxLength: 36\n          minLength: 2\n          pattern: ^[a-z0-9][a-z0-9\\-]*[a-z0-9]$\n          type: string\n      type: object\n    CreateUpdateTenantStatusJobBody:\n      properties:\n        action:\n          enum:\n          - delete\n          - suspend\n          - resume\n          type: string\n        tenant:\n          type: string\n      required:\n      - tenant\n      - action\n      type: object\n    Entitlement:\n      properties:\n        appClientID:\n          maxLength: 250\n          minLength: 2\n          type: string\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/EntitlementStatus'\n        updatedAt:\n          format: date-time\n          type: string\n        updatedBy:\n          type: string\n        value:\n          $ref: '#/components/schemas/AnyValue'\n      required:\n      - name\n      - value\n      - updatedAt\n      - updatedBy\n      - status\n      - appClientID\n      type: object\n    EntitlementLog:\n      properties:\n        action:\n          type: string\n        appClientID:\n          maxLength: 250\n          minLength: 2\n          type: string\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/EntitlementStatus'\n        updatedAt:\n          format: date-time\n          type: string\n        updatedBy:\n          type: string\n        value:\n          $ref: '#/components/schemas/AnyValue'\n      required:\n      - name\n      - appClientID\n      - value\n      - updatedAt\n      - updatedBy\n      - action\n      - status\n      type: object\n    EntitlementLogs:\n      items:\n        $ref: '#/components/schemas/EntitlementLog'\n      type: array\n    EntitlementSettings:\n      items:\n        $ref: '#/components/schemas/Entitlement'\n      type: array\n    EntitlementStatus:\n      enum:\n      - active\n      - provisioning\n      - failed\n      - deleting\n      type: string\n    EntitlementsJobInfo:\n      properties:\n        appClientID:\n          maxLength: 250\n          minLength: 2\n          type: string\n        createdAt:\n          format: date-time\n          type: string\n        createdBy:\n          type: string\n        entitlements:\n          $ref: '#/components/schemas/JobEntitlements'\n        errors:\n          $ref: '#/components/schemas/EntitlementsJobInfoErrors'\n        jobID:\n          minLength: 1\n          type: string\n        status:\n          enum:\n          - created\n          - running\n          - completed\n          - failed\n          type: string\n        subscriptionID:\n          maxLength: 250\n          minLength: 2\n          type: string\n        tenant:\n          type: string\n      required:\n      - jobID\n      - appClientID\n      - subscriptionID\n      - tenant\n      - entitlements\n      - status\n      - createdAt\n      - createdBy\n      - errors\n      type: object\n    EntitlementsJobInfoErrors:\n      items:\n        $ref: '#/components/schemas/EntitlementsJobInfoErrorsItems'\n      type: array\n    EntitlementsJobInfoErrorsItems:\n      properties:\n        app:\n          type: string\n        code:\n          type: string\n        entitlementName:\n          type: string\n        jobStage:\n          type: string\n        message:\n          type: string\n      required:\n      - jobStage\n      - code\n      - message\n      type: object\n    Error:\n      properties:\n        code:\n          description: Service error code\n          type: string\n        message:\n          description: Human readable error message\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    InviteBody:\n      properties:\n        comment:\n          type: string\n        email:\n          format: email\n          type: string\n        groups:\n          items:\n            type: string\n          type: array\n      required:\n      - email\n      type: object\n    InviteInfo:\n      properties:\n        comment:\n          type: string\n        createdAt:\n          format: date-time\n          type: string\n        createdBy:\n          type: string\n        email:\n          type: string\n        errors:\n          $ref: '#/components/schemas/InviteInfoErrors'\n        expiresAt:\n          format: date-time\n          type: string\n        groups:\n          items:\n            type: string\n          type: array\n        inviteID:\n          minLength: 1\n          type: string\n        status:\n          enum:\n          - created\n          - invited\n          - accepted\n          - rejected\n          - expired\n          - failed\n          - invalid\n          type: string\n        tenant:\n          type: string\n        updatedAt:\n          format: date-time\n          type: string\n        updatedBy:\n          type: string\n      required:\n      - inviteID\n      - tenant\n      - email\n      - groups\n      - status\n      - comment\n      - createdAt\n      - createdBy\n      - updatedAt\n      - updatedBy\n      - expiresAt\n      - errors\n      type: object\n    InviteInfoErrors:\n      items:\n        $ref: '#/components/schemas/InviteInfoErrorsItems'\n      type: array\n    InviteInfoErrorsItems:\n      properties:\n        action:\n          type: string\n        code:\n          type: string\n        group:\n          type: string\n        message:\n          type: string\n      required:\n      - code\n      - message\n      - action\n      type: object\n    Invites:\n      items:\n        $ref: '#/components/schemas/InviteInfo'\n      type: array\n    JobEntitlement:\n      properties:\n        name:\n          maxLength: 100\n          minLength: 2\n          type: string\n        value:\n          $ref: '#/components/schemas/AnyValue'\n      required:\n      - name\n      - value\n      type: object\n    JobEntitlements:\n      items:\n        $ref: '#/components/schemas/JobEntitlement'\n      type: array\n    ProvisionJobInfo:\n      properties:\n        apps:\n          items:\n            type: string\n          type: array\n        createdAt:\n          format: date-time\n          type: string\n        createdBy:\n          type: string\n        errors:\n          $ref: '#/components/schemas/ProvisionJobInfoErrors'\n        jobID:\n          minLength: 1\n          type: string\n        status:\n          enum:\n          - created\n          - running\n          - completed\n          type: string\n        tenant:\n          type: string\n      required:\n      - jobID\n      - tenant\n      - apps\n      - status\n      - createdAt\n      - createdBy\n      - errors\n      type: object\n    ProvisionJobInfoErrors:\n      items:\n        $ref: '#/components/schemas/ProvisionJobInfoErrorsItems'\n      type: array\n    ProvisionJobInfoErrorsItems:\n      properties:\n        app:\n          type: string\n        code:\n          type: string\n        job_stage:\n          type: string\n        message:\n          type: string\n      required:\n      - job_stage\n      - code\n      - message\n      type: object\n    ProvisionJobs:\n      items:\n        $ref: '#/components/schemas/ProvisionJobInfo'\n      type: array\n    SetEntitlement:\n      properties:\n        value:\n          $ref: '#/components/schemas/AnyValue'\n      required:\n      - value\n      type: object\n    TenantInfo:\n      properties:\n        createdAt:\n          format: date-time\n          type: string\n        createdBy:\n          type: string\n        name:\n          type: string\n        status:\n          type: string\n      required:\n      - name\n      - status\n      - createdAt\n      - createdBy\n      type: object\n    Tenants:\n      items:\n        $ref: '#/components/schemas/TenantInfo'\n      type: array\n    UpdateInviteBody:\n      properties:\n        action:\n          enum:\n          - accept\n          - reject\n          - resend\n          type: string\n      required:\n      - action\n      type: object\n    UpdateTenantStatusJobInfo:\n      properties:\n        createdAt:\n          format: date-time\n          type: string\n        createdBy:\n          type: string\n        errors:\n          $ref: '#/components/schemas/UpdateTenantStatusJobInfoErrors'\n        jobID:\n          minLength: 1\n          type: string\n        status:\n          enum:\n          - created\n          - running\n          - completed\n          type: string\n        tenant:\n          type: string\n      required:\n      - jobID\n      - tenant\n      - status\n      - createdAt\n      - createdBy\n      - errors\n      type: object\n    UpdateTenantStatusJobInfoErrors:\n      items:\n        $ref: '#/components/schemas/UpdateTenantStatusJobInfoErrorsItems'\n      type: array\n    UpdateTenantStatusJobInfoErrorsItems:\n      properties:\n        code:\n          type: string\n        job_stage:\n          type: string\n        message:\n          type: string\n      required:\n      - job_stage\n      - code\n      - message\n      type: object\n    UpdateTenantStatusJobs:\n      items:\n        $ref: '#/components/schemas/UpdateTenantStatusJobInfo'\n      type: array\ninfo:\n  description: With the Provisioner service in Splunk Cloud Services, you can provision\n    and manage tenants.\n  title: Provisioner\n  version: v1beta1.4\nopenapi: 3.0.0\npaths:\n  /{tenant}/provisioner/v1beta1/invites:\n    get:\n      description: Returns a list of invitations in a given tenant.\n      operationId: listInvites\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invites'\n          description: The invitation list was successfully retrieved.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"404\":\n          description: The resource wasn't found.\n        \"429\":\n          description: Too many requests were sent.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The reason for the error\n      x-authz-scope: identity.invites.read\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/Tenant'\n    post:\n      description: Creates an invitation for a person to join the tenant using their\n        email address.\n      operationId: createInvite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InviteBody'\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InviteInfo'\n          description: The invitation was created successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"409\":\n          description: The invitation already exists.\n        \"422\":\n          description: The provided fields aren't valid.\n        \"429\":\n          description: Too many requests were sent.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The reason for the error\n      x-authz-scope: identity.invites.write\n  /{tenant}/provisioner/v1beta1/invites/{inviteId}:\n    delete:\n      description: Removes an invitation in the given tenant.\n      operationId: deleteInvite\n      responses:\n        \"204\":\n          description: The invitation was removed successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"422\":\n          description: The provided fields aren't valid.\n        \"429\":\n          description: Too many requests were sent.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The reason for the error\n      x-authz-scope: identity.invites.write\n    get:\n      description: Returns an invitation in the given tenant.\n      operationId: getInvite\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InviteInfo'\n          description: The invitation was returned successfully.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"429\":\n          description: Too many requests were sent.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The reason for the error\n      x-authz-scope: identity.invites.read\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/Tenant'\n    - $ref: '#/components/parameters/InviteId'\n    patch:\n      description: Modifies an invitation in the given tenant.\n      operationId: updateInvite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateInviteBody'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InviteInfo'\n          description: The invitation was modified successfully.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"422\":\n          description: The provided fields aren't valid.\n        \"423\":\n          description: The resource is locked.\n        \"429\":\n          description: Too many requests were sent.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The reason for the error\n      x-authz-scope: identity.invites.write\n  /system/provisioner/v1beta1/tenants:\n    get:\n      description: Returns all tenants that the user can read.\n      operationId: listTenants\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tenants'\n          description: The list of readable tenants was successfully returned.\n        \"401\":\n          description: The user isn't authenticated.\n        \"429\":\n          description: Too many requests were sent.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The reason for the error\n      x-authz-scope: identity.tenants.read\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n  /system/provisioner/v1beta1/tenants/{tenantName}:\n    get:\n      description: Returns a specific tenant.\n      operationId: getTenant\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TenantInfo'\n          description: The tenant was returned successfully.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"422\":\n          description: The provided fields aren't valid.\n        \"429\":\n          description: Too many requests were sent.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The reason for the error\n      x-authz-scope: identity.tenants.read\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/TenantName'\nservers:\n- url: /\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: provisioner/v1beta1/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/provisioner/v1beta1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/provisioner/v1beta1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}