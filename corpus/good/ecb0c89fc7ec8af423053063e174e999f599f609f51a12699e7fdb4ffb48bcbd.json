{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/KNowledgeOnWebScale/walder"
		},
		"file": {
			"name": "config.yaml",
			"size": 0,
			"path": "example/config.yaml",
			"byteSize": 5316,
			"content": "openapi: 3.0.2\ninfo:\n  title: 'Example site'\n  version: 0.1.0\nx-walder-resources:\n  root: ./\n  views: views\n  pipe-modules: pipeModules\n  public: public\nx-walder-datasources:\n  - http://fragments.dbpedia.org/2016-04/en\npaths:\n  /music/{musician}:\n    get:\n      summary: Returns a list of songs of the given musician.\n      parameters:\n        - in: path\n          name: musician\n          required: true\n          schema:\n            type: string\n          description: The target musician\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            label @single\n            artist(label_en: $musician)\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": \"http://www.w3.org/2000/01/rdf-schema#label\",\n              \"label_en\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"writer\": \"http://dbpedia.org/ontology/writer\",\n              \"artist\": \"http://dbpedia.org/ontology/musicalArtist\"\n            }\n          }\n      responses:\n        200:\n          description: list of songs\n          x-walder-input-text/html: songs.handlebars\n  /artist/{artist}:\n    get:\n      summary: Returns a list of a given artist's songs written by a specific person.\n      parameters:\n        - in: path\n          name: artist\n          required: true\n          schema:\n            type: string\n          description: The target artist\n        - in: query\n          name: writer\n          required: true\n          schema:\n            type: string\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            label @single\n            writer(label: $writer)  @single\n            artist  @single(scope: all) {\n              label(_:$artist)\n            }\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"writer\": \"http://dbpedia.org/ontology/writer\",\n              \"artist\": \"http://dbpedia.org/ontology/musicalArtist\"\n            }\n          }\n      responses:\n        200:\n          description: list of songs\n          x-walder-input-text/html: artist-writer.pug\n  /bradpitt-directors:\n    get:\n      summary: Returns a list of directors of movies starring Brad Pitt\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            director @single(scope: all) {\n              label\n            }\n            starring(label_en: \"Brad Pitt\")  @single\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": \"http://www.w3.org/2000/01/rdf-schema#label\",\n              \"label_en\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"director\": \"http://dbpedia.org/ontology/director\",\n              \"starring\": \"http://dbpedia.org/ontology/starring\"\n            }\n          }\n      responses:\n        200:\n          description: list of directors of movies starring Brad Pitt\n          x-walder-input-text/html: directors.pug\n  /music/{artist}/postprocessed:\n    get:\n      summary: Returns a list of the all songs of a given artist, only keeping those with titles containing 'star'.\n      parameters:\n        - in: path\n          name: artist\n          required: true\n          schema:\n            type: string\n          description: The target artist\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            label @single\n            artist {\n              label(_:$artist)\n            }\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"artist\": \"http://dbpedia.org/ontology/musicalArtist\"\n            }\n          }\n      x-walder-postprocessing:\n        filterT:\n          source: filterT.js\n      responses:\n        200:\n          description: list of songs\n          x-walder-input-text/html: artist-writer.pug\n  /movies/{actor}/postprocessed_with_variables:\n    get:\n      summary: Returns a list of the all movies the given actor stars in, filtered on movie titles containing 'A' and 'T'\n      parameters:\n        - in: path\n          name: actor\n          required: true\n          schema:\n            type: string\n          description: The target actor\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            id @single\n            ... on Film {\n              starring(label: $actor) @single\n            }\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"Film\": \"http://dbpedia.org/ontology/Film\",\n              \"label\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"starring\": \"http://dbpedia.org/ontology/starring\"\n            }\n          }\n      x-walder-postprocessing:\n        filterT_withParameters:\n          source: filterT_withParameters.js\n          parameters:\n            - _data\n            - true\n      responses:\n        200:\n          description: list of movies\n          x-walder-input-text/html: movies.pug\nx-walder-errors:\n  404:\n    description: page not found error\n    x-walder-input-text/html: error404.html\n  500:\n    description: internal server error\n    x-walder-input-text/html: error500.html\n",
			"canonicalURL": "/github.com/KNowledgeOnWebScale/walder@dd3aaa9022006d379daac13ea20f49d77ad7f835/-/blob/example/config.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/KNowledgeOnWebScale/walder/blob/dd3aaa9022006d379daac13ea20f49d77ad7f835/example/config.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}