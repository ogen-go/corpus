{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apigee/api-platform-samples"
		},
		"file": {
			"name": "jokes-api.yaml",
			"size": 0,
			"path": "tutorial-demos/firestore-demo/specs/jokes-api.yaml",
			"byteSize": 4545,
			"content": "# Example OpenAPI YAML to get you started quickly.\n# Note: YAML has indentation based coping.\n# Code completion support is available so start typing for\n# available options.\n# This example follows the recommendations of the API \n# Improvement Proposals for common API patterns. Find more\n# at https://google.aip.dev/\n\n# Find the full OpenAPI reference at:\n# https://github.com/OAI/OpenAPI-Specification\nopenapi: 3.0.3\n\n# This is your document metadata.\ninfo:\n  version: 0.0.1\n  title: Joke API\n  description: API to get and maintain the best, and worst, jokes on the planet\n# Servers where this API is hosted\nservers: \n  - url: https://emea-poc13-prod.apigee.net/importantstuff\n\nsecurity:\n  - ApiKeyAuth: []\n  \n# Describe your paths here\npaths:\n  '/jokes':\n    get:\n      summary: 'Get all joke data.'\n      description: 'Get all joke data.'\n      responses:\n        # Response code\n        '200':\n          description: Successful response\n          # Response body content.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfJokes'  \n    post:\n      summary: 'Creates a new Joke configuration'\n      description: 'Creates a new Joke configuration'\n      requestBody:\n        description: 'Joke object'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Joke'            \n      responses:\n        '201':\n          description: item created    \n  '/jokes/{id}':\n    # This is an HTTP operation\n    get:\n      summary: 'Get the joke data.'\n      description: 'Get the joke data'\n      parameters:\n        # An example parameter that is in query and is required\n        - name: id\n          in: path\n          description: |\n            Unique identifier of the desired joke object.\n          required: true\n          schema:\n            type: string\n      responses:\n        # Response code\n        '200':\n          description: Successful response\n          # Response body content.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Joke'\n    put:\n      summary: 'Updates a Joke configuration'\n      description: 'Updates a Joke configuration'\n      parameters:\n        # An example parameter that is in query and is required\n        - name: id\n          in: path\n          description: |\n            Unique identifier of the desired joke object.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: 'joke object'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Joke'            \n      responses:\n        '201':\n          description: item updated     \n    delete:\n      summary: 'Deletes a Joke configuration'\n      description: 'Deletes a Joke configuration'\n      parameters:\n        # An example parameter that is in query and is required\n        - name: id\n          in: path\n          description: |\n            Unique identifier of the desired joke object.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: success           \ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: x-apikey\n  # Schemas is a map of names to Schema objects\n  schemas:\n    Joke:\n      title: Joke\n      type: object\n      properties:\n        id:\n          description: |\n            [Resource Name](https://aip.dev/122) of a joke.\n            Format: `meters/{meterid}`\n          type: string\n        text:\n          description: 'Text of a joke.'\n          type: string\n        punchline:\n          description: 'Punchline of a joke.'\n          type: string\n        location:\n          description: 'The location of the joke'\n          type: string\n          example: \"52.517568, 10.959388\"     \n        timestamp:\n          description: \"The timestamp of the moment of inspiration for the joke\"\n          format: date-time\n          type: string\n        funny:\n          description: \"The scientific measurement if the joke is funny.\"\n          type: boolean\n        imagePath:\n          description: \"An image that gives the joke away\"\n          type: string\n    ArrayOfJokes:\n      title: ArrayOfJokes\n      type: object\n      properties:\n        jokes:\n          description: array of jokes\n          type: array\n          items: \n            $ref: '#/components/schemas/Joke'          \n\n",
			"canonicalURL": "/github.com/apigee/api-platform-samples@8c1d9d14904e5f258f4088ad67cbee05b5c8de9b/-/blob/tutorial-demos/firestore-demo/specs/jokes-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apigee/api-platform-samples/blob/8c1d9d14904e5f258f4088ad67cbee05b5c8de9b/tutorial-demos/firestore-demo/specs/jokes-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}