{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FraunhoferISST/diva"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "core/services/adapter-services/urban-pulse-adapter/apiDoc/openapi.yml",
			"byteSize": 6988,
			"content": "openapi: 3.0.0\ninfo:\n  description: Urban Pulse Adapter provides an API to import Urban Pulse Sensors as resource to DIVA\n  version: 1.0.0\n  title: Urban Pulse Adapter API\ntags:\n  - name: import\n    description: Imports the Urban Pulse sensors as DIVA resources\npaths:\n  /import:\n    post:\n      tags:\n        - import\n      summary: Import sensors from the provided Urban Pulse instace\n      description: The adapter connects to the Urban Pulse instance with the provided base URL and credentials and imports all availiable sensors\n        as DIVA resources. Also specific seonsors can be specified in an array of id's to import only this sensors. If one of the provided sensors where not found,\n        a corresponsing error is thrown. Optionaly the resources can be grouped to an asset. The adapter is aible to create a new asset\n        or to group the sensors in an existing asset. The adapter responses with an array with further information for the import of each sensor\n      operationId: import\n      parameters:\n        - $ref: \"#/components/parameters/useridParam\"\n        - name: createAsset\n          in: query\n          description: Indicates whether the imported sensors should be grouped to a newly created asset\n          required: false\n          explode: true\n          schema:\n            type: boolean\n            default: false\n            example: true\n        - name: streamResponse\n          in: query\n          description: Indicates whether response should be a stream\n          required: false\n          explode: true\n          schema:\n            type: boolean\n            default: false\n            example: true\n        - name: assetId\n          in: query\n          description: The id of the existing asset under wich the sensors should be grouped. If provided, `createAsset`\n            must not be sended explicitly\n          required: false\n          explode: true\n          schema:\n            type: string\n            example: \"asset:uuid:e574eb15-c88d-4293-a48d-bafa242f41e7\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ImportData\"\n      responses:\n        207:\n          $ref: \"#/components/responses/ImportSucces\"\n        404:\n          $ref: \"#/components/responses/NotFoundError\"\n        500:\n          $ref: \"#/components/responses/UnexpectedError\"\n\nservers:\n  - url: http://localhost:4003\ncomponents:\n  requestBodies:\n    ImportData:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ImportData\"\n\n  schemas:\n    ImportData:\n      description: Data for resources import\n      type: object\n      additionalProperties: false\n      required:\n        - baseUrl\n        - username\n        - password\n        - since\n        - until\n      properties:\n        baseUrl:\n          type: string\n          title: BaseUrl\n          description: The base url of the urban pulse instance\n          minLength: 1\n          pattern: \"^(.*)$\"\n          example: \"https://example.urbanpulse.com\"\n        username:\n          type: string\n          title: Username\n          description: Username to access the urban pulse instance\n          minLength: 1\n          pattern: \"^(.*)$\"\n        password:\n          type: string\n          title: Password\n          description: Password to access the urban pulse instance\n          minLength: 1\n        since:\n          type: string\n          format: date-time\n          title: Startdate\n          description: Starting date for fetching sensor data\n        until:\n          type: string\n          format: date-time\n          title: Startdate\n          description: End date for fetching sensor data\n        sensors:\n          type: array\n          title: Sensors Id's\n          description: An optional array of Urban Pulse sensors id's that should be imported. If not provided,\n            all availiable sensors will be imported\n          example: [\"d4bd81aa-e305-422a-8d2a-d97287f98e33\"]\n          items:\n            type: string\n            example: \"d4bd81aa-e305-422a-8d2a-d97287f98e31\"\n\n    Error:\n      type: object\n      title: Operation error\n      description: Error that can occure on request processing\n      required:\n        - type\n        - message\n        - code\n      properties:\n        type:\n          title: Error type\n          description: Futher error type information\n          type: string\n        message:\n          title: Error message\n          description: Details about error\n          type: string\n        code:\n          title: Error code\n          description: HTTP error code\n          type: number\n          format: int32\n          example: 409\n        errors:\n          title: Errors\n          description: More error details that are reference in most case specification or schema validation errors\n          type: array\n          items:\n            type: object\n  responses:\n    ImportSucces:\n      description: Multi-status response in case of a successful import\n      content:\n        application/json:\n          schema:\n            title: Multi-status response\n            description: Indicates the status for operation for each sensor that should be imported\n            type: array\n            items:\n              type: object\n              required:\n                - statusCode\n                - uniqueFingerprint\n              properties:\n                statusCode:\n                  title: Status Code\n                  description: Status Code for single sensor import operation.\n                  type: integer\n                  example: 201\n                uniqueFingerprint:\n                  type: string\n                  title: Unique indentifier\n                  description: Global Unique indentifier as described in resource schema\n                data:\n                  title: Operation data\n                  description: Additional data as a result of a single resource operation\n                  oneOf:\n                    - type: string\n                    - type: object\n                error:\n                  $ref: \"#/components/schemas/Error\"\n    UnexpectedError:\n      description: Internal error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFoundError:\n      description: Sensor not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    InvalidDataError:\n      description: Invalid data supplied\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    ResourceAlreadyExistsError:\n      description: Resource already imported\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n  parameters:\n    useridParam:\n      in: header\n      description: The id of the origin that produces action/message. Can be a user or service\n      name: x-actorid\n      schema:\n        type: string\n        minLength: 1\n      required: true",
			"canonicalURL": "/github.com/FraunhoferISST/diva@67fac716105e2a805c392529c3b5b14d59dd3773/-/blob/core/services/adapter-services/urban-pulse-adapter/apiDoc/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/FraunhoferISST/diva/blob/67fac716105e2a805c392529c3b5b14d59dd3773/core/services/adapter-services/urban-pulse-adapter/apiDoc/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}