{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/netlicensing.io/2.x/openapi.yaml",
			"byteSize": 77898,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://go.netlicensing.io/core/v2/rest\ninfo:\n  description: The Labs64 \u003ca href='https://netlicensing.io/wiki/restful-api' target='_blank'\u003eNetLicensing RESTful API\u003c/a\u003e gives you access to NetLicensingâ€™s core features.\u003cbr/\u003e\u003cbr/\u003e\u003cstrong\u003eAuthentication\u003c/strong\u003e\u003cbr/\u003eYou authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - \u003ccode\u003edemo:demo\u003c/code\u003e\u003cbr/\u003e\u003cbr/\u003eFind out more about Labs64 NetLicensing at \u003ca href='https://netlicensing.io' target='_blank'\u003enetlicensing.io\u003c/a\u003e\n  termsOfService: https://www.labs64.com/legal/terms-of-service/netlicensing\n  title: Labs64 NetLicensing RESTful API Test Center\n  version: 2.x\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://www.labs64.com/content/uploads/2015/06/labs64-logo.png\n  x-origin:\n    - format: openapi\n      url: http://io.labs64.com/NetLicensing-API/v2.x/netlicensing.json\n      version: \"3.0\"\n  x-providerName: netlicensing.io\ntags:\n  - description: Product operations\n    externalDocs:\n      description: Product Services\n      url: https://netlicensing.io/wiki/product-services\n    name: Product\n  - description: Product Module operations\n    externalDocs:\n      description: Product Module Services\n      url: https://netlicensing.io/wiki/product-module-services\n    name: Product Module\n  - description: License Template operations\n    externalDocs:\n      description: License Template Services\n      url: https://netlicensing.io/wiki/license-template-services\n    name: License Template\n  - description: Licensee operations\n    externalDocs:\n      description: Licensee Services\n      url: https://netlicensing.io/wiki/licensee-services\n    name: Licensee\n  - description: License operations\n    externalDocs:\n      description: License Services\n      url: https://netlicensing.io/wiki/license-services\n    name: License\n  - description: Transaction operations\n    externalDocs:\n      description: Transaction Services\n      url: https://netlicensing.io/wiki/transaction-services\n    name: Transaction\n  - description: Token operations\n    externalDocs:\n      description: Token Services\n      url: https://netlicensing.io/wiki/token-services\n    name: Token\n  - description: Payment Method operations\n    externalDocs:\n      description: Payment Method Services\n      url: https://netlicensing.io/wiki/payment-method-services\n    name: Payment Method\n  - description: Utility operations\n    externalDocs:\n      description: Utility Services\n      url: https://netlicensing.io/wiki/utility-services\n    name: Utility\npaths:\n  /license:\n    get:\n      description: Return a list of all Licenses for the current Vendor\n      operationId: listLicenses\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Licenses\n      tags:\n        - License\n    post:\n      description: Creates a new License\n      operationId: createLicense\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  type: boolean\n                currency:\n                  description: Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation\n                  type: string\n                hidden:\n                  description: If set to 'true', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly\n                  type: boolean\n                licenseTemplateNumber:\n                  type: string\n                licenseeNumber:\n                  type: string\n                name:\n                  description: Name for the Licensed item. Set from License Template on creation, if not specified explicitly.\n                  type: string\n                number:\n                  type: string\n                parentfeature:\n                  description: Mandatory for 'TIMEVOLUME' License Type and 'RENTAL' licensing model\n                  type: string\n                price:\n                  description: Price for the License. If \u003e0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation\n                  format: double\n                  type: number\n                quantity:\n                  description: Mandatory for 'Pay-per-Use' License Model.\n                  type: string\n                startDate:\n                  description: Mandatory for 'TIMEVOLUME' License Type.\n                  format: date-time\n                  type: string\n                timeVolume:\n                  description: Mandatory for 'TIMEVOLUME' License Type.\n                  type: string\n                timeVolumePeriod:\n                  description: For 'TIMEVOLUME' License Type.\n                  type: string\n                usedQuantity:\n                  description: Mandatory for 'Pay-per-Use' License Model.\n                  type: string\n              required:\n                - licenseeNumber\n                - licenseTemplateNumber\n                - active\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Create License\n      tags:\n        - License\n  \"/license/{licenseNumber}\":\n    delete:\n      description: Delete License by a 'licenseNumber'\n      operationId: deleteLicense\n      parameters:\n        - description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.\n          in: path\n          name: licenseNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Delete License\n      tags:\n        - License\n    get:\n      description: Get License by a 'licenseNumber'\n      operationId: getLicense\n      parameters:\n        - description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.\n          in: path\n          name: licenseNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Get License\n      tags:\n        - License\n    post:\n      description: Update License by a 'licenseNumber'\n      operationId: updateLicense\n      parameters:\n        - description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.\n          in: path\n          name: licenseNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  type: boolean\n                currency:\n                  description: Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation\n                  type: string\n                hidden:\n                  description: If set to 'true', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly\n                  type: boolean\n                name:\n                  description: Name for the Licensed item. Set from License Template on creation, if not specified explicitly.\n                  type: string\n                number:\n                  description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.\n                  type: string\n                parentfeature:\n                  type: string\n                price:\n                  description: Price for the License. If \u003e 0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation\n                  format: double\n                  type: number\n                quantity:\n                  description: Mandatory for 'Pay-per-Use' License Model.\n                  type: string\n                startDate:\n                  description: For 'TIMEVOLUME' License type\n                  format: date-time\n                  type: string\n                timeVolume:\n                  description: Mandatory for 'TIMEVOLUME' License Type.\n                  type: string\n                timeVolumePeriod:\n                  description: For 'TIMEVOLUME' License Type.\n                  type: string\n                usedQuantity:\n                  description: Mandatory for 'Pay-per-Use' License Model.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Update License\n      tags:\n        - License\n  /licensee:\n    get:\n      description: Return a list of all Licensees for the current Vendor\n      operationId: listLicensees\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Licensees\n      tags:\n        - Licensee\n    post:\n      description: Creates a new Licensee\n      operationId: createLicensee\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled\n                  type: boolean\n                markedForTransfer:\n                  description: Mark Licensee for transfer.\n                  type: boolean\n                name:\n                  type: string\n                number:\n                  description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee\n                  type: string\n                productNumber:\n                  description: \"'productNumber' to assign new Licensee object\"\n                  type: string\n              required:\n                - productNumber\n                - active\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"402\":\n          description: Quota exceeded\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Create Licensee\n      tags:\n        - Licensee\n  \"/licensee/{licenseeNumber}\":\n    delete:\n      description: Delete a Licensee by 'number'\n      operationId: deleteLicensee\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Licensee.\n          in: path\n          name: licenseeNumber\n          required: true\n          schema:\n            type: string\n        - description: Force object deletion and all descendants.\n          in: query\n          name: forceCascade\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Delete Licensee\n      tags:\n        - Licensee\n    get:\n      description: Return a Licensee by 'licenseeNumber'\n      operationId: getLicensee\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee.\n          in: path\n          name: licenseeNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Get Licensee\n      tags:\n        - Licensee\n    post:\n      description: Sets the provided properties to a Licensee. Return an updated Licensee\n      operationId: updateLicensee\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee.\n          in: path\n          name: licenseeNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled\n                  type: boolean\n                markedForTransfer:\n                  description: Mark Licensee for transfer.\n                  type: boolean\n                name:\n                  type: string\n                number:\n                  description: New Licensee number (update).\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"402\":\n          description: Quota exceeded\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Update Licensee\n      tags:\n        - Licensee\n  \"/licensee/{licenseeNumber}/transfer\":\n    post:\n      description: Licenses transfer between Licensees\n      operationId: transferLicenses\n      parameters:\n        - description: Licensee number with a maximum length of 1000 characters\n          in: path\n          name: licenseeNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                sourceLicenseeNumber:\n                  description: Licensee number which Licenses to be transferred\n                  type: string\n              required:\n                - sourceLicenseeNumber\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Transfer Licenses\n      tags:\n        - Licensee\n  \"/licensee/{licenseeNumber}/validate\":\n    post:\n      description: Validates active Licenses of the Licensee\n      operationId: validateLicensee\n      parameters:\n        - description: Licensee number with a maximum length of 1000 characters\n          in: path\n          name: licenseeNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                action:\n                  description: \"'Floating' licensing model: check-out or check-in session action, to allocate or return it from/to the pool of available sessions\"\n                  enum:\n                    - checkOut\n                    - checkIn\n                  type: string\n                licenseeName:\n                  description: Human-readable name for the auto-created Licensee (will be set as custom Licensee property)\n                  type: string\n                nodeSecret:\n                  description: \"'Node-Locked' licensing model: specifies unique secret\"\n                  type: string\n                productModuleNumber:\n                  description: \"'Node-Locked' licensing model: product module number\"\n                  type: string\n                productNumber:\n                  description: Product number, must be provided when 'Licensee auto-create' is enabled (see also Product JavaDoc). Identifies the Product to which new Licensee should be added\n                  type: string\n                sessionId:\n                  description: \"'Floating' licensing model: specifies unique session identifier\"\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Validate Licensee\n      tags:\n        - Licensee\n  /licensetemplate:\n    get:\n      description: Return a list of all License Templates for the current Vendor\n      operationId: listLicenseTemplates\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List License Templates\n      tags:\n        - License Template\n    post:\n      description: Creates a new License Template\n      operationId: createLicenseTemplate\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.\n                  type: boolean\n                automatic:\n                  description: If set to 'true', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.\n                  type: boolean\n                currency:\n                  description: Specifies currency for the License price. Check data types to discover which currencies are supported.\n                  type: string\n                hidden:\n                  description: If set to 'true', this License Template is not shown in NetLicensing Shop as offered for purchase.\n                  type: boolean\n                hideLicenses:\n                  description: If set to 'true', Licenses from this License Template are not visible to the end customer, but participate in validation.\n                  type: boolean\n                licenseType:\n                  description: \"Type of Licenses created from this License Template. Supported types: FEATURE, TIMEVOLUME, FLOATING, QUANTITY\"\n                  type: string\n                maxSessions:\n                  description: Mandatory for 'FLOATING' License Type.\n                  type: string\n                name:\n                  description: License Template name to create License Template object\n                  type: string\n                number:\n                  description: Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.\n                  type: string\n                price:\n                  description: Price for the License. If \u003e0, it must always be accompanied by the currency specification.\n                  format: double\n                  type: number\n                productModuleNumber:\n                  description: Number of Product Module to create License Template object\n                  type: string\n                quantity:\n                  description: Mandatory for 'Pay-per-Use' and 'Node-Locked' License Model.\n                  type: string\n                quota:\n                  description: Mandatory for 'Quota' License Model.\n                  type: string\n                timeVolume:\n                  description: Mandatory for 'TIMEVOLUME' License Type.\n                  type: string\n                timeVolumePeriod:\n                  description: For 'TIMEVOLUME' License Type.\n                  type: string\n              required:\n                - productModuleNumber\n                - name\n                - active\n                - licenseType\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Create License Template\n      tags:\n        - License Template\n  \"/licensetemplate/{licenseTemplateNumber}\":\n    delete:\n      description: Delete a License Template by 'number'.\n      operationId: deleteLicenseTemplate\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the License Template.\n          in: path\n          name: licenseTemplateNumber\n          required: true\n          schema:\n            type: string\n        - description: Force object deletion and all descendants.\n          in: query\n          name: forceCascade\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Delete License Template\n      tags:\n        - License Template\n    get:\n      description: Return a License Template by 'licenseTemplateNumber'\n      operationId: getLicenseTemplate\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.\n          in: path\n          name: licenseTemplateNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Get License Template\n      tags:\n        - License Template\n    post:\n      description: Sets the provided properties to a License Template. Return an updated License Template\n      operationId: updateLicenseTemplate\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.\n          in: path\n          name: licenseTemplateNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.\n                  type: boolean\n                automatic:\n                  description: If set to 'true', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.\n                  type: boolean\n                currency:\n                  description: Specifies currency for the License price. Check data types to discover which currencies are supported.\n                  type: string\n                hidden:\n                  description: If set to 'true', this License Template is not shown in NetLicensing Shop as offered for purchase.\n                  type: boolean\n                hideLicenses:\n                  description: If set to 'true', Licenses from this License Template are not visible to the end customer, but participate in validation.\n                  type: boolean\n                licenseType:\n                  description: \"Type of Licenses created from this License Template. Supported types: FEATURE, TIMEVOLUME, FLOATING, QUANTITY\"\n                  type: string\n                maxSessions:\n                  description: Mandatory for 'FLOATING' License Type.\n                  type: string\n                name:\n                  description: Name for the Licensed item\n                  type: string\n                number:\n                  description: New License Template number (update).\n                  type: string\n                price:\n                  description: Price for the License. If \u003e0, it must always be accompanied by the currency specification.\n                  format: double\n                  type: number\n                quantity:\n                  description: Mandatory for 'Pay-per-Use' and 'Node-Locked' License Model.\n                  type: string\n                quota:\n                  description: Mandatory for 'Quota' License Model.\n                  type: string\n                timeVolume:\n                  description: Mandatory for 'TIMEVOLUME' License Type.\n                  type: string\n                timeVolumePeriod:\n                  description: For 'TIMEVOLUME' License Type.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Update License Template\n      tags:\n        - License Template\n  /paymentmethod:\n    get:\n      description: Return a list of all Payment Methods for the current Vendor\n      operationId: listPaymentMethods\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Payment Methods\n      tags:\n        - Payment Method\n  \"/paymentmethod/{paymentMethodNumber}\":\n    get:\n      description: Return a Payment Method info by 'paymentMethodNumber'\n      operationId: getPaymentMethod\n      parameters:\n        - description: Payment method number\n          in: path\n          name: paymentMethodNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Get Payment Method\n      tags:\n        - Payment Method\n    post:\n      description: Sets the provided properties to a Payment Method. Return an updated Payment Method\n      operationId: updatePaymentMethod\n      parameters:\n        - description: Payment method number\n          in: path\n          name: paymentMethodNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the Payment Method is disabled.\n                  type: boolean\n                paypal.subject:\n                  description: The e-mail address of the PayPal account for which you are making the API calls.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Update Payment Method\n      tags:\n        - Payment Method\n  /product:\n    get:\n      description: Return a list of all configured Products for the current Vendor\n      operationId: listProducts\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Products\n      tags:\n        - Product\n    post:\n      description: Creates a new Product\n      operationId: createProduct\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses.\n                  type: boolean\n                description:\n                  description: Product description.\n                  type: string\n                licenseeAutoCreate:\n                  description: If set to 'true', non-existing Licensees will be created at first validation attempt.\n                  type: boolean\n                licensingInfo:\n                  description: Licensing information.\n                  type: string\n                name:\n                  description: Product name. Together with the version identifies the Product for the end customer.\n                  type: string\n                number:\n                  description: Unique number that identifies the Product. Vendor can assign this number when creating a Product or let NetLicensing generate one.\n                  type: string\n                vatMode:\n                  description: \"Vat mode for Product. Supported types: GROSS, NET\"\n                  enum:\n                    - GROSS\n                    - NET\n                  type: string\n                version:\n                  description: Product version. Convenience parameter, additional to the Product name.\n                  type: string\n              required:\n                - active\n                - name\n                - version\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"402\":\n          description: Quota exceeded\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Create Product\n      tags:\n        - Product\n  \"/product/{productNumber}\":\n    delete:\n      description: Delete a Product by 'number'\n      operationId: deleteProduct\n      parameters:\n        - description: Unique number that identifies the Product.\n          in: path\n          name: productNumber\n          required: true\n          schema:\n            type: string\n        - description: Force object deletion and all descendants.\n          in: query\n          name: forceCascade\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Delete Product\n      tags:\n        - Product\n    get:\n      description: Return a Product by 'productNumber'\n      operationId: productNumber\n      parameters:\n        - description: Unique number that identifies the Product.\n          in: path\n          name: productNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Get Product\n      tags:\n        - Product\n    post:\n      description: Sets the provided properties to a Product. Return an updated Product\n      operationId: updateProduct\n      parameters:\n        - description: Unique number that identifies the Product.\n          in: path\n          name: productNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses.\n                  type: boolean\n                description:\n                  description: Product description.\n                  type: string\n                licenseeAutoCreate:\n                  description: If set to 'true', non-existing Licensees will be created at first validation attempt.\n                  type: boolean\n                licensingInfo:\n                  description: Licensing information.\n                  type: string\n                name:\n                  description: Product name. Together with the version identifies the Product for the end customer.\n                  type: string\n                number:\n                  description: New Product number (update)\n                  type: string\n                vatMode:\n                  description: \"Vat mode for Product. Supported types: GROSS, NET\"\n                  enum:\n                    - GROSS\n                    - NET\n                  type: string\n                version:\n                  description: Product version. Convenience parameter, additional to the Product name.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"402\":\n          description: Quota exceeded\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Update Product\n      tags:\n        - Product\n  /productmodule:\n    get:\n      description: Return a list of all Product Modules for the current Vendor\n      operationId: listProductModules\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Product Modules\n      tags:\n        - Product Module\n    post:\n      description: Creates a new Product Module\n      operationId: createProductModule\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the Product Module is disabled. Licensees can not obtain any new Licenses for this Product Module.\n                  type: boolean\n                licenseTemplate:\n                  description: License Template. Mandatory for 'Try \u0026amp; Buy' licensing model.\n                  items:\n                    default: TIMEVOLUME\n                    enum:\n                      - TIMEVOLUME\n                      - FEATURE\n                    type: string\n                  type: array\n                licensingModel:\n                  description: Licensing model applied to this Product Module. Defines what License Templates can be configured for the Product Module and how Licenses for this Product Module are processed during validation.\n                  type: string\n                maxCheckoutValidity:\n                  description: Maximum checkout validity (days). Mandatory for 'Floating' licensing model.\n                  format: int32\n                  type: integer\n                name:\n                  description: Product Module name that is visible to the end customers in NetLicensing Shop.\n                  type: string\n                nodeSecretMode:\n                  description: Secret Mode. Mandatory for 'Node-Locked' licensing model.\n                  items:\n                    default: PREDEFINED\n                    enum:\n                      - PREDEFINED\n                      - CLIENT\n                    type: string\n                  type: array\n                number:\n                  description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.\n                  type: string\n                productNumber:\n                  description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.\n                  type: string\n                redThreshold:\n                  description: Remaining time volume for red level. Mandatory for 'Rental' licensing model.\n                  format: int32\n                  type: integer\n                yellowThreshold:\n                  description: Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.\n                  format: int32\n                  type: integer\n              required:\n                - productNumber\n                - active\n                - name\n                - licensingModel\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"402\":\n          description: Quota exceeded\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Create Product Module\n      tags:\n        - Product Module\n  \"/productmodule/{productModuleNumber}\":\n    delete:\n      description: Delete a Product Module by 'number'\n      operationId: deleteProductModule\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Product Module.\n          in: path\n          name: productModuleNumber\n          required: true\n          schema:\n            type: string\n        - description: Force object deletion and all descendants.\n          in: query\n          name: forceCascade\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Delete Product Module\n      tags:\n        - Product Module\n    get:\n      description: Return a Product Module by 'productModuleNumber'\n      operationId: getProductModule\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.\n          in: path\n          name: productModuleNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Get Product Module\n      tags:\n        - Product Module\n    post:\n      description: Sets the provided properties to a Product Module. Return an updated Product Module\n      operationId: updateProductModule\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.\n          in: path\n          name: productModuleNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: If set to 'false', the Product Module is disabled. Licensees can not obtain any new Licenses for this Product Module.\n                  type: boolean\n                licenseTemplate:\n                  description: License Template. Mandatory for 'Try \u0026amp; Buy' licensing model.\n                  items:\n                    default: TIMEVOLUME\n                    enum:\n                      - TIMEVOLUME\n                      - FEATURE\n                    type: string\n                  type: array\n                licensingModel:\n                  description: Licensing model applied to this Product Module. Defines what License Templates can be configured for the Product Module and how Licenses for this Product Module are processed during validation.\n                  type: string\n                maxCheckoutValidity:\n                  description: Maximum checkout validity (days). Mandatory for 'Floating' licensing model.\n                  format: int32\n                  type: integer\n                name:\n                  description: Product Module name that is visible to the end customers in NetLicensing Shop.\n                  type: string\n                nodeSecretMode:\n                  description: Secret Mode. Mandatory for 'Node-Locked' licensing model.\n                  items:\n                    default: PREDEFINED\n                    enum:\n                      - PREDEFINED\n                      - CLIENT\n                    type: string\n                  type: array\n                number:\n                  description: New Product Module number (update).\n                  type: string\n                redThreshold:\n                  description: Remaining time volume for red level. Mandatory for 'Rental' licensing model.\n                  format: int32\n                  type: integer\n                yellowThreshold:\n                  description: Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.\n                  format: int32\n                  type: integer\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"402\":\n          description: Quota exceeded\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Update Product Module\n      tags:\n        - Product Module\n  /token:\n    get:\n      description: Return a list of all tokens for the current Vendor\n      operationId: listTokens\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Tokens\n      tags:\n        - Token\n    post:\n      description: Create token by 'tokenType' and additional token parameters\n      operationId: createToken\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                action:\n                  description: For \u003ci\u003etype=ACTION\u003c/i\u003e only; defines token action to be perfromed\n                  enum:\n                    - licenseeLogin\n                  type: string\n                apiKeyRole:\n                  description: \"For \u003ci\u003etokenType=APIKEY\u003c/i\u003e only (default: ROLE_APIKEY_LICENSEE); defines token RoleID\"\n                  enum:\n                    - ROLE_APIKEY_LICENSEE\n                    - ROLE_APIKEY_ANALYTICS\n                    - ROLE_APIKEY_OPERATION\n                    - ROLE_APIKEY_MAINTENANCE\n                    - ROLE_APIKEY_ADMIN\n                  type: string\n                cancelURL:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e only; take customers to this URL when they cancel their checkout\n                  type: string\n                cancelURLTitle:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e only; shop link title for cancel checkout process\n                  type: string\n                licenseTemplateNumber:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e only; identifies LicenseTemplate that will be assigned to the shop token\n                  type: string\n                licenseeNumber:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e or \u003ci\u003etype=ACTION\u003c/i\u003e only (mandatory); identifies Licensee that will be assigned to the shop token\n                  type: string\n                predefinedShoppingItem:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e only; identifies Shopping Item name that will be shown to the customer\n                  type: string\n                privateKey:\n                  description: For \u003ci\u003etokenType=APIKEY\u003c/i\u003e only (optional); defines PrivateKey to be used with the validate method\u003cbr/\u003e\u003cstrong\u003ePlease Note:\u003c/strong\u003e PrivateKey need to be provided as one line without spaces\n                  type: string\n                productNumber:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e only (mandatory); identifies Product that will be assigned to the shop token\n                  type: string\n                successURL:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e only; take customers to this URL when they finish checkout\n                  type: string\n                successURLTitle:\n                  description: For \u003ci\u003etokenType=SHOP\u003c/i\u003e only; shop link title for successful checkout process\n                  type: string\n                tokenType:\n                  description: Token type to be generated\n                  enum:\n                    - DEFAULT\n                    - SHOP\n                    - APIKEY\n                  type: string\n                type:\n                  description: For \u003ci\u003etokenType=DEFAULT\u003c/i\u003e only; action type to be set\n                  enum:\n                    - ACTION\n                  type: string\n              required:\n                - tokenType\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Create token\n      tags:\n        - Token\n  \"/token/{tokenNumber}\":\n    delete:\n      description: Delete a token by 'number'\n      operationId: deleteToken\n      parameters:\n        - description: Token number\n          in: path\n          name: tokenNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Delete token\n      tags:\n        - Token\n    get:\n      description: Return a token by 'tokenNumber'\n      operationId: getToken\n      parameters:\n        - description: Token number\n          in: path\n          name: tokenNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Get token\n      tags:\n        - Token\n  /transaction:\n    get:\n      description: Return a list of all Transactions for the current Vendor\n      operationId: listTransactions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/netlicensing\"\n                type: array\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Transactions\n      tags:\n        - Transaction\n    post:\n      description: Creates a new Transaction\n      operationId: createTransaction\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: Always 'true' for Transactions\n                  type: boolean\n                dateClosed:\n                  format: date-time\n                  type: string\n                dateCreated:\n                  format: date-time\n                  type: string\n                licenseeNumber:\n                  type: string\n                number:\n                  description: Unique number (across all Products of a Vendor) that identifies the Transaction\n                  type: string\n                paymentMethod:\n                  type: string\n                source:\n                  description: AUTO Transaction for internal use only\n                  enum:\n                    - SHOP\n                  type: string\n                status:\n                  enum:\n                    - CANCELLED\n                    - CLOSED\n                    - PENDING\n                  type: string\n              required:\n                - active\n                - status\n                - source\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Create Transaction\n      tags:\n        - Transaction\n  \"/transaction/{transactionNumber}\":\n    get:\n      description: Return a Transaction by 'transactionNumber'\n      operationId: getTransaction\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Transaction\n          in: path\n          name: transactionNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: \"Get Transaction \"\n      tags:\n        - Transaction\n    post:\n      description: Sets the provided properties to a Transaction. Return an updated Transaction\n      operationId: updateTransaction\n      parameters:\n        - description: Unique number (across all Products of a Vendor) that identifies the Transaction\n          in: path\n          name: transactionNumber\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                active:\n                  description: Always 'true' for Transactions\n                  type: boolean\n                dateClosed:\n                  format: date-time\n                  type: string\n                dateCreated:\n                  format: date-time\n                  type: string\n                number:\n                  description: Unique number (across all Products of a Vendor) that identifies the Transaction\n                  type: string\n                paymentMethod:\n                  type: string\n                source:\n                  description: AUTO Transaction for internal use only\n                  enum:\n                    - SHOP\n                  type: string\n                status:\n                  enum:\n                    - CANCELLED\n                    - CLOSED\n                    - PENDING\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: Update Transaction\n      tags:\n        - Transaction\n  /utility/licenseTypes:\n    get:\n      description: Return a list of all License Types supported by the service\n      operationId: licenseTypes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List License Types\n      tags:\n        - Utility\n  /utility/licensingModels:\n    get:\n      description: Return a list of all licensing models supported by the service\n      operationId: licensingModels\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/netlicensing\"\n          description: Successful request\n        \"400\":\n          description: Malformed or illegal request\n        \"403\":\n          description: Access is denied\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal service error\n      security:\n        - basicAuth: []\n      summary: List Licensing Models\n      tags:\n        - Utility\ncomponents:\n  schemas:\n    License:\n      properties:\n        active:\n          description: If set to 'false', the License is disabled. License can be re-enabled, but as long as it is disabled, the License is excluded from the validation process.\n          type: boolean\n        currency:\n          description: Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation.\n          type: string\n        hidden:\n          description: If set to 'true', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly.\n          type: boolean\n        name:\n          description: Name for the Licensed item. Set from License Template on creation, if not specified explicitly.\n          type: string\n        number:\n          description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.\n          type: string\n        price:\n          description: \"'price' for the License. If \u003e0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation.\"\n          format: double\n          type: number\n      type: object\n      xml:\n        name: license\n    LicenseTemplate:\n      properties:\n        active:\n          description: If set to 'false', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.\n          type: boolean\n        automatic:\n          description: If set to 'true', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.\n          type: boolean\n        currency:\n          description: Specifies currency for the License price. Check data types to discover which currencies are supported.\n          type: string\n        hidden:\n          description: If set to 'true', this License Template is not shown in NetLicensing Shop as offered for purchase.\n          type: boolean\n        hiddenLicenses:\n          description: If set to 'true', Licenses from this License Template are not visible to the end customer, but participate in validation.\n          type: boolean\n        licenseType:\n          description: Type of Licenses created from this License Template\n          enum:\n            - FEATURE\n            - TIMEVOLUME\n          type: string\n        name:\n          description: Name for the Licensed item.\n          type: string\n        number:\n          description: Unique number (across all Product of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.\n          type: string\n        price:\n          description: \"'price' for the License. If \u003e0, it must always be accompanied by the currency specification.\"\n          format: double\n          type: number\n      type: object\n      xml:\n        name: licensetemplate\n    Licensee:\n      properties:\n        active:\n          description: If set to 'false', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled.\n          type: boolean\n        number:\n          description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee.\n          type: string\n      type: object\n      xml:\n        name: licensee\n    PaymentMethod:\n      properties:\n        active:\n          type: boolean\n        number:\n          type: string\n      type: object\n      xml:\n        name: paymentmethod\n    Product:\n      properties:\n        active:\n          description: If set to 'false', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses\n          type: boolean\n        licenseeAutoCreate:\n          description: If set to 'true', non-existing Licensees will be created at first validation attempt.\n          type: boolean\n        name:\n          description: Product name. Together with the version identifies the Product for the end customer\n          type: string\n        number:\n          description: Unique number that identifies the Product. Vendor can assign this number when creating a Product or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.\n          type: string\n        version:\n          description: Product version. Convenience parameter, additional to the Product name.\n          type: string\n      type: object\n      xml:\n        name: product\n    ProductModule:\n      properties:\n        active:\n          description: If set to 'false', the Product Module is disabled. Licensees can not obtain any new Licenses for this Product Module.\n          type: boolean\n        licensingInfo:\n          description: Licensing model applied to this Product Module. Defines what License Templates can be configured for the Product Module and how Licenses for this Product Module are processed during validation.\n          type: string\n        name:\n          description: Product Module name that is visible to the end customers in NetLicensing Shop.\n          type: string\n        number:\n          description: Unique number (across all Product of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.\n          type: string\n      type: object\n      xml:\n        name: productmodule\n    Token:\n      properties:\n        active:\n          type: boolean\n        expirationTime:\n          format: date-time\n          type: string\n        licenseNumber:\n          type: string\n        number:\n          type: string\n        shopURL:\n          type: string\n        tokenType:\n          type: string\n        vendorNumber:\n          type: string\n      type: object\n      xml:\n        name: token\n    Transaction:\n      properties:\n        active:\n          description: Always true for the Transactions\n          type: string\n        number:\n          description: Unique number (across all Products of a Vendor) that identifies the Transaction. This number is always generated by NetLicensing.\n          type: string\n        source:\n          enum:\n            - SHOP\n          type: string\n        status:\n          enum:\n            - CANCELLED\n            - CLOSED\n            - PENDING\n          type: string\n      type: object\n      xml:\n        name: transaction\n    discount:\n      properties:\n        amountPercent:\n          type: string\n        currency:\n          type: string\n        totalPrice:\n          format: double\n          type: number\n      type: object\n      xml:\n        name: discount\n    infos:\n      properties: {}\n      xml:\n        name: infos\n    items:\n      properties: {}\n      xml:\n        name: items\n    licensingModel:\n      properties:\n        name:\n          type: string\n      type: object\n      xml:\n        name: licensingModel\n    netlicensing:\n      properties:\n        infos:\n          $ref: \"#/components/schemas/infos\"\n        items:\n          $ref: \"#/components/schemas/items\"\n      xml:\n        name: netlicensing\n  securitySchemes:\n    basicAuth:\n      description: HTTP Basic Authentication. Use either `username:password` or `apiKey:token` to authenticate.\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/netlicensing.io/2.x/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/netlicensing.io/2.x/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}