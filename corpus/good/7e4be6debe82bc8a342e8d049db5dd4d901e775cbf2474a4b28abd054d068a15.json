{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restuwahyu13/gin-rest-api"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "swagger/openapi.yml",
			"byteSize": 17899,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Go Gin Framework Rest API\n  description: Example go using gin framework implementation rest api\n  contact:\n    name: Restu Wahyu Saputra\n    url: https://github.com/restuwahyu13\n    email: restuwahyu13@gmail.com\n  license:\n    name: MIT\n    url: https://github.com/restuwahyu13/gin-rest-api/blob/main/README.md\nservers:\n  - url: 'http://{host}:4000/api/v1'\n    description: go service api server endpoint application\n    variables:\n      host:\n        default: localhost\n        enum:\n          - localhost\npaths:\n  ############################\n  ## REGISTER AUTH ENDPOINT\n  ############################\n  /register:\n    post:\n      tags:\n        - Auth Endpoint\n      summary: Auth Register\n      description: register new users account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                fullname:\n                  type: string\n                  example: restu wahyu saputra\n                email:\n                  type: string\n                  format: email\n                  example: restuwahyu13@zetmail.com\n                password:\n                  type: string\n                  format: password\n                  example: qwerty123456789\n              required:\n                - fullname\n                - email\n                - password\n      responses:\n        '200':\n          description: Register new account successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '400':\n          description: |\n            Parsing json data failed,\n            Generate accessToken failed,\n            Sending email activation failed\n        '403':\n          description: Register new account failed\"\n        '409':\n          description: Email already exist\n  ############################\n  ## LOGIN AUTH ENDPOINT\n  ############################\n  /login:\n    post:\n      tags:\n        - Auth Endpoint\n      summary: Auth Login\n      description: login user account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n                  example: restuwahyu13@zetmail.com\n                password:\n                  type: string\n                  format: password\n                  example: qwerty123456789\n              required:\n                - email\n                - password\n      responses:\n        '200':\n          description: Login successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: object\n                required:\n                  - statusCode\n                  - method\n                  - message\n                  - data\n        '400':\n          description: |\n            Parsing json data failed,\n            Generate accessToken failed\n        '403':\n          description: |\n            User account is not active,\n            Username or password is wrong\n        '404':\n          description: User account is not registered\n  ############################\n  ## ACTIVATION AUTH ENDPOINT\n  ############################\n  /activation/{token}:\n    post:\n      tags:\n        - Auth Endpoint\n      summary: Auth Activation\n      description: activation user account\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemF0aW9uIjp0cnVlLCJlbWFpbCI6ImFsZGlraGFuMTNAemV0bWFpbC5jb20iLCJleHBpcmVkQXQiOjE2MTkyNzkyMDksImlkIjoxMX0.jKxrGfrkNrINdixekYGuDKen24LMGgLCnrXLD3R7Yw8\n      responses:\n        '200':\n          description: Activation account success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '400':\n          description: |\n            Parsing json data failed,\n            User account hash been active please login\n        '403':\n          description: Activation account failed\n        '404':\n          description: User account is not exist\n  #############################\n  ## RESEND TOKEN AUTH ENDPOINT\n  #############################\n  /resend-token:\n    post:\n      tags:\n        - Auth Endpoint\n      summary: Auth Resend\n      description: resend new activation token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n                  example: restuwahyu13@zetmail.com\n              required:\n                - email\n      responses:\n        '200':\n          description: Resend new activation token successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '400':\n          description: |\n            Parsing json data failed,\n            Generate accessToken failed,\n            Sending email resend activation failed\n        '403':\n          description: User account is not active\n        '404':\n          description: Email is not never registered\n  #################################\n  ## FORGOT PASSWORD AUTH ENDPOINT\n  #################################\n  /forgot-password:\n    post:\n      tags:\n        - Auth Endpoint\n      summary: Auth Forgot\n      description: forgot password account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n                  example: restuwahyu13@zetmail.com\n              required:\n                - email\n      responses:\n        '200':\n          description: Forgot password successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '400':\n          description: |\n            Parsing json data failed,\n            Generate accessToken failed,\n            Sending email reset password failed\n        '403':\n          description: |\n            User account is not active,\n            Forgot password failed\n        '404':\n          description: Email is not never registered\n  #################################\n  ## CHANGE PASSWORD AUTH ENDPOINT\n  #################################\n  /change-password/{token}:\n    post:\n      tags:\n        - Auth Endpoint\n      summary: Auth Login\n      description: login user account\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemF0aW9uIjp0cnVlLCJlbWFpbCI6ImFsZGlraGFuMTNAemV0bWFpbC5jb20iLCJleHBpcmVkQXQiOjE2MTkyNzkyMDksImlkIjoxMX0.jKxrGfrkNrINdixekYGuDKen24LMGgLCnrXLD3R7Yw8\n      responses:\n        '200':\n          description: Change new password successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '400':\n          description: |\n            Parsing json data failed,\n            Verified activation token failed,\n            Confirm Password is not match with Password\n        '403':\n          description: |\n            User account is not active,\n            Change new password failed\n        '404':\n          description: User account is not exist\n  #################################\n  ## STUDENT ENDPOINT TERITORY\n  #################################\n  /student:\n    #################################\n    ## CREATE STUDENT ENDPOINT\n    #################################\n    post:\n      tags:\n        - Student Endpoint\n      summary: Create Student\n      description: create new student account\n      security:\n        - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: restu wahyu saputra\n                npm:\n                  type: integer\n                  format: number\n                  example: 201543502291\n                fak:\n                  type: string\n                  example: mipa\n                bid:\n                  type: string\n                  example: tehnik informatika\n              required:\n                - name\n                - npm\n                - fak\n                - bid\n      responses:\n        '200':\n          description: Create new student account successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '400':\n          description: Parsing json data failed\n        '401':\n          description: accessToken invalid or expired\n        '403':\n          description: |\n            Authorization is required for this endpoint,\n            Create new student account failed\n        '409':\n          description: CREATE_STUDENT_CONFLICT_409\n    #################################\n    ## RESULTS STUDENT ENDPOINT\n    #################################\n    get:\n      tags:\n        - Student Endpoint\n      summary: Results All Student\n      description: results all student account exists\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: Results Students data successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: array\n                required:\n                  - statusCode\n                  - method\n                  - message\n                  - data\n        '401':\n          description: accessToken invalid or expired\n        '403':\n          description: Authorization is required for this endpoint\n        '404':\n          description: Students data is not exists\n  ###################################\n  ## STUDENT ENDPOINT TERITORY BY ID\n  ###################################\n  /student/{id}:\n    #################################\n    ## RESULT STUDENT ENDPOINT\n    #################################\n    get:\n      tags:\n        - Student Endpoint\n      summary: Result Student\n      description: result specific student by id\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: b78bf89d-7748-42c0-b971-3bb7d28d167e\n      responses:\n        '200':\n          description: Result Student data successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                  data:\n                    type: array\n                required:\n                  - statusCode\n                  - method\n                  - message\n                  - data\n        '401':\n          description: accessToken invalid or expired\n        '403':\n          description: Authorization is required for this endpoint\n        '404':\n          description: Student data is not exist or deleted\n    #################################\n    ## DELETE STUDENT ENDPOINT\n    #################################\n    delete:\n      tags:\n        - Student Endpoint\n      summary: Delete Student\n      description: delete specific student by id\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: b78bf89d-7748-42c0-b971-3bb7d28d167e\n      responses:\n        '200':\n          description: Delete student data successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '401':\n          description: accessToken invalid or expired\n        '403':\n          description: |\n            Authorization is required for this endpoint,\n            Delete student data failed\n        '404':\n          description: Student data is not exist or deleted\n    #################################\n    ## UPDATE STUDENT ENDPOINT\n    #################################\n    put:\n      tags:\n        - Student Endpoint\n      summary: Update Student\n      description: update specific student by id\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: b78bf89d-7748-42c0-b971-3bb7d28d167e\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: restu wahyu saputra\n                npm:\n                  type: integer\n                  format: number\n                  example: 201543502291\n                fak:\n                  type: string\n                  example: mipa\n                bid:\n                  type: string\n                  example: tehnik informatika\n              required:\n                - name\n                - npm\n                - fak\n                - bid\n      responses:\n        '200':\n          description: Update student data sucessfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  statusCode:\n                    type: integer\n                    format: number\n                  method:\n                    type: string\n                  message:\n                    type: string\n                required:\n                  - statusCode\n                  - method\n                  - message\n        '400':\n          description: Parsing json data failed\n        '401':\n          description: accessToken invalid or expired\n        '403':\n          description: |\n            Authorization is required for this endpoint,\n            Update student data failed\n        '404':\n          description: Student data is not exist or deleted\n  #################################\n  #################################\n  ## COMPONENTS AUTH TERITORY\n  #################################\n  #################################\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/restuwahyu13/gin-rest-api@0a0452090edca33eb2637ced0937e7c20565b4a4/-/blob/swagger/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/restuwahyu13/gin-rest-api/blob/0a0452090edca33eb2637ced0937e7c20565b4a4/swagger/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}