{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mrin9/RapiPdf"
		},
		"file": {
			"name": "petstore_experimental.yaml",
			"size": 0,
			"path": "docs/specs/test-specs/petstore_experimental.yaml",
			"byteSize": 4276,
			"content": "openapi: 3.0.0\ninfo:\n  description: Contains all data types\n  version: 1.0.0\n  title: Testing different data-types\npaths:\n  /person:\n    post:\n      summary: Contains parameters of various data-types and constraints in query, request-body and response\n      operationId: samplePost\n      parameters:\n        - name: height\n          in: query\n          description: height in inches\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 12\n            maximum: 120\n        - name: full-name\n          in: query\n          description: Name of a person\n          required: true\n          schema:\n            type: string\n            minimum: 3\n        - name: social-connection\n          in: query\n          description: facebook, linkedin, github, instagram, twitter etc \n          schema:\n            type: string\n            format: url\n        - name: email\n          in: query\n          required: true\n          schema:\n            type: string\n            format: email\n        - name: email-password\n          in: query\n          required: true\n          schema:\n            type: string\n            format: password\n        - name: date-of-birth\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: interests\n          in: query\n          required: true\n          schema:\n            type: array\n            minItems: 1\n            maxItems: 3\n            items:\n              type: string\n              enum:\n                - computers\n                - hiking\n                - swiming\n                - movies\n                - music\n                - dancing\n                - reading\n                - painting\n              default: hiking   \n        - name: tags\n          in: query\n          description: Add tags to the person\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Person'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Category'\n        description: order placed for purchasing the pet\n        required: true\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          description: Category ID\n          allOf:\n            - $ref: '#/components/schemas/Id'\n        name:\n          description: Category name\n          type: string\n          minLength: 1\n    Id:\n      type: integer\n      format: int64\n      readOnly: true\n    Person:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          description: Pet ID\n          allOf:\n            - $ref: '#/components/schemas/Id'\n        category:\n          description: Categories this pet belongs to\n          allOf:\n            - $ref: '#/components/schemas/Category'\n        name:\n          description: Name of the person\n          type: string\n          minLength: 4\n          example: Guru\n        photoUrls:\n          description: The list of URL to a cute photos featuring pet\n          type: array\n          maxItems: 20\n          items:\n            type: string\n            format: url\n        tags:\n          description: Tags attached to the pet\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Tag'\n        maritalStatus:\n          type: string\n          description: Pet status in the store\n          enum:\n            - married\n            - unmarried\n            - widowed\n        phone:\n          description: phone number in international format\n          type: string\n          pattern: '/^\\+(?:[0-9]-?){6,14}[0-9]$/'\n          example: +1-202-555-0192\n          nullable: true\n    Tag:\n      type: object\n      properties:\n        id:\n          description: Tag ID\n          allOf:\n            - $ref: '#/components/schemas/Id'\n        name:\n          description: Tag name\n          type: string\n          minLength: 1",
			"canonicalURL": "/github.com/mrin9/RapiPdf@978516c16666a0f747a8ac8980ba4ce580c4dc06/-/blob/docs/specs/test-specs/petstore_experimental.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mrin9/RapiPdf/blob/978516c16666a0f747a8ac8980ba4ce580c4dc06/docs/specs/test-specs/petstore_experimental.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}