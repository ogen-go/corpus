{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kudlav/videoeditor"
		},
		"file": {
			"name": "API.yaml",
			"size": 0,
			"path": "docs/API.yaml",
			"byteSize": 24223,
			"content": "openapi: 3.0.1\ninfo:\n  title: Videoeditor\n  description: API for clients of Web Based Video Editor.\n  termsOfService: 'https://github.com/kudlav/videoeditor/blob/master/LICENSE'\n  contact:\n    email: xkudla15@vut.cz\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  version: 3.1.0\nexternalDocs:\n  description: Github repository\n  url: 'https://github.com/kudlav/videoeditor/'\nservers:\n  - url: 'https://editor.prednasky.com/api'\ntags:\n  - name: project\n    description: Everything about project\npaths:\n  /project:\n    post:\n      tags:\n        - project\n      summary: Start new project\n      operationId: projectPOST\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  project:\n                    type: string\n                    description: ID of new project.\n  '/project/{projectID}':\n    get:\n      tags:\n        - project\n      summary: Get state of project\n      operationId: projectGET\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Project loaded.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  project:\n                    type: string\n                    description: id of project\n                  resources:\n                    type: object\n                    properties:\n                      _ID_:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          duration:\n                            type: string\n                            nullable: true\n                          mime:\n                            type: string\n                            nullable: true\n                          name:\n                            type: string\n                            nullable: true\n                    description: associtaive array of resource objects\n                  timeline:\n                    type: object\n                    properties:\n                      audio:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Timeline'\n                      video:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Timeline'\n                    description: audio and video tracks with items\n                  processing:\n                    type: number\n                    nullable: true\n                    description: percentage progress when processing final video, null any other time\n        '404':\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - project\n      summary: NOT IMPLEMENTED! Remove project and all files\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      deprecated: true\n      responses:\n        '200':\n          description: Project removed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '404':\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n        - project\n      summary: 'Finish project, get video'\n      operationId: projectPUT\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                email:\n                  type: string\n                  description: email for finish notification\n      responses:\n        '200':\n          description: Rendering has started.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '404':\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/file':\n    post:\n      tags:\n        - file\n      summary: Upload new file\n      operationId: projectFilePOST\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  description: file to upload\n                  format: binary\n        required: true\n      responses:\n        '200':\n          description: File uploaded.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  msg:\n                    type: string\n                    description: info message\n                  resource_id:\n                    type: string\n                    description: uploaded file ID\n        '400':\n          description: 'Bad request, missing file in request body.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/file/{fileID}':\n    delete:\n      tags:\n        - file\n      summary: Remove file from project\n      operationId: projectFileDELETE\n      parameters:\n        - name: projectID\n          in: path\n          description: project ID\n          required: true\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: file ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: File removed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '403':\n          description: 'Unable to remove, resource is in use.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Resource or project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n        - file\n      summary: Add file to the end of timeline\n      operationId: projectFilePUT\n      parameters:\n        - name: projectID\n          in: path\n          description: project ID\n          required: true\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: file ID\n          required: true\n          schema:\n            type: string\n        - name: track\n          in: header\n          description: track ID\n          required: true\n          schema:\n            type: string\n        - name: duration\n          in: header\n          description: 'required for image files, format: \"00:00:00,000\"'\n          schema:\n            type: string\n      responses:\n        '200':\n          description: File added to a timeline.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  msg:\n                    type: string\n                    description: info message\n                  timeline:\n                    type: string\n                    description: file added to timeline with following ID\n        '400':\n          description: 'Bad request, missing duration of image.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Unsupported file type for the timeline.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Resource or project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/filter':\n    post:\n      tags:\n        - filter\n      summary: Apply filter to a timeline item\n      operationId: projectFilterPOST\n      description: \u003e-\n        You can use filters from MLT documentation. Each filter can be applied\n        only once. There are some special names to distinguish multiple\n        brightness and volume filters: fadeInBrightnerss =\u003e brightness,\n        fadeOutBrightnerss =\u003e brightness, fadeInVolume =\u003e volume, fadeOutVolume\n        =\u003e volume\n      externalDocs:\n        url: 'https://www.mltframework.org/plugins/PluginsFilters/'\n        description: Available filters and usage\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                track:\n                  type: string\n                  description: track containing items\n                item:\n                  type: number\n                  description: index of track item\n                filter:\n                  type: string\n                  description: type of filter\n                params:\n                  type: object\n                  description: filter properties\n        required: true\n      responses:\n        '200':\n          description: Filter applied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: 'Bad request, missing track, item or filter parameter.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Filter already applied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: 'Track, item or project not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - filter\n      summary: Remove filter from a timeline item\n      operationId: projectFilterDELETE\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                track:\n                  type: string\n                  description: track containing items\n                item:\n                  type: number\n                  description: index of track item\n                filter:\n                  type: string\n                  description: type of filter\n        required: true\n      responses:\n        '200':\n          description: Filter removed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: 'Bad request, missing track, item or filter parameter.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: 'Track, item, filter or project not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/transition':\n    post:\n      tags:\n        - transition\n      summary: Apply transition between two timeline items\n      operationId: projectTransitionPOST\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                track:\n                  type: string\n                  description: track containing items\n                itemA:\n                  type: string\n                  description: first item of transition\n                itemB:\n                  type: string\n                  description: second item of transition\n                transition:\n                  type: string\n                  description: type of transition\n                duration:\n                  type: string\n                  description: duration of transition\n        required: true\n      responses:\n        '200':\n          description: Transition applied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: 'Bad request, missing or invalid parameters in request body.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Transition already exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: 'Item, track or project not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - transition\n      summary: NOT IMPLEMENTED! Remove transition between two timeline items\n      parameters:\n        - name: projectID\n          in: path\n          description: ID of project.\n          required: true\n          schema:\n            type: string\n      deprecated: true\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                track:\n                  type: string\n                  description: track containing items\n                itemA:\n                  type: string\n                  description: first item of transition\n                itemB:\n                  type: string\n                  description: second item of transition\n                transition:\n                  type: string\n                  description: type of transition\n      responses:\n        '200':\n          description: Transition removed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: 'Bad request, missing track, item or transition parameter.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: 'Track, item, transition or project not found.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/item':\n    delete:\n      tags:\n        - item\n      summary: Remove item from timeline\n      operationId: projectItemDELETE\n      parameters:\n        - name: projectID\n          in: path\n          description: project ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                track:\n                  type: string\n                  description: track containing items\n                item:\n                  type: number\n                  description: index of track item\n        required: true\n      responses:\n        '200':\n          description: Item removed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: 'Bad request, missing track or item parameter.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Track or item not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/item/move':\n    put:\n      tags:\n        - item\n      summary: Move item in timeline\n      operationId: projectItemPUTmove\n      parameters:\n        - name: projectID\n          in: path\n          description: project ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                track:\n                  type: string\n                  description: track containing item\n                trackTarget:\n                  type: string\n                  description: destination track\n                item:\n                  type: number\n                  description: index of track item\n                time:\n                  type: string\n                  description: 'new start time of item, in format ''00:00:00,000'''\n        required: true\n      responses:\n        '200':\n          description: Item moved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: 'Bad request, missing track or item parameter.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Not enought free space at target place.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Track, item or project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/item/split':\n    put:\n      tags:\n        - item\n      summary: Split item in timeline into two parts\n      operationId: projectItemPUTsplit\n      parameters:\n        - name: projectID\n          in: path\n          description: project ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                track:\n                  type: string\n                  description: track containing items\n                item:\n                  type: number\n                  description: index of track item\n                time:\n                  type: string\n                  description: 'relative position of cut in format ''00:00:00,000'''\n        required: true\n      responses:\n        '200':\n          description: Item splitted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: 'Bad request, missing track or item parameter or time longer than item duration.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Track or item not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/track':\n    post:\n      tags:\n        - track\n      summary: Add track\n      operationId: projectTrackPOST\n      parameters:\n        - name: projectID\n          in: path\n          description: project ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                type:\n                  type: string\n                  description: Type of track (video/audio).\n        required: true\n      responses:\n        '200':\n          description: Track created.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  msg:\n                    type: string\n                    description: Info message.\n                  track:\n                    type: string\n                    description: ID of new track.\n        '400':\n          description: 'Bad request, missing type parameter (video/audio).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/project/{projectID}/track/{trackID}':\n    delete:\n      tags:\n        - track\n      summary: Remove track. When removing default track, track with lowest track became as default.\n      operationId: projectTrackDELETE\n      parameters:\n        - name: projectID\n          in: path\n          description: project ID\n          required: true\n          schema:\n            type: string\n        - name: trackID\n          in: path\n          description: track ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Track removed.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  msg:\n                    type: string\n                    description: Info message.\n        '400':\n          description: 'Bad request, missing track parameter.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: 'Unable to remove default track.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    ErrorResponse:\n      type: object\n      properties:\n        err:\n          type: string\n          description: error message title\n        msg:\n          type: string\n          description: error description\n    SuccessResponse:\n      type: object\n      properties:\n        msg:\n          type: string\n          description: info message\n    Timeline:\n      type: object\n      properties:\n        id:\n          type: string\n        duration:\n          type: string\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              resource:\n                type: string\n              in:\n                type: string\n              out:\n                type: string\n              start:\n                type: string\n              end:\n                type: string\n              filters:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    service:\n                      type: string\n",
			"canonicalURL": "/github.com/kudlav/videoeditor@fa4a92ab6bd6caf151c9a399bf76e46243e1c172/-/blob/docs/API.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kudlav/videoeditor/blob/fa4a92ab6bd6caf151c9a399bf76e46243e1c172/docs/API.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}