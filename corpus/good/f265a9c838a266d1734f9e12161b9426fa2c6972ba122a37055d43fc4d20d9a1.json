{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/adyen.com/FundService/6/openapi.yaml",
			"byteSize": 62956,
			"content": "openapi: 3.1.0\nservers:\n  - url: https://cal-test.adyen.com/cal/services/Fund/v6\ninfo:\n  contact:\n    email: developer-experience@adyen.com\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    x-twitter: Adyen\n  description: |-\n    The Fund API provides endpoints for managing the funds in the accounts on your platform. These management operations include actions such as the transfer of funds from one account to another, the payout of funds to an account holder, and the retrieval of balances in an account.\n\n    For more information, refer to our [documentation](https://docs.adyen.com/platforms).\n    ## Authentication\n    To connect to the Fund API, you must use basic authentication credentials of your web service user. If you don't have one, please contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:\n\n    ```\n    curl\n    -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\\n    -H \"Content-Type: application/json\" \\\n    ...\n    ```\n    Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n    ## Versioning\n    The Fund API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n    For example:\n    ```\n    https://cal-test.adyen.com/cal/services/Fund/v6/accountHolderBalance\n    ```\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: \"Adyen for Platforms: Fund API\"\n  version: \"6\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/FundService-v6.json\n      version: \"3.1\"\n  x-preferred: true\n  x-providerName: adyen.com\n  x-publicVersion: true\n  x-serviceName: FundService\npaths:\n  /accountHolderBalance:\n    post:\n      description: \"This endpoint is used to retrieve the balance(s) of the accounts of an account holder. An account's balances are on a per-currency basis (i.e., an account may have multiple balances: one per currency).\"\n      operationId: post-accountHolderBalance\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-accountHolderBalance-basic\"\n            schema:\n              $ref: \"#/components/schemas/AccountHolderBalanceRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHolderBalanceResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve the balance(s) of an account holder.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 1\n  /accountHolderTransactionList:\n    post:\n      description: This endpoint is used to retrieve a list of Transactions for an account holder's accounts. The accounts and Transaction Statuses to be included on the list can be specified. Each call will return a maximum of fifty (50) Transactions per account; in order to retrieve the following set of Transactions another call should be made with the 'page' value incremented. Note that Transactions are ordered with most recent first.\n      operationId: post-accountHolderTransactionList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-accountHolderTransactionList-basic\"\n              specific:\n                $ref: \"#/components/examples/post-accountHolderTransactionList-specific\"\n            schema:\n              $ref: \"#/components/schemas/AccountHolderTransactionListRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHolderTransactionListResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a list of transactions.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 2\n  /debitAccountHolder:\n    post:\n      description: |-\n        Sends a direct debit request to an account holder's bank account. If the direct debit is successful, the funds are settled in the accounts specified in the split instructions. Adyen sends the result of the direct debit in a [`DIRECT_DEBIT_INITIATED`](https://docs.adyen.com/api-explorer/#/NotificationService/latest/post/DIRECT_DEBIT_INITIATED) notification webhook.\n\n         To learn more about use cases, refer to [Top up accounts](https://docs.adyen.com/platforms/top-up-accounts).\n      operationId: post-debitAccountHolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DebitAccountHolderRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DebitAccountHolderResponse\"\n          description: OK - the request has succeeded.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DebitAccountHolderResponse\"\n          description: Accepted - the request has been accepted for processing, but the processing has not been completed.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Send a direct debit request.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 8\n  /payoutAccountHolder:\n    post:\n      description: This endpoint is used to pay out a specified amount from an account to the bank account of the account's account holder.\n      operationId: post-payoutAccountHolder\n      requestBody:\n        content:\n          application/json:\n            examples:\n              oneOff:\n                $ref: \"#/components/examples/post-payoutAccountHolder-oneOff\"\n            schema:\n              $ref: \"#/components/schemas/PayoutAccountHolderRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayoutAccountHolderResponse\"\n          description: OK - the request has succeeded.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayoutAccountHolderResponse\"\n          description: Accepted - the request has been accepted for processing, but the processing has not been completed.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Disburse a specified amount from an account to the account holder.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 3\n  /refundFundsTransfer:\n    post:\n      description: \"This endpoint is used to refund funds transferred from one account to another. Both accounts must be in the same marketplace, but can have different account holders. \"\n      operationId: post-refundFundsTransfer\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-refundFundsTransfer-basic\"\n            schema:\n              $ref: \"#/components/schemas/RefundFundsTransferRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundFundsTransferResponse\"\n          description: OK - the request has succeeded.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundFundsTransferResponse\"\n          description: Accepted - the request has been accepted for processing, but the processing has not been completed.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Make a refund of the existing transfer funds transfer.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 5\n  /refundNotPaidOutTransfers:\n    post:\n      description: This endpoint is used to refund all the transactions of an account which have taken place since the most recent payout. This request is on a per-account basis (as opposed to a per-payment basis), so only the portion of the payment which was made to the specified account will be refunded. The commission(s), fee(s), and payment(s) to other account(s), will remain in the accounts to which they were sent as designated by the original payment's split details.\n      operationId: post-refundNotPaidOutTransfers\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-refundNotPaidOutTransfers-basic\"\n            schema:\n              $ref: \"#/components/schemas/RefundNotPaidOutTransfersRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundNotPaidOutTransfersResponse\"\n          description: OK - the request has succeeded.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundNotPaidOutTransfersResponse\"\n          description: Accepted - the request has been accepted for processing, but the processing has not been completed.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Refund all transactions of an account since the most recent payout.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 7\n  /setupBeneficiary:\n    post:\n      description: This endpoint is used to define a benefactor and a beneficiary relationship between two accounts. At the time of benefactor/beneficiary setup, the funds in the benefactor account are transferred to the beneficiary account, and any further payments to the benefactor account are automatically sent to the beneficiary account. Note that a series of benefactor/beneficiaries may not exceed four (4) beneficiaries and may not have a cycle in it.\n      operationId: post-setupBeneficiary\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-setupBeneficiary-basic\"\n            schema:\n              $ref: \"#/components/schemas/SetupBeneficiaryRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SetupBeneficiaryResponse\"\n          description: OK - the request has succeeded.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SetupBeneficiaryResponse\"\n          description: Accepted - the request has been accepted for processing, but the processing has not been completed.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Designate an account to be the beneficiary of a separate account and transfer the benefactor's current balance to the beneficiary.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 6\n  /transferFunds:\n    post:\n      description: This endpoint is used to transfer funds from one account to another account. Both accounts must be in the same marketplace, but can have different account holders. The transfer must include a transfer code, which should be determined by the marketplace, in compliance with local regulations.\n      operationId: post-transferFunds\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-transferFunds-basic\"\n            schema:\n              $ref: \"#/components/schemas/TransferFundsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransferFundsResponse\"\n          description: OK - the request has succeeded.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransferFundsResponse\"\n          description: Accepted - the request has been accepted for processing, but the processing has not been completed.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Transfer funds from one platform account to another.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 4\ncomponents:\n  examples:\n    post-accountHolderBalance-basic:\n      summary: Review the account holder balance\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n    post-accountHolderTransactionList-basic:\n      summary: Retrieve transactions page by page\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        transactionListsPerAccount:\n          - accountCode: \"195752115\"\n            page: 1\n    post-accountHolderTransactionList-specific:\n      summary: Retrieve transactions with specific statuses.\n      value:\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        transactionListsPerAccount:\n          - accountCode: 2e64b396-1200-4474-b848-0cb06b52b3c7\n            page: 2\n        transactionStatuses:\n          - PendingCredit\n          - Credited\n          - Debited\n    post-payoutAccountHolder-oneOff:\n      summary: One-off payout\n      value:\n        accountCode: \"118731451\"\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n        amount:\n          currency: EUR\n          value: 99792\n        bankAccountUUID: 000b81aa-ae7e-4492-aa7e-72b2129dce0c\n        description: 12345 – Test\n    post-refundFundsTransfer-basic:\n      summary: Refund the fund transfer\n      value:\n        amount:\n          currency: EUR\n          value: 1000\n        merchantReference: YOUR_REFERENCE_ID\n        originalReference: PSP_REFERENCE_OF_TRANSFER_TO_REFUND\n    post-refundNotPaidOutTransfers-basic:\n      summary: Refund last transactions\n      value:\n        accountCode: \"189184578\"\n        accountHolderCode: CODE_OF_ACCOUNT_HOLDER\n    post-setupBeneficiary-basic:\n      summary: Set up a beneficiary\n      value:\n        destinationAccountCode: \"128952522\"\n        merchantReference: YOUR_REFERENCE_ID\n        sourceAccountCode: \"134498192\"\n    post-transferFunds-basic:\n      summary: Transfer funds from one account to another\n      value:\n        amount:\n          currency: EUR\n          value: 2000\n        destinationAccountCode: \"190324759\"\n        sourceAccountCode: \"100000000\"\n        transferCode: TransferCode_1\n  schemas:\n    AccountDetailBalance:\n      properties:\n        accountCode:\n          description: The code of the account that holds the balance.\n          type: string\n        detailBalance:\n          $ref: \"#/components/schemas/DetailBalance\"\n          description: Details of the balance held by the account.\n    AccountHolderBalanceRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the Account Holder of which to retrieve the balance.\n          type: string\n      required:\n        - accountHolderCode\n    AccountHolderBalanceResponse:\n      properties:\n        balancePerAccount:\n          description: A list of each account and their balances.\n          items:\n            $ref: \"#/components/schemas/AccountDetailBalance\"\n          type: array\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        totalBalance:\n          $ref: \"#/components/schemas/DetailBalance\"\n          description: The total balance of the account holder.\n    AccountHolderTransactionListRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder that owns the account(s) of which retrieve the transaction list.\n          type: string\n        transactionListsPerAccount:\n          description: A list of accounts to include in the transaction list. If left blank, the last fifty (50) transactions for all accounts of the account holder will be included.\n          items:\n            $ref: \"#/components/schemas/TransactionListForAccount\"\n          type: array\n        transactionStatuses:\n          description: |-\n            A list of statuses to include in the transaction list. If left blank, all transactions will be included.\n            \u003ePermitted values:\n            \u003e* `PendingCredit` - a pending balance credit.\n            \u003e* `CreditFailed` - a pending credit failure; the balance will not be credited.\n            \u003e* `Credited` - a credited balance.\n            \u003e* `PendingDebit` - a pending balance debit (e.g., a refund).\n            \u003e* `CreditClosed` - a pending credit closed; the balance will not be credited.\n            \u003e* `CreditSuspended` - a pending credit closed; the balance will not be credited.\n            \u003e* `DebitFailed` - a pending debit failure; the balance will not be debited.\n            \u003e* `Debited` - a debited balance (e.g., a refund).\n            \u003e* `DebitReversedReceived` - a pending refund reversal.\n            \u003e* `DebitedReversed` - a reversed refund.\n            \u003e* `ChargebackReceived` - a received chargeback request.\n            \u003e* `Chargeback` - a processed chargeback.\n            \u003e* `ChargebackReversedReceived` - a pending chargeback reversal.\n            \u003e* `ChargebackReversed` - a reversed chargeback.\n            \u003e* `Converted` - converted.\n            \u003e* `ManualCorrected` - manual booking/adjustment by Adyen.\n            \u003e* `Payout` - a payout.\n            \u003e* `PayoutReversed` - a reversed payout.\n            \u003e* `PendingFundTransfer` - a pending transfer of funds from one account to another.\n            \u003e* `FundTransfer` - a transfer of funds from one account to another.\n          items:\n            enum:\n              - BalanceNotPaidOutTransfer\n              - Chargeback\n              - ChargebackCorrection\n              - ChargebackCorrectionReceived\n              - ChargebackReceived\n              - ChargebackReversed\n              - ChargebackReversedCorrection\n              - ChargebackReversedCorrectionReceived\n              - ChargebackReversedReceived\n              - Converted\n              - CreditClosed\n              - CreditFailed\n              - CreditReversed\n              - CreditReversedReceived\n              - CreditSuspended\n              - Credited\n              - DebitFailed\n              - DebitReversedReceived\n              - Debited\n              - DebitedReversed\n              - DepositCorrectionCredited\n              - DepositCorrectionDebited\n              - Fee\n              - FundTransfer\n              - FundTransferReversed\n              - InvoiceDeductionCredited\n              - InvoiceDeductionDebited\n              - ManualCorrected\n              - ManualCorrectionCredited\n              - ManualCorrectionDebited\n              - MerchantPayin\n              - MerchantPayinReversed\n              - Payout\n              - PayoutReversed\n              - PendingCredit\n              - PendingDebit\n              - PendingFundTransfer\n              - SecondChargeback\n              - SecondChargebackCorrection\n              - SecondChargebackCorrectionReceived\n              - SecondChargebackReceived\n            type: string\n          type: array\n      required:\n        - accountHolderCode\n    AccountHolderTransactionListResponse:\n      properties:\n        accountTransactionLists:\n          description: A list of the transactions.\n          items:\n            $ref: \"#/components/schemas/AccountTransactionList\"\n          type: array\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    AccountTransactionList:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        hasNextPage:\n          description: Indicates whether there is a next page of transactions available.\n          type: boolean\n        transactions:\n          description: The list of transactions.\n          items:\n            $ref: \"#/components/schemas/Transaction\"\n          type: array\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    BankAccountDetail:\n      properties:\n        accountNumber:\n          description: |-\n            The bank account number (without separators).\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        accountType:\n          description: |-\n            The type of bank account.\n            Only applicable to bank accounts held in the USA.\n            The permitted values are: `checking`, `savings`.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankAccountName:\n          description: The name of the bank account.\n          type: string\n        bankAccountReference:\n          description: Merchant reference to the bank account.\n          type: string\n          x-addedInVersion: \"5\"\n        bankAccountUUID:\n          description: |\n            The unique identifier (UUID) of the Bank Account.\n            \u003eIf, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.\n\n            \u003eIf, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.\n\n            \u003eIf, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.\n\n            \u003eIf, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated.\n          type: string\n        bankBicSwift:\n          description: |-\n            The bank identifier code.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCity:\n          description: |-\n            The city in which the bank branch is located.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCode:\n          description: |-\n            The bank code of the banking institution with which the bank account is registered.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankName:\n          description: |-\n            The name of the banking institution with which the bank account is held.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        branchCode:\n          description: |-\n            The branch code of the branch under which the bank account is registered. The value to be specified in this parameter depends on the country of the bank account:\n            * United States - Routing number\n            * United Kingdom - Sort code\n            * Germany - Bankleitzahl\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        checkCode:\n          description: |-\n            The check code of the bank account.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        countryCode:\n          description: |-\n            The two-letter country code in which the bank account is registered.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        currencyCode:\n          description: |-\n            The currency in which the bank account deals.\n            \u003eThe permitted currency codes are defined in ISO-4217 (e.g. 'EUR').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        iban:\n          description: |-\n            The international bank account number.\n            \u003eThe IBAN standard is defined in ISO-13616.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCity:\n          description: |-\n            The city of residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCountryCode:\n          description: |-\n            The country code of the country of residence of the bank account owner.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerDateOfBirth:\n          description: |\n            The date of birth of the bank account owner.\n          type: string\n        ownerHouseNumberOrName:\n          description: |-\n            The house name or number of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerName:\n          description: |-\n            The name of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerNationality:\n          description: |-\n            The country code of the country of nationality of the bank account owner.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerPostalCode:\n          description: |-\n            The postal code of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerState:\n          description: |-\n            The state of residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerStreet:\n          description: |-\n            The street name of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        primaryAccount:\n          description: If set to true, the bank account is a primary account.\n          type: boolean\n        taxId:\n          description: |-\n            The tax ID number.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        urlForVerification:\n          description: |-\n            The URL to be used for bank account verification.\n            This may be generated on bank account creation.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n    DebitAccountHolderRequest:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount to be debited from the account holder's bank account.\n        bankAccountUUID:\n          description: The Adyen-generated unique alphanumeric identifier (UUID) of the account holder's bank account.\n          type: string\n        description:\n          description: |-\n            A description of the direct debit. Maximum length: 35 characters.\n\n            Allowed characters: **a-z**, **A-Z**, **0-9**, and special characters **/?:().,'+ \";**.\n          maxLength: 35\n          type: string\n        merchantAccount:\n          description: Your merchant account.\n          type: string\n        splits:\n          description: Contains instructions on how to split the funds between the accounts in your platform. The request must have at least one split item.\n          items:\n            $ref: \"#/components/schemas/Split\"\n          type: array\n      required:\n        - accountHolderCode\n        - bankAccountUUID\n        - amount\n        - splits\n        - merchantAccount\n    DebitAccountHolderResponse:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        bankAccountUUID:\n          description: The Adyen-generated unique alphanumeric identifier (UUID) of the account holder's bank account.\n          type: string\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        merchantReferences:\n          description: List of the `reference` values from the `split` array in the request.\n          items:\n            type: string\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    DetailBalance:\n      properties:\n        balance:\n          description: The list of balances held by the account.\n          items:\n            $ref: \"#/components/schemas/Amount\"\n          type: array\n        onHoldBalance:\n          description: The list of on hold balances held by the account.\n          items:\n            $ref: \"#/components/schemas/Amount\"\n          type: array\n          x-addedInVersion: \"5\"\n        pendingBalance:\n          description: The list of pending balances held by the account.\n          items:\n            $ref: \"#/components/schemas/Amount\"\n          type: array\n    ErrorFieldType:\n      properties:\n        errorCode:\n          description: The validation error code.\n          format: int32\n          type: integer\n        errorDescription:\n          description: A description of the validation error.\n          type: string\n        fieldType:\n          $ref: \"#/components/schemas/FieldType\"\n          description: The type of error field.\n    FieldType:\n      properties:\n        field:\n          description: The full name of the property.\n          type: string\n        fieldName:\n          description: The type of the field.\n          enum:\n            - accountCode\n            - accountHolderCode\n            - accountHolderDetails\n            - accountNumber\n            - accountStateType\n            - accountStatus\n            - accountType\n            - address\n            - bankAccount\n            - bankAccountCode\n            - bankAccountName\n            - bankAccountUUID\n            - bankBicSwift\n            - bankCity\n            - bankCode\n            - bankName\n            - bankStatement\n            - branchCode\n            - businessContact\n            - cardToken\n            - checkCode\n            - city\n            - companyRegistration\n            - constitutionalDocument\n            - country\n            - countryCode\n            - currency\n            - currencyCode\n            - dateOfBirth\n            - description\n            - destinationAccountCode\n            - document\n            - documentExpirationDate\n            - documentIssuerCountry\n            - documentIssuerState\n            - documentName\n            - documentNumber\n            - documentType\n            - doingBusinessAs\n            - drivingLicence\n            - drivingLicenceBack\n            - drivingLicense\n            - email\n            - firstName\n            - formType\n            - fullPhoneNumber\n            - gender\n            - hopWebserviceUser\n            - houseNumberOrName\n            - iban\n            - idCard\n            - idCardBack\n            - idCardFront\n            - idNumber\n            - identityDocument\n            - individualDetails\n            - jobTitle\n            - lastName\n            - legalArrangement\n            - legalArrangementCode\n            - legalArrangementEntity\n            - legalArrangementEntityCode\n            - legalArrangementLegalForm\n            - legalArrangementMember\n            - legalArrangementMembers\n            - legalArrangementName\n            - legalArrangementReference\n            - legalArrangementRegistrationNumber\n            - legalArrangementTaxNumber\n            - legalArrangementType\n            - legalBusinessName\n            - legalEntity\n            - legalEntityType\n            - merchantAccount\n            - merchantCategoryCode\n            - merchantReference\n            - microDeposit\n            - name\n            - nationality\n            - originalReference\n            - ownerCity\n            - ownerCountryCode\n            - ownerHouseNumberOrName\n            - ownerName\n            - ownerPostalCode\n            - ownerState\n            - ownerStreet\n            - passport\n            - passportNumber\n            - payoutMethodCode\n            - payoutSchedule\n            - pciSelfAssessment\n            - personalData\n            - phoneCountryCode\n            - phoneNumber\n            - postalCode\n            - primaryCurrency\n            - reason\n            - registrationNumber\n            - returnUrl\n            - schedule\n            - shareholder\n            - shareholderCode\n            - shareholderCodeAndSignatoryCode\n            - shareholderCodeOrSignatoryCode\n            - shareholderType\n            - shopperInteraction\n            - signatory\n            - signatoryCode\n            - socialSecurityNumber\n            - sourceAccountCode\n            - splitAccount\n            - splitConfigurationUUID\n            - splitCurrency\n            - splitValue\n            - splits\n            - stateOrProvince\n            - status\n            - stockExchange\n            - stockNumber\n            - stockTicker\n            - store\n            - storeDetail\n            - storeName\n            - storeReference\n            - street\n            - taxId\n            - tier\n            - tierNumber\n            - transferCode\n            - ultimateParentCompany\n            - ultimateParentCompanyAddressDetails\n            - ultimateParentCompanyAddressDetailsCountry\n            - ultimateParentCompanyBusinessDetails\n            - ultimateParentCompanyBusinessDetailsLegalBusinessName\n            - ultimateParentCompanyBusinessDetailsRegistrationNumber\n            - ultimateParentCompanyCode\n            - ultimateParentCompanyStockExchange\n            - ultimateParentCompanyStockNumber\n            - ultimateParentCompanyStockNumberOrStockTicker\n            - ultimateParentCompanyStockTicker\n            - unknown\n            - value\n            - verificationType\n            - virtualAccount\n            - visaNumber\n            - webAddress\n            - year\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.\n          type: string\n    PayoutAccountHolderRequest:\n      properties:\n        accountCode:\n          description: The code of the account from which the payout is to be made.\n          type: string\n        accountHolderCode:\n          description: |-\n            The code of the Account Holder who owns the account from which the payout is to be made.\n            The Account Holder is the party to which the payout will be made.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount to pay out.\n        bankAccountUUID:\n          description: |-\n            The unique ID of the Bank Account held by the Account Holder to which the payout is to be made.\n            If left blank, a bank account is automatically selected.\n          type: string\n        description:\n          description: |-\n            A description of the payout. Maximum 35 characters.\n            Allowed: **abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789/?:().,'+ \";**\n          maxLength: 35\n          type: string\n        merchantReference:\n          description: A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another.\n          type: string\n          x-addedInVersion: \"2\"\n        payoutMethodCode:\n          description: |-\n            The unique ID of the payout method held by the Account Holder to which the payout is to be made.\n            If left blank, a payout instrument is automatically selected.\n          type: string\n          x-addedInVersion: \"5\"\n        payoutSpeed:\n          default: STANDARD\n          description: \"Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.\"\n          enum:\n            - INSTANT\n            - SAME_DAY\n            - STANDARD\n          type: string\n          x-addedInVersion: \"5\"\n      required:\n        - accountHolderCode\n        - accountCode\n        - amount\n    PayoutAccountHolderResponse:\n      properties:\n        bankAccountUUID:\n          description: The unique ID of the Bank Account to which the payout was made.\n          type: string\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        merchantReference:\n          description: The value supplied by the executing user when initiating the transfer; may be used to link multiple transactions.\n          type: string\n          x-addedInVersion: \"2\"\n        payoutSpeed:\n          default: STANDARD\n          description: \"Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.\"\n          enum:\n            - INSTANT\n            - SAME_DAY\n            - STANDARD\n          type: string\n          x-addedInVersion: \"5\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    RefundFundsTransferRequest:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount to be transferred.\n        merchantReference:\n          description: A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another.\n          type: string\n        originalReference:\n          description: A PSP reference of the original fund transfer.\n          type: string\n      required:\n        - originalReference\n        - amount\n    RefundFundsTransferResponse:\n      properties:\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        merchantReference:\n          description: The value supplied by the executing user when initiating the transfer refund; may be used to link multiple transactions.\n          type: string\n        message:\n          description: The message of the response.\n          type: string\n        originalReference:\n          description: A PSP reference of the original fund transfer.\n          type: string\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    RefundNotPaidOutTransfersRequest:\n      properties:\n        accountCode:\n          description: The code of the account from which to perform the refund(s).\n          type: string\n        accountHolderCode:\n          description: The code of the Account Holder which owns the account from which to perform the refund(s).\n          type: string\n      required:\n        - accountHolderCode\n        - accountCode\n    RefundNotPaidOutTransfersResponse:\n      properties:\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    ServiceError:\n      properties:\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    SetupBeneficiaryRequest:\n      properties:\n        destinationAccountCode:\n          description: The destination account code.\n          type: string\n        merchantReference:\n          description: A value that can be supplied at the discretion of the executing user.\n          type: string\n        sourceAccountCode:\n          description: The benefactor account.\n          type: string\n      required:\n        - sourceAccountCode\n        - destinationAccountCode\n    SetupBeneficiaryResponse:\n      properties:\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n    Split:\n      properties:\n        account:\n          description: |+\n            Unique identifier of the account where the split amount should be sent. This is required if `type` is **MarketPlace** or **BalanceAccount**.\n\n          type: string\n        amount:\n          $ref: \"#/components/schemas/SplitAmount\"\n          description: The amount of this split.\n        description:\n          description: A description of this split.\n          type: string\n        reference:\n          description: |-\n            Your reference for the split, which you can use to link the split to other operations such as captures and refunds.\n\n            This is required if `type` is **MarketPlace** or **BalanceAccount**. For the other types, we also recommend sending a reference so you can reconcile the split and the associated payment in the transaction overview and in the reports. If the reference is not provided, the split is reported as part of the aggregated [TransferBalance record type](https://docs.adyen.com/reporting/marketpay-payments-accounting-report) in Adyen for Platforms.\n          type: string\n        type:\n          description: |-\n            The type of split.\n            Possible values: **Default**, **PaymentFee**, **VAT**, **Commission**, **MarketPlace**, **BalanceAccount**.\n          enum:\n            - BalanceAccount\n            - Commission\n            - Default\n            - MarketPlace\n            - PaymentFee\n            - VAT\n            - Verification\n          type: string\n      required:\n        - amount\n        - type\n    SplitAmount:\n      properties:\n        currency:\n          description: |-\n            The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n\n            If this value is not provided, the currency in which the payment is made will be used.\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n    Transaction:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount of the transaction.\n        bankAccountDetail:\n          $ref: \"#/components/schemas/BankAccountDetail\"\n          description: The details of the bank account to where a payout was made.\n        captureMerchantReference:\n          description: The merchant reference of a related capture.\n          type: string\n        capturePspReference:\n          description: The psp reference of a related capture.\n          type: string\n        creationDate:\n          description: The date on which the transaction was performed.\n          format: date-time\n          type: string\n        description:\n          description: A description of the transaction.\n          type: string\n        destinationAccountCode:\n          description: The code of the account to which funds were credited during an outgoing fund transfer.\n          type: string\n        disputePspReference:\n          description: The psp reference of the related dispute.\n          type: string\n        disputeReasonCode:\n          description: The reason code of a dispute.\n          type: string\n        merchantReference:\n          description: The merchant reference of a transaction.\n          type: string\n        paymentPspReference:\n          description: The psp reference of the related authorisation or transfer.\n          type: string\n          x-addedInVersion: \"3\"\n        payoutPspReference:\n          description: The psp reference of the related payout.\n          type: string\n          x-addedInVersion: \"3\"\n        pspReference:\n          description: The psp reference of a transaction.\n          type: string\n        sourceAccountCode:\n          description: The code of the account from which funds were debited during an incoming fund transfer.\n          type: string\n        transactionStatus:\n          description: |-\n            The status of the transaction.\n            \u003ePermitted values: `PendingCredit`, `CreditFailed`, `CreditClosed`, `CreditSuspended`, `Credited`, `Converted`, `PendingDebit`, `DebitFailed`, `Debited`, `DebitReversedReceived`, `DebitedReversed`, `ChargebackReceived`, `Chargeback`, `ChargebackReversedReceived`, `ChargebackReversed`, `Payout`, `PayoutReversed`, `FundTransfer`, `PendingFundTransfer`, `ManualCorrected`.\n          enum:\n            - BalanceNotPaidOutTransfer\n            - Chargeback\n            - ChargebackCorrection\n            - ChargebackCorrectionReceived\n            - ChargebackReceived\n            - ChargebackReversed\n            - ChargebackReversedCorrection\n            - ChargebackReversedCorrectionReceived\n            - ChargebackReversedReceived\n            - Converted\n            - CreditClosed\n            - CreditFailed\n            - CreditReversed\n            - CreditReversedReceived\n            - CreditSuspended\n            - Credited\n            - DebitFailed\n            - DebitReversedReceived\n            - Debited\n            - DebitedReversed\n            - DepositCorrectionCredited\n            - DepositCorrectionDebited\n            - Fee\n            - FundTransfer\n            - FundTransferReversed\n            - InvoiceDeductionCredited\n            - InvoiceDeductionDebited\n            - ManualCorrected\n            - ManualCorrectionCredited\n            - ManualCorrectionDebited\n            - MerchantPayin\n            - MerchantPayinReversed\n            - Payout\n            - PayoutReversed\n            - PendingCredit\n            - PendingDebit\n            - PendingFundTransfer\n            - SecondChargeback\n            - SecondChargebackCorrection\n            - SecondChargebackCorrectionReceived\n            - SecondChargebackReceived\n          type: string\n        transferCode:\n          description: The transfer code of the transaction.\n          type: string\n    TransactionListForAccount:\n      properties:\n        accountCode:\n          description: The account for which to retrieve the transactions.\n          type: string\n        page:\n          description: |-\n            The page of transactions to retrieve.\n            Each page lists fifty (50) transactions.  The most recent transactions are included on page 1.\n          format: int32\n          type: integer\n      required:\n        - accountCode\n        - page\n    TransferFundsRequest:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount to be transferred.\n        destinationAccountCode:\n          description: |-\n            The code of the account to which the funds are to be credited.\n            \u003eThe state of the Account Holder of this account must be Active.\n          type: string\n        merchantReference:\n          description: A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another.\n          type: string\n          x-addedInVersion: \"2\"\n        sourceAccountCode:\n          description: |-\n            The code of the account from which the funds are to be debited.\n            \u003eThe state of the Account Holder of this account must be Active and allow payouts.\n          type: string\n        transferCode:\n          description: |-\n            The code related to the type of transfer being performed.\n            \u003eThe permitted codes differ for each platform account and are defined in their service level agreement.\n          type: string\n      required:\n        - sourceAccountCode\n        - destinationAccountCode\n        - transferCode\n        - amount\n    TransferFundsResponse:\n      properties:\n        invalidFields:\n          description: Contains field validation errors that would prevent requests from being processed.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        merchantReference:\n          description: The value supplied by the executing user when initiating the transfer; may be used to link multiple transactions.\n          type: string\n          x-addedInVersion: \"2\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n  - General\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/adyen.com/FundService/6/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/adyen.com/FundService/6/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}