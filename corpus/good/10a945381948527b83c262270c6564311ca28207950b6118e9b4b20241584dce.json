{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fishpercolator/name.pn"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 6140,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: name.pn API\n  description: \"## Welcome to the name.pn API\\n\\nHere you can get programmatic access\n    to name.pn profiles for use in your\\nown applications.\\n\\nFor example, you may\n    have an application that sends emails and you want\\nto use a person's formal_name\n    to address them, instead of asking them for\\na title, which is not appropriate\n    for many users.\\n\\n### API keys\\n\\nYou will need an API key to access this API.\n    These can be generated by\\nvisiting [your account settings](/users/edit) and filling\n    in the form.\\n\\nYou can supply your key in the headers like this:\\n\\n```\\nAuthentication:\n    Bearer \u003cyour_key\u003e\\n```\\n\\nYou can test the live API endpoints in the documentation\n    below. To do\\nso, please click the button marked *Authorize* and enter your API\n    key\\nthere.\\n\\n### Terms of use\\n\\nUse of the name.pn API is subject to the [name.pn\n    terms and conditions \\nof use](/pages/terms), including the prohibited uses in\n    Section 4.\\n\\nUse of this API is provided with no guarantees. Please be considerate\n    in\\nhow you use it, including caching responses if you're making frequent\\ncalls.\\n\\nThere\n    are no fixed usage limits, but your API key ID is logged with\\nevery request and\n    we reserve the right to disable clients that are not\\nbeing considerate in their\n    usage.\\n\\nAs a guideline, please consider 3600 calls per hour to this API as a\\nreasonable\n    limit that we would not impose any restrictions on. If you\\nneed more than this,\n    please contact us for a commercial agreement.\\n\\nUsage of this API is currently\n    provided at no charge. We reserve the\\nright to introduce charges to this API\n    as this product matures.\\n\"\n  version: v1\npaths:\n  \"/api/v1/users/{slug}\":\n    parameters:\n    - name: slug\n      in: path\n      description: The slug of the user you want to retrieve\n      example: abby-yates\n      required: true\n      schema:\n        type: string\n    get:\n      summary: show user\n      tags:\n      - User profiles\n      security:\n      - jwt: []\n      responses:\n        '401':\n          description: not logged in\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/User\"\n        '404':\n          description: not found\nservers:\n- url: \"/api\"\ncomponents:\n  securitySchemes:\n    jwt:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Link:\n      type: object\n      required:\n      - title\n      - url\n      properties:\n        title:\n          type: string\n          description: The title of the link\n          example: Twitter\n        url:\n          type: string\n          description: The link URL\n          example: https://example.com/AbbyYates\n    PronounSet:\n      type: object\n      required:\n      - nominative\n      - oblique\n      - possessive_determiner\n      - possessive\n      - reflexive\n      - copula\n      properties:\n        nominative:\n          type: string\n          description: The nominative case / subject form of this pronoun\n          example: they\n        oblique:\n          type: string\n          description: The oblique case / object form of this pronoun\n          example: them\n        possessive_determiner:\n          type: string\n          description: The possessive determiner form of this pronoun\n          example: their\n        possessive:\n          type: string\n          description: The possessive (non-determiner) form of this pronoun\n          example: theirs\n        reflexive:\n          type: string\n          description: The reflexive form of this pronoun\n          example: themself\n        copula:\n          type: string\n          description: Which copula form ('is' or 'are') to use with this pronoun\n          example: are\n    User:\n      type: object\n      required:\n      - slug\n      - personal_name\n      - full_name\n      - formal_name\n      - envelope_name\n      properties:\n        slug:\n          type: string\n          description: This user's unique slug\n          example: abby-yates\n        personal_name:\n          type: string\n          description: Used when addressing this user in conversation\n          example: Abby\n        full_name:\n          type: string\n          description: Used when adding this user to a list of names\n          example: Abby Yates\n        formal_name:\n          type: string\n          description: Used in formal contexts such as the opening of a letter\n          example: Dr Yates\n          nullable: true\n        envelope_name:\n          type: string\n          description: Used when adding this name to an address\n          example: Dr Abigail L. Yates\n          nullable: true\n        pronoun_sets:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/PronounSet\"\n          minItems: 1\n        pronunciation_of:\n          type: string\n          enum:\n          - full_name\n          - personal_name\n          - formal_name\n          - envelope_name\n          description: Which of the fields the pronunciation fields (phonetic, pronunciation\n            and ipa) relate to\n        phonetic:\n          type: string\n          description: Phonetic pronunciation\n          example: A-bee YAYTS\n          nullable: true\n        ipa:\n          type: string\n          description: International Phonetic Alphabet pronunciation\n          example: ˈabi jeɪts\n          nullable: true\n        pronunciation:\n          type: string\n          format: uri\n          description: 'URL of an audio clip of the pronunciation. **Note**: May be\n            a relative URL and may redirect.'\n          example: \"/rails/active_storage/blobs/redirect/xxx.wav\"\n          nullable: true\n        likeness:\n          type: string\n          format: uri\n          description: 'URL of an image of the user''s likeness. **Note**: May be\n            a relative URL and may redirect.'\n          example: \"/rails/active_storage/blobs/redirect/yyy.jpg\"\n          nullable: true\n        links:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Link\"\n",
			"canonicalURL": "/github.com/fishpercolator/name.pn@4e3e7e8aa48e38cf97c26147c8c55706f1d4caf4/-/blob/swagger/v1/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fishpercolator/name.pn/blob/4e3e7e8aa48e38cf97c26147c8c55706f1d4caf4/swagger/v1/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}