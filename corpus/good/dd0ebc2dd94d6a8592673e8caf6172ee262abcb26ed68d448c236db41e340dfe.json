{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gpodder/mygpo"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "mygpo/api/openapi.yaml",
			"byteSize": 29774,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"gpodder.net APIs\"\n  version: \"2.11.0\"\n  title: \"gpodder.net APIs\"\n  contact:\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/\"\n  license:\n    name: \"GNU Affero General Public License v3.0\"\n    url: \"https://github.com/podStation/mygpo/blob/master/COPYING\"\nservers:\n  - url: https://gpodder.net\n    description: \"Client parametrization server\"\ntags:\n- name: \"Client Parametrization\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/clientconfig.html\"\n- name: \"Authentication\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/auth.html\"\n- name: \"Directory\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/directory.html\"\n- name: \"Suggestions\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/suggestions.html\"\n- name: \"Device\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/suggestions.html\"\n- name: \"Device Synchronization\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/sync.html\"\n- name: \"Subscriptions\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/subscriptions.html\"\n- name: \"Episode Actions\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/events.html\"\n- name: \"Settings\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/settings.html\"\n- name: \"Podcast Lists\"\n  externalDocs:\n    description: \"Find out more\"\n    url: \"https://gpoddernet.readthedocs.io/en/latest/api/reference/podcastlists.html\"\npaths:\n  /clientconfig.json:\n    get:\n      tags:\n      - \"Client Parametrization\"\n      summary: \"Retrieves client parametrization\"\n      description: \"\"\n      operationId: \"getClientParametrization\"\n      responses:\n        200:\n          description: \"Ok\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientConfiguration\"\n  /api/2/auth/{username}/login.json:\n    post:\n      tags:\n      - \"Authentication\"\n      summary: Log in the given user for the given device via HTTP Basic Auth.\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"Username to login\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n        401:\n          description: \"Unauthorized\"\n        400:\n          description: \"Cookies have different username then the one provided\"\n  /api/2/auth/{username}/logout.json:\n    post:\n      tags:\n      - \"Authentication\"\n      summary: \"Log out user\"\n      description: \"Log out the given user. Removes the session ID from the database.\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"Username to login\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n        400:\n          description: \"if the client provides a cookie, but for a different username than the one given\"\n  /api/2/tags/{count}.json:\n    get:\n      tags:\n      - \"Directory\"\n      summary: \"Retrieve Top Tags\"\n      parameters:\n      - name: \"count\"\n        in: \"path\"\n        description: \"number of tags to return\"\n        required: true\n        schema:\n          type: \"integer\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/tag/{tag}/{count}.json:\n    get:\n      tags:\n      - \"Directory\"\n      summary: \"Retrieve Podcasts for Tag\"\n      parameters:\n      - name: \"count\"\n        in: \"path\"\n        description: \"maximum number of podcasts to return\"\n        required: true\n        schema:\n          type: \"integer\"\n      - name: \"tag\"\n        in: \"path\"\n        description: \"URL-encoded tag\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/data/podcast.json:\n    get:\n      tags:\n      - \"Directory\"\n      summary: \"Retrieve Podcast Data\"\n      description: \"Returns information for the podcast with the given URL or 404 if there is no podcast with this URL.\"\n      parameters:\n      - name: \"url\"\n        in: \"query\"\n        description: \"the feed URL of the podcast\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/data/episode.json:\n    get:\n      tags:\n      - \"Directory\"\n      summary: \"Retrieve Episode Data\"\n      description: \"Returns information for the episode with the given {episode-url} that belongs to the podcast with the {podcast-url}\"\n      parameters:\n      - name: \"podcast-url\"\n        in: \"query\"\n        description: \"feed URL of the podcast to which the episode belongs\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"episode-url\"\n        in: \"query\"\n        description: \"media URL of the episode\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /toplist/{number}.{format}:\n    get:\n      tags:\n      - \"Directory\"\n      summary: \"Podcast Toplist\"\n      parameters:\n      - name: \"number\"\n        in: \"path\"\n        description: \"maximum number of podcasts to return\"\n        required: true\n        schema:\n          type: \"integer\"\n      - name: \"format\"\n        in: \"path\"\n        description: \"Format of the response\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      - name: \"jsonp\"\n        in: \"query\"\n        description: \"a function name on which the response is wrapped (only valid for format jsonp; since 2.8)\"\n        schema:\n          type: \"string\"\n      - name: \"scale_logo\"\n        in: \"query\"\n        description: \"returns logo URLs to scaled images\"\n        schema:\n          type: \"integer\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n            text/plain:\n              schema:\n                type: \"string\"\n            text/xml:\n              schema:\n                type: \"object\"\n            application/xml:\n              schema:\n                type: \"object\"\n            application/json-p:\n              schema:\n                type: \"string\"\n  /search.{format}:\n    get:\n      tags:\n      - \"Directory\"\n      summary: \"Podcast Toplist\"\n      parameters:\n      - name: \"format\"\n        in: \"path\"\n        description: \"Format of the response\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      - name: \"q\"\n        in: \"query\"\n        description: \"search query\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"jsonp\"\n        in: \"query\"\n        description: \"a functionname on which the response is wrapped (only valid for format jsonp; since 2.8)\"\n        schema:\n          type: \"string\"\n      - name: \"scale_logo\"\n        in: \"query\"\n        description: \"returns logo URLs to scaled images\"\n        schema:\n          type: \"integer\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n            text/plain:\n              schema:\n                type: \"string\"\n            text/xml:\n              schema:\n                type: \"object\"\n            application/xml:\n              schema:\n                type: \"object\"\n            application/json-p:\n              schema:\n                type: \"string\"\n  /suggestions/{number}.{format}:\n    get:\n      tags:\n      - \"Suggestions\"\n      summary: \"Retrieve Suggested Podcasts\"\n      parameters:\n      - name: \"number\"\n        in: \"path\"\n        description: \"maximum number of podcasts to return\"\n        required: true\n        schema:\n          type: \"integer\"\n      - name: \"format\"\n        in: \"path\"\n        description: \"Format of the response\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      - name: \"jsonp\"\n        in: \"query\"\n        description: \"a functionname on which the response is wrapped (only valid for format jsonp; since 2.8)\"\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n            text/plain:\n              schema:\n                type: \"string\"\n            text/xml:\n              schema:\n                type: \"object\"\n            application/xml:\n              schema:\n                type: \"object\"\n            application/json-p:\n              schema:\n                type: \"string\"\n  /api/2/devices/{username}/{deviceid}.json:\n    post:\n      tags:\n      - \"Device\"\n      summary: \"Update Device Data\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"Username to login\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"deviceid\"\n        in: \"path\"\n        description: \"Device Id\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceUpdateData'\n      responses:\n        200:\n          description: \"OK\"\n  /api/2/devices/{username}.json:\n    get:\n      tags:\n      - \"Device\"\n      summary: \"List Devices\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"Username to login\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/updates/{username}/{deviceid}.json:\n    get:\n      tags:\n      - \"Device\"\n      summary: \"Get Device Updates\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"Username to login\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"deviceid\"\n        in: \"path\"\n        description: \"Device Id\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      - name: \"since\"\n        in: \"query\"\n        description: \"`timestamp` when updates have last been retrieved\"\n        required: true\n        schema:\n          type: \"integer\"\n      - name: \"include_actions\"\n        in: \"query\"\n        description: \"Default: false, since 2.10\"\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/sync-devices/{username}.json:\n    get:\n      tags:\n      - \"Device Synchronization\"\n      summary: \"Get Sync Status\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"Username to login\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n    post:\n      tags:\n      - \"Device Synchronization\"\n      summary: \"Start / Stop Sync\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"Username to login\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceSynchronizationRequest'\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/favorites/{username}.json:\n    get:\n      tags:\n      - \"Favorites\"\n      summary: \"Get Favorite Episodes\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which the favorites should be returned\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /subscriptions/{username}/{deviceid}.{format}:\n    get:\n      tags:\n      - \"Subscriptions\"\n      summary: \"Update Device Data\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which subscriptions should be returned\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"deviceid\"\n        in: \"path\"\n        description: \"Device Id\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      - name: \"format\"\n        in: \"path\"\n        description: \"Format of the response\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      - name: \"jsonp\"\n        in: \"query\"\n        description: \"a function name on which the response is wrapped (only valid for format jsonp; since 2.8)\"\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n        401:\n          description: \"Invalid user\"\n        404:\n          description: \"Invalid device ID\"\n        400:\n          description: \"Invalid format\"\n    put:\n      tags:\n      - \"Subscriptions\"\n      summary: \"Upload Subscriptions of Device\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which subscriptions should be returned\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"deviceid\"\n        in: \"path\"\n        description: \"Device Id\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      - name: \"format\"\n        in: \"path\"\n        description: \"Format of the response\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadSubscriptionRequest'\n      responses:\n        200:\n          description: \"OK\"\n        401:\n          description: \"Invalid user\"\n        400:\n          description: \"Invalid format\"\n  /subscriptions/{username}.{format}:\n    get:\n      tags:\n      - \"Subscriptions\"\n      summary: \"Get All Subscriptions\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which subscriptions should be returned\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"format\"\n        in: \"path\"\n        description: \"Format of the response\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      - name: \"jsonp\"\n        in: \"query\"\n        description: \"a function name on which the response is wrapped (only valid for format jsonp; since 2.8)\"\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n        401:\n          description: \"Invalid user\"\n        400:\n          description: \"Invalid format\"\n  /api/2/subscriptions/{username}/{deviceid}.json:\n    post:\n      tags:\n      - \"Subscriptions\"\n      summary: \"Upload Subscription Changes\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which subscriptions should be returned\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"deviceid\"\n        in: \"path\"\n        description: \"Device Id\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadSubscriptionChangesRequest'\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n        400:\n          description: \"Invalid format\"\n    get:\n      tags:\n      - \"Subscriptions\"\n      summary: \"Get Subscription Changes\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which subscriptions should be returned\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"deviceid\"\n        in: \"path\"\n        description: \"Device Id\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      - name: \"since\"\n        in: \"query\"\n        description: \"the `timestamp` value of the last response\"\n        required: true\n        schema:\n          type: \"integer\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/episodes/{username}.json:\n    post:\n      tags:\n      - \"Episode Actions\"\n      summary: \"Upload Episode Actions\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which the actions will be set\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetEpisodeActionsRequest'\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n    get:\n      tags:\n      - \"Episode Actions\"\n      summary: \"Get Episode Actions\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which the actions will be retrieved\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"podcast\"\n        in: \"query\"\n        description: \"The URL of a Podcast feed; if set, only actions for episodes of the given podcast are returned\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"device\"\n        in: \"query\"\n        description: \"A Device ID; if set, only actions for the given device are returned\"\n        schema:\n          type: \"string\"\n      - name: \"since\"\n        in: \"query\"\n        description: \"Only episode actions since the given timestamp are returned\"\n        schema:\n          type: \"integer\"\n      - name: \"aggregated\"\n        in: \"query\"\n        description: \"If true, only the latest actions is returned for each episode (added in 2.1)\"\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/settings/{username}/{scope}.json:\n    post:\n      tags:\n      - \"Settings\"\n      summary: \"Save Settings\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which the settings will be saved\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"scope\"\n        in: \"path\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/SettingsScope\"\n      - name: \"podcast\"\n        in: \"query\"\n        description: \"Feed URL of a podcast (required for scope podcast and episode)\"\n        schema:\n          type: \"string\"\n      - name: \"device\"\n        in: \"query\"\n        description: \"(required for scope device)\"\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      - name: \"episode\"\n        in: \"query\"\n        description: \"media URL of the episode (required for scope episode)\"\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SaveSettingsRequest'\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n    get:\n      tags:\n      - \"Settings\"\n      summary: \"Save Settings\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which the settings will be saved\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"scope\"\n        in: \"path\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/SettingsScope\"\n      - name: \"podcast\"\n        in: \"query\"\n        description: \"Feed URL of a podcast (required for scope podcast and episode)\"\n        schema:\n          type: \"string\"\n      - name: \"device\"\n        in: \"query\"\n        description: \"(required for scope device)\"\n        schema:\n          $ref: \"#/components/schemas/DeviceId\"\n      - name: \"episode\"\n        in: \"query\"\n        description: \"media URL of the episode (required for scope episode)\"\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      responses:\n        200:\n          description: \"OK\"\n        409:\n          description: \"if the the user already has a podcast list with the (generated) name\"\n  /api/2/lists/{username}/create.{format}:\n    post:\n      tags:\n      - \"Podcast Lists\"\n      summary: \"Create Podcast List\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which a new podcast list should be created\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"format\"\n        in: \"path\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      - name: \"title\"\n        in: \"query\"\n        required: true\n        schema:\n          type: \"string\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"array\"\n              items:\n                type: \"string\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n  /api/2/lists/{username}.json:\n    get:\n      tags:\n      - \"Podcast Lists\"\n      summary: \"Get User’s Lists\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which a new podcast list should be created\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n        404:\n          description: \"the user was not found\"\n  /api/2/lists/{username}/list/{listname}.{format}:\n    get:\n      tags:\n      - \"Podcast Lists\"\n      summary: \"Get a Podcast List\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username for which a new podcast list should be created\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"listname\"\n        in: \"path\"\n        description: \"name of the requested podcast list\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"format\"\n        in: \"path\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      responses:\n        200:\n          description: \"the podcast list is returned in in the requested format\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n        404:\n          description: \"if the user or the list do not exist\"\n    put:\n      tags:\n      - \"Podcast Lists\"\n      summary: \"Update a Podcast List\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username to which the list belongs\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"listname\"\n        in: \"path\"\n        description: \"name of the requested podcast list\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"format\"\n        in: \"path\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      security:\n        - basicAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"array\"\n              items:\n                type: \"string\"\n      responses:\n        204:\n          description: \"if the podcast list has been created / updated\"\n        404:\n          description: \"if the user or the list do not exist\"\n    delete:\n      tags:\n      - \"Podcast Lists\"\n      summary: \"Delete a Podcast List\"\n      parameters:\n      - name: \"username\"\n        in: \"path\"\n        description: \"username to which the list belongs\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"listname\"\n        in: \"path\"\n        description: \"name of the requested podcast list\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"format\"\n        in: \"path\"\n        required: true\n        schema:\n          $ref: \"#/components/schemas/Format\"\n      security:\n        - basicAuth: []\n      responses:\n        204:\n          description: \"if the podcast list has been created / updated\"\n        404:\n          description: \"if the podcast list has been deleted\"\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    ClientConfiguration:\n      type: \"object\"\n      properties:\n        mygpo:\n          type: \"object\"\n          properties:\n            baseurl:\n              type: \"string\"\n              description: \"URL to which the gpodder.net API Endpoints should be appended\"\n        mygpo-feedservice:\n          properties:\n            baseurl:\n              type: \"string\"\n              description: \"Base URL of the gpodder.net feed service\"\n        update_timeout:\n          type: \"integer\"\n          description: \"Time in seconds for which the values in this file can be considered valid.\"\n    Format:\n      type: \"string\"\n      enum: \n      - \"json\"\n      - \"xml\"\n      - \"opml\"\n      - \"txt\"\n      - \"jsonp\"\n    DeviceId:\n      type: \"string\"\n      pattern: \"^[\\\\w.-]+$\"\n    DeviceUpdateData:\n      type: \"object\"\n      properties:\n        caption:\n          type: \"string\"\n        type:\n          type: \"string\"\n          enum:\n          - \"desktop\"\n          - \"laptop\"\n          - \"mobile\"\n          - \"server\"\n          - \"other\"\n    DeviceSynchronizationRequest:\n      type: \"object\"\n      properties:\n        synchronize:\n          type: \"array\"\n          items:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/DeviceId\"\n        stop-synchronize:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/DeviceId\"\n    UploadSubscriptionRequest:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/DeviceId\"\n    UploadSubscriptionChangesRequest:\n      type: \"object\"\n      properties:\n        add:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/DeviceId\"\n        remove:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/DeviceId\"\n    EpisodeActionTypes:\n      type: \"string\"\n      enum:\n      - \"download\"\n      - \"delete\"\n      - \"play\"\n      - \"new\"\n      - \"flattr\"\n    SetEpisodeActionsRequest:\n      type: \"array\"\n      items:\n        type: \"object\"\n        properties:\n          podcast:\n            type: \"string\"\n          episode:\n            type: \"string\"\n          device:\n            $ref: \"#/components/schemas/DeviceId\"\n          action:\n            $ref: \"#/components/schemas/EpisodeActionTypes\"\n          timestamp:\n            type: \"integer\"\n          started:\n            type: \"integer\"\n          position:\n            type: \"integer\"\n          total:\n            type: \"integer\"\n    SettingsScope:\n      type: \"string\"\n      enum:\n      - \"account\"\n      - \"device\"\n      - \"podcast\"\n      - \"episode\"\n    SaveSettingsRequest:\n      type: \"object\"\n      properties:\n        set:\n          type: \"object\"\n        remove:\n          type: \"array\"\n          items:\n            type: \"string\"",
			"canonicalURL": "/github.com/gpodder/mygpo@7a028ad621d05d4ca0d58fd22fb92656c8835e43/-/blob/mygpo/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gpodder/mygpo/blob/7a028ad621d05d4ca0d58fd22fb92656c8835e43/mygpo/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}