{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-openapi"
		},
		"file": {
			"name": "RecurringService-v68.yaml",
			"size": 0,
			"path": "yaml/RecurringService-v68.yaml",
			"byteSize": 33068,
			"content": "openapi: 3.1.0\nservers:\n- url: https://pal-test.adyen.com/pal/servlet/Recurring/v68\ninfo:\n  version: '68'\n  x-publicVersion: true\n  title: Adyen Recurring API\n  description: 'The Recurring APIs allow you to manage and remove your tokens or saved\n    payment details. Tokens should be created with validation during a payment request.\n\n\n    For more information, refer to our [Tokenization documentation](https://docs.adyen.com/online-payments/tokenization).\n\n    ## Authentication\n\n    To connect to the Recurring API, you must use your basic authentication credentials.\n    For this, create your web service user, as described in [How to get the WS user\n    password](https://docs.adyen.com/development-resources/api-credentials). Then\n    use its credentials to authenticate your request, for example:\n\n\n    ```\n\n    curl\n\n    -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\\n\n    -H \"Content-Type: application/json\" \\\n\n    ...\n\n    ```\n\n    Note that when going live, you need to generate new web service user credentials\n    to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n\n    ## Versioning\n\n    Recurring API supports [versioning](https://docs.adyen.com/development-resources/versioning)\n    using a version suffix in the endpoint URL. This suffix has the following format:\n    \"vXX\", where XX is the version number.\n\n\n    For example:\n\n    ```\n\n    https://pal-test.adyen.com/pal/servlet/Recurring/v68/disable\n\n    ```'\n  x-timestamp: '2022-05-03T09:24:07Z'\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  contact:\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    email: developer-experience@adyen.com\nx-groups:\n- General\ntags:\n- name: General\npaths:\n  /disable:\n    post:\n      tags:\n      - General\n      summary: Disables stored payment details.\n      description: 'Disables stored payment details to stop charging a shopper with\n        this particular recurring detail ID.\n\n\n        For more information, refer to [Disable stored details](https://docs.adyen.com/classic-integration/recurring-payments/disable-stored-details/).'\n      operationId: post-disable\n      x-groupName: General\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              disableARecurringContract:\n                $ref: '#/components/examples/post-disable-disableARecurringContract'\n            schema:\n              $ref: '#/components/schemas/DisableRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableResult'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /listRecurringDetails:\n    post:\n      tags:\n      - General\n      summary: Retrieves stored payment details for a shopper.\n      description: 'Lists the stored payment details for a shopper, if there are any\n        available. The recurring detail ID can be used with a regular authorisation\n        request to charge the shopper. A summary of the payment detail is returned\n        for presentation to the shopper.\n\n\n        For more information, refer to [Retrieve stored details](https://docs.adyen.com/classic-integration/recurring-payments/retrieve-stored-details/).'\n      operationId: post-listRecurringDetails\n      x-groupName: General\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              listAllRecurringDetails:\n                $ref: '#/components/examples/post-listRecurringDetails-listAllRecurringDetails'\n            schema:\n              $ref: '#/components/schemas/RecurringDetailsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecurringDetailsResult'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /notifyShopper:\n    post:\n      tags:\n      - General\n      summary: Ask the issuer to inform shopper of upcoming payment\n      description: Sends a request to the issuer so they can inform the shopper about\n        the upcoming recurring payment. This endpoint is used only for local acquiring\n        in India. For more information, refer to [Recurring card payments in India](https://docs.adyen.com/payment-methods/cards/cards-recurring-india).\n      operationId: post-notifyShopper\n      x-groupName: General\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotifyShopperRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotifyShopperResult'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /scheduleAccountUpdater:\n    post:\n      tags:\n      - General\n      summary: Schedules running of the Account Updater.\n      description: 'When making the API call, you can submit either the credit card\n        information, or the recurring detail reference and the shopper reference:\n\n        * If the card information is provided, all the sub-fields for `card` are mandatory.\n\n        * If the recurring detail reference is provided, the fields for `shopperReference`\n        and `selectedRecurringDetailReference` are mandatory.'\n      x-addedInVersion: '4'\n      operationId: post-scheduleAccountUpdater\n      x-groupName: General\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              scheduleAccountUpdaterWithCardData:\n                $ref: '#/components/examples/post-scheduleAccountUpdater-scheduleAccountUpdaterWithCardData'\n              scheduleAccountUpdaterWithTokenData:\n                $ref: '#/components/examples/post-scheduleAccountUpdater-scheduleAccountUpdaterWithTokenData'\n            schema:\n              $ref: '#/components/schemas/ScheduleAccountUpdaterRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleAccountUpdaterResult'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\ncomponents:\n  schemas:\n    Address:\n      properties:\n        city:\n          description: 'The name of the city. Maximum length: 3000 characters.'\n          maxLength: 3000\n          type: string\n        country:\n          description: 'The two-character ISO-3166-1 alpha-2 country code. For example,\n            **US**.\n\n            \u003e If you don''t know the country or are not collecting the country from\n            the shopper, provide `country` as `ZZ`.'\n          type: string\n        houseNumberOrName:\n          description: 'The number or name of the house. Maximum length: 3000 characters.'\n          maxLength: 3000\n          type: string\n        postalCode:\n          description: A maximum of five digits for an address in the US, or a maximum\n            of ten characters for an address in all other countries.\n          type: string\n        stateOrProvince:\n          description: 'The two-character ISO 3166-2 state or province code. For example,\n            **CA** in the US or **ON** in Canada.\n\n            \u003e Required for the US and Canada.'\n          type: string\n        street:\n          description: 'The name of the street. Maximum length: 3000 characters.\n\n            \u003e The house number should not be included in this field; it should be\n            separately provided via `houseNumberOrName`.'\n          maxLength: 3000\n          type: string\n      required:\n      - street\n      - houseNumberOrName\n      - city\n      - postalCode\n      - country\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n      - value\n      - currency\n    BankAccount:\n      properties:\n        bankAccountNumber:\n          description: The bank account number (without separators).\n          type: string\n        bankCity:\n          x-addedInVersion: '18'\n          description: The bank city.\n          type: string\n        bankLocationId:\n          description: The location id of the bank. The field value is `nil` in most\n            cases.\n          type: string\n        bankName:\n          description: The name of the bank.\n          type: string\n        bic:\n          description: The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362)\n            (BIC) is the SWIFT address assigned to a bank. The field value is `nil`\n            in most cases.\n          type: string\n        countryCode:\n          description: 'Country code where the bank is located.\n\n\n            A valid value is an ISO two-character country code (e.g. ''NL'').'\n          type: string\n        iban:\n          description: The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number)\n            (IBAN).\n          type: string\n        ownerName:\n          description: \"The name of the bank account holder.\\nIf you submit a name\\\n            \\ with non-Latin characters, we automatically replace some of them with\\\n            \\ corresponding Latin characters to meet the FATF recommendations. For\\\n            \\ example:\\n* \\u03C712 is converted to ch12.\\n* \\xFCA is converted to\\\n            \\ euA.\\n* Peter M\\xF8ller is converted to Peter Mller, because banks don't\\\n            \\ accept '\\xF8'.\\nAfter replacement, the ownerName must have at least\\\n            \\ three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them\\\n            \\ must be a valid Latin character (A-Z, a-z). For example:\\n* John17 -\\\n            \\ allowed.\\n* J17 - allowed.\\n* 171 - not allowed.\\n* John-7 - allowed.\\n\\\n            \u003e If provided details don't match the required format, the response returns\\\n            \\ the error message: 203 'Invalid bank account holder name'.\"\n          type: string\n        taxId:\n          x-addedInVersion: '18'\n          description: The bank account holder's tax ID.\n          type: string\n    Card:\n      properties:\n        cvc:\n          description: \"The [card verification code](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid)\\\n            \\ (1-20 characters). Depending on the card brand, it is known also as:\\n\\\n            * CVV2/CVC2 \\u2013 length: 3 digits\\n* CID \\u2013 length: 4 digits\\n\u003e\\\n            \\ If you are using [Client-Side Encryption](https://docs.adyen.com/classic-integration/cse-integration-ecommerce),\\\n            \\ the CVC code is present in the encrypted data. You must never post the\\\n            \\ card details to the server.\\n\u003e This field must be always present in\\\n            \\ a [one-click payment request](https://docs.adyen.com/classic-integration/recurring-payments).\\n\\\n            \u003e When this value is returned in a response, it is always empty because\\\n            \\ it is not stored.\"\n          maxLength: 20\n          minLength: 1\n          type: string\n        expiryMonth:\n          description: 'The card expiry month.\n\n            Format: 2 digits, zero-padded for single digits. For example:\n\n            * 03 = March\n\n            * 11 = November'\n          maxLength: 2\n          minLength: 1\n          type: string\n        expiryYear:\n          description: 'The card expiry year.\n\n            Format: 4 digits. For example: 2020'\n          maxLength: 4\n          minLength: 4\n          type: string\n        holderName:\n          description: The name of the cardholder, as printed on the card.\n          maxLength: 50\n          minLength: 1\n          type: string\n        issueNumber:\n          description: The issue number of the card (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        number:\n          description: 'The card number (4-19 characters). Do not use any separators.\n\n            When this value is returned in a response, only the last 4 digits of the\n            card number are returned.'\n          maxLength: 19\n          minLength: 4\n          type: string\n        startMonth:\n          description: The month component of the start date (for some UK debit cards\n            only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        startYear:\n          description: The year component of the start date (for some UK debit cards\n            only).\n          maxLength: 4\n          minLength: 4\n          type: string\n      required:\n      - number\n      - expiryMonth\n      - expiryYear\n      - holderName\n    DisableRequest:\n      properties:\n        contract:\n          x-addedInVersion: '3'\n          description: 'Specify the contract if you only want to disable a specific\n            use.\n\n\n            This field can be set to one of the following values, or to their combination\n            (comma-separated):\n\n            * ONECLICK\n\n            * RECURRING\n\n            * PAYOUT'\n          type: string\n        merchantAccount:\n          description: The merchant account identifier with which you want to process\n            the transaction.\n          type: string\n        recurringDetailReference:\n          description: 'The ID that uniquely identifies the recurring detail reference.\n\n\n            If it is not provided, the whole recurring contract of the `shopperReference`\n            will be disabled, which includes all recurring details.'\n          type: string\n        shopperReference:\n          description: 'The ID that uniquely identifies the shopper.\n\n\n            This `shopperReference` must be the same as the `shopperReference` used\n            in the initial payment.'\n          type: string\n      required:\n      - merchantAccount\n      - shopperReference\n    DisableResult:\n      properties:\n        response:\n          description: Depending on whether a specific recurring detail was in the\n            request, result is either [detail-successfully-disabled] or [all-details-successfully-disabled].\n          type: string\n    Name:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n      - firstName\n      - lastName\n    NotifyShopperRequest:\n      properties:\n        amount:\n          description: The amount of the upcoming payment.\n          $ref: '#/components/schemas/Amount'\n        billingDate:\n          description: Date on which the subscription amount will be debited from\n            the shopper. In YYYY-MM-DD format\n          type: string\n        billingSequenceNumber:\n          description: Sequence of the debit. Depends on Frequency and Billing Attempts\n            Rule.\n          type: string\n        displayedReference:\n          description: Reference of Pre-debit notification that is displayed to the\n            shopper. Optional field. Maps to reference if missing\n          type: string\n        merchantAccount:\n          description: The merchant account identifier with which you want to process\n            the transaction.\n          type: string\n        recurringDetailReference:\n          description: This is the `recurringDetailReference` returned in the response\n            when you created the token.\n          type: string\n        reference:\n          description: Pre-debit notification reference sent by the merchant. This\n            is a mandatory field\n          type: string\n        shopperReference:\n          description: 'The ID that uniquely identifies the shopper.\n\n\n            This `shopperReference` must be the same as the `shopperReference` used\n            in the initial payment.'\n          type: string\n        storedPaymentMethodId:\n          description: This is the `recurringDetailReference` returned in the response\n            when you created the token.\n          type: string\n      required:\n      - merchantAccount\n      - shopperReference\n      - amount\n      - reference\n    NotifyShopperResult:\n      properties:\n        displayedReference:\n          description: Reference of Pre-debit notification that is displayed to the\n            shopper\n          type: string\n        message:\n          description: A simple description of the `resultCode`.\n          type: string\n        pspReference:\n          description: The unique reference that is associated with the request.\n          type: string\n        reference:\n          description: Reference of Pre-debit notification sent in my the merchant\n          type: string\n        resultCode:\n          description: The code indicating the status of notification.\n          type: string\n        shopperNotificationReference:\n          description: The unique reference for the request sent downstream.\n          type: string\n        storedPaymentMethodId:\n          description: This is the recurringDetailReference returned in the response\n            when token was created\n          type: string\n    Recurring:\n      properties:\n        contract:\n          description: \"The type of recurring contract to be used.\\nPossible values:\\n\\\n            * `ONECLICK` \\u2013 Payment details can be used to initiate a one-click\\\n            \\ payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid).\\n\\\n            * `RECURRING` \\u2013 Payment details can be used without the card security\\\n            \\ code to initiate [card-not-present transactions](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-not-present-cnp).\\n\\\n            * `ONECLICK,RECURRING` \\u2013 Payment details can be used regardless of\\\n            \\ whether the shopper is on your site or not.\\n* `PAYOUT` \\u2013 Payment\\\n            \\ details can be used to [make a payout](https://docs.adyen.com/online-payments/online-payouts).\"\n          enum:\n          - ONECLICK\n          - RECURRING\n          - PAYOUT\n          type: string\n        recurringDetailName:\n          description: A descriptive name for this detail.\n          type: string\n        recurringExpiry:\n          x-addedInVersion: '40'\n          description: Date after which no further authorisations shall be performed.\n            Only for 3D Secure 2.\n          format: date-time\n          type: string\n        recurringFrequency:\n          x-addedInVersion: '40'\n          description: Minimum number of days between authorisations. Only for 3D\n            Secure 2.\n          type: string\n        tokenService:\n          x-addedInVersion: '25'\n          description: The name of the token service.\n          enum:\n          - VISATOKENSERVICE\n          - MCTOKENSERVICE\n          type: string\n    RecurringDetail:\n      properties:\n        additionalData:\n          x-addedInVersion: '5'\n          additionalProperties:\n            type: string\n          description: 'This field contains additional data, which may be returned\n            in a particular response.\n\n\n            The additionalData object consists of entries, each of which includes\n            the key and value.'\n          type: object\n        alias:\n          x-addedInVersion: '4'\n          description: 'The alias of the credit card number.\n\n\n            Applies only to recurring contracts storing credit card details'\n          type: string\n        aliasType:\n          x-addedInVersion: '4'\n          description: 'The alias type of the credit card number.\n\n\n            Applies only to recurring contracts storing credit card details.'\n          type: string\n        bank:\n          description: A container for bank account data.\n          $ref: '#/components/schemas/BankAccount'\n        billingAddress:\n          x-addedInVersion: '4'\n          description: The billing address.\n          $ref: '#/components/schemas/Address'\n        card:\n          description: A container for card data.\n          $ref: '#/components/schemas/Card'\n        contractTypes:\n          x-addedInVersion: '12'\n          description: Types of recurring contracts.\n          items:\n            type: string\n          type: array\n        creationDate:\n          description: The date when the recurring details were created.\n          format: date-time\n          type: string\n        firstPspReference:\n          x-addedInVersion: '4'\n          description: The `pspReference` of the first recurring payment that created\n            the recurring detail.\n          type: string\n        name:\n          description: An optional descriptive name for this recurring detail.\n          type: string\n        networkTxReference:\n          x-addedInVersion: '68'\n          description: 'Returned in the response if you are not tokenizing with Adyen\n            and are using the Merchant-initiated transactions (MIT) framework from\n            Mastercard or Visa.\n\n\n            This contains either the Mastercard Trace ID or the Visa Transaction ID.'\n          type: string\n        paymentMethodVariant:\n          x-addedInVersion: '2'\n          description: The  type or sub-brand of a payment method used, e.g. Visa\n            Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/development-resources/paymentmethodvariant).\n          type: string\n        recurringDetailReference:\n          description: The reference that uniquely identifies the recurring detail.\n          type: string\n        shopperName:\n          x-addedInVersion: '4'\n          description: The name of the shopper.\n          $ref: '#/components/schemas/Name'\n        socialSecurityNumber:\n          x-addedInVersion: '4'\n          description: A shopper's social security number (only in countries where\n            it is legal to collect).\n          type: string\n        tokenDetails:\n          x-addedInVersion: '2'\n          $ref: '#/components/schemas/TokenDetails'\n        variant:\n          description: \"The payment method, such as \\u201Cmc\\\", \\\"visa\\\", \\\"ideal\\\"\\\n            , \\\"paypal\\\".\"\n          type: string\n      required:\n      - recurringDetailReference\n      - variant\n    RecurringDetailsRequest:\n      properties:\n        merchantAccount:\n          description: The merchant account identifier you want to process the (transaction)\n            request with.\n          type: string\n        recurring:\n          description: 'A container for the type of a recurring contract to be retrieved.\n\n\n            The contract value needs to match the contract value submitted in the\n            payment transaction used to create a recurring contract.\n\n            However, if `ONECLICK,RECURRING` is the original contract definition in\n            the initial payment, then `contract` should take either `ONECLICK` or\n            `RECURRING`, depending on whether or not you want the shopper to enter\n            their card''s security code when they finalize their purchase.'\n          $ref: '#/components/schemas/Recurring'\n        shopperReference:\n          description: The reference you use to uniquely identify the shopper (e.g.\n            user ID or account ID).\n          type: string\n      required:\n      - merchantAccount\n      - shopperReference\n    RecurringDetailsResult:\n      properties:\n        creationDate:\n          description: The date when the recurring details were created.\n          format: date-time\n          type: string\n        details:\n          description: Payment details stored for recurring payments.\n          items:\n            $ref: '#/components/schemas/RecurringDetail'\n          type: array\n        lastKnownShopperEmail:\n          description: The most recent email for this shopper (if available).\n          type: string\n        shopperReference:\n          description: The reference you use to uniquely identify the shopper (e.g.\n            user ID or account ID).\n          type: string\n    ScheduleAccountUpdaterRequest:\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          description: This field contains additional data, which may be required\n            for a particular request.\n          type: object\n        card:\n          description: 'Credit card data.\n\n\n            Optional if `shopperReference` and `selectedRecurringDetailReference`\n            are provided.'\n          $ref: '#/components/schemas/Card'\n        merchantAccount:\n          description: Account of the merchant.\n          type: string\n        reference:\n          description: A reference that merchants can apply for the call.\n          type: string\n        selectedRecurringDetailReference:\n          description: 'The selected detail recurring reference.\n\n\n            Optional if `card` is provided.'\n          type: string\n        shopperReference:\n          description: 'The reference of the shopper that owns the recurring contract.\n\n\n            Optional if `card` is provided.'\n          type: string\n      required:\n      - merchantAccount\n      - reference\n    ScheduleAccountUpdaterResult:\n      properties:\n        pspReference:\n          description: Adyen's 16-character unique reference associated with the transaction.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        result:\n          description: The result of scheduling an Account Updater. If scheduling\n            was successful, this field returns **Success**; otherwise it contains\n            the error message.\n          type: string\n      required:\n      - pspReference\n      - result\n    ServiceError:\n      properties:\n        additionalData:\n          x-addedInVersion: '46'\n          additionalProperties:\n            type: string\n          description: 'Contains additional information about the payment. Some data\n            fields are included only if you select them first: Go to **Customer Area**\n            \u003e **Account** \u003e **API URLs**.'\n          type: object\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    TokenDetails:\n      properties:\n        tokenData:\n          additionalProperties:\n            type: string\n          type: object\n        tokenDataType:\n          type: string\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\n  examples:\n    post-disable-disableARecurringContract:\n      summary: Disable a recurring contract\n      value:\n        shopperReference: YOUR_UNIQUE_SHOPPER_ID\n        recurringDetailReference: '8314442372419167'\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n    post-listRecurringDetails-listAllRecurringDetails:\n      summary: List all recurring details\n      value:\n        recurring:\n          contract: RECURRING\n        shopperReference: YOUR_UNIQUE_SHOPPER_ID\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n    post-scheduleAccountUpdater-scheduleAccountUpdaterWithCardData:\n      summary: Schedule AccountUpdater with card data\n      value:\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n        reference: YOUR_REFERENCE\n        card:\n          expiryMonth: '03'\n          expiryYear: '2030'\n          holderName: Adyen Test\n          number: '4111111111111111'\n    post-scheduleAccountUpdater-scheduleAccountUpdaterWithTokenData:\n      summary: Schedule AccountUpdater with token data\n      value:\n        merchantAccount: YOUR_MERCHANT_ACCOUNT\n        reference: YOUR_REFERENCE\n        shopperReference: YOUR_UNIQUE_SHOPPER_ID\n        selectedRecurringDetailReference: '8814232895168272'\n",
			"canonicalURL": "/github.com/Adyen/adyen-openapi@1ce757e7aa9360d308ee46c57faf90dacc9aaf98/-/blob/yaml/RecurringService-v68.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-openapi/blob/1ce757e7aa9360d308ee46c57faf90dacc9aaf98/yaml/RecurringService-v68.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}