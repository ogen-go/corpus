{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TheDiveO/lxkns"
		},
		"file": {
			"name": "lxkns.yaml",
			"size": 0,
			"path": "api/openapi-spec/lxkns.yaml",
			"byteSize": 42459,
			"content": "openapi: 3.0.2\ninfo:\n    title: lxkns\n    version: 0.22.0\n    description: |-\n        Discover Linux-kernel namespaces, almost everywhere in a Linux host. Also look\n        for mount points and their hierarchy, as well as for containers.\n    contact:\n        url: 'https://github.com/thediveo/lxkns'\n    license:\n        name: Apache 2.0\n        url: 'https://www.apache.org/licenses/LICENSE-2.0'\nservers:\n    -\n        url: /api\n        description: lxkns as-a-service\npaths:\n    /processes:\n        summary: Process discovery\n        get:\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ProcessTable'\n                    description: |-\n                        Returns information about all processes and their position within the process\n                        tree.\n            summary: Linux processes\n            description: |-\n                Map of all processes in the process tree, with the keys being the PIDs in\n                decimal string format.\n    /pidmap:\n        summary: Discover the translation of PIDs between PID namespaces\n        get:\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/PIDMap'\n                    description: |-\n                        The namespaced PIDs of processes. For each process, the PIDs in their PID\n                        namespaces along the PID namespace hierarchy are returned.\n            summary: PID translation data\n            description: |\n                Discovers the PIDs that processes have in different PID namespaces,\n                according to the hierarchy of PID namespaces.\n\n                \u003e **IMPORTANT:** The order of processes is undefined. However, the order of\n                \u003e the namespaced PIDs of a particular process is well-defined.\n    /namespaces:\n        summary: Namespace discovery (includes process discovery for technical reasons)\n        get:\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DiscoveryResult'\n                    description: The discovered namespaces and processes.\n            summary: Linux kernel namespaces\n            description: |-\n                Information about the Linux-kernel namespaces and how they relate to processes\n                and vice versa.\ncomponents:\n    schemas:\n        PIDMap:\n            title: Root Type for PIDMap\n            description: |-\n                A \"map\" of the PIDs of processes in PID namespaces for translating a specific\n                PID from one PID namespace into another PID namespace.\n\n                \u003e **IMPORTANT:** The order of *processes* is undefined. However, the order of\n                \u003e the namespaced PIDs of a particular process is well-defined: from the PID in\n                \u003e the process' own PID namespace up the hierarchy to the PID in the initial\n                \u003e PID namespace.\n\n                The PID map is represented in a \"condensed\" format, which is designed to\n                minimize transfer volume. Consuming applications thus might want to transfer\n                this external representation into a performance-optimized internal\n                representation, optimized for translating PIDs.\n            type: array\n            items:\n                $ref: '#/components/schemas/NamespacedPIDs'\n            example:\n                -\n                    -\n                        pid: 12345\n                        nsid: 4026531905\n                    -\n                        pid: 1\n                        nsid: 4026538371\n                -\n                    -\n                        pid: 666\n                        nsid: 4026538371\n        NamespacedPID:\n            title: Root Type for NamespacedPID\n            description: |-\n                A process identifier (PID) valid only in the accompanying PID namespace,\n                referenced by the ID (inode number) of the PID namespace. Outside that PID\n                namespace the PID is invalid and might be confused with some other process that\n                happens to have the same PID in the other PID namespace. For instance, PID 1\n                can be found not only in the initial PID namespace, but usually also in all\n                other PID namespaces, but referencing completely different processes each time.\n            required:\n                - pid\n                - nsid\n            type: object\n            properties:\n                pid:\n                    description: a process identifier\n                    type: integer\n                nsid:\n                    format: int64\n                    description: |-\n                        a PID namespace identified and referenced by its inode number (without any\n                        device number).\n                    type: integer\n            example:\n                pid: 1\n                nsid: 4026531905\n        NamespacedPIDs:\n            description: |-\n                The list of namespaced PIDs of a process, ordered according to the PID\n                namespace hierarchy the process is in. The order is from the \"bottom-most\" PID\n                namespace a particular process is joined to up to the initial PID namespace.\n                Thus, the PID in the initial PID namespace always comes last.\n            type: array\n            items:\n                $ref: '#/components/schemas/NamespacedPID'\n            example:\n                -\n                    pid: 12345\n                    nsid: 4026531905\n                -\n                    pid: 1\n                    nsid: 4026532382\n        Process:\n            description: |-\n                Information about a specific process, such as its PID, name, and command line\n                arguments, the references (IDs) of the namespaces the process is joined to.\n            required:\n                - pid\n                - ppid\n                - name\n                - cmdline\n                - starttime\n                - namespaces\n                - cpucgroup\n                - fridgecgroup\n                - fridgefrozen\n            type: object\n            properties:\n                pid:\n                    format: int32\n                    description: The process identifier (PID) of this process.\n                    type: integer\n                ppid:\n                    format: int32\n                    description: |-\n                        The PID of the parent process, or 0 if there is no parent process. On Linux, the\n                        only processes without a parent are the initial process PID 1 and the PID 2\n                        kthreadd kernel threads \"process\".\n                    type: integer\n                name:\n                    description: |-\n                        A synthesized name of the process:\n                        - a name set by the process itself,\n                        - a name derived from the command line of the process.\n                    type: string\n                cmdline:\n                    description: |-\n                        The command line arguments of the process, including the process binary file\n                        name. Taken from /proc/$PID/cmdline, see also\n                        [https://man7.org/linux/man-pages/man5/proc.5.html](proc(5)).\n                    type: array\n                    items:\n                        type: string\n                starttime:\n                    format: int64\n                    description: |-\n                        The time this process started after system boot and expressed in clock ticks.\n                        It is taken from /proc/$PID/stat, see also\n                        [https://man7.org/linux/man-pages/man5/proc.5.html](proc(5)).\n                    type: integer\n                cpucgroup:\n                    description: |-\n                        The (CPU) cgroup (control group) path name in the hierarchy this process is in. The\n                        path name does not specify the root mount path of the complete hierarchy, but\n                        only the (pseudo) absolute path starting from the root of the particular (v1) or\n                        unified (v2) cgroup hierarchy.\n                    type: string\n                namespaces:\n                    $ref: '#/components/schemas/NamespacesSet'\n                    description: |-\n                        References the namespaces this process is joined to, in form of the namespace\n                        IDs (inode numbers).\n                fridgecgroup:\n                    description: The freezer cgroup path name in the hierarchy this process is in.\n                    type: string\n                fridgefrozen:\n                    description: The effective freezer state of this process.\n                    type: boolean\n            example:\n                namespaces:\n                    mnt: 4026531840\n                    cgroup: 4026531835\n                    uts: 4026531838\n                    ipc: 4026531839\n                    user: 4026531837\n                    pid: 4026531836\n                    net: 4026531905\n                pid: 1\n                ppid: 0\n                name: systemd\n                cmdline:\n                    - /sbin/init\n                    - fixrtc\n                    - splash\n                starttime: 0\n                cpucgroup: /init.scope\n        ProcessTable:\n            description: |-\n                Information about all processes in the process tree, with each process item\n                being keyed by its PID in string form. Besides information about the process\n                itself and its position in the process tree, the processes also reference the\n                namespaces they are currently joined to.\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/Process'\n            example:\n                '1':\n                    namespaces:\n                        mnt: 4026531840\n                        cgroup: 4026531835\n                        uts: 4026531838\n                        ipc: 4026531839\n                        user: 4026531837\n                        pid: 4026531836\n                        net: 4026531905\n                    pid: 1\n                    ppid: 0\n                    name: systemd\n                    cmdline:\n                        - /sbin/init\n                        - fixrtc\n                        - splash\n                    starttime: 0\n                    cpucgroup: /init.scope\n                '137024':\n                    namespaces:\n                        mnt: 4026532517\n                        cgroup: 4026531835\n                        uts: 4026531838\n                        ipc: 4026531839\n                        user: 4026532518\n                        pid: 4026531836\n                        net: 4026531905\n                    pid: 137024\n                    ppid: 1\n                    name: upowerd\n                    cmdline:\n                        - /usr/lib/upower/upowerd\n                    starttime: 3132568\n                    cpucgroup: /system.slice/upower.service\n        DiscoveryResult:\n            description: |-\n                The discovered namespaces and processes with their mutual relationships, and\n                optionally PID translation data.\n            required:\n                - namespaces\n                - processes\n                - containers\n                - container-engines\n                - container-groups\n            type: object\n            properties:\n                processes:\n                    $ref: '#/components/schemas/ProcessTable'\n                    description: 'Information about all processes, including the process hierarchy.'\n                namespaces:\n                    $ref: '#/components/schemas/NamespacesDict'\n                    description: Map of namespaces.\n                pidmap:\n                    $ref: '#/components/schemas/PIDMap'\n                    description: Data for translating PIDs between different PID namespaces.\n                options:\n                    $ref: '#/components/schemas/DiscoveryOptions'\n                    description: The options specified for discovery.\n                mounts:\n                    $ref: '#/components/schemas/NamespacedMountPaths'\n                    description: Map of mount namespace'd mount paths with mount points.\n                containers:\n                    $ref: '#/components/schemas/ContainerMap'\n                    description: Discovered containers.\n                container-engines:\n                    $ref: '#/components/schemas/ContainerEngineMap'\n                    description: Container engines managing the discovered containers.\n                container-groups:\n                    $ref: '#/components/schemas/ContainerGroupMap'\n                    description: Groups of containers.\n            example:\n                discovery-options:\n                    skipped-procs: false\n                    skipped-tasks: false\n                    skipped-fds: false\n                    skipped-bindmounts: false\n                    skipped-hierarchy: false\n                    skipped-ownership: false\n                    skipped-freezer: false\n                    scanned-namespace-types:\n                        - time\n                        - mnt\n                        - cgroup\n                        - uts\n                        - ipc\n                        - user\n                        - pid\n                        - net\n                namespaces:\n                    '4026531835':\n                        nsid: 4026531835\n                        type: cgroup\n                        owner: 4026531837\n                        reference: /proc/2/ns/cgroup\n                        leaders:\n                            - 2\n                            - 1\n                    '4026531836':\n                        nsid: 4026531836\n                        type: pid\n                        owner: 4026531837\n                        reference: /proc/2/ns/pid\n                        leaders:\n                            - 2\n                            - 1\n                        children:\n                            - 4026532338\n                    '4026531837':\n                        nsid: 4026531837\n                        type: user\n                        reference: /proc/1/ns/user\n                        leaders:\n                            - 1\n                            - 2\n                        children:\n                            - 4026532518\n                        user-id: 0\n                    '4026531838':\n                        nsid: 4026531838\n                        type: uts\n                        owner: 4026531837\n                        reference: /proc/2/ns/uts\n                        leaders:\n                            - 2\n                            - 1\n                    '4026531839':\n                        nsid: 4026531839\n                        type: ipc\n                        owner: 4026531837\n                        reference: /proc/2/ns/ipc\n                        leaders:\n                            - 2\n                            - 1\n                    '4026532268':\n                        nsid: 4026532268\n                        type: mnt\n                        owner: 4026531837\n                        reference: /proc/1761/ns/mnt\n                        leaders:\n                            - 1761\n                    '4026532324':\n                        nsid: 4026532324\n                        type: uts\n                        owner: 4026531837\n                        reference: /proc/1781/ns/uts\n                        leaders:\n                            - 1781\n                    '4026532337':\n                        nsid: 4026532337\n                        type: ipc\n                        owner: 4026531837\n                        reference: /proc/33536/ns/ipc\n                        leaders:\n                            - 33536\n                    '4026532340':\n                        nsid: 4026532340\n                        type: net\n                        owner: 4026531837\n                        reference: /proc/33536/ns/net\n                        leaders:\n                            - 33536\n                    '4026532398':\n                        nsid: 4026532398\n                        type: pid\n                        owner: 4026531837\n                        reference: /proc/34110/ns/pid\n                        leaders:\n                            - 34110\n                        parent: 4026532338\n                    '4026532400':\n                        nsid: 4026532400\n                        type: net\n                        owner: 4026531837\n                        reference: /proc/34110/ns/net\n                        leaders:\n                            - 34110\n                    '4026532517':\n                        nsid: 4026532517\n                        type: mnt\n                        owner: 4026531837\n                        reference: /proc/137024/ns/mnt\n                        leaders:\n                            - 137024\n                    '4026532518':\n                        nsid: 4026532518\n                        type: user\n                        reference: /proc/137024/ns/user\n                        leaders:\n                            - 137024\n                        parent: 4026531837\n                        user-id: 0\n                processes:\n                    '1':\n                        namespaces:\n                            mnt: 4026531840\n                            cgroup: 4026531835\n                            uts: 4026531838\n                            ipc: 4026531839\n                            user: 4026531837\n                            pid: 4026531836\n                            net: 4026531905\n                        pid: 1\n                        ppid: 0\n                        name: systemd\n                        cmdline:\n                            - /sbin/init\n                            - fixrtc\n                            - splash\n                        starttime: 0\n                        cpucgroup: /init.scope\n                    '17':\n                        namespaces:\n                            mnt: 4026531840\n                            cgroup: 4026531835\n                            uts: 4026531838\n                            ipc: 4026531839\n                            user: 4026531837\n                            pid: 4026531836\n                            net: 4026531905\n                        pid: 17\n                        ppid: 2\n                        name: migration/1\n                        cmdline:\n                            - ''\n                        starttime: 0\n                        cpucgroup: ''\n                    '1692':\n                        namespaces:\n                            mnt: 4026532246\n                            cgroup: 4026531835\n                            uts: 4026532247\n                            ipc: 4026531839\n                            user: 4026531837\n                            pid: 4026531836\n                            net: 4026531905\n                        pid: 1692\n                        ppid: 1\n                        name: systemd-timesyn\n                        cmdline:\n                            - /lib/systemd/systemd-timesyncd\n                        starttime: 2032\n                        cpucgroup: /system.slice/systemd-timesyncd.service\n        Namespace:\n            description: |-\n                Information about a single Linux-kernel namespace. Depending on the extent of\n                the discovery, not all namespace types might have been discovered, or data might\n                be missing about the PID and user namespace hierarchies as well as which user\n                namespace owns other namespaces.\n\n                For more details, please see also:\n                https://man7.org/linux/man-pages/man7/namespaces.7.html.\n            required:\n                - type\n                - nsid\n            type: object\n            properties:\n                nsid:\n                    format: int64\n                    description: |-\n                        Identifier of this namespace: an inode number.\n\n                        - lxkns only uses the inode number in the API, following current Linux kernel\n                          and CLI tool practise, which generally identify individual namespaces only by\n                          inode numbers (and leaving out the device number).\n                        - Namespace identifiers are not UUIDs, but instead reused by the kernel after a\n                          namespace has been destroyed.\n                    type: integer\n                type:\n                    $ref: '#/components/schemas/NamespaceType'\n                    description: Type of this namespace.\n                owner:\n                    format: int64\n                    description: The ID of the owning user namespace.\n                    type: integer\n                reference:\n                    description: |-\n                        File system reference to the namespace, if available. The hierarchical PID and\n                        user namespaces can also exist without any file system references, as long as\n                        there are still child namespaces present for such a PID or user namespace.\n                    type: array\n                    items:\n                        type: string\n                leaders:\n                    description: |-\n                        List of PIDs of \"leader\" processes joined to this namespace.\n\n                        Instead of listing all processes joined to this namespace, lxkns only lists the\n                        \"most senior\" processes: these processes are the highest processes in the\n                        process tree still joined to a namespace. Child processes also joined to this\n                        namespace can then be found using the child process relations from the process\n                        table information.\n                    type: array\n                    items:\n                        format: int32\n                        type: integer\n                ealdorman:\n                    format: int32\n                    description: PID of the most senior leader process joined to this namespace.\n                    type: integer\n                parent:\n                    format: int64\n                    description: 'Only for PID and user namespaces: the ID of the parent namespace.'\n                    type: integer\n                user-id:\n                    description: |-\n                        Only for user namespaces: the UID of the Linux user who created this user\n                        namespace.\n                    type: integer\n                user-name:\n                    description: |-\n                        Only for user namespaces: the name of the Linux user who created this user\n                        namespace.\n                    type: string\n                children:\n                    description: 'For user and PID namespaces: the list of child namespace IDs.'\n                    type: array\n                    items:\n                        format: int64\n                        type: integer\n                possessions:\n                    description: 'Only user namespaces: list of namespace IDs of owned (non-user) namespaces.'\n                    type: array\n                    items:\n                        format: int64\n                        type: integer\n            example:\n                '4026532338':\n                    nsid: 4026532338\n                    type: pid\n                    owner: 4026531837\n                    reference: /proc/33536/ns/pid\n                    leaders:\n                        - 33536\n                    parent: 4026531836\n                    children:\n                        - 4026532398\n        NamespaceType:\n            description: |-\n                Type of Linux-kernel namespace. For more information about namespaces, please\n                see also: https://man7.org/linux/man-pages/man7/namespaces.7.html.\n            enum:\n                - cgroup\n                - ipc\n                - net\n                - mnt\n                - pid\n                - user\n                - uts\n                - time\n            type: string\n            example: '\"net\"'\n        NamespacesDict:\n            description: |\n                \"Dictionary\" or \"map\" of Linux-kernel namespaces, keyed by their namespace IDs in stringified\n                form. Contrary to what the term \"namespace\" might suggest, namespaces do not\n                have names but are identified by their (transient) inode numbers.\n\n                \u003e **Note:** following current best practice of the Linux kernel and CLI tools,\n                \u003e namespace references are only in the form of the inode number, without the\n                \u003e device number.\n\n                For further details, please see also:\n                https://man7.org/linux/man-pages/man7/namespaces.7.html.\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/Namespace'\n            example:\n                '4026532267':\n                    nsid: 4026532267\n                    type: mnt\n                    owner: 4026531837\n                    reference: /proc/1714/ns/mnt\n                    leaders:\n                        - 1714\n                '4026532268':\n                    nsid: 4026532268\n                    type: mnt\n                    owner: 4026531837\n                    reference: /proc/1761/ns/mnt\n                    leaders:\n                        - 1761\n        DiscoveryOptions:\n            title: Root Type for DiscoveryOptions\n            description: ''\n            required:\n                - scanned-namespace-types\n            type: object\n            properties:\n                from-procs:\n                    type: boolean\n                from-tasks:\n                    type: boolean\n                from-fds:\n                    type: boolean\n                from-bindmounts:\n                    type: boolean\n                with-hierarchy:\n                    type: boolean\n                with-ownership:\n                    type: boolean\n                with-freezer:\n                    description: |-\n                        true if the discovery of the (effective) freezer states of processes has been\n                        skipped, so that all processes always appear to be \"thawed\" (running).\n                    type: boolean\n                scanned-namespace-types:\n                    description: |-\n                        List of namespace types included in the discovery. This information might help\n                        consuming tools to understand which types of namespaces were scanned and which\n                        were not scanned for at all.\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/NamespaceType'\n                with-mounts:\n                    description: true if mount namespace'd mount paths with mount points were discovered.\n                    type: boolean\n                labels:\n                    description: |-\n                        Dictionary of key=value pairs passed to decorators to optionally control the\n                        decoration of discovered containers.\n            example:\n                skipped-procs: false\n                skipped-tasks: false\n                skipped-fds: false\n                skipped-bindmounts: false\n                skipped-hierarchy: false\n                skipped-ownership: false\n                skipped-freezer: false\n                scanned-namespace-types:\n                    - time\n                    - mnt\n                    - cgroup\n                    - uts\n                    - ipc\n                    - user\n                    - pid\n                    - net\n        NamespacesSet:\n            description: |-\n                The set of 7 namespaces (8 namespaces since Linux 5.6+) every process is always\n                joined to. The namespaces are referenced by their IDs (inode numbers):\n                - cgroup namespace\n                - IPC namespace\n                - network namespace\n                - mount namespace\n                - PID namespace\n                - user namespace\n                - UTS namespace\n                - time namespace (Linux kernel 5.6+)\n\n                \u003e **Note:** Since lxkns doesn't officially support Linux kernels before 4.9\n                \u003e all namespaces except the \"time\" namespace can safely be assumed to be\n                \u003e always present.\n\n                For more details about namespaces, please see also:\n                https://man7.org/linux/man-pages/man7/namespaces.7.html.\n            type: object\n            properties:\n                cgroup:\n                    format: int64\n                    description: |-\n                        References a cgroup namespace by ID (inode number). Please see also:\n                        https://www.man7.org/linux/man-pages/man7/cgroup_namespaces.7.html.\n                    type: integer\n                ipc:\n                    format: int64\n                    description: |-\n                        References an IPC namespace by ID (inode number). Please see also:\n                        https://www.man7.org/linux/man-pages/man7/ipc_namespaces.7.html.\n                    type: integer\n                net:\n                    format: int64\n                    description: |-\n                        References a network namespace by ID (inode number). Please see also:\n                        https://www.man7.org/linux/man-pages/man7/network_namespaces.7.html.\n                    type: integer\n                mnt:\n                    format: int64\n                    description: |-\n                        References a mount namespace by ID (inode number). Please see also:\n                        https://www.man7.org/linux/man-pages/man7/mount_namespaces.7.html.\n                    type: integer\n                pid:\n                    format: int64\n                    description: |-\n                        References a PID namespace by ID (inode number). Please see also:\n                        https://www.man7.org/linux/man-pages/man7/pid_namespaces.7.html.\n                    type: integer\n                user:\n                    format: int64\n                    description: |-\n                        References a user namespace by ID (inode number). Please see also:\n                        https://www.man7.org/linux/man-pages/man7/user_namespaces.7.html.\n                    type: integer\n                uts:\n                    format: int64\n                    description: |-\n                        References a UTS (*nix timesharing system) namespace by ID (inode number).\n                        Please see also: https://www.man7.org/linux/man-pages/man7/uts_namespaces.7.html.\n                    type: integer\n                time:\n                    format: int64\n                    description: |-\n                        References a (monotonous) time namespace by ID (inode number). Time namespaces\n                        are only supported on Linux kernels 5.6 or later. Please see also:\n                        https://www.man7.org/linux/man-pages/man7/time_namespaces.7.html.\n                    type: integer\n            example:\n                mnt: 4026531840\n                cgroup: 4026531835\n                uts: 4026531838\n                ipc: 4026531839\n                user: 4026531837\n                pid: 4026531836\n                net: 4026531905\n        MountPoint:\n            description: |-\n                Information about a mount point as discovered from the proc filesystem. See also\n                [proc(5)](https://man7.org/linux/man-pages/man5/procfs.5.html), and details about\n                `/proc/[PID]/mountinfo` in particular.\n            required:\n                - mountid\n                - parentid\n                - major\n                - minor\n                - root\n                - mountpoint\n                - mountoptions\n                - tags\n                - source\n                - fstype\n                - superoptions\n                - hidden\n            type: object\n            properties:\n                parentid:\n                    description: |-\n                        ID of the parent mount. Please note that the parent mount might be outside a\n                        mount namespace.\n                    type: integer\n                mountid:\n                    description: 'unique ID for the mount, might be reused after umount(2).'\n                    type: integer\n                major:\n                    description: major ID for the st_dev for files on this filesystem.\n                    type: integer\n                minor:\n                    description: minor ID for the st_dev for filed on this filesystem.\n                    type: integer\n                root:\n                    description: pathname of the directory in the filesystem which forms the root of this mount.\n                    type: string\n                mountpoint:\n                    description: pathname of the mount point relative to root directory of the process.\n                    type: string\n                mountoptions:\n                    description: mount options specific to this mount.\n                    type: array\n                    items:\n                        type: string\n                tags:\n                    $ref: '#/components/schemas/MountTags'\n                    description: |-\n                        optional tags with even more optional values. Tags cannot be a single hyphen\n                        \"-\".\n                fstype:\n                    description: 'filesystem type in the form \"type[.subtype]\".'\n                    type: string\n                source:\n                    description: filesystem-specific information or \"none\".\n                    type: string\n                superoptions:\n                    description: per-superblock options.\n                    type: string\n                hidden:\n                    description: |-\n                        true if this mount point is hidden by an \"overmount\" either at the same mount\n                        path or higher up the path hierarchy.\n                    type: boolean\n        MountTags:\n            description: |-\n                dictionary of mount point tags with optional values. Tag names cannot be a single\n                hyphen \"-\".\n            type: object\n            additionalProperties:\n                type: string\n        MountPath:\n            description: |-\n                path of one or more mount points in the Virtual File System (VFS). In case of\n                multiple mount points at the same path, only at most one of them can be visible\n                and all others (or all in case of an overmount higher up the path) will be hidden.\n            required:\n                - mounts\n                - pathid\n                - parentid\n            type: object\n            properties:\n                mounts:\n                    description: one or more mount points at this path in the Virtual File System (VFS).\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/MountPoint'\n                pathid:\n                    description: 'unique mount path identifier, per mount namespace.'\n                    type: integer\n                parentid:\n                    description: 'identifier of parent mount path, if any, otherwise 0.'\n                    type: integer\n        MountPathsDict:\n            description: |-\n                \"Dictionary\" or \"map\" of mount paths with their corresponding mount points, keyed\n                by the mount paths.\n\n                Please note that additionally the mount path entries are organized in a \"sparse\"\n                hierarchy with the help of mount path identifiers (these are user-space generated\n                by lxkns).\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/MountPath'\n        NamespacedMountPaths:\n            description: 'the mount paths of each discovered mount namespace, separated by mount namespace.'\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/MountPathsDict'\n        Container:\n            description: 'Alive container with process(es), either running or paused.'\n            required:\n                - id\n                - name\n                - type\n                - flavor\n                - pid\n                - paused\n                - labels\n                - groups\n                - engine\n            type: object\n            properties:\n                id:\n                    description: Container identifier\n                    type: string\n                name:\n                    description: 'Container name as opposed to its id, might be the same for some container engines.'\n                    type: string\n                type:\n                    description: 'Type of container identifier, such as \"docker.com\", et cetera.'\n                    type: string\n                flavor:\n                    description: 'Flavor of container, might be the same as the type or different.'\n                    type: string\n                pid:\n                    description: Process ID of initial container process.\n                    type: integer\n                paused:\n                    description: Indicates whether the container is running or paused.\n                    type: boolean\n                labels:\n                    $ref: '#/components/schemas/Labels'\n                    description: Label name=value pairs attached to this container.\n                groups:\n                    description: |-\n                        List of group reference identifiers this container is a member of. For instance,\n                        (Docker) composer projects, Kubernetes pods, ...\n                    type: array\n                    items:\n                        type: integer\n                engine:\n                    description: Reference identifier of the container engine managing this container.\n                    type: integer\n        Labels:\n            description: 'Dictionary (map) of KEY=VALUE pairs, with KEY and VALUE both strings.'\n            type: object\n            additionalProperties:\n                type: string\n        ContainerEngine:\n            description: Information about a container engine managing a set of discovered containers.\n            required:\n                - id\n                - type\n                - version\n                - api\n                - pid\n                - containers\n            type: object\n            properties:\n                id:\n                    description: 'Container engine instance identifier, such as UUID, unique string, et cetera.'\n                    type: string\n                type:\n                    description: 'Engine type identifier, such as \"containerd.io\", et cetera.'\n                    type: string\n                version:\n                    description: 'Engine version information.'\n                    type: string\n                api:\n                    description: Engine API path.\n                    type: string\n                pid:\n                    description: 'Engine''s PID (in initial PID namespace) when known, otherwise zero.'\n                    type: integer\n                containers:\n                    description: List of reference IDs (=PIDs) of containers managed by this engine.\n                    type: array\n                    items:\n                        type: integer\n        ContainerGroup:\n            description: A group of containers somehow related.\n            required:\n                - name\n                - type\n                - flavor\n                - containers\n                - labels\n            type: object\n            properties:\n                name:\n                    description: |-\n                        Name of group, such as a (Docker) composer project name, Kubernetes pod\n                        namespace/name, et cetera.\n                    type: string\n                type:\n                    description: Group type identifier.\n                    type: string\n                flavor:\n                    description: 'Group flavor identifier, might be identical with group type identifier.'\n                    type: string\n                containers:\n                    description: List of reference IDs (=PIDs) of containers belonging to this group.\n                    type: array\n                    items:\n                        type: integer\n                labels:\n                    $ref: '#/components/schemas/Labels'\n                    description: Additional KEY=VALUE information.\n        ContainerMap:\n            description: |-\n                Maps container PIDs to containers. Container PIDs are the PIDs of initial\n                container processes only, but not any child processes.\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/Container'\n        ContainerEngineMap:\n            description: Maps reference IDs to container engines.\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/ContainerEngine'\n        ContainerGroupMap:\n            description: Maps reference IDs to container groups.\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/ContainerGroup'\n",
			"canonicalURL": "/github.com/TheDiveO/lxkns@409ef02c3c1282396fade36b4ed61f28256bf564/-/blob/api/openapi-spec/lxkns.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/thediveo/lxkns/blob/409ef02c3c1282396fade36b4ed61f28256bf564/api/openapi-spec/lxkns.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}