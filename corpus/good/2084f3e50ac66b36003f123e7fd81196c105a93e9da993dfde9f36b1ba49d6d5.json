{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/notion/openapi.yml",
			"byteSize": 170092,
			"content": "openapi: 3.0.3\nservers:\n  - url: https://api.notion.com\ninfo:\n  x-ballerina-display:\n    label: Notion\n    iconPath: \"icon.png\"\n  contact: {}\n  description: \u003e-\n    This is a generated connector for [Notion API v1](https://developers.notion.com/reference/intro) OpenAPI Specification. \n\n    Notion API provides capability to access all-in-one workspace where you can write, plan, collaborate and get organized.\n    it has components such as notes, databases, kanban boards, wikis, calendars, and reminders. You can connect these \n    components to take notes, add tasks, manage projects \u0026 more. Notion provides the building blocks and you can \n    create your own layouts and toolkit to get work done. This ballerina connector allows you to connect Notion through its\n    [REST API](https://developers.notion.com/docs).\n  title: Notion API - Public Beta\n  version: 1.0.0\n  x-apisguru-categories:\n    - collaboration\n  x-logo:\n    url: https://notion.com/front-static/logo-ios.png\n  x-origin:\n    - format: postman\n      url: https://www.postman.com/collections/15568543-d990f9b7-98d3-47d3-9131-4866ab9c6df2\n      version: 2.x\n  x-providerName: notion.com\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials. \n    \n    Create a [Notion account](https://www.notion.so/) \n    and obtain tokens following [this guide](https://developers.notion.com/docs/authorization).\ntags:\n  - name: Users\n  - name: Databases\n  - name: Pages\n  - name: Blocks\n  - name: Search\npaths:\n  \"/v1/blocks/{id}/children\":\n    get:\n      description: Retrieve block children\n      operationId: retrieveBlockChildren\n      parameters:\n        - in: query\n          name: page_size\n          description: Page size\n          schema:\n            example: \"100\"\n            type: string\n        - in: header\n          name: Notion-Version\n          description: API Version\n          schema:\n            example: \"\"\n            type: string\n            default: \"2021-05-13\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                200 Success - Retrieve block children:\n                  value:\n                    has_more: false\n                    next_cursor: null\n                    object: list\n                    results:\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 48c1ffb5-2789-4025-937b-2c35eaaaab3f\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        type: unsupported\n                        unsupported: {}\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: e381a0a3-4efb-4ba9-aa93-45b70fa9ce7f\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: I think we can all agree that Silicon Valley needs more adult supervision right about now.\n                              text:\n                                content: I think we can all agree that Silicon Valley needs more adult supervision right about now.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: ce5f79ac-8145-44ab-be3b-8ad143d6f8a7\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: Is the solution for its companies to hire a chief ethics officer?\n                              text:\n                                content: Is the solution for its companies to hire a chief ethics officer?\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 0387b374-7847-4ddc-bc53-6b0813ce4ed4\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: While some tech companies like Google have top compliance officers and others turn to legal teams to police themselves, no big tech companies that I know of have yet taken this step. But a lot of them seem to be talking about it, and I’ve discussed the idea with several chief executives recently. Why? Because slowly, then all at once, it feels like too many digital leaders have lost their minds.\n                              text:\n                                content: While some tech companies like Google have top compliance officers and others turn to legal teams to police themselves, no big tech companies that I know of have yet taken this step. But a lot of them seem to be talking about it, and I’ve discussed the idea with several chief executives recently. Why? Because slowly, then all at once, it feels like too many digital leaders have lost their minds.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: da035311-5af3-48bc-8279-d28d9f4ef2e2\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"It’s probably no surprise, considering the complex problems the tech industry faces. As one ethical quandary after another has hit its profoundly ill-prepared executives, their once-pristine reputations have fallen like palm trees in a hurricane. These last two weeks alone show how tech is stumbling to react to big world issues armed with only bubble world skills:\"\n                              text:\n                                content: \"It’s probably no surprise, considering the complex problems the tech industry faces. As one ethical quandary after another has hit its profoundly ill-prepared executives, their once-pristine reputations have fallen like palm trees in a hurricane. These last two weeks alone show how tech is stumbling to react to big world issues armed with only bubble world skills:\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 63a60fca-4a11-43eb-8773-c5f0164a3117\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"As a journalist is beheaded and dismembered at the direction of Saudi Arabian leaders (allegedly, but the killers did bring a bone saw), Silicon Valley is swimming in oceans of money from the kingdom’s Public Investment Fund. Saudi funding includes hundreds of millions for Magic Leap, and huge investments in hot public companies like Tesla. Most significantly: Saudis have invested about $45 billion in SoftBank’s giant Vision Fund, which has in turn doused the tech landscape — $4.4 billion to WeWork, $250 million to Slack, and $300 million to the dog-walking app Wag. In total Uber has gotten almost $14 billion, either through direct investments from the Public Investment Fund or through the Saudis’ funding of the Vision Fund. A billion here, a billion there and it all adds up.\"\n                              text:\n                                content: \"As a journalist is beheaded and dismembered at the direction of Saudi Arabian leaders (allegedly, but the killers did bring a bone saw), Silicon Valley is swimming in oceans of money from the kingdom’s Public Investment Fund. Saudi funding includes hundreds of millions for Magic Leap, and huge investments in hot public companies like Tesla. Most significantly: Saudis have invested about $45 billion in SoftBank’s giant Vision Fund, which has in turn doused the tech landscape — $4.4 billion to WeWork, $250 million to Slack, and $300 million to the dog-walking app Wag. In total Uber has gotten almost $14 billion, either through direct investments from the Public Investment Fund or through the Saudis’ funding of the Vision Fund. A billion here, a billion there and it all adds up.\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 8c58c8f1-86ae-4a14-b6b9-74f5fa579620\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"[\"\n                              text:\n                                content: \"[\"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"Kara Swisher answered your questions about her column \"\n                              text:\n                                content: \"Kara Swisher answered your questions about her column \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: https://twitter.com/karaswisher/status/1054842303922298880\n                              plain_text: on Twitter\n                              text:\n                                content: on Twitter\n                                link:\n                                  url: https://twitter.com/karaswisher/status/1054842303922298880\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: .\n                              text:\n                                content: .\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"]\"\n                              text:\n                                content: \"]\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 875d3aff-086b-45da-9ed1-bc3ddb185229\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"Facebook introduced a new home video device called Portal, and promised that what could be seen as a surveillance tool would not share data for the sake of ad targeting. Soon after, as \"\n                              text:\n                                content: \"Facebook introduced a new home video device called Portal, and promised that what could be seen as a surveillance tool would not share data for the sake of ad targeting. Soon after, as \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: https://www.recode.net/2018/10/16/17966102/facebook-portal-ad-targeting-data-collection\n                              plain_text: reported by Recode\n                              text:\n                                content: reported by Recode\n                                link:\n                                  url: https://www.recode.net/2018/10/16/17966102/facebook-portal-ad-targeting-data-collection\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \", Facebook admitted that “data about who you call and data about which apps you use on Portal \"\n                              text:\n                                content: \", Facebook admitted that “data about who you call and data about which apps you use on Portal \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: can\n                              text:\n                                content: can\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \" be used to target you with ads on other Facebook-owned properties.” Oh. Um. That’s awkward.\"\n                              text:\n                                content: \" be used to target you with ads on other Facebook-owned properties.” Oh. Um. That’s awkward.\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 306ab0fb-6daa-4c5b-b1f7-f51a5f92b6ff\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"After agreeing to pay $20 million to the Securities and Exchange Commission for an ill-advised tweet about possible funding (from the Saudis, by the way), the Tesla co-founder Elon Musk proceeded to troll the regulatory agency on, you got it, Twitter. And even though the \"\n                              text:\n                                content: \"After agreeing to pay $20 million to the Securities and Exchange Commission for an ill-advised tweet about possible funding (from the Saudis, by the way), the Tesla co-founder Elon Musk proceeded to troll the regulatory agency on, you got it, Twitter. And even though the \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: https://www.sec.gov/news/press-release/2018-226\n                              plain_text: settlement called for some kind of control of his communications\n                              text:\n                                content: settlement called for some kind of control of his communications\n                                link:\n                                  url: https://www.sec.gov/news/press-release/2018-226\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \", it appears that Mr. Musk will continue tweeting until someone steals his phone.\"\n                              text:\n                                content: \", it appears that Mr. Musk will continue tweeting until someone steals his phone.\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 122b1457-4129-4513-abaa-7cce7d66e4a1\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"Finally, Google took six months to make public that user data on its social network, Google Plus, \"\n                              text:\n                                content: \"Finally, Google took six months to make public that user data on its social network, Google Plus, \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: https://www.nytimes.com/2018/10/08/technology/google-plus-security-disclosure.html?module=inline\n                              plain_text: had been exposed\n                              text:\n                                content: had been exposed\n                                link:\n                                  url: https://www.nytimes.com/2018/10/08/technology/google-plus-security-disclosure.html?module=inline\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \" and that profiles of up to 500,000 users may have been compromised. While the service failed long ago, because it was pretty much designed by antisocial people, this lack of concern for privacy was profound.\"\n                              text:\n                                content: \" and that profiles of up to 500,000 users may have been compromised. While the service failed long ago, because it was pretty much designed by antisocial people, this lack of concern for privacy was profound.\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 4d4af599-556f-4d8b-af8e-4d01ebe2aa27\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"Grappling with what to say and do about the disasters they themselves create is only the beginning. Then there are the broader issues that the denizens of Silicon Valley expect their employers to have a stance on: immigration, income inequality, artificial intelligence, automation, transgender rights, climate change, privacy, data rights and whether tech companies should be helping the government do controversial things. It’s an ethical swamp out there.\"\n                              text:\n                                content: \"Grappling with what to say and do about the disasters they themselves create is only the beginning. Then there are the broader issues that the denizens of Silicon Valley expect their employers to have a stance on: immigration, income inequality, artificial intelligence, automation, transgender rights, climate change, privacy, data rights and whether tech companies should be helping the government do controversial things. It’s an ethical swamp out there.\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: f5775df5-59eb-4533-a2cb-e150412ec4f6\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: That’s why, in a recent interview, Marc Benioff, the co-chief executive and a founder of Salesforce, told me he was in the process of hiring a chief ethical officer to help anticipate and address any thorny conundrums it might encounter as a business — like the decision it had to make a few months back about whether it should stop providing recruitment software for Customs and Border Protection because of the government’s policy of separating immigrant families at the border.\n                              text:\n                                content: That’s why, in a recent interview, Marc Benioff, the co-chief executive and a founder of Salesforce, told me he was in the process of hiring a chief ethical officer to help anticipate and address any thorny conundrums it might encounter as a business — like the decision it had to make a few months back about whether it should stop providing recruitment software for Customs and Border Protection because of the government’s policy of separating immigrant families at the border.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 31405c6e-7ece-4667-8c4d-36c9d79a0bfa\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: Amid much criticism, Mr. Benioff decided to keep the contract, but said he would focus more on social and political issues.\n                              text:\n                                content: Amid much criticism, Mr. Benioff decided to keep the contract, but said he would focus more on social and political issues.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: a2ab7e8a-d521-401d-89ae-9eb27efb9990\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"At a recent company event, he elaborated: “We can have a structured conversation not just with our own employees myopically, but by bringing in the key advisers, supporters and pundits and philosophers and everybody necessary to ask the question if what we are doing today is ethical and humane.”\"\n                              text:\n                                content: \"At a recent company event, he elaborated: “We can have a structured conversation not just with our own employees myopically, but by bringing in the key advisers, supporters and pundits and philosophers and everybody necessary to ask the question if what we are doing today is ethical and humane.”\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: a4498e1e-8b85-48d7-802a-db447ca7d1ac\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: 23andMe has also toyed with the idea of hiring a chief ethics officer. In an interview I did this week with its chief executive, Anne Wojcicki, she said the genetics company had even interviewed candidates, but that many of them wanted to remain in academia to be freer to ponder these issues. She acknowledged that the collection of DNA data is rife with ethical considerations, but said, “I think it has to be our management and leaders who have to add this to our skill set, rather than just hire one person to determine this.”\n                              text:\n                                content: 23andMe has also toyed with the idea of hiring a chief ethics officer. In an interview I did this week with its chief executive, Anne Wojcicki, she said the genetics company had even interviewed candidates, but that many of them wanted to remain in academia to be freer to ponder these issues. She acknowledged that the collection of DNA data is rife with ethical considerations, but said, “I think it has to be our management and leaders who have to add this to our skill set, rather than just hire one person to determine this.”\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: cbf7e7e0-5552-4b3f-b09e-9dcca120931c\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: When asked about the idea of a single source of wisdom on ethics, some point out that legal or diversity/inclusion departments are designed for that purpose and that the ethics should really come from the top — the chief executive.\n                              text:\n                                content: When asked about the idea of a single source of wisdom on ethics, some point out that legal or diversity/inclusion departments are designed for that purpose and that the ethics should really come from the top — the chief executive.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: d24b2887-0f1f-4e91-99c1-c295bed8ad65\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: Also of concern is the possibility that a single person would not get listened to or, worse, get steamrollered. And, if the person was bad at the job, of course, it could drag the whole thing down.\n                              text:\n                                content: Also of concern is the possibility that a single person would not get listened to or, worse, get steamrollered. And, if the person was bad at the job, of course, it could drag the whole thing down.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 78c55f65-c8b8-4364-a369-c40699968e90\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"Others are more worried that the move would be nothing but window dressing. One consultant who focuses on ethics, but did not want to be named, told me: “We haven’t even defined ethics, so what even is ethical use, especially for Silicon Valley companies that are babies in this game?”\"\n                              text:\n                                content: \"Others are more worried that the move would be nothing but window dressing. One consultant who focuses on ethics, but did not want to be named, told me: “We haven’t even defined ethics, so what even is ethical use, especially for Silicon Valley companies that are babies in this game?”\"\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 0b492111-1586-4a73-8848-04f0c391aadc\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: How can an industry that, unlike other business sectors, persistently promotes itself as doing good, learn to do that in reality? Do you want to not do harm, or do you want to do good? These are two totally different things.\n                              text:\n                                content: How can an industry that, unlike other business sectors, persistently promotes itself as doing good, learn to do that in reality? Do you want to not do harm, or do you want to do good? These are two totally different things.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 302f8229-2404-460b-8c3c-e7058b4365e5\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: And how do you put an official ethical system in place without it seeming like you’re telling everyone how to behave? Who gets to decide those rules anyway, setting a moral path for the industry and — considering tech companies’ enormous power — the world.\n                              text:\n                                content: And how do you put an official ethical system in place without it seeming like you’re telling everyone how to behave? Who gets to decide those rules anyway, setting a moral path for the industry and — considering tech companies’ enormous power — the world.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 8f9bc91c-5662-4b3f-a110-809f46b79f49\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: false\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: Like I said, adult supervision. Or maybe, better still, Silicon Valley itself has to grow up.\n                              text:\n                                content: Like I said, adult supervision. Or maybe, better still, Silicon Valley itself has to grow up.\n                                link: null\n                              type: text\n                        type: paragraph\n                      - created_time: 2021-04-27T20:38:19.437Z\n                        has_children: false\n                        id: 7bea1831-a25c-4b3e-8c9b-b37de814f948\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: block\n                        paragraph:\n                          text:\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \"Follow The New York Times Opinion section on \"\n                              text:\n                                content: \"Follow The New York Times Opinion section on \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: https://www.facebook.com/nytopinion\n                              plain_text: Facebook\n                              text:\n                                content: Facebook\n                                link:\n                                  url: https://www.facebook.com/nytopinion\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \", \"\n                              text:\n                                content: \", \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: http://twitter.com/NYTOpinion\n                              plain_text: Twitter (@NYTopinion)\n                              text:\n                                content: Twitter (@NYTopinion)\n                                link:\n                                  url: http://twitter.com/NYTOpinion\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \" and \"\n                              text:\n                                content: \" and \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: https://www.instagram.com/nytopinion/\n                              plain_text: Instagram\n                              text:\n                                content: Instagram\n                                link:\n                                  url: https://www.instagram.com/nytopinion/\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: \", and sign up for the \"\n                              text:\n                                content: \", and sign up for the \"\n                                link: null\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: http://www.nytimes.com/newsletters/opiniontoday/\n                              plain_text: Opinion Today newsletter\n                              text:\n                                content: Opinion Today newsletter\n                                link:\n                                  url: http://www.nytimes.com/newsletters/opiniontoday/\n                              type: text\n                            - annotations:\n                                bold: false\n                                code: false\n                                color: default\n                                italic: true\n                                strikethrough: false\n                                underline: false\n                              href: null\n                              plain_text: .\n                              text:\n                                content: .\n                                link: null\n                              type: text\n                        type: paragraph\n              schema:\n                $ref: '#/components/schemas/BlockChildrenResponse'\n          description: 200 Success - Retrieve block children\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 647435237cce6dc4-SJC\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: gzip\n                type: string\n            Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            Date:\n              schema:\n                example: Wed, 28 Apr 2021 23:53:00 GMT\n                type: string\n            ETag:\n              schema:\n                example: W/\"65f3-d0AArGizyGsk597xfjWN7976xCc\"\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            Referrer-Policy:\n              schema:\n                example: same-origin\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Set-Cookie:\n              schema:\n                example: notion_browser_id=a1b1f1dd-7731-4a2b-b968-10b475e3b526; Domain=www.notion.so; Path=/; Expires=Sun, 05 Jan 2053 01:39:40 GMT; Secure\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=5184000; includeSubDomains\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Accept-Encoding\n                type: string\n            X-Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-WebKit-CSP:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 09bc7f8a2a00006dc41a11e000000001\n                type: string\n      summary: Retrieve block children\n      tags:\n        - Blocks\n    parameters:\n      - in: path\n        name: id\n        description: block children ID\n        required: true\n        schema:\n          example: \"{{PAGE_ID}}\"\n          type: string\n      - in: header\n        name: Notion-Version\n        description: API Version\n        schema:\n          example: \"\"\n          type: string\n          default: \"2021-05-13\"\n    patch:\n      description: Append block children\n      operationId: appendBlockChildren\n      requestBody:\n        content:\n          application/json:\n            example:\n              children:\n                - heading_2:\n                    text:\n                      - text:\n                          content: Lacinato kale\n                        type: text\n                  object: block\n                  type: heading_2\n                - object: block\n                  paragraph:\n                    text:\n                      - text:\n                          content: Lacinato kale is a variety of kale with a long tradition in Italian cuisine, especially that of Tuscany. It is also known as Tuscan kale, Italian kale, dinosaur kale, kale, flat back kale, palm tree kale, or black Tuscan palm.\n                          link:\n                            url: https://en.wikipedia.org/wiki/Lacinato_kale\n                        type: text\n                  type: paragraph\n            schema:\n              $ref: \"#/components/schemas/PageUpdateRequestBody\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                200 Success - Append block children:\n                  value:\n                    child_page:\n                      title: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                    created_time: 2021-04-27T20:38:19.437Z\n                    has_children: true\n                    id: a1712d54-53e4-4893-a69d-4d581cd2c845\n                    last_edited_time: 2021-05-12T06:07:37.724Z\n                    object: block\n                    type: child_page\n              schema:\n                $ref: \"#/components/schemas/ChildBlockContent\"\n          description: 200 Success - Append block children\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 64e177c41a820231-SJC\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: gzip\n                type: string\n            Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://embed.typeform.com https://admin.typeform.com https://public.profitwell.com js.sentry-cdn.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://www2.profitwell.com https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            Date:\n              schema:\n                example: Wed, 12 May 2021 06:07:37 GMT\n                type: string\n            ETag:\n              schema:\n                example: W/\"105-p1Ka6kLp+wkCMX+oZhcjZAtwEtc\"\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            Referrer-Policy:\n              schema:\n                example: same-origin\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Set-Cookie:\n              schema:\n                example: notion_browser_id=0724819e-ad9a-4b7f-b50e-e5c75d6763dd; Domain=www.notion.so; Path=/; Expires=Sat, 18 Jan 2053 07:54:17 GMT; Secure\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=5184000; includeSubDomains\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Accept-Encoding\n                type: string\n            X-Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://embed.typeform.com https://admin.typeform.com https://public.profitwell.com js.sentry-cdn.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://www2.profitwell.com https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-WebKit-CSP:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://embed.typeform.com https://admin.typeform.com https://public.profitwell.com js.sentry-cdn.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://www2.profitwell.com https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 0a00c92e8d00000231bf82c000000001\n                type: string\n      summary: Append block children\n      tags:\n        - Blocks\n  \"/v1/databases\":\n    post:\n      description: Create a database\n      operationId: createDatabase\n      parameters:\n        - in: header\n          name: Notion-Version\n          description: API Version\n          schema:\n            type: string\n            default: \"2021-05-13\"\n      requestBody:\n        description: Page information\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DatabaseBodyParams\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseBodyParams\"\n          description: 200 Success - Create a database\n      summary: Create a database\n      tags:\n        - Database\n    get:\n      description: Returns a paginated list of databases for the workspace\n      operationId: listAllDatabases\n      parameters:\n        - in: query\n          name: start_cursor\n          required: false\n          description: If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results.\n          schema:\n            type: string\n        - in: query\n          name: page_size\n          required: false\n          description: The number of items from the full list desired in the response. Maximum- 100\n          schema:\n            type: integer\n        - in: header\n          name: Notion-Version\n          description: API Version\n          schema:\n            type: string\n            default: \"2021-05-13\" \n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseResponse\"\n          description: 200 Success - List all databases\n      summary: List all databases\n      tags:\n        - Database\n  \"/v1/databases/{id}\":\n    get:\n      description: \"Retrieves a database object using the ID specified in the request path. \"\n      operationId: retrieveDatabase\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                200 Success - Retrieve a database:\n                  value:\n                    created_time: 2021-04-27T20:38:19.437Z\n                    id: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n                    last_edited_time: 2021-04-27T21:15:00.000Z\n                    object: database\n                    properties:\n                      Author:\n                        id: qNw_\n                        multi_select:\n                          options:\n                            - color: default\n                              id: 15592971-7b30-43d5-9406-2eb69b13fcae\n                              name: Spencer Greenberg\n                            - color: default\n                              id: b80a988e-dccf-4f74-b764-6ca0e49ed1b8\n                              name: Seth Stephens-Davidowitz\n                            - color: default\n                              id: 0e71ee06-199d-46a4-834c-01084c8f76cb\n                              name: Andrew Russell\n                            - color: default\n                              id: 5807ec38-4879-4455-9f30-5352e90e8b79\n                              name: Lee Vinsel\n                            - color: default\n                              id: 4cf10a64-f3da-449c-8e04-ce6e338bbdbd\n                              name: Megan Greenwell\n                            - color: default\n                              id: 833e2c78-35ed-4601-badc-50c323341d76\n                              name: Kara Swisher\n                            - color: default\n                              id: 82e594e2-b1c5-4271-ac19-1a723a94a533\n                              name: Paul Romer\n                            - color: default\n                              id: ae3a2cbe-1fc9-4376-be35-331628b34623\n                              name: Karen Swallow Prior\n                            - color: default\n                              id: da068e78-dfe2-4434-9fd7-b7450b3e5830\n                              name: Judith Shulevitz\n                        type: multi_select\n                      Link:\n                        id: VVMi\n                        type: url\n                        url: {}\n                      Name:\n                        id: title\n                        title: {}\n                        type: title\n                      Publisher:\n                        id: \"\u003e$Pb\"\n                        select:\n                          options:\n                            - color: default\n                              id: c5ee409a-f307-4176-99ee-6e424fa89afa\n                              name: NYT\n                            - color: blue\n                              id: 1b9b0c0c-17b0-4292-ad12-1364a51849de\n                              name: Netflix\n                            - color: brown\n                              id: f3533637-278f-4501-b394-d9753bf3c101\n                              name: Indie\n                            - color: yellow\n                              id: e70d713c-4be4-4b40-a44d-fb413c8b9d7e\n                              name: Bon Appetit\n                            - color: pink\n                              id: 9c2bd667-0a10-4be4-a044-35a537a14ab9\n                              name: Franklin Institute\n                            - color: orange\n                              id: 6849b5f0-e641-4ec5-83cb-1ffe23011060\n                              name: Springer\n                            - color: gray\n                              id: 6a5bff63-a72d-4464-a5d0-1a601af2adf6\n                              name: Emerald Group\n                            - color: red\n                              id: 01f82d08-aa1f-4884-a4e0-3bc32f909ec4\n                              name: The Atlantic\n                        type: select\n                      Publishing/Release Date:\n                        date: {}\n                        id: ?ex+\n                        type: date\n                      Read:\n                        checkbox: {}\n                        id: _MWJ\n                        type: checkbox\n                      Score /5:\n                        id: )Y7\"\n                        select:\n                          options:\n                            - color: default\n                              id: 5c944de7-3f4b-4567-b3a1-fa2c71c540b6\n                              name: ⭐️⭐️⭐️⭐️⭐️\n                            - color: default\n                              id: b7307e35-c80a-4cb5-bb6b-6054523b394a\n                              name: ⭐️⭐️⭐️⭐️\n                            - color: default\n                              id: 9b1e1349-8e24-40ba-bbca-84a61296bc81\n                              name: ⭐️⭐️⭐️\n                            - color: default\n                              id: 66d3d050-086c-4a91-8c56-d55dc67e7789\n                              name: ⭐️⭐️\n                            - color: default\n                              id: d3782c76-0396-467f-928e-46bf0c9d5fba\n                              name: ⭐️\n                        type: select\n                      Status:\n                        id: \"`zz5\"\n                        select:\n                          options:\n                            - color: yellow\n                              id: 8c4a056e-6709-4dd1-ba58-d34d9480855a\n                              name: Ready to Start\n                            - color: red\n                              id: 5925ba22-0126-4b58-90c7-b8bbb2c3c895\n                              name: Reading\n                            - color: blue\n                              id: 59aa9043-07b4-4bf4-8734-3164b13af44a\n                              name: Finished\n                            - color: red\n                              id: f961978d-02eb-4998-933a-33c2ec378564\n                              name: Listening\n                            - color: red\n                              id: 1d450853-b27a-45e2-979f-448aa1bd35de\n                              name: Watching\n                        type: select\n                      Summary:\n                        id: ?\\25\n                        text: {}\n                        type: text\n                      Type:\n                        id: /7eo\n                        select:\n                          options:\n                            - color: default\n                              id: f96d0d0a-5564-4a20-ab15-5f040d49759e\n                              name: Article\n                            - color: default\n                              id: 4ac85597-5db1-4e0a-9c02-445575c38f76\n                              name: TV Series\n                            - color: default\n                              id: 2991748a-5745-4c3b-9c9b-2d6846a6fa1f\n                              name: Film\n                            - color: default\n                              id: 82f3bace-be25-410d-87fe-561c9c22492f\n                              name: Podcast\n                            - color: default\n                              id: 861f1076-1cc4-429a-a781-54947d727a4a\n                              name: Academic Journal\n                            - color: default\n                              id: 9cc30548-59d6-4cd3-94bc-d234081525c4\n                              name: Essay Resource\n                        type: select\n                    title:\n                      - annotations:\n                          bold: false\n                          code: false\n                          color: default\n                          italic: false\n                          strikethrough: false\n                          underline: false\n                        href: null\n                        plain_text: Media\n                        text:\n                          content: Media\n                          link: null\n                        type: text\n              schema:\n                $ref: \"#/components/schemas/Database\"\n          description: 200 Success - Retrieve a database\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 646b122b5e6d269a-SJC\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: gzip\n                type: string\n            Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            Date:\n              schema:\n                example: Tue, 27 Apr 2021 21:16:17 GMT\n                type: string\n            ETag:\n              schema:\n                example: W/\"ec4-zjtg92X8dlV+o+GOEWHEth+DGEk\"\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            Referrer-Policy:\n              schema:\n                example: same-origin\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Set-Cookie:\n              schema:\n                example: notion_browser_id=9122a199-c9bd-4be0-9313-ef4af9d1a2bc; Domain=www.notion.so; Path=/; Expires=Fri, 03 Jan 2053 23:02:57 GMT; Secure\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=5184000; includeSubDomains\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Accept-Encoding\n                type: string\n            X-Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-WebKit-CSP:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 09b6c9af130000269a31192000000001\n                type: string\n      summary: Retrieve a database\n      tags:\n        - Databases\n    parameters:\n      - in: path\n        name: id\n        description: Database ID\n        required: true\n        schema:\n          example: \"{{DATABASE_ID}}\"\n          type: string\n      - in: header\n        name: Notion-Version\n        description: API Version\n        schema:\n          example: \"\"\n          type: string\n          default: \"2021-05-13\"\n  \"/v1/databases/{id}/query\":\n    parameters:\n      - in: path\n        name: id\n        description: Database ID\n        required: true\n        schema:\n          example: \"{{DATABASE_ID}}\"\n          type: string\n      - in: header\n        name: Notion-Version\n        description: API Version\n        schema:\n          example: \"\"\n          type: string\n          default: \"2021-05-13\"\n    post:\n      description: Query a Database\n      operationId: queryDatabase\n      requestBody:\n        content:\n          application/json:\n            example:\n              filter:\n                or:\n                  - property: Status\n                    select:\n                      equals: Reading\n                  - property: Publisher\n                    select:\n                      equals: NYT\n              sorts:\n                - direction: ascending\n                  property: Score /5\n            schema:\n              $ref: \"#/components/schemas/DatabaseContent\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                200 Success - Query a Database (Single Filter):\n                  value:\n                    has_more: false\n                    next_cursor: null\n                    object: list\n                    results:\n                      - archived: false\n                        created_time: 2021-04-27T20:38:19.437Z\n                        id: 557ef501-bfdb-4586-918e-4434f31bca8c\n                        last_edited_time: 2021-04-27T20:38:19.437Z\n                        object: page\n                        parent:\n                          database_id: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n                          type: database_id\n                        properties:\n                          Author:\n                            id: qNw_\n                            multi_select:\n                              - color: default\n                                id: ae3a2cbe-1fc9-4376-be35-331628b34623\n                                name: Karen Swallow Prior\n                            type: multi_select\n                          Link:\n                            id: VVMi\n                            type: url\n                            url: https://www.theatlantic.com/entertainment/archive/2016/03/how-jane-eyre-created-the-modern-self/460461/\n                          Name:\n                            id: title\n                            title:\n                              - annotations:\n                                  bold: false\n                                  code: false\n                                  color: default\n                                  italic: true\n                                  strikethrough: false\n                                  underline: false\n                                href: null\n                                plain_text: Jane Eyre\n                                text:\n                                  content: Jane Eyre\n                                  link: null\n                                type: text\n                              - annotations:\n                                  bold: false\n                                  code: false\n                                  color: default\n                                  italic: false\n                                  strikethrough: false\n                                  underline: false\n                                href: null\n                                plain_text: \" and the Invention of Self\"\n                                text:\n                                  content: \" and the Invention of Self\"\n                                  link: null\n                                type: text\n                            type: title\n                          Publisher:\n                            id: \"\u003e$Pb\"\n                            select:\n                              color: red\n                              id: 01f82d08-aa1f-4884-a4e0-3bc32f909ec4\n                              name: The Atlantic\n                            type: select\n                          Publishing/Release Date:\n                            date:\n                              end: null\n                              start: 2016-10-03\n                            id: ?ex+\n                            type: date\n                          Read:\n                            checkbox: false\n                            id: _MWJ\n                            type: checkbox\n                          Score /5:\n                            id: )Y7\"\n                            select:\n                              color: default\n                              id: 66d3d050-086c-4a91-8c56-d55dc67e7789\n                              name: ⭐️⭐️\n                            type: select\n                          Status:\n                            id: \"`zz5\"\n                            select:\n                              color: red\n                              id: 5925ba22-0126-4b58-90c7-b8bbb2c3c895\n                              name: Reading\n                            type: select\n                          Summary:\n                            id: ?\\25\n                            text: []\n                            type: text\n                          Type:\n                            id: /7eo\n                            select:\n                              color: default\n                              id: 9cc30548-59d6-4cd3-94bc-d234081525c4\n                              name: Essay Resource\n                            type: select\n                      - archived: false\n                        created_time: 2021-04-27T20:38:19.437Z\n                        id: a1712d54-53e4-4893-a69d-4d581cd2c845\n                        last_edited_time: 2021-04-28T23:12:53.160Z\n                        object: page\n                        parent:\n                          database_id: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n                          type: database_id\n                        properties:\n                          Author:\n                            id: qNw_\n                            multi_select:\n                              - color: default\n                                id: 833e2c78-35ed-4601-badc-50c323341d76\n                                name: Kara Swisher\n                            type: multi_select\n                          Link:\n                            id: VVMi\n                            type: url\n                            url: https://www.nytimes.com/2018/10/21/opinion/who-will-teach-silicon-valley-to-be-ethical.html\n                          Name:\n                            id: title\n                            title:\n                              - annotations:\n                                  bold: false\n                                  code: false\n                                  color: default\n                                  italic: false\n                                  strikethrough: false\n                                  underline: false\n                                href: null\n                                plain_text: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                                text:\n                                  content: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                                  link: null\n                                type: text\n                            type: title\n                          Publisher:\n                            id: \"\u003e$Pb\"\n                            select:\n                              color: default\n                              id: c5ee409a-f307-4176-99ee-6e424fa89afa\n                              name: NYT\n                            type: select\n                          Publishing/Release Date:\n                            date:\n                              end: null\n                              start: 2018-10-21\n                            id: ?ex+\n                            type: date\n                          Read:\n                            checkbox: true\n                            id: _MWJ\n                            type: checkbox\n                          Score /5:\n                            id: )Y7\"\n                            select:\n                              color: default\n                              id: b7307e35-c80a-4cb5-bb6b-6054523b394a\n                              name: ⭐️⭐️⭐️⭐️\n                            type: select\n                          Status:\n                            id: \"`zz5\"\n                            select:\n                              color: red\n                              id: 5925ba22-0126-4b58-90c7-b8bbb2c3c895\n                              name: Reading\n                            type: select\n                          Summary:\n                            id: ?\\25\n                            text:\n                              - annotations:\n                                  bold: false\n                                  code: false\n                                  color: default\n                                  italic: false\n                                  strikethrough: false\n                                  underline: false\n                                href: null\n                                plain_text: Some think chief ethics officers could help technology companies navigate political and social questions.\n                                text:\n                                  content: Some think chief ethics officers could help technology companies navigate political and social questions.\n                                  link: null\n                                type: text\n                            type: text\n                          Type:\n                            id: /7eo\n                            select:\n                              color: default\n                              id: f96d0d0a-5564-4a20-ab15-5f040d49759e\n                              name: Article\n                            type: select\n              schema:\n                $ref: \"#/components/schemas/DatabaseResponse\"\n          description: 200 Success - Query a Database (Single Filter)\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 64742bf94bcc6dc4-SJC\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: gzip\n                type: string\n            Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            Date:\n              schema:\n                example: Wed, 28 Apr 2021 23:46:45 GMT\n                type: string\n            ETag:\n              schema:\n                example: W/\"f21-yS6Mhxpuh9b1qQqwcnv0VnpDQvE\"\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            Referrer-Policy:\n              schema:\n                example: same-origin\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Set-Cookie:\n              schema:\n                example: notion_browser_id=b428cd25-ff7b-4760-9db6-a0607bba5f75; Domain=www.notion.so; Path=/; Expires=Sun, 05 Jan 2053 01:33:25 GMT; Secure\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=5184000; includeSubDomains\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Accept-Encoding\n                type: string\n            X-Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-WebKit-CSP:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 09bc79cfca00006dc430903000000001\n                type: string\n      summary: Query a Database\n      tags:\n        - Databases\n  \"/v1/pages\":\n    post:\n      description: Creates a new page in the specified database or as a child of an existing page\n      operationId: createPage\n      summary: Create a page\n      parameters:\n        - in: header\n          name: Notion-Version\n          description: API Version\n          schema:\n            type: string\n            default: \"2021-05-13\" \n      tags:\n        - Pages\n      requestBody:\n        description: Page information\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PageBodyParams\"\n      responses:\n        \"200\":\n          description: 200 Success - Create Page\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PageResponse\"\n  \"/v1/pages/{id}\":\n    get:\n      description: \"Retrieves a Page object using the ID in the request path. This endpoint exposes page properties, not page content. \"\n      operationId: retrievePage\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                200 Success - Retrieve a Page:\n                  value:\n                    archived: false\n                    created_time: 2021-04-27T20:38:19.437Z\n                    id: a1712d54-53e4-4893-a69d-4d581cd2c845\n                    last_edited_time: 2021-04-27T20:38:19.437Z\n                    object: page\n                    parent:\n                      database_id: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n                      type: database_id\n                    properties:\n                      Author:\n                        id: qNw_\n                        multi_select:\n                          - color: default\n                            id: 833e2c78-35ed-4601-badc-50c323341d76\n                            name: Kara Swisher\n                        type: multi_select\n                      Link:\n                        id: VVMi\n                        type: url\n                        url: https://www.nytimes.com/2018/10/21/opinion/who-will-teach-silicon-valley-to-be-ethical.html\n                      Name:\n                        id: title\n                        title:\n                          - annotations:\n                              bold: false\n                              code: false\n                              color: default\n                              italic: false\n                              strikethrough: false\n                              underline: false\n                            href: null\n                            plain_text: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                            text:\n                              content: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                              link: null\n                            type: text\n                        type: title\n                      Publisher:\n                        id: \"\u003e$Pb\"\n                        select:\n                          color: default\n                          id: c5ee409a-f307-4176-99ee-6e424fa89afa\n                          name: NYT\n                        type: select\n                      Publishing/Release Date:\n                        date:\n                          end: null\n                          start: 2018-10-21\n                        id: ?ex+\n                        type: date\n                      Read:\n                        checkbox: false\n                        id: _MWJ\n                        type: checkbox\n                      Status:\n                        id: \"`zz5\"\n                        select:\n                          color: yellow\n                          id: 8c4a056e-6709-4dd1-ba58-d34d9480855a\n                          name: Ready to Start\n                        type: select\n                      Summary:\n                        id: ?\\25\n                        text:\n                          - annotations:\n                              bold: false\n                              code: false\n                              color: default\n                              italic: false\n                              strikethrough: false\n                              underline: false\n                            href: null\n                            plain_text: Some think chief ethics officers could help technology companies navigate political and social questions.\n                            text:\n                              content: Some think chief ethics officers could help technology companies navigate political and social questions.\n                              link: null\n                            type: text\n                        type: text\n                      Type:\n                        id: /7eo\n                        select:\n                          color: default\n                          id: f96d0d0a-5564-4a20-ab15-5f040d49759e\n                          name: Article\n                        type: select\n              schema:\n                $ref: \"#/components/schemas/PageResponse\"\n          description: 200 Success - Retrieve a Page\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 6473e2c6efdf1fbf-SJC\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: gzip\n                type: string\n            Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            Date:\n              schema:\n                example: Wed, 28 Apr 2021 22:56:47 GMT\n                type: string\n            ETag:\n              schema:\n                example: W/\"74e-OOTyxxjrH/jUfdxafOC5PJJkAf8\"\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            Referrer-Policy:\n              schema:\n                example: same-origin\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Set-Cookie:\n              schema:\n                example: notion_browser_id=38d6e64f-a286-4cdc-929d-6c077386ad73; Domain=www.notion.so; Path=/; Expires=Sun, 05 Jan 2053 00:43:27 GMT; Secure\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=5184000; includeSubDomains\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Accept-Encoding\n                type: string\n            X-Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-WebKit-CSP:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 09bc4c105500001fbf82b30000000001\n                type: string\n      summary: Retrieve a Page\n      tags:\n        - Pages\n    parameters:\n      - in: path\n        name: id\n        description: Page ID\n        required: true\n        schema:\n          example: \"{{PAGE_ID}}\"\n          type: string\n      - in: header\n        name: Notion-Version\n        description: API Version\n        schema:\n          example: \"\"\n          type: string\n          default: \"2021-05-13\"\n    patch:\n      description: \"Updates a page by setting the values of any properties specified in the JSON body of the request. Properties not updated via parameters will remain unchanged. \"\n      operationId: updatePageProperties\n      requestBody:\n        content:\n          application/json:\n            example:\n              properties:\n                Status:\n                  select:\n                    name: Reading\n            schema:\n              $ref: \"#/components/schemas/PageContent\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                200 Success - Update Page properties:\n                  value:\n                    archived: false\n                    created_time: 2021-04-27T20:38:19.437Z\n                    id: a1712d54-53e4-4893-a69d-4d581cd2c845\n                    last_edited_time: 2021-04-28T23:12:53.160Z\n                    object: page\n                    parent:\n                      database_id: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n                      type: database_id\n                    properties:\n                      Author:\n                        id: qNw_\n                        multi_select:\n                          - color: default\n                            id: 833e2c78-35ed-4601-badc-50c323341d76\n                            name: Kara Swisher\n                        type: multi_select\n                      Link:\n                        id: VVMi\n                        type: url\n                        url: https://www.nytimes.com/2018/10/21/opinion/who-will-teach-silicon-valley-to-be-ethical.html\n                      Name:\n                        id: title\n                        title:\n                          - annotations:\n                              bold: false\n                              code: false\n                              color: default\n                              italic: false\n                              strikethrough: false\n                              underline: false\n                            href: null\n                            plain_text: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                            text:\n                              content: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                              link: null\n                            type: text\n                        type: title\n                      Publisher:\n                        id: \"\u003e$Pb\"\n                        select:\n                          color: default\n                          id: c5ee409a-f307-4176-99ee-6e424fa89afa\n                          name: NYT\n                        type: select\n                      Publishing/Release Date:\n                        date:\n                          end: null\n                          start: 2018-10-21\n                        id: ?ex+\n                        type: date\n                      Read:\n                        checkbox: true\n                        id: _MWJ\n                        type: checkbox\n                      Score /5:\n                        id: )Y7\"\n                        select:\n                          color: default\n                          id: b7307e35-c80a-4cb5-bb6b-6054523b394a\n                          name: ⭐️⭐️⭐️⭐️\n                        type: select\n                      Status:\n                        id: \"`zz5\"\n                        select:\n                          color: red\n                          id: 5925ba22-0126-4b58-90c7-b8bbb2c3c895\n                          name: Reading\n                        type: select\n                      Summary:\n                        id: ?\\25\n                        rich_text:\n                          - annotations:\n                              bold: false\n                              code: false\n                              color: default\n                              italic: false\n                              strikethrough: false\n                              underline: false\n                            href: null\n                            plain_text: Some think chief ethics officers could help technology companies navigate political and social questions.\n                            text:\n                              content: Some think chief ethics officers could help technology companies navigate political and social questions.\n                              link: null\n                            type: text\n                        type: rich_text\n                      Type:\n                        id: /7eo\n                        select:\n                          color: default\n                          id: f96d0d0a-5564-4a20-ab15-5f040d49759e\n                          name: Article\n                        type: select\n              schema:\n                $ref: \"#/components/schemas/PageUpdatedProperties\"\n          description: 200 Success - Update Page properties\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 64e173ce6ca20231-SJC\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: gzip\n                type: string\n            Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://embed.typeform.com https://admin.typeform.com https://public.profitwell.com js.sentry-cdn.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://www2.profitwell.com https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            Date:\n              schema:\n                example: Wed, 12 May 2021 06:04:55 GMT\n                type: string\n            ETag:\n              schema:\n                example: W/\"7d8-jG4gaWNQPTIf72vp10FvF9p/N3Q\"\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            Referrer-Policy:\n              schema:\n                example: same-origin\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Set-Cookie:\n              schema:\n                example: notion_browser_id=64874c87-50ce-4a41-af6f-3ecf1626325e; Domain=www.notion.so; Path=/; Expires=Sat, 18 Jan 2053 07:51:35 GMT; Secure\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=5184000; includeSubDomains\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Accept-Encoding\n                type: string\n            X-Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://embed.typeform.com https://admin.typeform.com https://public.profitwell.com js.sentry-cdn.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://www2.profitwell.com https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-WebKit-CSP:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://embed.typeform.com https://admin.typeform.com https://public.profitwell.com js.sentry-cdn.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://www2.profitwell.com https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 0a00c6b50400000231ecbbc000000001\n                type: string\n      summary: \"Update Page properties \"\n      tags:\n        - Pages\n  \"/v1/users\":\n    get:\n      description: Returns a paginated list of Users for the workspace\n      operationId: listAllUsers\n      parameters:\n        - in: query\n          name: start_cursor\n          required: false\n          description: If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results.\n          schema:\n            type: string\n        - in: query\n          name: page_size\n          required: false\n          description: The number of items from the full list desired in the response. Maximum- 100\n          schema:\n            type: integer\n        - in: header\n          name: Notion-Version\n          description: API Version\n          schema:\n            type: string\n            default: \"2021-05-13\" \n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedUsers\"\n          description: 200 Success - List all users\n      summary: List all users\n      tags:\n        - Users\n  \"/v1/users/{id}\":\n    get:\n      description: Retrieve a user object using the ID specified in the request path.\n      operationId: retrieveUser\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                200 Success - Retrieve a user:\n                  value:\n                    avatar_url: null\n                    id: 6794760a-1f15-45cd-9c65-0dfe42f5135a\n                    name: Aman Gupta\n                    object: user\n                    person:\n                      email: XXXXXXX@makenotion.com\n                    type: person\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: 200 Success - Retrieve a user\n          headers:\n            CF-Cache-Status:\n              schema:\n                example: DYNAMIC\n                type: string\n            CF-RAY:\n              schema:\n                example: 646ad4bbeabc1fa1-SJC\n                type: string\n            Connection:\n              schema:\n                example: keep-alive\n                type: string\n            Content-Encoding:\n              schema:\n                example: gzip\n                type: string\n            Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            Date:\n              schema:\n                example: Tue, 27 Apr 2021 20:34:20 GMT\n                type: string\n            ETag:\n              schema:\n                example: W/\"9b-qoibMBKquYk09T0oogqvLGu9qu4\"\n                type: string\n            Expect-CT:\n              schema:\n                example: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\n                type: string\n            Referrer-Policy:\n              schema:\n                example: same-origin\n                type: string\n            Server:\n              schema:\n                example: cloudflare\n                type: string\n            Set-Cookie:\n              schema:\n                example: notion_browser_id=f50d0c06-4f74-4a3d-8e10-c0a2e9bd1cd2; Domain=www.notion.so; Path=/; Expires=Fri, 03 Jan 2053 22:21:00 GMT; Secure\n                type: string\n            Strict-Transport-Security:\n              schema:\n                example: max-age=5184000; includeSubDomains\n                type: string\n            Transfer-Encoding:\n              schema:\n                example: chunked\n                type: string\n            Vary:\n              schema:\n                example: Accept-Encoding\n                type: string\n            X-Content-Security-Policy:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-Content-Type-Options:\n              schema:\n                example: nosniff\n                type: string\n            X-DNS-Prefetch-Control:\n              schema:\n                example: off\n                type: string\n            X-Download-Options:\n              schema:\n                example: noopen\n                type: string\n            X-Frame-Options:\n              schema:\n                example: SAMEORIGIN\n                type: string\n            X-WebKit-CSP:\n              schema:\n                example: \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://gist.github.com https://apis.google.com https://api.amplitude.com https://widget.intercom.io https://js.intercomcdn.com https://logs-01.loggly.com https://cdn.segment.com https://analytics.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://embed.typeform.com https://admin.typeform.com https://platform.twitter.com https://cdn.syndication.twimg.com https://www.googletagmanager.com https://x.clearbitjs.com; connect-src 'self' https://msgstore.www.notion.so wss://msgstore.www.notion.so ws://localhost:* https://notion-emojis.s3-us-west-2.amazonaws.com https://s3-us-west-2.amazonaws.com https://s3.us-west-2.amazonaws.com https://notion-production-snapshots-2.s3.us-west-2.amazonaws.com https: http: https://api.amplitude.com https://api.embed.ly https://js.intercomcdn.com https://api-iam.intercom.io wss://nexus-websocket-a.intercom.io https://logs-01.loggly.com https://api.segment.io https://api.pgncs.notion.so https://checkout.stripe.com https://js.stripe.com/v3 https://cdn.contentful.com https://preview.contentful.com https://images.ctfassets.net https://api.unsplash.com https://boards-api.greenhouse.io; font-src 'self' data: https://cdnjs.cloudflare.com https://js.intercomcdn.com; img-src 'self' data: blob: https: https://platform.twitter.com https://syndication.twitter.com https://pbs.twimg.com https://ton.twimg.com www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://github.githubassets.com https://platform.twitter.com https://ton.twimg.com; frame-src https: http:; media-src https: http:\"\n                type: string\n            X-XSS-Protection:\n              schema:\n                example: 1; mode=block\n                type: string\n            cf-request-id:\n              schema:\n                example: 09b6a3497100001fa1b8a29000000001\n                type: string\n      summary: Retrieve a user\n      tags:\n        - Users\n    parameters:\n      - in: path\n        name: id\n        required: true\n        description: User ID\n        schema:\n          example: \"\"\n          type: string\n      - in: header\n        name: Notion-Version\n        description: API Version\n        schema:\n          example: \"\"\n          type: string\n          default: \"2021-05-13\"\n  \"/v1/search\":\n    post:\n      description: Searches all pages and child pages that are shared with the integration and the results may include databases\n      operationId: searchPages\n      summary: Searches all pages and child pages\n      parameters:\n        - in: header\n          name: Notion-Version\n          description: API Version\n          schema:\n            type: string\n            default: \"2021-05-13\" \n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: 200 Success - List all user \ncomponents:\n  securitySchemes:\n    BearerToken: \n      type: http\n      scheme: bearer  \n  schemas:\n    SearchBody:\n      description: Search request body parameters\n      properties:\n        query:\n          type: string\n          description: When supplied, limits which pages are returned by comparing the query to the page title\n        sort:\n          $ref: \"#/components/schemas/Sorting\"\n        filter:\n          $ref: \"#/components/schemas/Filtering\"\n        start_cursor:\n          type: string\n          description: If supplied, this endpoint will return a page of results starting after the cursor provided or else this endpoint will return the first page of results\n        page_size:\n          type: integer\n          description: The number of items from the full list desired in the response. Maximum- 100\n    Sorting:\n      description: When supplied, sorts the results based on the provided criteria\n      properties:\n        direction:\n          description: The direction to sort. Possible values include ascending and descending\n          type: string\n        timestamp:\n          description: The name of the timestamp to sort against. Possible values include last_edited_time\n          type: string\n    Filtering:\n      description: When supplied, filters the results based on the provided criteria\n      properties:\n        value: \n          description: The value of the property to filter the results by and Possible values for object type include page or database\n          type: string\n        property:\n          description: The name of the property to filter by.\n          type: string\n    PaginatedUsers:\n      description: The response body for users list\n      properties:\n        results:\n          description: Array of Users\n          type: array\n          items:\n            $ref: \"#/components/schemas/User\"\n        next_cursor:\n          type: string\n          nullable: true\n          description: Next curser position of the user list\n        has_more:\n          type: boolean\n          description: Indicates whether there are more user records or not \n    PageUpdateRequestBody:\n      description: The request body for page update\n      properties:\n        children:\n          description: \"Children pages\"\n          items:\n            description: \"page items\"\n            properties:\n              heading_2:\n                description: \"Page heading\"\n                properties:\n                  text:\n                    description: \"Page text\"\n                    items:\n                      description: \"Page text items\"\n                      properties:\n                        text:\n                          description: \"Text value\"\n                          properties:\n                            content:\n                              description: \"Text content\"\n                              example: Lacinato kale\n                              type: string\n                          type: object\n                        type:\n                          description: The type of the object\n                          example: text\n                          type: string\n                      type: object\n                    type: array\n                type: object\n              object:\n                description:  The page object \"block\"\n                example: block\n                type: string\n              type:\n                description: The type of the object\n                example: heading_2\n                type: string\n            type: object\n          type: array\n      type: object\n    PaginatedDatabases:\n      description: The response body for users list\n      properties:\n        results:\n          description: Array of Users\n          type: array\n          items:\n            $ref: \"#/components/schemas/Database\"\n        next_cursor:\n          type: string\n          nullable: true\n          description: Next curser position of the user list\n        has_more:\n          type: boolean\n          description: Indicates whether there are more user records or not \n    ObjectProperties:\n      description: Object Properties\n      properties:\n        Author:\n          description: Author of the database\n          properties:\n            id:\n              description: Author ID\n              example: qNw_\n              type: string\n            multi_select:\n              description: multi_select values\n              properties:\n                options:\n                  description: The multi_select option\n                  items:\n                    description: The option items\n                    properties:\n                      color:\n                        description: Color of the database\n                        example: default\n                        type: string\n                      id:\n                        description: ID of the database\n                        example: 15592971-7b30-43d5-9406-2eb69b13fcae\n                        type: string\n                      name:\n                        description: Name of the Database\n                        example: Spencer Greenberg\n                        type: string\n                    type: object\n                  type: array\n              type: object\n            type:\n              description: The type of the object\n              example: multi_select\n              type: string\n          type: object\n        Link:\n          description: Related links\n          properties:\n            id:\n              description: Link ID\n              example: VVMi\n              type: string\n            type:\n              description: Link type\n              example: url\n              type: string\n            url:\n              description: URL\n              properties: {}\n              type: object\n          type: object\n        Name:\n          description: The name of the object\n          properties:\n            id: \n              description: Name ID\n              example: title\n              type: string\n            title:\n              description: tilte\n              properties: {}\n              type: object\n            type:\n              description: title Type\n              example: title\n              type: string\n          type: object\n        Publisher:\n          description: Publisher Detail\n          properties:\n            id:\n              description: Publisher ID\n              example: \"\u003e$Pb\"\n              type: string\n            select:\n              description: Select details of publisher\n              properties:\n                options:\n                  description: The set of options\n                  items:\n                    description: The set of items in options\n                    properties:\n                      color:\n                        description: The color\n                        example: default\n                        type: string\n                      id:\n                        description: The ID of the option\n                        example: c5ee409a-f307-4176-99ee-6e424fa89afa\n                        type: string\n                      name:\n                        description: The name of the option\n                        example: NYT\n                        type: string\n                    type: object\n                  type: array\n              type: object\n            type:\n              description: The type of the object\n              example: select\n              type: string\n          type: object\n        Publishing/Release Date:\n          description: Publishing/Releasing Date\n          properties:\n            date:\n              description: The date of publishing/release\n              properties: {}\n              type: object\n            id:\n              description: ID of date\n              example: ?ex+\n              type: string\n            type:\n              description: Type of the object\n              example: date\n              type: string\n          type: object\n        Read:\n          description: Read details\n          properties:\n            checkbox:\n              description: checkbox details\n              properties: {}\n              type: object\n            id:\n              description: ID of the checkbox\n              example: _MWJ\n              type: string\n            type:\n              description: The object type\n              example: checkbox\n              type: string\n          type: object\n        Status:\n          description: The status ID\n          properties:\n            id:\n              description: The ID of the status\n              example: \"`zz5\"\n              type: string\n            select:\n              description: Select details of publisher\n              properties:\n                options:\n                  description: The set of options\n                  items:\n                    description: The set of items in options\n                    properties:\n                      color:\n                        description: The color\n                        example: default\n                        type: string\n                      id:\n                        description: The ID of the option\n                        example: c5ee409a-f307-4176-99ee-6e424fa89afa\n                        type: string\n                      name:\n                        description: The name of the option\n                        example: NYT\n                        type: string\n                    type: object\n                  type: array\n              type: object\n            type:\n              description: The object type\n              example: select\n              type: string\n          type: object\n        Summary:\n          description: The summary of the database\n          properties:\n            id:\n              description: The ID of the summary\n              example: ?\\25\n              type: string\n            text:\n              description: The summary content\n              properties: {}\n              type: object\n            type:\n              description: The type of the object\n              example: text\n              type: string\n          type: object\n        Type:\n            description: The database type details\n            properties:\n              id:\n                description: The type ID\n                example: /7eo\n                type: string\n              select:\n                description: Select details of publisher\n                properties:\n                  options:\n                    description: The set of options\n                    items:\n                      description: The set of items in options\n                      properties:\n                        color:\n                          description: The color\n                          example: default\n                          type: string\n                        id:\n                          description: The ID of the option\n                          example: c5ee409a-f307-4176-99ee-6e424fa89afa\n                          type: string\n                        name:\n                          description: The name of the option\n                          example: NYT\n                          type: string\n                      type: object\n                    type: array\n                type: object\n              type:\n                description: The object type\n                example: select\n                type: string\n            type: object\n      type: object\n    ResultDetails:\n      description: Result Details\n      properties:\n        created_time:\n          description: The created date/time \n          example: 2021-04-27T20:38:19.437Z\n          type: string\n        has_children:\n          description: Indicates whether it has child object or not\n          example: false\n          type: boolean\n        id:\n          description: Object ID \n          example: 48c1ffb5-2789-4025-937b-2c35eaaaab3f\n          type: string\n        last_edited_time:\n          description: The last date/time \n          example: 2021-04-27T20:38:19.437Z\n          type: string\n        object:\n          description: Object Category\n          example: block\n          type: string\n        type:\n          example: unsupported\n          type: string\n          description: object type\n        unsupported:\n          properties: {}\n          type: object\n          description: Unsupported\n      type: object\n    BlockChildrenResponse:\n      description: The response for block children\n      properties:\n        has_more:\n          description: Indicates whether it has more objects or not\n          example: false\n          type: boolean\n        next_cursor:\n          description: Incidates the position of the response list\n          example: null\n          nullable: true\n        object:\n          description: The response object\n          example: list\n          type: string\n        results:\n          description: The array of result details\n          items:\n            $ref: '#/components/schemas/ResultDetails'\n          type: array\n      type: object\n    ChildBlockContent:\n      description: Child block details\n      properties:\n          child_page:\n            description: Child page\n            properties:\n              title:\n                description: Title of the page\n                example: \"Who Will Teach Silicon Valley to Be Ethical? \"\n                type: string\n            type: object\n          created_time:\n            description: The created date/time\n            example: 2021-04-27T20:38:19.437Z\n            type: string\n          has_children:\n            description: Indicates whether it has children blocks\n            example: true\n            type: boolean\n          id:\n            description: ID of the block\n            example: a1712d54-53e4-4893-a69d-4d581cd2c845\n            type: string\n          last_edited_time:\n            description: The last edited date/time\n            example: 2021-05-12T06:07:37.724Z\n            type: string\n          object:\n            description: Always \"block\" for block types\n            example: block\n            type: string\n          type:\n            description: Type of the block. Possible values include \"paragraph\", \"heading_1\", \"heading_2\", \"heading_3\", \"bulleted_list_item\" etc.\n            example: child_page\n            type: string\n      type: object\n    Database:\n      description: The database object\n      properties:\n        created_time:\n          description: The created date/time\n          example: 2021-04-27T20:38:19.437Z\n          type: string\n        id:\n          description: Database ID\n          example: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n          type: string\n        last_edited_time:\n          description: The last edited date/time\n          example: 2021-04-27T21:15:00.000Z\n          type: string\n        object:\n          description: Object type \"database\"\n          example: database\n          type: string\n        properties:\n          $ref: \"#/components/schemas/ObjectProperties\"\n        title:\n          description: Title of the database\n          items:\n            description: The item sets\n            properties:\n              annotations:\n                description: The annotation\n                properties:\n                  bold:\n                    description: Indicates whether the title is bold or not\n                    example: false\n                    type: boolean\n                  code:\n                    description: Indicates whether the title is code or not\n                    example: false\n                    type: boolean\n                  color:\n                    description: Indicates whether the title is color or not\n                    example: default\n                    type: string\n                  italic:\n                    description: Indicates whether the title is italic or not\n                    example: false\n                    type: boolean\n                  strikethrough:\n                    description: Indicates whether the title is strikethrough or not\n                    example: false\n                    type: boolean\n                  underline:\n                    description: Indicates whether the title is underline or not\n                    example: false\n                    type: boolean\n                type: object\n              href:\n                description: HyperLink\n                example: null\n                nullable: true\n              plain_text:\n                description: Plain text\n                example: Media\n                type: string\n              text:\n                description: The text detail\n                properties:\n                  content:\n                    description: The text content\n                    example: Media\n                    type: string\n                  link:\n                    description: The link to the text\n                    example: null\n                    nullable: true\n                type: object\n              type:\n                description: The type of the object\n                example: text\n                type: string\n            type: object\n          type: array\n      type: object\n    DatabaseContent:\n      description: Database content\n      properties:\n        filter:\n          description: Filter detail\n          properties:\n            or:\n              description: The filter set\n              items:\n                description: The filter item\n                properties:\n                  property:\n                    description: The filter property\n                    example: Status\n                    type: string\n                  select:\n                    description: The select details\n                    properties:\n                      equals:\n                        description: The equals values\n                        example: Reading\n                        type: string\n                    type: object\n                type: object\n              type: array\n          type: object\n        sorts:\n          description: Sorting details\n          items:\n            description: Sort items\n            properties:\n              direction:\n                description: The sort direction\n                example: ascending\n                type: string\n              property:\n                description: The sort property\n                example: Score /5\n                type: string\n            type: object\n          type: array\n      type: object\n    DatabaseResponse:\n      description: Database response content\n      properties:\n        has_more:\n          description: Indicates whether has more objects\n          example: false\n          type: boolean\n        next_cursor:\n          description: The next position of the result\n          example: null\n          nullable: true\n        object:\n          description: Object Type \"list\"\n          example: list\n          type: string\n        results:\n          description: Database results\n          items:\n            description: The databases\n            properties:\n              archived:\n                description: Indicates whether the database is archived or not\n                example: false\n                type: boolean\n              created_time:\n                description: Indicates whether the database is archived or not\n                example: 2021-04-27T20:38:19.437Z\n                type: string\n              id:\n                description: The ID of the database\n                example: 557ef501-bfdb-4586-918e-4434f31bca8c\n                type: string\n              last_edited_time:\n                description: The last edited time\n                example: 2021-04-27T20:38:19.437Z\n                type: string\n              object:\n                description: The object type \"page\"\n                example: page\n                type: string\n              parent:\n                description: The parent database\n                properties:\n                  database_id:\n                    description: Database ID\n                    example: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n                    type: string\n                  type:\n                    description: The type of object\n                    example: database_id\n                    type: string\n                type: object\n              properties:\n                $ref: \"#/components/schemas/ObjectProperties\"\n          type: array\n      type: object\n    PageResponse:\n      description: Page Details\n      properties:\n        archived:\n          description: Indicates whether it is archived or not\n          example: false\n          type: boolean\n        created_time:\n          description: The created date/time\n          example: 2021-04-27T20:38:19.437Z\n          type: string\n        id:\n          description: ID of the page\n          example: a1712d54-53e4-4893-a69d-4d581cd2c845\n          type: string\n        last_edited_time:\n          description: The last edited date/time\n          example: 2021-04-27T20:38:19.437Z\n          type: string\n        object:\n          description: The object type \"page\"\n          example: page\n          type: string\n        parent:\n          description: Parent Page\n          properties:\n            database_id:\n              description: Database ID\n              example: 8e2c2b76-9e1d-47d2-87b9-ed3035d607ae\n              type: string\n            type:\n              description: The type of the object\n              example: database_id\n              type: string\n          type: object\n        properties:\n          $ref: \"#/components/schemas/ObjectProperties\"\n      type: object\n    PageContent: \n      description: Page content\n      properties:\n        properties:\n          description: Page properties\n          properties:\n            Status:\n              description: Status properties\n              properties:\n                select:\n                  description: Select properties\n                  properties:\n                    name:\n                      description: page content name\n                      example: Reading\n                      type: string\n                  type: object\n              type: object\n          type: object\n      type: object\n    PageUpdatedProperties:\n      description: The page content after update\n      properties:\n        archived:\n          description: Indicates whether it is archived or not\n          example: false\n          type: boolean\n        created_time:\n          description: The created date/time\n          example: 2021-04-27T20:38:19.437Z\n          type: string\n        id:\n          description: The ID of the Page\n          example: a1712d54-53e4-4893-a69d-4d581cd2c845\n          type: string\n        last_edited_time:\n          description: The last edited date/time\n          example: 2021-04-28T23:12:53.160Z\n          type: string\n        object:\n          description: The object type \"page\"\n          example: page\n          type: string\n        properties:\n          $ref: \"#/components/schemas/ObjectProperties\"\n      type: object\n    User:\n      description: User detail\n      properties:\n        avatar_url:\n          description: avatar URL\n          example: null\n          nullable: true\n        id:\n          description: User ID\n          example: 6794760a-1f15-45cd-9c65-0dfe42f5135a\n          type: string\n        name:\n          description: Name of the User\n          example: Aman Gupta\n          type: string\n        object:\n          description: The object type User\n          example: user\n          type: string\n        person:\n          description: The contact detail\n          properties:\n            email:\n              description: Email address\n              example: XXXXXXX@makenotion.com\n              type: string\n          type: object\n        type:\n          description: The object type\n          example: person\n          type: string\n      type: object\n    PageProperties:\n      description: Page properties\n      properties:\n        name:\n          description: The ID of the property\n          type: string\n        type:\n          type: string\n          description: Type of the property\n      type: object\n    DatabaseTitle:\n      description: Page properties\n      properties:\n        plain_text:\n          description: The plain text without annotations\n          type: string\n        href:\n          description: The URL of any link or internal Notion mention in this text, if any\n          type: string\n        type:\n          type: string\n          description: Type of this rich text object. Possible values are- \"text\", \"mention\", \"equation\"\n        annotation:\n          $ref: \"#/components/schemas/Annotations\"\n      type: object\n    Annotations:\n      description: Style information which applies to the whole rich text object\n      properties:\n        bold:\n          type: boolean\n          description: Whether the text is bolded\n        italic:\n          type: boolean\n          description: Whether the text is italic\n        strikethrough:\n          type: boolean\n          description: Whether the text is struck through\n        underline:\n          type: boolean\n          description: Whether the text is underlined\n        code:\n          type: boolean\n          description: Whether the text is \"code style\"\n        color:\n          type: string\n          description: Color of the text. Possible values are- \"default\", \"gray\", \"brown\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"pink\", \"red\", \"gray_background\", \"brown_background\", \"orange_background\", \"yellow_background\", \"green_background\", \"blue_background\", \"purple_background\", \"pink_background\", \"red_background\"\n    PageParent:\n      description: Parent Page Detail\n      properties:\n        database_id:\n          description: Database ID\n          type: string\n      type: object\n    DatabaseParent:\n      description: Parent Page Detail\n      properties:\n        page_id:\n          description: Database ID\n          type: string\n      type: object\n    PageChildren:\n      description: Page content for the new page\n      type: array\n      items: \n        type: object\n        description: Page content for the new pag\n        properties:\n          object:\n            description: Always \"block\"\n            type: string\n            default: \"block\"\n          type:\n            description: Type of block\n            type: string\n          paragraph:\n            $ref: \"#/components/schemas/blockContent\"\n          heading_1:\n            $ref: \"#/components/schemas/blockContent\"\n          heading_2:\n            $ref: \"#/components/schemas/blockContent\"\n          heading_3:\n            $ref: \"#/components/schemas/blockContent\"\n          bulleted_list_item:\n            $ref: \"#/components/schemas/blockContent\"\n          numbered_list_item:\n            $ref: \"#/components/schemas/blockContent\"\n          to_do:\n            $ref: \"#/components/schemas/blockContent\"\n          child_page:\n            $ref: \"#/components/schemas/blockContent\"           \n    PageBodyParams:\n      description: PageDetail\n      properties:\n        properties:\n          $ref: \"#/components/schemas/PageProperties\"\n        parent:\n          $ref: \"#/components/schemas/PageParent\"\n        children:\n          $ref: \"#/components/schemas/PageChildren\"\n    DatabaseBodyParams:\n      description: DatabaseDetails\n      properties:\n        properties: \n          description: Property schema of database\n          $ref: \"#/components/schemas/DatabaseProperties\"\n        parent: \n          description: A page parent\n          $ref: \"#/components/schemas/DatabaseParent\"\n        title:\n          description: Property schema of database\n          type: array\n          items: \n            $ref: \"#/components/schemas/DatabaseTitle\"\n    DatabaseProperties:\n      description: Property schema of database. The keys are the names of properties as they appear in Notion and the values are property schema objects\n      properties:\n        title:\n          type: string\n          description: Each database must have exactly one database property schema object of type \"title\". This database property controls the title that appears at the top of the page when the page is opened.\n        rich_text:\n          type: string\n          description: Text database property schema objects\n        number:\n          description: Number database property schema object\n          type: object\n          properties:\n            format: \n              description: How the number is displayed in Notion. Potential values include- number, number_with_commas, percent, dollar, euro, pound, yen, ruble, rupee, won, yuan\n              type: string\n        select:\n          description: Select database property schema object\n          $ref: \"#/components/schemas/SelectOptions\"\n        multi_select:\n          type: array\n          description: Multi-select database property schema object\n          items:\n            $ref: \"#/components/schemas/SelectOptions\"\n        date:\n          type: string\n          description: Date database property schema\n        people:\n          type: string\n          description: People database property schema\n        files:\n          type: string\n          description: File database property schema object\n        checkbox:\n          type: string\n          description: Checkbox database property schema object\n        url:\n          type: string\n          description: URL database property schema object\n        email:\n          type: string\n          description: Email database property schema object\n        phone_number:\n          type: string\n          description: Phone number database property schema object\n        last_edited_time: \n          type: string\n          description: Last edited time database property schema object\n        last_edited_by: \n          type: string\n          description: Last edited by database property schema object\n        created_time: \n          type: string\n          description: Created time database property schema object\n        created_by: \n          type: string\n          description: Created by database property schema object\n    SelectOptions:\n      description: Select option\n      type: object\n      properties:\n        name: \n          type: string\n          description: Name of the option as it appears in Notion\n        color: \n          type: string\n          description: Color of the option. Possible values include- default, gray, brown, orange, yellow, green, blue, purple, pink, red\n    blockContent:\n      description: Block content\n      type: object\n      properties:\n        text:\n          description: block objects\n          type: array\n          items:\n            type: object\n            properties:\n              text:\n                description: block objects\n                type: array\n                items:\n                  $ref: \"#/components/schemas/blockContent\"\n              children:\n                description: Any nested children blocks\n                type: array\n                items:\n                  $ref: \"#/components/schemas/blockContent\"\n              checked:\n                description: Whether the to_do is checked or not\n                type: boolean\n              content:\n                description: Content of a block element\n                type: string",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/notion/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/notion/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}