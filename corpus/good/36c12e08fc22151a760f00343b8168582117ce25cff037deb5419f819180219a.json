{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/342apps/teleinfokit"
		},
		"file": {
			"name": "TeleInfoKit-openapi.v1.yaml",
			"size": 0,
			"path": "doc/TeleInfoKit-openapi.v1.yaml",
			"byteSize": 17263,
			"content": "openapi: 3.0.0\ninfo:\n  title: TeleInfoKit data\n  version: '1.0'\n  description: Cette API permet d'accéder au données de télé-information reçues par le module TeleInfoKit. Le dashboard fourni utilise ces APIs pour alimenter les graphiques.\nservers:\n  - url: 'http://TeleInfoKit_xxxxxxxx:80'\npaths:\n  /history:\n    get:\n      summary: history\n      security:\n        - BasicHTTP: []\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  historyStartupTime:\n                    type: number\n                    description: Timestamp (UTC) de départ des données de l'index 0.\n                  history_hp:\n                    type: array\n                    minItems: 24\n                    description: 'Historique des consommations en heures pleines sur les dernières 24h. Unités : Watt.heure (Wh). Seulement avec abonnement HP/HC, valeurs à 0 sinon.'\n                    maxItems: 24\n                    items:\n                      type: integer\n                  history_hc:\n                    type: array\n                    minItems: 24\n                    description: 'Historique des consommations en heures creuses sur les dernières 24h. Unités : Watt.heure (Wh). Seulement avec abonnement HP/HC, valeurs à 0 sinon.'\n                    maxItems: 24\n                    items:\n                      type: integer\n                  history_base:\n                    type: array\n                    minItems: 24\n                    description: 'Historique des consommations de l''index BASE sur les dernières 24h. Unités : Watt.heure (Wh). Seulement avec abonnement simple tarif, valeurs à 0 sinon.'\n                    maxItems: 24\n                    items:\n                      type: integer\n                required:\n                  - historyStartupTime\n                  - history_hp\n                  - history_hc\n              examples:\n                Example:\n                  value:\n                    historyStartupTime: 1605564000\n                    history_hp:\n                      - 270\n                      - 338\n                      - 486\n                      - 594\n                      - 1201\n                      - 899\n                      - 704\n                      - 857\n                      - 123\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 569\n                      - 458\n                      - 342\n                    history_hc:\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 74\n                      - 189\n                      - 236\n                      - 418\n                      - 517\n                      - 413\n                      - 450\n                      - 419\n                      - 324\n                      - 358\n                      - 36\n                      - 0\n                      - 0\n                    history_base:\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n                      - 0\n      operationId: get-history\n      description: |-\n        Le endpoint `history` donne un tableau de l'historique de la consommation enregistrée par le module TeleInfoKit sur une période de 24h ainsi qu'un horodatage de la donnée de départ. Les consommations 'heures pleines' / 'heures creuses' sont dissociées. En cas d'abonnement simple tarif seuls les index BASE sont renseignés.\n\n        L'index 0 des tableaux `history_hp` et `history_hc` (et `history_base` pour le simple tarif) contient la consommation de l'heure en cours. Les index suivants contiennent les consommations des heures précédentes. L'index 0 évolue constamment, à mesure que la consommation augmente sur l'heure courante.\n\n        Les index 1 à 23 ne changent pas, sauf une fois que l'heure en cours est écoulée. Les valeurs des index 0 à 22 sont décalés de 1, la précédente valeur de l'index 23 correspondant à la consommation il y a 24h est perdue. L'index 0 est remis à zéro et reprend son évolution.\n\n        **Note** : au démarrage du module, la valeur de `historyStartupTime` sera l'heure de l'initialisation de la collecte des données (quelques secondes après le démarrage). En fonctionnement nominal, l'index 0 est réinitialisé à l'heure pile. Le champ `historyStartupTime` sera à l'heure de début de la collecte pour l'heure en cours.\n    parameters: []\n  /power:\n    get:\n      summary: power\n      security:\n        - BasicHTTP: []\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  papp:\n                    type: number\n                    description: Puissance apparente arrondi à la dizaine la plus proche. Unité Volt.Ampère (VA)\n                  iinst:\n                    type: number\n                    description: 'Courant efficace. Unités : Ampères (A)'\n                  iinst1:\n                    type: number\n                  iinst2:\n                    type: number\n                  iinst3:\n                    type: number\n                  ptec:\n                    type: string\n                    description: Periode tarifaire en cours\n                    enum:\n                      - HP..\n                      - HC..\n                    minLength: 4\n                    maxLength: 4\n                required:\n                  - papp\n                  - iinst\n                  - ptec\n              examples:\n                Example:\n                  value:\n                    papp: 2560\n                    iinst: 11\n                    iinst1: 0\n                    iinst2: 0\n                    iinst3: 0\n                    ptec: HP..\n      operationId: get-power\n      description: |-\n        Le endpoint `power` donne la consommation courante envoyée par le compteur, ainsi que la période tarifaire en cours. \n\n        Pour l'instensité en monophasé seul le champ iinst est renseigné, les champs iinst1, iinst2 et iinst3 valent 0 ; et inversement en triphasé, iinst vaudra 0.\n\n        Ces données ne sont pas enregistrées par le firmware, mais seulement envoyées par MQTT (voir documentation MQTT).\n    parameters: []\n  /meter:\n    get:\n      summary: meter\n      security:\n        - BasicHTTP: []\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  adc0:\n                    type: string\n                    description: Adresse du compteur\n                    minLength: 12\n                    maxLength: 12\n                  isousc:\n                    type: number\n                    description: Intensité souscrite. Unité Ampère (A)\n                  ptec:\n                    type: string\n                    description: Période Tarifaire en cours\n                    enum:\n                      - HP..\n                      - HC..\n                    minLength: 4\n                    maxLength: 4\n                required:\n                  - adc0\n                  - isousc\n                  - ptec\n              examples:\n                Example:\n                  value:\n                    adc0: '061764019411'\n                    isousc: 45\n                    ptec: HP..\n      operationId: get-meter\n      description: |-\n        Le endpoint `meter` donne les informations générales sur le compteur et l'abonnement.\n\n        Les valeurs de `ptec` peuvent être `HP..` ou `HC..` qui correspondent respectivement à \"Heure Pleine\" et \"Heure Creuse\".\n  /index:\n    get:\n      summary: index\n      security:\n        - BasicHTTP: []\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  hp:\n                    type: number\n                    description: 'Valeur de l''index \"Heures Pleines\". Unité : Watt.heure (Wh)'\n                  hc:\n                    type: number\n                    description: 'Valeur de l''index \"Heures Creuses\". Unité : Watt.heure (Wh)'\n                  base:\n                    type: number\n                    description: 'Valeur de l''index \"Base\". Unité : Watt.heure (Wh). Vaut -1 si pas de valeur dans cet index'\n                required:\n                  - hp\n                  - hc\n                  - base\n              examples:\n                Example:\n                  value:\n                    hp: 12808037\n                    hc: 9587586\n                    base: -1\n      operationId: get-index\n      description: 'Le endpoint `index` donne les valeurs des index \"Heures creuses\", \"Heures Pleines\" et \"Base\" du compteur. Pour les index non renseignés, la valeur vaut -1.'\n  /info:\n    get:\n      summary: info\n      security:\n        - BasicHTTP: []\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  version:\n                    type: string\n                    minLength: 1\n                    description: Version du firmware installé\n                  hw_version:\n                    type: string\n                    example: '2'\n                    description: Version hardware board TeleInfoKit\n                  buildTime:\n                    type: string\n                    minLength: 1\n                    description: Date et heure au format texte de la compilation du firmware installé\n                  ip:\n                    type: string\n                    minLength: 1\n                    description: Adresse IP sur le réseau wifi\n                  gw:\n                    type: string\n                    minLength: 1\n                    description: Passerelle par défaut\n                  nm:\n                    type: string\n                    minLength: 1\n                    description: Masque réseau\n                  ssid:\n                    type: string\n                    minLength: 1\n                    description: SSID du réseau wifi sur lequel le module est connecté\n                  mac:\n                    type: string\n                    minLength: 1\n                    description: Adresse MAC du module ESP-01\n                  signalStrengh:\n                    type: string\n                    minLength: 1\n                    description: 'Qualité du signal reçu par le module ESP-01 (RSSI). Unité : dBm'\n                  chipId:\n                    type: string\n                    minLength: 1\n                    description: Id du chip ESP8266\n                  flashChipId:\n                    type: string\n                    minLength: 1\n                    description: ID du chip de mémoire flash\n                  flashChipSize:\n                    type: string\n                    minLength: 1\n                    description: 'Taille de la mémoire flash déterminé par le firmware. Unité : octets'\n                  flashChipRealSize:\n                    type: string\n                    minLength: 1\n                    description: 'Taille détectée de la mémoire flash. Unité : octets'\n                  freeHeap:\n                    type: string\n                    minLength: 1\n                    description: 'Quantité de mémoire libre dans le heap (tas). Unité : octets'\n                  startupTime:\n                    type: integer\n                    description: Timestamp (UTC) de démarrage du module\n                required:\n                  - version\n                  - hw_version\n                  - buildTime\n                  - ip\n                  - gw\n                  - nm\n                  - ssid\n                  - mac\n                  - signalStrengh\n                  - chipId\n                  - flashChipId\n                  - flashChipSize\n                  - flashChipRealSize\n                  - freeHeap\n                  - startupTime\n              examples:\n                Example:\n                  value:\n                    version: v0.1.0.04bf42\n                    hw_version: '2'\n                    buildTime: '2020-11-18 23:46:56.881970'\n                    ip: 192.168.3.62\n                    gw: 192.168.3.1\n                    nm: 255.255.255.0\n                    ssid: MyWifiNetwork\n                    mac: 'DC:4F:22:84:78:7C'\n                    signalStrengh: '-68'\n                    chipId: '7879544'\n                    flashChipId: '1335929'\n                    flashChipSize: '1048576'\n                    flashChipRealSize: '1048576'\n                    freeHeap: '33120'\n                    startupTime: 1605545601\n      operationId: get-info\n      description: |-\n        Le endpoint `info` donne des informations sur la connection réseau wifi, et du chip ESP-01 utilisé dans le module TeleInfoKit.\n\n        Tant que le module est connecté au réseau wifi, les valeurs ne changeront pas, à l'exception de `signalStrengh` et `freeHeap`.\n\n        Afin de connaitre l'heure de démarrage, le firmware se synchronise avec un serveur NTP. Si le réseau wifi auquel le module est connecté n'a pas accès à internet, cette valeur vaudra 0.\n  /config:\n    get:\n      summary: config\n      security:\n        - BasicHTTP: []\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  mqttServer:\n                    type: string\n                    minLength: 1\n                    description: Adresse IP du serveur MQTT configuré à l'initialisation\n                  mqttPort:\n                    type: string\n                    minLength: 1\n                    description: Port du serveur MQTT configuré à l'initialisation\n                  mqttUsername:\n                    type: string\n                    minLength: 1\n                    description: Nom d'utilisateur pour la connexion au serveur MQTT configuré à l'initialisation\n                  httpUsername:\n                    type: string\n                    minLength: 1\n                    description: Username de l'autentification basic HTTP\n                  delayPower:\n                    type: integer\n                    minimum: 0\n                    description: Delai en secondes entre les envois des données de puissance (PAPP et IINST)\n                  delayIndex:\n                    type: integer\n                    minimum: 0\n                    description: Delai en secondes entre les envois des données d'index (HPHP et HCHC)\n                required:\n                  - mqttServer\n                  - mqttPort\n                  - mqttUsername\n                  - httpUsername\n                  - delayPower\n                  - delayIndex\n              examples:\n                Example:\n                  value:\n                    mqttServer: 192.168.3.3\n                    mqttPort: '1883'\n                    mqttUsername: mqttUser\n                    httpUsername: admin\n                    delayPower: 15\n                    delayIndex: 60\n      operationId: get-config\n      description: |-\n        Le endpoint `config` permet de visualiser la configuration MQTT enregistrée à l'initialisation. Le mot de passe n'est pas connu du serveur HTTP donc n'est pas renvoyé.\n\n        Il n'est pas possible de modifier ces valeurs en dehors de la réinitialisation via l'écran du module TeleInfoKit pour des raisons de sécurité des données.\ncomponents:\n  schemas: {}\n  securitySchemes:\n    BasicHTTP:\n      type: http\n      scheme: basic\n      description: Basic HTTP authentication for all endpoints\n",
			"canonicalURL": "/github.com/342apps/teleinfokit@8acb0e456b65fa784331fa348205d1ae5be48807/-/blob/doc/TeleInfoKit-openapi.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/342apps/teleinfokit/blob/8acb0e456b65fa784331fa348205d1ae5be48807/doc/TeleInfoKit-openapi.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}