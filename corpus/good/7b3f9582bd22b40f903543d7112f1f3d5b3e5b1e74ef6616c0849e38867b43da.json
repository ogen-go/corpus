{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Veridax/privapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/adyen.com/PaymentService/30/openapi.yaml",
			"byteSize": 48790,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30'\ninfo:\n  contact:\n    x-twitter: Adyen\n  description: 'A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods. For more information, refer to [Ecommerce integration](https://docs.adyen.com/developers/ecommerce-integration).'\n  title: Adyen Payment Service\n  version: '30'\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: 'https://twitter.com/Adyen/profile_image?size=original'\n  x-origin:\n    - converter:\n        url: 'https://github.com/lucybot/api-spec-converter'\n        version: 2.6.2\n      format: openapi\n      url: 'https://raw.githubusercontent.com/adyen/adyen-openapi/master/specs/3.0/PaymentService-V30.json'\n      version: '3.0'\n  x-preferred: true\n  x-providerName: adyen.com\n  x-serviceName: PaymentService\npaths:\n  /adjustAuthorisation:\n    post:\n      description: |-\n        Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables tipping, improving the chances your authorisation will be valid, charging the shopper when they have already left the merchant premises, etc.\n\n        For more information, refer to [Adjust Authorisation](https://docs.adyen.com/developers/payment-modifications#adjustauthorisation).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModificationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModificationResult'\n          description: OK - the request has succeeded.\n        '400':\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Adjust the authorised amount\n      x-groupName: Modifications\n      x-sortIndex: 5\n  /authorise:\n    post:\n      description: |-\n        Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n\n        For more information, refer to [Ecommerce quick integration](https://docs.adyen.com/developers/ecommerce-integration).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentResult'\n          description: OK - the request has succeeded.\n        '400':\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Create a payment authorisation\n      x-groupName: General\n      x-sortIndex: 1\n  /authorise3d:\n    post:\n      description: |-\n        For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n        For more information, refer to [3D Secure](https://docs.adyen.com/developers/risk-management/3d-secure).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentRequest3d'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentResult'\n          description: OK - the request has succeeded.\n        '400':\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Complete a 3D Secure payment authorisation\n      x-groupName: General\n      x-sortIndex: 2\n  /cancel:\n    post:\n      description: |-\n        Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\n        For more information, refer to [Cancel](https://docs.adyen.com/developers/payment-modifications#cancel).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModificationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModificationResult'\n          description: OK - the request has succeeded.\n        '400':\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Cancel a payment authorisation\n      x-groupName: Modifications\n      x-sortIndex: 2\n  /cancelOrRefund:\n    post:\n      description: |-\n        Cancels a payment if it has not yet been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\n        For more information, refer to [Cancel or refund](https://docs.adyen.com/developers/payment-modifications#cancelorrefund).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModificationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModificationResult'\n          description: OK - the request has succeeded.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Cancel or refund a payment\n      x-groupName: Modifications\n      x-sortIndex: 4\n  /capture:\n    post:\n      description: |-\n        Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\n        Payment methods, which automatically capture as part of authorisation, don't need to be captured, but submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\n        For more information, refer to [Capture](https://docs.adyen.com/developers/payment-modifications#capture).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModificationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModificationResult'\n          description: OK - the request has succeeded.\n        '400':\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Capture a payment authorisation\n      x-groupName: Modifications\n      x-sortIndex: 1\n  /refund:\n    post:\n      description: |-\n        Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\n        \u003e Some payment methods/gateways do not support partial/multiple refunds.\n        \u003e A margin above the captured limit can be configured to cover shipping/handling costs.\n\n        For more information, refer to [Refund](https://docs.adyen.com/developers/payment-modifications#refund).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModificationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModificationResult'\n          description: OK - the request has succeeded.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Refund a payment\n      x-groupName: Modifications\n      x-sortIndex: 3\ncomponents:\n  schemas:\n    Address:\n      properties:\n        city:\n          description: The city name.\n          type: string\n        country:\n          description: A valid value is an ISO two-character country code (e.g. 'NL').\n          type: string\n        houseNumberOrName:\n          description: The house number or name.\n          type: string\n        postalCode:\n          description: The postal code with a maximum of 5 characters for USA and maximum of 10 characters for any other country.\n          type: string\n        stateOrProvince:\n          description: 'For USA or Canada, a valid 2-character abbreviation for the state or province respectively. For other countries any abbreviation with maximum 3 characters for the state or province.'\n          type: string\n        street:\n          description: |\n            The street name.\n            \u003e Don't append the house number to this field. Instead, pass the house number separately as `houseNumberOrName`.\n          type: string\n      required:\n        - street\n        - houseNumberOrName\n        - city\n        - country\n    Amount:\n      properties:\n        currency:\n          description: 'The three-character [ISO currency code](https://docs.adyen.com/developers/currency-codes).'\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: |-\n            The payable amount that can be charged for the transaction.\n\n            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/developers/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    BankAccount:\n      properties:\n        bankAccountNumber:\n          description: The bank account number (without separators).\n          type: string\n        bankCity:\n          description: The bank city.\n          type: string\n        bankLocationId:\n          description: The location id of the bank. The field value is `nil` in most cases.\n          type: string\n        bankName:\n          description: The name of the bank.\n          type: string\n        bic:\n          description: 'The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT address assigned to a bank. The field value is `nil` in most cases.'\n          type: string\n        countryCode:\n          description: |-\n            Country code where the bank is located.\n\n            A valid value is an ISO two-character country code (e.g. 'NL').\n          type: string\n        iban:\n          description: 'The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number) (IBAN).'\n          type: string\n        ownerName:\n          description: |-\n            The name of the bank account holder.\n            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:\n            * χ12 is converted to ch12.\n            * üA is converted to euA.\n            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\n            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:\n            * John17 - allowed.\n            * J17 - allowed.\n            * 171 - not allowed.\n            * John-7 - allowed.\n            \u003e If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.\n          type: string\n        taxId:\n          description: The bank account holder's tax ID.\n          type: string\n    BrowserInfo:\n      properties:\n        acceptHeader:\n          description: The accept header value of the shopper's browser.\n          maxLength: 50\n          minLength: 10\n          type: string\n        userAgent:\n          description: The user agent value of the shopper's browser.\n          maxLength: 50\n          minLength: 10\n          type: string\n      required:\n        - userAgent\n        - acceptHeader\n    Card:\n      properties:\n        cvc:\n          description: |-\n            The [card verification code](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid) (1-20 characters). Depending on the card brand, it is known also as:\n            * CVV2/CVC2 – length: 3 digits\n            * CID – length: 4 digits\n            \u003e If you are using [Client-Side Encryption](https://docs.adyen.com/developers/ecommerce-integration), the CVC code is present in the encrypted data. You must never post the card details to the server.\n            \u003e This field must be always present in a [one-click payment request](https://docs.adyen.com/developers/features/recurring-payments).\n            \u003e When this value is returned in a response, it is always empty because it is not stored.\n          maxLength: 20\n          minLength: 1\n          type: string\n        expiryMonth:\n          description: |-\n            The card expiry month.\n            Format: 2 digits, zero-padded for single digits. For example:\n            * 03 = March\n            * 11 = November\n          maxLength: 2\n          minLength: 1\n          type: string\n        expiryYear:\n          description: |-\n            The card expiry year.\n            Format: 4 digits. For example: 2018\n          maxLength: 4\n          minLength: 4\n          type: string\n        holderName:\n          description: 'The name of the cardholder, as printed on the card.'\n          maxLength: 50\n          minLength: 1\n          type: string\n        issueNumber:\n          description: The issue number of the card (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        number:\n          description: |-\n            The card number (4-19 characters). Do not use any separators.\n            When this value is returned in a response, only the last 4 digits of the card number are returned.\n          maxLength: 19\n          minLength: 4\n          type: string\n        startMonth:\n          description: The month component of the start date (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        startYear:\n          description: The year component of the start date (for some UK debit cards only).\n          maxLength: 4\n          minLength: 4\n          type: string\n      required:\n        - number\n        - expiryMonth\n        - expiryYear\n        - holderName\n    Collection: {}\n    ForexQuote:\n      properties:\n        account:\n          description: The account name.\n          type: string\n        accountType:\n          description: The account type.\n          type: string\n        baseAmount:\n          $ref: '#/components/schemas/Amount'\n          description: The base amount.\n        basePoints:\n          description: The base points.\n          format: int32\n          type: integer\n        buy:\n          $ref: '#/components/schemas/Amount'\n          description: The buy rate.\n        interbank:\n          $ref: '#/components/schemas/Amount'\n          description: The interbank amount.\n        reference:\n          description: The reference assigned to the forex quote request.\n          type: string\n        sell:\n          $ref: '#/components/schemas/Amount'\n          description: The sell rate.\n        signature:\n          description: The signature to validate the integrity.\n          type: string\n        source:\n          description: The source of the forex quote.\n          type: string\n        type:\n          description: The type of forex.\n          type: string\n        validTill:\n          description: The date until which the forex quote is valid.\n          format: date-time\n          type: string\n      required:\n        - validTill\n        - basePoints\n    FraudResult:\n      properties:\n        accountScore:\n          description: The total fraud score generated by the risk checks.\n          format: int32\n          type: integer\n        results:\n          $ref: '#/components/schemas/Collection'\n          description: The result of the individual risk checks.\n      required:\n        - accountScore\n    Installments:\n      properties:\n        value:\n          description: |-\n            Defines the number of installments. Its value needs to be greater than zero.\n\n            Usually, the maximum allowed number of installments is capped. For example, it may not be possible to split a payment in more than 24 installments. The acquirer sets this upper limit, so its value may vary.\n          format: int32\n          type: integer\n      required:\n        - value\n    ModificationRequest:\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          description: 'This field contains additional data, which may be required for a particular payment request.'\n          type: object\n        authorisationCode:\n          description: The authorisation code of the payment (only required for the \"authoriseReferral\" method).\n          type: string\n        merchantAccount:\n          description: The merchant account that is used to process the payment.\n          type: string\n        modificationAmount:\n          $ref: '#/components/schemas/Amount'\n          description: 'The amount that needs to be captured/refunded. Required for `/capture` and `/refund`, not allowed for `/cancel`. The `currency` must match the currency used in authorisation, the `value` must be smaller than or equal to the authorised amount.'\n        originalMerchantReference:\n          description: The original merchant reference to cancel.\n          type: string\n        originalReference:\n          description: |-\n            The original pspReference of the payment to modify.\n            This reference is returned in:\n            * authorisation response\n            * authorisation notification\n          type: string\n        reference:\n          description: |-\n            Optionally, you can specify your reference for the payment modification. This reference is visible in Customer Area and in reports.\n            Maximum length: 80 characters.\n          type: string\n        tenderReference:\n          description: The transaction reference provided by the PED. For Point-of-sale integrations only.\n          type: string\n        uniqueTerminalId:\n          description: Unique terminal ID for the PED that originally processed the request. For Point-of-sale integrations only.\n          type: string\n      required:\n        - merchantAccount\n        - originalReference\n    ModificationResult:\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          description: 'This field contains additional data, which may be returned in a particular modification response.'\n          type: object\n        pspReference:\n          description: Adyen's 16-digit unique reference associated with the transaction/the request. This value is globally unique; quote it when communicating with us about this request.\n          type: string\n        response:\n          description: Indicates if the modification request has been received for processing.\n          enum:\n            - '[capture-received]'\n            - '[cancel-received]'\n            - '[refund-received]'\n            - '[cancelOrRefund-received]'\n          type: string\n    Name:\n      properties:\n        firstName:\n          description: A person's first name.\n          type: string\n        gender:\n          description: A person's gender (can be unknown).\n          enum:\n            - MALE\n            - FEMALE\n            - UNKNOWN\n          maxLength: 1\n          minLength: 1\n          type: string\n        infix:\n          description: 'A person name''s infix, if applicable. Maximum length: 20 characters.'\n          type: string\n        lastName:\n          description: A person's last name.\n          type: string\n      required:\n        - firstName\n        - lastName\n        - gender\n    PaymentRequest:\n      properties:\n        additionalAmount:\n          $ref: '#/components/schemas/Amount'\n          description: |-\n            If you want a [BIN or card verification](https://docs.adyen.com/developers/ecommerce-integration/cards/bin-data-and-card-verification) request to use a non-zero value, assign this value to `additionalAmount` (while the amount must be still set to 0 to trigger BIN or card verification).\n            Required to be in the same currency as the `amount`.\n        additionalData:\n          additionalProperties:\n            type: string\n          description: |-\n            This field contains additional data, which may be required for a particular payment request.\n\n            The `additionalData` object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to the [additionalData section](https://docs.adyen.com/developers/api-reference/payments-api#paymentrequestadditionaldata).\n          type: object\n        amount:\n          $ref: '#/components/schemas/Amount'\n          description: 'The amount information for the transaction. For [BIN or card verification](https://docs.adyen.com/developers/ecommerce-integration/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).'\n        bankAccount:\n          $ref: '#/components/schemas/BankAccount'\n          description: |-\n            The details of the bank account, from which the payment should be made.\n            \u003e Either `bankAccount` or `card` field must be provided in a payment request.\n        billingAddress:\n          $ref: '#/components/schemas/Address'\n          description: The address where to send the invoice.\n        browserInfo:\n          $ref: '#/components/schemas/BrowserInfo'\n          description: The shopper's browser information.\n        captureDelayHours:\n          description: 'The delay between the authorisation and scheduled auto-capture, specified in hours.'\n          format: int32\n          type: integer\n        card:\n          $ref: '#/components/schemas/Card'\n          description: |-\n            A container for card data.\n            \u003e Either `bankAccount` or `card` field must be provided in a payment request.\n        dateOfBirth:\n          description: |-\n            The shopper's date of birth.\n\n            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD\n          format: date-time\n          type: string\n        dccQuote:\n          $ref: '#/components/schemas/ForexQuote'\n          description: The forex quote as returned in the response of the forex service.\n        deliveryAddress:\n          $ref: '#/components/schemas/Address'\n          description: The address where the purchased goods should be delivered.\n        deliveryDate:\n          description: |-\n            The date and time the purchased goods should be delivered.\n\n            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD\n\n            Example: 2017-07-17T13:42:40.428+01:00\n          format: date-time\n          type: string\n        deviceFingerprint:\n          description: 'A string containing the shopper''s device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/developers/risk-management/device-fingerprinting).'\n          type: string\n        entityType:\n          description: The type of the entity the payment is processed for.\n          enum:\n            - NaturalPerson\n            - CompanyName\n          type: string\n        fraudOffset:\n          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.\n          format: int32\n          type: integer\n        installments:\n          $ref: '#/components/schemas/Installments'\n          description: 'Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/developers/payment-methods/installment-payments).'\n        mcc:\n          description: 'The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.'\n          type: string\n        merchantAccount:\n          description: 'The merchant account identifier, with which you want to process the transaction.'\n          type: string\n        merchantOrderReference:\n          description: |-\n            This reference allows linking multiple transactions to each other.\n            \u003e When providing the `merchantOrderReference` value, we also recommend you submit `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values.\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: |-\n            Metadata consists of entries, each of which includes a key and a value.\n            Limitations: Error \"177\", \"Metadata size exceeds limit\"\n          type: object\n        mpiData:\n          $ref: '#/components/schemas/ThreeDSecureData'\n          description: Authentication data produced by an MPI (Mastercard SecureCode or Verified By Visa).\n        nationality:\n          description: The two-character country code of the shopper's nationality.\n          maxLength: 2\n          type: string\n        orderReference:\n          description: The order reference to link multiple partial payments.\n          type: string\n        recurring:\n          $ref: '#/components/schemas/Recurring'\n          description: 'The recurring settings for the payment. Use this property when you want to enable [recurring payments](https://docs.adyen.com/developers/features/recurring-payments).'\n        recurringProcessingModel:\n          description: |-\n            Defines a recurring payment type.\n            Allowed values:\n            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.\n            * `CardOnFile` – Card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.\n          enum:\n            - CardOnFile\n            - Subscription\n          type: string\n        reference:\n          description: |-\n            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.\n            If you need to provide multiple references for a transaction, separate them with hyphens (\"-\").\n            Maximum length: 80 characters.\n          type: string\n        selectedBrand:\n          description: |-\n            Some payment methods require defining a value for this field to specify how to process the transaction.\n\n            For the Bancontact payment method, it can be set to:\n            * `maestro` (default), to be processed like a Maestro card, or\n            * `bcmc`, to be processed like a Bancontact card.\n          type: string\n        selectedRecurringDetailReference:\n          description: The `recurringDetailReference` you want to use for this payment. The value `LATEST` can be used to select the most recently stored recurring detail.\n          type: string\n        sessionId:\n          description: A session ID used to identify a payment session.\n          type: string\n        shopperEmail:\n          description: 'The shopper''s email address. We recommend that you provide this data, as it is used in velocity fraud checks.'\n          type: string\n        shopperIP:\n          description: |-\n            The shopper's IP address. We recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).\n            \u003e This field is mandatory for some merchants depending on your business model. Contact Adyen Support for more information.\n          type: string\n        shopperInteraction:\n          description: |-\n            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.\n            For the web service API, Adyen assumes Ecommerce shopper interaction by default.\n\n            This field has the following possible values:\n            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.\n            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).\n            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.\n            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.\n          enum:\n            - Ecommerce\n            - ContAuth\n            - Moto\n            - POS\n          type: string\n        shopperLocale:\n          description: The combination of a language code and a country code to specify the language to be used in the payment.\n          type: string\n        shopperName:\n          $ref: '#/components/schemas/Name'\n          description: The shopper's full name and gender (if specified).\n        shopperReference:\n          description: |-\n            The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).\n            \u003e This field is required for recurring payments.\n          type: string\n        shopperStatement:\n          description: The text to appear on the shopper's bank statement.\n          type: string\n        socialSecurityNumber:\n          description: The shopper's social security number.\n          type: string\n        store:\n          description: 'The physical store, for which this payment is processed.'\n          maxLength: 16\n          minLength: 1\n          type: string\n        telephoneNumber:\n          description: The shopper's telephone number.\n          type: string\n        totalsGroup:\n          description: 'The reference value to aggregate sales totals in reporting. When not specified, the store field is used (if available).'\n          maxLength: 16\n          minLength: 1\n          type: string\n      required:\n        - merchantAccount\n        - reference\n        - amount\n    PaymentRequest3d:\n      properties:\n        additionalAmount:\n          $ref: '#/components/schemas/Amount'\n          description: |-\n            If you want a [BIN or card verification](https://docs.adyen.com/developers/ecommerce-integration/cards/bin-data-and-card-verification) request to use a non-zero value, assign this value to `additionalAmount` (while the amount must be still set to 0 to trigger BIN or card verification).\n            Required to be in the same currency as the `amount`.\n        additionalData:\n          additionalProperties:\n            type: string\n          description: |-\n            This field contains additional data, which may be required for a particular payment request.\n\n            The `additionalData` object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to the [additionalData section](https://docs.adyen.com/developers/api-reference/payments-api#paymentrequestadditionaldata).\n          type: object\n        amount:\n          $ref: '#/components/schemas/Amount'\n          description: 'The amount information for the transaction. For [BIN or card verification](https://docs.adyen.com/developers/ecommerce-integration/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).'\n        billingAddress:\n          $ref: '#/components/schemas/Address'\n          description: The address where to send the invoice.\n        browserInfo:\n          $ref: '#/components/schemas/BrowserInfo'\n          description: The shopper's browser information.\n        captureDelayHours:\n          description: 'The delay between the authorisation and scheduled auto-capture, specified in hours.'\n          format: int32\n          type: integer\n        dateOfBirth:\n          description: |-\n            The shopper's date of birth.\n\n            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD\n          format: date-time\n          type: string\n        dccQuote:\n          $ref: '#/components/schemas/ForexQuote'\n          description: The forex quote as returned in the response of the forex service.\n        deliveryAddress:\n          $ref: '#/components/schemas/Address'\n          description: The address where the purchased goods should be delivered.\n        deliveryDate:\n          description: |-\n            The date and time the purchased goods should be delivered.\n\n            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD\n\n            Example: 2017-07-17T13:42:40.428+01:00\n          format: date-time\n          type: string\n        deviceFingerprint:\n          description: 'A string containing the shopper''s device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/developers/risk-management/device-fingerprinting).'\n          type: string\n        fraudOffset:\n          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.\n          format: int32\n          type: integer\n        installments:\n          $ref: '#/components/schemas/Installments'\n          description: 'Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/developers/payment-methods/installment-payments).'\n        mcc:\n          description: 'The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.'\n          type: string\n        md:\n          description: The payment session identifier returned by the card issuer.\n          type: string\n        merchantAccount:\n          description: 'The merchant account identifier, with which you want to process the transaction.'\n          type: string\n        merchantOrderReference:\n          description: |-\n            This reference allows linking multiple transactions to each other.\n            \u003e When providing the `merchantOrderReference` value, we also recommend you submit `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values.\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: |-\n            Metadata consists of entries, each of which includes a key and a value.\n            Limitations: Error \"177\", \"Metadata size exceeds limit\"\n          type: object\n        orderReference:\n          description: The order reference to link multiple partial payments.\n          type: string\n        paResponse:\n          description: Payment authorisation response returned by the card issuer. The `paResponse` field holds the PaRes value received from the card issuer.\n          type: string\n        recurring:\n          $ref: '#/components/schemas/Recurring'\n          description: 'The recurring settings for the payment. Use this property when you want to enable [recurring payments](https://docs.adyen.com/developers/features/recurring-payments).'\n        recurringProcessingModel:\n          description: |-\n            Defines a recurring payment type.\n            Allowed values:\n            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.\n            * `CardOnFile` – Card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.\n          enum:\n            - CardOnFile\n            - Subscription\n          type: string\n        reference:\n          description: |-\n            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.\n            If you need to provide multiple references for a transaction, separate them with hyphens (\"-\").\n            Maximum length: 80 characters.\n          type: string\n        selectedBrand:\n          description: |-\n            Some payment methods require defining a value for this field to specify how to process the transaction.\n\n            For the Bancontact payment method, it can be set to:\n            * `maestro` (default), to be processed like a Maestro card, or\n            * `bcmc`, to be processed like a Bancontact card.\n          type: string\n        selectedRecurringDetailReference:\n          description: The `recurringDetailReference` you want to use for this payment. The value `LATEST` can be used to select the most recently stored recurring detail.\n          type: string\n        sessionId:\n          description: A session ID used to identify a payment session.\n          type: string\n        shopperEmail:\n          description: 'The shopper''s email address. We recommend that you provide this data, as it is used in velocity fraud checks.'\n          type: string\n        shopperIP:\n          description: |-\n            The shopper's IP address. We recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).\n            \u003e This field is mandatory for some merchants depending on your business model. Contact Adyen Support for more information.\n          type: string\n        shopperInteraction:\n          description: |-\n            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.\n            For the web service API, Adyen assumes Ecommerce shopper interaction by default.\n\n            This field has the following possible values:\n            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.\n            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).\n            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.\n            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.\n          enum:\n            - Ecommerce\n            - ContAuth\n            - Moto\n            - POS\n          type: string\n        shopperLocale:\n          description: The combination of a language code and a country code to specify the language to be used in the payment.\n          type: string\n        shopperName:\n          $ref: '#/components/schemas/Name'\n          description: The shopper's full name and gender (if specified).\n        shopperReference:\n          description: |-\n            The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).\n            \u003e This field is required for recurring payments.\n          type: string\n        shopperStatement:\n          description: The text to appear on the shopper's bank statement.\n          type: string\n        socialSecurityNumber:\n          description: The shopper's social security number.\n          type: string\n        store:\n          description: 'The physical store, for which this payment is processed.'\n          maxLength: 16\n          minLength: 1\n          type: string\n        telephoneNumber:\n          description: The shopper's telephone number.\n          type: string\n        totalsGroup:\n          description: 'The reference value to aggregate sales totals in reporting. When not specified, the store field is used (if available).'\n          maxLength: 16\n          minLength: 1\n          type: string\n      required:\n        - merchantAccount\n        - reference\n        - amount\n        - paResponse\n        - md\n    PaymentResult:\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          description: 'This field contains additional data, which may be required to return in a particular payment response. To choose data fields to be returned, go to **Customer Area** \u003e **Settings** \u003e **API and Response**.'\n          type: object\n        authCode:\n          description: |-\n            Authorisation code:\n            * When the payment is authorised successfully, this field holds the authorisation code for the payment.\n            * When the payment is not authorised, this field is empty.\n          type: string\n        dccAmount:\n          $ref: '#/components/schemas/Amount'\n          description: |-\n            Includes the currency of the conversion and the value of the transaction.\n            \u003e This value only applies if you have implemented Dynamic Currency Conversion. For more information, contact Support.\n        dccSignature:\n          description: |-\n            Cryptographic signature used to verify `dccQuote`.\n            \u003e This value only applies if you have implemented Dynamic Currency Conversion. For more information, contact Support.\n          type: string\n        fraudResult:\n          $ref: '#/components/schemas/FraudResult'\n          description: The fraud result properties of the payment.\n        issuerUrl:\n          description: |-\n            The URL to direct the shopper to.\n            \u003e In case of SecurePlus, do not redirect a shopper to this URL.\n          type: string\n        md:\n          description: The payment session.\n          type: string\n        paRequest:\n          description: |-\n            The 3D request data for the issuer.\n\n            If the value is **CUPSecurePlus-CollectSMSVerificationCode**, collect an SMS code from the shopper and pass it in the `/authorise3D` request. For more information, see [3D Secure](https://docs.adyen.com/developers/risk-management/3d-secure).\n          type: string\n        pspReference:\n          description: Adyen's 16-digit unique reference associated with the transaction/the request. This value is globally unique; quote it when communicating with us about this request.\n          type: string\n        refusalReason:\n          description: |-\n            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error.\n\n            When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.\n          type: string\n        resultCode:\n          description: The result of the payment.\n          enum:\n            - Authorised\n            - PartiallyAuthorised\n            - Refused\n            - Error\n            - Cancelled\n            - Received\n            - RedirectShopper\n          type: string\n    Recurring:\n      properties:\n        contract:\n          description: |-\n            The type of recurring contract to be used.\n            Possible values:\n            * `ONECLICK` – The shopper opts to store their card details for future use. The shopper is present for the subsequent transaction, for cards the security code (CVC/CVV) is required.\n            * `RECURRING` – Payment details are stored for future use. For cards, the security code (CVC/CVV) is not required for subsequent payments. This is used for shopper not present transactions.\n            * `ONECLICK,RECURRING` – Payment details are stored for future use. This allows the use of the stored payment details regardless of whether the shopper is on your site or not.\n          enum:\n            - ONECLICK\n            - RECURRING\n            - PAYOUT\n          type: string\n        recurringDetailName:\n          description: A descriptive name for this detail.\n          type: string\n        tokenService:\n          description: The name of the token service.\n          enum:\n            - VISATOKENSERVICE\n          type: string\n    ThreeDSecureData:\n      properties:\n        authenticationResponse:\n          description: The authentication response if the shopper was redirected.\n          enum:\n            - 'Y'\n            - 'N'\n            - U\n            - A\n          type: string\n        cavv:\n          description: 'The cardholder authentication value (base64 encoded, 20 bytes in a decoded form).'\n          format: byte\n          type: string\n        cavvAlgorithm:\n          description: The CAVV algorithm used.\n          type: string\n        directoryResponse:\n          description: The enrollment response from the 3D directory server.\n          enum:\n            - 'Y'\n            - 'N'\n            - U\n            - E\n          type: string\n        eci:\n          description: The electronic commerce indicator.\n          type: string\n        xid:\n          description: 'The transaction identifier (base64 encoded, 20 bytes in a decoded form).'\n          format: byte\n          type: string\nx-groups:\n  - General\n  - Modifications\n",
			"canonicalURL": "/github.com/Veridax/privapi@fd528906df6bae10312f040bd4e8b8469ad3ef3f/-/blob/APIs/adyen.com/PaymentService/30/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Veridax/privapi/blob/fd528906df6bae10312f040bd4e8b8469ad3ef3f/APIs/adyen.com/PaymentService/30/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}