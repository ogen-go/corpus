{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/samchon/nestia"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "demo/simple/swagger.json",
			"byteSize": 6201,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"servers\": [\n    {\n      \"url\": \"https://github.com/samchon/nestia\",\n      \"description\": \"insert your server url\"\n    }\n  ],\n  \"info\": {\n    \"version\": \"0.1.0\",\n    \"title\": \"Generated by nestia - https://github.com/samchon/nestia\"\n  },\n  \"paths\": {\n    \"/consumers/{section}/sales/{saleId}/articles/{articleId}/comments\": {\n      \"post\": {\n        \"tags\": [],\n        \"parameters\": [\n          {\n            \"name\": \"section\",\n            \"in\": \"path\",\n            \"description\": \"Code of the target section\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": false\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"saleId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the target sale\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"nullable\": false\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"articleId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the target article\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"nullable\": false\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Content to write\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ISaleArticleComment.IStore\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Newly archived comment\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ISaleArticleComment\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad request error when type of the input data is not valid\"\n          },\n          \"401\": {\n            \"description\": \"unauthorized error when you've not logged in yet\"\n          },\n          \"403\": {\n            \"description\": \"forbidden error when you're a seller and the sale is not yours\"\n          },\n          \"404\": {\n            \"description\": \"not found error when unable to find the matched record\"\n          }\n        },\n        \"description\": \"Store a new comment.\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ISaleArticleComment.IStore\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"type\": \"string\",\n            \"nullable\": false,\n            \"description\": \"Body of the content.\"\n          },\n          \"extension\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"html\",\n              \"md\",\n              \"txt\"\n            ],\n            \"nullable\": false,\n            \"description\": \"Extension, content type (format).\"\n          },\n          \"annonymous\": {\n            \"type\": \"boolean\",\n            \"enum\": [\n              false,\n              true\n            ],\n            \"nullable\": false,\n            \"description\": \"Whether to hide the writer name or not.\"\n          }\n        },\n        \"nullable\": false,\n        \"required\": [\n          \"body\",\n          \"extension\",\n          \"annonymous\"\n        ],\n        \"description\": \"Store info.\"\n      },\n      \"ISaleArticleComment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\",\n            \"nullable\": false,\n            \"description\": \"Primary Key.\"\n          },\n          \"parent_id\": {\n            \"type\": \"number\",\n            \"nullable\": true,\n            \"description\": \"Parent comment ID.\\n\\nOnly When this comment has been written as a reply.\"\n          },\n          \"writer_type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"seller\",\n              \"consumer\"\n            ],\n            \"nullable\": false,\n            \"description\": \"Type of the writer.\"\n          },\n          \"writer_name\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"Name of the writer.\\n\\nWhen this is a type of anonymous comment, writer name would be hidden.\"\n          },\n          \"contents\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ISaleArticleComment.IContent\"\n            },\n            \"nullable\": false,\n            \"description\": \"Contents of the comments.\\n\\nWhen the comment writer tries to modify content, it would not modify the comment\\ncontent but would be accumulated. Therefore, all of the people can read how\\nthe content has been changed.\"\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"nullable\": false,\n            \"description\": \"Creation time.\"\n          }\n        },\n        \"nullable\": false,\n        \"required\": [\n          \"id\",\n          \"parent_id\",\n          \"writer_type\",\n          \"writer_name\",\n          \"contents\",\n          \"created_at\"\n        ],\n        \"description\": \"Comment wrote on a sale related article.\\n\\nWhen an article of a sale has been enrolled, all of the participants like consumers and\\nsellers can write a comment on that article. However, when the writer is a consumer, the\\nconsumer can hide its name through the annoymous option. \\n\\nAlso, writing a reply comment for a specific comment is possible and in that case, the \\n{@link ISaleArticleComment.parent_id} property would be activated.\"\n      },\n      \"ISaleArticleComment.IContent\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"nullable\": false,\n            \"description\": \"Primary Key.\"\n          },\n          \"body\": {\n            \"type\": \"string\",\n            \"nullable\": false,\n            \"description\": \"Body of the content.\"\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"nullable\": false,\n            \"description\": \"Creation time.\"\n          }\n        },\n        \"nullable\": false,\n        \"required\": [\n          \"id\",\n          \"body\",\n          \"created_at\"\n        ],\n        \"description\": \"Content info.\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/samchon/nestia@142196421fa1dc1007f6536bec59f27fa1ebef6f/-/blob/demo/simple/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/samchon/nestia/blob/142196421fa1dc1007f6536bec59f27fa1ebef6f/demo/simple/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}