{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/uclouvain/osis"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": "exam_enrollment/schema.yaml",
			"byteSize": 4404,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://{environment}.osis.uclouvain.be/api/v1/exam_enrollment/\n    variables:\n      environment:\n        default: dev\n        enum:\n          - dev # Development server\n          - qa # Staging server\n          - test # Test server\n  - url: https://osis.uclouvain.be/api/v1/exam_enrollment/\n    description: 'Production server'\ninfo:\n  version: '1.0'\n  title: 'Exam Enrollment Service'\n  description: |-\n    A set of API endpoints that allow you to get information about exam enrollment\npaths:\n  /enrollments/{program_acronym}/{year}/{session}/{global_id}/:\n    get:\n      description: 'Return all enrollments for a given program'\n      operationId: enrollments_list\n      parameters:\n        - in: path\n          name: program_acronym\n          required: true\n          description: The program acronym\n          schema:\n            type: string\n            example: \"SINF1BA\"\n        - in: path\n          name: year\n          required: true\n          description: The academic year\n          schema:\n            type: integer\n            example: 2021\n        - in: path\n          name: session\n          required: true\n          description: The exam session\n          schema:\n            type: integer\n            example: 1\n        - in: path\n          name: global_id\n          required: true\n          description: The global id of the student\n          schema:\n            type: string\n            example: \"45879632\"\n        - $ref: '#/components/parameters/Accept-Language'\n        - $ref: '#/components/parameters/X-User-FirstName'\n        - $ref: '#/components/parameters/X-User-LastName'\n        - $ref: '#/components/parameters/X-User-Email'\n        - $ref: '#/components/parameters/X-User-GlobalID'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ExamEnrollment'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      tags:\n        - enrollment\ncomponents:\n  securitySchemes:\n    Token:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Enter your token in the format **Token \u0026lt;token\u003e**\n  parameters:\n    X-User-FirstName:\n      in: header\n      name: X-User-FirstName\n      schema:\n        type: string\n      required: false\n    X-User-LastName:\n      in: header\n      name: X-User-LastName\n      schema:\n        type: string\n      required: false\n    X-User-Email:\n      in: header\n      name: X-User-Email\n      schema:\n        type: string\n      required: false\n    X-User-GlobalID:\n      in: header\n      name: X-User-GlobalID\n      schema:\n        type: string\n      required: false\n    Accept-Language:\n      in: header\n      name: Accept-Language\n      description: \u003e\n        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)\n      schema:\n        $ref: '#/components/schemas/AcceptedLanguageEnum'\n      required: false\n  responses:\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    ExamEnrollment:\n      type: object\n      properties:\n        session_number:\n          type: integer\n          example: 1\n        learning_unit_title:\n          type: string\n          example: \"Cours d'anglais pour PSP11/LOGO11\"\n        learning_unit_code:\n          type: string\n          example: \"LANGL1841\"\n    AcceptedLanguageEnum:\n      type: string\n      enum:\n        - 'en'\n        - 'fr-be'\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\nsecurity:\n  - Token: []\n",
			"canonicalURL": "/github.com/uclouvain/osis@2f6a70d9f81a16d144849b9e01d0f3f6768b8f08/-/blob/exam_enrollment/schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/uclouvain/osis/blob/2f6a70d9f81a16d144849b9e01d0f3f6768b8f08/exam_enrollment/schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}