{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HAECHI-LABS/henesis-wallet-sdk"
		},
		"file": {
			"name": "swagger-spec-v3-litecoin.yaml",
			"size": 0,
			"path": "packages/api-proxy/swagger/swagger-spec-v3-litecoin.yaml",
			"byteSize": 33078,
			"content": "openapi: 3.0.0\ninfo:\n  title: LITECOIN\n  description: Henesis API Proxy - v3 - litecoin OpenAPI Documentation\n  version: '1.0'\n  contact: {}\ntags: []\nservers:\n  - url: http://localhost:3000\ncomponents:\n  schemas:\n    TransactionOutputDto:\n      type: object\n      properties:\n        address:\n          type: string\n          description: 해당 UTXO를 소유한 주소\n          example: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n        amount:\n          type: string\n          description: 'Output에 포함된 암호화폐의 양 (단위: litoshi) (형식: 10진법)'\n          example: '1'\n        transactionId:\n          type: string\n          description: 트랜잭션 ID\n          example: beb70cf0b90afb6683ece78e0dfb4a140cf498310b833eea8092b5edd271e9c3\n        outputIndex:\n          type: number\n          description: 해당 Output이 같은 트랜잭션에 포함된 여러 UTXO 중에 몇 번째 Output인지 나타내는 값\n          example: 0\n        scriptPubKey:\n          type: string\n          description: 트랜잭션 검증을 위한 서명키\n          example: '0xa91400271eec282b0368c3a2948145f7ae034fcd1d0787'\n        isChange:\n          type: boolean\n          description: 전송 후 잔액을 자신의 지갑으로 다시 보내는 Output인가?\n          example: false\n      required:\n        - address\n        - amount\n        - transactionId\n        - outputIndex\n        - scriptPubKey\n        - isChange\n    TransactionDto:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            트랜잭션 ID (Henesis Wallet에서 부여하는 트랜잭션의 고유 ID입니다. 온체인 트랜잭션 해시와 다른\n            개념입니다.)\n          example: beb70cf0b90afb6683ece78e0dfb4a140cf498310b833eea8092b5edd271e9c3\n        transactionHash:\n          type: string\n          description: 온체인 트랜잭션 해시\n          example: 612f7cf11aeec9441a8758781b5549fc720500023f663e118b14ee2b712d216c\n        blockNumber:\n          type: string\n          description: '트랜잭션이 담긴 블록 번호 (형식: 10진법) (트랜잭션 상태가 PENDING일 때는 존재하지 않습니다.)'\n          example: '0x1d85f3'\n        amount:\n          type: string\n          description: '전송할 암호화폐의 양 (단위: litoshi) (형식: 10진법)'\n          example: '750'\n        feeAmount:\n          type: string\n          description: 수수료 금액\n          example: '750'\n        createdAt:\n          type: string\n          description: '트랜잭션이 생성된 시간 (형식: ms, UNIX time)'\n          example: '1620042742913'\n        updatedAt:\n          type: string\n          description: '트랜잭션 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'\n          example: '1620042742915'\n        hex:\n          type: string\n          description: 블록체인에 전파된 트랜잭션 Body의 raw data\n          example: \u003e-\n            0x01000000010ef55b0654efc9f632a73e0d545e185914f81eefddcd161d1340f94b5bb6c91e01000000fdfe0000483045022100c6b5167d4d66bf4f712830b31795df3ffc34074a672906069b6e5299c61e12f90220364bb6b5b4ab5ff528aef2d82b08a7cbb582d1b6f135200800afbad08807d65101483045022100f73667aca7a6434e6c86e6d1970ccefe6e052554c45b6df64b86c48bd9428006022024d98a75217ad115985d961def56ab36e8d23dafe487c47ff39b445094574f54014c695221039c12b1681bc9506b4304a5d7f3933e55c0b55e3a90e47a0b94a6d209afb6173021039c3e34050a735c790a0d8ce39c52165dd11af50ee252a6b83dceaddd02b33b9d21039c882ac166fcb0056145105e18982b7c3b9dc5b54e1ac430f65e7c998ccfdb7d53aeffffffff02010000000000000017a91400271eec282b0368c3a2948145f7ae034fcd1d0787c54319000000000017a9147cfdc2bc58a9cad8b1cae530ce784f828c03a9ca8700000000\n        outputs:\n          description: 트랜잭션을 통해 생성된 UTXO의 Output\n          example: \u0026ref_0\n            - address: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n              amount: '1'\n              transactionId: beb70cf0b90afb6683ece78e0dfb4a140cf498310b833eea8092b5edd271e9c3\n              outputIndex: 0\n              scriptPubKey: '0xa91400271eec282b0368c3a2948145f7ae034fcd1d0787'\n              isChange: false\n          type: array\n          items:\n            $ref: '#/components/schemas/TransactionOutputDto'\n      required:\n        - id\n        - transactionHash\n        - amount\n        - createdAt\n        - updatedAt\n        - hex\n        - outputs\n    TransferDTO:\n      type: object\n      properties:\n        transaction:\n          description: 해당 전송(Transfer)이 포함되는 온체인 트랜잭션의 정보\n          example: \u0026ref_1\n            id: beb70cf0b90afb6683ece78e0dfb4a140cf498310b833eea8092b5edd271e9c3\n            transactionHash: 612f7cf11aeec9441a8758781b5549fc720500023f663e118b14ee2b712d216c\n            blockNumber: '0x1d85f3'\n            amount: '750'\n            feeAmount: '750'\n            createdAt: '1620042742913'\n            updatedAt: '1620042742915'\n            hex: \u003e-\n              0x01000000010ef55b0654efc9f632a73e0d545e185914f81eefddcd161d1340f94b5bb6c91e01000000fdfe0000483045022100c6b5167d4d66bf4f712830b31795df3ffc34074a672906069b6e5299c61e12f90220364bb6b5b4ab5ff528aef2d82b08a7cbb582d1b6f135200800afbad08807d65101483045022100f73667aca7a6434e6c86e6d1970ccefe6e052554c45b6df64b86c48bd9428006022024d98a75217ad115985d961def56ab36e8d23dafe487c47ff39b445094574f54014c695221039c12b1681bc9506b4304a5d7f3933e55c0b55e3a90e47a0b94a6d209afb6173021039c3e34050a735c790a0d8ce39c52165dd11af50ee252a6b83dceaddd02b33b9d21039c882ac166fcb0056145105e18982b7c3b9dc5b54e1ac430f65e7c998ccfdb7d53aeffffffff02010000000000000017a91400271eec282b0368c3a2948145f7ae034fcd1d0787c54319000000000017a9147cfdc2bc58a9cad8b1cae530ce784f828c03a9ca8700000000\n            outputs: *ref_0\n          allOf:\n            - $ref: '#/components/schemas/TransactionDto'\n        walletId:\n          type: string\n          description: 지갑 ID\n          example: 2d855c98bd183d14f7d9a1805327afff\n        amount:\n          type: string\n          description: '전송할 암호화폐의 양 (단위: litoshi) (형식: 10진법)'\n          example: '1'\n        status:\n          enum:\n            - PENDING_APPROVAL\n            - REJECTED\n            - PENDING\n            - MINED\n            - CONFIRMED\n            - REQUESTED\n          type: string\n          description: 전송(Transfer) 상태\n          example: PENDING\n        id:\n          type: string\n          description: 전송(Transfer) ID\n          example: 7074aaec177f02559e1b1c9e63816359\n        outputIndex:\n          type: number\n          description: \u003e-\n            해당 전송(Transfer)을 통해 발생한 Output이 같은 트랜잭션에 포함된 여러 UTXO 중에 몇 번째 Output\n            인지?\n          example: 0\n        receivedAt:\n          type: string\n          description: 받는 주소\n          example: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n        sendTo:\n          type: string\n          description: 보내는 주소\n          example: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n        withdrawalApprovalId:\n          type: string\n          description: 출금 한도를 초과할 경우 생성된 출금 요청의 ID\n          example: 7074aaec177f02559e1b1c9e63816359\n        type:\n          enum:\n            - WITHDRAWAL\n            - DEPOSIT\n          type: string\n          description: 전송(Transfer) 타입\n          example: WITHDRAWAL\n        createdAt:\n          type: string\n          description: '전송(Transfer)이 생성된 시간 (형식: ms, UNIX time)'\n          example: '1620042252520'\n        updatedAt:\n          type: string\n          description: '전송(Transfer) 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'\n          example: '1620042252520'\n        feeAmount:\n          type: string\n          description: '사용된 수수료의 양 (단위: litoshi) (형식: 10진법)'\n          example: '750'\n        confirmation:\n          type: string\n          description: 트랜잭션 전파 이후 채굴 된 블록 갯수\n          example: '35387'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - walletId\n        - amount\n        - status\n        - id\n        - type\n        - createdAt\n        - updatedAt\n        - confirmation\n    PaginationMetadata:\n      type: object\n      properties:\n        nextUrl:\n          type: string\n          description: 다음 pagination url\n          example: http://localhost:3000/api/v3/ethereum/transfers?page=2\n        previousUrl:\n          type: string\n          description: 이전 pagination url\n          example: http://localhost:3000/api/v3/ethereum/transfers?page=1\n        totalCount:\n          type: number\n          description: 총 갯수\n          example: 5\n      required:\n        - nextUrl\n        - previousUrl\n        - totalCount\n    GetManyResponseForTransferDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransferDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    KeyDTO:\n      type: object\n      properties:\n        address:\n          type: string\n          description: Key의 주소 (LTC 지갑은 값이 없습니다)\n          example: undefined\n        pub:\n          type: string\n          description: Key의 Pub Key 정보\n          example: 0x030b5dm1690572a06c07181cfp29a30dfa057ea66c16e06313nd66404299b22041\n        keyFile:\n          type: string\n          description: Key의 Private Key를 암호화한 값\n          example: \u003e-\n            {\\\"iv\\\":\\\"fk4p/phK72zMXOf7NzHr8g==\\\",\\\"v\\\":1,\\\"iter\\\":10000,\\\"ks\\\":256,\\\"ts\\\":64,\\\"mode\\\":\\\"ccm\\\",\\\"adata\\\":\\\"\\\",\\\"cipher\\\":\\\"aes\\\",\\\"salt\\\":\\\"31kCiaHPr1P=\\\",\\\"ct\\\":\\\"B2x5ckUjDMs+oU+jF5C8BkT3DHAfIw9gFEETSBI3U1+8xkUC6KQSh132Q2SZewhkYezSh3A8kKir36hDttFCy58o9GDHR+SO\\\"}\n      required:\n        - pub\n    WalletDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 지갑 ID\n          example: cce4f485764767f256155390873668b3\n        name:\n          type: string\n          description: 지갑 이름\n          example: litecoin-wallet\n        address:\n          type: string\n          description: 지갑 주소\n          example: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n        encryptionKey:\n          type: string\n          description: 지갑 비밀번호를 복구하기 위해, 암호화하는 데에 쓰인 키\n          example: b72355635b2f8db7d603a73gd37r2460e28d93ad42df6ba85fff4b18fe374ae3\n        createdAt:\n          type: string\n          description: 지갑 생성 시간\n          example: '1599116198762'\n        updatedAt:\n          type: string\n          description: 지갑 변경 시간\n          example: '1599116198962'\n        status:\n          enum:\n            - ACTIVE\n            - CREATING\n            - FAILED\n            - INACTIVE\n          type: string\n          description: 지갑 상태\n          example: ACTIVE\n        orgId:\n          type: string\n          description: 지갑이 속한 팀(Org)의 ID\n          example: 0u1a431da7361na9e75648180bbd4fbc\n        accountKey:\n          description: 지갑을 서명할 때 쓰이는 Account Key 정보\n          example: \u0026ref_11\n            address: undefined\n            pub: \u003e-\n              0x030b5dm1690572a06c07181cfp29a30dfa057ea66c16e06313nd66404299b22041\n            keyFile: \u003e-\n              {\\\"iv\\\":\\\"fk4p/phK72zMXOf7NzHr8g==\\\",\\\"v\\\":1,\\\"iter\\\":10000,\\\"ks\\\":256,\\\"ts\\\":64,\\\"mode\\\":\\\"ccm\\\",\\\"adata\\\":\\\"\\\",\\\"cipher\\\":\\\"aes\\\",\\\"salt\\\":\\\"31kCiaHPr1P=\\\",\\\"ct\\\":\\\"B2x5ckUjDMs+oU+jF5C8BkT3DHAfIw9gFEETSBI3U1+8xkUC6KQSh132Q2SZewhkYezSh3A8kKir36hDttFCy58o9GDHR+SO\\\"}\n          allOf:\n            - $ref: '#/components/schemas/KeyDTO'\n        whitelistActivated:\n          type: boolean\n          description: 출금 주소 화이트리스팅의 활성화 유무\n          example: false\n      required:\n        - id\n        - name\n        - createdAt\n        - updatedAt\n        - status\n        - whitelistActivated\n    BalanceDTO:\n      type: object\n      properties:\n        coinType:\n          type: string\n          description: 암호화폐 타입\n          example: LTC\n        amount:\n          type: string\n          description: '총 잔액 (확정된 잔액) (단위: litoshi) (형식: 10진법)'\n          example: '59023730737'\n        spendableAmount:\n          type: string\n          description: '출금 가능한 잔액 (= 총 잔액 - 확정되지 않은 출금 요청액) (단위: litoshi) (형식: 10진법)'\n          example: '59023730737'\n        aggregatedAmount:\n          type: string\n          description: \u003e-\n            마스터 지갑의 잔액과 하위 입금 주소들의 잔액을 모두 합한 잔액 (= 마스터 지갑 잔액 + 입금 주소 1 잔액 + 입금\n            주소 2 잔액 + ...) (단위: litoshi) (형식: 10진법)\n          example: '59023730737'\n        name:\n          type: string\n          description: 암호화폐 이름\n          example: 라이트코인\n        symbol:\n          type: string\n          description: 암호화폐 심볼 (ticker)\n          example: LTC\n      required:\n        - coinType\n        - amount\n        - name\n        - symbol\n    ChangeWalletNameRequestDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 변경할 지갑 이름\n          example: walletName\n      required:\n        - name\n    CreateDepositAddressRequestDTO:\n      type: object\n      properties:\n        name:\n          type: string\n          description: 입금 주소 이름\n          example: ltc-depositAddress\n      required:\n        - name\n    DepositAddressDTO:\n      type: object\n      properties:\n        id:\n          type: string\n          description: 입금 주소 ID\n          example: 94fd6a94ed199d660acf55e2f2943a7c\n        name:\n          type: string\n          description: 입금 주소 이름\n          example: lite\n        address:\n          type: string\n          description: 입금 주소\n          example: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n        pub:\n          type: string\n          description: 입금 주소 공개키\n          example: '0x022bf2a47ce5027831a3587ecd9f2d0d1e590a227ea576f61598ee84405e0479c1'\n        createdAt:\n          type: string\n          description: '입금 주소 생성 시간 (단위: ms, UNIX time)'\n          example: '1620041696849'\n      required:\n        - id\n        - name\n        - address\n        - pub\n        - createdAt\n    GetManyResponseForDepositAddressDTO:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DepositAddressDTO'\n        pagination:\n          $ref: '#/components/schemas/PaginationMetadata'\n      required:\n        - results\n    TransferRequestDTO:\n      type: object\n      properties:\n        to:\n          type: string\n          description: 받을 주소\n          example: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n        amount:\n          type: string\n          description: '보낼 금액 (단위: litoshi) (10진법)'\n          example: '15'\n        passphrase:\n          type: string\n          description: 비밀번호\n          example: passphrase\n        feeRate:\n          type: string\n          description: '트랜잭션 byte당 지불할 fee 가격 (단위: litoshi) (10진범)'\n          example: '219'\n        metadata:\n          type: string\n          description: 기타 정보 기록용 메타 데이터 (255자 제한)\n          example: metadata\n      required:\n        - to\n        - amount\n        - passphrase\n    InvalidAccessIpException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: ip '106.101.128.133' is not allowed\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4008\n      required:\n        - message\n        - code\n    InvalidAccessTokenException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: expired or invalid access token and signature\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4001\n      required:\n        - message\n        - code\n    AccessTokenNotProvidedException:\n      type: object\n      properties:\n        message:\n          type: string\n          description: API 에러 메시지\n          example: access token not provided\n        code:\n          type: number\n          description: 헤네시스 API 에러 코드\n          example: 4001\n      required:\n        - message\n        - code\npaths:\n  /api/v3/litecoin/transfers:\n    get:\n      operationId: litecoin-TransfersController_getTransfers\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 입출금 내역 조회하기\n      description: 입출금 내역을 조회합니다.\n      parameters:\n        - \u0026ref_2\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_3\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: type\n          required: false\n          in: query\n          description: 거래 타입\n          schema:\n            type: string\n        - name: walletId\n          required: false\n          in: query\n          description: 지갑 ID\n          schema:\n            type: string\n        - name: status\n          required: false\n          in: query\n          description: 거래 상태\n          schema:\n            type: string\n        - name: address\n          required: false\n          in: query\n          description: 입금 주소 또는 출금 주소\n          schema:\n            type: string\n        - name: transactionHash\n          required: false\n          in: query\n          description: 온체인 트랜잭션 해시\n          schema:\n            type: string\n        - name: updatedAtGte\n          required: false\n          in: query\n          description: 전송 상태가 마지막으로 변경된 시점(updatedAt)이 특정 시점과 같거나 그보다 이후인 전송 내역 조회\n          schema:\n            type: string\n        - name: updatedAtLt\n          required: false\n          in: query\n          description: 전송 상태가 마지막으로 변경된 시점(updatedAt)이 특정 시점보다 이전인 전송 내역 조회\n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: string\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForTransferDTO'\n              example:\n                pagination: \u0026ref_13\n                  nextUrl: http://localhost:3000/api/v3/ltc/transfers?page=2\n                  previousUrl: http://localhost:3000/api/v3/ltc/transfers?page=1\n                  totalCount: 5\n                results:\n                  - \u0026ref_4\n                    transaction: *ref_1\n                    walletId: 2d855c98bd183d14f7d9a1805327afff\n                    amount: '1'\n                    status: PENDING\n                    id: 7074aaec177f02559e1b1c9e63816359\n                    outputIndex: 0\n                    receivedAt: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n                    sendTo: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n                    withdrawalApprovalId: 7074aaec177f02559e1b1c9e63816359\n                    type: WITHDRAWAL\n                    createdAt: '1620042252520'\n                    updatedAt: '1620042252520'\n                    feeAmount: '750'\n                    confirmation: '35387'\n                    metadata: metadata\n          description: ''\n        '401': \u0026ref_5\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: \u0026ref_6\n                    message: expired or invalid access token and signature\n                    code: 4001\n                AccessTokenNotProvidedException:\n                  value: \u0026ref_7\n                    message: access token not provided\n                    code: 4001\n                InvalidAccessIpException:\n                  value: \u0026ref_8\n                    message: ip '106.101.128.133' is not allowed\n                    code: 4008\n      tags:\n        - transfers\n  /api/v3/litecoin/transfers/{transferId}:\n    get:\n      operationId: litecoin-TransfersController_getTransfer\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 특정 입출금 내역 조회하기\n      description: 특정 입출금 내역을 조회합니다.\n      parameters:\n        - *ref_2\n        - *ref_3\n        - name: transferId\n          required: true\n          in: path\n          description: 전송(Transfer) ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferDTO'\n              example: *ref_4\n          description: ''\n        '401': *ref_5\n      tags:\n        - transfers\n  /api/v3/litecoin/wallets:\n    get:\n      operationId: litecoin-WalletsController_getWallets\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 지갑 목록 조회하기\n      description: 전체 지갑 목록을 조회합니다.\n      parameters:\n        - \u0026ref_9\n          name: X-Henesis-Secret\n          in: header\n          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.\n          schema:\n            type: string\n        - \u0026ref_10\n          name: Authorization\n          in: header\n          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer \u003cTOKEN\\\u003e\n          schema:\n            example: Bearer \u003cTOKEN\u003e\n            default: 'Bearer '\n            type: string\n        - name: name\n          required: false\n          in: query\n          description: 지갑 이름\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WalletDTO'\n          description: ''\n        '401': \u0026ref_12\n          description: 인증이 실패했을 때 발생하는 에러입니다.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/InvalidAccessTokenException'\n                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'\n                  - $ref: '#/components/schemas/InvalidAccessIpException'\n              examples:\n                InvalidAccessTokenException:\n                  value: *ref_6\n                AccessTokenNotProvidedException:\n                  value: *ref_7\n                InvalidAccessIpException:\n                  value: *ref_8\n      tags:\n        - wallets\n  /api/v3/litecoin/wallets/{walletId}:\n    get:\n      operationId: litecoin-WalletsController_getWallet\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 지갑 정보 조회하기\n      description: 특정 지갑의 상세 정보를 조회합니다.\n      parameters:\n        - *ref_9\n        - *ref_10\n        - name: walletId\n          required: true\n          in: path\n          description: 지갑 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WalletDTO'\n              example:\n                id: cce4f485764767f256155390873668b3\n                name: litecoin-wallet\n                address: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n                encryptionKey: \u003e-\n                  b72355635b2f8db7d603a73gd37r2460e28d93ad42df6ba85fff4b18fe374ae3\n                createdAt: '1599116198762'\n                updatedAt: '1599116198962'\n                status: ACTIVE\n                orgId: 0u1a431da7361na9e75648180bbd4fbc\n                accountKey: *ref_11\n                whitelistActivated: false\n          description: ''\n        '401': *ref_12\n      tags:\n        - wallets\n  /api/v3/litecoin/wallets/{walletId}/name:\n    patch:\n      operationId: litecoin-WalletsController_changeWalletName\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 지갑 정보 변경하기\n      description: 특정 지갑의 이름을 변경합니다.\n      parameters:\n        - *ref_9\n        - *ref_10\n        - name: walletId\n          required: true\n          in: path\n          description: 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeWalletNameRequestDTO'\n      responses:\n        '200':\n          description: ''\n        '204':\n          description: ''\n        '401': *ref_12\n      tags:\n        - wallets\n  /api/v3/litecoin/wallets/{walletId}/balance:\n    get:\n      operationId: litecoin-WalletsController_getWalletBalance\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 지갑 잔고 조회하기\n      description: 특정 지갑의 잔고를 변경합니다.\n      parameters:\n        - *ref_9\n        - *ref_10\n        - name: walletId\n          required: true\n          in: path\n          description: 지갑 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BalanceDTO'\n          description: ''\n        '401': *ref_12\n      tags:\n        - wallets\n  /api/v3/litecoin/wallets/{walletId}/deposit-addresses:\n    post:\n      operationId: litecoin-WalletsController_createDepositAddress\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 입금 주소 생성하기\n      description: 입금 주소를 생성합니다.\n      parameters:\n        - *ref_9\n        - *ref_10\n        - name: walletId\n          required: true\n          in: path\n          description: 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDepositAddressRequestDTO'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepositAddressDTO'\n              example: \u0026ref_14\n                id: 94fd6a94ed199d660acf55e2f2943a7c\n                name: lite\n                address: QS9mDWR42bcNK5CiWe2nU5PAM6vMzdi6fV\n                pub: \u003e-\n                  0x022bf2a47ce5027831a3587ecd9f2d0d1e590a227ea576f61598ee84405e0479c1\n                createdAt: '1620041696849'\n          description: ''\n        '401': *ref_12\n      tags:\n        - wallets\n    get:\n      operationId: litecoin-WalletsController_getDepositAddresses\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 전체 입금 주소 목록 조회하기\n      description: 특정 지갑에 속한 모든 입금 주소 목록을 조회합니다.\n      parameters:\n        - *ref_9\n        - *ref_10\n        - name: walletId\n          required: true\n          in: path\n          description: 지갑 ID\n          schema:\n            type: string\n        - name: id\n          required: false\n          in: query\n          description: 입금 주소 ID\n          schema:\n            type: string\n        - name: address\n          required: false\n          in: query\n          description: 입금 주소\n          schema:\n            type: string\n        - name: name\n          required: false\n          in: query\n          description: 입금 주소 이름\n          schema:\n            type: string\n        - name: size\n          required: false\n          in: query\n          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'\n          schema:\n            type: number\n        - name: page\n          required: false\n          in: query\n          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)\n          schema:\n            type: number\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetManyResponseForDepositAddressDTO'\n              example:\n                pagination: *ref_13\n                results:\n                  - *ref_14\n          description: ''\n        '401': *ref_12\n      tags:\n        - wallets\n  /api/v3/litecoin/wallets/{walletId}/deposit-addresses/{depositAddressId}:\n    get:\n      operationId: litecoin-WalletsController_getDepositAddress\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 입금 주소 정보 조회하기\n      description: 특정 입금 주소 정보를 조회합니다.\n      parameters:\n        - *ref_9\n        - *ref_10\n        - name: walletId\n          required: true\n          in: path\n          description: 지갑 ID\n          schema:\n            type: string\n        - name: depositAddressId\n          required: true\n          in: path\n          description: 입금 주소 ID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepositAddressDTO'\n              example: *ref_14\n          description: ''\n        '401': *ref_12\n      tags:\n        - wallets\n  /api/v3/litecoin/wallets/{walletId}/transfer:\n    post:\n      operationId: litecoin-WalletsController_transfer\n      x-readme:\n        explorer-enabled: false\n        samples-languages:\n          - curl\n          - node\n          - java\n          - python\n          - go\n      summary: 지갑에서 코인 전송하기\n      description: 특정 지갑에서 가상자산을 전송합니다.\n      parameters:\n        - *ref_9\n        - *ref_10\n        - name: walletId\n          required: true\n          in: path\n          description: 지갑 ID\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferRequestDTO'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferDTO'\n              example: *ref_4\n          description: ''\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferDTO'\n        '401': *ref_12\n      tags:\n        - wallets\n",
			"canonicalURL": "/github.com/HAECHI-LABS/henesis-wallet-sdk@d34e228791020f526d875f9a4f0874012112d5ee/-/blob/packages/api-proxy/swagger/swagger-spec-v3-litecoin.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HAECHI-LABS/henesis-wallet-sdk/blob/d34e228791020f526d875f9a4f0874012112d5ee/packages/api-proxy/swagger/swagger-spec-v3-litecoin.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}