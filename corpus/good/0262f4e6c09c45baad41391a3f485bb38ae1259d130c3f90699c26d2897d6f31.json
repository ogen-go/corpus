{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/raul-sampietro/ElektroGo_backend"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api/api.yaml",
			"byteSize": 4806,
			"content": "openapi: 3.0.1\r\ninfo:\r\n  version: 1.0.0\r\n  title: ElektroGo\r\n  description: \"Documentació OpenAPI per a l'API REST desenvolupada a partir de l'aplicació **ElektroGo**. \u003cbr\u003e Per tal de poder executar les operacions cal estar conectat a la VPN de l'UPC. Totes les operacions requereixen d'una api_key. En cas de no tenir-ne la podeu solicitar a qualsevol membre de l'equip.\"\r\nservers:\r\n  - url: 'http://10.4.41.58:8080/'\r\npaths:\r\n  /car-pooling/byCoord:\r\n    get:\r\n      tags:\r\n      - Car pooling\r\n      summary: Donades unes coordenades (latitude i longitude) rep la informació de tots els punts de car pooling vigents dins d'un radi indicat per parametre (en km).\r\n      operationId: getCarPooling\r\n      parameters:\r\n      - name: latitude\r\n        in: query\r\n        description: Coordenada latitud de l'origen\r\n        required: true\r\n        schema:\r\n          type: number\r\n      - name: longitude\r\n        in: query\r\n        description: Coordenada longitude de l'origen\r\n        required: true\r\n        schema:\r\n          type: number\r\n      - name: Radi\r\n        in: query\r\n        description: Radi de l'àrea a analitzar (en km).\r\n        required: true\r\n        schema:\r\n          type: number\r\n      - name: key\r\n        in: query\r\n        description: api_key per poder fer servir la API.\r\n        required: true\r\n        schema:\r\n          type: string\r\n      responses:\r\n        200:\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/CarPooling'\r\n        400:\r\n          description: 'Error: Bad request'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResult'\r\n              examples:\r\n                errorExample:\r\n                  $ref: '#/components/examples/error400'\r\n        401:\r\n          description: 'Error: Unauthorized'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResult'\r\n              examples:\r\n                errorExample:\r\n                  $ref: '#/components/examples/error401'\r\n        404:\r\n          description: 'Error: Not Found'\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/ErrorResult'\r\n              examples:\r\n                errorExample:\r\n                  $ref: '#/components/examples/error404'\r\ncomponents:\r\n  schemas:\r\n    CarPooling:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          example: 1\r\n        startDate:\r\n          type: string\r\n          format: date (yyyy-mm-dd)\r\n          example: \"2022-01-20\"\r\n        startTime:\r\n          type: string\r\n          format: time 24h\r\n          example: \"12:00:00\"\r\n        offeredSeats:\r\n          type: integer\r\n          example: 4\r\n        occupiedSeats:\r\n          type: integer\r\n          example: 2\r\n        restrictions:\r\n          type: string\r\n          example: 'No es pot fumar dins del vehícle'\r\n        details:\r\n          type: string\r\n          example: 'Acostumo a conduir bastant ràpid'\r\n        vehicleNumberPlate:\r\n          type: string\r\n          example: \"2001MMO\"\r\n        origin:\r\n          type: string\r\n          example: \"FIB Facultat d'Informàtica de Barcelona, C/Jordi Girona, 1-3, 08034 Barcelona\"\r\n        destination:\r\n          type: string\r\n          example: \"Estadi Montilivi, Avinguda de Montilivi, 141, 17003 Girona\"\r\n        username:\r\n          type: string\r\n          example: \"PolB\"\r\n        cancelDate: \r\n          type: string\r\n          format: date (yyyy-mm-dd)\r\n          example: \"2022-01-19\"\r\n        latitudeOrigin: \r\n          type: number\r\n          example: 41.3894\r\n        longitudeOrigin:\r\n          type: number\r\n          example: 2.1134\r\n        latitudeDestination: \r\n          type: number\r\n          example: 41.9611\r\n        longitudeDestination:\r\n          type: number\r\n          example: 2.8279\r\n        \r\n        \r\n          \r\n    ErrorResult:\r\n      type: object\r\n      properties:\r\n        status:\r\n          type: integer\r\n          enum: [400, 401, 404]\r\n        error: \r\n          type: string\r\n          enum: [\"Bad Request\", \"Unauthorized\", \"Not found\"]\r\n        message: \r\n          type: string\r\n  examples:\r\n    error400:\r\n      value:\r\n        status: 400\r\n        error: \"Bad Request\"\r\n        message: \"Missing parameter\"\r\n    error401:\r\n      value:\r\n        status: 401\r\n        error: \"Unauthorized\"\r\n        message: \"Unvalid api key\"\r\n    error404:\r\n      value:\r\n        status: 404\r\n        error: \"Not found\"\r\n        message: \"There are no trips in the radius specified\"\r\n",
			"canonicalURL": "/github.com/raul-sampietro/ElektroGo_backend@349d484995621bffa9764765a45cbc76c446fbda/-/blob/api/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/raul-sampietro/ElektroGo_backend/blob/349d484995621bffa9764765a45cbc76c446fbda/api/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}