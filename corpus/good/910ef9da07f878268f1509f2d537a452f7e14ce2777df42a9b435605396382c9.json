{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Neoteroi/essentials-openapi"
		},
		"file": {
			"name": "example1-openapi.yaml",
			"size": 0,
			"path": "tests/res/example1-openapi.yaml",
			"byteSize": 37151,
			"content": "openapi: 3.0.1\ninfo:\n  title: Software Platform API\n  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.\n  version: v1\n  termsOfService: http://example.com/terms/\n  contact:\n    name: API Support\n    url: http://www.example.com/support\n    email: support@example.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://www.neoteroi.xyz/software-center/v1\n    description: Production server\npaths:\n  /api/blobs/initialize-upload:\n    post:\n      tags:\n        - Blobs\n      summary: Initializes a file upload operation.\n      description: The client receives a Shared Access Signature that can be used to upload a file directly to the Azure Storage Blob Service.\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/InitializeUploadInput\"\n            examples:\n              svgInput:\n                $ref: \"#/components/examples/InitializeUploadInputExample\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InitializeUploadInput\"\n            examples:\n              svgInput:\n                $ref: \"#/components/examples/InitializeUploadInputExample\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/InitializeUploadInput\"\n            examples:\n              svgInput:\n                $ref: \"#/components/examples/InitializeUploadInputExample\"\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/InitializeUploadInput\"\n            examples:\n              svgInput:\n                $ref: \"#/components/examples/InitializeUploadInputExample\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/InitializeUploadOutput\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InitializeUploadOutput\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/InitializeUploadOutput\"\n          headers:\n            X-Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            X-Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            X-Rate-Limit-Reset:\n              description: The number of seconds left in the current period\n              schema:\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/IllegalInput\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      security:\n        - AAD: []\n  /api/categories:\n    get:\n      tags:\n        - Categories\n      summary: Gets the list of categories supported by the system.\n      description: \"\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Category\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Category\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Category\"\n  /api/countries:\n    get:\n      tags:\n        - Countries\n      summary: Gets a list of countries of the World with English dislay names and ISO country codes.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Country\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Country\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Country\"\n  /api/system-countries:\n    get:\n      tags:\n        - Countries\n      summary: Gets a list of countries supported by the system, with English dislay names and ISO country codes.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Country\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Country\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Country\"\n  /api/downloads:\n    get:\n      tags:\n        - Downloads\n      summary: Gets a paginated set of downloads records.\n      parameters:\n        - name: category\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - $ref: \"#/components/parameters/PageNumber\"\n        - name: size\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 30\n            nullable: true\n        - name: country\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - name: search\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - name: sortBy\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - name: organizationId\n          in: query\n          schema:\n            type: string\n            nullable: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ReleaseNodeDownloadPaginatedSet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReleaseNodeDownloadPaginatedSet\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ReleaseNodeDownloadPaginatedSet\"\n  /api/health:\n    get:\n      tags:\n        - Health\n      summary: API health check\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/HealthCheck\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HealthCheck\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/HealthCheck\"\n  /api/pro/own-context:\n    get:\n      tags:\n        - Professionals\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ProfessionalContext\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProfessionalContext\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProfessionalContext\"\n  /api/info:\n    get:\n      tags:\n        - Info\n      summary: Returns information about the API itself.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/MetaData\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetaData\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MetaData\"\n  /api/releases/{releaseId}:\n    get:\n      tags:\n        - Releases\n      summary: Returns details about a release by id.\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n    delete:\n      tags:\n        - Releases\n      summary: Deletes a release by id.\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: Success\n    patch:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/UpdateReleaseInput\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateReleaseInput\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateReleaseInput\"\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/UpdateReleaseInput\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n  /api/releases:\n    get:\n      tags:\n        - Releases\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 1\n            nullable: true\n        - name: size\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 30\n            nullable: true\n        - name: category\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - name: country\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - name: search\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - name: sortBy\n          in: query\n          schema:\n            type: string\n            nullable: true\n        - name: draft\n          in: query\n          schema:\n            type: boolean\n            nullable: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ReleasePaginatedSet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReleasePaginatedSet\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ReleasePaginatedSet\"\n    post:\n      tags:\n        - Releases\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CreateReleaseInput\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateReleaseInput\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CreateReleaseInput\"\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CreateReleaseInput\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/CreateReleaseOutput\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateReleaseOutput\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CreateReleaseOutput\"\n  /api/current-releases:\n    get:\n      tags:\n        - Releases\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CurrentRelease\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CurrentRelease\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CurrentRelease\"\n  /api/orgs/current-releases:\n    get:\n      tags:\n        - Releases\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CurrentRelease\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CurrentRelease\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CurrentRelease\"\n  /api/releases/{releaseId}/history:\n    get:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ReleaseHistory\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ReleaseHistory\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ReleaseHistory\"\n  /api/releases/{releaseId}/file/{nodeId}:\n    get:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: nodeId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/FileUrl\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileUrl\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FileUrl\"\n  /api/releases/{releaseId}/file/{nodeId}/downloads:\n    get:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: nodeId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/FileDownloadStats\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileDownloadStats\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FileDownloadStats\"\n  /api/releases/{releaseId}/files:\n    put:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/CreateReleaseNodeInput\"\n              nullable: true\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/CreateReleaseNodeInput\"\n              nullable: true\n          text/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/CreateReleaseNodeInput\"\n              nullable: true\n          application/*+json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/CreateReleaseNodeInput\"\n              nullable: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n    delete:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DeleteReleaseNodeInput\"\n              nullable: true\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DeleteReleaseNodeInput\"\n              nullable: true\n          text/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DeleteReleaseNodeInput\"\n              nullable: true\n          application/*+json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DeleteReleaseNodeInput\"\n              nullable: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n  /api/releases/{releaseId}/orgs:\n    put:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CreateOrganizationsBoundInput\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateOrganizationsBoundInput\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CreateOrganizationsBoundInput\"\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CreateOrganizationsBoundInput\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n    delete:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uuid\n              nullable: true\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uuid\n              nullable: true\n          text/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uuid\n              nullable: true\n          application/*+json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uuid\n              nullable: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n  /api/releases/{releaseId}/clone:\n    post:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n  /api/releases/{releaseId}/publish:\n    post:\n      tags:\n        - Releases\n      parameters:\n        - name: releaseId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/PublishReleaseInput\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PublishReleaseInput\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/PublishReleaseInput\"\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/PublishReleaseInput\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Release\"\ncomponents:\n  schemas:\n    InitializeUploadInput:\n      type: object\n      properties:\n        releaseId:\n          type: string\n          format: uuid\n        fileName:\n          type: string\n          nullable: true\n        fileSize:\n          type: integer\n          format: int32\n        fileType:\n          type: string\n          nullable: true\n      additionalProperties: false\n    InitializeUploadOutput:\n      type: object\n      properties:\n        baseURL:\n          type: string\n          nullable: true\n        fileId:\n          type: string\n          nullable: true\n        fileName:\n          type: string\n          nullable: true\n        token:\n          type: string\n          nullable: true\n      additionalProperties: false\n    NodeInfo:\n      required:\n        - creationTime\n        - eTag\n        - extension\n        - icon\n        - name\n        - size\n        - type\n        - updateTime\n      type: object\n      properties:\n        eTag:\n          maxLength: 50\n          minLength: 0\n          type: string\n        creationTime:\n          type: string\n          format: date-time\n        updateTime:\n          type: string\n          format: date-time\n        id:\n          type: string\n          format: uuid\n        name:\n          maxLength: 300\n          type: string\n        extension:\n          maxLength: 20\n          type: string\n        type:\n          maxLength: 255\n          type: string\n        icon:\n          maxLength: 300\n          type: string\n        size:\n          type: integer\n          format: int32\n      additionalProperties: false\n    ReleaseNode:\n      required:\n        - nodeId\n        - releaseId\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        nodeId:\n          type: string\n          format: uuid\n        releaseId:\n          type: string\n          format: uuid\n        node:\n          $ref: \"#/components/schemas/NodeInfo\"\n        release:\n          $ref: \"#/components/schemas/Release\"\n      additionalProperties: false\n    Country:\n      required:\n        - name\n      type: object\n      properties:\n        id:\n          maxLength: 2\n          minLength: 0\n          type: string\n          nullable: true\n        name:\n          maxLength: 255\n          type: string\n        countryCode:\n          type: string\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    ReleaseCountry:\n      type: object\n      properties:\n        countryId:\n          type: string\n          nullable: true\n        releaseId:\n          type: string\n          format: uuid\n        country:\n          $ref: \"#/components/schemas/Country\"\n        release:\n          $ref: \"#/components/schemas/Release\"\n      additionalProperties: false\n    ReleaseHistory:\n      required:\n        - description\n        - releaseId\n        - timeStamp\n        - user\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        user:\n          maxLength: 50\n          type: string\n        description:\n          maxLength: 4000\n          type: string\n        data:\n          type: string\n          nullable: true\n        timeStamp:\n          type: string\n          format: date-time\n        releaseId:\n          type: string\n          format: uuid\n        release:\n          $ref: \"#/components/schemas/Release\"\n      additionalProperties: false\n    ReleaseOrganization:\n      type: object\n      properties:\n        organizationId:\n          type: string\n          format: uuid\n        releaseId:\n          type: string\n          format: uuid\n        displayName:\n          type: string\n          nullable: true\n        release:\n          $ref: \"#/components/schemas/Release\"\n      additionalProperties: false\n    Release:\n      required:\n        - creationTime\n        - draft\n        - eTag\n        - name\n        - updateTime\n      type: object\n      properties:\n        eTag:\n          maxLength: 50\n          minLength: 0\n          type: string\n        creationTime:\n          type: string\n          format: date-time\n        updateTime:\n          type: string\n          format: date-time\n        id:\n          type: string\n          format: uuid\n        name:\n          maxLength: 250\n          type: string\n        description:\n          type: string\n          nullable: true\n        draft:\n          type: boolean\n        requestedNotification:\n          type: boolean\n        categoryId:\n          type: string\n          nullable: true\n        category:\n          $ref: \"#/components/schemas/Category\"\n        nodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReleaseNode\"\n          nullable: true\n        countries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReleaseCountry\"\n          nullable: true\n        history:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReleaseHistory\"\n          nullable: true\n        organizations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReleaseOrganization\"\n          nullable: true\n      additionalProperties: false\n    Category:\n      required:\n        - creationTime\n        - eTag\n        - name\n        - updateTime\n      type: object\n      properties:\n        eTag:\n          maxLength: 50\n          minLength: 0\n          type: string\n        creationTime:\n          type: string\n          format: date-time\n        updateTime:\n          type: string\n          format: date-time\n        id:\n          maxLength: 20\n          type: string\n          nullable: true\n        name:\n          maxLength: 250\n          type: string\n        description:\n          type: string\n          nullable: true\n        releases:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Release\"\n          nullable: true\n      additionalProperties: false\n    ReleaseNodeDownload:\n      required:\n        - nodeId\n        - releaseId\n        - timeStamp\n        - userEmail\n        - userId\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        nodeId:\n          type: string\n          format: uuid\n        releaseId:\n          type: string\n          format: uuid\n        userEmail:\n          maxLength: 300\n          type: string\n        userId:\n          maxLength: 50\n          type: string\n        node:\n          $ref: \"#/components/schemas/NodeInfo\"\n        release:\n          $ref: \"#/components/schemas/Release\"\n        timeStamp:\n          type: string\n          format: date-time\n        accessGrantedByOrganizationId:\n          type: string\n          format: uuid\n          nullable: true\n      additionalProperties: false\n    ReleaseNodeDownloadPaginatedSet:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReleaseNodeDownload\"\n          nullable: true\n        total:\n          type: integer\n          format: int64\n      additionalProperties: false\n    HealthCheck:\n      type: object\n      properties:\n        alive:\n          type: boolean\n        timestamp:\n          type: string\n          format: date-time\n        regionName:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ProfessionalMembership:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        organizationName:\n          type: string\n          nullable: true\n        organizationNumber:\n          type: string\n          nullable: true\n        organizationId:\n          type: string\n          format: uuid\n        categoryId:\n          type: string\n          nullable: true\n        role:\n          type: string\n          nullable: true\n        organizationBrands:\n          type: array\n          items:\n            type: string\n            format: uuid\n          nullable: true\n        organizationMarkets:\n          type: array\n          items:\n            type: string\n            format: uuid\n          nullable: true\n        brandNames:\n          type: array\n          items:\n            type: string\n          nullable: true\n        marketCodes:\n          type: array\n          items:\n            type: string\n          nullable: true\n        scope:\n          type: string\n          nullable: true\n      additionalProperties: false\n    ProfessionalContext:\n      type: object\n      properties:\n        membership:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProfessionalMembership\"\n          nullable: true\n        signature:\n          type: string\n          nullable: true\n      additionalProperties: false\n    MetaData:\n      type: object\n      properties:\n        version:\n          type: string\n          nullable: true\n        buildNumber:\n          type: string\n          nullable: true\n        contactEmail:\n          type: string\n          nullable: true\n      additionalProperties: false\n    UpdateReleaseInput:\n      required:\n        - categoryId\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        categoryId:\n          maxLength: 20\n          type: string\n        name:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        eTag:\n          type: string\n          nullable: true\n        countries:\n          type: array\n          items:\n            type: string\n          nullable: true\n      additionalProperties: false\n    ReleasePaginatedSet:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Release\"\n          nullable: true\n        total:\n          type: integer\n          format: int64\n      additionalProperties: false\n    CreateReleaseInput:\n      required:\n        - categoryId\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        description:\n          type: string\n          nullable: true\n        categoryId:\n          maxLength: 20\n          type: string\n        countries:\n          type: array\n          items:\n            type: string\n          nullable: true\n      additionalProperties: false\n    CreateReleaseOutput:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n      additionalProperties: false\n    CurrentRelease:\n      type: object\n      properties:\n        releaseId:\n          type: string\n          format: uuid\n        releaseName:\n          type: string\n          nullable: true\n        publishTime:\n          type: string\n          format: date-time\n        countryCode:\n          type: string\n          nullable: true\n        countryName:\n          type: string\n          nullable: true\n        categoryId:\n          type: string\n          nullable: true\n      additionalProperties: false\n    FileUrl:\n      type: object\n      properties:\n        url:\n          type: string\n          nullable: true\n      additionalProperties: false\n    FileDownloadStats:\n      type: object\n      properties:\n        uniqueDownloads:\n          type: integer\n          format: int32\n      additionalProperties: false\n    CreateReleaseNodeInput:\n      required:\n        - fileId\n        - fileName\n        - fileType\n      type: object\n      properties:\n        fileId:\n          type: string\n          format: uuid\n        fileName:\n          maxLength: 250\n          type: string\n        fileSize:\n          type: integer\n          format: int32\n        fileType:\n          maxLength: 50\n          type: string\n      additionalProperties: false\n    DeleteReleaseNodeInput:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n      additionalProperties: false\n    OrganizationBoundInput:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n          nullable: true\n      additionalProperties: false\n    CreateOrganizationsBoundInput:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OrganizationBoundInput\"\n          nullable: true\n      additionalProperties: false\n    PublishReleaseInput:\n      type: object\n      properties:\n        eTag:\n          type: string\n          nullable: true\n        sendEmailNotifications:\n          type: boolean\n      additionalProperties: false\n    GenericError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n  parameters:\n    PageNumber:\n      name: page\n      in: query\n      schema:\n        type: integer\n        format: int32\n        default: 1\n        nullable: true\n  responses:\n    NotFound:\n      description: Entity not found.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n          example:\n            code: 404\n            message: Entity not found\n    IllegalInput:\n      description: Illegal input for operation.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n          example:\n            code: 400\n            message: Illegal Input\n    Unauthorized:\n      description: The user is not authorized.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n          example:\n            code: 401\n            message: Unauthorized\n    GenericError:\n      description: This base error type is used for all raised exceptions.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n  securitySchemes:\n    AAD:\n      type: http\n      scheme: bearer\n      description: Access token issued by Azure Active Directory.\n      bearerFormat: JWT\n    AADB2C:\n      type: http\n      scheme: bearer\n      description: Access token issued by Azure Active Directory B2C.\n      bearerFormat: JWT\n  examples:\n    InitializeUploadInputExample:\n      containerId: c53a1cd7-8b31-401b-aacc-15d5befbb26d\n      fileName: like_a_sir.svg\n      fileType: image/svg+xml\n      fileSize: 23307\nsecurity:\n  - AAD: []\n",
			"canonicalURL": "/github.com/Neoteroi/essentials-openapi@3357caa2d49861fb0aa906b6c1ca275f7093fa1f/-/blob/tests/res/example1-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Neoteroi/essentials-openapi/blob/3357caa2d49861fb0aa906b6c1ca275f7093fa1f/tests/res/example1-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}