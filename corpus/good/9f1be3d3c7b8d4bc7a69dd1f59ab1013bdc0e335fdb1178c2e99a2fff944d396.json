{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openzim/wp1"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 19802,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.wp1.openzim.org/v1\n    description: Production server HTTPS\n  - url: http://api.wp1.openzim.org/v1\n    description: Production server HTTP\ninfo:\n  description: 'Wikipedia 1.0 is an editing project on Wikipedia. It includes a bot, called the WP 1.0 bot, and a frontend web interface for that bot which lives at https://wp1.openzim.org. This document describes the server that acts as the API backend for that frontend server. Generally speaking, it contains only features which are useful to that frontend. However it is documented here and made available without restriction in the hopes that it may be useful.'\n  version: 'v1'\n  title: 'WP 1.0 Frontend'\n  contact:\n    name: 'Travis Briggs'\n    email: 'audiodude@gmail.com'\n  license:\n    name: 'GPL v2 or greater'\n    url: 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'\npaths:\n  /articles/{articleName}/{timestamp}/redirect:\n    get:\n      summary: 'Redirect to the given Wikipedia article at the revision indicated by the timestamp'\n      operationId: articleRedirect\n      responses:\n        302:\n          description: 'Successful operation'\n        404:\n          description: 'The article with that name could not be found'\n      parameters:\n        - name: timestamp\n          in: path\n          required: true\n          description: 'A timestamp like 2020-06-22T10:55:10Z which represents the time of the revision to be redirected to'\n          schema:\n            type: string\n        - name: articleName\n          in: path\n          required: true\n          description: 'The name of the article, with namespace if required, as it appears on Wikipedia'\n          schema:\n            type: string\n  /projects:\n    get:\n      summary: 'List all projects that the WP 1.0 bot updates'\n      operationId: listProjects\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Project'\n        404:\n          description: 'No project with that projectId was found'\n  /projects/count:\n    get:\n      summary: 'Count of the total number of projects'\n      operationId: countProjects\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n  /projects/{projectId}:\n    get:\n      summary: 'Retrieve the entry for a specific project'\n      operationId: getProject\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n    parameters:\n      - name: projectId\n        in: path\n        required: true\n        description: 'The name of the project, with spaces replaced by \"_\"'\n        schema:\n          type: string\n  /projects/{projectId}/table:\n    get:\n      summary: 'Data for building a summary table for a given project'\n      operationId: projectTable\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  table_data:\n                    type: object\n                    description: 'The various data needed to construct the table'\n        404:\n          description: 'No project with that projectId was found'\n    parameters:\n      - name: projectId\n        in: path\n        required: true\n        description: 'The name of the project, with spaces replaced by \"_\"'\n        schema:\n          type: string\n  /projects/{projectId}/articles:\n    get:\n      summary: 'List of articles for a project, optionally filtered by quality/importance'\n      operationId: projectArticles\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pagination:\n                    type: object\n                    properties:\n                      page:\n                        type: number\n                        description: 'The current page of results. Will be 1 if no page is specified'\n                      total:\n                        type: number\n                        description: 'The total number of results for the query'\n                      total_pages:\n                        type: number\n                        description: 'The total number of pages of results, by 100'\n                      display:\n                        type: object\n                        properties:\n                          start:\n                            type: number\n                            description: 'The article number at which the returned page of results starts'\n                          end:\n                            type: number\n                            description: 'The article number at which the returned page of results ends'\n                  articles:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Article'\n        400:\n          description: 'The page parameter was either not a number, or a negative number'\n        404:\n          description: 'No project with that projectId was found'\n    parameters:\n      - name: projectId\n        in: path\n        required: true\n        description: 'The name of the project, with spaces replaced by \"_\"'\n        schema:\n          type: string\n      - name: quality\n        in: query\n        required: false\n        description: 'The quality class of articles, used to filter the results. Eg: \"FA-Class\"'\n        schema:\n          type: string\n      - name: importance\n        in: query\n        required: false\n        description: 'The importance class of articles, used to filter the results. Eg: \"High-Class\"'\n        schema:\n          type: string\n      - name: page\n        in: query\n        required: false\n        description: 'The page to retrieve results starting with. The first page is page 1.'\n        schema:\n          type: number\n      - name: numRows\n        in: query\n        required: false\n        description: 'The number of rows (results) to return.'\n        schema:\n          type: number\n      - name: articlePattern\n        in: query\n        required: false\n        description: 'A string to match the article name against. If the article title is LIKE \"%articlePattern%\", the article is returned.'\n        schema:\n          type: number\n  /projects/{projectId}/category_links:\n    get:\n      summary: 'Get a mapping of category names (such as \"A-Class\") to an href on Wikipedia to link to and the text of such a link. The mapping can also be to simply a string which means no link is possible and the string itself should be displayed.'\n      operationId: projectCategoryLinks\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: true\n        404:\n          description: 'No project with that projectId was found'\n      parameters:\n        - name: projectId\n          in: path\n          required: true\n          description: 'The name of the project, with spaces replaced by \"_\"'\n          schema:\n            type: string\n  /projects/{projectId}/category_links/sorted:\n    get:\n      summary: 'The same as category_links, but the result is sorted into quality/importance designations.'\n      operationId: projectCategoryLinksSorted\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: true\n        404:\n          description: 'No project with that projectId was found'\n      parameters:\n        - name: projectId\n          in: path\n          required: true\n          description: 'The name of the project, with spaces replaced by \"_\"'\n          schema:\n            type: string\n  /projects/{projectId}/update:\n    post:\n      summary: 'Schedule a manual update of a project. This includes fetching new assessments from Wikipedia, and updating Wikipedia with assessment and log tables. This can only be done once per hour.'\n      operationId: projectUpdate\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  next_update_time:\n                    type: string\n                    description: 'A string representing the UTC timestamp of when the next manual update can be performed.'\n        400:\n          description: 'The update could not be performed because it is too soon after another update. Check the next_update_time value in the returned response.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  next_update_time:\n                    type: string\n                    description: 'A string representing the UTC timestamp of when the next manual update can be performed.'\n        401:\n          description: 'Unauthorized. You must be logged in to perform a project update.'\n        404:\n          description: 'No project with that projectId was found'\n    parameters:\n      - name: projectId\n        in: path\n        required: true\n        description: 'The name of the project, with spaces replaced by \"_\"'\n        schema:\n          type: string\n  /projects/{projectId}/update/time:\n    get:\n      summary: 'Get the time at which the given project can next be scheduled for a manual update, or null if the project is currently eligible for a manual update.'\n      operationId: projectNextUpdateTime\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  next_update_time:\n                    type: string\n                    description: 'A string representing the UTC timestamp of when the next manual update can be performed.'\n        404:\n          description: 'No project with that projectId was found'\n    parameters:\n      - name: projectId\n        in: path\n        required: true\n        description: 'The name of the project, with spaces replaced by \"_\"'\n        schema:\n          type: string\n  /projects/{projectId}/update/progress:\n    get:\n      summary: 'Get the status/progress of a manual update job. If there is no manual update job, or if its status has expired, the \"queue\" and \"job\" keys will have null values.'\n      operationId: projectUpdateProgress\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  queue:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                        description: 'One of \"queued\", \"started\" or \"finished\" based on the state of the manual update in the job queue'\n                      ended_at:\n                        type: string\n                        description: 'A datetime string representing when this job finished. Only available if the status key has a value of \"finished\"'\n                  job:\n                    type: object\n                    properties:\n                      progress:\n                        type: integer\n                        description: 'An abstract number representing the amount of progress that has been made on a manual update job'\n                      total:\n                        type: integer\n                        description: 'An abstract number representing the total amount of progress that must be made for this job to be considered complete. Note that it is considered reasonable for the progress number to reach a value higher than this total.'\n                    description: 'A string representing the UTC timestamp of when the next manual update can be performed.'\n        404:\n          description: 'No project with that projectId was found'\n    parameters:\n      - name: projectId\n        in: path\n        required: true\n        description: 'The name of the project, with spaces replaced by \"_\"'\n        schema:\n          type: string\n  /sites:\n    get:\n      summary: 'Get lists of mediawiki projects through mediawiki API'\n      operationId: getWikiProjects\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  sites:\n                    type: array\n                    items:\n                      type: string\n  /builders:\n    post:\n      summary: 'Save a new Simple list, validating it first and returning invalid items if they exist'\n      operationId: createSimpleList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                articles:\n                  type: string\n                name:\n                  type: string\n                project:\n                  type: string\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateOrUpdateListResponse'\n        401:\n          description: 'Unauthorized. You must be logged in to save a list.'\n        400:\n          description: 'Request with either empty list_name or project or articles'\n  /builders/{builderId}:\n    get:\n      summary: 'Return the builder (Simple list) with the given id'\n      operationId: getSimpleList\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  project:\n                    type: string\n                  articles:\n                    type: string\n                    description: 'A newline separated list of articles that make up this Simple list.'\n        401:\n          description: 'Unauthorized. You must be logged in to retrieve builders.'\n        404:\n          description: 'Not found. The logged in user does not own a builder with the given ID.'\n      parameters:\n        - name: builderId\n          in: path\n          required: true\n          description: 'The id of the builder to retrieve.'\n          schema:\n            type: string\n    post:\n      summary: 'Update the builder (Simple list) with the given id'\n      operationId: updateSimpleList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                articles:\n                  type: string\n                name:\n                  type: string\n                project:\n                  type: string\n      responses:\n        401:\n          description: 'Unauthorized. You must be logged in to update a builder.'\n        404:\n          description: 'Not found. No builder with the given ID was found for the logged in user.'\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateOrUpdateListResponse'\n      parameters:\n        - name: builderId\n          in: path\n          required: true\n          description: 'The id of the builder to update.'\n          schema:\n            type: string\n  /selection/simple/lists:\n    get:\n      summary: 'Return list details from database'\n      operationId: getLists\n      responses:\n        200:\n          description: 'Successful operation'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  builders:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        name:\n                          type: string\n                        project:\n                          type: string\n                        selections:\n                          type: object\n                          description: Empty when selections are missing\n                          properties:\n                            s_id:\n                              type: string\n                            content_type:\n                              type: string\n                            selection_url:\n                              type: string\n\ncomponents:\n  schemas:\n    CreateOrUpdateListResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: True when article name does not contain forbidden chars {\"#\", \"\u003c\", \"\u003e\", \"[\", \"]\", \"{\", \"}\", \"|\"}, false otherwise.\n        items:\n          type: object\n          description: Empty in case of success being true\n          properties:\n            valid:\n              type: array\n              description: List of valid article names\n              items:\n                type: string\n            invalid:\n              type: array\n              description: List of invalid article names\n              items:\n                type: string\n            errors:\n              type: array\n              description: List of forbidden characters present in article names\n              items:\n                type: string\n    Project:\n      type: object\n      properties:\n        name:\n          type: string\n        last_updated:\n          type: string\n          description: 'The last time the project was updated, in the date format YYYYMMDDhhmmss. So, year month day, hour minute second'\n    Article:\n      type: object\n      properties:\n        article:\n          type: string\n          description: 'The name of the article, as it appears on Wikipedia, with its namespace prefix included'\n        article_talk:\n          type: string\n          description: 'The name of fthe article, with the appropriate talk namespace prepended'\n        article_link:\n          type: string\n          description: 'A link to the article on Wikipedia'\n        article_talk_link:\n          type: string\n          description: 'A link to the talk page o the article on Wikipedia'\n        article_history_link:\n          type: string\n          description: 'A link to the history listing of the article on Wikipedia'\n        importance:\n          type: string\n          description: 'The importance class of the article'\n        quality:\n          type: string\n          description: 'The quality class of the article'\n        importance_updated:\n          type: string\n          format: date\n          description: 'The date on which the article importance classification was updated, the format is 2020-01-30T15:55:55Z'\n        quality_updated:\n          type: string\n          format: date\n          description: 'The date on which the article quality classification was updated, the format is 2020-01-30T15:55:55Z'\n",
			"canonicalURL": "/github.com/openzim/wp1@6c915faacd72287283a1353d224f9fda6eaecc4a/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/openzim/wp1/blob/6c915faacd72287283a1353d224f9fda6eaecc4a/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}