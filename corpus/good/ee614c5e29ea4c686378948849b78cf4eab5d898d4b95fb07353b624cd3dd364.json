{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OAI/Talks-and-Workshops"
		},
		"file": {
			"name": "5.1 New Object Schema (Answers).yaml",
			"size": 0,
			"path": "OSSNA-OpenAPI-Workshop-2018/OASv3/workspace1/6 - Schema Objects/answers/5.1 New Object Schema (Answers).yaml",
			"byteSize": 5168,
			"content": "# OpenAPI v3 Training Exercise\n\nopenapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: TaxBlaster API\n  description: |\n    # Answers: New Object Schema\n    \n    In this exercise, we'll create a new object-typed schema.  \n    The new `/tax_payment/{id}` path item has a GET method with a \n    200 response. The schema of the 200 response body only specifies\n    that the value must be an object.\n    \n    Add the necessary fields to the Schema Object to make it validate\n    a message payload like this:\n    \n    ```\n    {\n      \"paymentID\": \"P12347\",\n      \"date\": \"2018-04-10\",\n      \"amount\": 2231.89,\n      \"currency\": \"USD\"\n    }    \n    ```\n    \npaths:\n\n  /tax_payment/{id}:\n    parameters:\n    - name: id\n      in: path\n      description: Payment ID\n      required: true\n      schema:\n        type: string\n    get:\n      description: Retrieve a single tax payment.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  paymentID:\n                    type: string\n                  date:\n                    type: string\n                    format: date\n                  amount:\n                    type: number\n                  currency:\n                    type: string\n\n  /taxpayers:\n    get:\n      description: Retrieve the entire list of taxpayers.\n      parameters:\n      - name: minTaxDue\n        in: query\n        schema:\n          type: number\n        description: \u003e\n          Return only taxpayers with taxDue \u003e= the specified value.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Taxpayers\"\n        default:\n          description: \u003e\n            Unexpected error in processing the request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n  /taxpayers/{id}:\n    parameters:\n    - description: ID of the individual taxpayer.\n      name: id\n      in: path\n      schema:\n        type: string\n      required: true\n    get:\n      description: Retrieve an individual taxpayer.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Taxpayer\"\n        default:\n          description: \u003e\n            Unexpected error in processing the request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n  /tax_filings:\n    get:\n      description: Retrieve all available tax filings\n      parameters:\n      - name: status\n        in: query\n        description: \u003e \n          Return only tax filings with the specified tax filing status.\n        required: true\n        schema:\n          type: string\n          enum:\n          - Draft\n          - Submitted\n          - Accepted\n          - Audit_Pending        \n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxFilings\"\n        default:\n          description: \u003e\n            Unexpected error in processing the request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \n  /tax_filings/{id}:\n    parameters:\n    - name: id\n      in: path\n      description: ID of the Tax Filing\n      required: true\n      schema:\n        type: string\n    get:\n      description: Retrieve an individual tax filing\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxFiling\"\n\ncomponents:\n  schemas:\n  \n    TaxFiling:\n      type: object\n      required:\n        - filingID  \n      properties:\n        filingID:\n          type: string\n        taxpayerID:\n          type: string\n        jurisdiction:\n          type: string\n        fileDate:\n          type: string\n          format: date\n        isJointFiling:\n          type: boolean\n        filingStatus:\n          $ref: \"#/components/schemas/TaxFilingStatus\"\n          \n    TaxFilingStatus:\n      type: string\n      enum:\n      - Draft\n      - Submitted\n      - Accepted\n      - Audit_Pending\n          \n    TaxFilings:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TaxFiling\"\n  \n    Taxpayer:\n      type: object\n      required:\n      - taxpayerID\n      properties:\n        taxpayerID:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        maritalStatus:\n          type: boolean\n        taxDue:\n          type: number\n  \n    Taxpayers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Taxpayer\"\n        \n    ErrorResponse:\n      description: An error string returned from a bad response.\n      type: object\n      properties:\n        errorMessage:\n          type: string\n        stackTrace:\n          type: string\n",
			"canonicalURL": "/github.com/OAI/Talks-and-Workshops@ed292cacb93ad43e574d8fee6247b9d524b43b34/-/blob/OSSNA-OpenAPI-Workshop-2018/OASv3/workspace1/6%20-%20Schema%20Objects/answers/5.1%20New%20Object%20Schema%20%28Answers%29.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OAI/Talks-and-Workshops/blob/ed292cacb93ad43e574d8fee6247b9d524b43b34/OSSNA-OpenAPI-Workshop-2018/OASv3/workspace1/6 - Schema Objects/answers/5.1 New Object Schema (Answers).yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}