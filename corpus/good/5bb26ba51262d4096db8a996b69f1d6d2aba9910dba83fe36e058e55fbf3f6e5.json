{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/chaingateway/openapi.yaml",
			"byteSize": 54871,
			"content": "openapi: 3.0.0\ninfo:\n  x-ballerina-display:\n    label: Chaingateway\n    iconPath: \"icon.png\"\n  title: Chaingateway.io\n  description: |-\n    This is a generated connector for [Chaingateway API v1.0](https://chaingateway.io/docs-ethereum) OpenAPI specification.\n    This is the REST API to build the bridge between Ethereum and the real world. \n    All of the integrations communicates with chaingateway.io through this API.\n  contact: {}\n  version: '1.0'\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n    \n    Create an [Chaingateway.io Account](https://chaingateway.io/register) and obtain tokens following [this guide](https://chaingateway.io/docs-ethereum#apikey).\nservers:\n  - url: 'https://eu.eth.chaingateway.io/v1'\n    variables: {}\npaths:\n  /getToken:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns information about a specific ERC20 token like name, symbol, decimal places and total supply.\n      description: Returns information about a specific ERC20 token like name, symbol, decimal places and total supply.\n      operationId: getToken\n      requestBody:\n        description: Payload to get a details about ERC20 token like name, symbol, decimal places and total supply\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getTokenRequest'\n            example:\n              contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n        required: true\n      responses:\n        '200':\n          description: Information about a specific ERC20 token like name, symbol, decimal places and total supply\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getToken'\n              example:\n                ok: true\n                contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n                name: Bitfranken\n                symbol: BIFRA\n                decimals: 2\n                supply: 76507131570\n      deprecated: false\n      security: \n        - api-key: []\n  /getLastBlockNumber:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns the block number of the last mined Ethereum block.\n      description: Returns the block number of the last mined Ethereum block.\n      operationId: getLastBlockNumber\n      parameters:\n        - name: Content-Type\n          description: Result of content type of resuly whether json or xml\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n      responses:\n        '200':\n          description: Block number of the last mined Ethereum block\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getLastBlockNumber'\n              example:\n                ok: true\n                blocknumber: 10892021\n      deprecated: false\n      security: \n        - api-key: []\n  /getGasPrice:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns the current gas price in GWEI.\n      description: Returns the current gas price in GWEI.\n      operationId: getGasPrice\n      parameters:\n        - name: Content-Type\n          description: Result of content type of resuly whether json or xml\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n      responses:\n        '200':\n          description: Current gas price in GWEI.\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getGasPrice'\n              example:\n                ok: true\n                gasprice: 70\n      deprecated: false\n      security: \n        - api-key: []\n  /getExchangeRate:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns the current Ethereum price in Euro or US Dollar.\n      description: Returns the current Ethereum price in Euro or US Dollar.\n      operationId: getExchangeRate\n      requestBody:\n        description: Payload to get current Ethereum price in Euro or US Dollar\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getExchangeRateRequest'\n            example:\n              currency: eur\n        required: true\n      responses:\n        '200':\n          description: Current Ethereum price in Euro or US Dollar\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getExchangeRate'\n              example:\n                ok: true\n                currency: eur\n                rate: 321.2\n      deprecated: false\n      security: \n        - api-key: []\n  /getEthereumBalance:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns the Ethereum balance of a given address.\n      description: Returns the Ethereum balance of a given address.\n      operationId: getEthereumBalance\n      requestBody:\n        description: Payload to get Ethereum balance of a given address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getEthereumBalanceRequest'\n            example:\n              ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n        required: true\n      responses:\n        '200':\n          description: Ethereum balance of a given address\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getEthereumBalance'\n              example:\n                ok: true\n                ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n                balance: 0.009956019840987648\n      deprecated: false\n      security: \n        - api-key: []\n  /getTokenBalance:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns the token balance of a given address.\n      description: Returns the token balance of a given address.\n      operationId: getTokenBalance\n      requestBody:\n        description: Payload to get token balance of a given address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getTokenBalanceRequest'\n            example:\n              contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n              ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n        required: true\n      responses:\n        '200':\n          description: Token balance of a given address\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getTokenBalance'\n              example:\n                ok: true\n                contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n                ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n                balance: 9980\n      deprecated: false\n      security: \n        - api-key: []\n  /getTransactions:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns information like confirmations, token contract address, amount, gas price and more of a given transaction.\n      description: Returns information like confirmations, token contract address, amount, gas price and more of a given transaction.\n      operationId: getTransactions\n      requestBody:\n        description: Payload to get a details about given transaction\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getTransactionsRequest'\n            example:\n              txid: '0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b'\n        required: true\n      responses:\n        '200':\n          description: Information like confirmations, token contract address, amount, gas price and more of a given transaction\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getTransactions'\n              example:\n                ok: true\n                transactions:\n                  - txid: '0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b'\n                    block_number: '6432816'\n                    contract_address: '0x9E2B71e87d9304c4773674584EB9D0c838643568'\n                    type: ERC20\n                    token_name: Shopiblock\n                    token_symbol: SHB\n                    token_decimals: '18'\n                    token_supply: '1000000000'\n                    gas: '90000'\n                    gas_price: '9'\n                    from: '0x8dF9654c7D81c850FDd35D93292B2fC60e666bF0'\n                    to: '0xbee9422f1b65687d0cb923bbd1fc5ccb9307e861'\n                    amount: '10'\n      deprecated: false\n      security: \n        - api-key: []\n  /getBlock:\n    post:\n      tags:\n        - Info Requests\n      summary: Returns information of an Ethereum block with or without transactions.\n      description: Returns information of an Ethereum block with or without transactions.\n      operationId: getBlock\n      requestBody:\n        description: Payload to get a Ethereum block\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getBlockRequest'\n            example:\n              block: '5000000'\n        required: true\n      responses:\n        '200':\n          description: Information of an Ethereum block with or without transactions\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getBlock'\n              example:\n                ok: true\n                hash: '0x7d5a4369273c723454ac137f48a4f142b097aa2779464e6505f1b1c5e37b5382'\n                block_number: '5000000'\n                parent_hash: '0xcae4df80f5862e4321690857eded0d8a40136dafb8155453920bade5bd0c46c0'\n                miner: '0xb2930B35844a230f00E51431aCAe96Fe543a0347'\n                difficulty: '2546613975853490'\n                size_in_bytes: '24017'\n                gas_limit: '8000029'\n                gas_used: '7994053'\n                time_stamp: '2018-01-30 14:41:33'\n                transactions_count: '109'\n      deprecated: false\n      security: \n        - api-key: []\n  /newAddress:\n    post:\n      tags:\n        - Address Requests\n      summary: Generates a new Ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.\n      description: Generates a new Ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.\n      operationId: newAddress\n      requestBody:\n        description: Payload to create a new Ethereum address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/newAddressRequest'\n            example:\n              password: padN39QkRA2hJ\n        required: true\n      responses:\n        '200':\n          description: Generated new Ethereum addresses you can use to send or receive funds\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/newAddress'\n              example:\n                ok: true\n                ethereumaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n                password: padN39QkRA2hJ\n      deprecated: false\n      security: \n        - api-key: []\n  /deleteAddress:\n    post:\n      tags:\n        - Address Requests\n      summary: Deletes an existing Ethereum address. Be careful when using this function.\n      description: Deletes an existing Ethereum address. Be careful when using this function.\n      operationId: deleteAddress\n      requestBody:\n        description: Payload to delete an existing Ethereum address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deleteAddressRequest'\n            example:\n              ethereumaddress: '0x71892689ed0d79d88ab6ea3783b571b8ece9bee3'\n              password: padN39QkRA2hJ\n        required: true\n      responses:\n        '200':\n          description: Detail of Ethereum addresses deleted\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deleteAddress'\n              example:\n                ok: true\n                ethereumaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n                deleted: true\n      deprecated: false\n      security: \n        - api-key: []\n  /listAddresses:\n    post:\n      tags:\n        - Address Requests\n      summary: Returns all Ethereum addresses created with an account.\n      description: Returns all Ethereum addresses created with an account.\n      operationId: listAddresses\n      parameters:\n        - name: Content-Type\n          description: Result of content type of resuly whether json or xml\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n      responses:\n        '200':\n          description: Ethereum addresses created with an account\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/listAddresses'\n              example:\n                ok: true\n                addresses:\n                  - ethereumaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n      deprecated: false\n      security: \n        - api-key: []\n  /importAddress:\n    post:\n      tags:\n        - Address Requests\n      summary: Imports an existing keystore into system and makes it possible to send transactions from it.\n      description: Imports an existing keystore into system and makes it possible to send transactions from it.\n      operationId: importAddress\n      requestBody:\n        description: Payload to import a keystore into system\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/importAddressRequest'\n            example:\n              filename: UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4\n              content:\n                version: 3\n                id: 85b790ff-408e-42b8-b123-bec9523964dc\n                address: 71892889ed4d79d88ab6ea3783b571b8ece9bef4\n                crypto:\n                  ciphertext: 9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f\n                  cipherparams:\n                    iv: 76e6f2497b9f2a8e024fc752a5418a6d\n                  cipher: aes-128-ctr\n                  kdf: scrypt\n                  kdfparams:\n                    dklen: 32\n                    salt: d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4\n                    'n': 131072\n                    r: 8\n                    p: 1\n                  mac: dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9\n              password: padN39QkRA2hJ\n        required: true\n      responses:\n        '200':\n          description: List of Ethereum addresses created with an account\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/importAddress'\n              example:\n                ok: true\n                ethaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n                filename: UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4\n      deprecated: false\n      security: \n        - api-key: []\n  /exportAddress:\n    post:\n      tags:\n        - Address Requests\n      summary: Exports an existing keystore file so you can use it in other wallets.\n      description: Exports an existing keystore file so you can use it in other wallets.\n      operationId: exportAddress\n      requestBody:\n        description: Payload to export an existing keystore file\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/exportAddressRequest'\n            example:\n              ethaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n              password: padN39QkRA2hJ\n        required: true\n      responses:\n        '200':\n          description: List of Ethereum addresses created with an account\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exportAddress'\n              example:\n                ok: true\n                filename: UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4\n                content: '{''version'':3,''id'':''85b790ff-408e-42b8-b123-bec9523964dc'',''address'':''71892889ed4d79d88ab6ea3783b571b8ece9bef4'',''crypto'':{''ciphertext'':''9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f'',''cipherparams'':{''iv'':''76e6f2497b9f2a8e024fc752a5418a6d''},''cipher'':''aes-128-ctr'',''kdf'':''scrypt'',''kdfparams'':{''dklen'':32,''salt'':''d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4'',''n'':131072,''r'':8,''p'':1},''mac'':''dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9''}}'\n      deprecated: false\n      security: \n        - api-key: []\n  /subscribeAddress:\n    post:\n      tags:\n        - Subscription/IPN Requests\n      summary: Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\n      description: Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\n      operationId: subscribeAddress\n      requestBody:\n        description: Payload to create a new subscription/IPN\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/subscribeAddressRequest'\n            example:\n              ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n              contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n              url: 'https://yoururl.com/ipnreceiver.php'\n        required: true\n      responses:\n        '200':\n          description: Detail about Ethereum address\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscribeAddress'\n              example:\n                ok: true\n                ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n                contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n                url: 'https://yoururl.com/ipnreceiver.php'\n      deprecated: false\n      security: \n        - api-key: []\n  /unsubscribeAddress:\n    post:\n      tags:\n        - Subscription/IPN Requests\n      summary: Deletes an existing subscription/IPN for the given address (and contractaddress).\n      description: Deletes an existing subscription/IPN for the given address (and contractaddress).\n      operationId: unsubscribeAddress\n      requestBody:\n        description: Payload to delete an existing subscription/IPN\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/unsubscribeAddressRequest'\n            example:\n              ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n              contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n              url: 'https://yoururl.com/ipnreceiver.php'\n        required: true\n      responses:\n        '200':\n          description: Detail about Ethereum address\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unsubscribeAddress'\n              example:\n                ok: true\n                ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n                contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n                url: 'https://yoururl.com/ipnreceiver.php'\n                deleted: true\n      deprecated: false\n      security: \n        - api-key: []\n  /listSubscribedAddresses:\n    post:\n      tags:\n        - Subscription/IPN Requests\n      summary: Returns all subscriptions/IPNs created with an account.\n      description: Returns all subscriptions/IPNs created with an account.\n      operationId: listSubscribedAddresses\n      parameters:\n        - name: Content-Type\n          description: Result of content type of resuly whether json or xml\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n      responses:\n        '200':\n          description: Details about all Ethereum addresses\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/listSubscribedAddresses'\n              example:\n                ok: true\n                ipns:\n                  - ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n                    contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n                    url: 'https://yoururl.com/ipnreceiver.php'\n      deprecated: false\n      security: \n        - api-key: []\n  /listFailedIPNs:\n    post:\n      tags:\n        - Subscription/IPN Requests\n      summary: Returns all IPNs that couldn't be sent. Our system tries to send IPNs 10 times until they end up failed.\n      description: Returns all IPNs that couldn't be sent. Our system tries to send IPNs 10 times until they end up failed.\n      operationId: listFailedIPNs\n      parameters:\n        - name: Content-Type\n          description: Result of content type of resuly whether json or xml\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n      responses:\n        '200':\n          description: List of IPNs that couldn't be sent\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/listFailedIPNs'\n              example:\n                ok: true\n                failed_ipns:\n                  - id: '17766'\n                    timestamp: '2020-09-19 14:33:01'\n                    ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n                    contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n                    amount: '496588.7771277759'\n                    url: 'https://yoururl.com/ipnreceiver.php'\n                    action: deposit\n      deprecated: false\n      security: \n        - api-key: []\n  /resendFailedIPN:\n    post:\n      tags:\n        - Subscription/IPN Requests\n      summary: Tries to resend a failed IPN.\n      description: Tries to resend a failed IPN.\n      operationId: resendFailedIPN\n      requestBody:\n        description: Payload to resend a failed IPN\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/resendFailedIPNRequest'\n            example:\n              id: 17766\n        required: true\n      responses:\n        '200':\n          description: Status of subscriptions/IPNs\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/resendFailedIPN'\n              example:\n                ok: true\n                id: 17766\n      deprecated: false\n      security: \n        - api-key: []\n  /sendEthereum:\n    post:\n      tags:\n        - Transaction Requests\n      summary: Sends Ethereum from an address controlled by the account to a specified receiver address.\n      description: Sends Ethereum from an address controlled by the account to a specified receiver address.\n      operationId: sendEthereum\n      requestBody:\n        description: Payload to send Ethereum transaction from an address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sendEthereumRequest'\n            example:\n              from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n              to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n              password: padN39QkRA2hJ\n              amount: 0.01\n        required: true\n      responses:\n        '200':\n          description: Detail about Ethereum transaction from an address\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sendEthereum'\n              example:\n                ok: true\n                txid: '0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499'\n                from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n                to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n                amount: '0.010000000000000000'\n      deprecated: false\n      security: \n        - api-key: []\n  /clearAddress:\n    post:\n      tags:\n        - Transaction Requests\n      summary: Sends all available Ethereum funds of an address to a specified receiver address.\n      description: Sends all available Ethereum funds of an address to a specified receiver address.\n      operationId: clearAddress\n      requestBody:\n        description: Payload to send all available Ethereum funds from an address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clearAddressRequest'\n            example:\n              ethereumaddress: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n              newaddress: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n              password: padN39QkRA2hJ\n        required: true\n      responses:\n        '200':\n          description: Detail about all available Ethereum funds from an address\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/clearAddress'\n              example:\n                ok: true\n                txid: '0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499'\n                ethereumaddress: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n                newaddress: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n                amount: 0.02300916225\n                gas: 0.0025199999999999997\n                total: '0.025529162250000000'\n      deprecated: false\n      security: \n        - api-key: []\n  /sendToken:\n    post:\n      tags:\n        - Transaction Requests\n      summary: Sends ERC20 tokens from an address controlled by the account to a specified receiver address. The token contract address is needed to specify the token. The use of the identifier parameter is recommend and awaits an unique string. Whenever a transaction is beeing sent, the identifier is checked and the transaction gets dropped if there is one with that identifier already.\n      description: Sends ERC20 tokens from an address controlled by the account to a specified receiver address. The token contract address is needed to specify the token. The use of the identifier parameter is recommend and awaits an unique string. Whenever a transaction is beeing sent, the identifier is checked and the transaction gets dropped if there is one with that identifier already.\n      operationId: sendToken\n      requestBody:\n        description: Payload to sends ERC20 tokens from an address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sendTokenRequest'\n            example:\n              contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'\n              from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n              to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n              password: padN39QkRA2hJ\n              amount: 5\n              identifier: CN562\n        required: true\n      responses:\n        '200':\n          description: Detail about ERC20 tokens transaction\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sendToken'\n              example:\n                ok: true\n                identifier: CN562\n                txid: '0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499'\n                contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'\n                from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n                to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n                amount: 5\n      deprecated: false\n      security: \n        - api-key: []\ncomponents:\n  schemas:\n    getTokenRequest:\n      title: getTokenRequest\n      required:\n        - contractaddress\n      type: object\n      properties:\n        contractaddress:\n          type: string\n      example:\n        contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n    getToken:\n      title: getToken\n      required:\n        - ok\n        - contractaddress\n        - name\n        - symbol\n        - decimals\n        - supply\n      type: object\n      properties:\n        ok:\n          type: boolean\n        contractaddress:\n          type: string\n        name:\n          type: string\n        symbol:\n          type: string\n        decimals:\n          type: integer\n          format: int32\n        supply:\n          type: integer\n          format: int64\n      example:\n        ok: true\n        contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n        name: Bitfranken\n        symbol: BIFRA\n        decimals: 2\n        supply: 76507131570\n    getLastBlockNumber:\n      title: getLastBlockNumber\n      required:\n        - ok\n        - blocknumber\n      type: object\n      properties:\n        ok:\n          type: boolean\n        blocknumber:\n          type: integer\n          format: int32\n      example:\n        ok: true\n        blocknumber: 10892021\n    getGasPrice:\n      title: getGasPrice\n      required:\n        - ok\n        - gasprice\n      type: object\n      properties:\n        ok:\n          type: boolean\n        gasprice:\n          type: integer\n          format: int32\n      example:\n        ok: true\n        gasprice: 70\n    getExchangeRateRequest:\n      title: getExchangeRateRequest\n      required:\n        - currency\n      type: object\n      properties:\n        currency:\n          type: string\n      example:\n        currency: eur\n    getExchangeRate:\n      title: getExchangeRate\n      required:\n        - ok\n        - currency\n        - rate\n      type: object\n      properties:\n        ok:\n          type: boolean\n        currency:\n          type: string\n        rate:\n          type: number\n      example:\n        ok: true\n        currency: eur\n        rate: 321.2\n    getEthereumBalanceRequest:\n      title: getEthereumBalanceRequest\n      required:\n        - ethereumaddress\n      type: object\n      properties:\n        ethereumaddress:\n          type: string\n      example:\n        ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n    getEthereumBalance:\n      title: getEthereumBalance\n      required:\n        - ok\n        - ethereumaddress\n        - balance\n      type: object\n      properties:\n        ok:\n          type: boolean\n        ethereumaddress:\n          type: string\n        balance:\n          type: number\n      example:\n        ok: true\n        ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n        balance: 0.009956019840987648\n    getTokenBalanceRequest:\n      title: getTokenBalanceRequest\n      required:\n        - contractaddress\n        - ethereumaddress\n      type: object\n      properties:\n        contractaddress:\n          type: string\n        ethereumaddress:\n          type: string\n      example:\n        contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n        ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n    getTokenBalance:\n      title: getTokenBalance\n      required:\n        - ok\n        - contractaddress\n        - ethereumaddress\n        - balance\n      type: object\n      properties:\n        ok:\n          type: boolean\n        contractaddress:\n          type: string\n        ethereumaddress:\n          type: string\n        balance:\n          type: integer\n          format: int32\n      example:\n        ok: true\n        contractaddress: '0x5b86a33f0c232fe909eb4602a9d039072869d915'\n        ethereumaddress: '0xa1f36016221d48ce7f15cde7b826a4fbe09bacce'\n        balance: 9980\n    getTransactionsRequest:\n      title: getTransactionsRequest\n      required:\n        - txid\n      type: object\n      properties:\n        txid:\n          type: string\n      example:\n        txid: '0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b'\n    getTransactions:\n      title: getTransactions\n      required:\n        - ok\n        - transactions\n      type: object\n      properties:\n        ok:\n          type: boolean\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transaction'\n      example:\n        ok: true\n        transactions:\n          - txid: '0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b'\n            block_number: '6432816'\n            contract_address: '0x9E2B71e87d9304c4773674584EB9D0c838643568'\n            type: ERC20\n            token_name: Shopiblock\n            token_symbol: SHB\n            token_decimals: '18'\n            token_supply: '1000000000'\n            gas: '90000'\n            gas_price: '9'\n            from: '0x8dF9654c7D81c850FDd35D93292B2fC60e666bF0'\n            to: '0xbee9422f1b65687d0cb923bbd1fc5ccb9307e861'\n            amount: '10'\n    Transaction:\n      title: Transaction\n      required:\n        - txid\n        - block_number\n        - contract_address\n        - type\n        - token_name\n        - token_symbol\n        - token_decimals\n        - token_supply\n        - gas\n        - gas_price\n        - from\n        - to\n        - amount\n      type: object\n      properties:\n        txid:\n          type: string\n        block_number:\n          type: string\n        contract_address:\n          type: string\n        type:\n          type: string\n        token_name:\n          type: string\n        token_symbol:\n          type: string\n        token_decimals:\n          type: string\n        token_supply:\n          type: string\n        gas:\n          type: string\n        gas_price:\n          type: string\n        from:\n          type: string\n        to:\n          type: string\n        amount:\n          type: string\n      example:\n        txid: '0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b'\n        block_number: '6432816'\n        contract_address: '0x9E2B71e87d9304c4773674584EB9D0c838643568'\n        type: ERC20\n        token_name: Shopiblock\n        token_symbol: SHB\n        token_decimals: '18'\n        token_supply: '1000000000'\n        gas: '90000'\n        gas_price: '9'\n        from: '0x8dF9654c7D81c850FDd35D93292B2fC60e666bF0'\n        to: '0xbee9422f1b65687d0cb923bbd1fc5ccb9307e861'\n        amount: '10'\n    getBlockRequest:\n      title: getBlockRequest\n      required:\n        - block\n      type: object\n      properties:\n        block:\n          type: string\n      example:\n        block: '5000000'\n    getBlock:\n      title: getBlock\n      required:\n        - ok\n        - hash\n        - block_number\n        - parent_hash\n        - miner\n        - difficulty\n        - size_in_bytes\n        - gas_limit\n        - gas_used\n        - time_stamp\n        - transactions_count\n      type: object\n      properties:\n        ok:\n          type: boolean\n        hash:\n          type: string\n        block_number:\n          type: string\n        parent_hash:\n          type: string\n        miner:\n          type: string\n        difficulty:\n          type: string\n        size_in_bytes:\n          type: string\n        gas_limit:\n          type: string\n        gas_used:\n          type: string\n        time_stamp:\n          type: string\n        transactions_count:\n          type: string\n      example:\n        ok: true\n        hash: '0x7d5a4369273c723454ac137f48a4f142b097aa2779464e6505f1b1c5e37b5382'\n        block_number: '5000000'\n        parent_hash: '0xcae4df80f5862e4321690857eded0d8a40136dafb8155453920bade5bd0c46c0'\n        miner: '0xb2930B35844a230f00E51431aCAe96Fe543a0347'\n        difficulty: '2546613975853490'\n        size_in_bytes: '24017'\n        gas_limit: '8000029'\n        gas_used: '7994053'\n        time_stamp: '2018-01-30 14:41:33'\n        transactions_count: '109'\n    newAddressRequest:\n      title: newAddressRequest\n      required:\n        - password\n      type: object\n      properties:\n        password:\n          type: string\n      example:\n        password: padN39QkRA2hJ\n    newAddress:\n      title: newAddress\n      required:\n        - ok\n        - ethereumaddress\n        - password\n      type: object\n      properties:\n        ok:\n          type: boolean\n        ethereumaddress:\n          type: string\n        password:\n          type: string\n      example:\n        ok: true\n        ethereumaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n        password: padN39QkRA2hJ\n    deleteAddressRequest:\n      title: deleteAddressRequest\n      required:\n        - ethereumaddress\n        - password\n      type: object\n      properties:\n        ethereumaddress:\n          type: string\n        password:\n          type: string\n      example:\n        ethereumaddress: '0x71892689ed0d79d88ab6ea3783b571b8ece9bee3'\n        password: padN39QkRA2hJ\n    deleteAddress:\n      title: deleteAddress\n      required:\n        - ok\n        - ethereumaddress\n        - deleted\n      type: object\n      properties:\n        ok:\n          type: boolean\n        ethereumaddress:\n          type: string\n        deleted:\n          type: boolean\n      example:\n        ok: true\n        ethereumaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n        deleted: true\n    listAddresses:\n      title: listAddresses\n      required:\n        - ok\n        - addresses\n      type: object\n      properties:\n        ok:\n          type: boolean\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n      example:\n        ok: true\n        addresses:\n          - ethereumaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n    Address:\n      title: Address\n      required:\n        - ethereumaddress\n      type: object\n      properties:\n        ethereumaddress:\n          type: string\n      example:\n        ethereumaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n    importAddressRequest:\n      title: importAddressRequest\n      required:\n        - filename\n        - content\n        - password\n      type: object\n      properties:\n        filename:\n          type: string\n        content:\n          $ref: '#/components/schemas/Content'\n        password:\n          type: string\n      example:\n        filename: UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4\n        content:\n          version: 3\n          id: 85b790ff-408e-42b8-b123-bec9523964dc\n          address: 71892889ed4d79d88ab6ea3783b571b8ece9bef4\n          crypto:\n            ciphertext: 9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f\n            cipherparams:\n              iv: 76e6f2497b9f2a8e024fc752a5418a6d\n            cipher: aes-128-ctr\n            kdf: scrypt\n            kdfparams:\n              dklen: 32\n              salt: d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4\n              'n': 131072\n              r: 8\n              p: 1\n            mac: dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9\n        password: padN39QkRA2hJ\n    Content:\n      title: Content\n      required:\n        - version\n        - id\n        - address\n        - crypto\n      type: object\n      properties:\n        version:\n          type: integer\n          format: int32\n        id:\n          type: string\n        address:\n          type: string\n        crypto:\n          $ref: '#/components/schemas/Crypto'\n      example:\n        version: 3\n        id: 85b790ff-408e-42b8-b123-bec9523964dc\n        address: 71892889ed4d79d88ab6ea3783b571b8ece9bef4\n        crypto:\n          ciphertext: 9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f\n          cipherparams:\n            iv: 76e6f2497b9f2a8e024fc752a5418a6d\n          cipher: aes-128-ctr\n          kdf: scrypt\n          kdfparams:\n            dklen: 32\n            salt: d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4\n            'n': 131072\n            r: 8\n            p: 1\n          mac: dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9\n    Crypto:\n      title: Crypto\n      required:\n        - ciphertext\n        - cipherparams\n        - cipher\n        - kdf\n        - kdfparams\n        - mac\n      type: object\n      properties:\n        ciphertext:\n          type: string\n        cipherparams:\n          $ref: '#/components/schemas/Cipherparams'\n        cipher:\n          type: string\n        kdf:\n          type: string\n        kdfparams:\n          $ref: '#/components/schemas/Kdfparams'\n        mac:\n          type: string\n      example:\n        ciphertext: 9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f\n        cipherparams:\n          iv: 76e6f2497b9f2a8e024fc752a5418a6d\n        cipher: aes-128-ctr\n        kdf: scrypt\n        kdfparams:\n          dklen: 32\n          salt: d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4\n          'n': 131072\n          r: 8\n          p: 1\n        mac: dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9\n    Cipherparams:\n      title: Cipherparams\n      required:\n        - iv\n      type: object\n      properties:\n        iv:\n          type: string\n      example:\n        iv: 76e6f2497b9f2a8e024fc752a5418a6d\n    Kdfparams:\n      title: Kdfparams\n      required:\n        - dklen\n        - salt\n        - 'n'\n        - r\n        - p\n      type: object\n      properties:\n        dklen:\n          type: integer\n          format: int32\n        salt:\n          type: string\n        'n':\n          type: integer\n          format: int32\n        r:\n          type: integer\n          format: int32\n        p:\n          type: integer\n          format: int32\n      example:\n        dklen: 32\n        salt: d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4\n        'n': 131072\n        r: 8\n        p: 1\n    importAddress:\n      title: importAddress\n      required:\n        - ok\n        - ethaddress\n        - filename\n      type: object\n      properties:\n        ok:\n          type: boolean\n        ethaddress:\n          type: string\n        filename:\n          type: string\n      example:\n        ok: true\n        ethaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n        filename: UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4\n    exportAddressRequest:\n      title: exportAddressRequest\n      required:\n        - ethaddress\n        - password\n      type: object\n      properties:\n        ethaddress:\n          type: string\n        password:\n          type: string\n      example:\n        ethaddress: '0x71892889ed4d79d88ab6ea3783b571b8ece9bef4'\n        password: padN39QkRA2hJ\n    exportAddress:\n      title: exportAddress\n      required:\n        - ok\n        - filename\n        - content\n      type: object\n      properties:\n        ok:\n          type: boolean\n        filename:\n          type: string\n        content:\n          type: string\n      example:\n        ok: true\n        filename: UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4\n        content: '{''version'':3,''id'':''85b790ff-408e-42b8-b123-bec9523964dc'',''address'':''71892889ed4d79d88ab6ea3783b571b8ece9bef4'',''crypto'':{''ciphertext'':''9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f'',''cipherparams'':{''iv'':''76e6f2497b9f2a8e024fc752a5418a6d''},''cipher'':''aes-128-ctr'',''kdf'':''scrypt'',''kdfparams'':{''dklen'':32,''salt'':''d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4'',''n'':131072,''r'':8,''p'':1},''mac'':''dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9''}}'\n    subscribeAddressRequest:\n      title: subscribeAddressRequest\n      required:\n        - ethereumaddress\n        - contractaddress\n        - url\n      type: object\n      properties:\n        ethereumaddress:\n          type: string\n        contractaddress:\n          type: string\n        url:\n          type: string\n      example:\n        ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n        contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n        url: 'https://yoururl.com/ipnreceiver.php'\n    subscribeAddress:\n      title: subscribeAddress\n      required:\n        - ok\n        - ethereumaddress\n        - contractaddress\n        - url\n      type: object\n      properties:\n        ok:\n          type: boolean\n        ethereumaddress:\n          type: string\n        contractaddress:\n          type: string\n        url:\n          type: string\n      example:\n        ok: true\n        ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n        contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n        url: 'https://yoururl.com/ipnreceiver.php'\n    unsubscribeAddressRequest:\n      title: unsubscribeAddressRequest\n      required:\n        - ethereumaddress\n        - contractaddress\n        - url\n      type: object\n      properties:\n        ethereumaddress:\n          type: string\n        contractaddress:\n          type: string\n        url:\n          type: string\n      example:\n        ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n        contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n        url: 'https://yoururl.com/ipnreceiver.php'\n    unsubscribeAddress:\n      title: unsubscribeAddress\n      required:\n        - ok\n        - ethereumaddress\n        - contractaddress\n        - url\n        - deleted\n      type: object\n      properties:\n        ok:\n          type: boolean\n        ethereumaddress:\n          type: string\n        contractaddress:\n          type: string\n        url:\n          type: string\n        deleted:\n          type: boolean\n      example:\n        ok: true\n        ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n        contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n        url: 'https://yoururl.com/ipnreceiver.php'\n        deleted: true\n    listSubscribedAddresses:\n      title: listSubscribedAddresses\n      required:\n        - ok\n        - ipns\n      type: object\n      properties:\n        ok:\n          type: boolean\n        ipns:\n          type: array\n          items:\n            $ref: '#/components/schemas/Ipn'\n      example:\n        ok: true\n        ipns:\n          - ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n            contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n            url: 'https://yoururl.com/ipnreceiver.php'\n    Ipn:\n      title: Ipn\n      required:\n        - ethereumaddress\n        - contractaddress\n        - url\n      type: object\n      properties:\n        ethereumaddress:\n          type: string\n        contractaddress:\n          type: string\n        url:\n          type: string\n      example:\n        ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n        contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n        url: 'https://yoururl.com/ipnreceiver.php'\n    listFailedIPNs:\n      title: listFailedIPNs\n      required:\n        - ok\n        - failed_ipns\n      type: object\n      properties:\n        ok:\n          type: boolean\n        failed_ipns:\n          type: array\n          items:\n            $ref: '#/components/schemas/FailedIpn'\n      example:\n        ok: true\n        failed_ipns:\n          - id: '17766'\n            timestamp: '2020-09-19 14:33:01'\n            ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n            contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n            amount: '496588.7771277759'\n            url: 'https://yoururl.com/ipnreceiver.php'\n            action: deposit\n    FailedIpn:\n      title: FailedIpn\n      required:\n        - id\n        - timestamp\n        - ethereumaddress\n        - contractaddress\n        - amount\n        - url\n        - action\n      type: object\n      properties:\n        id:\n          type: string\n        timestamp:\n          type: string\n        ethereumaddress:\n          type: string\n        contractaddress:\n          type: string\n        amount:\n          type: string\n        url:\n          type: string\n        action:\n          type: string\n      example:\n        id: '17766'\n        timestamp: '2020-09-19 14:33:01'\n        ethereumaddress: '0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974'\n        contractaddress: '0x514910771af9ca656af840dff83e8264ecf986ca'\n        amount: '496588.7771277759'\n        url: 'https://yoururl.com/ipnreceiver.php'\n        action: deposit\n    resendFailedIPNRequest:\n      title: resendFailedIPNRequest\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n      example:\n        id: 17766\n    resendFailedIPN:\n      title: resendFailedIPN\n      required:\n        - ok\n        - id\n      type: object\n      properties:\n        ok:\n          type: boolean\n        id:\n          type: integer\n          format: int32\n      example:\n        ok: true\n        id: 17766\n    sendEthereumRequest:\n      title: sendEthereumRequest\n      required:\n        - from\n        - to\n        - password\n        - amount\n      type: object\n      properties:\n        from:\n          type: string\n        to:\n          type: string\n        password:\n          type: string\n        amount:\n          type: number\n      example:\n        from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n        to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n        password: padN39QkRA2hJ\n        amount: 0.01\n    sendEthereum:\n      title: sendEthereum\n      required:\n        - ok\n        - txid\n        - from\n        - to\n        - amount\n      type: object\n      properties:\n        ok:\n          type: boolean\n        txid:\n          type: string\n        from:\n          type: string\n        to:\n          type: string\n        amount:\n          type: string\n      example:\n        ok: true\n        txid: '0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499'\n        from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n        to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n        amount: '0.010000000000000000'\n    clearAddressRequest:\n      title: clearAddressRequest\n      required:\n        - ethereumaddress\n        - newaddress\n        - password\n      type: object\n      properties:\n        ethereumaddress:\n          type: string\n        newaddress:\n          type: string\n        password:\n          type: string\n      example:\n        ethereumaddress: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n        newaddress: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n        password: padN39QkRA2hJ\n    clearAddress:\n      title: clearAddress\n      required:\n        - ok\n        - txid\n        - ethereumaddress\n        - newaddress\n        - amount\n        - gas\n        - total\n      type: object\n      properties:\n        ok:\n          type: boolean\n        txid:\n          type: string\n        ethereumaddress:\n          type: string\n        newaddress:\n          type: string\n        amount:\n          type: number\n        gas:\n          type: number\n        total:\n          type: string\n      example:\n        ok: true\n        txid: '0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499'\n        ethereumaddress: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n        newaddress: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n        amount: 0.02300916225\n        gas: 0.0025199999999999997\n        total: '0.025529162250000000'\n    sendTokenRequest:\n      title: sendTokenRequest\n      required:\n        - contractaddress\n        - from\n        - to\n        - password\n        - amount\n        - identifier\n      type: object\n      properties:\n        contractaddress:\n          type: string\n        from:\n          type: string\n        to:\n          type: string\n        password:\n          type: string\n        amount:\n          type: integer\n          format: int32\n        identifier:\n          type: string\n      example:\n        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'\n        from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n        to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n        password: padN39QkRA2hJ\n        amount: 5\n        identifier: CN562\n    sendToken:\n      title: sendToken\n      required:\n        - ok\n        - identifier\n        - txid\n        - contractaddress\n        - from\n        - to\n        - amount\n      type: object\n      properties:\n        ok:\n          type: boolean\n        identifier:\n          type: string\n        txid:\n          type: string\n        contractaddress:\n          type: string\n        from:\n          type: string\n        to:\n          type: string\n        amount:\n          type: integer\n          format: int32\n      example:\n        ok: true\n        identifier: CN562\n        txid: '0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499'\n        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'\n        from: '0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8'\n        to: '0xef4943d727e34280a2efa0b3352dfd61f508ee48'\n        amount: 5\n  securitySchemes:\n    api-key:\n      description: All requests on the chaingateway.io API needs to include an API key. The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `Authorization`\n      in: header\n      name: Authorization\n      type: apiKey\n      x-ballerina-apikey-description: \"Provide your API key as `Authorization`. Eg: `{\\\"Authorization\\\" : \\\"\u003cyour API key\u003e\\\"}`\" \ntags:\n  - name: Info Requests\n    description: 'Requests that return information on balances, transactions, gas price, exchange rates, ...'\n  - name: Address Requests\n    description: 'Requests to create, list and delete addresses'\n  - name: Subscription/IPN Requests\n    description: 'Requests for creating, deleting and listing existing subscriptions'\n  - name: Transaction Requests\n    description: 'Requests to send Tokens, Ethereum and clear addresses'\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/chaingateway/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/chaingateway/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}