{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Archive-42/starred-repos"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "CONTAINER/node-express-course/06-jobs-api/final/swagger.yaml",
			"byteSize": 4515,
			"content": "openapi: 3.0.0\ninfo:\n  title: Jobs API\n  contact: {}\n  version: '1.0'\nservers:\n  - url: https://jobs-api-06.herokuapp.com/api/v1\n    variables: {}\npaths:\n  /auth/register:\n    post:\n      tags:\n        - Auth\n      summary: Register User\n      operationId: RegisterUser\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterUserRequest'\n            example:\n              name: bob\n              email: bob@gmail.com\n              password: secret\n        required: true\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  /auth/login:\n    post:\n      tags:\n        - Auth\n      summary: Login User\n      operationId: LoginUser\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginUserRequest'\n            example:\n              email: susan@gmail.com\n              password: secret\n        required: true\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  /jobs:\n    post:\n      tags:\n        - Jobs\n      summary: Create Job\n      operationId: CreateJob\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateJobRequest'\n            example:\n              company: google\n              position: front-end developer\n        required: true\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n    get:\n      tags:\n        - Jobs\n      summary: Get All Jobs\n      operationId: GetAllJobs\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n  /jobs/{id}:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        required: true\n        description: The job ID\n    get:\n      tags:\n        - Jobs\n      summary: Get Single Job\n      operationId: GetSingleJob\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n\n    patch:\n      tags:\n        - Jobs\n      summary: Update Job\n      operationId: UpdateJob\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateJobRequest'\n            example:\n              company: random\n              position: intern\n        required: true\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n    delete:\n      tags:\n        - Jobs\n      summary: Delete Job\n      operationId: DeleteJob\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\ncomponents:\n  schemas:\n    RegisterUserRequest:\n      title: RegisterUserRequest\n      required:\n        - name\n        - email\n        - password\n      type: object\n      properties:\n        name:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n      example:\n        name: bob\n        email: bob@gmail.com\n        password: secret\n    LoginUserRequest:\n      title: LoginUserRequest\n      required:\n        - email\n        - password\n      type: object\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n      example:\n        email: susan@gmail.com\n        password: secret\n    CreateJobRequest:\n      title: CreateJobRequest\n      required:\n        - company\n        - position\n      type: object\n      properties:\n        company:\n          type: string\n        position:\n          type: string\n      example:\n        company: google\n        position: front-end developer\n    UpdateJobRequest:\n      title: UpdateJobRequest\n      required:\n        - company\n        - position\n      type: object\n      properties:\n        company:\n          type: string\n        position:\n          type: string\n      example:\n        company: random\n        position: intern\n  securitySchemes:\n    httpBearer:\n      type: http\n      scheme: bearer\nsecurity:\n  - httpBearer: []\ntags:\n  - name: Auth\n    description: ''\n  - name: Jobs\n    description: ''\n",
			"canonicalURL": "/github.com/Archive-42/starred-repos@6c0380c296e9d7063a6f7ac785ba0c5bc14adfbe/-/blob/CONTAINER/node-express-course/06-jobs-api/final/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Archive-42/starred-repos/blob/6c0380c296e9d7063a6f7ac785ba0c5bc14adfbe/CONTAINER/node-express-course/06-jobs-api/final/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}