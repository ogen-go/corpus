{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Rudge/kotlin-javalin-realworld-example-app"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/main/resources/swagger/api.yaml",
			"byteSize": 22043,
			"content": "openapi: 3.0.0\ninfo:\n  title: Conduit\n  description: |-\n    Collection for testing the Conduit API\n    https://github.com/Rudge/kotlin-javalin-realworld-example-app\n  contact: {}\n  version: '1.0'\nservers:\n  - url: 'http://localhost:7000/api'\n    variables: {}\npaths:\n  /users:\n    post:\n      tags:\n        - Auth\n      summary: Register\n      operationId: Register\n      parameters:\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterRequest'\n            example:\n              user:\n                email: '{{EMAIL}}'\n                password: '{{PASSWORD}}'\n                username: '{{USERNAME}}'\n        required: true\n        x-send-file-in-body: false\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n  /users/login:\n    post:\n      tags:\n        - Auth\n      summary: Login\n      operationId: Login\n      parameters:\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n            example:\n              user:\n                email: '{{EMAIL}}'\n                password: '{{PASSWORD}}'\n        required: true\n        x-send-file-in-body: false\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n  /user:\n    get:\n      tags:\n        - Auth\n      summary: Current User\n      operationId: CurrentUser\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n    put:\n      tags:\n        - Auth\n      summary: Update User\n      operationId: UpdateUser\n      parameters:\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n            example:\n              user:\n                email: '{{EMAIL}}'\n        required: true\n        x-send-file-in-body: false\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  /articles:\n    get:\n      tags:\n        - Articles\n      summary: All Articles\n      operationId: AllArticles\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n    post:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Create Article\n      operationId: CreateArticle\n      parameters:\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateArticleRequest'\n            example:\n              article:\n                title: How to train your dragon\n                description: Ever wonder how?\n                body: Very carefully.\n                tagList:\n                  - dragons\n                  - training\n        required: true\n        x-send-file-in-body: false\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  /articles/feed:\n    get:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Feed\n      operationId: Feed\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  '/articles/{slug}':\n    get:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Single Article by slug\n      operationId: SingleArticlebyslug\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n    put:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Update Article\n      operationId: UpdateArticle\n      parameters:\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateArticleRequest'\n            example:\n              article:\n                body: With two hands\n        required: true\n        x-send-file-in-body: false\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n    delete:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Delete Article\n      operationId: DeleteArticle\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  '/articles/{slug}/favorite':\n    post:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Favorite Article\n      operationId: FavoriteArticle\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n    delete:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Unfavorite Article\n      operationId: UnfavoriteArticle\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  '/articles/{slug}/comments':\n    post:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Create Comment for Article\n      operationId: CreateCommentforArticle\n      parameters:\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCommentforArticleRequest'\n            example:\n              comment:\n                body: Thank you so much!\n        required: true\n        x-send-file-in-body: false\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n    get:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: All Comments for Article\n      operationId: AllCommentsforArticle\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  '/articles/{slug}/comments/{commentId}':\n    delete:\n      tags:\n        - 'Articles, Favorite, Comments'\n      summary: Delete Comment for Article\n      operationId: DeleteCommentforArticle\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: slug\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n        - name: commentId\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  '/profiles/celeb_{USERNAME}':\n    get:\n      tags:\n        - Profiles\n      summary: Profile\n      operationId: Profile\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: USERNAME\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  '/profiles/celeb_{USERNAME}/follow':\n    post:\n      tags:\n        - Profiles\n      summary: Follow Profile\n      operationId: FollowProfile\n      parameters:\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: USERNAME\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FollowProfileRequest'\n            example:\n              user:\n                email: '{{EMAIL}}'\n        required: true\n        x-send-file-in-body: false\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n    delete:\n      tags:\n        - Profiles\n      summary: Unfollow Profile\n      operationId: UnfollowProfile\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n        - name: Authorization\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: 'Token {{token}}'\n        - name: USERNAME\n          in: path\n          required: true\n          style: simple\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\n      security: []\n  /tags:\n    get:\n      tags:\n        - Tags\n      summary: All Tags\n      operationId: AllTags\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: application/json\n        - name: X-Requested-With\n          in: header\n          required: true\n          style: simple\n          schema:\n            type: string\n            example: XMLHttpRequest\n      responses:\n        '200':\n          description: ''\n          headers: {}\n      deprecated: false\ncomponents:\n  schemas:\n    RegisterRequest:\n      title: RegisterRequest\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n      example:\n        user:\n          email: '{{EMAIL}}'\n          password: '{{PASSWORD}}'\n          username: '{{USERNAME}}'\n    User:\n      title: User\n      required:\n        - email\n        - password\n        - username\n      type: object\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n        username:\n          type: string\n      example:\n        email: '{{EMAIL}}'\n        password: '{{PASSWORD}}'\n        username: '{{USERNAME}}'\n    LoginRequest:\n      title: LoginRequest\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User1'\n      example:\n        user:\n          email: '{{EMAIL}}'\n          password: '{{PASSWORD}}'\n    User1:\n      title: User1\n      required:\n        - email\n        - password\n      type: object\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n      example:\n        email: '{{EMAIL}}'\n        password: '{{PASSWORD}}'\n    LoginandRememberTokenRequest:\n      title: LoginandRememberTokenRequest\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User1'\n      example:\n        user:\n          email: '{{EMAIL}}'\n          password: '{{PASSWORD}}'\n    UpdateUserRequest:\n      title: UpdateUserRequest\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User3'\n      example:\n        user:\n          email: '{{EMAIL}}'\n    User3:\n      title: User3\n      required:\n        - email\n      type: object\n      properties:\n        email:\n          type: string\n      example:\n        email: '{{EMAIL}}'\n    CreateArticleRequest:\n      title: CreateArticleRequest\n      required:\n        - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/Article'\n      example:\n        article:\n          title: How to train your dragon\n          description: Ever wonder how?\n          body: Very carefully.\n          tagList:\n            - dragons\n            - training\n    Article:\n      title: Article\n      required:\n        - title\n        - description\n        - body\n        - tagList\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        body:\n          type: string\n        tagList:\n          type: array\n          items:\n            type: string\n      example:\n        title: How to train your dragon\n        description: Ever wonder how?\n        body: Very carefully.\n        tagList:\n          - dragons\n          - training\n    UpdateArticleRequest:\n      title: UpdateArticleRequest\n      required:\n        - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/Article1'\n      example:\n        article:\n          body: With two hands\n    Article1:\n      title: Article1\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          type: string\n      example:\n        body: With two hands\n    CreateCommentforArticleRequest:\n      title: CreateCommentforArticleRequest\n      required:\n        - comment\n      type: object\n      properties:\n        comment:\n          $ref: '#/components/schemas/Comment'\n      example:\n        comment:\n          body: Thank you so much!\n    Comment:\n      title: Comment\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          type: string\n      example:\n        body: Thank you so much!\n    RegisterCelebRequest:\n      title: RegisterCelebRequest\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n      example:\n        user:\n          email: 'celeb_{{EMAIL}}'\n          password: '{{PASSWORD}}'\n          username: 'celeb_{{USERNAME}}'\n    FollowProfileRequest:\n      title: FollowProfileRequest\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User3'\n      example:\n        user:\n          email: '{{EMAIL}}'\ntags:\n  - name: Auth\n  - name: Articles\n  - name: 'Articles, Favorite, Comments'\n  - name: Profiles\n  - name: Tags\n",
			"canonicalURL": "/github.com/Rudge/kotlin-javalin-realworld-example-app@35f52b53a52f96405af4586ed2f991fd8216aa85/-/blob/src/main/resources/swagger/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Rudge/kotlin-javalin-realworld-example-app/blob/35f52b53a52f96405af4586ed2f991fd8216aa85/src/main/resources/swagger/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}