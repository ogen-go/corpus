{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/matter-labs-archive/PlasmaBlockCreator"
		},
		"file": {
			"name": "plasma.yaml",
			"size": 0,
			"path": "docs/plasma.yaml",
			"byteSize": 6115,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"At the moment, plasma operator node has only two methods, `sendRawTX` that receives signed RLP encoded transaction and `listUTXOs` that provides UTXO objects that belongs to a specific owner.\u003cbr\u003e\n  \u003cbr\u003e\n  You can have a look at the source code of our demo app to see how to use this API:\u003cbr\u003e\n  Github: \u003ca href=\\\"https://github.com/matterinc/PlasmaWebUI\\\"\u003ehttps://github.com/matterinc/PlasmaWebUI\u003c/a\u003e\u003cbr\u003e\n  Live demo: \u003ca href=\\\"https://plasma-testnet.thematter.io\\\"\u003ehttps://plasma-testnet.thematter.io/\u003c/a\u003e\u003cbr\u003e\n  \u003cbr\u003e\n  More specifically you can have a look on how to prepare transaction at `transfer` method\n  in \u003ca href=\\\"https://github.com/matterinc/PlasmaWebUI/blob/master/src/Transactions.js#L224\\\"\u003eTransactions.js\u003c/a\u003e file\u003cbr\u003e\n  \u003cp\u003e\u003cb\u003eNote on listUTXOs method:\u003c/b\u003e\u003c/p\u003e\n  `listUTXOs` uses parameters blockNumber, transactionNumber, outputNumber as a structured index to lookup UTXO. It returns UTXO that was created in the block, transaction and output `\u003e=` that specified.\u003cbr\u003e\n  \u003cbr\u003e\n  For example, account owns 175 different UTXO. Then you need send request `listUTXOs` request at least two times to receive them all:\n  \u003cbr\u003e\n  1) Fists you set blockNumber, transactionNumber, outputNumber and limit to 1,0,0, 100 and send the request.\u003cbr\u003e\n  2) Imagine that in response received 100 UTXO and the last one belongs to block 10, transaction 3, output 1.\u003cbr\u003e\n  3) That means you need to send the second request and set blockNumber, transactionNumber and outputNumber to 10/3/1 to get the rest\u003cbr\u003e\n\n\n  \u003cp\u003e\u003cb\u003eNote on transaction fees:\u003c/b\u003e\u003c/p\u003e\n  At the moment the operator doesn't charge any fees for the transaction but is accept the only transaction that:\u003cbr\u003e\n  - Has no more than 3 inputs.\u003cbr\u003e\n  - Has no more than 1 output in merge transaction.\u003cbr\u003e\n  - Has no more than 3 output split transaction.\u003cbr\u003e\n  \"\n  version: \"1.0.0\"\n  title: \"MATTER Plasma operator API\"\nservers:\n  - url: https://plasma-testnet.thematter.io/api/v1\n  - url: https://plasma-mainnet.thematter.io/api/v1\npaths:\n  /sendRawTX:\n    post:\n      summary: \"Accept signed RLP encoded transaction. You can find reference how to prepare it above.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RlpTransaction'\n            example:   # Sample object\n              tx: \"0xf8e6f8a101edec8400000033840000000000a00000000000000000000000000000000000000000000000000de0b6b3a7640000f870f70094b3318181a88e26ac76b2ea385004fe367725e440a000000000000000000000000000000000000000000000000006f05b59d3b20000f70194b3318181a88e26ac76b2ea385004fe367725e440a000000000000000000000000000000000000000000000000006f05b59d3b200001ca05f79383d1fc0e5a0fbea61eead8e453c31fb40eaa37484d73a09fea855724cb3a07f81cf82c86649b251e35599297b9320ce45f69f0e9856b61513c47c78571206\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: boolean\n                    description: Whether an error has occurred\n                  accepted:\n                    type: boolean\n                    description: Whether transaction was accepted in plasma blockchain\n                  reason:\n                    type: string\n                    description: Error message if an error has occurred\n                example:\n                  error: false\n                  accepted: true\n\n  /listUTXOs:\n    post:\n      summary: \"Get unspent transaction outputs for an address\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/listUTXOsRequest'\n            example:\n              for: \"0xb3318181a88e26aC76b2ea385004FE367725e440\"\n              blockNumber: 1\n              limit: 50\n              outputNumber: 0\n              transactionNumber: 0\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: boolean\n                    description: Whether an error has occurred\n                  utxos:\n                    type: array\n                    description: An array of unspent outputs for the specified address\n                    items:\n                      $ref: '#/components/schemas/UTXO'\n                  reason:\n                    type: string\n                    description: Error message if an error has occurred\n\ncomponents:\n  schemas:\n    RlpTransaction:\n      type: object\n      properties:\n        tx:\n          type: string\n          description: Transaction object encoded in RLP and presented as a hex string\n      required:\n        - tx\n    UTXO:\n      type: object\n      properties:\n        blockNumber:\n          type: string\n          description: Number of block that contains specified transaction\n        transactionNumber:\n          type: string\n          description: Number of transaction in block\n        outputNumber:\n          type: string\n          description: Number of transaction output\n        value:\n          type: string\n          description: Transaction amount\n    listUTXOsRequest:\n      type: object\n      properties:\n        for:\n          type: string\n          description: Hex encoded Ethererum address of UTXO owner\n        blockNumber:\n          type: number\n          description: Minimal number of the block where output was created\n        transactionNumber:\n          type: number\n          description: Minimal number of the block where output was created\n        outputNumber:\n          type: number\n          description: Minimal index of the transaction that produces unspended output in the block\n        limit:\n            type: number\n            description: limit of returned values\n            default: 50\n            maximum: 100\n      required:\n        - for\n        - blockNumber\n        - transactionNumber\n        - outputNumber\n",
			"canonicalURL": "/github.com/matter-labs-archive/PlasmaBlockCreator@57b48e0987bb0a5683afa8eb16c7f559cc073fb1/-/blob/docs/plasma.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/matter-labs-archive/PlasmaBlockCreator/blob/57b48e0987bb0a5683afa8eb16c7f559cc073fb1/docs/plasma.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}