{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CustomerProposition.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CustomerProposition.yaml",
			"byteSize": 28713,
			"content": "openapi: 3.0.1\ninfo:\n  title: Customer Proposition\n  description: This Service Domain maintains bank and customer defined requirements spanning all products and services\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CustomerProposition/10.0.0\npaths:\n  /CustomerProposition/{customerpropositionId}/Control:\n    put:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Control Customer Proposition Agreement\n      description: Control Customer Proposition Agreement\n      operationId: Control\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerPropositionAgreement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/Evaluate:\n    post:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Evaluate Customer Proposition Agreement\n      description: Evaluate Customer Proposition Agreement\n      operationId: Evaluate\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerPropositionAgreement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/Exchange:\n    put:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Exchange Customer Proposition Agreement\n      description: Exchange Customer Proposition Agreement\n      operationId: Exchange\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerPropositionAgreement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/Grant:\n    put:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Grant Customer Proposition Agreement\n      description: Grant Customer Proposition Agreement\n      operationId: Grant\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerPropositionAgreement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/Notify:\n    get:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Notify Customer Proposition Agreement\n      description: Notify Customer Proposition Agreement\n      operationId: Notify\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/Request:\n    put:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Request Customer Proposition Agreement\n      description: Request Customer Proposition Agreement\n      operationId: Request\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerPropositionAgreement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/Retrieve:\n    get:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Retrieve Customer Proposition Agreement\n      description: Retrieve Customer Proposition Agreement\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/Update:\n    put:\n      tags:\n      - CR - CustomerPropositionAgreement\n      summary: Update Customer Proposition Agreement\n      description: Update Customer Proposition Agreement\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerPropositionAgreement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerPropositionAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/BankDefinedProductandServiceTerm/Evaluate:\n    post:\n      tags:\n      - BQ - BankDefinedProductandServiceTerm\n      summary: Evaluate Bank Defined Product and Service Term\n      description: Evaluate Bank Defined Product and Service Term\n      operationId: EvaluateBankDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      requestBody:\n        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BankDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/CustomerDefinedProductandServiceTerm/Evaluate:\n    post:\n      tags:\n      - BQ - CustomerDefinedProductandServiceTerm\n      summary: Evaluate Customer Defined Product and Service Term\n      description: Evaluate Customer Defined Product and Service Term\n      operationId: EvaluateCustomerDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermId}/Exchange:\n    put:\n      tags:\n      - BQ - BankDefinedProductandServiceTerm\n      summary: Exchange Bank Defined Product and Service Term\n      description: Exchange Bank Defined Product and Service Term\n      operationId: ExchangeBankDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/BankDefinedProductandServiceTermID'\n      requestBody:\n        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BankDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CustomerProposition/{customerpropositionId}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermId}/Exchange\n  : put:\n      tags:\n      - BQ - CustomerDefinedProductandServiceTerm\n      summary: Exchange Customer Defined Product and Service Term\n      description: Exchange Customer Defined Product and Service Term\n      operationId: ExchangeCustomerDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/CustomerDefinedProductandServiceTermID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermId}/Notify:\n    get:\n      tags:\n      - BQ - BankDefinedProductandServiceTerm\n      summary: Notify Bank Defined Product and Service Term\n      description: Notify Bank Defined Product and Service Term\n      operationId: NotifyBankDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/BankDefinedProductandServiceTermID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BankDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CustomerProposition/{customerpropositionId}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermId}/Notify\n  : get:\n      tags:\n      - BQ - CustomerDefinedProductandServiceTerm\n      summary: Notify Customer Defined Product and Service Term\n      description: Notify Customer Defined Product and Service Term\n      operationId: NotifyCustomerDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/CustomerDefinedProductandServiceTermID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermId}/Request:\n    put:\n      tags:\n      - BQ - BankDefinedProductandServiceTerm\n      summary: Request Bank Defined Product and Service Term\n      description: Request Bank Defined Product and Service Term\n      operationId: RequestBankDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/BankDefinedProductandServiceTermID'\n      requestBody:\n        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BankDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CustomerProposition/{customerpropositionId}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermId}/Request\n  : put:\n      tags:\n      - BQ - CustomerDefinedProductandServiceTerm\n      summary: Request Customer Defined Product and Service Term\n      description: Request Customer Defined Product and Service Term\n      operationId: RequestCustomerDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/CustomerDefinedProductandServiceTermID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermId}/Retrieve:\n    get:\n      tags:\n      - BQ - BankDefinedProductandServiceTerm\n      summary: Retrieve Bank Defined Product and Service Term\n      description: Retrieve Bank Defined Product and Service Term\n      operationId: RetrieveBankDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/BankDefinedProductandServiceTermID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BankDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CustomerProposition/{customerpropositionId}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermId}/Retrieve\n  : get:\n      tags:\n      - BQ - CustomerDefinedProductandServiceTerm\n      summary: Retrieve Customer Defined Product and Service Term\n      description: Retrieve Customer Defined Product and Service Term\n      operationId: RetrieveCustomerDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/CustomerDefinedProductandServiceTermID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProposition/{customerpropositionId}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermId}/Update:\n    put:\n      tags:\n      - BQ - BankDefinedProductandServiceTerm\n      summary: Update Bank Defined Product and Service Term\n      description: Update Bank Defined Product and Service Term\n      operationId: UpdateBankDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/BankDefinedProductandServiceTermID'\n      requestBody:\n        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BankDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  ? /CustomerProposition/{customerpropositionId}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermId}/Update\n  : put:\n      tags:\n      - BQ - CustomerDefinedProductandServiceTerm\n      summary: Update Customer Defined Product and Service Term\n      description: Update Customer Defined Product and Service Term\n      operationId: UpdateCustomerDefinedProductandServiceTerm\n      parameters:\n      - $ref: '#/components/parameters/CustomerPropositionID'\n      - $ref: '#/components/parameters/CustomerDefinedProductandServiceTermID'\n      requestBody:\n        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CustomerPropositionAgreement:\n      type: object\n      properties:\n        CustomerPropositionAgreementParameterType:\n          type: string\n        CustomerPropositionAgreementSelectedOption:\n          type: string\n        CustomerPropositionAgreementType:\n          type: string\n        CustomerPropositionAgreementReference:\n          type: string\n        CustomerPropositionAgreementDischargeRequest:\n          type: string\n        CustomerPropositionAgreementDischargeSchedule:\n          type: object\n        CustomerPropositionAgreementStatus:\n          type: string\n        CustomerPropositionAgreementAssociatedParty:\n          type: object\n        CustomerPropositionAgreementCustomerReference:\n          type: object\n        CustomerPropositionAgreementObligation:\n          type: string\n        CustomerPropositionAgreementEntitlement:\n          type: string\n        CustomerPropositionAgreementRegulationReference:\n          type: object\n        CustomerPropositionAgreementRegulationType:\n          type: string\n        CustomerPropositionAgreementJurisdiction:\n          type: object\n        CustomerPropositionAgreementAccountReference:\n          type: string\n        CustomerPropositionAgreementSubjectMatter:\n          type: object\n        CustomerPropositionAgreementProductReference:\n          type: object\n        CustomerPropositionAgreementCalendarReference:\n          type: string\n        CustomerPropositionAgreementAssociatedAgreementReference:\n          type: string\n    CustomerDefinedProductandServiceTerm:\n      type: object\n      properties:\n        Preconditions:\n          type: object\n        Schedule:\n          type: object\n        BusinessService:\n          type: object\n        CustomerPropositionAgreementReference:\n          type: string\n        CustomerDefinedProductandServiceTermReference:\n          type: string\n        CustomerDefinedProductandServiceTermType:\n          type: string\n    BankDefinedProductandServiceTerm:\n      type: object\n      properties:\n        Preconditions:\n          type: object\n        Schedule:\n          type: object\n        BusinessService:\n          type: object\n        CustomerPropositionAgreementReference:\n          type: string\n        BankDefinedProductandServiceTermReference:\n          type: string\n        BankDefinedProductandServiceTermType:\n          type: string\n    CustomerPropositionOutcome:\n      type: object\n      properties:\n        CustomerPropositionAgreement:\n          type: string\n        CustomerPropositionWorkProduct:\n          type: object\n        CustomerPropositionWorkProductType:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n  parameters:\n    CustomerPropositionID:\n      name: customerpropositionId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    CustomerDefinedProductandServiceTermID:\n      name: customerdefinedproductandservicetermId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    BankDefinedProductandServiceTermID:\n      name: bankdefinedproductandservicetermId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    CustomerPropositionOutcomeID:\n      name: customerpropositionoutcomeId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    CustomerPropositionAgreement:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CustomerPropositionAgreement'\n    BankDefinedProductandServiceTerm:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BankDefinedProductandServiceTerm'\n    CustomerDefinedProductandServiceTerm:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CustomerProposition.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CustomerProposition.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}