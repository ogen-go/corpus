{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/OCWA"
		},
		"file": {
			"name": "v1.yaml",
			"size": 0,
			"path": "microservices/validateApi/v1/spec/v1.yaml",
			"byteSize": 7551,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: OCWA Validate API\n  license:\n    name: Apache 2.0\n  description: |-\n    # OCWA Validate API\n    This is the documentation for the OCWA Validate API.\nservers:\n  - url: '/v1'\ntags:\n  - name: Status\n    description: API status\n  - name: Validate Policy\n    description: Policy Validation operations\n  - name: Validate Rule\n    description: Rule Validation operations\npaths:\n  /status:\n    get:\n      summary: Return overall API status\n      description: Returns the overall API status\n      tags:\n        - Status\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/status'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/validate/{fileId}':\n    parameters:\n      - $ref: '#/components/parameters/fileId'\n    get:\n      summary: Find validation result\n      description: Returns the result of file\n      tags:\n        - Validate Policy\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validatePolicy'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n    put:\n      summary: Validate a file\n      description: \u003e-\n        Requests the file to be validated. By default, only mandatory policies\n        will be executed. Only policies without results will be executed.\n      tags:\n        - Validate Policy\n      responses:\n        '201':\n          description: Created new file\n        '202':\n          description: Accepted existing file\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/validate/{fileId}/{ruleId}':\n    parameters:\n      - $ref: '#/components/parameters/fileId'\n      - $ref: '#/components/parameters/ruleId'\n    get:\n      summary: Find validation result from specific rule\n      description: Returns the result of file under the specific rule.\n      tags:\n        - Validate Rule\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validateObject'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n    put:\n      summary: Validate a file with specific rule\n      description: \u003e-\n        Requests the file to be validated under the specific rule. The specific\n        rule will be tested on the file if and only if it has not been executed\n        before.\n      tags:\n        - Validate Rule\n      responses:\n        '201':\n          description: Created new file\n        '202':\n          description: Accepted existing file\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\ncomponents:\n  parameters:\n    fileId:\n      name: fileId\n      in: path\n      description: The file Object ID\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-fA-F0-9]{24}$'\n        example: ff4c5d676443a37cc86ea7e0\n    ruleId:\n      name: ruleId\n      in: path\n      description: The rule Object ID\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-fA-F0-9]{24}$'\n        example: 9fe294e84f2b6462e779257e\n  responses:\n    401Unauthorized:\n      description: Unauthorized\n    404NotFound:\n      description: Not Found\n    500InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n  schemas:\n    errorResponse:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error message\n          example: Something exploded\n        code:\n          type: integer\n          format: int32\n          minimum: 0\n          description: Error code\n          example: 42\n    status:\n      type: object\n      properties:\n        endpoint_load:\n          type: integer\n          format: int32\n          minimum: 0\n          description: Number of validations in progress\n          example: 0\n        operational:\n          type: boolean\n          description: Validation API functional\n          example: true\n        policy_endpoint:\n          $ref: '#/components/schemas/statusEndpointState'\n        storage_endpoint:\n          $ref: '#/components/schemas/statusEndpointState'\n    statusEndpointState:\n      type: object\n      properties:\n        endpoint:\n          type: string\n          format: url\n          description: Endpoint URL\n          example: 'http://example.endpoint/v1'\n        name:\n          type: string\n          description: Endpoint Name\n          example: Example Endpoint\n        status:\n          type: boolean\n          description: Endpoint Reachability\n          example: true\n    validateArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/validateObject'\n    validateObject:\n      type: object\n      properties:\n        file_id:\n          type: string\n          description: File Object ID\n          pattern: '^[a-fA-F0-9]{24}$'\n          example: ff4c5d676443a37cc86ea7e0\n        file_name:\n          type: string\n          description: Filename\n          pattern: '^[a-zA-Z0-9\\s\\-\\_]+\\.[a-zA-Z0-9]+$'\n          example: party_parrot.csv\n        message:\n          type: string\n          description: Result Details\n          example: File Size Exceeded\n        rule_id:\n          type: string\n          description: Rule Object ID\n          pattern: '^[a-fA-F0-9]{24}$'\n          example: 9fe294e84f2b6462e779257e\n        rule_name:\n          type: string\n          description: Rule Name\n          pattern: ^.+$\n          example: File Size Limit\n        state:\n          $ref: '#/components/schemas/validateState'\n    validatePolicy:\n      type: object\n      properties:\n        file_id:\n          type: string\n          description: File Object ID\n          pattern: '^[a-fA-F0-9]{24}$'\n          example: ff4c5d676443a37cc86ea7e0\n        file_name:\n          type: string\n          description: Filename\n          pattern: '^[a-zA-Z0-9\\s_-]+\\.[a-zA-Z0-9]+$'\n          example: party_parrot.csv\n        results:\n          $ref: '#/components/schemas/validateArray'\n        state:\n          $ref: '#/components/schemas/validateState'\n    validateState:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      description: 'Validation Result State. 0 = pass, 1 = fail, 2 = pending.'\n      example: 1\n  securitySchemes:\n    apiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\nsecurity:\n  - apiKeyAuth: []\n",
			"canonicalURL": "/github.com/bcgov/OCWA@e0bd0763ed1e3c0acc498cb1689778b4e22a475c/-/blob/microservices/validateApi/v1/spec/v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bcgov/OCWA/blob/e0bd0763ed1e3c0acc498cb1689778b4e22a475c/microservices/validateApi/v1/spec/v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}