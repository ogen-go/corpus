{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SofthouseVxo/Education"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "code/express-examples/13.openapi/swagger/swagger.yaml",
			"byteSize": 4413,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Unspecified user API for BongBong?\n  description: |\n    \u003cb\u003ehtml Formatting is possible\u003c/b\u003e\n    \n    [markdown too](http://localhost:3000/swagger.yaml)\n    \n    As long as the indent isn't less than what you have\n    \n    ```json\n    {\"code\": \"can be formatted in markdown\"}\n    ```\n  license:\n    name: MIT\nservers:\n  - url: http://localhost:3000\npaths:\n  /users:\n    get:\n      summary: List all users\n      operationId: listUsers\n      tags:\n        - users\n      parameters:\n        - name: userName\n          in: query\n          description: name of the user to filter\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: a list of users matching the fiter\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Users\"\n        '400':\n          description: request format error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a user\n      operationId: createUser\n      tags:\n        - users\n      requestBody:\n        content:\n          application/json:    \n            schema:\n              $ref: \"#/components/schemas/User\"\n      responses:\n        '201':\n          description: the created user\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Users\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    User:\n      type: object\n      required:\n      - username\n      properties:\n        name:\n          type: string\n        username:\n          type: string\n        email:\n          type: string\n          description: \"must be unique, stored in lowercase\"\n        address:\n          type: object\n          properties:\n            street:\n              type: string\n            suite:\n              type: string\n            city:\n              type: string\n            zipcode:\n              type: integer\n            geo:\n              type: object\n              properties:\n                lat:\n                  type: number\n                  format: float\n                lng:\n                  type: number\n                  format: float\n    Users:\n      type: array\n      items: \n        $ref: \"#/components/schemas/User\"\n    Pet:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    UserError:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            expose:\n              type: boolean\n            statusCode:\n              type: integer\n            status:\n              type: integer\n            body:\n              type: string\n              description: body contents of the request that failed\n            type:\n              type: string\n              description: type of error\n    Error:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            name:\n              type: string\n              description: name of the internal error\n\n            \n\n",
			"canonicalURL": "/github.com/SofthouseVxo/Education@64caff7283904305d74aaed94786100011ac7c38/-/blob/code/express-examples/13.openapi/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SofthouseVxo/Education/blob/64caff7283904305d74aaed94786100011ac7c38/code/express-examples/13.openapi/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}