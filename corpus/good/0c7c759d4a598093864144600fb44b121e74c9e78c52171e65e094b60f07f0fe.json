{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/outscale/osc-sdk-go"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "v2/api/openapi.yaml",
			"byteSize": 755399,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: support@outscale.com\n  description: |-\n    Welcome to the OUTSCALE API documentation.\u003cbr /\u003e\n    The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.\u003cbr /\u003e\u003cbr /\u003e\n    You can learn more about errors returned by the API in the dedicated [errors page](api/errors).\u003cbr /\u003e\u003cbr /\u003e\n    Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.\u003cbr /\u003e\n    You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.\n  license:\n    name: BSD 3 Clause\n    url: https://opensource.org/licenses/BSD-3-Clause\n  termsOfService: https://en.outscale.com/terms-of-service/\n  title: 3DS OUTSCALE API\n  version: \"1.20\"\nservers:\n- url: https://api.{region}.outscale.com/api/v1\n  variables:\n    region:\n      default: eu-west-2\n      enum:\n      - ap-northeast-1\n      - cloudgouv-eu-west-1\n      - eu-west-2\n      - us-east-2\n      - us-west-1\n- url: https://api.{region}.outscale.jp/api/v1\n  variables:\n    region:\n      default: ap-northeast-1\n      enum:\n      - ap-northeast-1\nsecurity:\n- ApiKeyAuth: []\npaths:\n  /AcceptNetPeering:\n    description: |-\n      Accepts a Net peering connection request.\u003cbr /\u003e\n      To accept this request, you must be the owner of the peer Net. If you do not accept the request within 7 days, the state of the Net peering connection becomes `expired`.\u003cbr /\u003e\u003cbr /\u003e\n      **[NOTE]**\u003cbr /\u003e\n      A peering connection between two Nets works both ways. Therefore, when an A-to-B peering connection is accepted, any pending B-to-A peering connection is automatically rejected as redundant.\n    post:\n      operationId: AcceptNetPeering\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AcceptNetPeeringRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AcceptNetPeeringResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 409 response (Conflict).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NetPeering\n  /CheckAuthentication:\n    description: Validates the authenticity of the account.\n    post:\n      operationId: CheckAuthentication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckAuthenticationRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckAuthenticationResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Account\n  /CreateAccessKey:\n    description: Creates an access key for your account. The new key is automatically\n      set to `ACTIVE`.\n    post:\n      operationId: CreateAccessKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAccessKeyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAccessKeyResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - AccessKey\n  /CreateAccount:\n    description: |-\n      Creates an OUTSCALE account.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      * You need OUTSCALE credentials and the appropriate quotas to create an account via API. To get quotas, you can send an email to sales@outscale.com.\u003cbr /\u003e\n      * If you want to pass a numeral value as a string instead of an integer, you must wrap your string in additional quotes (for example, `'\u0026quot;92000\u0026quot;'`).\n    post:\n      operationId: CreateAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAccountRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAccountResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Account\n  /CreateApiAccessRule:\n    description: |-\n      Creates a rule to allow access to the API from your account.\u003cbr /\u003e\n      You need to specify at least the `CaIds` or the `IpRanges` parameter.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      By default, your account has a set of rules allowing global access that you can delete. For more information, see [About API Access Rules](https://docs.outscale.com/en/userguide/About-API-Access-Rules.html).\n    post:\n      operationId: CreateApiAccessRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateApiAccessRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateApiAccessRuleResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - ApiAccessRule\n  /CreateCa:\n    description: |-\n      Creates a Client Certificate Authority (CA).\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you use OSC CLI, the content of your certificate file must be enclosed in quotes before you pass it into this command. For example:\u003cbr /\u003e\n      `$ cat ca-string.pem`\u003cbr /\u003e\n      `'-----BEGIN CERTIFICATE-----\\nXXXX\\nXXXX\\nXXXX\\n-----END CERTIFICATE-----\\n'`\u003cbr /\u003e\n      `$ osc-cli api CreateCa --CaPem \u0026quot;$(cat ca-string.pem)\u0026quot;`\n    post:\n      operationId: CreateCa\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCaRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateCaResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - Ca\n  /CreateClientGateway:\n    description: |-\n      Provides information about your client gateway.\u003cbr /\u003e\n      This action registers information to identify the client gateway that you deployed in your network.\u003cbr /\u003e\n      To open a tunnel to the client gateway, you must provide the communication protocol type, the fixed public IP of the gateway, and an Autonomous System Number (ASN).\n    post:\n      operationId: CreateClientGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateClientGatewayRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateClientGatewayResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ClientGateway\n  /CreateDhcpOptions:\n    description: Creates a set of DHCP options, that you can then associate with a\n      Net using the [UpdateNet](#updatenet) method.\n    post:\n      operationId: CreateDhcpOptions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDhcpOptionsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDhcpOptionsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DhcpOption\n  /CreateDirectLink:\n    description: Creates a DirectLink between a customer network and a specified DirectLink\n      location.\n    post:\n      operationId: CreateDirectLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDirectLinkRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDirectLinkResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DirectLink\n  /CreateDirectLinkInterface:\n    description: |-\n      Creates a DirectLink interface.\u003cbr /\u003e\n      DirectLink interfaces enable you to reach one of your Nets through a virtual gateway.\n    post:\n      operationId: CreateDirectLinkInterface\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDirectLinkInterfaceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDirectLinkInterfaceResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DirectLinkInterface\n  /CreateFlexibleGpu:\n    description: |-\n      Allocates a flexible GPU (fGPU) to your account.\u003cbr /\u003e\n      You can then attach this fGPU to a virtual machine (VM).\n    post:\n      operationId: CreateFlexibleGpu\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateFlexibleGpuRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFlexibleGpuResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - FlexibleGpu\n  /CreateImage:\n    description: |-\n      Creates an OUTSCALE machine image (OMI) from an existing virtual machine (VM) which is either running or stopped.\u003cbr /\u003e\n      This action also creates a snapshot of the root volume of the VM, as well as a snapshot of each Block Storage Unit (BSU) volume attached to the VM. For more information, see [About OMIs](https://docs.outscale.com/en/userguide/About-OMIs.html).\u003cbr /\u003e\u003cbr /\u003e\n\n      You can also use this method to copy an OMI to your account, from an account in the same Region. To do so, the owner of the source OMI must share it with your account. For more information about how to share an OMI with another account in the same Region, see [UpdateImage](#updateimage).\u003cbr /\u003e\n      To copy an OMI between accounts in different Regions, the owner of the source OMI must first export it to an OUTSCALE Object Storage (OOS) bucket using the [CreateImageExportTask](#createimageexporttask) method, and then you need to create a copy of the image in your account.\u003cbr /\u003e\n      The copy of the source OMI is independent and belongs to you.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can also use this method to register an OMI to finalize its creation process.\u003cbr /\u003e\n      You can register an OMI from a snapshot of a root device to create an OMI based on this snapshot. You can also register an OMI that has been exported to an S3-compatible bucket to create a copy of it in your account. For more information about OMI export to an OOS bucket, see [CreateImageExportTask](#createimageexporttask).\u003cbr /\u003e\n      You can register an OMI using a pre-signed URL of the manifest file of the OMI. You do not need any permission for this OMI, or the bucket in which it is contained. The manifest file is obsolete seven days after a completed export as it contains pre-signed URLs to the appropriate snapshots (pre-signed URLs are valid for only seven days).\u003cbr /\u003e\n      Once the OMI is registered, you can launch a VM from this OMI. The copy of the source OMI is independent and belongs to you.\n    post:\n      operationId: CreateImage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateImageRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateImageResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Image\n  /CreateImageExportTask:\n    description: |-\n      Exports an Outscale machine image (OMI) to an OUTSCALE Object Storage (OOS) bucket.\u003cbr /\u003e\n      This action enables you to copy an OMI between accounts in different Regions. To copy an OMI in the same Region, you can also use the [CreateImage](#createimage) method.\u003cbr /\u003e\n      The copy of the OMI belongs to you and is independent from the source OMI.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      You cannot export a shared or public OMI, as they do not belong to you. To do so, you must first copy it to your account. The copy then belongs to you and you can export it.\n    post:\n      operationId: CreateImageExportTask\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateImageExportTaskRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateImageExportTaskResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Image\n  /CreateInternetService:\n    description: |-\n      Creates an Internet service you can use with a Net.\u003cbr /\u003e\n      An Internet service enables your virtual machines (VMs) launched in a Net to connect to the Internet. By default, a Net includes an Internet service, and each Subnet is public. Every VM launched within a default Subnet has a private IP and a public IP.\n    post:\n      operationId: CreateInternetService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateInternetServiceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateInternetServiceResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - InternetService\n  /CreateKeypair:\n    description: |-\n      Creates a 2048-bit RSA keypair with a specified name.\u003cbr /\u003e\n      This action returns the private key that you need to save. The public key is stored by 3DS OUTSCALE.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can also import a public key in one of the following formats: 1024-bit RSA, 2048-bit RSA, 4096-bit RSA, ECDSA and Ed25519.\u003cbr /\u003e\n      This action imports the public key of a keypair created by a third-party tool and uses it to create a 2048-bit RSA keypair. The private key is never provided to 3DS OUTSCALE.\n    post:\n      operationId: CreateKeypair\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateKeypairRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateKeypairResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 409 response (Conflict).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Keypair\n  /CreateListenerRule:\n    description: |-\n      Creates a rule for traffic redirection for the specified listener. Each rule must have either the `HostNamePattern` or `PathPattern` parameter specified. Rules are treated in priority order, from the highest value to the lowest value.\u003cbr /\u003e\n      Once the rule is created, you need to register backend VMs with it. For more information, see the [RegisterVmsInLoadBalancer](#registervmsinloadbalancer) method.\n    post:\n      operationId: CreateListenerRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateListenerRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateListenerRuleResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Listener\n  /CreateLoadBalancer:\n    description: |-\n      Creates a load balancer.\u003cbr /\u003e\n      The load balancer is created with a unique Domain Name Service (DNS) name. It receives the incoming traffic and routes it to its registered virtual machines (VMs).\u003cbr /\u003e\n      By default, this action creates an Internet-facing load balancer, resolving to public IPs. To create an internal load balancer in a Net, resolving to private IPs, use the `LoadBalancerType` parameter.\u003cbr /\u003e\n      You must specify either the `Subnets` or the `SubregionNames` parameters.\n    post:\n      operationId: CreateLoadBalancer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLoadBalancerRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLoadBalancerResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /CreateLoadBalancerListeners:\n    description: Creates one or more listeners for a specified load balancer.\n    post:\n      operationId: CreateLoadBalancerListeners\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLoadBalancerListenersRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLoadBalancerListenersResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Listener\n  /CreateLoadBalancerPolicy:\n    description: |-\n      Creates a stickiness policy with sticky session lifetimes defined by the browser lifetime.\u003cbr /\u003e\n      The created policy can be used with HTTP or HTTPS listeners only.\u003cbr /\u003e\n      If this policy is implemented by a load balancer, this load balancer uses this cookie in all incoming requests to direct them to the specified back-end server virtual machine (VM). If this cookie is not present, the load balancer sends the request to any other server according to its load-balancing algorithm.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can also create a stickiness policy with sticky session lifetimes following the lifetime of an application-generated cookie.\u003cbr /\u003e\n      Unlike the other type of stickiness policy, the lifetime of the special Load Balancer Unit (LBU) cookie follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer inserts a new stickiness cookie only when the application response includes a new application cookie.\u003cbr /\u003e\n      The session stops being sticky if the application cookie is removed or expires, until a new application cookie is issued.\n    post:\n      operationId: CreateLoadBalancerPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLoadBalancerPolicyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLoadBalancerPolicyResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancerPolicy\n  /CreateLoadBalancerTags:\n    description: |-\n      Adds one or more tags to the specified load balancers.\u003cbr /\u003e\n      If a tag with the same key already exists for the load balancer, the tag value is replaced.\n    post:\n      operationId: CreateLoadBalancerTags\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLoadBalancerTagsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLoadBalancerTagsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /CreateNatService:\n    description: |-\n      Creates a network address translation (NAT) service in the specified public Subnet of a Net.\u003cbr /\u003e\n      A NAT service enables virtual machines (VMs) placed in the private Subnet of this Net to connect to the Internet, without being accessible from the Internet.\u003cbr /\u003e\n      When creating a NAT service, you specify the allocation ID of the public IP you want to use as public IP for the NAT service. Once the NAT service is created, you need to create a route in the route table of the private Subnet, with 0.0.0.0/0 as destination and the ID of the NAT service as target. For more information, see [LinkPublicIP](#linkpublicip) and [CreateRoute](#createroute).\u003cbr /\u003e\n      This action also enables you to create multiple NAT services in the same Net (one per public Subnet).\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      You cannot modify the public IP associated with a NAT service after its creation. To do so, you need to delete the NAT service and create a new one with another public IP.\n    post:\n      operationId: CreateNatService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNatServiceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateNatServiceResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NatService\n  /CreateNet:\n    description: |-\n      Creates a Net with a specified IP range.\u003cbr /\u003e\n      The IP range (network range) of your Net must be between a /28 netmask (16 IPs) and a /16 netmask (65536 IPs).\n    post:\n      operationId: CreateNet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNetRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateNetResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 409 response (Conflict).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Net\n  /CreateNetAccessPoint:\n    description: |-\n      Creates a Net access point to access an OUTSCALE service from this Net without using the Internet and public IPs.\u003cbr /\u003e\n      You specify the service using its name. For more information about the available services, see [ReadNetAccessPointServices](#readnetaccesspointservices).\u003cbr /\u003e\n      To control the routing of traffic between the Net and the specified service, you can specify one or more route tables. Virtual machines placed in Subnets associated with the specified route table thus use the Net access point to access the service. When you specify a route table, a route is automatically added to it with the destination set to the prefix list ID of the service, and the target set to the ID of the access point.\n    post:\n      operationId: CreateNetAccessPoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNetAccessPointRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateNetAccessPointResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - NetAccessPoint\n  /CreateNetPeering:\n    description: |-\n      Requests a Net peering connection between a Net you own and a peer Net that belongs to you or another account.\u003cbr /\u003e\n      This action creates a Net peering connection that remains in the `pending-acceptance` state until it is accepted by the owner of the peer Net. If the owner of the peer Net does not accept the request within 7 days, the state of the Net peering connection becomes `expired`. For more information, see [AcceptNetPeering](#acceptnetpeering).\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      * The two Nets must not have overlapping IP ranges. Otherwise, the Net peering connection is in the `failed` state.\n      * A peering connection between two Nets works both ways. Therefore, you do not need to create a B-to-A connection if an A-to-B connection is created and accepted.\n    post:\n      operationId: CreateNetPeering\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNetPeeringRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateNetPeeringResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NetPeering\n  /CreateNic:\n    description: Creates a network interface card (NIC) in the specified Subnet.\n    post:\n      operationId: CreateNic\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNicRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateNicResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /CreatePublicIp:\n    description: |-\n      Acquires a public IP for your account.\u003cbr /\u003e\n      A public IP is a static IP designed for dynamic Cloud computing. It can be associated with a virtual machine (VM) in the public Cloud or in a Net, a network interface card (NIC), a NAT service.\n    post:\n      operationId: CreatePublicIp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePublicIpRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatePublicIpResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - PublicIp\n  /CreateRoute:\n    description: |-\n      Creates a route in a specified route table within a specified Net.\u003cbr /\u003e\n      You must specify one of the following elements as the target:\u003cbr /\u003e\u003cbr /\u003e\n\n      * Net peering connection\u003cbr /\u003e\n      * NAT VM\u003cbr /\u003e\n      * Internet service\u003cbr /\u003e\n      * Virtual gateway\u003cbr /\u003e\n      * NAT service\u003cbr /\u003e\n      * Network interface card (NIC)\u003cbr /\u003e\u003cbr /\u003e\n\n      The routing algorithm is based on the most specific match.\n    post:\n      operationId: CreateRoute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRouteRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRouteResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Route\n  /CreateRouteTable:\n    description: |-\n      Creates a route table for a specified Net.\u003cbr /\u003e\n      You can then add routes and associate this route table with a Subnet.\n    post:\n      operationId: CreateRouteTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRouteTableRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRouteTableResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - RouteTable\n  /CreateSecurityGroup:\n    description: |-\n      Creates a security group.\u003cbr /\u003e\n      This action creates a security group either in the public Cloud or in a specified Net. By default, a default security group for use in the public Cloud and a default security group for use in a Net are created.\u003cbr /\u003e\n      When launching a virtual machine (VM), if no security group is explicitly specified, the appropriate default security group is assigned to the VM. Default security groups include a default rule granting VMs network access to each other.\u003cbr /\u003e\n      When creating a security group, you specify a name. Two security groups for use in the public Cloud or for use in a Net cannot have the same name.\u003cbr /\u003e\n      You can have up to 500 security groups in the public Cloud. You can create up to 500 security groups per Net.\u003cbr /\u003e\n      To add or remove rules, use the [CreateSecurityGroupRule](#createsecuritygrouprule) method.\n    post:\n      operationId: CreateSecurityGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSecurityGroupRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSecurityGroupResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - SecurityGroup\n  /CreateSecurityGroupRule:\n    description: |-\n      Configures the rules for a security group.\u003cbr /\u003e\n      The modifications are effective at virtual machine (VM) level as quickly as possible, but a small delay may occur.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can add one or more egress rules to a security group for use with a Net.\u003cbr /\u003e\n      It allows VMs to send traffic to either one or more destination IP ranges or destination security groups for the same Net.\u003cbr /\u003e\n      We recommend using a set of IP permissions to authorize outbound access to a destination security group. We also recommended this method to create a rule with a specific IP protocol and a specific port range.  In a set of IP permissions, we recommend to specify the the protocol.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can also add one or more ingress rules to a security group.\u003cbr /\u003e\n      In the public Cloud, this action allows one or more IP ranges to access a security group for your account, or allows one or more security groups (source groups) to access a security group for your own OUTSCALE account or another one.\u003cbr /\u003e\n      In a Net, this action allows one or more  IP ranges to access a security group for your Net, or allows one or more other security groups (source groups) to access a security group for your Net. All the security groups must be for the same Net.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      By default, traffic between two security groups is allowed through both public and private IPs. To restrict it to private IPs only, contact our Support team: support@outscale.com.\n    post:\n      operationId: CreateSecurityGroupRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSecurityGroupRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSecurityGroupRuleResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - SecurityGroupRule\n  /CreateServerCertificate:\n    description: |-\n      Creates a server certificate and its matching private key.\u003cbr /\u003e\u003cbr /\u003e\n      These elements can be used with other services (for example, to configure SSL termination on load balancers).\u003cbr /\u003e\u003cbr /\u003e\n      You can also specify the chain of intermediate certification authorities if your certificate is not directly signed by a root one. You can specify multiple intermediate certification authorities in the `CertificateChain` parameter. To do so, concatenate all certificates in the correct order (the first certificate must be the authority of your certificate, the second must the the authority of the first one, and so on).\u003cbr /\u003e\u003cbr /\u003e\n      The private key must be a RSA key in PKCS1 form. To check this, open the PEM file and ensure its header reads as follows: BEGIN RSA PRIVATE KEY.\u003cbr /\u003e\u003cbr /\u003e\n      [IMPORTANT]\u003cbr /\u003e\u003cbr /\u003e\n      This private key must not be protected by a password or a passphrase.\n    post:\n      operationId: CreateServerCertificate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateServerCertificateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateServerCertificateResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ServerCertificate\n  /CreateSnapshot:\n    description: |-\n      Creates a snapshot of a Block storage Unit (BSU) volume.\u003cbr /\u003e\n      Snapshots are point-in-time images of a volume you can use to back up your data or to create replicas of this volume at the time the snapshot was created.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can also use this method to copy a snapshot to your account, from an account in the same Region.\u003cbr /\u003e\n      To do so, the owner of the source snapshot must share it with your account. For more information about how to share a snapshot with another account, see [UpdateSnapshot](#updatesnapshot).\u003cbr /\u003e\n      The copy of the source snapshot is independent and belongs to you.\u003cbr /\u003e\u003cbr /\u003e\n\n      To copy a snapshot between accounts in different Regions, the owner of the source snapshot must export it to an OUTSCALE Object Storage (OOS) bucket using the [CreateSnapshotExportTask](#createsnapshotexporttask) method. You then need to import it from the bucket to create a copy of this snapshot in your account.\u003cbr /\u003e\n      You can import a snapshot using a pre-signed URL. You do not need any permission for this snapshot, or the bucket in which it is contained. The pre-signed URL is valid for seven days (you can regenerate a new one if needed).\n    post:\n      operationId: CreateSnapshot\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSnapshotRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSnapshotResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Snapshot\n  /CreateSnapshotExportTask:\n    description: |-\n      Exports a snapshot to an OUTSCALE Object Storage (OOS) bucket.\u003cbr /\u003e\n      This action enables you to create a backup of your snapshot or to copy it to another account. You, or other users you send a pre-signed URL to, can then download this snapshot from the bucket using the [CreateSnapshot](#createsnapshot) method.\u003cbr /\u003e\n      This procedure enables you to copy a snapshot between accounts within the same Region or in different Regions. To copy a snapshot within the same Region, you can also use the [CreateSnapshot](#createsnapshot) direct method. The copy of the source snapshot is independent and belongs to you.\n    post:\n      operationId: CreateSnapshotExportTask\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSnapshotExportTaskRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSnapshotExportTaskResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Snapshot\n  /CreateSubnet:\n    description: |-\n      Creates a Subnet in an existing Net.\u003cbr /\u003e\n      To create a Subnet in a Net, you have to provide the ID of the Net and the IP range for the Subnet (its network range). Once the Subnet is created, you cannot modify its IP range.\u003cbr /\u003e\n      The IP range of the Subnet can be either the same as the Net one if you create only a single Subnet in this Net, or a subset of the Net one. In case of several Subnets in a Net, their IP ranges must not overlap. The smallest Subnet you can create uses a /30 netmask (four IPs).\n    post:\n      operationId: CreateSubnet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubnetRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSubnetResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 409 response (Conflict).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Subnet\n  /CreateTags:\n    description: |-\n      Adds one or more tags to the specified resources.\u003cbr /\u003e\n      If a tag with the same key already exists for the resource, the tag value is replaced.\u003cbr /\u003e\n      You can tag the following resources using their IDs:\u003cbr /\u003e\u003cbr /\u003e\n\n      * Virtual machines (VMs) (i-xxxxxxxx)\u003cbr /\u003e\n      * OMIs (ami-xxxxxxxx)\u003cbr /\u003e\n      * Volumes (vol-xxxxxxxx)\u003cbr /\u003e\n      * Snapshots (snap-xxxxxxxx)\u003cbr /\u003e\n      * Public IPs (eipalloc-xxxxxxxx)\u003cbr /\u003e\n      * Security groups (sg-xxxxxxxx)\u003cbr /\u003e\n      * Route tables (rtb-xxxxxxxx)\u003cbr /\u003e\n      * Network interface cards (NIC) (eni-xxxxxxxx)\u003cbr /\u003e\n      * Nets (vpc-xxxxxxxx)\u003cbr /\u003e\n      * Subnets (subnet-xxxxxxxx)\u003cbr /\u003e\n      * Net peering connections (vpcx-xxxxxxxx)\u003cbr /\u003e\n      * Net endpoints (vpce-xxxxxxxx)\u003cbr /\u003e\n      * NAT services (nat-xxxxxxxx)\u003cbr /\u003e\n      * Internet services (igw-xxxxxxxx)\u003cbr /\u003e\n      * Client gateways (cgw-xxxxxxxx)\u003cbr /\u003e\n      * Virtual gateways (vgw-xxxxxxxx)\u003cbr /\u003e\n      * VPN connections (vpn-xxxxxxxx)\u003cbr /\u003e\n      * DHCP options (dopt-xxxxxxxx)\u003cbr /\u003e\n      * OMI export tasks (image-export-xxxxxxxx)\u003cbr /\u003e\n      * Snapshot export tasks (snap-export-xxxxxxxx)\n    post:\n      operationId: CreateTags\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTagsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTagsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Tag\n  /CreateVirtualGateway:\n    description: |-\n      Creates a virtual gateway.\u003cbr /\u003e\n      A virtual gateway is the access point on the Net side of a VPN connection.\n    post:\n      operationId: CreateVirtualGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVirtualGatewayRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateVirtualGatewayResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VirtualGateway\n  /CreateVms:\n    description: |-\n      Creates virtual machines (VMs), and then launches them.\u003cbr /\u003e\n      This action enables you to create a specified number of VMs using an OUTSCALE machine image (OMI) that you are allowed to use, and then to automatically launch them.\u003cbr /\u003e\n      The VMs remain in the `pending` state until they are created and ready to be used. Once automatically launched, they are in the `running` state.\u003cbr /\u003e\n      To check the state of your VMs, call the [ReadVms](#readvms) method.\u003cbr /\u003e\n      If not specified, the security group used by the service is the default one.\u003cbr /\u003e\n      The metadata server enables you to get the public key provided when the VM is launched. Official OMIs contain a script to get this public key and put it inside the VM to provide secure access without password.\n    post:\n      operationId: CreateVms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVmsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateVmsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /CreateVolume:\n    description: |-\n      Creates a Block Storage Unit (BSU) volume in a specified Region.\u003cbr /\u003e\n      BSU volumes can be attached to a virtual machine (VM) in the same Subregion. You can create an empty volume or restore a volume from an existing snapshot.\u003cbr /\u003e\n      You can create the following volume types: Enterprise (`io1`) for provisioned IOPS SSD volumes, Performance (`gp2`) for general purpose SSD volumes, or Magnetic (`standard`) volumes.\n    post:\n      operationId: CreateVolume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVolumeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateVolumeResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Volume\n  /CreateVpnConnection:\n    description: |-\n      Creates a VPN connection between a specified virtual gateway and a specified client gateway.\u003cbr /\u003e\n      You can create only one VPN connection between a virtual gateway and a client gateway.\n    post:\n      operationId: CreateVpnConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVpnConnectionRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateVpnConnectionResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VpnConnection\n  /CreateVpnConnectionRoute:\n    description: |-\n      Creates a static route to a VPN connection.\u003cbr /\u003e\n      This enables you to select the network flows sent by the virtual gateway to the target VPN connection.\n    post:\n      operationId: CreateVpnConnectionRoute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVpnConnectionRouteRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateVpnConnectionRouteResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VpnConnection\n  /DeleteAccessKey:\n    description: |-\n      Deletes the specified access key of your account.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      To protect against brute force attacks, the number of requests allowed for this method in a given time period is limited.\n    post:\n      operationId: DeleteAccessKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteAccessKeyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAccessKeyResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - AccessKey\n  /DeleteApiAccessRule:\n    description: \"Deletes a specified API access rule.\u003cbr /\u003e\u003cbr /\u003e\\n\\n**[NOTE]**\u003cbr\\\n      \\ /\u003e \\nYou cannot delete the last remaining API access rule. However, if you\\\n      \\ delete all the API access rules that allow you to access the API, you need\\\n      \\ to contact the Support team to regain access. For more information, see [Technical\\\n      \\ Support](https://docs.outscale.com/en/userguide/Technical-Support.html).\"\n    post:\n      operationId: DeleteApiAccessRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteApiAccessRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteApiAccessRuleResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - ApiAccessRule\n  /DeleteCa:\n    description: Deletes a specified Client Certificate Authority (CA).\n    post:\n      operationId: DeleteCa\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteCaRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteCaResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - Ca\n  /DeleteClientGateway:\n    description: |-\n      Deletes a client gateway.\u003cbr /\u003e\n      You must delete the VPN connection before deleting the client gateway.\n    post:\n      operationId: DeleteClientGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteClientGatewayRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteClientGatewayResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ClientGateway\n  /DeleteDhcpOptions:\n    description: |-\n      Deletes a specified DHCP options set.\u003cbr /\u003e\n      Before deleting a DHCP options set, you must disassociate it from the Nets you associated it with. To do so, you need to associate with each Net a new set of DHCP options, or the `default` one if you do not want to associate any DHCP options with the Net.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      You cannot delete the `default` set.\n    post:\n      operationId: DeleteDhcpOptions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDhcpOptionsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDhcpOptionsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DhcpOption\n  /DeleteDirectLink:\n    description: |-\n      Deletes a specified DirectLink.\u003cbr /\u003e\n      Before deleting a DirectLink, ensure that all your DirectLink interfaces related to this DirectLink are deleted.\n    post:\n      operationId: DeleteDirectLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDirectLinkRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDirectLinkResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DirectLink\n  /DeleteDirectLinkInterface:\n    description: Deletes a specified DirectLink interface.\n    post:\n      operationId: DeleteDirectLinkInterface\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDirectLinkInterfaceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDirectLinkInterfaceResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DirectLinkInterface\n  /DeleteExportTask:\n    description: |-\n      Deletes an export task.\u003cbr /\u003e\n      If the export task is not running, the command fails and an error is returned.\n    post:\n      operationId: DeleteExportTask\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteExportTaskRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteExportTaskResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Task\n  /DeleteFlexibleGpu:\n    description: |-\n      Releases a flexible GPU (fGPU) from your account.\u003cbr /\u003e\n      The fGPU becomes free to be used by someone else.\n    post:\n      operationId: DeleteFlexibleGpu\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteFlexibleGpuRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteFlexibleGpuResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - FlexibleGpu\n  /DeleteImage:\n    description: Deletes an OUTSCALE machine image (OMI) so that you cannot use it\n      anymore to launch virtual machines (VMs). However, you can still use VMs already\n      launched from this OMI.\n    post:\n      operationId: DeleteImage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteImageRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteImageResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Image\n  /DeleteInternetService:\n    description: |-\n      Deletes an Internet service.\u003cbr /\u003e\n      Before deleting an Internet service, you must detach it from any Net it is attached to.\n    post:\n      operationId: DeleteInternetService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteInternetServiceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteInternetServiceResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - InternetService\n  /DeleteKeypair:\n    description: |-\n      Deletes the specified keypair.\u003cbr /\u003e\n      This action deletes the public key stored by 3DS OUTSCALE, thus deleting the keypair.\n    post:\n      operationId: DeleteKeypair\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteKeypairRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteKeypairResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Keypair\n  /DeleteListenerRule:\n    description: |-\n      Deletes a listener rule.\u003cbr /\u003e\n      The previously active rule is disabled after deletion.\n    post:\n      operationId: DeleteListenerRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteListenerRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteListenerRuleResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Listener\n  /DeleteLoadBalancer:\n    description: Deletes a specified load balancer.\n    post:\n      operationId: DeleteLoadBalancer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLoadBalancerRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLoadBalancerResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /DeleteLoadBalancerListeners:\n    description: Deletes listeners of a specified load balancer.\n    post:\n      operationId: DeleteLoadBalancerListeners\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLoadBalancerListenersRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLoadBalancerListenersResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Listener\n  /DeleteLoadBalancerPolicy:\n    description: |-\n      Deletes a specified policy from a load balancer.\u003cbr /\u003e\n      In order to be deleted, the policy must not be enabled for any listener.\n    post:\n      operationId: DeleteLoadBalancerPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLoadBalancerPolicyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLoadBalancerPolicyResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancerPolicy\n  /DeleteLoadBalancerTags:\n    description: Deletes one or more tags from the specified load balancers.\n    post:\n      operationId: DeleteLoadBalancerTags\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLoadBalancerTagsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLoadBalancerTagsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /DeleteNatService:\n    description: |-\n      Deletes a specified network address translation (NAT) service.\u003cbr /\u003e\n      This action disassociates the public IP from the NAT service, but does not release this public IP from your account. However, it does not delete any NAT service routes in your route tables.\n    post:\n      operationId: DeleteNatService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteNatServiceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteNatServiceResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NatService\n  /DeleteNet:\n    description: |-\n      Deletes a specified Net.\u003cbr /\u003e\n      Before deleting the Net, you need to delete or detach all the resources associated with the Net:\u003cbr /\u003e\u003cbr /\u003e\n\n      * Virtual machines (VMs)\u003cbr /\u003e\n      * Net peering connections\u003cbr /\u003e\n      * Custom route tables\u003cbr /\u003e\n      * Public IPs allocated to resources in the Net\u003cbr /\u003e\n      * Network Interface Cards (NICs) created in the Subnets\u003cbr /\u003e\n      * Virtual gateways, Internet services and NAT services\u003cbr /\u003e\n      * Load balancers\u003cbr /\u003e\n      * Security groups\u003cbr /\u003e\n      * Subnets\n    post:\n      operationId: DeleteNet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteNetRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteNetResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Net\n  /DeleteNetAccessPoint:\n    description: |-\n      Deletes one or more Net access point.\u003cbr /\u003e\n      This action also deletes the corresponding routes added to the route tables you specified for the Net access point.\n    post:\n      operationId: DeleteNetAccessPoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteNetAccessPointRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteNetAccessPointResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - NetAccessPoint\n  /DeleteNetPeering:\n    description: |-\n      Deletes a Net peering connection.\u003cbr /\u003e\n      If the Net peering connection is in the `active` state, it can be deleted either by the owner of the requester Net or the owner of the peer Net.\u003cbr /\u003e\n      If it is in the `pending-acceptance` state, it can be deleted only by the owner of the requester Net.\u003cbr /\u003e\n      If it is in the `rejected`, `failed`, or `expired` states, it cannot be deleted.\n    post:\n      operationId: DeleteNetPeering\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteNetPeeringRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteNetPeeringResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 409 response (Conflict).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NetPeering\n  /DeleteNic:\n    description: |-\n      Deletes the specified network interface card (NIC).\u003cbr /\u003e\n      The network interface must not be attached to any virtual machine (VM).\n    post:\n      operationId: DeleteNic\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteNicRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteNicResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /DeletePublicIp:\n    description: |-\n      Releases a public IP.\u003cbr /\u003e\n      You can release a public IP associated with your account. This address is released in the public IP pool and can be used by someone else. Before releasing a public IP, ensure you updated all your resources communicating with this address.\n    post:\n      operationId: DeletePublicIp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeletePublicIpRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeletePublicIpResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - PublicIp\n  /DeleteRoute:\n    description: Deletes a route from a specified route table.\n    post:\n      operationId: DeleteRoute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteRouteRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRouteResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Route\n  /DeleteRouteTable:\n    description: |-\n      Deletes a specified route table.\u003cbr /\u003e\n      Before deleting a route table, you must disassociate it from any Subnet. You cannot delete the main route table.\n    post:\n      operationId: DeleteRouteTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteRouteTableRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRouteTableResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - RouteTable\n  /DeleteSecurityGroup:\n    description: |-\n      Deletes a specified security group.\u003cbr /\u003e\n      You can specify either the name of the security group or its ID.\u003cbr /\u003e\n      This action fails if the specified group is associated with a virtual machine (VM) or referenced by another security group.\n    post:\n      operationId: DeleteSecurityGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSecurityGroupRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSecurityGroupResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - SecurityGroup\n  /DeleteSecurityGroupRule:\n    description: |-\n      Deletes one or more inbound or outbound rules from a security group. For the rule to be deleted, the values specified in the deletion request must exactly match the value of the existing rule.\u003cbr /\u003e\n      In case of TCP and UDP protocols, you have to indicate the destination port or range of ports. In case of ICMP protocol, you have to specify the ICMP type and code numbers.\u003cbr /\u003e\n      Rules (IP permissions) consist of the protocol, IP range or source security group.\u003cbr /\u003e\n      To remove outbound access to a destination security group, we recommend to use a set of IP permissions. We also recommend to specify the protocol in a set of IP permissions.\n    post:\n      operationId: DeleteSecurityGroupRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSecurityGroupRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSecurityGroupRuleResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - SecurityGroupRule\n  /DeleteServerCertificate:\n    description: Deletes a specified server certificate.\n    post:\n      operationId: DeleteServerCertificate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteServerCertificateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteServerCertificateResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ServerCertificate\n  /DeleteSnapshot:\n    description: |-\n      Deletes a specified snapshot.\u003cbr /\u003e\n      You cannot delete a snapshot that is currently used by an OUTSCALE machine image (OMI). To do so, you first need to delete the corresponding OMI. For more information, see the [DeleteImage](#deleteimage) method.\n    post:\n      operationId: DeleteSnapshot\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSnapshotRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSnapshotResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Snapshot\n  /DeleteSubnet:\n    description: |-\n      Deletes a specified Subnet.\u003cbr /\u003e\n      Before deleting the Subnet, you need to delete all resources associated with the Subnet:\u003cbr /\u003e\u003cbr /\u003e\n\n      * Virtual machines (VMs)\u003cbr /\u003e\n      * Network Interface Cards (NICs)\u003cbr /\u003e\n      * Network Address Translation (NAT) gateways\u003cbr /\u003e\n      * Load balancers\n    post:\n      operationId: DeleteSubnet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSubnetRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSubnetResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Subnet\n  /DeleteTags:\n    description: Deletes one or more tags from the specified resources.\n    post:\n      operationId: DeleteTags\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteTagsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTagsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Tag\n  /DeleteVirtualGateway:\n    description: |-\n      Deletes a specified virtual gateway.\u003cbr /\u003e\n      Before deleting a virtual gateway, we recommend to detach it from the Net and delete the VPN connection.\n    post:\n      operationId: DeleteVirtualGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteVirtualGatewayRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteVirtualGatewayResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VirtualGateway\n  /DeleteVms:\n    description: |-\n      Performs a shut down for at least one virtual machine (VM).\u003cbr /\u003e\n      This operation is idempotent, that means that all calls succeed if you terminate a VM more than once.\n    post:\n      operationId: DeleteVms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteVmsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteVmsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /DeleteVolume:\n    description: |-\n      Deletes a specified Block Storage Unit (BSU) volume.\u003cbr /\u003e\n      You can delete available volumes only, that is, volumes that are not attached to a virtual machine (VM).\n    post:\n      operationId: DeleteVolume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteVolumeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteVolumeResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Volume\n  /DeleteVpnConnection:\n    description: |-\n      Deletes a specified VPN connection.\u003cbr /\u003e\n      If you want to delete a Net and all its dependencies, we recommend to detach the virtual gateway from the Net and delete the Net before deleting the VPN connection. This enables you to delete the Net without waiting for the VPN connection to be deleted.\n    post:\n      operationId: DeleteVpnConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteVpnConnectionRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteVpnConnectionResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VpnConnection\n  /DeleteVpnConnectionRoute:\n    description: Deletes a static route to a VPN connection previously created using\n      the CreateVpnConnectionRoute method.\n    post:\n      operationId: DeleteVpnConnectionRoute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteVpnConnectionRouteRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteVpnConnectionRouteResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VpnConnection\n  /DeregisterVmsInLoadBalancer:\n    description: Deregisters a specified virtual machine (VM) from a load balancer.\n    post:\n      operationId: DeregisterVmsInLoadBalancer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterVmsInLoadBalancerRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeregisterVmsInLoadBalancerResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /LinkFlexibleGpu:\n    description: |-\n      Attaches one of your allocated flexible GPUs (fGPUs) to one of your virtual machines (VMs).\u003cbr /\u003e\n      The fGPU is in the `attaching` state until the VM is stopped, after which it becomes `attached`.\n    post:\n      operationId: LinkFlexibleGpu\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkFlexibleGpuRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkFlexibleGpuResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - FlexibleGpu\n  /LinkInternetService:\n    description: |-\n      Attaches an Internet service to a Net.\u003cbr /\u003e\n      To enable the connection between the Internet and a Net, you must attach an Internet service to this Net.\n    post:\n      operationId: LinkInternetService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkInternetServiceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkInternetServiceResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - InternetService\n  /LinkLoadBalancerBackendMachines:\n    description: |-\n      Attaches one or more virtual machines (VMs) to a specified load balancer. You need to specify at least the `BackendIps` or the `BackendVmIds` parameter.\u003cbr /\u003e\n      The VMs can be in different Subnets and different Subregions than the load balancer, as long as the VMs and load balancers are all in the public Cloud or all in the same Net. It may take a little time for a VM to be registered with the load balancer. Once the VM is registered with a load balancer, it receives traffic and requests from this load balancer and is called a back-end VM.\n    post:\n      operationId: LinkLoadBalancerBackendMachines\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkLoadBalancerBackendMachinesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkLoadBalancerBackendMachinesResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /LinkNic:\n    description: |-\n      Attaches a network interface card (NIC) to a virtual machine (VM).\u003cbr /\u003e\n      The interface and the VM must be in the same Subregion. The VM can be either `running` or `stopped`. The NIC must be in the `available` state. For more information, see [Attaching an FNI to an Instance](https://docs.outscale.com/en/userguide/Attaching-an-FNI-to-an-Instance.html).\n    post:\n      operationId: LinkNic\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkNicRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkNicResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /LinkPrivateIps:\n    description: Assigns one or more secondary private IPs to a specified network\n      interface card (NIC). This action is only available in a Net. The private IPs\n      to be assigned can be added individually using the `PrivateIps` parameter, or\n      you can specify the number of private IPs to be automatically chosen within\n      the Subnet range using the `SecondaryPrivateIpCount` parameter. You can specify\n      only one of these two parameters. If none of these parameters are specified,\n      a private IP is chosen within the Subnet range.\n    post:\n      operationId: LinkPrivateIps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkPrivateIpsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkPrivateIpsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /LinkPublicIp:\n    description: |-\n      Associates a public IP with a virtual machine (VM) or a network interface card (NIC), in the public Cloud or in a Net. You can associate a public IP with only one VM or network interface at a time.\u003cbr /\u003e\n      To associate a public IP in a Net, ensure that the Net has an Internet service attached. For more information, see the [LinkInternetService](#linkinternetservice) method.\u003cbr /\u003e\n      By default, the public IP is disassociated every time you stop and start the VM. For a persistent association, you can add the `osc.fcu.eip.auto-attach` tag to the VM with the public IP as value. For more information, see the [CreateTags](#createtags) method.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      You can associate a public IP with a network address translation (NAT) service only when creating the NAT service. To modify its public IP, you need to delete the NAT service and re-create it with the new public IP. For more information, see the [CreateNatService](#createnatservice) method.\n    post:\n      operationId: LinkPublicIp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkPublicIpRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkPublicIpResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - PublicIp\n  /LinkRouteTable:\n    description: |-\n      Associates a Subnet with a route table.\u003cbr /\u003e\n      The Subnet and the route table must be in the same Net. The traffic is routed according to the route table defined within this Net. You can associate a route table with several Subnets.\n    post:\n      operationId: LinkRouteTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkRouteTableRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkRouteTableResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - RouteTable\n  /LinkVirtualGateway:\n    description: Attaches a virtual gateway to a Net.\n    post:\n      operationId: LinkVirtualGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkVirtualGatewayRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkVirtualGatewayResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VirtualGateway\n  /LinkVolume:\n    description: |-\n      Attaches a Block Storage Unit (BSU) volume to a virtual machine (VM).\u003cbr /\u003e\n      The volume and the VM must be in the same Subregion. The VM can be running or stopped. The volume is attached to the specified VM device.\n    post:\n      operationId: LinkVolume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkVolumeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkVolumeResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Volume\n  /ReadAccessKeys:\n    description: Lists the access key IDs of your account.\n    post:\n      operationId: ReadAccessKeys\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadAccessKeysRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadAccessKeysResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - AccessKey\n  /ReadAccounts:\n    description: Gets information about the account that sent the request.\n    post:\n      operationId: ReadAccounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadAccountsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadAccountsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Account\n  /ReadAdminPassword:\n    description: |-\n      Gets the administrator password for a Windows running virtual machine (VM).\u003cbr /\u003e\n      The administrator password is encrypted using the keypair you specified when launching the VM.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      The administrator password is generated only on the first boot of the Windows VM. It is not returned after the first boot.\n    post:\n      operationId: ReadAdminPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadAdminPasswordRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadAdminPasswordResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /ReadApiAccessPolicy:\n    description: Gets information about the API access policy of your account.\n    post:\n      operationId: ReadApiAccessPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadApiAccessPolicyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadApiAccessPolicyResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - ApiAccessPolicy\n  /ReadApiAccessRules:\n    description: Lists one or more API access rules.\n    post:\n      operationId: ReadApiAccessRules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadApiAccessRulesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadApiAccessRulesResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - ApiAccessRule\n  /ReadApiLogs:\n    description: |-\n      Lists the logs of the API calls you have performed with this account. For more information, see [About OUTSCALE Monitoring Services (OMS)](https://docs.outscale.com/en/userguide/About-OUTSCALE-Monitoring-Services-(OMS).html).\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      Past logs are accessible for up to 32 days.\u003cbr /\u003e\n      By default, the retrieved interval is 48 hours. If neither of the `QueryDateBefore` nor `QueryDateAfter` parameters are specified, logs from the past 48 hours are retrieved. If you only specify one of two, logs are retrieved from a 2-day interval based on the date you provided. To retrieve logs beyond a 2-day interval, specify both parameters.\n    post:\n      operationId: ReadApiLogs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadApiLogsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadApiLogsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ApiLog\n  /ReadCas:\n    description: Gets information about one or more of your Client Certificate Authorities\n      (CAs).\n    post:\n      operationId: ReadCas\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadCasRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadCasResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - Ca\n  /ReadCatalog:\n    description: Returns the price list of OUTSCALE products and services for the\n      current Region.\n    post:\n      operationId: ReadCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadCatalogRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadCatalogResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Catalog\n  /ReadClientGateways:\n    description: |-\n      Lists one or more of your client gateways.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadClientGateways\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadClientGatewaysRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadClientGatewaysResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ClientGateway\n  /ReadConsoleOutput:\n    description: |-\n      Gets the console output for a virtual machine (VM). This console provides the most recent 64 KiB output.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      On Windows VMs, the console is handled only on the first boot. It returns no output after the first boot.\n    post:\n      operationId: ReadConsoleOutput\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadConsoleOutputRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadConsoleOutputResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /ReadConsumptionAccount:\n    description: |-\n      Gets information about the consumption of your account for each billable resource within the specified time period.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `Throttling` error message is returned.\n    post:\n      operationId: ReadConsumptionAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadConsumptionAccountRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadConsumptionAccountResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Account\n  /ReadDhcpOptions:\n    description: |-\n      Gets information about the content of one or more DHCP options sets.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadDhcpOptions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadDhcpOptionsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadDhcpOptionsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DhcpOption\n  /ReadDirectLinkInterfaces:\n    description: |-\n      Lists one or more of your DirectLink interfaces.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `Throttling` error message is returned.\n    post:\n      operationId: ReadDirectLinkInterfaces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadDirectLinkInterfacesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadDirectLinkInterfacesResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DirectLinkInterface\n  /ReadDirectLinks:\n    description: |-\n      Lists all DirectLinks in the Region.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `Throttling` error message is returned.\n    post:\n      operationId: ReadDirectLinks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadDirectLinksRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadDirectLinksResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DirectLink\n  /ReadFlexibleGpuCatalog:\n    description: |-\n      Lists all flexible GPUs available in the public catalog.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadFlexibleGpuCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadFlexibleGpuCatalogRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadFlexibleGpuCatalogResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - FlexibleGpu\n  /ReadFlexibleGpus:\n    description: |-\n      Lists one or more flexible GPUs (fGPUs) allocated to your account.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadFlexibleGpus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadFlexibleGpusRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadFlexibleGpusResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - FlexibleGpu\n  /ReadImageExportTasks:\n    description: |-\n      Lists one or more image export tasks.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadImageExportTasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadImageExportTasksRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadImageExportTasksResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Image\n  /ReadImages:\n    description: |-\n      Lists one or more OUTSCALE machine images (OMIs) you can use.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadImages\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadImagesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadImagesResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Image\n  /ReadInternetServices:\n    description: |-\n      Lists one or more of your Internet services.\u003cbr /\u003e\n      An Internet service enables your virtual machines (VMs) launched in a Net to connect to the Internet. By default, a Net includes an Internet service, and each Subnet is public. Every VM launched within a default Subnet has a private IP and a public IP.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadInternetServices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadInternetServicesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadInternetServicesResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - InternetService\n  /ReadKeypairs:\n    description: |-\n      Lists one or more of your keypairs.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadKeypairs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadKeypairsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadKeypairsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Keypair\n  /ReadListenerRules:\n    description: Lists one or more listener rules. By default, this action returns\n      the full list of listener rules for the account.\n    post:\n      operationId: ReadListenerRules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadListenerRulesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadListenerRulesResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Listener\n  /ReadLoadBalancerTags:\n    description: |-\n      Lists the tags associated with one or more specified load balancers.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `Throttling` error message is returned.\n    post:\n      operationId: ReadLoadBalancerTags\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadLoadBalancerTagsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadLoadBalancerTagsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /ReadLoadBalancers:\n    description: |-\n      Lists one or more load balancers and their attributes.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadLoadBalancers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadLoadBalancersRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadLoadBalancersResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /ReadLocations:\n    description: |-\n      Lists the locations, corresponding to datacenters, where you can set up a DirectLink.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `Throttling` error message is returned.\n    post:\n      operationId: ReadLocations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadLocationsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadLocationsResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - Location\n  /ReadNatServices:\n    description: |-\n      Lists one or more network address translation (NAT) services.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadNatServices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadNatServicesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadNatServicesResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NatService\n  /ReadNetAccessPointServices:\n    description: |-\n      Lists OUTSCALE services available to create Net access points.\u003cbr /\u003e\n      For more information, see [CreateNetAccessPoint](#createnetaccesspoint).\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadNetAccessPointServices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadNetAccessPointServicesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadNetAccessPointServicesResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - NetAccessPoint\n  /ReadNetAccessPoints:\n    description: |-\n      Lists one or more Net access points.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadNetAccessPoints\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadNetAccessPointsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadNetAccessPointsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - NetAccessPoint\n  /ReadNetPeerings:\n    description: |-\n      Lists one or more peering connections between two Nets.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadNetPeerings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadNetPeeringsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadNetPeeringsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NetPeering\n  /ReadNets:\n    description: |-\n      Lists one or more Nets.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadNets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadNetsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadNetsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Net\n  /ReadNics:\n    description: |-\n      Lists one or more network interface cards (NICs).\u003cbr /\u003e\n      A NIC is a virtual network interface that you can attach to a virtual machine (VM) in a Net.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadNics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadNicsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadNicsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /ReadProductTypes:\n    description: |-\n      Lists one or more product types.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadProductTypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadProductTypesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadProductTypesResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - ProductType\n  /ReadPublicCatalog:\n    description: Returns the price list of OUTSCALE products and services for the\n      Region specified in the endpoint of the request. For more information, see [Regions,\n      Endpoints and Availability Zones Reference](https://docs.outscale.com/en/userguide/Regions-Endpoints-and-Availability-Zones-Reference.html).\n    post:\n      operationId: ReadPublicCatalog\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadPublicCatalogRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadPublicCatalogResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - PublicCatalog\n  /ReadPublicIpRanges:\n    description: Gets the public IPv4 addresses in CIDR notation for the Region specified\n      in the endpoint of the request. For more information, see [Regions, Endpoints\n      and Availability Zones Reference](https://docs.outscale.com/en/userguide/Regions-Endpoints-and-Availability-Zones-Reference.html).\n    post:\n      operationId: ReadPublicIpRanges\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadPublicIpRangesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadPublicIpRangesResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - PublicIp\n  /ReadPublicIps:\n    description: |-\n      Lists one or more public IPs allocated to your account.\u003cbr /\u003e\n      By default, this action returns information about all your public IPs: available or associated with a virtual machine (VM), a network interface card (NIC) or a NAT service.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadPublicIps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadPublicIpsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadPublicIpsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - PublicIp\n  /ReadQuotas:\n    description: |-\n      Lists one or more of your quotas.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadQuotas\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadQuotasRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadQuotasResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Quota\n  /ReadRegions:\n    description: Lists one or more Regions of the OUTSCALE Cloud.\n    post:\n      operationId: ReadRegions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadRegionsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadRegionsResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - Region\n  /ReadRouteTables:\n    description: |-\n      Lists one or more of your route tables.\u003cbr /\u003e\n      In your Net, each Subnet must be associated with a route table. If a Subnet is not explicitly associated with a route table, it is implicitly associated with the main route table of the Net.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadRouteTables\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadRouteTablesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadRouteTablesResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - RouteTable\n  /ReadSecretAccessKey:\n    description: Lists information about the specified access key of your account,\n      including its secret key.\n    post:\n      operationId: ReadSecretAccessKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadSecretAccessKeyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadSecretAccessKeyResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - AccessKey\n  /ReadSecurityGroups:\n    description: |-\n      Lists one or more security groups.\u003cbr /\u003e\n      You can specify either the name of the security groups or their IDs.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadSecurityGroups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadSecurityGroupsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadSecurityGroupsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - SecurityGroup\n  /ReadServerCertificates:\n    description: Lists your server certificates.\n    post:\n      operationId: ReadServerCertificates\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadServerCertificatesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadServerCertificatesResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ServerCertificate\n  /ReadSnapshotExportTasks:\n    description: |-\n      Lists one or more snapshot export tasks.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadSnapshotExportTasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadSnapshotExportTasksRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadSnapshotExportTasksResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Snapshot\n  /ReadSnapshots:\n    description: |-\n      Lists one or more snapshots that are available to you and the permissions to create volumes from them.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadSnapshots\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadSnapshotsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadSnapshotsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Snapshot\n  /ReadSubnets:\n    description: |-\n      Lists one or more of your Subnets.\u003cbr /\u003e\n      If you do not specify any Subnet ID, this action describes all of your Subnets.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadSubnets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadSubnetsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadSubnetsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Subnet\n  /ReadSubregions:\n    description: |-\n      Lists one or more of the enabled Subregions that you can access in the current Region.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      - If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\u003cbr /\u003e\n      - You can use this command to get information about Subregions only in a Region for which you have an account. Otherwise, the `AuthFailure` error message is returned.\n    post:\n      operationId: ReadSubregions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadSubregionsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadSubregionsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Subregion\n  /ReadTags:\n    description: |-\n      Lists one or more tags for your resources.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadTags\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadTagsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadTagsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Tag\n  /ReadVirtualGateways:\n    description: |-\n      Lists one or more virtual gateways.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadVirtualGateways\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadVirtualGatewaysRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadVirtualGatewaysResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VirtualGateway\n  /ReadVmTypes:\n    description: |-\n      Lists one or more predefined VM types.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadVmTypes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadVmTypesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadVmTypesResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - Vm\n  /ReadVms:\n    description: |-\n      Lists one or more of your virtual machines (VMs).\u003cbr /\u003e\n      If you provide one or more VM IDs, this action returns a description for all of these VMs. If you do not provide any VM ID, this action returns a description for all of the VMs that belong to you. If you provide an invalid VM ID, an error is returned. If you provide the ID of a VM that does not belong to you, the description of this VM is not included in the response. The refresh interval for data returned by this action is one hour, meaning that a terminated VM may appear in the response.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadVms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadVmsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadVmsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /ReadVmsHealth:\n    description: |-\n      Lists the state of one or more back-end virtual machines (VMs) registered with a specified load balancer.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `Throttling` error message is returned.\n    post:\n      operationId: ReadVmsHealth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadVmsHealthRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadVmsHealthResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /ReadVmsState:\n    description: |-\n      Lists the status of one or more virtual machines (VMs).\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadVmsState\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadVmsStateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadVmsStateResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /ReadVolumes:\n    description: |-\n      Lists one or more specified Block Storage Unit (BSU) volumes.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadVolumes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadVolumesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadVolumesResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Volume\n  /ReadVpnConnections:\n    description: |-\n      Lists one or more VPN connections.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      If you exceed the number of identical requests allowed for a configured time period, the `RequestLimitExceeded` error message is returned.\n    post:\n      operationId: ReadVpnConnections\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadVpnConnectionsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadVpnConnectionsResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VpnConnection\n  /RebootVms:\n    description: |-\n      Reboots one or more virtual machines (VMs).\u003cbr /\u003e\n      This operation sends a reboot request to one or more specified VMs. This is an asynchronous action that queues this reboot request. This action only reboots VMs that are valid and that belong to you.\n    post:\n      operationId: RebootVms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RebootVmsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RebootVmsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /RegisterVmsInLoadBalancer:\n    description: |-\n      Registers one or more virtual machines (VMs) with a specified load balancer.\u003cbr /\u003e\n      The VMs can be in different Subnets and different Subregions than the load balancer, as long as the VMs and load balancers are all in the public Cloud or all in the same Net. It may take a little time for a VM to be registered with the load balancer. Once the VM is registered with a load balancer, it receives traffic and requests from this load balancer and is called a back-end VM.\n    post:\n      operationId: RegisterVmsInLoadBalancer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterVmsInLoadBalancerRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterVmsInLoadBalancerResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /RejectNetPeering:\n    description: |-\n      Rejects a Net peering connection request.\u003cbr /\u003e\n      The Net peering connection must be in the `pending-acceptance` state to be rejected. The rejected Net peering connection is then in the `rejected` state.\n    post:\n      operationId: RejectNetPeering\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RejectNetPeeringRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RejectNetPeeringResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 409 response (Conflict).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - NetPeering\n  /ResetAccountPassword:\n    description: |-\n      Replaces the account password with the new one you provide.\u003cbr /\u003e\n      You must also provide the token you received by email when asking for a password reset using the SendResetPasswordEmail method.\u003cbr /\u003e\u003cbr /\u003e\n      Password strength is tested through heuristic algorithms. For more information, see the [zxcvbn GitHub](https://github.com/dropbox/zxcvbn).\u003cbr /\u003e\u003cbr /\u003e\n      **[NOTE]**\u003cbr /\u003e\n      To protect against brute force attacks, the number of requests allowed for this method in a given time period is limited.\n    post:\n      operationId: ResetAccountPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetAccountPasswordRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetAccountPasswordResponse'\n          description: The HTTP 200 response (OK).\n      security: []\n      tags:\n      - Account\n  /SendResetPasswordEmail:\n    description: |-\n      Sends an email to the email address provided for the account with a token to reset your password.\u003cbr /\u003e\n      You need to provide this token when updating the account password using the ResetAccountPassword method.\u003cbr /\u003e\u003cbr /\u003e\n      **[NOTE]**\u003cbr /\u003e\n      To protect against brute force attacks, the number of requests allowed for this method in a given time period is limited.\n    post:\n      operationId: SendResetPasswordEmail\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendResetPasswordEmailRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendResetPasswordEmailResponse'\n          description: The HTTP 200 response (OK). You need to provide this token\n            when updating the account password using the ResetAccountPassword method.\n      security: []\n      tags:\n      - Account\n  /StartVms:\n    description: |-\n      Start one or more virtual machines (VMs).\u003cbr /\u003e\n      You can start only VMs that are valid and that belong to you.\n    post:\n      operationId: StartVms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartVmsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartVmsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /StopVms:\n    description: |-\n      Stops one or more running virtual machines (VMs).\u003cbr /\u003e\n      You can stop only VMs that are valid and that belong to you. Data stored in the VM RAM is lost.\n    post:\n      operationId: StopVms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StopVmsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopVmsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /UnlinkFlexibleGpu:\n    description: |-\n      Detaches a flexible GPU (fGPU) from a virtual machine (VM).\u003cbr /\u003e\n      The fGPU is in the `detaching` state until the VM is stopped, after which it becomes available for allocation again.\n    post:\n      operationId: UnlinkFlexibleGpu\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkFlexibleGpuRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkFlexibleGpuResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - FlexibleGpu\n  /UnlinkInternetService:\n    description: |-\n      Detaches an Internet service from a Net.\u003cbr /\u003e\n      This action disables and detaches an Internet service from a Net. The Net must not contain virtual machines (VMs) using public IPs nor internet-facing load balancers.\n    post:\n      operationId: UnlinkInternetService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkInternetServiceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkInternetServiceResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - InternetService\n  /UnlinkLoadBalancerBackendMachines:\n    description: Detaches one or more back-end virtual machines (VMs) from a load\n      balancer. You need to specify at least the `BackendIps` or the `BackendVmIds`\n      parameter.\n    post:\n      operationId: UnlinkLoadBalancerBackendMachines\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkLoadBalancerBackendMachinesRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkLoadBalancerBackendMachinesResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /UnlinkNic:\n    description: |-\n      Detaches a network interface card (NIC) from a virtual machine (VM).\u003cbr /\u003e\n      The primary NIC cannot be detached.\n    post:\n      operationId: UnlinkNic\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkNicRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkNicResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /UnlinkPrivateIps:\n    description: Unassigns one or more secondary private IPs from a network interface\n      card (NIC).\n    post:\n      operationId: UnlinkPrivateIps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkPrivateIpsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkPrivateIpsResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /UnlinkPublicIp:\n    description: |-\n      Disassociates a public IP from the virtual machine (VM) or network interface card (NIC) it is associated with.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      To disassociate the public IP from a NAT service, you need to delete the NAT service. For more information, see the [DeleteNatService](#deletenatservice) method.\n    post:\n      operationId: UnlinkPublicIp\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkPublicIpRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkPublicIpResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - PublicIp\n  /UnlinkRouteTable:\n    description: |-\n      Disassociates a Subnet from a route table.\u003cbr /\u003e\n      After disassociation, the Subnet can no longer use the routes in this route table, but uses the routes in the main route table of the Net instead.\n    post:\n      operationId: UnlinkRouteTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkRouteTableRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkRouteTableResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - RouteTable\n  /UnlinkVirtualGateway:\n    description: |-\n      Detaches a virtual gateway from a Net.\u003cbr /\u003e\n      You must wait until the virtual gateway is in the detached state before you can attach another Net to it or delete the Net it was previously attached to.\n    post:\n      operationId: UnlinkVirtualGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkVirtualGatewayRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkVirtualGatewayResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VirtualGateway\n  /UnlinkVolume:\n    description: |-\n      Detaches a Block Storage Unit (BSU) volume from a virtual machine (VM).\u003cbr /\u003e\n      To detach the root device of a VM, this VM must be stopped.\n    post:\n      operationId: UnlinkVolume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlinkVolumeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlinkVolumeResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Volume\n  /UpdateAccessKey:\n    description: |-\n      Modifies the attributes of the specified access key of your account.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      To protect against brute force attacks, the number of requests allowed for this method in a given time period is limited.\n    post:\n      operationId: UpdateAccessKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccessKeyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccessKeyResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - AccessKey\n  /UpdateAccount:\n    description: Updates the account information for the account that sends the request.\n    post:\n      operationId: UpdateAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccountRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAccountResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Account\n  /UpdateApiAccessPolicy:\n    description: |-\n      Updates the API access policy of your account.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      Only one API access policy can be associated with your account.\n    post:\n      operationId: UpdateApiAccessPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateApiAccessPolicyRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateApiAccessPolicyResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - ApiAccessPolicy\n  /UpdateApiAccessRule:\n    description: \"Modifies a specified API access rule.\u003cbr /\u003e\u003cbr /\u003e\\n\\n**[NOTE]**\u003cbr\\\n      \\ /\u003e \\nThe new rule you specify fully replaces the old rule. Therefore, for\\\n      \\ a parameter that is not specified, any previously set value is deleted.\"\n    post:\n      operationId: UpdateApiAccessRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateApiAccessRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateApiAccessRuleResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - ApiAccessRule\n  /UpdateCa:\n    description: Modifies the specified attribute of a Client Certificate Authority\n      (CA).\n    post:\n      operationId: UpdateCa\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCaRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCaResponse'\n          description: The HTTP 200 response (OK).\n      security:\n      - ApiKeyAuthSec: []\n      - BasicAuth: []\n      tags:\n      - Ca\n  /UpdateDirectLinkInterface:\n    description: Modifies the maximum transmission unit (MTU) of a DirectLink interface.\n    post:\n      operationId: UpdateDirectLinkInterface\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDirectLinkInterfaceRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDirectLinkInterfaceResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - DirectLinkInterface\n  /UpdateFlexibleGpu:\n    description: Modifies a flexible GPU (fGPU) behavior.\n    post:\n      operationId: UpdateFlexibleGpu\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFlexibleGpuRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFlexibleGpuResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - FlexibleGpu\n  /UpdateImage:\n    description: |-\n      Modifies the specified attribute of an OUTSCALE machine image (OMI).\u003cbr /\u003e\n      You can specify only one attribute at a time. You can modify the permissions to access the OMI by adding or removing account IDs or groups. You can share an OMI with a user that is in the same Region. The user can create a copy of the OMI you shared, obtaining all the rights for the copy of the OMI. For more information, see [CreateImage](#createimage).\n    post:\n      operationId: UpdateImage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateImageRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateImageResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Image\n  /UpdateListenerRule:\n    description: |-\n      Updates the pattern of the listener rule.\u003cbr /\u003e\n      This call updates the pattern matching algorithm for incoming traffic.\n    post:\n      operationId: UpdateListenerRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateListenerRuleRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateListenerRuleResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - Listener\n  /UpdateLoadBalancer:\n    description: |-\n      Modifies the specified attribute of a load balancer. You can specify only one attribute at a time.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can set a new SSL certificate to an SSL or HTTPS listener of a load balancer.\u003cbr /\u003e\n      This certificate replaces any certificate used on the same load balancer and port.\u003cbr /\u003e\u003cbr /\u003e\n\n      You can also replace the currently enabled policy for the load balancer with another one.\u003cbr /\u003e\n      If the `PolicyNames` parameter is empty, the currently enabled policy is disabled.\n    post:\n      operationId: UpdateLoadBalancer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLoadBalancerRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLoadBalancerResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - LoadBalancer\n  /UpdateNet:\n    description: Associates a DHCP options set with a specified Net.\n    post:\n      operationId: UpdateNet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNetRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateNetResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Net\n  /UpdateNetAccessPoint:\n    description: |-\n      Modifies the attributes of a Net access point.\u003cbr /\u003e\n      This action enables you to add or remove route tables associated with the specified Net access point.\n    post:\n      operationId: UpdateNetAccessPoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNetAccessPointRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateNetAccessPointResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - NetAccessPoint\n  /UpdateNic:\n    description: Modifies the specified network interface card (NIC). You can specify\n      only one attribute at a time.\n    post:\n      operationId: UpdateNic\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNicRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateNicResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Nic\n  /UpdateRoute:\n    description: |-\n      Replaces an existing route within a route table in a Net.\u003cbr /\u003e\n      You must specify one of the following elements as the target:\u003cbr /\u003e\u003cbr /\u003e\n\n      * Net peering connection\u003cbr /\u003e\n      * NAT virtual machine (VM)\u003cbr /\u003e\n      * Internet service\u003cbr /\u003e\n      * Virtual gateway\u003cbr /\u003e\n      * NAT service\u003cbr /\u003e\n      * Network interface card (NIC)\u003cbr /\u003e\u003cbr /\u003e\n\n      The routing algorithm is based on the most specific match.\n    post:\n      operationId: UpdateRoute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRouteRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRouteResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Route\n  /UpdateRoutePropagation:\n    description: Configures the propagation of routes to a specified route table of\n      a Net by a virtual gateway.\n    post:\n      operationId: UpdateRoutePropagation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRoutePropagationRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRoutePropagationResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - VirtualGateway\n  /UpdateServerCertificate:\n    description: Modifies the name and/or the path of a specified server certificate.\n    post:\n      operationId: UpdateServerCertificate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateServerCertificateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateServerCertificateResponse'\n          description: The HTTP 200 response (OK).\n      tags:\n      - ServerCertificate\n  /UpdateSnapshot:\n    description: |-\n      Modifies the permissions for a specified snapshot.\u003cbr /\u003e\n      You can add or remove permissions for specified account IDs or groups. You can share a snapshot with a user that is in the same Region. The user can create a copy of the snapshot you shared, obtaining all the rights for the copy of the snapshot.\n    post:\n      operationId: UpdateSnapshot\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSnapshotRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateSnapshotResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Snapshot\n  /UpdateSubnet:\n    description: Modifies the specified attribute of a Subnet.\n    post:\n      operationId: UpdateSubnet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSubnetRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateSubnetResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Subnet\n  /UpdateVm:\n    description: |-\n      Modifies the specified attributes of a virtual machine (VM).\u003cbr /\u003e\n      You must stop the VM before modifying the following attributes:\u003cbr /\u003e\n      * `Performance`\u003cbr /\u003e\n      * `UserData`\u003cbr /\u003e\n      * `VmType`\n    post:\n      operationId: UpdateVm\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateVmRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateVmResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Vm\n  /UpdateVolume:\n    description: |-\n      Modifies the specified attributes of a volume. Cold volumes are volumes that are attached to stopped VMs or that are detached. Hot volumes are volumes that are attached to running VMs.\u003cbr /\u003e\u003cbr /\u003e\n\n      **[NOTE]**\u003cbr /\u003e\n      When the modification is not instantaneous, the response displays the previous value. You can use the [ReadVolumes](#readvolumes) method to see the new value.\n    post:\n      operationId: UpdateVolume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateVolumeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateVolumeResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - Volume\n  /UpdateVpnConnection:\n    description: Modifies the specified attributes of a VPN connection.\n    post:\n      operationId: UpdateVpnConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateVpnConnectionRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateVpnConnectionResponse'\n          description: The HTTP 200 response (OK).\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 400 response (Bad Request).\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 401 response (Unauthorized).\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The HTTP 500 response (Internal Server Error).\n      tags:\n      - VpnConnection\ncomponents:\n  schemas:\n    AcceptNetPeeringRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        NetPeeringId: NetPeeringId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetPeeringId:\n          description: The ID of the Net peering connection you want to accept.\n          type: string\n      required:\n      - NetPeeringId\n      type: object\n    AcceptNetPeeringResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        NetPeering:\n          SourceNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          State:\n            Message: Message\n            Name: Name\n          NetPeeringId: NetPeeringId\n          AccepterNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        NetPeering:\n          $ref: '#/components/schemas/NetPeering'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    AccepterNet:\n      additionalProperties: false\n      description: Information about the accepter Net.\n      example:\n        IpRange: IpRange\n        NetId: NetId\n        AccountId: AccountId\n      properties:\n        AccountId:\n          description: The account ID of the owner of the accepter Net.\n          type: string\n        IpRange:\n          description: The IP range for the accepter Net, in CIDR notation (for example,\n            `10.0.0.0/16`).\n          type: string\n        NetId:\n          description: The ID of the accepter Net.\n          type: string\n      type: object\n    AccessKey:\n      additionalProperties: false\n      description: Information about the access key.\n      example:\n        CreationDate: CreationDate\n        ExpirationDate: ExpirationDate\n        AccessKeyId: AccessKeyId\n        State: State\n        LastModificationDate: LastModificationDate\n      properties:\n        AccessKeyId:\n          description: The ID of the access key.\n          type: string\n        CreationDate:\n          description: The date and time (UTC) of creation of the access key.\n          format: datetime\n          type: string\n        ExpirationDate:\n          description: The date (UTC) at which the access key expires.\n          format: datetime\n          type: string\n        LastModificationDate:\n          description: The date and time (UTC) of the last modification of the access\n            key.\n          format: datetime\n          type: string\n        State:\n          description: The state of the access key (`ACTIVE` if the key is valid for\n            API calls, or `INACTIVE` if not).\n          type: string\n      type: object\n    AccessKeySecretKey:\n      additionalProperties: false\n      description: Information about the access key.\n      example:\n        CreationDate: CreationDate\n        SecretKey: SecretKey\n        ExpirationDate: ExpirationDate\n        AccessKeyId: AccessKeyId\n        State: State\n        LastModificationDate: LastModificationDate\n      properties:\n        AccessKeyId:\n          description: The ID of the access key.\n          type: string\n        CreationDate:\n          description: The date and time (UTC) of creation of the access key.\n          format: datetime\n          type: string\n        ExpirationDate:\n          description: The date and time (UTC) at which the access key expires.\n          format: datetime\n          type: string\n        LastModificationDate:\n          description: The date and time (UTC) of the last modification of the access\n            key.\n          format: datetime\n          type: string\n        SecretKey:\n          description: The access key that enables you to send requests.\n          type: string\n        State:\n          description: The state of the access key (`ACTIVE` if the key is valid for\n            API calls, or `INACTIVE` if not).\n          type: string\n      type: object\n    AccessLog:\n      additionalProperties: false\n      description: Information about access logs.\n      example:\n        OsuBucketPrefix: OsuBucketPrefix\n        IsEnabled: true\n        PublicationInterval: 0\n        OsuBucketName: OsuBucketName\n      properties:\n        IsEnabled:\n          description: If true, access logs are enabled for your load balancer. If\n            false, they are not. If you set this to true in your request, the `OsuBucketName`\n            parameter is required.\n          type: boolean\n        OsuBucketName:\n          description: The name of the OOS bucket for the access logs.\n          type: string\n        OsuBucketPrefix:\n          description: The path to the folder of the access logs in your OOS bucket\n            (by default, the `root` level of your bucket).\n          type: string\n        PublicationInterval:\n          description: The time interval for the publication of access logs in the\n            OOS bucket, in minutes. This value can be either `5` or `60` (by default,\n            `60`).\n          type: integer\n      type: object\n    Account:\n      additionalProperties: false\n      description: Information about the account.\n      example:\n        AccountId: AccountId\n        Email: Email\n        FirstName: FirstName\n        StateProvince: StateProvince\n        ZipCode: ZipCode\n        City: City\n        CustomerId: CustomerId\n        JobTitle: JobTitle\n        VatNumber: VatNumber\n        CompanyName: CompanyName\n        MobileNumber: MobileNumber\n        AdditionalEmails:\n        - AdditionalEmails\n        - AdditionalEmails\n        Country: Country\n        PhoneNumber: PhoneNumber\n        LastName: LastName\n      properties:\n        AccountId:\n          description: The ID of the account.\n          type: string\n        AdditionalEmails:\n          description: One or more additional email addresses for the account. These\n            addresses are used for notifications only.\n          items:\n            pattern: ^.+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)+$\n            type: string\n          type: array\n        City:\n          description: The city of the account owner.\n          type: string\n        CompanyName:\n          description: The name of the company for the account.\n          type: string\n        Country:\n          description: The country of the account owner.\n          type: string\n        CustomerId:\n          description: The ID of the customer.\n          type: string\n        Email:\n          description: The main email address for the account. This address is used\n            for your credentials and for notifications.\n          type: string\n        FirstName:\n          description: The first name of the account owner.\n          type: string\n        JobTitle:\n          description: The job title of the account owner.\n          type: string\n        LastName:\n          description: The last name of the account owner.\n          type: string\n        MobileNumber:\n          description: The mobile phone number of the account owner.\n          type: string\n        PhoneNumber:\n          description: The landline phone number of the account owner.\n          type: string\n        StateProvince:\n          description: The state/province of the account.\n          type: string\n        VatNumber:\n          description: The value added tax (VAT) number for the account.\n          type: string\n        ZipCode:\n          description: The ZIP code of the city.\n          type: string\n      type: object\n    ApiAccessPolicy:\n      additionalProperties: false\n      description: Information about the API access policy.\n      example:\n        RequireTrustedEnv: true\n        MaxAccessKeyExpirationSeconds: 0\n      properties:\n        MaxAccessKeyExpirationSeconds:\n          description: The maximum possible lifetime for your access keys, in seconds.\n            If `0`, your access keys can have unlimited lifetimes.\n          format: int64\n          type: integer\n        RequireTrustedEnv:\n          description: If true, a trusted session is activated, allowing you to bypass\n            Certificate Authorities (CAs) enforcement. For more information, see the\n            `ApiKeyAuth` authentication scheme in the [Authentication](#authentication)\n            section.\n          type: boolean\n      type: object\n    ApiAccessRule:\n      additionalProperties: false\n      description: Information about the API access rule.\n      example:\n        Description: Description\n        ApiAccessRuleId: ApiAccessRuleId\n        CaIds:\n        - CaIds\n        - CaIds\n        Cns:\n        - Cns\n        - Cns\n        IpRanges:\n        - IpRanges\n        - IpRanges\n      properties:\n        ApiAccessRuleId:\n          description: ' The ID of the API access rule.'\n          type: string\n        CaIds:\n          description: One or more IDs of Client Certificate Authorities (CAs) used\n            for the API access rule.\n          items:\n            type: string\n          type: array\n        Cns:\n          description: One or more Client Certificate Common Names (CNs).\n          items:\n            type: string\n          type: array\n        Description:\n          description: The description of the API access rule.\n          type: string\n        IpRanges:\n          description: One or more IP ranges used for the API access rule, in CIDR\n            notation (for example, `192.0.2.0/16`).\n          items:\n            type: string\n          type: array\n      type: object\n    ApplicationStickyCookiePolicy:\n      additionalProperties: false\n      description: Information about the stickiness policy.\n      example:\n        PolicyName: PolicyName\n        CookieName: CookieName\n      properties:\n        CookieName:\n          description: The name of the application cookie used for stickiness.\n          type: string\n        PolicyName:\n          description: The mnemonic name for the policy being created. The name must\n            be unique within a set of policies for this load balancer.\n          type: string\n      type: object\n    BackendVmHealth:\n      additionalProperties: false\n      description: Information about the health of a back-end VM.\n      example:\n        Description: Description\n        State: State\n        StateReason: StateReason\n        VmId: VmId\n      properties:\n        Description:\n          description: The description of the state of the back-end VM.\n          type: string\n        State:\n          description: The state of the back-end VM (`InService` \\| `OutOfService`\n            \\| `Unknown`).\n          type: string\n        StateReason:\n          description: |-\n            Information about the cause of `OutOfService` VMs.\u003cbr /\u003e\n            Specifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \\| `Instance` \\| `N/A`).\n          type: string\n        VmId:\n          description: The ID of the back-end VM.\n          type: string\n      type: object\n    BlockDeviceMappingCreated:\n      additionalProperties: false\n      description: Information about the created block device mapping.\n      example:\n        Bsu:\n          VolumeId: VolumeId\n          DeleteOnVmDeletion: true\n          State: State\n          LinkDate: 2000-01-23\n        DeviceName: DeviceName\n      properties:\n        Bsu:\n          $ref: '#/components/schemas/BsuCreated'\n        DeviceName:\n          description: The name of the device.\n          type: string\n      type: object\n    BlockDeviceMappingImage:\n      additionalProperties: false\n      description: One or more parameters used to automatically set up volumes when\n        the VM is created.\n      example:\n        Bsu:\n          SnapshotId: SnapshotId\n          DeleteOnVmDeletion: true\n          VolumeType: VolumeType\n          Iops: 0\n          VolumeSize: 6\n        VirtualDeviceName: VirtualDeviceName\n        DeviceName: DeviceName\n      properties:\n        Bsu:\n          $ref: '#/components/schemas/BsuToCreate'\n        DeviceName:\n          description: The device name for the volume. For a root device, you must\n            use `/dev/sda1`. For other volumes, you must use `/dev/sdX` or `/dev/xvdX`\n            (where `X` is a letter between `b` and `z`).\n          type: string\n        VirtualDeviceName:\n          description: The name of the virtual device (`ephemeralN`).\n          type: string\n      type: object\n    BlockDeviceMappingVmCreation:\n      additionalProperties: false\n      description: Information about the block device mapping.\n      example:\n        Bsu:\n          SnapshotId: SnapshotId\n          DeleteOnVmDeletion: true\n          VolumeType: VolumeType\n          Iops: 0\n          VolumeSize: 6\n        NoDevice: NoDevice\n        VirtualDeviceName: VirtualDeviceName\n        DeviceName: DeviceName\n      properties:\n        Bsu:\n          $ref: '#/components/schemas/BsuToCreate'\n        DeviceName:\n          description: The device name for the volume. For a root device, you must\n            use `/dev/sda1`. For other volumes, you must use `/dev/sdX` or `/dev/xvdX`\n            (where `X` is a letter between `b` and `z`).\n          type: string\n        NoDevice:\n          description: Removes the device which is included in the block device mapping\n            of the OMI.\n          type: string\n        VirtualDeviceName:\n          description: The name of the virtual device (`ephemeralN`).\n          type: string\n      type: object\n    BlockDeviceMappingVmUpdate:\n      additionalProperties: false\n      description: Information about the block device mapping.\n      example:\n        Bsu:\n          VolumeId: VolumeId\n          DeleteOnVmDeletion: true\n        NoDevice: NoDevice\n        VirtualDeviceName: VirtualDeviceName\n        DeviceName: DeviceName\n      properties:\n        Bsu:\n          $ref: '#/components/schemas/BsuToUpdateVm'\n        DeviceName:\n          description: The device name for the volume. For a root device, you must\n            use `/dev/sda1`. For other volumes, you must use `/dev/sdX` or `/dev/xvdX`\n            (where `X` is a letter between `b` and `z`).\n          type: string\n        NoDevice:\n          description: Removes the device which is included in the block device mapping\n            of the OMI.\n          type: string\n        VirtualDeviceName:\n          description: The name of the virtual device (`ephemeralN`).\n          type: string\n      type: object\n    BsuCreated:\n      additionalProperties: false\n      description: Information about the created BSU volume.\n      example:\n        VolumeId: VolumeId\n        DeleteOnVmDeletion: true\n        State: State\n        LinkDate: 2000-01-23\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the volume is deleted when terminating the VM. If\n            false, the volume is not deleted when terminating the VM.\n          type: boolean\n        LinkDate:\n          description: The time and date of attachment of the volume to the VM.\n          format: date\n          type: string\n        State:\n          description: The state of the volume.\n          type: string\n        VolumeId:\n          description: The ID of the volume.\n          type: string\n      type: object\n    BsuToCreate:\n      additionalProperties: false\n      description: Information about the BSU volume to create.\n      example:\n        SnapshotId: SnapshotId\n        DeleteOnVmDeletion: true\n        VolumeType: VolumeType\n        Iops: 0\n        VolumeSize: 6\n      properties:\n        DeleteOnVmDeletion:\n          default: true\n          description: By default or if set to true, the volume is deleted when terminating\n            the VM. If false, the volume is not deleted when terminating the VM.\n          type: boolean\n        Iops:\n          description: The number of I/O operations per second (IOPS). This parameter\n            must be specified only if you create an `io1` volume. The maximum number\n            of IOPS allowed for `io1` volumes is `13000`.\n          type: integer\n        SnapshotId:\n          description: The ID of the snapshot used to create the volume.\n          type: string\n        VolumeSize:\n          description: |-\n            The size of the volume, in gibibytes (GiB).\u003cbr /\u003e\n            If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.\u003cbr /\u003e\n            If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.\n          type: integer\n        VolumeType:\n          description: |-\n            The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.\u003cbr /\u003e\n            For more information about volume types, see [About Volumes \u003e Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).\n          type: string\n      type: object\n    BsuToUpdateVm:\n      additionalProperties: false\n      description: Information about the BSU volume.\n      example:\n        VolumeId: VolumeId\n        DeleteOnVmDeletion: true\n      properties:\n        DeleteOnVmDeletion:\n          description: If set to true, the volume is deleted when terminating the\n            VM. If set to false, the volume is not deleted when terminating the VM.\n          type: boolean\n        VolumeId:\n          description: The ID of the volume.\n          type: string\n      type: object\n    Ca:\n      additionalProperties: false\n      description: Information about the Client Certificate Authority (CA).\n      example:\n        Description: Description\n        CaFingerprint: CaFingerprint\n        CaId: CaId\n      properties:\n        CaFingerprint:\n          description: The fingerprint of the CA.\n          type: string\n        CaId:\n          description: The ID of the CA.\n          type: string\n        Description:\n          description: The description of the CA.\n          type: string\n      type: object\n    Catalog:\n      additionalProperties: false\n      description: Information about our catalog of prices.\n      example:\n        Entries:\n        - Type: Type\n          UnitPrice: 0.8008282\n          Category: Category\n          Service: Service\n          Title: Title\n          Flags: Flags\n          Operation: Operation\n          SubregionName: SubregionName\n        - Type: Type\n          UnitPrice: 0.8008282\n          Category: Category\n          Service: Service\n          Title: Title\n          Flags: Flags\n          Operation: Operation\n          SubregionName: SubregionName\n      properties:\n        Entries:\n          description: One or more catalog entries.\n          items:\n            $ref: '#/components/schemas/CatalogEntry'\n          type: array\n      type: object\n    CatalogEntry:\n      additionalProperties: false\n      description: Information about the catalog entry.\n      example:\n        Type: Type\n        UnitPrice: 0.8008282\n        Category: Category\n        Service: Service\n        Title: Title\n        Flags: Flags\n        Operation: Operation\n        SubregionName: SubregionName\n      properties:\n        Category:\n          description: The category of the catalog entry (for example, `network`).\n          type: string\n        Flags:\n          description: When returned and equal to `PER_MONTH`, the price of the catalog\n            entry is calculated on a monthly basis.\n          type: string\n        Operation:\n          description: The API call associated with the catalog entry (for example,\n            `CreateVms` or `RunInstances`).\n          type: string\n        Service:\n          description: The service associated with the catalog entry (`TinaOS-FCU`,\n            `TinaOS-LBU`, `TinaOS-DirectLink`, or `TinaOS-OOS`).\n          type: string\n        SubregionName:\n          description: The Subregion associated with the catalog entry.\n          type: string\n        Title:\n          description: The description of the catalog entry.\n          type: string\n        Type:\n          description: The type of resource associated with the catalog entry.\n          type: string\n        UnitPrice:\n          description: The unit price of the catalog entry, in the currency of the\n            catalog of the Region where the API method was used.\n          format: float\n          type: number\n      type: object\n    CheckAuthenticationRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        Login: Login\n        Password: Password\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Login:\n          description: The email address of the account.\n          type: string\n        Password:\n          description: The password of the account.\n          type: string\n      required:\n      - Login\n      - Password\n      type: object\n    CheckAuthenticationResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ClientGateway:\n      additionalProperties: false\n      description: Information about the client gateway.\n      example:\n        ConnectionType: ConnectionType\n        ClientGatewayId: ClientGatewayId\n        PublicIp: PublicIp\n        State: State\n        BgpAsn: 0\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        BgpAsn:\n          description: The Autonomous System Number (ASN) used by the Border Gateway\n            Protocol (BGP) to find the path to your client gateway through the Internet.\n          type: integer\n        ClientGatewayId:\n          description: The ID of the client gateway.\n          type: string\n        ConnectionType:\n          description: The type of communication tunnel used by the client gateway\n            (only `ipsec.1` is supported).\n          type: string\n        PublicIp:\n          description: The public IPv4 address of the client gateway (must be a fixed\n            address into a NATed network).\n          type: string\n        State:\n          description: The state of the client gateway (`pending` \\| `available` \\|\n            `deleting` \\| `deleted`).\n          type: string\n        Tags:\n          description: One or more tags associated with the client gateway.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    ConsumptionEntry:\n      additionalProperties: false\n      description: Information about the resources consumed during the specified time\n        period.\n      example:\n        Type: Type\n        AccountId: AccountId\n        Category: Category\n        Value: 0.8008281904610115\n        Service: Service\n        Title: Title\n        FromDate: FromDate\n        ToDate: ToDate\n        Operation: Operation\n        PayingAccountId: PayingAccountId\n        SubregionName: SubregionName\n      properties:\n        AccountId:\n          description: The ID of your TINA account.\n          type: string\n        Category:\n          description: The category of the resource (for example, `network`).\n          type: string\n        FromDate:\n          description: The beginning of the time period.\n          format: datetime\n          type: string\n        Operation:\n          description: The API call that triggered the resource consumption (for example,\n            `RunInstances` or `CreateVolume`).\n          type: string\n        PayingAccountId:\n          description: The ID of the TINA account which is billed for your consumption.\n            It can be different from your account in the `AccountId` parameter.\n          type: string\n        Service:\n          description: The service of the API call (`TinaOS-FCU`, `TinaOS-LBU`, `TinaOS-DirectLink`,\n            `TinaOS-OOS`, or `TinaOS-OSU`).\n          type: string\n        SubregionName:\n          description: The name of the Subregion.\n          type: string\n        Title:\n          description: A description of the consumed resource.\n          type: string\n        ToDate:\n          description: The end of the time period.\n          format: datetime\n          type: string\n        Type:\n          description: The type of resource, depending on the API call.\n          type: string\n        Value:\n          description: The consumed amount for the resource. The unit depends on the\n            resource type. For more information, see the `Title` element.\n          format: double\n          type: number\n      type: object\n    CreateAccessKeyRequest:\n      additionalProperties: false\n      example:\n        ExpirationDate: ExpirationDate\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ExpirationDate:\n          description: The date and time at which you want the access key to expire,\n            in ISO 8601 format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`).\n            To remove an existing expiration date, use the method without specifying\n            this parameter.\n          format: datetime\n          type: string\n      type: object\n    CreateAccessKeyResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        AccessKey:\n          CreationDate: CreationDate\n          SecretKey: SecretKey\n          ExpirationDate: ExpirationDate\n          AccessKeyId: AccessKeyId\n          State: State\n          LastModificationDate: LastModificationDate\n      properties:\n        AccessKey:\n          $ref: '#/components/schemas/AccessKeySecretKey'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateAccountRequest:\n      additionalProperties: false\n      example:\n        Email: Email\n        FirstName: FirstName\n        StateProvince: StateProvince\n        ZipCode: ZipCode\n        DryRun: true\n        City: City\n        CustomerId: CustomerId\n        JobTitle: JobTitle\n        VatNumber: VatNumber\n        CompanyName: CompanyName\n        MobileNumber: MobileNumber\n        AdditionalEmails:\n        - AdditionalEmails\n        - AdditionalEmails\n        Country: Country\n        PhoneNumber: PhoneNumber\n        LastName: LastName\n      properties:\n        AdditionalEmails:\n          description: One or more additional email addresses for the account. These\n            addresses are used for notifications only. If you already have a list\n            of additional emails registered, you cannot add to it, only replace it.\n            To remove all registered additional emails, specify an empty list.\n          items:\n            pattern: ^.+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)+$\n            type: string\n          type: array\n        City:\n          description: The city of the account owner.\n          type: string\n        CompanyName:\n          description: The name of the company for the account.\n          type: string\n        Country:\n          description: The country of the account owner.\n          type: string\n        CustomerId:\n          description: The ID of the customer. It must be 8 digits.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Email:\n          description: The main email address for the account. This address is used\n            for your credentials and notifications.\n          type: string\n        FirstName:\n          description: The first name of the account owner.\n          type: string\n        JobTitle:\n          description: The job title of the account owner.\n          type: string\n        LastName:\n          description: The last name of the account owner.\n          type: string\n        MobileNumber:\n          description: The mobile phone number of the account owner.\n          type: string\n        PhoneNumber:\n          description: The landline phone number of the account owner.\n          type: string\n        StateProvince:\n          description: The state/province of the account.\n          type: string\n        VatNumber:\n          description: The value added tax (VAT) number for the account.\n          type: string\n        ZipCode:\n          description: The ZIP code of the city.\n          type: string\n      required:\n      - City\n      - CompanyName\n      - Country\n      - CustomerId\n      - Email\n      - FirstName\n      - LastName\n      - ZipCode\n      type: object\n    CreateAccountResponse:\n      additionalProperties: false\n      example:\n        Account:\n          AccountId: AccountId\n          Email: Email\n          FirstName: FirstName\n          StateProvince: StateProvince\n          ZipCode: ZipCode\n          City: City\n          CustomerId: CustomerId\n          JobTitle: JobTitle\n          VatNumber: VatNumber\n          CompanyName: CompanyName\n          MobileNumber: MobileNumber\n          AdditionalEmails:\n          - AdditionalEmails\n          - AdditionalEmails\n          Country: Country\n          PhoneNumber: PhoneNumber\n          LastName: LastName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        Account:\n          $ref: '#/components/schemas/Account'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateApiAccessRuleRequest:\n      additionalProperties: false\n      example:\n        Description: Description\n        CaIds:\n        - CaIds\n        - CaIds\n        DryRun: true\n        Cns:\n        - Cns\n        - Cns\n        IpRanges:\n        - IpRanges\n        - IpRanges\n      properties:\n        CaIds:\n          description: ' One or more IDs of Client Certificate Authorities (CAs).'\n          items:\n            type: string\n          type: array\n        Cns:\n          description: One or more Client Certificate Common Names (CNs). If this\n            parameter is specified, you must also specify the `CaIds` parameter.\n          items:\n            type: string\n          type: array\n        Description:\n          description: A description for the API access rule.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        IpRanges:\n          description: One or more IP ranges, in CIDR notation (for example, `192.0.2.0/16`).\n          items:\n            type: string\n          type: array\n      type: object\n    CreateApiAccessRuleResponse:\n      additionalProperties: false\n      example:\n        ApiAccessRule:\n          Description: Description\n          ApiAccessRuleId: ApiAccessRuleId\n          CaIds:\n          - CaIds\n          - CaIds\n          Cns:\n          - Cns\n          - Cns\n          IpRanges:\n          - IpRanges\n          - IpRanges\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ApiAccessRule:\n          $ref: '#/components/schemas/ApiAccessRule'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateCaRequest:\n      additionalProperties: false\n      example:\n        Description: Description\n        CaPem: CaPem\n        DryRun: true\n      properties:\n        CaPem:\n          description: The CA in PEM format. It must be a single-line string, containing\n            literal line breaks (`\\n`).\n          type: string\n        Description:\n          description: The description of the CA.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - CaPem\n      type: object\n    CreateCaResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Ca:\n          Description: Description\n          CaFingerprint: CaFingerprint\n          CaId: CaId\n      properties:\n        Ca:\n          $ref: '#/components/schemas/Ca'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateClientGatewayRequest:\n      additionalProperties: false\n      example:\n        ConnectionType: ConnectionType\n        PublicIp: PublicIp\n        DryRun: true\n        BgpAsn: 0\n      properties:\n        BgpAsn:\n          description: The Autonomous System Number (ASN) used by the Border Gateway\n            Protocol (BGP) to find the path to your client gateway through the Internet.\n            This number must be between `1` and `4294967295`.\n          type: integer\n        ConnectionType:\n          description: The communication protocol used to establish tunnel with your\n            client gateway (only `ipsec.1` is supported).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        PublicIp:\n          description: The public fixed IPv4 address of your client gateway.\n          type: string\n      required:\n      - BgpAsn\n      - ConnectionType\n      - PublicIp\n      type: object\n    CreateClientGatewayResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        ClientGateway:\n          ConnectionType: ConnectionType\n          ClientGatewayId: ClientGatewayId\n          PublicIp: PublicIp\n          State: State\n          BgpAsn: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ClientGateway:\n          $ref: '#/components/schemas/ClientGateway'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateDhcpOptionsRequest:\n      additionalProperties: false\n      example:\n        LogServers:\n        - LogServers\n        - LogServers\n        NtpServers:\n        - NtpServers\n        - NtpServers\n        DomainName: DomainName\n        DryRun: true\n        DomainNameServers:\n        - DomainNameServers\n        - DomainNameServers\n      properties:\n        DomainName:\n          description: 'Specify a domain name (for example, `MyCompany.com`). You\n            can specify only one domain name. You must specify at least one of the\n            following parameters: `DomainName`, `DomainNameServers`, `LogServers`,\n            or `NtpServers`.'\n          type: string\n        DomainNameServers:\n          description: 'The IPs of domain name servers. If no IPs are specified, the\n            `OutscaleProvidedDNS` value is set by default. You must specify at least\n            one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`,\n            or `NtpServers`.'\n          items:\n            type: string\n          type: array\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LogServers:\n          description: 'The IPs of the log servers. You must specify at least one\n            of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`,\n            or `NtpServers`.'\n          items:\n            type: string\n          type: array\n        NtpServers:\n          description: 'The IPs of the Network Time Protocol (NTP) servers. You must\n            specify at least one of the following parameters: `DomainName`, `DomainNameServers`,\n            `LogServers`, or `NtpServers`.'\n          items:\n            type: string\n          type: array\n      type: object\n    CreateDhcpOptionsResponse:\n      additionalProperties: false\n      example:\n        DhcpOptionsSet:\n          DhcpOptionsSetId: DhcpOptionsSetId\n          LogServers:\n          - LogServers\n          - LogServers\n          NtpServers:\n          - NtpServers\n          - NtpServers\n          DomainName: DomainName\n          Default: true\n          DomainNameServers:\n          - DomainNameServers\n          - DomainNameServers\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        DhcpOptionsSet:\n          $ref: '#/components/schemas/DhcpOptionsSet'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateDirectLinkInterfaceRequest:\n      additionalProperties: false\n      example:\n        DirectLinkInterface:\n          ClientPrivateIp: ClientPrivateIp\n          DirectLinkInterfaceName: DirectLinkInterfaceName\n          BgpKey: BgpKey\n          Vlan: 6\n          OutscalePrivateIp: OutscalePrivateIp\n          VirtualGatewayId: VirtualGatewayId\n          BgpAsn: 0\n        DryRun: true\n        DirectLinkId: DirectLinkId\n      properties:\n        DirectLinkId:\n          description: The ID of the existing DirectLink for which you want to create\n            the DirectLink interface.\n          type: string\n        DirectLinkInterface:\n          $ref: '#/components/schemas/DirectLinkInterface'\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - DirectLinkId\n      - DirectLinkInterface\n      type: object\n    CreateDirectLinkInterfaceResponse:\n      additionalProperties: false\n      example:\n        DirectLinkInterface:\n          ClientPrivateIp: ClientPrivateIp\n          AccountId: AccountId\n          BgpKey: BgpKey\n          DirectLinkInterfaceId: DirectLinkInterfaceId\n          Vlan: 1\n          BgpAsn: 0\n          Mtu: 6\n          InterfaceType: InterfaceType\n          State: State\n          DirectLinkInterfaceName: DirectLinkInterfaceName\n          DirectLinkId: DirectLinkId\n          OutscalePrivateIp: OutscalePrivateIp\n          VirtualGatewayId: VirtualGatewayId\n          Location: Location\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        DirectLinkInterface:\n          $ref: '#/components/schemas/DirectLinkInterfaces'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateDirectLinkRequest:\n      additionalProperties: false\n      example:\n        DirectLinkName: DirectLinkName\n        Bandwidth: Bandwidth\n        DryRun: true\n        Location: Location\n      properties:\n        Bandwidth:\n          description: The bandwidth of the DirectLink (`1Gbps` \\| `10Gbps`).\n          type: string\n        DirectLinkName:\n          description: The name of the DirectLink.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Location:\n          description: The code of the requested location for the DirectLink, returned\n            by the [ReadLocations](#readlocations) method.\n          type: string\n      required:\n      - Bandwidth\n      - DirectLinkName\n      - Location\n      type: object\n    CreateDirectLinkResponse:\n      additionalProperties: false\n      example:\n        DirectLink:\n          AccountId: AccountId\n          DirectLinkName: DirectLinkName\n          RegionName: RegionName\n          State: State\n          Bandwidth: Bandwidth\n          DirectLinkId: DirectLinkId\n          Location: Location\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        DirectLink:\n          $ref: '#/components/schemas/DirectLink'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateFlexibleGpuRequest:\n      additionalProperties: false\n      example:\n        Generation: Generation\n        DeleteOnVmDeletion: false\n        ModelName: ModelName\n        DryRun: true\n        SubregionName: SubregionName\n      properties:\n        DeleteOnVmDeletion:\n          default: false\n          description: If true, the fGPU is deleted when the VM is terminated.\n          type: boolean\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Generation:\n          description: The processor generation that the fGPU must be compatible with.\n            If not specified, the oldest possible processor generation is selected\n            (as provided by [ReadFlexibleGpuCatalog](#readflexiblegpucatalog) for\n            the specified model of fGPU).\n          type: string\n        ModelName:\n          description: The model of fGPU you want to allocate. For more information,\n            see [About Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).\n          type: string\n        SubregionName:\n          description: The Subregion in which you want to create the fGPU.\n          type: string\n      required:\n      - ModelName\n      - SubregionName\n      type: object\n    CreateFlexibleGpuResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        FlexibleGpu:\n          Generation: Generation\n          DeleteOnVmDeletion: true\n          ModelName: ModelName\n          FlexibleGpuId: FlexibleGpuId\n          State: State\n          VmId: VmId\n          SubregionName: SubregionName\n      properties:\n        FlexibleGpu:\n          $ref: '#/components/schemas/FlexibleGpu'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateImageExportTaskRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        ImageId: ImageId\n        OsuExport:\n          OsuManifestUrl: OsuManifestUrl\n          OsuApiKey:\n            SecretKey: SecretKey\n            ApiKeyId: ApiKeyId\n          OsuBucket: OsuBucket\n          OsuPrefix: OsuPrefix\n          DiskImageFormat: DiskImageFormat\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ImageId:\n          description: The ID of the OMI to export.\n          type: string\n        OsuExport:\n          $ref: '#/components/schemas/OsuExportToCreate'\n      required:\n      - ImageId\n      - OsuExport\n      type: object\n    CreateImageExportTaskResponse:\n      additionalProperties: false\n      example:\n        ImageExportTask:\n          Comment: Comment\n          Progress: 0\n          TaskId: TaskId\n          State: State\n          ImageId: ImageId\n          OsuExport:\n            OsuManifestUrl: OsuManifestUrl\n            OsuBucket: OsuBucket\n            OsuPrefix: OsuPrefix\n            DiskImageFormat: DiskImageFormat\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ImageExportTask:\n          $ref: '#/components/schemas/ImageExportTask'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateImageRequest:\n      additionalProperties: false\n      example:\n        ImageName: ImageName\n        SourceRegionName: SourceRegionName\n        Description: Description\n        RootDeviceName: RootDeviceName\n        Architecture: Architecture\n        FileLocation: FileLocation\n        BlockDeviceMappings:\n        - Bsu:\n            SnapshotId: SnapshotId\n            DeleteOnVmDeletion: true\n            VolumeType: VolumeType\n            Iops: 0\n            VolumeSize: 6\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        - Bsu:\n            SnapshotId: SnapshotId\n            DeleteOnVmDeletion: true\n            VolumeType: VolumeType\n            Iops: 0\n            VolumeSize: 6\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        DryRun: true\n        VmId: VmId\n        NoReboot: true\n        SourceImageId: SourceImageId\n      properties:\n        Architecture:\n          description: The architecture of the OMI (by default, `i386` if you specified\n            the `FileLocation` or `RootDeviceName` parameter).\n          type: string\n        BlockDeviceMappings:\n          description: One or more block device mappings.\n          items:\n            $ref: '#/components/schemas/BlockDeviceMappingImage'\n          type: array\n        Description:\n          description: A description for the new OMI.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        FileLocation:\n          description: 'The pre-signed URL of the OMI manifest file, or the full path\n            to the OMI stored in a bucket. If you specify this parameter, a copy of\n            the OMI is created in your account. You must specify only one of the following\n            parameters: `FileLocation`, `RootDeviceName`, `SourceImageId` or `VmId`.'\n          type: string\n        ImageName:\n          description: |-\n            A unique name for the new OMI.\u003cbr /\u003e\n            Constraints: 3-128 alphanumeric characters, underscores (_), spaces ( ), parentheses (()), slashes (/), periods (.), or dashes (-).\n          type: string\n        NoReboot:\n          description: If false, the VM shuts down before creating the OMI and then\n            reboots. If true, the VM does not.\n          type: boolean\n        RootDeviceName:\n          description: 'The name of the root device. You must specify only one of\n            the following parameters: `FileLocation`, `RootDeviceName`, `SourceImageId`\n            or `VmId`.'\n          type: string\n        SourceImageId:\n          description: 'The ID of the OMI you want to copy. You must specify only\n            one of the following parameters: `FileLocation`, `RootDeviceName`, `SourceImageId`\n            or `VmId`.'\n          type: string\n        SourceRegionName:\n          description: The name of the source Region, which must be the same as the\n            Region of your account.\n          type: string\n        VmId:\n          description: 'The ID of the VM from which you want to create the OMI. You\n            must specify only one of the following parameters: `FileLocation`, `RootDeviceName`,\n            `SourceImageId` or `VmId`.'\n          type: string\n      type: object\n    CreateImageResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Image:\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          CreationDate: 2000-01-23\n          PermissionsToLaunch:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountId: AccountId\n          Description: Description\n          RootDeviceName: RootDeviceName\n          Architecture: Architecture\n          BlockDeviceMappings:\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          StateComment:\n            StateCode: StateCode\n            StateMessage: StateMessage\n          AccountAlias: AccountAlias\n          ImageType: ImageType\n          ImageName: ImageName\n          RootDeviceType: RootDeviceType\n          State: State\n          FileLocation: FileLocation\n          ImageId: ImageId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        Image:\n          $ref: '#/components/schemas/Image'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateInternetServiceRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    CreateInternetServiceResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        InternetService:\n          NetId: NetId\n          InternetServiceId: InternetServiceId\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        InternetService:\n          $ref: '#/components/schemas/InternetService'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateKeypairRequest:\n      additionalProperties: false\n      example:\n        PublicKey: PublicKey\n        DryRun: true\n        KeypairName: KeypairName\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        KeypairName:\n          description: A unique name for the keypair, with a maximum length of 255\n            [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).\n          type: string\n        PublicKey:\n          description: The public key. It must be Base64-encoded.\n          type: string\n      required:\n      - KeypairName\n      type: object\n    CreateKeypairResponse:\n      additionalProperties: false\n      example:\n        Keypair:\n          KeypairFingerprint: KeypairFingerprint\n          PrivateKey: PrivateKey\n          KeypairName: KeypairName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        Keypair:\n          $ref: '#/components/schemas/KeypairCreated'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateListenerRuleRequest:\n      additionalProperties: false\n      example:\n        Listener:\n          LoadBalancerName: LoadBalancerName\n          LoadBalancerPort: 0\n        ListenerRule:\n          Action: Action\n          PathPattern: PathPattern\n          HostNamePattern: HostNamePattern\n          Priority: 6\n          ListenerRuleName: ListenerRuleName\n        DryRun: true\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Listener:\n          $ref: '#/components/schemas/LoadBalancerLight'\n        ListenerRule:\n          $ref: '#/components/schemas/ListenerRuleForCreation'\n        VmIds:\n          description: The IDs of the backend VMs.\n          items:\n            type: string\n          type: array\n      required:\n      - Listener\n      - ListenerRule\n      - VmIds\n      type: object\n    CreateListenerRuleResponse:\n      additionalProperties: false\n      example:\n        ListenerRule:\n          Action: Action\n          PathPattern: PathPattern\n          HostNamePattern: HostNamePattern\n          Priority: 1\n          ListenerRuleId: 6\n          ListenerId: 0\n          ListenerRuleName: ListenerRuleName\n          VmIds:\n          - VmIds\n          - VmIds\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ListenerRule:\n          $ref: '#/components/schemas/ListenerRule'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateLoadBalancerListenersRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerName: LoadBalancerName\n        Listeners:\n        - BackendProtocol: BackendProtocol\n          LoadBalancerProtocol: LoadBalancerProtocol\n          BackendPort: 0\n          ServerCertificateId: ServerCertificateId\n          LoadBalancerPort: 6\n        - BackendProtocol: BackendProtocol\n          LoadBalancerProtocol: LoadBalancerProtocol\n          BackendPort: 0\n          ServerCertificateId: ServerCertificateId\n          LoadBalancerPort: 6\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Listeners:\n          description: One or more listeners for the load balancer.\n          items:\n            $ref: '#/components/schemas/ListenerForCreation'\n          type: array\n        LoadBalancerName:\n          description: The name of the load balancer for which you want to create\n            listeners.\n          type: string\n      required:\n      - Listeners\n      - LoadBalancerName\n      type: object\n    CreateLoadBalancerListenersResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LoadBalancer:\n          AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        LoadBalancer:\n          $ref: '#/components/schemas/LoadBalancer'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateLoadBalancerPolicyRequest:\n      additionalProperties: false\n      example:\n        CookieExpirationPeriod: 0\n        LoadBalancerName: LoadBalancerName\n        PolicyType: PolicyType\n        PolicyName: PolicyName\n        DryRun: true\n        CookieName: CookieName\n      properties:\n        CookieExpirationPeriod:\n          description: The lifetime of the cookie, in seconds. If not specified, the\n            default value of this parameter is `1`, which means that the sticky session\n            lasts for the duration of the browser session.\n          type: integer\n        CookieName:\n          description: The name of the application cookie used for stickiness. This\n            parameter is required if you create a stickiness policy based on an application-generated\n            cookie.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerName:\n          description: The name of the load balancer for which you want to create\n            a policy.\n          type: string\n        PolicyName:\n          description: The name of the policy. This name must be unique and consist\n            of alphanumeric characters and dashes (-).\n          type: string\n        PolicyType:\n          description: 'The type of stickiness policy you want to create: `app` or\n            `load_balancer`.'\n          type: string\n      required:\n      - LoadBalancerName\n      - PolicyName\n      - PolicyType\n      type: object\n    CreateLoadBalancerPolicyResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LoadBalancer:\n          AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        LoadBalancer:\n          $ref: '#/components/schemas/LoadBalancer'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateLoadBalancerRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerName: LoadBalancerName\n        SecurityGroups:\n        - SecurityGroups\n        - SecurityGroups\n        Listeners:\n        - BackendProtocol: BackendProtocol\n          LoadBalancerProtocol: LoadBalancerProtocol\n          BackendPort: 0\n          ServerCertificateId: ServerCertificateId\n          LoadBalancerPort: 6\n        - BackendProtocol: BackendProtocol\n          LoadBalancerProtocol: LoadBalancerProtocol\n          BackendPort: 0\n          ServerCertificateId: ServerCertificateId\n          LoadBalancerPort: 6\n        Subnets:\n        - Subnets\n        - Subnets\n        PublicIp: PublicIp\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n        DryRun: true\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n        LoadBalancerType: LoadBalancerType\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Listeners:\n          description: One or more listeners to create.\n          items:\n            $ref: '#/components/schemas/ListenerForCreation'\n          type: array\n        LoadBalancerName:\n          description: The unique name of the load balancer (32 alphanumeric or hyphen\n            characters maximum, but cannot start or end with a hyphen).\n          type: string\n        LoadBalancerType:\n          description: 'The type of load balancer: `internet-facing` or `internal`.\n            Use this parameter only for load balancers in a Net.'\n          type: string\n        PublicIp:\n          description: (internet-facing only) The public IP you want to associate\n            with the load balancer. If not specified, a public IP owned by 3DS OUTSCALE\n            is associated.\n          type: string\n        SecurityGroups:\n          description: (Net only) One or more IDs of security groups you want to assign\n            to the load balancer. If not specified, the default security group of\n            the Net is assigned to the load balancer.\n          items:\n            type: string\n          type: array\n        Subnets:\n          description: (Net only) The ID of the Subnet in which you want to create\n            the load balancer. Regardless of this Subnet, the load balancer can distribute\n            traffic to all Subnets. This parameter is required in a Net.\n          items:\n            type: string\n          type: array\n        SubregionNames:\n          description: (public Cloud only) The Subregion in which you want to create\n            the load balancer. Regardless of this Subregion, the load balancer can\n            distribute traffic to all Subregions. This parameter is required in the\n            public Cloud.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: One or more tags assigned to the load balancer.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      required:\n      - Listeners\n      - LoadBalancerName\n      type: object\n    CreateLoadBalancerResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LoadBalancer:\n          AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        LoadBalancer:\n          $ref: '#/components/schemas/LoadBalancer'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateLoadBalancerTagsRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerNames:\n        - LoadBalancerNames\n        - LoadBalancerNames\n        DryRun: true\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerNames:\n          description: One or more load balancer names.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: One or more tags to add to the specified load balancers.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      required:\n      - LoadBalancerNames\n      - Tags\n      type: object\n    CreateLoadBalancerTagsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateNatServiceRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        PublicIpId: PublicIpId\n        SubnetId: SubnetId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        PublicIpId:\n          description: |-\n            The allocation ID of the public IP to associate with the NAT service.\u003cbr /\u003e\n            If the public IP is already associated with another resource, you must first disassociate it.\n          type: string\n        SubnetId:\n          description: The ID of the Subnet in which you want to create the NAT service.\n          type: string\n      required:\n      - PublicIpId\n      - SubnetId\n      type: object\n    CreateNatServiceResponse:\n      additionalProperties: false\n      example:\n        NatService:\n          NatServiceId: NatServiceId\n          NetId: NetId\n          PublicIps:\n          - PublicIp: PublicIp\n            PublicIpId: PublicIpId\n          - PublicIp: PublicIp\n            PublicIpId: PublicIpId\n          State: State\n          SubnetId: SubnetId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        NatService:\n          $ref: '#/components/schemas/NatService'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateNetAccessPointRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        RouteTableIds:\n        - RouteTableIds\n        - RouteTableIds\n        ServiceName: ServiceName\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetId:\n          description: The ID of the Net.\n          type: string\n        RouteTableIds:\n          description: One or more IDs of route tables to use for the connection.\n          items:\n            type: string\n          type: array\n        ServiceName:\n          description: The name of the service (in the format `com.outscale.region.service`).\n          type: string\n      required:\n      - NetId\n      - ServiceName\n      type: object\n    CreateNetAccessPointResponse:\n      additionalProperties: false\n      example:\n        NetAccessPoint:\n          NetId: NetId\n          RouteTableIds:\n          - RouteTableIds\n          - RouteTableIds\n          ServiceName: ServiceName\n          State: State\n          NetAccessPointId: NetAccessPointId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        NetAccessPoint:\n          $ref: '#/components/schemas/NetAccessPoint'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateNetPeeringRequest:\n      additionalProperties: false\n      example:\n        AccepterNetId: AccepterNetId\n        DryRun: true\n        SourceNetId: SourceNetId\n      properties:\n        AccepterNetId:\n          description: The ID of the Net you want to connect with.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        SourceNetId:\n          description: The ID of the Net you send the peering request from.\n          type: string\n      required:\n      - AccepterNetId\n      - SourceNetId\n      type: object\n    CreateNetPeeringResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        NetPeering:\n          SourceNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          State:\n            Message: Message\n            Name: Name\n          NetPeeringId: NetPeeringId\n          AccepterNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        NetPeering:\n          $ref: '#/components/schemas/NetPeering'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateNetRequest:\n      additionalProperties: false\n      example:\n        IpRange: IpRange\n        Tenancy: Tenancy\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        IpRange:\n          description: The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).\n          type: string\n        Tenancy:\n          description: The tenancy options for the VMs (`default` if a VM created\n            in a Net can be launched with any tenancy, `dedicated` if it can be launched\n            with dedicated tenancy VMs running on single-tenant hardware).\n          type: string\n      required:\n      - IpRange\n      type: object\n    CreateNetResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Net:\n          IpRange: IpRange\n          Tenancy: Tenancy\n          DhcpOptionsSetId: DhcpOptionsSetId\n          NetId: NetId\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        Net:\n          $ref: '#/components/schemas/Net'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateNicRequest:\n      additionalProperties: false\n      example:\n        Description: Description\n        PrivateIps:\n        - PrivateIp: PrivateIp\n          IsPrimary: true\n        - PrivateIp: PrivateIp\n          IsPrimary: true\n        DryRun: true\n        SubnetId: SubnetId\n        SecurityGroupIds:\n        - SecurityGroupIds\n        - SecurityGroupIds\n      properties:\n        Description:\n          description: A description for the NIC.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        PrivateIps:\n          description: |-\n            The primary private IP for the NIC.\u003cbr /\u003e\n            This IP must be within the IP range of the Subnet that you specify with the `SubnetId` attribute.\u003cbr /\u003e\n            If you do not specify this attribute, a random private IP is selected within the IP range of the Subnet.\n          items:\n            $ref: '#/components/schemas/PrivateIpLight'\n          type: array\n        SecurityGroupIds:\n          description: One or more IDs of security groups for the NIC.\n          items:\n            type: string\n          type: array\n        SubnetId:\n          description: The ID of the Subnet in which you want to create the NIC.\n          type: string\n      required:\n      - SubnetId\n      type: object\n    CreateNicResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Nic:\n          SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          LinkPublicIp:\n            PublicIp: PublicIp\n            LinkPublicIpId: LinkPublicIpId\n            PublicIpId: PublicIpId\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          PrivateDnsName: PrivateDnsName\n          LinkNic:\n            DeviceNumber: 0\n            DeleteOnVmDeletion: true\n            VmAccountId: VmAccountId\n            LinkNicId: LinkNicId\n            State: State\n            VmId: VmId\n          SubnetId: SubnetId\n          MacAddress: MacAddress\n          SubregionName: SubregionName\n          IsSourceDestChecked: true\n          PrivateIps:\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          NicId: NicId\n      properties:\n        Nic:\n          $ref: '#/components/schemas/Nic'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreatePublicIpRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    CreatePublicIpResponse:\n      additionalProperties: false\n      example:\n        PublicIp:\n          NicAccountId: NicAccountId\n          PrivateIp: PrivateIp\n          PublicIp: PublicIp\n          LinkPublicIpId: LinkPublicIpId\n          PublicIpId: PublicIpId\n          VmId: VmId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          NicId: NicId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        PublicIp:\n          $ref: '#/components/schemas/PublicIp'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateRouteRequest:\n      additionalProperties: false\n      example:\n        NatServiceId: NatServiceId\n        RouteTableId: RouteTableId\n        DestinationIpRange: DestinationIpRange\n        DryRun: true\n        NetPeeringId: NetPeeringId\n        VmId: VmId\n        GatewayId: GatewayId\n        NicId: NicId\n      properties:\n        DestinationIpRange:\n          description: The IP range used for the destination match, in CIDR notation\n            (for example, `10.0.0.0/24`).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        GatewayId:\n          description: The ID of an Internet service or virtual gateway attached to\n            your Net.\n          type: string\n        NatServiceId:\n          description: The ID of a NAT service.\n          type: string\n        NetPeeringId:\n          description: The ID of a Net peering connection.\n          type: string\n        NicId:\n          description: The ID of a NIC.\n          type: string\n        RouteTableId:\n          description: The ID of the route table for which you want to create a route.\n          type: string\n        VmId:\n          description: The ID of a NAT VM in your Net (attached to exactly one NIC).\n          type: string\n      required:\n      - DestinationIpRange\n      - RouteTableId\n      type: object\n    CreateRouteResponse:\n      additionalProperties: false\n      example:\n        RouteTable:\n          NetId: NetId\n          RouteTableId: RouteTableId\n          RoutePropagatingVirtualGateways:\n          - VirtualGatewayId: VirtualGatewayId\n          - VirtualGatewayId: VirtualGatewayId\n          LinkRouteTables:\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          Routes:\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        RouteTable:\n          $ref: '#/components/schemas/RouteTable'\n      type: object\n    CreateRouteTableRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetId:\n          description: The ID of the Net for which you want to create a route table.\n          type: string\n      required:\n      - NetId\n      type: object\n    CreateRouteTableResponse:\n      additionalProperties: false\n      example:\n        RouteTable:\n          NetId: NetId\n          RouteTableId: RouteTableId\n          RoutePropagatingVirtualGateways:\n          - VirtualGatewayId: VirtualGatewayId\n          - VirtualGatewayId: VirtualGatewayId\n          LinkRouteTables:\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          Routes:\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        RouteTable:\n          $ref: '#/components/schemas/RouteTable'\n      type: object\n    CreateSecurityGroupRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        Description: Description\n        SecurityGroupName: SecurityGroupName\n        DryRun: true\n      properties:\n        Description:\n          description: A description for the security group, with a maximum length\n            of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetId:\n          description: The ID of the Net for the security group.\n          type: string\n        SecurityGroupName:\n          description: |-\n            The name of the security group.\u003cbr /\u003e\n            This name must not start with `sg-`.\u003c/br\u003e\n            This name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed.\n          type: string\n      required:\n      - Description\n      - SecurityGroupName\n      type: object\n    CreateSecurityGroupResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        SecurityGroup:\n          InboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n          OutboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        SecurityGroup:\n          $ref: '#/components/schemas/SecurityGroup'\n      type: object\n    CreateSecurityGroupRuleRequest:\n      additionalProperties: false\n      example:\n        IpRange: IpRange\n        ToPortRange: 6\n        SecurityGroupNameToLink: SecurityGroupNameToLink\n        SecurityGroupId: SecurityGroupId\n        DryRun: true\n        IpProtocol: IpProtocol\n        SecurityGroupAccountIdToLink: SecurityGroupAccountIdToLink\n        Rules:\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        Flow: Flow\n        FromPortRange: 0\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Flow:\n          description: 'The direction of the flow: `Inbound` or `Outbound`. You can\n            specify `Outbound` for Nets only.'\n          type: string\n        FromPortRange:\n          description: The beginning of the port range for the TCP and UDP protocols,\n            or an ICMP type number. If you specify this parameter, you cannot specify\n            the `Rules` parameter and its subparameters.\n          type: integer\n        IpProtocol:\n          description: The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all\n            protocols). By default, `-1`. In a Net, this can also be an IP protocol\n            number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).\n            If you specify this parameter, you cannot specify the `Rules` parameter\n            and its subparameters.\n          type: string\n        IpRange:\n          description: The IP range for the security group rule, in CIDR notation\n            (for example, 10.0.0.0/16). If you specify this parameter, you cannot\n            specify the `Rules` parameter and its subparameters.\n          type: string\n        Rules:\n          description: 'Information about the security group rule to create. If you\n            specify this parent parameter and its subparameters, you cannot specify\n            the following parent parameters: `FromPortRange`, `IpProtocol`, `IpRange`,\n            and `ToPortRange`.'\n          items:\n            $ref: '#/components/schemas/SecurityGroupRule'\n          type: array\n        SecurityGroupAccountIdToLink:\n          description: The account ID of the owner of the security group for which\n            you want to create a rule.\n          type: string\n        SecurityGroupId:\n          description: The ID of the security group for which you want to create a\n            rule.\n          type: string\n        SecurityGroupNameToLink:\n          description: The ID of the source security group. If you are in the Public\n            Cloud, you can also specify the name of the source security group.\n          type: string\n        ToPortRange:\n          description: The end of the port range for the TCP and UDP protocols, or\n            an ICMP code number. If you specify this parameter, you cannot specify\n            the `Rules` parameter and its subparameters.\n          type: integer\n      required:\n      - Flow\n      - SecurityGroupId\n      type: object\n    CreateSecurityGroupRuleResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        SecurityGroup:\n          InboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n          OutboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        SecurityGroup:\n          $ref: '#/components/schemas/SecurityGroup'\n      type: object\n    CreateServerCertificateRequest:\n      additionalProperties: false\n      example:\n        Path: Path\n        Chain: Chain\n        PrivateKey: PrivateKey\n        DryRun: true\n        Body: Body\n        Name: Name\n      properties:\n        Body:\n          description: The PEM-encoded X509 certificate.\n          type: string\n        Chain:\n          description: The PEM-encoded intermediate certification authorities.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Name:\n          description: 'A unique name for the certificate. Constraints: 1-128 alphanumeric\n            characters, pluses (+), equals (=), commas (,), periods (.), at signs\n            (@), minuses (-), or underscores (_).'\n          type: string\n        Path:\n          description: The path to the server certificate, set to a slash (/) if not\n            specified.\n          type: string\n        PrivateKey:\n          description: The PEM-encoded private key matching the certificate.\n          type: string\n      required:\n      - Body\n      - Name\n      - PrivateKey\n      type: object\n    CreateServerCertificateResponse:\n      additionalProperties: false\n      example:\n        ServerCertificate:\n          Path: Path\n          UploadDate: 2000-01-23\n          ExpirationDate: 2000-01-23\n          Orn: Orn\n          Id: Id\n          Name: Name\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        ServerCertificate:\n          $ref: '#/components/schemas/ServerCertificate'\n      type: object\n    CreateSnapshotExportTaskRequest:\n      additionalProperties: false\n      example:\n        SnapshotId: SnapshotId\n        DryRun: true\n        OsuExport:\n          OsuManifestUrl: OsuManifestUrl\n          OsuApiKey:\n            SecretKey: SecretKey\n            ApiKeyId: ApiKeyId\n          OsuBucket: OsuBucket\n          OsuPrefix: OsuPrefix\n          DiskImageFormat: DiskImageFormat\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        OsuExport:\n          $ref: '#/components/schemas/OsuExportToCreate'\n        SnapshotId:\n          description: The ID of the snapshot to export.\n          type: string\n      required:\n      - OsuExport\n      - SnapshotId\n      type: object\n    CreateSnapshotExportTaskResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        SnapshotExportTask:\n          Comment: Comment\n          SnapshotId: SnapshotId\n          Progress: 0\n          TaskId: TaskId\n          State: State\n          OsuExport:\n            OsuBucket: OsuBucket\n            OsuPrefix: OsuPrefix\n            DiskImageFormat: DiskImageFormat\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        SnapshotExportTask:\n          $ref: '#/components/schemas/SnapshotExportTask'\n      type: object\n    CreateSnapshotRequest:\n      additionalProperties: false\n      example:\n        SnapshotSize: 0\n        SourceRegionName: SourceRegionName\n        VolumeId: VolumeId\n        Description: Description\n        SourceSnapshotId: SourceSnapshotId\n        FileLocation: FileLocation\n        DryRun: true\n      properties:\n        Description:\n          description: A description for the snapshot.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        FileLocation:\n          description: The pre-signed URL of the snapshot you want to import from\n            the bucket.\n          type: string\n        SnapshotSize:\n          description: The size of the snapshot you want to create in your account,\n            in bytes. This size must be greater than or equal to the size of the original,\n            uncompressed snapshot.\n          format: int64\n          type: integer\n        SourceRegionName:\n          description: The name of the source Region, which must be the same as the\n            Region of your account.\n          type: string\n        SourceSnapshotId:\n          description: The ID of the snapshot you want to copy.\n          type: string\n        VolumeId:\n          description: The ID of the volume you want to create a snapshot of.\n          type: string\n      type: object\n    CreateSnapshotResponse:\n      additionalProperties: false\n      example:\n        Snapshot:\n          CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          Progress: 0\n          VolumeId: VolumeId\n          AccountId: AccountId\n          Description: Description\n          State: State\n          PermissionsToCreateVolume:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountAlias: AccountAlias\n          VolumeSize: 6\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Snapshot:\n          $ref: '#/components/schemas/Snapshot'\n      type: object\n    CreateSubnetRequest:\n      additionalProperties: false\n      example:\n        IpRange: IpRange\n        NetId: NetId\n        DryRun: true\n        SubregionName: SubregionName\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        IpRange:\n          description: The IP range in the Subnet, in CIDR notation (for example,\n            `10.0.0.0/16`).\n          type: string\n        NetId:\n          description: The ID of the Net for which you want to create a Subnet.\n          type: string\n        SubregionName:\n          description: The name of the Subregion in which you want to create the Subnet.\n          type: string\n      required:\n      - IpRange\n      - NetId\n      type: object\n    CreateSubnetResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Subnet:\n          IpRange: IpRange\n          NetId: NetId\n          AvailableIpsCount: 0\n          MapPublicIpOnLaunch: true\n          State: State\n          SubnetId: SubnetId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Subnet:\n          $ref: '#/components/schemas/Subnet'\n      type: object\n    CreateTagsRequest:\n      additionalProperties: false\n      example:\n        ResourceIds:\n        - ResourceIds\n        - ResourceIds\n        DryRun: true\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ResourceIds:\n          description: One or more resource IDs.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: One or more tags to add to the specified resources.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      required:\n      - ResourceIds\n      - Tags\n      type: object\n    CreateTagsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    CreateVirtualGatewayRequest:\n      additionalProperties: false\n      example:\n        ConnectionType: ConnectionType\n        DryRun: true\n      properties:\n        ConnectionType:\n          description: The type of VPN connection supported by the virtual gateway\n            (only `ipsec.1` is supported).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - ConnectionType\n      type: object\n    CreateVirtualGatewayResponse:\n      additionalProperties: false\n      example:\n        VirtualGateway:\n          ConnectionType: ConnectionType\n          NetToVirtualGatewayLinks:\n          - NetId: NetId\n            State: State\n          - NetId: NetId\n            State: State\n          State: State\n          VirtualGatewayId: VirtualGatewayId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VirtualGateway:\n          $ref: '#/components/schemas/VirtualGateway'\n      type: object\n    CreateVmsRequest:\n      additionalProperties: false\n      example:\n        SecurityGroups:\n        - SecurityGroups\n        - SecurityGroups\n        BootOnCreation: true\n        VmInitiatedShutdownBehavior: stop\n        UserData: UserData\n        BlockDeviceMappings:\n        - Bsu:\n            SnapshotId: SnapshotId\n            DeleteOnVmDeletion: true\n            VolumeType: VolumeType\n            Iops: 0\n            VolumeSize: 6\n          NoDevice: NoDevice\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        - Bsu:\n            SnapshotId: SnapshotId\n            DeleteOnVmDeletion: true\n            VolumeType: VolumeType\n            Iops: 0\n            VolumeSize: 6\n          NoDevice: NoDevice\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        DryRun: true\n        MaxVmsCount: 0\n        DeletionProtection: true\n        SubnetId: SubnetId\n        SecurityGroupIds:\n        - SecurityGroupIds\n        - SecurityGroupIds\n        KeypairName: KeypairName\n        Nics:\n        - SecondaryPrivateIpCount: 5\n          DeviceNumber: 1\n          DeleteOnVmDeletion: true\n          Description: Description\n          PrivateIps:\n          - PrivateIp: PrivateIp\n            IsPrimary: true\n          - PrivateIp: PrivateIp\n            IsPrimary: true\n          SubnetId: SubnetId\n          SecurityGroupIds:\n          - SecurityGroupIds\n          - SecurityGroupIds\n          NicId: NicId\n        - SecondaryPrivateIpCount: 5\n          DeviceNumber: 1\n          DeleteOnVmDeletion: true\n          Description: Description\n          PrivateIps:\n          - PrivateIp: PrivateIp\n            IsPrimary: true\n          - PrivateIp: PrivateIp\n            IsPrimary: true\n          SubnetId: SubnetId\n          SecurityGroupIds:\n          - SecurityGroupIds\n          - SecurityGroupIds\n          NicId: NicId\n        BsuOptimized: true\n        Placement:\n          Tenancy: Tenancy\n          SubregionName: SubregionName\n        PrivateIps:\n        - PrivateIps\n        - PrivateIps\n        ImageId: ImageId\n        VmType: VmType\n        MinVmsCount: 6\n        ClientToken: ClientToken\n        Performance: high\n      properties:\n        BlockDeviceMappings:\n          description: One or more block device mappings.\n          items:\n            $ref: '#/components/schemas/BlockDeviceMappingVmCreation'\n          type: array\n        BootOnCreation:\n          default: true\n          description: By default or if true, the VM is started on creation. If false,\n            the VM is stopped on creation.\n          type: boolean\n        BsuOptimized:\n          description: This parameter is not available. It is present in our API for\n            the sake of historical compatibility with AWS.\n          type: boolean\n        ClientToken:\n          description: A unique identifier which enables you to manage the idempotency.\n          type: string\n        DeletionProtection:\n          description: If true, you cannot delete the VM unless you change this parameter\n            back to false.\n          type: boolean\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ImageId:\n          description: The ID of the OMI used to create the VM. You can find the list\n            of OMIs by calling the [ReadImages](#readimages) method.\n          type: string\n        KeypairName:\n          description: The name of the keypair.\n          type: string\n        MaxVmsCount:\n          description: The maximum number of VMs you want to create. If all the VMs\n            cannot be created, the largest possible number of VMs above MinVmsCount\n            is created.\n          type: integer\n        MinVmsCount:\n          description: The minimum number of VMs you want to create. If this number\n            of VMs cannot be created, no VMs are created.\n          type: integer\n        Nics:\n          description: One or more NICs. If you specify this parameter, you must not\n            specify the `SubnetId` and `SubregionName` parameters. You also must define\n            one NIC as the primary network interface of the VM with `0` as its device\n            number.\n          items:\n            $ref: '#/components/schemas/NicForVmCreation'\n          type: array\n        Performance:\n          default: high\n          description: The performance of the VM (`medium` \\| `high` \\|  `highest`).\n          enum:\n          - medium\n          - high\n          - highest\n          type: string\n        Placement:\n          $ref: '#/components/schemas/Placement'\n        PrivateIps:\n          description: One or more private IPs of the VM.\n          items:\n            type: string\n          type: array\n        SecurityGroupIds:\n          description: One or more IDs of security group for the VMs.\n          items:\n            type: string\n          type: array\n        SecurityGroups:\n          description: One or more names of security groups for the VMs.\n          items:\n            type: string\n          type: array\n        SubnetId:\n          description: The ID of the Subnet in which you want to create the VM. If\n            you specify this parameter, you must not specify the `Nics` parameter.\n          type: string\n        UserData:\n          description: Data or script used to add a specific configuration to the\n            VM. It must be Base64-encoded and is limited to 500 kibibytes (KiB).\n          type: string\n        VmInitiatedShutdownBehavior:\n          default: stop\n          description: The VM behavior when you stop it. By default or if set to `stop`,\n            the VM stops. If set to `restart`, the VM stops then automatically restarts.\n            If set to `terminate`, the VM stops and is terminated.\n          type: string\n        VmType:\n          description: |-\n            The type of VM (`t2.small` by default).\u003cbr /\u003e\n            For more information, see [Instance Types](https://docs.outscale.com/en/userguide/Instance-Types.html).\n          type: string\n      required:\n      - ImageId\n      type: object\n    CreateVmsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Vms:\n        - CreationDate: CreationDate\n          SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          NetId: NetId\n          VmInitiatedShutdownBehavior: VmInitiatedShutdownBehavior\n          PrivateDnsName: PrivateDnsName\n          RootDeviceName: RootDeviceName\n          UserData: UserData\n          BlockDeviceMappings:\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          LaunchNumber: 0\n          SubnetId: SubnetId\n          BsuOptimized: true\n          IsSourceDestChecked: true\n          Placement:\n            Tenancy: Tenancy\n            SubregionName: SubregionName\n          PrivateIp: PrivateIp\n          ReservationId: ReservationId\n          ImageId: ImageId\n          VmType: VmType\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          Architecture: Architecture\n          Hypervisor: Hypervisor\n          PublicIp: PublicIp\n          DeletionProtection: true\n          PublicDnsName: PublicDnsName\n          KeypairName: KeypairName\n          Nics:\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          OsFamily: OsFamily\n          RootDeviceType: RootDeviceType\n          State: State\n          StateReason: StateReason\n          VmId: VmId\n          ClientToken: ClientToken\n          Performance: Performance\n        - CreationDate: CreationDate\n          SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          NetId: NetId\n          VmInitiatedShutdownBehavior: VmInitiatedShutdownBehavior\n          PrivateDnsName: PrivateDnsName\n          RootDeviceName: RootDeviceName\n          UserData: UserData\n          BlockDeviceMappings:\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          LaunchNumber: 0\n          SubnetId: SubnetId\n          BsuOptimized: true\n          IsSourceDestChecked: true\n          Placement:\n            Tenancy: Tenancy\n            SubregionName: SubregionName\n          PrivateIp: PrivateIp\n          ReservationId: ReservationId\n          ImageId: ImageId\n          VmType: VmType\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          Architecture: Architecture\n          Hypervisor: Hypervisor\n          PublicIp: PublicIp\n          DeletionProtection: true\n          PublicDnsName: PublicDnsName\n          KeypairName: KeypairName\n          Nics:\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          OsFamily: OsFamily\n          RootDeviceType: RootDeviceType\n          State: State\n          StateReason: StateReason\n          VmId: VmId\n          ClientToken: ClientToken\n          Performance: Performance\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Vms:\n          description: Information about one or more created VMs.\n          items:\n            $ref: '#/components/schemas/Vm'\n          type: array\n      type: object\n    CreateVolumeRequest:\n      additionalProperties: false\n      example:\n        SnapshotId: SnapshotId\n        VolumeType: VolumeType\n        Size: 6\n        DryRun: true\n        Iops: 0\n        SubregionName: SubregionName\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Iops:\n          description: The number of I/O operations per second (IOPS). This parameter\n            must be specified only if you create an `io1` volume. The maximum number\n            of IOPS allowed for `io1` volumes is `13000`.\n          type: integer\n        Size:\n          description: 'The size of the volume, in gibibytes (GiB). The maximum allowed\n            size for a volume is 14901 GiB. This parameter is required if the volume\n            is not created from a snapshot (`SnapshotId` unspecified). '\n          type: integer\n        SnapshotId:\n          description: The ID of the snapshot from which you want to create the volume.\n          type: string\n        SubregionName:\n          description: The Subregion in which you want to create the volume.\n          type: string\n        VolumeType:\n          description: |-\n            The type of volume you want to create (`io1` \\| `gp2` \\| `standard`). If not specified, a `standard` volume is created.\u003cbr /\u003e\n            For more information about volume types, see [About Volumes \u003e Volume Types and IOPS](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops).\n          type: string\n      required:\n      - SubregionName\n      type: object\n    CreateVolumeResponse:\n      additionalProperties: false\n      example:\n        Volume:\n          CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          VolumeId: VolumeId\n          VolumeType: VolumeType\n          Size: 6\n          State: State\n          LinkedVolumes:\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          Iops: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Volume:\n          $ref: '#/components/schemas/Volume'\n      type: object\n    CreateVpnConnectionRequest:\n      additionalProperties: false\n      example:\n        ConnectionType: ConnectionType\n        ClientGatewayId: ClientGatewayId\n        DryRun: true\n        StaticRoutesOnly: true\n        VirtualGatewayId: VirtualGatewayId\n      properties:\n        ClientGatewayId:\n          description: The ID of the client gateway.\n          type: string\n        ConnectionType:\n          description: The type of VPN connection (only `ipsec.1` is supported).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        StaticRoutesOnly:\n          description: If false, the VPN connection uses dynamic routing with Border\n            Gateway Protocol (BGP). If true, routing is controlled using static routes.\n            For more information about how to create and delete static routes, see\n            [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).\n          type: boolean\n        VirtualGatewayId:\n          description: The ID of the virtual gateway.\n          type: string\n      required:\n      - ClientGatewayId\n      - ConnectionType\n      - VirtualGatewayId\n      type: object\n    CreateVpnConnectionResponse:\n      additionalProperties: false\n      example:\n        VpnConnection:\n          ConnectionType: ConnectionType\n          ClientGatewayId: ClientGatewayId\n          State: State\n          VpnOptions:\n            Phase1Options:\n              DpdTimeoutSeconds: 6\n              StartupAction: StartupAction\n              Phase1IntegrityAlgorithms:\n              - Phase1IntegrityAlgorithms\n              - Phase1IntegrityAlgorithms\n              Phase1LifetimeSeconds: 5\n              Phase1EncryptionAlgorithms:\n              - Phase1EncryptionAlgorithms\n              - Phase1EncryptionAlgorithms\n              DpdTimeoutAction: DpdTimeoutAction\n              ReplayWindowSize: 5\n              IkeVersions:\n              - IkeVersions\n              - IkeVersions\n              Phase1DhGroupNumbers:\n              - 1\n              - 1\n            TunnelInsideIpRange: TunnelInsideIpRange\n            Phase2Options:\n              Phase2EncryptionAlgorithms:\n              - Phase2EncryptionAlgorithms\n              - Phase2EncryptionAlgorithms\n              Phase2DhGroupNumbers:\n              - 2\n              - 2\n              Phase2LifetimeSeconds: 7\n              Phase2IntegrityAlgorithms:\n              - Phase2IntegrityAlgorithms\n              - Phase2IntegrityAlgorithms\n              PreSharedKey: PreSharedKey\n          ClientGatewayConfiguration: ClientGatewayConfiguration\n          Routes:\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          StaticRoutesOnly: true\n          VpnConnectionId: VpnConnectionId\n          VirtualGatewayId: VirtualGatewayId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          VgwTelemetries:\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VpnConnection:\n          $ref: '#/components/schemas/VpnConnection'\n      type: object\n    CreateVpnConnectionRouteRequest:\n      additionalProperties: false\n      example:\n        DestinationIpRange: DestinationIpRange\n        DryRun: true\n        VpnConnectionId: VpnConnectionId\n      properties:\n        DestinationIpRange:\n          description: The network prefix of the route, in CIDR notation (for example,\n            `10.12.0.0/16`).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VpnConnectionId:\n          description: The ID of the target VPN connection of the static route.\n          type: string\n      required:\n      - DestinationIpRange\n      - VpnConnectionId\n      type: object\n    CreateVpnConnectionRouteResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteAccessKeyRequest:\n      additionalProperties: false\n      example:\n        AccessKeyId: AccessKeyId\n        DryRun: true\n      properties:\n        AccessKeyId:\n          description: The ID of the access key you want to delete.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - AccessKeyId\n      type: object\n    DeleteAccessKeyResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteApiAccessRuleRequest:\n      additionalProperties: false\n      example:\n        ApiAccessRuleId: ApiAccessRuleId\n        DryRun: true\n      properties:\n        ApiAccessRuleId:\n          description: The ID of the API access rule you want to delete.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - ApiAccessRuleId\n      type: object\n    DeleteApiAccessRuleResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteCaRequest:\n      additionalProperties: false\n      example:\n        CaId: CaId\n        DryRun: true\n      properties:\n        CaId:\n          description: The ID of the CA you want to delete.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - CaId\n      type: object\n    DeleteCaResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteClientGatewayRequest:\n      additionalProperties: false\n      example:\n        ClientGatewayId: ClientGatewayId\n        DryRun: true\n      properties:\n        ClientGatewayId:\n          description: The ID of the client gateway you want to delete.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - ClientGatewayId\n      type: object\n    DeleteClientGatewayResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteDhcpOptionsRequest:\n      additionalProperties: false\n      example:\n        DhcpOptionsSetId: DhcpOptionsSetId\n        DryRun: true\n      properties:\n        DhcpOptionsSetId:\n          description: The ID of the DHCP options set you want to delete.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - DhcpOptionsSetId\n      type: object\n    DeleteDhcpOptionsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteDirectLinkInterfaceRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        DirectLinkInterfaceId: DirectLinkInterfaceId\n      properties:\n        DirectLinkInterfaceId:\n          description: The ID of the DirectLink interface you want to delete.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - DirectLinkInterfaceId\n      type: object\n    DeleteDirectLinkInterfaceResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteDirectLinkRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        DirectLinkId: DirectLinkId\n      properties:\n        DirectLinkId:\n          description: The ID of the DirectLink you want to delete.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - DirectLinkId\n      type: object\n    DeleteDirectLinkResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteExportTaskRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        ExportTaskId: ExportTaskId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ExportTaskId:\n          description: The ID of the export task to delete.\n          type: string\n      required:\n      - ExportTaskId\n      type: object\n    DeleteExportTaskResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteFlexibleGpuRequest:\n      additionalProperties: false\n      example:\n        FlexibleGpuId: FlexibleGpuId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        FlexibleGpuId:\n          description: The ID of the fGPU you want to delete.\n          type: string\n      required:\n      - FlexibleGpuId\n      type: object\n    DeleteFlexibleGpuResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteImageRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        ImageId: ImageId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ImageId:\n          description: The ID of the OMI you want to delete.\n          type: string\n      required:\n      - ImageId\n      type: object\n    DeleteImageResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteInternetServiceRequest:\n      additionalProperties: false\n      example:\n        InternetServiceId: InternetServiceId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        InternetServiceId:\n          description: The ID of the Internet service you want to delete.\n          type: string\n      required:\n      - InternetServiceId\n      type: object\n    DeleteInternetServiceResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteKeypairRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        KeypairName: KeypairName\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        KeypairName:\n          description: The name of the keypair you want to delete.\n          type: string\n      required:\n      - KeypairName\n      type: object\n    DeleteKeypairResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteListenerRuleRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        ListenerRuleName: ListenerRuleName\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ListenerRuleName:\n          description: The name of the rule you want to delete.\n          type: string\n      required:\n      - ListenerRuleName\n      type: object\n    DeleteListenerRuleResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteLoadBalancerListenersRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerName: LoadBalancerName\n        DryRun: true\n        LoadBalancerPorts:\n        - 0\n        - 0\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerName:\n          description: The name of the load balancer for which you want to delete\n            listeners.\n          type: string\n        LoadBalancerPorts:\n          description: One or more port numbers of the listeners you want to delete.\n          items:\n            type: integer\n          type: array\n      required:\n      - LoadBalancerName\n      - LoadBalancerPorts\n      type: object\n    DeleteLoadBalancerListenersResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LoadBalancer:\n          AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        LoadBalancer:\n          $ref: '#/components/schemas/LoadBalancer'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteLoadBalancerPolicyRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerName: LoadBalancerName\n        PolicyName: PolicyName\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerName:\n          description: The name of the load balancer for which you want to delete\n            a policy.\n          type: string\n        PolicyName:\n          description: The name of the policy you want to delete.\n          type: string\n      required:\n      - LoadBalancerName\n      - PolicyName\n      type: object\n    DeleteLoadBalancerPolicyResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LoadBalancer:\n          AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        LoadBalancer:\n          $ref: '#/components/schemas/LoadBalancer'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteLoadBalancerRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerName: LoadBalancerName\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerName:\n          description: The name of the load balancer you want to delete.\n          type: string\n      required:\n      - LoadBalancerName\n      type: object\n    DeleteLoadBalancerResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteLoadBalancerTagsRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerNames:\n        - LoadBalancerNames\n        - LoadBalancerNames\n        DryRun: true\n        Tags:\n        - Key: Key\n        - Key: Key\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerNames:\n          description: One or more load balancer names.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: One or more tags to delete from the load balancers.\n          items:\n            $ref: '#/components/schemas/ResourceLoadBalancerTag'\n          type: array\n      required:\n      - LoadBalancerNames\n      - Tags\n      type: object\n    DeleteLoadBalancerTagsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteNatServiceRequest:\n      additionalProperties: false\n      example:\n        NatServiceId: NatServiceId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NatServiceId:\n          description: The ID of the NAT service you want to delete.\n          type: string\n      required:\n      - NatServiceId\n      type: object\n    DeleteNatServiceResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteNetAccessPointRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        NetAccessPointId: NetAccessPointId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetAccessPointId:\n          description: The ID of the Net access point.\n          type: string\n      required:\n      - NetAccessPointId\n      type: object\n    DeleteNetAccessPointResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteNetPeeringRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        NetPeeringId: NetPeeringId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetPeeringId:\n          description: The ID of the Net peering connection you want to delete.\n          type: string\n      required:\n      - NetPeeringId\n      type: object\n    DeleteNetPeeringResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteNetRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetId:\n          description: The ID of the Net you want to delete.\n          type: string\n      required:\n      - NetId\n      type: object\n    DeleteNetResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteNicRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        NicId: NicId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NicId:\n          description: The ID of the NIC you want to delete.\n          type: string\n      required:\n      - NicId\n      type: object\n    DeleteNicResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeletePublicIpRequest:\n      additionalProperties: false\n      example:\n        PublicIp: PublicIp\n        DryRun: true\n        PublicIpId: PublicIpId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        PublicIp:\n          description: The public IP. In the public Cloud, this parameter is required.\n          type: string\n        PublicIpId:\n          description: The ID representing the association of the public IP with the\n            VM or the NIC. In a Net, this parameter is required.\n          type: string\n      type: object\n    DeletePublicIpResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteRouteRequest:\n      additionalProperties: false\n      example:\n        RouteTableId: RouteTableId\n        DestinationIpRange: DestinationIpRange\n        DryRun: true\n      properties:\n        DestinationIpRange:\n          description: The exact IP range for the route.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        RouteTableId:\n          description: The ID of the route table from which you want to delete a route.\n          type: string\n      required:\n      - DestinationIpRange\n      - RouteTableId\n      type: object\n    DeleteRouteResponse:\n      additionalProperties: false\n      example:\n        RouteTable:\n          NetId: NetId\n          RouteTableId: RouteTableId\n          RoutePropagatingVirtualGateways:\n          - VirtualGatewayId: VirtualGatewayId\n          - VirtualGatewayId: VirtualGatewayId\n          LinkRouteTables:\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          Routes:\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        RouteTable:\n          $ref: '#/components/schemas/RouteTable'\n      type: object\n    DeleteRouteTableRequest:\n      additionalProperties: false\n      example:\n        RouteTableId: RouteTableId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        RouteTableId:\n          description: The ID of the route table you want to delete.\n          type: string\n      required:\n      - RouteTableId\n      type: object\n    DeleteRouteTableResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteSecurityGroupRequest:\n      additionalProperties: false\n      example:\n        SecurityGroupName: SecurityGroupName\n        SecurityGroupId: SecurityGroupId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        SecurityGroupId:\n          description: The ID of the security group you want to delete.\n          type: string\n        SecurityGroupName:\n          description: The name of the security group.\n          type: string\n      type: object\n    DeleteSecurityGroupResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteSecurityGroupRuleRequest:\n      additionalProperties: false\n      example:\n        IpRange: IpRange\n        ToPortRange: 6\n        SecurityGroupNameToUnlink: SecurityGroupNameToUnlink\n        SecurityGroupId: SecurityGroupId\n        DryRun: true\n        IpProtocol: IpProtocol\n        Rules:\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        Flow: Flow\n        FromPortRange: 0\n        SecurityGroupAccountIdToUnlink: SecurityGroupAccountIdToUnlink\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Flow:\n          description: 'The direction of the flow: `Inbound` or `Outbound`. You can\n            specify `Outbound` for Nets only.'\n          type: string\n        FromPortRange:\n          description: The beginning of the port range for the TCP and UDP protocols,\n            or an ICMP type number.\n          type: integer\n        IpProtocol:\n          description: The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all\n            protocols). By default, `-1`. In a Net, this can also be an IP protocol\n            number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).\n          type: string\n        IpRange:\n          description: The IP range for the security group rule, in CIDR notation\n            (for example, `10.0.0.0/16`).\n          type: string\n        Rules:\n          description: One or more rules you want to delete from the security group.\n          items:\n            $ref: '#/components/schemas/SecurityGroupRule'\n          type: array\n        SecurityGroupAccountIdToUnlink:\n          description: The account ID of the owner of the security group you want\n            to delete a rule from.\n          type: string\n        SecurityGroupId:\n          description: The ID of the security group you want to delete a rule from.\n          type: string\n        SecurityGroupNameToUnlink:\n          description: The ID of the source security group. If you are in the Public\n            Cloud, you can also specify the name of the source security group.\n          type: string\n        ToPortRange:\n          description: The end of the port range for the TCP and UDP protocols, or\n            an ICMP code number.\n          type: integer\n      required:\n      - Flow\n      - SecurityGroupId\n      type: object\n    DeleteSecurityGroupRuleResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        SecurityGroup:\n          InboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n          OutboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        SecurityGroup:\n          $ref: '#/components/schemas/SecurityGroup'\n      type: object\n    DeleteServerCertificateRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        Name: Name\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Name:\n          description: The name of the server certificate you want to delete.\n          type: string\n      required:\n      - Name\n      type: object\n    DeleteServerCertificateResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteSnapshotRequest:\n      additionalProperties: false\n      example:\n        SnapshotId: SnapshotId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        SnapshotId:\n          description: The ID of the snapshot you want to delete.\n          type: string\n      required:\n      - SnapshotId\n      type: object\n    DeleteSnapshotResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteSubnetRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        SubnetId: SubnetId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        SubnetId:\n          description: The ID of the Subnet you want to delete.\n          type: string\n      required:\n      - SubnetId\n      type: object\n    DeleteSubnetResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteTagsRequest:\n      additionalProperties: false\n      example:\n        ResourceIds:\n        - ResourceIds\n        - ResourceIds\n        DryRun: true\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ResourceIds:\n          description: One or more resource IDs.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: One or more tags to delete (if you set a tag value, only the\n            tags matching exactly this value are deleted).\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      required:\n      - ResourceIds\n      - Tags\n      type: object\n    DeleteTagsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteVirtualGatewayRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        VirtualGatewayId: VirtualGatewayId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VirtualGatewayId:\n          description: The ID of the virtual gateway you want to delete.\n          type: string\n      required:\n      - VirtualGatewayId\n      type: object\n    DeleteVirtualGatewayResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteVmsRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VmIds:\n          description: One or more IDs of VMs.\n          items:\n            type: string\n          type: array\n      required:\n      - VmIds\n      type: object\n    DeleteVmsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Vms:\n        - CurrentState: CurrentState\n          VmId: VmId\n          PreviousState: PreviousState\n        - CurrentState: CurrentState\n          VmId: VmId\n          PreviousState: PreviousState\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Vms:\n          description: Information about one or more terminated VMs.\n          items:\n            $ref: '#/components/schemas/VmState'\n          type: array\n      type: object\n    DeleteVolumeRequest:\n      additionalProperties: false\n      example:\n        VolumeId: VolumeId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VolumeId:\n          description: The ID of the volume you want to delete.\n          type: string\n      required:\n      - VolumeId\n      type: object\n    DeleteVolumeResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteVpnConnectionRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        VpnConnectionId: VpnConnectionId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VpnConnectionId:\n          description: The ID of the VPN connection you want to delete.\n          type: string\n      required:\n      - VpnConnectionId\n      type: object\n    DeleteVpnConnectionResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeleteVpnConnectionRouteRequest:\n      additionalProperties: false\n      example:\n        DestinationIpRange: DestinationIpRange\n        DryRun: true\n        VpnConnectionId: VpnConnectionId\n      properties:\n        DestinationIpRange:\n          description: The network prefix of the route to delete, in CIDR notation\n            (for example, `10.12.0.0/16`).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VpnConnectionId:\n          description: The ID of the target VPN connection of the static route to\n            delete.\n          type: string\n      required:\n      - DestinationIpRange\n      - VpnConnectionId\n      type: object\n    DeleteVpnConnectionRouteResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DeregisterVmsInLoadBalancerRequest:\n      additionalProperties: false\n      example:\n        BackendVmIds:\n        - BackendVmIds\n        - BackendVmIds\n        LoadBalancerName: LoadBalancerName\n        DryRun: true\n      properties:\n        BackendVmIds:\n          description: One or more IDs of back-end VMs.\n          items:\n            type: string\n          type: array\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerName:\n          description: The name of the load balancer.\n          type: string\n      required:\n      - BackendVmIds\n      - LoadBalancerName\n      type: object\n    DeregisterVmsInLoadBalancerResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    DhcpOptionsSet:\n      additionalProperties: false\n      description: Information about the DHCP options set.\n      example:\n        DhcpOptionsSetId: DhcpOptionsSetId\n        LogServers:\n        - LogServers\n        - LogServers\n        NtpServers:\n        - NtpServers\n        - NtpServers\n        DomainName: DomainName\n        Default: true\n        DomainNameServers:\n        - DomainNameServers\n        - DomainNameServers\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        Default:\n          description: If true, the DHCP options set is a default one. If false, it\n            is not.\n          type: boolean\n        DhcpOptionsSetId:\n          description: The ID of the DHCP options set.\n          type: string\n        DomainName:\n          description: The domain name.\n          type: string\n        DomainNameServers:\n          description: One or more IPs for the domain name servers.\n          items:\n            type: string\n          type: array\n        LogServers:\n          description: One or more IPs for the log servers.\n          items:\n            type: string\n          type: array\n        NtpServers:\n          description: One or more IPs for the NTP servers.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: One or more tags associated with the DHCP options set.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    DirectLink:\n      additionalProperties: false\n      description: Information about the DirectLink.\n      example:\n        AccountId: AccountId\n        DirectLinkName: DirectLinkName\n        RegionName: RegionName\n        State: State\n        Bandwidth: Bandwidth\n        DirectLinkId: DirectLinkId\n        Location: Location\n      properties:\n        AccountId:\n          description: The account ID of the owner of the DirectLink.\n          type: string\n        Bandwidth:\n          description: The physical link bandwidth (either 1 Gbps or 10 Gbps).\n          type: string\n        DirectLinkId:\n          description: The ID of the DirectLink (for example, `dxcon-xxxxxxxx`).\n          type: string\n        DirectLinkName:\n          description: The name of the DirectLink.\n          type: string\n        Location:\n          description: The datacenter where the DirectLink is located.\n          type: string\n        RegionName:\n          description: The Region in which the DirectLink has been created.\n          type: string\n        State:\n          description: |-\n            The state of the DirectLink.\u003cbr /\u003e\n            * `requested`: The DirectLink is requested but the request has not been validated yet.\u003cbr /\u003e\n            * `pending`: The DirectLink request has been validated. It remains in the `pending` state until you establish the physical link.\u003cbr /\u003e\n            * `available`: The physical link is established and the connection is ready to use.\u003cbr /\u003e\n            * `deleting`: The deletion process is in progress.\u003cbr /\u003e\n            * `deleted`: The DirectLink is deleted.\n          type: string\n      type: object\n    DirectLinkInterface:\n      additionalProperties: false\n      description: Information about the DirectLink interface.\n      example:\n        ClientPrivateIp: ClientPrivateIp\n        DirectLinkInterfaceName: DirectLinkInterfaceName\n        BgpKey: BgpKey\n        Vlan: 6\n        OutscalePrivateIp: OutscalePrivateIp\n        VirtualGatewayId: VirtualGatewayId\n        BgpAsn: 0\n      properties:\n        BgpAsn:\n          description: The BGP (Border Gateway Protocol) ASN (Autonomous System Number)\n            on the customer's side of the DirectLink interface.\n          type: integer\n        BgpKey:\n          description: The BGP authentication key.\n          type: string\n        ClientPrivateIp:\n          description: The IP on the customer's side of the DirectLink interface.\n          type: string\n        DirectLinkInterfaceName:\n          description: The name of the DirectLink interface.\n          type: string\n        OutscalePrivateIp:\n          description: The IP on the OUTSCALE side of the DirectLink interface.\n          type: string\n        VirtualGatewayId:\n          description: The ID of the target virtual gateway.\n          type: string\n        Vlan:\n          description: The VLAN number associated with the DirectLink interface.\n          type: integer\n      required:\n      - BgpAsn\n      - DirectLinkInterfaceName\n      - VirtualGatewayId\n      - Vlan\n      type: object\n    DirectLinkInterfaces:\n      additionalProperties: false\n      description: Information about the DirectLink interfaces.\n      example:\n        ClientPrivateIp: ClientPrivateIp\n        AccountId: AccountId\n        BgpKey: BgpKey\n        DirectLinkInterfaceId: DirectLinkInterfaceId\n        Vlan: 1\n        BgpAsn: 0\n        Mtu: 6\n        InterfaceType: InterfaceType\n        State: State\n        DirectLinkInterfaceName: DirectLinkInterfaceName\n        DirectLinkId: DirectLinkId\n        OutscalePrivateIp: OutscalePrivateIp\n        VirtualGatewayId: VirtualGatewayId\n        Location: Location\n      properties:\n        AccountId:\n          description: The account ID of the owner of the DirectLink interface.\n          type: string\n        BgpAsn:\n          description: The BGP (Border Gateway Protocol) ASN (Autonomous System Number)\n            on the customer's side of the DirectLink interface.\n          type: integer\n        BgpKey:\n          description: The BGP authentication key.\n          type: string\n        ClientPrivateIp:\n          description: The IP on the customer's side of the DirectLink interface.\n          type: string\n        DirectLinkId:\n          description: The ID of the DirectLink.\n          type: string\n        DirectLinkInterfaceId:\n          description: The ID of the DirectLink interface.\n          type: string\n        DirectLinkInterfaceName:\n          description: The name of the DirectLink interface.\n          type: string\n        InterfaceType:\n          description: The type of the DirectLink interface (always `private`).\n          type: string\n        Location:\n          description: The datacenter where the DirectLink interface is located.\n          type: string\n        Mtu:\n          description: The maximum transmission unit (MTU) of the DirectLink interface,\n            in bytes (by default, `1500`).\n          type: integer\n        OutscalePrivateIp:\n          description: The IP on the OUTSCALE side of the DirectLink interface.\n          type: string\n        State:\n          description: The state of the DirectLink interface (`pending` \\| `available`\n            \\| `deleting` \\| `deleted` \\| `confirming` \\| `rejected` \\| `expired`).\n          type: string\n        VirtualGatewayId:\n          description: The ID of the target virtual gateway.\n          type: string\n        Vlan:\n          description: The VLAN number associated with the DirectLink interface.\n          type: integer\n      type: object\n    ErrorResponse:\n      additionalProperties: false\n      properties:\n        Errors:\n          description: One or more errors.\n          items:\n            $ref: '#/components/schemas/Errors'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    Errors:\n      additionalProperties: false\n      description: Information about the errors.\n      properties:\n        Code:\n          description: The code of the error.\n          type: string\n        Details:\n          description: The details of the error.\n          type: string\n        Type:\n          description: The type of the error.\n          type: string\n      type: object\n    FiltersAccessKeys:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        AccessKeyIds:\n        - AccessKeyIds\n        - AccessKeyIds\n      properties:\n        AccessKeyIds:\n          description: The IDs of the access keys.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the access keys (`ACTIVE` \\| `INACTIVE`).\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersApiAccessRule:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        Descriptions:\n        - Descriptions\n        - Descriptions\n        ApiAccessRuleIds:\n        - ApiAccessRuleIds\n        - ApiAccessRuleIds\n        CaIds:\n        - CaIds\n        - CaIds\n        Cns:\n        - Cns\n        - Cns\n        IpRanges:\n        - IpRanges\n        - IpRanges\n      properties:\n        ApiAccessRuleIds:\n          description: One or more IDs of API access rules.\n          items:\n            type: string\n          type: array\n        CaIds:\n          description: One or more IDs of Client Certificate Authorities (CAs).\n          items:\n            type: string\n          type: array\n        Cns:\n          description: One or more Client Certificate Common Names (CNs).\n          items:\n            type: string\n          type: array\n        Descriptions:\n          description: One or more descriptions of API access rules.\n          items:\n            type: string\n          type: array\n        IpRanges:\n          description: One or more IP ranges, in CIDR notation (for example, `192.0.2.0/16`).\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersApiLog:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        QueryCallNames:\n        - QueryCallNames\n        - QueryCallNames\n        QueryUserAgents:\n        - QueryUserAgents\n        - QueryUserAgents\n        ResponseStatusCodes:\n        - 0\n        - 0\n        QueryDateAfter: 2000-01-23\n        QueryDateBefore: 2000-01-23\n        QueryIpAddresses:\n        - QueryIpAddresses\n        - QueryIpAddresses\n        QueryAccessKeys:\n        - QueryAccessKeys\n        - QueryAccessKeys\n        RequestIds:\n        - RequestIds\n        - RequestIds\n        QueryApiNames:\n        - QueryApiNames\n        - QueryApiNames\n      properties:\n        QueryAccessKeys:\n          description: The access keys used for the logged calls.\n          items:\n            type: string\n          type: array\n        QueryApiNames:\n          description: The names of the APIs of the logged calls (always `oapi` for\n            the OUTSCALE API).\n          items:\n            type: string\n          type: array\n        QueryCallNames:\n          description: The names of the logged calls.\n          items:\n            type: string\n          type: array\n        QueryDateAfter:\n          description: The date after which you want to retrieve logged calls, in\n            ISO 8601 format (for example, `2020-06-14`). By default, this date is\n            set to 48 hours before the `QueryDateBefore` parameter value.\n          format: date\n          type: string\n        QueryDateBefore:\n          description: The date before which you want to retrieve logged calls, in\n            ISO 8601 format (for example, `2020-06-30`). By default, this date is\n            set to now, or 48 hours after the `QueryDateAfter` parameter value.\n          format: date\n          type: string\n        QueryIpAddresses:\n          description: The IPs used for the logged calls.\n          items:\n            type: string\n          type: array\n        QueryUserAgents:\n          description: The user agents of the HTTP requests of the logged calls.\n          items:\n            type: string\n          type: array\n        RequestIds:\n          description: The request IDs provided in the responses of the logged calls.\n          items:\n            type: string\n          type: array\n        ResponseStatusCodes:\n          description: The HTTP status codes of the logged calls.\n          items:\n            type: integer\n          type: array\n      type: object\n    FiltersCa:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        CaFingerprints:\n        - CaFingerprints\n        - CaFingerprints\n        Descriptions:\n        - Descriptions\n        - Descriptions\n        CaIds:\n        - CaIds\n        - CaIds\n      properties:\n        CaFingerprints:\n          description: The fingerprints of the CAs.\n          items:\n            type: string\n          type: array\n        CaIds:\n          description: The IDs of the CAs.\n          items:\n            type: string\n          type: array\n        Descriptions:\n          description: The descriptions of the CAs.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersClientGateway:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        ConnectionTypes:\n        - ConnectionTypes\n        - ConnectionTypes\n        PublicIps:\n        - PublicIps\n        - PublicIps\n        ClientGatewayIds:\n        - ClientGatewayIds\n        - ClientGatewayIds\n        BgpAsns:\n        - 0\n        - 0\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n      properties:\n        BgpAsns:\n          description: The Border Gateway Protocol (BGP) Autonomous System Numbers\n            (ASNs) of the connections.\n          items:\n            type: integer\n          type: array\n        ClientGatewayIds:\n          description: The IDs of the client gateways.\n          items:\n            type: string\n          type: array\n        ConnectionTypes:\n          description: The types of communication tunnels used by the client gateways\n            (only `ipsec.1` is supported).\n          items:\n            type: string\n          type: array\n        PublicIps:\n          description: The public IPv4 addresses of the client gateways.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the client gateways (`pending` \\| `available`\n            \\| `deleting` \\| `deleted`).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the client gateways.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the client gateways.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            client gateways, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersDhcpOptions:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        LogServers:\n        - LogServers\n        - LogServers\n        NtpServers:\n        - NtpServers\n        - NtpServers\n        Default: true\n        DomainNames:\n        - DomainNames\n        - DomainNames\n        DomainNameServers:\n        - DomainNameServers\n        - DomainNameServers\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n        DhcpOptionsSetIds:\n        - DhcpOptionsSetIds\n        - DhcpOptionsSetIds\n      properties:\n        Default:\n          description: If true, lists all default DHCP options set. If false, lists\n            all non-default DHCP options set.\n          type: boolean\n        DhcpOptionsSetIds:\n          description: The IDs of the DHCP options sets.\n          items:\n            type: string\n          type: array\n        DomainNameServers:\n          description: The IPs of the domain name servers used for the DHCP options\n            sets.\n          items:\n            type: string\n          type: array\n        DomainNames:\n          description: The domain names used for the DHCP options sets.\n          items:\n            type: string\n          type: array\n        LogServers:\n          description: The IPs of the log servers used for the DHCP options sets.\n          items:\n            type: string\n          type: array\n        NtpServers:\n          description: The IPs of the Network Time Protocol (NTP) servers used for\n            the DHCP options sets.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the DHCP options sets.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the DHCP options sets.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            DHCP options sets, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersDirectLink:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        DirectLinkIds:\n        - DirectLinkIds\n        - DirectLinkIds\n      properties:\n        DirectLinkIds:\n          description: The IDs of the DirectLinks.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersDirectLinkInterface:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        DirectLinkIds:\n        - DirectLinkIds\n        - DirectLinkIds\n        DirectLinkInterfaceIds:\n        - DirectLinkInterfaceIds\n        - DirectLinkInterfaceIds\n      properties:\n        DirectLinkIds:\n          description: The IDs of the DirectLinks.\n          items:\n            type: string\n          type: array\n        DirectLinkInterfaceIds:\n          description: The IDs of the DirectLink interfaces.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersExportTask:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        TaskIds:\n        - TaskIds\n        - TaskIds\n      properties:\n        TaskIds:\n          description: The IDs of the export tasks.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersFlexibleGpu:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        DeleteOnVmDeletion: true\n        FlexibleGpuIds:\n        - FlexibleGpuIds\n        - FlexibleGpuIds\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n        Generations:\n        - Generations\n        - Generations\n        ModelNames:\n        - ModelNames\n        - ModelNames\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        DeleteOnVmDeletion:\n          description: Indicates whether the fGPU is deleted when terminating the\n            VM.\n          type: boolean\n        FlexibleGpuIds:\n          description: One or more IDs of fGPUs.\n          items:\n            type: string\n          type: array\n        Generations:\n          description: The processor generations that the fGPUs are compatible with.\n          items:\n            type: string\n          type: array\n        ModelNames:\n          description: One or more models of fGPUs. For more information, see [About\n            Flexible GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the fGPUs (`allocated` \\| `attaching` \\| `attached`\n            \\| `detaching`).\n          items:\n            type: string\n          type: array\n        SubregionNames:\n          description: The Subregions where the fGPUs are located.\n          items:\n            type: string\n          type: array\n        VmIds:\n          description: One or more IDs of VMs.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersImage:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        ImageIds:\n        - ImageIds\n        - ImageIds\n        ProductCodes:\n        - ProductCodes\n        - ProductCodes\n        AccountIds:\n        - AccountIds\n        - AccountIds\n        PermissionsToLaunchGlobalPermission: true\n        RootDeviceNames:\n        - RootDeviceNames\n        - RootDeviceNames\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        States:\n        - States\n        - States\n        BlockDeviceMappingDeleteOnVmDeletion: true\n        Descriptions:\n        - Descriptions\n        - Descriptions\n        Hypervisors:\n        - Hypervisors\n        - Hypervisors\n        VirtualizationTypes:\n        - VirtualizationTypes\n        - VirtualizationTypes\n        BlockDeviceMappingSnapshotIds:\n        - BlockDeviceMappingSnapshotIds\n        - BlockDeviceMappingSnapshotIds\n        BlockDeviceMappingVolumeSizes:\n        - 0\n        - 0\n        ImageNames:\n        - ImageNames\n        - ImageNames\n        BlockDeviceMappingVolumeTypes:\n        - BlockDeviceMappingVolumeTypes\n        - BlockDeviceMappingVolumeTypes\n        PermissionsToLaunchAccountIds:\n        - PermissionsToLaunchAccountIds\n        - PermissionsToLaunchAccountIds\n        RootDeviceTypes:\n        - RootDeviceTypes\n        - RootDeviceTypes\n        BlockDeviceMappingDeviceNames:\n        - BlockDeviceMappingDeviceNames\n        - BlockDeviceMappingDeviceNames\n        FileLocations:\n        - FileLocations\n        - FileLocations\n        Tags:\n        - Tags\n        - Tags\n        AccountAliases:\n        - AccountAliases\n        - AccountAliases\n        Architectures:\n        - Architectures\n        - Architectures\n      properties:\n        AccountAliases:\n          description: The account aliases of the owners of the OMIs.\n          items:\n            type: string\n          type: array\n        AccountIds:\n          description: The account IDs of the owners of the OMIs. By default, all\n            the OMIs for which you have launch permissions are described.\n          items:\n            type: string\n          type: array\n        Architectures:\n          description: The architectures of the OMIs (`i386` \\| `x86_64`).\n          items:\n            type: string\n          type: array\n        BlockDeviceMappingDeleteOnVmDeletion:\n          description: Whether the volumes are deleted or not when terminating the\n            VM.\n          type: boolean\n        BlockDeviceMappingDeviceNames:\n          description: The device names for the volumes.\n          items:\n            type: string\n          type: array\n        BlockDeviceMappingSnapshotIds:\n          description: The IDs of the snapshots used to create the volumes.\n          items:\n            type: string\n          type: array\n        BlockDeviceMappingVolumeSizes:\n          description: The sizes of the volumes, in gibibytes (GiB).\n          items:\n            type: integer\n          type: array\n        BlockDeviceMappingVolumeTypes:\n          description: The types of volumes (`standard` \\| `gp2` \\| `io1`).\n          items:\n            type: string\n          type: array\n        Descriptions:\n          description: The descriptions of the OMIs, provided when they were created.\n          items:\n            type: string\n          type: array\n        FileLocations:\n          description: The locations of the buckets where the OMI files are stored.\n          items:\n            type: string\n          type: array\n        Hypervisors:\n          description: The hypervisor type of the OMI (always `xen`).\n          items:\n            type: string\n          type: array\n        ImageIds:\n          description: The IDs of the OMIs.\n          items:\n            type: string\n          type: array\n        ImageNames:\n          description: The names of the OMIs, provided when they were created.\n          items:\n            type: string\n          type: array\n        PermissionsToLaunchAccountIds:\n          description: The account IDs of the users who have launch permissions for\n            the OMIs.\n          items:\n            type: string\n          type: array\n        PermissionsToLaunchGlobalPermission:\n          description: If true, lists all public OMIs. If false, lists all private\n            OMIs.\n          type: boolean\n        ProductCodes:\n          description: The product code associated with the OMI (`0001` Linux/Unix\n            \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).\n          items:\n            type: string\n          type: array\n        RootDeviceNames:\n          description: The name of the root device. This value must be /dev/sda1.\n          items:\n            type: string\n          type: array\n        RootDeviceTypes:\n          description: The types of root device used by the OMIs (always `bsu`).\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the OMIs (`pending` \\| `available` \\| `failed`).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the OMIs.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the OMIs.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            OMIs, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n        VirtualizationTypes:\n          description: The virtualization types (always `hvm`).\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersInternetService:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        LinkStates:\n        - LinkStates\n        - LinkStates\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n        InternetServiceIds:\n        - InternetServiceIds\n        - InternetServiceIds\n        LinkNetIds:\n        - LinkNetIds\n        - LinkNetIds\n      properties:\n        InternetServiceIds:\n          description: The IDs of the Internet services.\n          items:\n            type: string\n          type: array\n        LinkNetIds:\n          description: The IDs of the Nets the Internet services are attached to.\n          items:\n            type: string\n          type: array\n        LinkStates:\n          description: The current states of the attachments between the Internet\n            services and the Nets (only `available`, if the Internet gateway is attached\n            to a VPC).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the Internet services.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the Internet services.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            Internet services, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersKeypair:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        KeypairNames:\n        - KeypairNames\n        - KeypairNames\n        KeypairFingerprints:\n        - KeypairFingerprints\n        - KeypairFingerprints\n      properties:\n        KeypairFingerprints:\n          description: The fingerprints of the keypairs.\n          items:\n            type: string\n          type: array\n        KeypairNames:\n          description: The names of the keypairs.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersListenerRule:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        ListenerRuleNames:\n        - ListenerRuleNames\n        - ListenerRuleNames\n      properties:\n        ListenerRuleNames:\n          description: The names of the listener rules.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersLoadBalancer:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        LoadBalancerNames:\n        - LoadBalancerNames\n        - LoadBalancerNames\n      properties:\n        LoadBalancerNames:\n          description: The names of the load balancers.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersNatService:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        NatServiceIds:\n        - NatServiceIds\n        - NatServiceIds\n        NetIds:\n        - NetIds\n        - NetIds\n        SubnetIds:\n        - SubnetIds\n        - SubnetIds\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n      properties:\n        NatServiceIds:\n          description: The IDs of the NAT services.\n          items:\n            type: string\n          type: array\n        NetIds:\n          description: The IDs of the Nets in which the NAT services are.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the NAT services (`pending` \\| `available` \\|\n            `deleting` \\| `deleted`).\n          items:\n            type: string\n          type: array\n        SubnetIds:\n          description: The IDs of the Subnets in which the NAT services are.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the NAT services.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the NAT services.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            NAT services, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersNet:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        IsDefault: true\n        States:\n        - States\n        - States\n        NetIds:\n        - NetIds\n        - NetIds\n        IpRanges:\n        - IpRanges\n        - IpRanges\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n        DhcpOptionsSetIds:\n        - DhcpOptionsSetIds\n        - DhcpOptionsSetIds\n      properties:\n        DhcpOptionsSetIds:\n          description: The IDs of the DHCP options sets.\n          items:\n            type: string\n          type: array\n        IpRanges:\n          description: The IP ranges for the Nets, in CIDR notation (for example,\n            `10.0.0.0/16`).\n          items:\n            type: string\n          type: array\n        IsDefault:\n          description: If true, the Net used is the default one.\n          type: boolean\n        NetIds:\n          description: The IDs of the Nets.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the Nets (`pending` \\| `available`).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the Nets.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the Nets.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            Nets, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersNetAccessPoint:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        NetIds:\n        - NetIds\n        - NetIds\n        NetAccessPointIds:\n        - NetAccessPointIds\n        - NetAccessPointIds\n        ServiceNames:\n        - ServiceNames\n        - ServiceNames\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n      properties:\n        NetAccessPointIds:\n          description: The IDs of the Net access points.\n          items:\n            type: string\n          type: array\n        NetIds:\n          description: The IDs of the Nets.\n          items:\n            type: string\n          type: array\n        ServiceNames:\n          description: The names of the services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the Net access points (`pending` \\| `available`\n            \\| `deleting` \\| `deleted`).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the Net access points.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the Net access points.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            Net access points, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersNetPeering:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        AccepterNetIpRanges:\n        - AccepterNetIpRanges\n        - AccepterNetIpRanges\n        AccepterNetNetIds:\n        - AccepterNetNetIds\n        - AccepterNetNetIds\n        SourceNetNetIds:\n        - SourceNetNetIds\n        - SourceNetNetIds\n        StateMessages:\n        - StateMessages\n        - StateMessages\n        NetPeeringIds:\n        - NetPeeringIds\n        - NetPeeringIds\n        AccepterNetAccountIds:\n        - AccepterNetAccountIds\n        - AccepterNetAccountIds\n        SourceNetAccountIds:\n        - SourceNetAccountIds\n        - SourceNetAccountIds\n        SourceNetIpRanges:\n        - SourceNetIpRanges\n        - SourceNetIpRanges\n        StateNames:\n        - StateNames\n        - StateNames\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n      properties:\n        AccepterNetAccountIds:\n          description: The account IDs of the owners of the peer Nets.\n          items:\n            type: string\n          type: array\n        AccepterNetIpRanges:\n          description: The IP ranges of the peer Nets, in CIDR notation (for example,\n            `10.0.0.0/24`).\n          items:\n            type: string\n          type: array\n        AccepterNetNetIds:\n          description: The IDs of the peer Nets.\n          items:\n            type: string\n          type: array\n        NetPeeringIds:\n          description: The IDs of the Net peering connections.\n          items:\n            type: string\n          type: array\n        SourceNetAccountIds:\n          description: The account IDs of the owners of the peer Nets.\n          items:\n            type: string\n          type: array\n        SourceNetIpRanges:\n          description: The IP ranges of the peer Nets.\n          items:\n            type: string\n          type: array\n        SourceNetNetIds:\n          description: The IDs of the peer Nets.\n          items:\n            type: string\n          type: array\n        StateMessages:\n          description: Additional information about the states of the Net peering\n            connections.\n          items:\n            type: string\n          type: array\n        StateNames:\n          description: The states of the Net peering connections (`pending-acceptance`\n            \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the Net peering connections.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the Net peering connections.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            Net peering connections, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersNic:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        PrivateIpsPrivateIps:\n        - PrivateIpsPrivateIps\n        - PrivateIpsPrivateIps\n        LinkNicVmIds:\n        - LinkNicVmIds\n        - LinkNicVmIds\n        LinkPublicIpPublicIpIds:\n        - LinkPublicIpPublicIpIds\n        - LinkPublicIpPublicIpIds\n        PrivateIpsPrimaryIp: true\n        LinkNicVmAccountIds:\n        - LinkNicVmAccountIds\n        - LinkNicVmAccountIds\n        SubnetIds:\n        - SubnetIds\n        - SubnetIds\n        LinkPublicIpAccountIds:\n        - LinkPublicIpAccountIds\n        - LinkPublicIpAccountIds\n        TagValues:\n        - TagValues\n        - TagValues\n        States:\n        - States\n        - States\n        Descriptions:\n        - Descriptions\n        - Descriptions\n        LinkPublicIpLinkPublicIpIds:\n        - LinkPublicIpLinkPublicIpIds\n        - LinkPublicIpLinkPublicIpIds\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n        LinkNicStates:\n        - LinkNicStates\n        - LinkNicStates\n        Tags:\n        - Tags\n        - Tags\n        NetIds:\n        - NetIds\n        - NetIds\n        LinkNicDeleteOnVmDeletion: true\n        PrivateIpsLinkPublicIpPublicIps:\n        - PrivateIpsLinkPublicIpPublicIps\n        - PrivateIpsLinkPublicIpPublicIps\n        SecurityGroupNames:\n        - SecurityGroupNames\n        - SecurityGroupNames\n        SecurityGroupIds:\n        - SecurityGroupIds\n        - SecurityGroupIds\n        LinkNicDeviceNumbers:\n        - 0\n        - 0\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        IsSourceDestCheck: true\n        PrivateDnsNames:\n        - PrivateDnsNames\n        - PrivateDnsNames\n        LinkPublicIpPublicIps:\n        - LinkPublicIpPublicIps\n        - LinkPublicIpPublicIps\n        LinkNicLinkNicIds:\n        - LinkNicLinkNicIds\n        - LinkNicLinkNicIds\n        PrivateIpsLinkPublicIpAccountIds:\n        - PrivateIpsLinkPublicIpAccountIds\n        - PrivateIpsLinkPublicIpAccountIds\n        MacAddresses:\n        - MacAddresses\n        - MacAddresses\n        NicIds:\n        - NicIds\n        - NicIds\n      properties:\n        Descriptions:\n          description: The descriptions of the NICs.\n          items:\n            type: string\n          type: array\n        IsSourceDestCheck:\n          description: Whether the source/destination checking is enabled (true) or\n            disabled (false).\n          type: boolean\n        LinkNicDeleteOnVmDeletion:\n          description: Whether the NICs are deleted when the VMs they are attached\n            to are terminated.\n          type: boolean\n        LinkNicDeviceNumbers:\n          description: The device numbers the NICs are attached to.\n          items:\n            type: integer\n          type: array\n        LinkNicLinkNicIds:\n          description: The attachment IDs of the NICs.\n          items:\n            type: string\n          type: array\n        LinkNicStates:\n          description: The states of the attachments.\n          items:\n            type: string\n          type: array\n        LinkNicVmAccountIds:\n          description: The account IDs of the owners of the VMs the NICs are attached\n            to.\n          items:\n            type: string\n          type: array\n        LinkNicVmIds:\n          description: The IDs of the VMs the NICs are attached to.\n          items:\n            type: string\n          type: array\n        LinkPublicIpAccountIds:\n          description: The account IDs of the owners of the public IPs associated\n            with the NICs.\n          items:\n            type: string\n          type: array\n        LinkPublicIpLinkPublicIpIds:\n          description: The association IDs returned when the public IPs were associated\n            with the NICs.\n          items:\n            type: string\n          type: array\n        LinkPublicIpPublicIpIds:\n          description: The allocation IDs returned when the public IPs were allocated\n            to their accounts.\n          items:\n            type: string\n          type: array\n        LinkPublicIpPublicIps:\n          description: The public IPs associated with the NICs.\n          items:\n            type: string\n          type: array\n        MacAddresses:\n          description: The Media Access Control (MAC) addresses of the NICs.\n          items:\n            type: string\n          type: array\n        NetIds:\n          description: The IDs of the Nets where the NICs are located.\n          items:\n            type: string\n          type: array\n        NicIds:\n          description: The IDs of the NICs.\n          items:\n            type: string\n          type: array\n        PrivateDnsNames:\n          description: The private DNS names associated with the primary private IPs.\n          items:\n            type: string\n          type: array\n        PrivateIpsLinkPublicIpAccountIds:\n          description: The account IDs of the owner of the public IPs associated with\n            the private IPs.\n          items:\n            type: string\n          type: array\n        PrivateIpsLinkPublicIpPublicIps:\n          description: The public IPs associated with the private IPs.\n          items:\n            type: string\n          type: array\n        PrivateIpsPrimaryIp:\n          description: Whether the private IP is the primary IP associated with the\n            NIC.\n          type: boolean\n        PrivateIpsPrivateIps:\n          description: The private IPs of the NICs.\n          items:\n            type: string\n          type: array\n        SecurityGroupIds:\n          description: The IDs of the security groups associated with the NICs.\n          items:\n            type: string\n          type: array\n        SecurityGroupNames:\n          description: The names of the security groups associated with the NICs.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the NICs.\n          items:\n            type: string\n          type: array\n        SubnetIds:\n          description: The IDs of the Subnets for the NICs.\n          items:\n            type: string\n          type: array\n        SubregionNames:\n          description: The Subregions where the NICs are located.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the NICs.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the NICs.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            NICs, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersProductType:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        ProductTypeIds:\n        - ProductTypeIds\n        - ProductTypeIds\n      properties:\n        ProductTypeIds:\n          description: The IDs of the product types.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersPublicIp:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        PublicIps:\n        - PublicIps\n        - PublicIps\n        LinkPublicIpIds:\n        - LinkPublicIpIds\n        - LinkPublicIpIds\n        PrivateIps:\n        - PrivateIps\n        - PrivateIps\n        Placements:\n        - Placements\n        - Placements\n        PublicIpIds:\n        - PublicIpIds\n        - PublicIpIds\n        NicAccountIds:\n        - NicAccountIds\n        - NicAccountIds\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n        NicIds:\n        - NicIds\n        - NicIds\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        LinkPublicIpIds:\n          description: The IDs representing the associations of public IPs with VMs\n            or NICs.\n          items:\n            type: string\n          type: array\n        NicAccountIds:\n          description: The account IDs of the owners of the NICs.\n          items:\n            type: string\n          type: array\n        NicIds:\n          description: The IDs of the NICs.\n          items:\n            type: string\n          type: array\n        Placements:\n          description: Whether the public IPs are for use in the public Cloud or in\n            a Net.\n          items:\n            type: string\n          type: array\n        PrivateIps:\n          description: The private IPs associated with the public IPs.\n          items:\n            type: string\n          type: array\n        PublicIpIds:\n          description: The IDs of the public IPs.\n          items:\n            type: string\n          type: array\n        PublicIps:\n          description: The public IPs.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the public IPs.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the public IPs.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            public IPs, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n        VmIds:\n          description: The IDs of the VMs.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersQuota:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        ShortDescriptions:\n        - ShortDescriptions\n        - ShortDescriptions\n        QuotaTypes:\n        - QuotaTypes\n        - QuotaTypes\n        QuotaNames:\n        - QuotaNames\n        - QuotaNames\n        Collections:\n        - Collections\n        - Collections\n      properties:\n        Collections:\n          description: The group names of the quotas.\n          items:\n            type: string\n          type: array\n        QuotaNames:\n          description: The names of the quotas.\n          items:\n            type: string\n          type: array\n        QuotaTypes:\n          description: The resource IDs if these are resource-specific quotas, `global`\n            if they are not.\n          items:\n            type: string\n          type: array\n        ShortDescriptions:\n          description: The description of the quotas.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersRouteTable:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        RouteDestinationServiceIds:\n        - RouteDestinationServiceIds\n        - RouteDestinationServiceIds\n        RouteNatServiceIds:\n        - RouteNatServiceIds\n        - RouteNatServiceIds\n        NetIds:\n        - NetIds\n        - NetIds\n        RouteDestinationIpRanges:\n        - RouteDestinationIpRanges\n        - RouteDestinationIpRanges\n        RouteGatewayIds:\n        - RouteGatewayIds\n        - RouteGatewayIds\n        RouteVmIds:\n        - RouteVmIds\n        - RouteVmIds\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        LinkSubnetIds:\n        - LinkSubnetIds\n        - LinkSubnetIds\n        LinkRouteTableLinkRouteTableIds:\n        - LinkRouteTableLinkRouteTableIds\n        - LinkRouteTableLinkRouteTableIds\n        LinkRouteTableMain: true\n        RouteTableIds:\n        - RouteTableIds\n        - RouteTableIds\n        LinkRouteTableIds:\n        - LinkRouteTableIds\n        - LinkRouteTableIds\n        RouteNetPeeringIds:\n        - RouteNetPeeringIds\n        - RouteNetPeeringIds\n        RouteStates:\n        - RouteStates\n        - RouteStates\n        Tags:\n        - Tags\n        - Tags\n        RouteCreationMethods:\n        - RouteCreationMethods\n        - RouteCreationMethods\n      properties:\n        LinkRouteTableIds:\n          description: The IDs of the route tables involved in the associations.\n          items:\n            type: string\n          type: array\n        LinkRouteTableLinkRouteTableIds:\n          description: The IDs of the associations between the route tables and the\n            Subnets.\n          items:\n            type: string\n          type: array\n        LinkRouteTableMain:\n          description: If true, the route tables are the main ones for their Nets.\n          type: boolean\n        LinkSubnetIds:\n          description: The IDs of the Subnets involved in the associations.\n          items:\n            type: string\n          type: array\n        NetIds:\n          description: The IDs of the Nets for the route tables.\n          items:\n            type: string\n          type: array\n        RouteCreationMethods:\n          description: The methods used to create a route.\n          items:\n            type: string\n          type: array\n        RouteDestinationIpRanges:\n          description: The IP ranges specified in routes in the tables.\n          items:\n            type: string\n          type: array\n        RouteDestinationServiceIds:\n          description: The service IDs specified in routes in the tables.\n          items:\n            type: string\n          type: array\n        RouteGatewayIds:\n          description: The IDs of the gateways specified in routes in the tables.\n          items:\n            type: string\n          type: array\n        RouteNatServiceIds:\n          description: The IDs of the NAT services specified in routes in the tables.\n          items:\n            type: string\n          type: array\n        RouteNetPeeringIds:\n          description: The IDs of the Net peering connections specified in routes\n            in the tables.\n          items:\n            type: string\n          type: array\n        RouteStates:\n          description: The states of routes in the route tables (`active` \\| `blackhole`).\n            The `blackhole` state indicates that the target of the route is not available.\n          items:\n            type: string\n          type: array\n        RouteTableIds:\n          description: The IDs of the route tables.\n          items:\n            type: string\n          type: array\n        RouteVmIds:\n          description: The IDs of the VMs specified in routes in the tables.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the route tables.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the route tables.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            route tables, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersSecurityGroup:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        InboundRuleFromPortRanges:\n        - 0\n        - 0\n        InboundRuleProtocols:\n        - InboundRuleProtocols\n        - InboundRuleProtocols\n        InboundRuleSecurityGroupNames:\n        - InboundRuleSecurityGroupNames\n        - InboundRuleSecurityGroupNames\n        InboundRuleToPortRanges:\n        - 6\n        - 6\n        AccountIds:\n        - AccountIds\n        - AccountIds\n        NetIds:\n        - NetIds\n        - NetIds\n        OutboundRuleProtocols:\n        - OutboundRuleProtocols\n        - OutboundRuleProtocols\n        OutboundRuleSecurityGroupIds:\n        - OutboundRuleSecurityGroupIds\n        - OutboundRuleSecurityGroupIds\n        InboundRuleSecurityGroupIds:\n        - InboundRuleSecurityGroupIds\n        - InboundRuleSecurityGroupIds\n        OutboundRuleIpRanges:\n        - OutboundRuleIpRanges\n        - OutboundRuleIpRanges\n        SecurityGroupNames:\n        - SecurityGroupNames\n        - SecurityGroupNames\n        SecurityGroupIds:\n        - SecurityGroupIds\n        - SecurityGroupIds\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        InboundRuleIpRanges:\n        - InboundRuleIpRanges\n        - InboundRuleIpRanges\n        InboundRuleAccountIds:\n        - InboundRuleAccountIds\n        - InboundRuleAccountIds\n        Descriptions:\n        - Descriptions\n        - Descriptions\n        OutboundRuleSecurityGroupNames:\n        - OutboundRuleSecurityGroupNames\n        - OutboundRuleSecurityGroupNames\n        OutboundRuleFromPortRanges:\n        - 1\n        - 1\n        OutboundRuleToPortRanges:\n        - 5\n        - 5\n        OutboundRuleAccountIds:\n        - OutboundRuleAccountIds\n        - OutboundRuleAccountIds\n        Tags:\n        - Tags\n        - Tags\n      properties:\n        AccountIds:\n          description: The account IDs of the owners of the security groups.\n          items:\n            type: string\n          type: array\n        Descriptions:\n          description: The descriptions of the security groups.\n          items:\n            type: string\n          type: array\n        InboundRuleAccountIds:\n          description: The account IDs that have been granted permissions.\n          items:\n            type: string\n          type: array\n        InboundRuleFromPortRanges:\n          description: The beginnings of the port ranges for the TCP and UDP protocols,\n            or the ICMP type numbers.\n          items:\n            type: integer\n          type: array\n        InboundRuleIpRanges:\n          description: The IP ranges that have been granted permissions, in CIDR notation\n            (for example, `10.0.0.0/24`).\n          items:\n            type: string\n          type: array\n        InboundRuleProtocols:\n          description: The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`,\n            or a protocol number, or `-1` for all protocols).\n          items:\n            type: string\n          type: array\n        InboundRuleSecurityGroupIds:\n          description: The IDs of the security groups that have been granted permissions.\n          items:\n            type: string\n          type: array\n        InboundRuleSecurityGroupNames:\n          description: The names of the security groups that have been granted permissions.\n          items:\n            type: string\n          type: array\n        InboundRuleToPortRanges:\n          description: The ends of the port ranges for the TCP and UDP protocols,\n            or the ICMP code numbers.\n          items:\n            type: integer\n          type: array\n        NetIds:\n          description: The IDs of the Nets specified when the security groups were\n            created.\n          items:\n            type: string\n          type: array\n        OutboundRuleAccountIds:\n          description: The account IDs that have been granted permissions.\n          items:\n            type: string\n          type: array\n        OutboundRuleFromPortRanges:\n          description: The beginnings of the port ranges for the TCP and UDP protocols,\n            or the ICMP type numbers.\n          items:\n            type: integer\n          type: array\n        OutboundRuleIpRanges:\n          description: The IP ranges that have been granted permissions, in CIDR notation\n            (for example, `10.0.0.0/24`).\n          items:\n            type: string\n          type: array\n        OutboundRuleProtocols:\n          description: The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`,\n            or a protocol number, or `-1` for all protocols).\n          items:\n            type: string\n          type: array\n        OutboundRuleSecurityGroupIds:\n          description: The IDs of the security groups that have been granted permissions.\n          items:\n            type: string\n          type: array\n        OutboundRuleSecurityGroupNames:\n          description: The names of the security groups that have been granted permissions.\n          items:\n            type: string\n          type: array\n        OutboundRuleToPortRanges:\n          description: The ends of the port ranges for the TCP and UDP protocols,\n            or the ICMP code numbers.\n          items:\n            type: integer\n          type: array\n        SecurityGroupIds:\n          description: The IDs of the security groups.\n          items:\n            type: string\n          type: array\n        SecurityGroupNames:\n          description: The names of the security groups.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the security groups.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the security groups.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            security groups, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersServerCertificate:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        Paths:\n        - Paths\n        - Paths\n      properties:\n        Paths:\n          description: The paths to the server certificates.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersService:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        ServiceIds:\n        - ServiceIds\n        - ServiceIds\n        ServiceNames:\n        - ServiceNames\n        - ServiceNames\n      properties:\n        ServiceIds:\n          description: The IDs of the services.\n          items:\n            type: string\n          type: array\n        ServiceNames:\n          description: The names of the services.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersSnapshot:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        VolumeSizes:\n        - 6\n        - 6\n        AccountIds:\n        - AccountIds\n        - AccountIds\n        Progresses:\n        - 0\n        - 0\n        SnapshotIds:\n        - SnapshotIds\n        - SnapshotIds\n        VolumeIds:\n        - VolumeIds\n        - VolumeIds\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        States:\n        - States\n        - States\n        Descriptions:\n        - Descriptions\n        - Descriptions\n        PermissionsToCreateVolumeAccountIds:\n        - PermissionsToCreateVolumeAccountIds\n        - PermissionsToCreateVolumeAccountIds\n        PermissionsToCreateVolumeGlobalPermission: true\n        Tags:\n        - Tags\n        - Tags\n        AccountAliases:\n        - AccountAliases\n        - AccountAliases\n      properties:\n        AccountAliases:\n          description: The account aliases of the owners of the snapshots.\n          items:\n            type: string\n          type: array\n        AccountIds:\n          description: The account IDs of the owners of the snapshots.\n          items:\n            type: string\n          type: array\n        Descriptions:\n          description: The descriptions of the snapshots.\n          items:\n            type: string\n          type: array\n        PermissionsToCreateVolumeAccountIds:\n          description: The account IDs of one or more users who have permissions to\n            create volumes.\n          items:\n            type: string\n          type: array\n        PermissionsToCreateVolumeGlobalPermission:\n          description: If true, lists all public volumes. If false, lists all private\n            volumes.\n          type: boolean\n        Progresses:\n          description: The progresses of the snapshots, as a percentage.\n          items:\n            type: integer\n          type: array\n        SnapshotIds:\n          description: The IDs of the snapshots.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the snapshots (`in-queue` \\| `completed` \\| `error`).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the snapshots.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the snapshots.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            snapshots, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n        VolumeIds:\n          description: The IDs of the volumes used to create the snapshots.\n          items:\n            type: string\n          type: array\n        VolumeSizes:\n          description: The sizes of the volumes used to create the snapshots, in gibibytes\n            (GiB).\n          items:\n            type: integer\n          type: array\n      type: object\n    FiltersSubnet:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        NetIds:\n        - NetIds\n        - NetIds\n        AvailableIpsCounts:\n        - 0\n        - 0\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n        IpRanges:\n        - IpRanges\n        - IpRanges\n        SubnetIds:\n        - SubnetIds\n        - SubnetIds\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n      properties:\n        AvailableIpsCounts:\n          description: The number of available IPs.\n          items:\n            type: integer\n          type: array\n        IpRanges:\n          description: The IP ranges in the Subnets, in CIDR notation (for example,\n            `10.0.0.0/16`).\n          items:\n            type: string\n          type: array\n        NetIds:\n          description: The IDs of the Nets in which the Subnets are.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the Subnets (`pending` \\| `available`).\n          items:\n            type: string\n          type: array\n        SubnetIds:\n          description: The IDs of the Subnets.\n          items:\n            type: string\n          type: array\n        SubregionNames:\n          description: The names of the Subregions in which the Subnets are located.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the Subnets.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the Subnets.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            Subnets, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersSubregion:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n      properties:\n        SubregionNames:\n          description: The names of the Subregions.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersTag:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        ResourceTypes:\n        - ResourceTypes\n        - ResourceTypes\n        ResourceIds:\n        - ResourceIds\n        - ResourceIds\n        Keys:\n        - Keys\n        - Keys\n        Values:\n        - Values\n        - Values\n      properties:\n        Keys:\n          description: The keys of the tags that are assigned to the resources. You\n            can use this filter alongside the `Values` filter. In that case, you filter\n            the resources corresponding to each tag, regardless of the other filter.\n          items:\n            type: string\n          type: array\n        ResourceIds:\n          description: The IDs of the resources with which the tags are associated.\n          items:\n            type: string\n          type: array\n        ResourceTypes:\n          description: The resource type (`vm` \\| `image` \\| `volume` \\| `snapshot`\n            \\| `public-ip` \\| `security-group` \\| `route-table` \\| `nic` \\| `net`\n            \\| `subnet` \\| `net-peering` \\| `net-access-point` \\| `nat-service` \\|\n            `internet-service` \\| `client-gateway` \\| `virtual-gateway` \\| `vpn-connection`\n            \\| `dhcp-options` \\| `task`).\n          items:\n            type: string\n          type: array\n        Values:\n          description: The values of the tags that are assigned to the resources.\n            You can use this filter alongside the `TagKeys` filter. In that case,\n            you filter the resources corresponding to each tag, regardless of the\n            other filter.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersVirtualGateway:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        LinkStates:\n        - LinkStates\n        - LinkStates\n        ConnectionTypes:\n        - ConnectionTypes\n        - ConnectionTypes\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n        LinkNetIds:\n        - LinkNetIds\n        - LinkNetIds\n        VirtualGatewayIds:\n        - VirtualGatewayIds\n        - VirtualGatewayIds\n      properties:\n        ConnectionTypes:\n          description: The types of the virtual gateways (only `ipsec.1` is supported).\n          items:\n            type: string\n          type: array\n        LinkNetIds:\n          description: The IDs of the Nets the virtual gateways are attached to.\n          items:\n            type: string\n          type: array\n        LinkStates:\n          description: The current states of the attachments between the virtual gateways\n            and the Nets (`attaching` \\| `attached` \\| `detaching` \\| `detached`).\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the virtual gateways (`pending` \\| `available`\n            \\| `deleting` \\| `deleted`).\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the virtual gateways.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the virtual gateways.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            virtual gateways, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n        VirtualGatewayIds:\n          description: The IDs of the virtual gateways.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersVm:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        TagKeys:\n          description: The keys of the tags associated with the VMs.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the VMs.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            VMs, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n        VmIds:\n          description: One or more IDs of VMs.\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersVmType:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        VolumeSizes:\n        - 5\n        - 5\n        VcoreCounts:\n        - 6\n        - 6\n        VolumeCounts:\n        - 1\n        - 1\n        MemorySizes:\n        - 0.8008282\n        - 0.8008282\n        BsuOptimized: true\n        VmTypeNames:\n        - VmTypeNames\n        - VmTypeNames\n      properties:\n        BsuOptimized:\n          description: This parameter is not available. It is present in our API for\n            the sake of historical compatibility with AWS.\n          type: boolean\n        MemorySizes:\n          description: The amounts of memory, in gibibytes (GiB).\n          items:\n            format: float\n            type: number\n          type: array\n        VcoreCounts:\n          description: The numbers of vCores.\n          items:\n            type: integer\n          type: array\n        VmTypeNames:\n          description: The names of the VM types. For more information, see [Instance\n            Types](https://docs.outscale.com/en/userguide/Instance-Types.html).\n          items:\n            type: string\n          type: array\n        VolumeCounts:\n          description: The maximum number of ephemeral storage disks.\n          items:\n            type: integer\n          type: array\n        VolumeSizes:\n          description: The size of one ephemeral storage disk, in gibibytes (GiB).\n          items:\n            type: integer\n          type: array\n      type: object\n    FiltersVmsState:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n        VmStates:\n        - VmStates\n        - VmStates\n        MaintenanceEventCodes:\n        - MaintenanceEventCodes\n        - MaintenanceEventCodes\n        MaintenanceEventDescriptions:\n        - MaintenanceEventDescriptions\n        - MaintenanceEventDescriptions\n        MaintenanceEventsNotAfter:\n        - 2000-01-23\n        - 2000-01-23\n        MaintenanceEventsNotBefore:\n        - 2000-01-23\n        - 2000-01-23\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        MaintenanceEventCodes:\n          description: The code for the scheduled event (`system-reboot` \\| `system-maintenance`).\n          items:\n            type: string\n          type: array\n        MaintenanceEventDescriptions:\n          description: The description of the scheduled event.\n          items:\n            type: string\n          type: array\n        MaintenanceEventsNotAfter:\n          description: The latest time the event can end.\n          items:\n            format: date\n            type: string\n          type: array\n        MaintenanceEventsNotBefore:\n          description: The earliest time the event can start.\n          items:\n            format: date\n            type: string\n          type: array\n        SubregionNames:\n          description: The names of the Subregions of the VMs.\n          items:\n            type: string\n          type: array\n        VmIds:\n          description: One or more IDs of VMs.\n          items:\n            type: string\n          type: array\n        VmStates:\n          description: The states of the VMs (`pending` \\| `running` \\| `stopping`\n            \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersVolume:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        VolumeSizes:\n        - 0\n        - 0\n        CreationDates:\n        - 2000-01-23\n        - 2000-01-23\n        LinkVolumeDeleteOnVmDeletion: true\n        LinkVolumeVmIds:\n        - LinkVolumeVmIds\n        - LinkVolumeVmIds\n        SnapshotIds:\n        - SnapshotIds\n        - SnapshotIds\n        VolumeIds:\n        - VolumeIds\n        - VolumeIds\n        LinkVolumeDeviceNames:\n        - LinkVolumeDeviceNames\n        - LinkVolumeDeviceNames\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        LinkVolumeLinkStates:\n        - LinkVolumeLinkStates\n        - LinkVolumeLinkStates\n        VolumeTypes:\n        - VolumeTypes\n        - VolumeTypes\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n        LinkVolumeLinkDates:\n        - 2000-01-23\n        - 2000-01-23\n        VolumeStates:\n        - VolumeStates\n        - VolumeStates\n        Tags:\n        - Tags\n        - Tags\n      properties:\n        CreationDates:\n          description: The dates and times at which the volumes were created.\n          items:\n            format: date\n            type: string\n          type: array\n        LinkVolumeDeleteOnVmDeletion:\n          description: Whether the volumes are deleted or not when terminating the\n            VMs.\n          type: boolean\n        LinkVolumeDeviceNames:\n          description: The VM device names.\n          items:\n            type: string\n          type: array\n        LinkVolumeLinkDates:\n          description: The dates and times at which the volumes were created.\n          items:\n            format: date\n            type: string\n          type: array\n        LinkVolumeLinkStates:\n          description: The attachment states of the volumes (`attaching` \\| `detaching`\n            \\| `attached` \\| `detached`).\n          items:\n            type: string\n          type: array\n        LinkVolumeVmIds:\n          description: One or more IDs of VMs.\n          items:\n            type: string\n          type: array\n        SnapshotIds:\n          description: The snapshots from which the volumes were created.\n          items:\n            type: string\n          type: array\n        SubregionNames:\n          description: The names of the Subregions in which the volumes were created.\n          items:\n            type: string\n          type: array\n        TagKeys:\n          description: The keys of the tags associated with the volumes.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the volumes.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            volumes, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n        VolumeIds:\n          description: The IDs of the volumes.\n          items:\n            type: string\n          type: array\n        VolumeSizes:\n          description: The sizes of the volumes, in gibibytes (GiB).\n          items:\n            type: integer\n          type: array\n        VolumeStates:\n          description: The states of the volumes (`creating` \\| `available` \\| `in-use`\n            \\| `updating` \\| `deleting` \\| `error`).\n          items:\n            type: string\n          type: array\n        VolumeTypes:\n          description: The types of the volumes (`standard` \\| `gp2` \\| `io1`).\n          items:\n            type: string\n          type: array\n      type: object\n    FiltersVpnConnection:\n      additionalProperties: false\n      description: One or more filters.\n      example:\n        States:\n        - States\n        - States\n        ConnectionTypes:\n        - ConnectionTypes\n        - ConnectionTypes\n        VpnConnectionIds:\n        - VpnConnectionIds\n        - VpnConnectionIds\n        RouteDestinationIpRanges:\n        - RouteDestinationIpRanges\n        - RouteDestinationIpRanges\n        ClientGatewayIds:\n        - ClientGatewayIds\n        - ClientGatewayIds\n        BgpAsns:\n        - 0\n        - 0\n        StaticRoutesOnly: true\n        TagKeys:\n        - TagKeys\n        - TagKeys\n        TagValues:\n        - TagValues\n        - TagValues\n        Tags:\n        - Tags\n        - Tags\n        VirtualGatewayIds:\n        - VirtualGatewayIds\n        - VirtualGatewayIds\n      properties:\n        BgpAsns:\n          description: The Border Gateway Protocol (BGP) Autonomous System Numbers\n            (ASNs) of the connections.\n          items:\n            type: integer\n          type: array\n        ClientGatewayIds:\n          description: The IDs of the client gateways.\n          items:\n            type: string\n          type: array\n        ConnectionTypes:\n          description: The types of the VPN connections (only `ipsec.1` is supported).\n          items:\n            type: string\n          type: array\n        RouteDestinationIpRanges:\n          description: The destination IP ranges.\n          items:\n            type: string\n          type: array\n        States:\n          description: The states of the VPN connections (`pending` \\| `available`\n            \\| `deleting` \\| `deleted`).\n          items:\n            type: string\n          type: array\n        StaticRoutesOnly:\n          description: If false, the VPN connection uses dynamic routing with Border\n            Gateway Protocol (BGP). If true, routing is controlled using static routes.\n            For more information about how to create and delete static routes, see\n            [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).\n          type: boolean\n        TagKeys:\n          description: The keys of the tags associated with the VPN connections.\n          items:\n            type: string\n          type: array\n        TagValues:\n          description: The values of the tags associated with the VPN connections.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: 'The key/value combination of the tags associated with the\n            VPN connections, in the following format: \u0026quot;Filters\u0026quot;:{\u0026quot;Tags\u0026quot;:[\u0026quot;TAGKEY=TAGVALUE\u0026quot;]}.'\n          items:\n            type: string\n          type: array\n        VirtualGatewayIds:\n          description: The IDs of the virtual gateways.\n          items:\n            type: string\n          type: array\n        VpnConnectionIds:\n          description: The IDs of the VPN connections.\n          items:\n            type: string\n          type: array\n      type: object\n    FlexibleGpu:\n      additionalProperties: false\n      description: Information about the flexible GPU (fGPU).\n      example:\n        Generation: Generation\n        DeleteOnVmDeletion: true\n        ModelName: ModelName\n        FlexibleGpuId: FlexibleGpuId\n        State: State\n        VmId: VmId\n        SubregionName: SubregionName\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the fGPU is deleted when the VM is terminated.\n          type: boolean\n        FlexibleGpuId:\n          description: The ID of the fGPU.\n          type: string\n        Generation:\n          description: The compatible processor generation.\n          type: string\n        ModelName:\n          description: The model of fGPU. For more information, see [About Flexible\n            GPUs](https://docs.outscale.com/en/userguide/About-Flexible-GPUs.html).\n          type: string\n        State:\n          description: The state of the fGPU (`allocated` \\| `attaching` \\| `attached`\n            \\| `detaching`).\n          type: string\n        SubregionName:\n          description: The Subregion where the fGPU is located.\n          type: string\n        VmId:\n          description: The ID of the VM the fGPU is attached to, if any.\n          type: string\n      type: object\n    FlexibleGpuCatalog:\n      additionalProperties: false\n      description: Information about the flexible GPU (fGPU) that is available in\n        the public catalog.\n      example:\n        VRam: 1\n        ModelName: ModelName\n        MaxCpu: 0\n        MaxRam: 6\n        Generations:\n        - Generations\n        - Generations\n      properties:\n        Generations:\n          description: The generations of VMs that the fGPU is compatible with.\n          items:\n            type: string\n          type: array\n        MaxCpu:\n          description: The maximum number of VM vCores that the fGPU is compatible\n            with.\n          type: integer\n        MaxRam:\n          description: The maximum amount of VM memory that the fGPU is compatible\n            with.\n          type: integer\n        ModelName:\n          description: The model of fGPU.\n          type: string\n        VRam:\n          description: The amount of video RAM (VRAM) of the fGPU.\n          type: integer\n      type: object\n    HealthCheck:\n      additionalProperties: false\n      description: Information about the health check configuration.\n      example:\n        Path: Path\n        UnhealthyThreshold: 2\n        CheckInterval: 6\n        Timeout: 5\n        HealthyThreshold: 1\n        Port: 5\n        Protocol: Protocol\n      properties:\n        CheckInterval:\n          description: The number of seconds between two pings (between `5` and `600`\n            both included).\n          type: integer\n        HealthyThreshold:\n          description: The number of consecutive successful pings before considering\n            the VM as healthy (between `2` and `10` both included).\n          type: integer\n        Path:\n          description: If you use the HTTP or HTTPS protocols, the ping path.\n          type: string\n        Port:\n          description: The port number (between `1` and `65535`, both included).\n          type: integer\n        Protocol:\n          description: The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP`\n            \\| `SSL`).\n          type: string\n        Timeout:\n          description: The maximum waiting time for a response before considering\n            the VM as unhealthy, in seconds (between `2` and `60` both included).\n          type: integer\n        UnhealthyThreshold:\n          description: The number of consecutive failed pings before considering the\n            VM as unhealthy (between `2` and `10` both included).\n          type: integer\n      required:\n      - CheckInterval\n      - HealthyThreshold\n      - Port\n      - Protocol\n      - Timeout\n      - UnhealthyThreshold\n      type: object\n    Image:\n      additionalProperties: false\n      description: Information about the OMI.\n      example:\n        ProductCodes:\n        - ProductCodes\n        - ProductCodes\n        CreationDate: 2000-01-23\n        PermissionsToLaunch:\n          AccountIds:\n          - AccountIds\n          - AccountIds\n          GlobalPermission: true\n        AccountId: AccountId\n        Description: Description\n        RootDeviceName: RootDeviceName\n        Architecture: Architecture\n        BlockDeviceMappings:\n        - Bsu:\n            SnapshotId: SnapshotId\n            DeleteOnVmDeletion: true\n            VolumeType: VolumeType\n            Iops: 0\n            VolumeSize: 6\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        - Bsu:\n            SnapshotId: SnapshotId\n            DeleteOnVmDeletion: true\n            VolumeType: VolumeType\n            Iops: 0\n            VolumeSize: 6\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        StateComment:\n          StateCode: StateCode\n          StateMessage: StateMessage\n        AccountAlias: AccountAlias\n        ImageType: ImageType\n        ImageName: ImageName\n        RootDeviceType: RootDeviceType\n        State: State\n        FileLocation: FileLocation\n        ImageId: ImageId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        AccountAlias:\n          description: The account alias of the owner of the OMI.\n          type: string\n        AccountId:\n          description: The account ID of the owner of the OMI.\n          type: string\n        Architecture:\n          description: The architecture of the OMI (by default, `i386`).\n          type: string\n        BlockDeviceMappings:\n          description: One or more block device mappings.\n          items:\n            $ref: '#/components/schemas/BlockDeviceMappingImage'\n          type: array\n        CreationDate:\n          description: The date and time at which the OMI was created.\n          format: date\n          type: string\n        Description:\n          description: The description of the OMI.\n          type: string\n        FileLocation:\n          description: The location of the bucket where the OMI files are stored.\n          type: string\n        ImageId:\n          description: The ID of the OMI.\n          type: string\n        ImageName:\n          description: The name of the OMI.\n          type: string\n        ImageType:\n          description: The type of the OMI.\n          type: string\n        PermissionsToLaunch:\n          $ref: '#/components/schemas/PermissionsOnResource'\n        ProductCodes:\n          description: The product code associated with the OMI (`0001` Linux/Unix\n            \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).\n          items:\n            type: string\n          type: array\n        RootDeviceName:\n          description: The name of the root device.\n          type: string\n        RootDeviceType:\n          description: The type of root device used by the OMI (always `bsu`).\n          type: string\n        State:\n          description: The state of the OMI (`pending` \\| `available` \\| `failed`).\n          type: string\n        StateComment:\n          $ref: '#/components/schemas/StateComment'\n        Tags:\n          description: One or more tags associated with the OMI.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    ImageExportTask:\n      additionalProperties: false\n      description: Information about the OMI export task.\n      example:\n        Comment: Comment\n        Progress: 0\n        TaskId: TaskId\n        State: State\n        ImageId: ImageId\n        OsuExport:\n          OsuManifestUrl: OsuManifestUrl\n          OsuBucket: OsuBucket\n          OsuPrefix: OsuPrefix\n          DiskImageFormat: DiskImageFormat\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        Comment:\n          description: If the OMI export task fails, an error message appears.\n          type: string\n        ImageId:\n          description: The ID of the OMI to be exported.\n          type: string\n        OsuExport:\n          $ref: '#/components/schemas/OsuExportImageExportTask'\n        Progress:\n          description: The progress of the OMI export task, as a percentage.\n          type: integer\n        State:\n          description: The state of the OMI export task (`pending/queued` \\| `pending`\n            \\| `completed` \\| `failed` \\| `cancelled`).\n          type: string\n        Tags:\n          description: One or more tags associated with the image export task.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        TaskId:\n          description: The ID of the OMI export task.\n          type: string\n      type: object\n    InternetService:\n      additionalProperties: false\n      description: Information about the Internet service.\n      example:\n        NetId: NetId\n        InternetServiceId: InternetServiceId\n        State: State\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        InternetServiceId:\n          description: The ID of the Internet service.\n          type: string\n        NetId:\n          description: The ID of the Net attached to the Internet service.\n          type: string\n        State:\n          description: The state of the attachment of the Internet service to the\n            Net (always `available`).\n          type: string\n        Tags:\n          description: One or more tags associated with the Internet service.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    Keypair:\n      additionalProperties: false\n      description: Information about the keypair.\n      example:\n        KeypairFingerprint: KeypairFingerprint\n        KeypairName: KeypairName\n      properties:\n        KeypairFingerprint:\n          description: The MD5 public key fingerprint as specified in section 4 of\n            RFC 4716.\n          type: string\n        KeypairName:\n          description: The name of the keypair.\n          type: string\n      type: object\n    KeypairCreated:\n      additionalProperties: false\n      description: Information about the created keypair.\n      example:\n        KeypairFingerprint: KeypairFingerprint\n        PrivateKey: PrivateKey\n        KeypairName: KeypairName\n      properties:\n        KeypairFingerprint:\n          description: The MD5 public key fingerprint as specified in section 4 of\n            RFC 4716.\n          type: string\n        KeypairName:\n          description: The name of the keypair.\n          type: string\n        PrivateKey:\n          description: The private key. When saving the private key in a .rsa file,\n            replace the `\\n` escape sequences with line breaks.\n          type: string\n      type: object\n    LinkFlexibleGpuRequest:\n      additionalProperties: false\n      example:\n        FlexibleGpuId: FlexibleGpuId\n        DryRun: true\n        VmId: VmId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        FlexibleGpuId:\n          description: The ID of the fGPU you want to attach.\n          type: string\n        VmId:\n          description: The ID of the VM you want to attach the fGPU to.\n          type: string\n      required:\n      - FlexibleGpuId\n      - VmId\n      type: object\n    LinkFlexibleGpuResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkInternetServiceRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        InternetServiceId: InternetServiceId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        InternetServiceId:\n          description: The ID of the Internet service you want to attach.\n          type: string\n        NetId:\n          description: The ID of the Net to which you want to attach the Internet\n            service.\n          type: string\n      required:\n      - InternetServiceId\n      - NetId\n      type: object\n    LinkInternetServiceResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkLoadBalancerBackendMachinesRequest:\n      additionalProperties: false\n      example:\n        BackendVmIds:\n        - BackendVmIds\n        - BackendVmIds\n        LoadBalancerName: LoadBalancerName\n        DryRun: true\n        BackendIps:\n        - BackendIps\n        - BackendIps\n      properties:\n        BackendIps:\n          description: ' One or more public IPs of back-end VMs.'\n          items:\n            type: string\n          type: array\n        BackendVmIds:\n          description: ' One or more IDs of back-end VMs.'\n          items:\n            type: string\n          type: array\n        DryRun:\n          description: ' If true, checks whether you have the required permissions\n            to perform the action.'\n          type: boolean\n        LoadBalancerName:\n          description: ' The name of the load balancer. '\n          type: string\n      required:\n      - LoadBalancerName\n      type: object\n    LinkLoadBalancerBackendMachinesResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkNic:\n      additionalProperties: false\n      description: Information about the NIC attachment.\n      example:\n        DeviceNumber: 0\n        DeleteOnVmDeletion: true\n        VmAccountId: VmAccountId\n        LinkNicId: LinkNicId\n        State: State\n        VmId: VmId\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the NIC is deleted when the VM is terminated.\n          type: boolean\n        DeviceNumber:\n          description: The device index for the NIC attachment (between `1` and `7`,\n            both included).\n          type: integer\n        LinkNicId:\n          description: The ID of the NIC to attach.\n          type: string\n        State:\n          description: The state of the attachment (`attaching` \\| `attached` \\| `detaching`\n            \\| `detached`).\n          type: string\n        VmAccountId:\n          description: The account ID of the owner of the VM.\n          type: string\n        VmId:\n          description: The ID of the VM.\n          type: string\n      type: object\n    LinkNicLight:\n      additionalProperties: false\n      description: Information about the network interface card (NIC).\n      example:\n        DeviceNumber: 6\n        DeleteOnVmDeletion: true\n        LinkNicId: LinkNicId\n        State: State\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the NIC is deleted when the VM is terminated.\n          type: boolean\n        DeviceNumber:\n          description: The device index for the NIC attachment (between `1` and `7`,\n            both included).\n          type: integer\n        LinkNicId:\n          description: The ID of the NIC to attach.\n          type: string\n        State:\n          description: The state of the attachment (`attaching` \\| `attached` \\| `detaching`\n            \\| `detached`).\n          type: string\n      type: object\n    LinkNicRequest:\n      additionalProperties: false\n      example:\n        DeviceNumber: 0\n        DryRun: true\n        VmId: VmId\n        NicId: NicId\n      properties:\n        DeviceNumber:\n          description: The index of the VM device for the NIC attachment (between\n            `1` and `7`, both included).\n          type: integer\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NicId:\n          description: The ID of the NIC you want to attach.\n          type: string\n        VmId:\n          description: The ID of the VM to which you want to attach the NIC.\n          type: string\n      required:\n      - DeviceNumber\n      - NicId\n      - VmId\n      type: object\n    LinkNicResponse:\n      additionalProperties: false\n      example:\n        LinkNicId: LinkNicId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        LinkNicId:\n          description: The ID of the NIC attachment.\n          type: string\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkNicToUpdate:\n      additionalProperties: false\n      description: Information about the NIC attachment. If you are modifying the\n        `DeleteOnVmDeletion` attribute, you must specify the ID of the NIC attachment.\n      example:\n        DeleteOnVmDeletion: true\n        LinkNicId: LinkNicId\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the NIC is deleted when the VM is terminated. If false,\n            the NIC is detached from the VM.\n          type: boolean\n        LinkNicId:\n          description: The ID of the NIC attachment.\n          type: string\n      type: object\n    LinkPrivateIpsRequest:\n      additionalProperties: false\n      example:\n        SecondaryPrivateIpCount: 0\n        AllowRelink: true\n        PrivateIps:\n        - PrivateIps\n        - PrivateIps\n        DryRun: true\n        NicId: NicId\n      properties:\n        AllowRelink:\n          description: If true, allows an IP that is already assigned to another NIC\n            in the same Subnet to be assigned to the NIC you specified.\n          type: boolean\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NicId:\n          description: The ID of the NIC.\n          type: string\n        PrivateIps:\n          description: The secondary private IP or IPs you want to assign to the NIC\n            within the IP range of the Subnet.\n          items:\n            type: string\n          type: array\n        SecondaryPrivateIpCount:\n          description: The number of secondary private IPs to assign to the NIC.\n          type: integer\n      required:\n      - NicId\n      type: object\n    LinkPrivateIpsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkPublicIp:\n      additionalProperties: false\n      description: Information about the public IP association.\n      example:\n        PublicIp: PublicIp\n        LinkPublicIpId: LinkPublicIpId\n        PublicIpId: PublicIpId\n        PublicIpAccountId: PublicIpAccountId\n        PublicDnsName: PublicDnsName\n      properties:\n        LinkPublicIpId:\n          description: (Required in a Net) The ID representing the association of\n            the public IP with the VM or the NIC.\n          type: string\n        PublicDnsName:\n          description: The name of the public DNS.\n          type: string\n        PublicIp:\n          description: The public IP associated with the NIC.\n          type: string\n        PublicIpAccountId:\n          description: The account ID of the owner of the public IP.\n          type: string\n        PublicIpId:\n          description: The allocation ID of the public IP.\n          type: string\n      type: object\n    LinkPublicIpLightForVm:\n      additionalProperties: false\n      description: Information about the public IP associated with the NIC.\n      example:\n        PublicIp: PublicIp\n        PublicIpAccountId: PublicIpAccountId\n        PublicDnsName: PublicDnsName\n      properties:\n        PublicDnsName:\n          description: The name of the public DNS.\n          type: string\n        PublicIp:\n          description: The public IP associated with the NIC.\n          type: string\n        PublicIpAccountId:\n          description: The account ID of the owner of the public IP.\n          type: string\n      type: object\n    LinkPublicIpRequest:\n      additionalProperties: false\n      example:\n        AllowRelink: true\n        PrivateIp: PrivateIp\n        PublicIp: PublicIp\n        DryRun: true\n        PublicIpId: PublicIpId\n        VmId: VmId\n        NicId: NicId\n      properties:\n        AllowRelink:\n          description: If true, allows the public IP to be associated with the VM\n            or NIC that you specify even if it is already associated with another\n            VM or NIC. If false, prevents the EIP from being associated with the VM\n            or NIC that you specify if it is already associated with another VM or\n            NIC. (By default, true in the public Cloud, false in a Net.)\n          type: boolean\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NicId:\n          description: (Net only) The ID of the NIC. This parameter is required if\n            the VM has more than one NIC attached. Otherwise, you need to specify\n            the `VmId` parameter instead. You cannot specify both parameters at the\n            same time.\n          type: string\n        PrivateIp:\n          description: (Net only) The primary or secondary private IP of the specified\n            NIC. By default, the primary private IP.\n          type: string\n        PublicIp:\n          description: The public IP. This parameter is required unless you use the\n            `PublicIpId` parameter.\n          type: string\n        PublicIpId:\n          description: The allocation ID of the public IP. This parameter is required\n            unless you use the `PublicIp` parameter.\n          type: string\n        VmId:\n          description: |-\n            The ID of the VM.\u003cbr /\u003e\n            - In the public Cloud, this parameter is required.\u003cbr /\u003e\n            - In a Net, this parameter is required if the VM has only one NIC. Otherwise, you need to specify the `NicId` parameter instead. You cannot specify both parameters at the same time.\n          type: string\n      type: object\n    LinkPublicIpResponse:\n      additionalProperties: false\n      example:\n        LinkPublicIpId: LinkPublicIpId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        LinkPublicIpId:\n          description: (Net only) The ID representing the association of the public\n            IP with the VM or the NIC.\n          type: string\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkRouteTable:\n      additionalProperties: false\n      description: One or more associations between the route table and the Subnets.\n      example:\n        RouteTableId: RouteTableId\n        LinkRouteTableId: LinkRouteTableId\n        SubnetId: SubnetId\n        Main: true\n      properties:\n        LinkRouteTableId:\n          description: The ID of the association between the route table and the Subnet.\n          type: string\n        Main:\n          description: If true, the route table is the main one.\n          type: boolean\n        RouteTableId:\n          description: The ID of the route table.\n          type: string\n        SubnetId:\n          description: The ID of the Subnet.\n          type: string\n      type: object\n    LinkRouteTableRequest:\n      additionalProperties: false\n      example:\n        RouteTableId: RouteTableId\n        DryRun: true\n        SubnetId: SubnetId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        RouteTableId:\n          description: The ID of the route table.\n          type: string\n        SubnetId:\n          description: The ID of the Subnet.\n          type: string\n      required:\n      - RouteTableId\n      - SubnetId\n      type: object\n    LinkRouteTableResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LinkRouteTableId: LinkRouteTableId\n      properties:\n        LinkRouteTableId:\n          description: The ID of the association between the route table and the Subnet.\n          type: string\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkVirtualGatewayRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        DryRun: true\n        VirtualGatewayId: VirtualGatewayId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetId:\n          description: The ID of the Net to which you want to attach the virtual gateway.\n          type: string\n        VirtualGatewayId:\n          description: The ID of the virtual gateway.\n          type: string\n      required:\n      - NetId\n      - VirtualGatewayId\n      type: object\n    LinkVirtualGatewayResponse:\n      additionalProperties: false\n      example:\n        NetToVirtualGatewayLink:\n          NetId: NetId\n          State: State\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        NetToVirtualGatewayLink:\n          $ref: '#/components/schemas/NetToVirtualGatewayLink'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkVolumeRequest:\n      additionalProperties: false\n      example:\n        VolumeId: VolumeId\n        DryRun: true\n        VmId: VmId\n        DeviceName: DeviceName\n      properties:\n        DeviceName:\n          description: The name of the device.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VmId:\n          description: The ID of the VM you want to attach the volume to.\n          type: string\n        VolumeId:\n          description: The ID of the volume you want to attach.\n          type: string\n      required:\n      - DeviceName\n      - VmId\n      - VolumeId\n      type: object\n    LinkVolumeResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    LinkedVolume:\n      additionalProperties: false\n      description: Information about volume attachment.\n      example:\n        VolumeId: VolumeId\n        DeleteOnVmDeletion: true\n        State: State\n        VmId: VmId\n        DeviceName: DeviceName\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the volume is deleted when terminating the VM. If\n            false, the volume is not deleted when terminating the VM.\n          type: boolean\n        DeviceName:\n          description: The name of the device.\n          type: string\n        State:\n          description: The state of the attachment of the volume (`attaching` \\| `detaching`\n            \\| `attached` \\| `detached`).\n          type: string\n        VmId:\n          description: The ID of the VM.\n          type: string\n        VolumeId:\n          description: The ID of the volume.\n          type: string\n      type: object\n    Listener:\n      additionalProperties: false\n      description: Information about the listener.\n      example:\n        PolicyNames:\n        - PolicyNames\n        - PolicyNames\n        BackendProtocol: BackendProtocol\n        LoadBalancerProtocol: LoadBalancerProtocol\n        BackendPort: 7\n        ServerCertificateId: ServerCertificateId\n        LoadBalancerPort: 9\n      properties:\n        BackendPort:\n          description: The port on which the back-end VM is listening (between `1`\n            and `65535`, both included).\n          type: integer\n        BackendProtocol:\n          description: The protocol for routing traffic to back-end VMs (`HTTP` \\|\n            `HTTPS` \\| `TCP` \\| `SSL`).\n          type: string\n        LoadBalancerPort:\n          description: The port on which the load balancer is listening (between `1`\n            and `65535`, both included).\n          type: integer\n        LoadBalancerProtocol:\n          description: The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`).\n          type: string\n        PolicyNames:\n          description: The names of the policies. If there are no policies enabled,\n            the list is empty.\n          items:\n            type: string\n          type: array\n        ServerCertificateId:\n          description: The OUTSCALE Resource Name (ORN) of the server certificate.\n            For more information, see [Resource Identifiers \u003e OUTSCALE Resource Names\n            (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).\n          type: string\n      type: object\n    ListenerForCreation:\n      additionalProperties: false\n      description: Information about the listener to create.\n      example:\n        BackendProtocol: BackendProtocol\n        LoadBalancerProtocol: LoadBalancerProtocol\n        BackendPort: 0\n        ServerCertificateId: ServerCertificateId\n        LoadBalancerPort: 6\n      properties:\n        BackendPort:\n          description: The port on which the back-end VM is listening (between `1`\n            and `65535`, both included).\n          type: integer\n        BackendProtocol:\n          description: The protocol for routing traffic to back-end VMs (`HTTP` \\|\n            `HTTPS` \\| `TCP` \\| `SSL`).\n          type: string\n        LoadBalancerPort:\n          description: The port on which the load balancer is listening (between `1`\n            and `65535`, both included).\n          type: integer\n        LoadBalancerProtocol:\n          description: The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`).\n          type: string\n        ServerCertificateId:\n          description: The OUTSCALE Resource Name (ORN) of the server certificate.\n            For more information, see [Resource Identifiers \u003e OUTSCALE Resource Names\n            (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).\n          type: string\n      required:\n      - BackendPort\n      - LoadBalancerPort\n      - LoadBalancerProtocol\n      type: object\n    ListenerRule:\n      additionalProperties: false\n      description: Information about the listener rule.\n      example:\n        Action: Action\n        PathPattern: PathPattern\n        HostNamePattern: HostNamePattern\n        Priority: 1\n        ListenerRuleId: 6\n        ListenerId: 0\n        ListenerRuleName: ListenerRuleName\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        Action:\n          description: The type of action for the rule (always `forward`).\n          type: string\n        HostNamePattern:\n          description: A host-name pattern for the rule, with a maximum length of\n            128 characters. This host-name pattern supports maximum three wildcards,\n            and must not contain any special characters except [-.?].\n          type: string\n        ListenerId:\n          description: The ID of the listener.\n          type: integer\n        ListenerRuleId:\n          description: The ID of the listener rule.\n          type: integer\n        ListenerRuleName:\n          description: A human-readable name for the listener rule.\n          type: string\n        PathPattern:\n          description: A path pattern for the rule, with a maximum length of 128 characters.\n            This path pattern supports maximum three wildcards, and must not contain\n            any special characters except [_-.$/~\u0026quot;'@:+?].\n          type: string\n        Priority:\n          description: The priority level of the listener rule, between `1` and `19999`\n            both included. Each rule must have a unique priority level. Otherwise,\n            an error is returned.\n          type: integer\n        VmIds:\n          description: The IDs of the backend VMs.\n          items:\n            type: string\n          type: array\n      type: object\n    ListenerRuleForCreation:\n      additionalProperties: false\n      description: Information about the listener rule.\n      example:\n        Action: Action\n        PathPattern: PathPattern\n        HostNamePattern: HostNamePattern\n        Priority: 6\n        ListenerRuleName: ListenerRuleName\n      properties:\n        Action:\n          description: The type of action for the rule (always `forward`).\n          type: string\n        HostNamePattern:\n          description: 'A host-name pattern for the rule, with a maximum length of\n            128 characters. This host-name pattern supports maximum three wildcards,\n            and must not contain any special characters except [-.?]. '\n          type: string\n        ListenerRuleName:\n          description: A human-readable name for the listener rule.\n          type: string\n        PathPattern:\n          description: A path pattern for the rule, with a maximum length of 128 characters.\n            This path pattern supports maximum three wildcards, and must not contain\n            any special characters except [_-.$/~\u0026quot;'@:+?].\n          type: string\n        Priority:\n          description: The priority level of the listener rule, between `1` and `19999`\n            both included. Each rule must have a unique priority level. Otherwise,\n            an error is returned.\n          type: integer\n      required:\n      - ListenerRuleName\n      - Priority\n      type: object\n    LoadBalancer:\n      additionalProperties: false\n      description: Information about the load balancer.\n      example:\n        AccessLog:\n          OsuBucketPrefix: OsuBucketPrefix\n          IsEnabled: true\n          PublicationInterval: 0\n          OsuBucketName: OsuBucketName\n        BackendVmIds:\n        - BackendVmIds\n        - BackendVmIds\n        SecurityGroups:\n        - SecurityGroups\n        - SecurityGroups\n        ApplicationStickyCookiePolicies:\n        - PolicyName: PolicyName\n          CookieName: CookieName\n        - PolicyName: PolicyName\n          CookieName: CookieName\n        DnsName: DnsName\n        NetId: NetId\n        PublicIp: PublicIp\n        SourceSecurityGroup:\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupAccountId: SecurityGroupAccountId\n        HealthCheck:\n          Path: Path\n          UnhealthyThreshold: 2\n          CheckInterval: 6\n          Timeout: 5\n          HealthyThreshold: 1\n          Port: 5\n          Protocol: Protocol\n        LoadBalancerType: LoadBalancerType\n        LoadBalancerName: LoadBalancerName\n        Listeners:\n        - PolicyNames:\n          - PolicyNames\n          - PolicyNames\n          BackendProtocol: BackendProtocol\n          LoadBalancerProtocol: LoadBalancerProtocol\n          BackendPort: 7\n          ServerCertificateId: ServerCertificateId\n          LoadBalancerPort: 9\n        - PolicyNames:\n          - PolicyNames\n          - PolicyNames\n          BackendProtocol: BackendProtocol\n          LoadBalancerProtocol: LoadBalancerProtocol\n          BackendPort: 7\n          ServerCertificateId: ServerCertificateId\n          LoadBalancerPort: 9\n        Subnets:\n        - Subnets\n        - Subnets\n        SubregionNames:\n        - SubregionNames\n        - SubregionNames\n        LoadBalancerStickyCookiePolicies:\n        - CookieExpirationPeriod: 3\n          PolicyName: PolicyName\n        - CookieExpirationPeriod: 3\n          PolicyName: PolicyName\n        BackendIps:\n        - BackendIps\n        - BackendIps\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        AccessLog:\n          $ref: '#/components/schemas/AccessLog'\n        ApplicationStickyCookiePolicies:\n          description: The stickiness policies defined for the load balancer.\n          items:\n            $ref: '#/components/schemas/ApplicationStickyCookiePolicy'\n          type: array\n        BackendIps:\n          description: One or more public IPs of back-end VMs.\n          items:\n            type: string\n          type: array\n        BackendVmIds:\n          description: One or more IDs of back-end VMs for the load balancer.\n          items:\n            type: string\n          type: array\n        DnsName:\n          description: The DNS name of the load balancer.\n          type: string\n        HealthCheck:\n          $ref: '#/components/schemas/HealthCheck'\n        Listeners:\n          description: The listeners for the load balancer.\n          items:\n            $ref: '#/components/schemas/Listener'\n          type: array\n        LoadBalancerName:\n          description: The name of the load balancer.\n          type: string\n        LoadBalancerStickyCookiePolicies:\n          description: The policies defined for the load balancer.\n          items:\n            $ref: '#/components/schemas/LoadBalancerStickyCookiePolicy'\n          type: array\n        LoadBalancerType:\n          description: |-\n            The type of load balancer. Valid only for load balancers in a Net.\u003cbr /\u003e\n            If `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.\u003cbr /\u003e\n            If `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP.\n          type: string\n        NetId:\n          description: The ID of the Net for the load balancer.\n          type: string\n        PublicIp:\n          description: (internet-facing only) The public IP associated with the load\n            balancer.\n          type: string\n        SecurityGroups:\n          description: One or more IDs of security groups for the load balancers.\n            Valid only for load balancers in a Net.\n          items:\n            type: string\n          type: array\n        SourceSecurityGroup:\n          $ref: '#/components/schemas/SourceSecurityGroup'\n        Subnets:\n          description: The ID of the Subnet in which the load balancer was created.\n          items:\n            type: string\n          type: array\n        SubregionNames:\n          description: The ID of the Subregion in which the load balancer was created.\n          items:\n            type: string\n          type: array\n        Tags:\n          description: One or more tags associated with the load balancer.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    LoadBalancerLight:\n      additionalProperties: false\n      description: Information about the load balancer.\n      example:\n        LoadBalancerName: LoadBalancerName\n        LoadBalancerPort: 0\n      properties:\n        LoadBalancerName:\n          description: The name of the load balancer to which the listener is attached.\n          type: string\n        LoadBalancerPort:\n          description: The port of load balancer on which the load balancer is listening\n            (between `1` and `65535` both included).\n          type: integer\n      required:\n      - LoadBalancerName\n      - LoadBalancerPort\n      type: object\n    LoadBalancerStickyCookiePolicy:\n      additionalProperties: false\n      description: Information about the stickiness policy.\n      example:\n        CookieExpirationPeriod: 3\n        PolicyName: PolicyName\n      properties:\n        CookieExpirationPeriod:\n          description: |-\n            The time period, in seconds, after which the cookie should be considered stale.\u003cbr /\u003e\n            If `1`, the stickiness session lasts for the duration of the browser session.\n          type: integer\n        PolicyName:\n          description: The name of the stickiness policy.\n          type: string\n      type: object\n    LoadBalancerTag:\n      additionalProperties: false\n      description: Information about the load balancer tag.\n      example:\n        LoadBalancerName: LoadBalancerName\n        Value: Value\n        Key: Key\n      properties:\n        Key:\n          description: The key of the tag.\n          type: string\n        LoadBalancerName:\n          description: The name of the load balancer.\n          type: string\n        Value:\n          description: The value of the tag.\n          type: string\n      type: object\n    Location:\n      additionalProperties: false\n      description: Information about the DirectLink location.\n      example:\n        Code: Code\n        Name: Name\n      properties:\n        Code:\n          description: The location code, to be set as the `Location` parameter of\n            the *CreateDirectLink* method when creating a DirectLink.\n          type: string\n        Name:\n          description: The name and description of the location, corresponding to\n            a datacenter.\n          type: string\n      type: object\n    Log:\n      additionalProperties: false\n      description: Information about the log.\n      example:\n        QueryAccessKey: QueryAccessKey\n        QueryApiName: QueryApiName\n        QueryDate: 2000-01-23\n        AccountId: AccountId\n        QueryPayloadSize: 1\n        RequestId: RequestId\n        QueryUserAgent: QueryUserAgent\n        QueryApiVersion: QueryApiVersion\n        QueryHeaderSize: 6\n        QueryCallName: QueryCallName\n        CallDuration: 0\n        QueryPayloadRaw: QueryPayloadRaw\n        QueryIpAddress: QueryIpAddress\n        ResponseSize: 5\n        ResponseStatusCode: 5\n        QueryHeaderRaw: QueryHeaderRaw\n      properties:\n        AccountId:\n          description: The account ID of the logged call.\n          type: string\n        CallDuration:\n          description: The duration of the logged call, in microseconds.\n          type: integer\n        QueryAccessKey:\n          description: The access key used for the logged call.\n          type: string\n        QueryApiName:\n          description: The name of the API used by the logged call (always `oapi`\n            for the OUTSCALE API).\n          type: string\n        QueryApiVersion:\n          description: The version of the API used by the logged call.\n          type: string\n        QueryCallName:\n          description: The name of the logged call.\n          type: string\n        QueryDate:\n          description: The date of the logged call, in ISO 8601 format.\n          format: date\n          type: string\n        QueryHeaderRaw:\n          description: The raw header of the HTTP request of the logged call.\n          type: string\n        QueryHeaderSize:\n          description: The size of the raw header of the HTTP request of the logged\n            call, in bytes.\n          type: integer\n        QueryIpAddress:\n          description: The IP used for the logged call.\n          type: string\n        QueryPayloadRaw:\n          description: The raw payload of the HTTP request of the logged call.\n          type: string\n        QueryPayloadSize:\n          description: The size of the raw payload of the HTTP request of the logged\n            call, in bytes.\n          type: integer\n        QueryUserAgent:\n          description: The user agent of the HTTP request of the logged call.\n          type: string\n        RequestId:\n          description: The request ID provided in the response of the logged call.\n          type: string\n        ResponseSize:\n          description: The size of the response of the logged call, in bytes.\n          type: integer\n        ResponseStatusCode:\n          description: The HTTP status code of the response of the logged call.\n          type: integer\n      type: object\n    MaintenanceEvent:\n      additionalProperties: false\n      description: Information about the maintenance event.\n      example:\n        Description: Description\n        NotAfter: 2000-01-23\n        NotBefore: 2000-01-23\n        Code: Code\n      properties:\n        Code:\n          description: The code of the event (`system-reboot` \\| `system-maintenance`).\n          type: string\n        Description:\n          description: The description of the event.\n          type: string\n        NotAfter:\n          description: The latest scheduled end time for the event.\n          format: date\n          type: string\n        NotBefore:\n          description: The earliest scheduled start time for the event.\n          format: date\n          type: string\n      type: object\n    NatService:\n      additionalProperties: false\n      description: Information about the NAT service.\n      example:\n        NatServiceId: NatServiceId\n        NetId: NetId\n        PublicIps:\n        - PublicIp: PublicIp\n          PublicIpId: PublicIpId\n        - PublicIp: PublicIp\n          PublicIpId: PublicIpId\n        State: State\n        SubnetId: SubnetId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        NatServiceId:\n          description: The ID of the NAT service.\n          type: string\n        NetId:\n          description: The ID of the Net in which the NAT service is.\n          type: string\n        PublicIps:\n          description: Information about the public IP or IPs associated with the\n            NAT service.\n          items:\n            $ref: '#/components/schemas/PublicIpLight'\n          type: array\n        State:\n          description: The state of the NAT service (`pending` \\| `available` \\| `deleting`\n            \\| `deleted`).\n          type: string\n        SubnetId:\n          description: The ID of the Subnet in which the NAT service is.\n          type: string\n        Tags:\n          description: One or more tags associated with the NAT service.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    Net:\n      additionalProperties: false\n      description: Information about the Net.\n      example:\n        IpRange: IpRange\n        Tenancy: Tenancy\n        DhcpOptionsSetId: DhcpOptionsSetId\n        NetId: NetId\n        State: State\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        DhcpOptionsSetId:\n          description: The ID of the DHCP options set (or `default` if you want to\n            associate the default one).\n          type: string\n        IpRange:\n          description: The IP range for the Net, in CIDR notation (for example, `10.0.0.0/16`).\n          type: string\n        NetId:\n          description: The ID of the Net.\n          type: string\n        State:\n          description: The state of the Net (`pending` \\| `available`).\n          type: string\n        Tags:\n          description: One or more tags associated with the Net.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        Tenancy:\n          description: The VM tenancy in a Net.\n          type: string\n      type: object\n    NetAccessPoint:\n      additionalProperties: false\n      description: Information about the Net access point.\n      example:\n        NetId: NetId\n        RouteTableIds:\n        - RouteTableIds\n        - RouteTableIds\n        ServiceName: ServiceName\n        State: State\n        NetAccessPointId: NetAccessPointId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        NetAccessPointId:\n          description: The ID of the Net access point.\n          type: string\n        NetId:\n          description: The ID of the Net with which the Net access point is associated.\n          type: string\n        RouteTableIds:\n          description: The ID of the route tables associated with the Net access point.\n          items:\n            type: string\n          type: array\n        ServiceName:\n          description: The name of the service with which the Net access point is\n            associated.\n          type: string\n        State:\n          description: The state of the Net access point (`pending` \\| `available`\n            \\| `deleting` \\| `deleted`).\n          type: string\n        Tags:\n          description: One or more tags associated with the Net access point.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    NetPeering:\n      additionalProperties: false\n      description: Information about the Net peering connection.\n      example:\n        SourceNet:\n          IpRange: IpRange\n          NetId: NetId\n          AccountId: AccountId\n        State:\n          Message: Message\n          Name: Name\n        NetPeeringId: NetPeeringId\n        AccepterNet:\n          IpRange: IpRange\n          NetId: NetId\n          AccountId: AccountId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        AccepterNet:\n          $ref: '#/components/schemas/AccepterNet'\n        NetPeeringId:\n          description: The ID of the Net peering connection.\n          type: string\n        SourceNet:\n          $ref: '#/components/schemas/SourceNet'\n        State:\n          $ref: '#/components/schemas/NetPeeringState'\n        Tags:\n          description: One or more tags associated with the Net peering connection.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    NetPeeringState:\n      additionalProperties: false\n      description: Information about the state of the Net peering connection.\n      example:\n        Message: Message\n        Name: Name\n      properties:\n        Message:\n          description: Additional information about the state of the Net peering connection.\n          type: string\n        Name:\n          description: The state of the Net peering connection (`pending-acceptance`\n            \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).\n          type: string\n      type: object\n    NetToVirtualGatewayLink:\n      additionalProperties: false\n      description: Information about the attachment.\n      example:\n        NetId: NetId\n        State: State\n      properties:\n        NetId:\n          description: The ID of the Net to which the virtual gateway is attached.\n          type: string\n        State:\n          description: The state of the attachment (`attaching` \\| `attached` \\| `detaching`\n            \\| `detached`).\n          type: string\n      type: object\n    Nic:\n      additionalProperties: false\n      description: Information about the NIC.\n      example:\n        SecurityGroups:\n        - SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        - SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        LinkPublicIp:\n          PublicIp: PublicIp\n          LinkPublicIpId: LinkPublicIpId\n          PublicIpId: PublicIpId\n          PublicIpAccountId: PublicIpAccountId\n          PublicDnsName: PublicDnsName\n        NetId: NetId\n        AccountId: AccountId\n        Description: Description\n        PrivateDnsName: PrivateDnsName\n        LinkNic:\n          DeviceNumber: 0\n          DeleteOnVmDeletion: true\n          VmAccountId: VmAccountId\n          LinkNicId: LinkNicId\n          State: State\n          VmId: VmId\n        SubnetId: SubnetId\n        MacAddress: MacAddress\n        SubregionName: SubregionName\n        IsSourceDestChecked: true\n        PrivateIps:\n        - LinkPublicIp:\n            PublicIp: PublicIp\n            LinkPublicIpId: LinkPublicIpId\n            PublicIpId: PublicIpId\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          PrivateDnsName: PrivateDnsName\n          PrivateIp: PrivateIp\n          IsPrimary: true\n        - LinkPublicIp:\n            PublicIp: PublicIp\n            LinkPublicIpId: LinkPublicIpId\n            PublicIpId: PublicIpId\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          PrivateDnsName: PrivateDnsName\n          PrivateIp: PrivateIp\n          IsPrimary: true\n        State: State\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n        NicId: NicId\n      properties:\n        AccountId:\n          description: The account ID of the owner of the NIC.\n          type: string\n        Description:\n          description: The description of the NIC.\n          type: string\n        IsSourceDestChecked:\n          description: (Net only) If true, the source/destination check is enabled.\n            If false, it is disabled. This value must be false for a NAT VM to perform\n            network address translation (NAT) in a Net.\n          type: boolean\n        LinkNic:\n          $ref: '#/components/schemas/LinkNic'\n        LinkPublicIp:\n          $ref: '#/components/schemas/LinkPublicIp'\n        MacAddress:\n          description: The Media Access Control (MAC) address of the NIC.\n          type: string\n        NetId:\n          description: The ID of the Net for the NIC.\n          type: string\n        NicId:\n          description: The ID of the NIC.\n          type: string\n        PrivateDnsName:\n          description: The name of the private DNS.\n          type: string\n        PrivateIps:\n          description: The private IPs of the NIC.\n          items:\n            $ref: '#/components/schemas/PrivateIp'\n          type: array\n        SecurityGroups:\n          description: One or more IDs of security groups for the NIC.\n          items:\n            $ref: '#/components/schemas/SecurityGroupLight'\n          type: array\n        State:\n          description: The state of the NIC (`available` \\| `attaching` \\| `in-use`\n            \\| `detaching`).\n          type: string\n        SubnetId:\n          description: The ID of the Subnet.\n          type: string\n        SubregionName:\n          description: The Subregion in which the NIC is located.\n          type: string\n        Tags:\n          description: One or more tags associated with the NIC.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    NicForVmCreation:\n      additionalProperties: false\n      description: Information about the network interface card (NIC) when creating\n        a virtual machine (VM).\n      example:\n        SecondaryPrivateIpCount: 5\n        DeviceNumber: 1\n        DeleteOnVmDeletion: true\n        Description: Description\n        PrivateIps:\n        - PrivateIp: PrivateIp\n          IsPrimary: true\n        - PrivateIp: PrivateIp\n          IsPrimary: true\n        SubnetId: SubnetId\n        SecurityGroupIds:\n        - SecurityGroupIds\n        - SecurityGroupIds\n        NicId: NicId\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the NIC is deleted when the VM is terminated. You\n            can specify this parameter only for a new NIC. To modify this value for\n            an existing NIC, see [UpdateNic](#updatenic).\n          type: boolean\n        Description:\n          description: The description of the NIC, if you are creating a NIC when\n            creating the VM.\n          type: string\n        DeviceNumber:\n          description: The index of the VM device for the NIC attachment (between\n            `0` and `7`, both included). This parameter is required if you create\n            a NIC when creating the VM.\n          type: integer\n        NicId:\n          description: The ID of the NIC, if you are attaching an existing NIC when\n            creating a VM.\n          type: string\n        PrivateIps:\n          description: One or more private IPs to assign to the NIC, if you create\n            a NIC when creating a VM. Only one private IP can be the primary private\n            IP.\n          items:\n            $ref: '#/components/schemas/PrivateIpLight'\n          type: array\n        SecondaryPrivateIpCount:\n          description: The number of secondary private IPs, if you create a NIC when\n            creating a VM. This parameter cannot be specified if you specified more\n            than one private IP in the `PrivateIps` parameter.\n          type: integer\n        SecurityGroupIds:\n          description: One or more IDs of security groups for the NIC, if you create\n            a NIC when creating a VM.\n          items:\n            type: string\n          type: array\n        SubnetId:\n          description: The ID of the Subnet for the NIC, if you create a NIC when\n            creating a VM. This parameter is required if you create a NIC when creating\n            the VM.\n          type: string\n      type: object\n    NicLight:\n      additionalProperties: false\n      description: Information about the network interface card (NIC).\n      example:\n        SecurityGroups:\n        - SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        - SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        LinkPublicIp:\n          PublicIp: PublicIp\n          PublicIpAccountId: PublicIpAccountId\n          PublicDnsName: PublicDnsName\n        NetId: NetId\n        AccountId: AccountId\n        Description: Description\n        PrivateDnsName: PrivateDnsName\n        LinkNic:\n          DeviceNumber: 6\n          DeleteOnVmDeletion: true\n          LinkNicId: LinkNicId\n          State: State\n        SubnetId: SubnetId\n        MacAddress: MacAddress\n        IsSourceDestChecked: true\n        PrivateIps:\n        - LinkPublicIp:\n            PublicIp: PublicIp\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          PrivateDnsName: PrivateDnsName\n          PrivateIp: PrivateIp\n          IsPrimary: true\n        - LinkPublicIp:\n            PublicIp: PublicIp\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          PrivateDnsName: PrivateDnsName\n          PrivateIp: PrivateIp\n          IsPrimary: true\n        State: State\n        NicId: NicId\n      properties:\n        AccountId:\n          description: The account ID of the owner of the NIC.\n          type: string\n        Description:\n          description: The description of the NIC.\n          type: string\n        IsSourceDestChecked:\n          description: (Net only) If true, the source/destination check is enabled.\n            If false, it is disabled. This value must be false for a NAT VM to perform\n            network address translation (NAT) in a Net.\n          type: boolean\n        LinkNic:\n          $ref: '#/components/schemas/LinkNicLight'\n        LinkPublicIp:\n          $ref: '#/components/schemas/LinkPublicIpLightForVm'\n        MacAddress:\n          description: The Media Access Control (MAC) address of the NIC.\n          type: string\n        NetId:\n          description: The ID of the Net for the NIC.\n          type: string\n        NicId:\n          description: The ID of the NIC.\n          type: string\n        PrivateDnsName:\n          description: The name of the private DNS.\n          type: string\n        PrivateIps:\n          description: The private IP or IPs of the NIC.\n          items:\n            $ref: '#/components/schemas/PrivateIpLightForVm'\n          type: array\n        SecurityGroups:\n          description: One or more IDs of security groups for the NIC.\n          items:\n            $ref: '#/components/schemas/SecurityGroupLight'\n          type: array\n        State:\n          description: The state of the NIC (`available` \\| `attaching` \\| `in-use`\n            \\| `detaching`).\n          type: string\n        SubnetId:\n          description: The ID of the Subnet for the NIC.\n          type: string\n      type: object\n    OsuApiKey:\n      additionalProperties: false\n      description: Information about the OOS API key.\n      example:\n        SecretKey: SecretKey\n        ApiKeyId: ApiKeyId\n      properties:\n        ApiKeyId:\n          description: The API key of the OOS account that enables you to access the\n            bucket.\n          type: string\n        SecretKey:\n          description: The secret key of the OOS account that enables you to access\n            the bucket.\n          type: string\n      type: object\n    OsuExportImageExportTask:\n      additionalProperties: false\n      description: Information about the OMI export task.\n      example:\n        OsuManifestUrl: OsuManifestUrl\n        OsuBucket: OsuBucket\n        OsuPrefix: OsuPrefix\n        DiskImageFormat: DiskImageFormat\n      properties:\n        DiskImageFormat:\n          description: The format of the export disk (`qcow2` \\| `raw`).\n          type: string\n        OsuBucket:\n          description: The name of the OOS bucket the OMI is exported to.\n          type: string\n        OsuManifestUrl:\n          description: The URL of the manifest file.\n          type: string\n        OsuPrefix:\n          description: The prefix for the key of the OOS object corresponding to the\n            image.\n          type: string\n      required:\n      - DiskImageFormat\n      - OsuBucket\n      type: object\n    OsuExportSnapshotExportTask:\n      additionalProperties: false\n      description: Information about the snapshot export task.\n      example:\n        OsuBucket: OsuBucket\n        OsuPrefix: OsuPrefix\n        DiskImageFormat: DiskImageFormat\n      properties:\n        DiskImageFormat:\n          description: The format of the export disk (`qcow2` \\| `raw`).\n          type: string\n        OsuBucket:\n          description: The name of the OOS bucket the snapshot is exported to.\n          type: string\n        OsuPrefix:\n          description: The prefix for the key of the OOS object corresponding to the\n            snapshot.\n          type: string\n      required:\n      - DiskImageFormat\n      - OsuBucket\n      type: object\n    OsuExportToCreate:\n      additionalProperties: false\n      description: Information about the OOS export task to create.\n      example:\n        OsuManifestUrl: OsuManifestUrl\n        OsuApiKey:\n          SecretKey: SecretKey\n          ApiKeyId: ApiKeyId\n        OsuBucket: OsuBucket\n        OsuPrefix: OsuPrefix\n        DiskImageFormat: DiskImageFormat\n      properties:\n        DiskImageFormat:\n          description: The format of the export disk (`qcow2` \\| `raw`).\n          type: string\n        OsuApiKey:\n          $ref: '#/components/schemas/OsuApiKey'\n        OsuBucket:\n          description: The name of the OOS bucket where you want to export the object.\n          type: string\n        OsuManifestUrl:\n          description: The URL of the manifest file.\n          type: string\n        OsuPrefix:\n          description: The prefix for the key of the OOS object.\n          type: string\n      required:\n      - DiskImageFormat\n      - OsuBucket\n      type: object\n    PermissionsOnResource:\n      additionalProperties: false\n      description: Information about the users who have permissions for the resource.\n      example:\n        AccountIds:\n        - AccountIds\n        - AccountIds\n        GlobalPermission: true\n      properties:\n        AccountIds:\n          description: The account ID of one or more users who have permissions for\n            the resource.\n          items:\n            type: string\n          type: array\n        GlobalPermission:\n          description: If true, the resource is public. If false, the resource is\n            private.\n          type: boolean\n      type: object\n    PermissionsOnResourceCreation:\n      additionalProperties: false\n      description: Information about the permissions for the resource.\n      example:\n        Additions:\n          AccountIds:\n          - AccountIds\n          - AccountIds\n          GlobalPermission: true\n        Removals:\n          AccountIds:\n          - AccountIds\n          - AccountIds\n          GlobalPermission: true\n      properties:\n        Additions:\n          $ref: '#/components/schemas/PermissionsOnResource'\n        Removals:\n          $ref: '#/components/schemas/PermissionsOnResource'\n      type: object\n    Phase1Options:\n      additionalProperties: false\n      description: 'Information about Phase 1 of the Internet Key Exchange (IKE) negotiation.\n        When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. '\n      example:\n        DpdTimeoutSeconds: 6\n        StartupAction: StartupAction\n        Phase1IntegrityAlgorithms:\n        - Phase1IntegrityAlgorithms\n        - Phase1IntegrityAlgorithms\n        Phase1LifetimeSeconds: 5\n        Phase1EncryptionAlgorithms:\n        - Phase1EncryptionAlgorithms\n        - Phase1EncryptionAlgorithms\n        DpdTimeoutAction: DpdTimeoutAction\n        ReplayWindowSize: 5\n        IkeVersions:\n        - IkeVersions\n        - IkeVersions\n        Phase1DhGroupNumbers:\n        - 1\n        - 1\n      properties:\n        DpdTimeoutAction:\n          description: The action to carry out after a Dead Peer Detection (DPD) timeout\n            occurs.\n          type: string\n        DpdTimeoutSeconds:\n          description: The maximum waiting time for a Dead Peer Detection (DPD) response\n            before considering the peer as dead, in seconds.\n          type: integer\n        IkeVersions:\n          description: The Internet Key Exchange (IKE) versions allowed for the VPN\n            tunnel.\n          items:\n            type: string\n          type: array\n        Phase1DhGroupNumbers:\n          description: The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel\n            for phase 1.\n          items:\n            type: integer\n          type: array\n        Phase1EncryptionAlgorithms:\n          description: The encryption algorithms allowed for the VPN tunnel for phase\n            1.\n          items:\n            type: string\n          type: array\n        Phase1IntegrityAlgorithms:\n          description: The integrity algorithms allowed for the VPN tunnel for phase\n            1.\n          items:\n            type: string\n          type: array\n        Phase1LifetimeSeconds:\n          description: The lifetime for phase 1 of the IKE negotiation process, in\n            seconds.\n          type: integer\n        ReplayWindowSize:\n          description: The number of packets in an IKE replay window.\n          type: integer\n        StartupAction:\n          description: The action to carry out when establishing tunnels for a VPN\n            connection.\n          type: string\n      type: object\n    Phase2Options:\n      additionalProperties: false\n      description: 'Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. '\n      example:\n        Phase2EncryptionAlgorithms:\n        - Phase2EncryptionAlgorithms\n        - Phase2EncryptionAlgorithms\n        Phase2DhGroupNumbers:\n        - 2\n        - 2\n        Phase2LifetimeSeconds: 7\n        Phase2IntegrityAlgorithms:\n        - Phase2IntegrityAlgorithms\n        - Phase2IntegrityAlgorithms\n        PreSharedKey: PreSharedKey\n      properties:\n        Phase2DhGroupNumbers:\n          description: The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel\n            for phase 2.\n          items:\n            type: integer\n          type: array\n        Phase2EncryptionAlgorithms:\n          description: The encryption algorithms allowed for the VPN tunnel for phase\n            2.\n          items:\n            type: string\n          type: array\n        Phase2IntegrityAlgorithms:\n          description: The integrity algorithms allowed for the VPN tunnel for phase\n            2.\n          items:\n            type: string\n          type: array\n        Phase2LifetimeSeconds:\n          description: The lifetime for phase 2 of the Internet Key Exchange (IKE)\n            negociation process, in seconds.\n          type: integer\n        PreSharedKey:\n          description: The pre-shared key to establish the initial authentication\n            between the client gateway and the virtual gateway. This key can contain\n            any character except line breaks and double quotes (\u0026quot;).\n          type: string\n      type: object\n    Placement:\n      additionalProperties: false\n      description: Information about the placement of the VM.\n      example:\n        Tenancy: Tenancy\n        SubregionName: SubregionName\n      properties:\n        SubregionName:\n          description: The name of the Subregion. If you specify this parameter, you\n            must not specify the `Nics` parameter.\n          type: string\n        Tenancy:\n          description: The tenancy of the VM (`default` \\| `dedicated`).\n          type: string\n      type: object\n    PrivateIp:\n      additionalProperties: false\n      description: Information about the private IP.\n      example:\n        LinkPublicIp:\n          PublicIp: PublicIp\n          LinkPublicIpId: LinkPublicIpId\n          PublicIpId: PublicIpId\n          PublicIpAccountId: PublicIpAccountId\n          PublicDnsName: PublicDnsName\n        PrivateDnsName: PrivateDnsName\n        PrivateIp: PrivateIp\n        IsPrimary: true\n      properties:\n        IsPrimary:\n          description: If true, the IP is the primary private IP of the NIC.\n          type: boolean\n        LinkPublicIp:\n          $ref: '#/components/schemas/LinkPublicIp'\n        PrivateDnsName:\n          description: The name of the private DNS.\n          type: string\n        PrivateIp:\n          description: The private IP of the NIC.\n          type: string\n      type: object\n    PrivateIpLight:\n      additionalProperties: false\n      description: Information about the private IP.\n      example:\n        PrivateIp: PrivateIp\n        IsPrimary: true\n      properties:\n        IsPrimary:\n          description: If true, the IP is the primary private IP of the NIC.\n          type: boolean\n        PrivateIp:\n          description: The private IP of the NIC.\n          type: string\n      type: object\n    PrivateIpLightForVm:\n      additionalProperties: false\n      description: Information about the private IP of the NIC.\n      example:\n        LinkPublicIp:\n          PublicIp: PublicIp\n          PublicIpAccountId: PublicIpAccountId\n          PublicDnsName: PublicDnsName\n        PrivateDnsName: PrivateDnsName\n        PrivateIp: PrivateIp\n        IsPrimary: true\n      properties:\n        IsPrimary:\n          description: If true, the IP is the primary private IP of the NIC.\n          type: boolean\n        LinkPublicIp:\n          $ref: '#/components/schemas/LinkPublicIpLightForVm'\n        PrivateDnsName:\n          description: The name of the private DNS.\n          type: string\n        PrivateIp:\n          description: The private IP.\n          type: string\n      type: object\n    ProductType:\n      additionalProperties: false\n      description: Information about the product type.\n      example:\n        Description: Description\n        Vendor: Vendor\n        ProductTypeId: ProductTypeId\n      properties:\n        Description:\n          description: The description of the product type.\n          type: string\n        ProductTypeId:\n          description: The ID of the product type.\n          type: string\n        Vendor:\n          description: The vendor of the product type.\n          type: string\n      type: object\n    PublicIp:\n      additionalProperties: false\n      description: Information about the public IP.\n      example:\n        NicAccountId: NicAccountId\n        PrivateIp: PrivateIp\n        PublicIp: PublicIp\n        LinkPublicIpId: LinkPublicIpId\n        PublicIpId: PublicIpId\n        VmId: VmId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n        NicId: NicId\n      properties:\n        LinkPublicIpId:\n          description: (Required in a Net) The ID representing the association of\n            the public IP with the VM or the NIC.\n          type: string\n        NicAccountId:\n          description: The account ID of the owner of the NIC.\n          type: string\n        NicId:\n          description: The ID of the NIC the public IP is associated with (if any).\n          type: string\n        PrivateIp:\n          description: The private IP associated with the public IP.\n          type: string\n        PublicIp:\n          description: The public IP.\n          type: string\n        PublicIpId:\n          description: The allocation ID of the public IP.\n          type: string\n        Tags:\n          description: One or more tags associated with the public IP.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        VmId:\n          description: The ID of the VM the public IP is associated with (if any).\n          type: string\n      type: object\n    PublicIpLight:\n      additionalProperties: false\n      description: Information about the public IP.\n      example:\n        PublicIp: PublicIp\n        PublicIpId: PublicIpId\n      properties:\n        PublicIp:\n          description: The public IP associated with the NAT service.\n          type: string\n        PublicIpId:\n          description: The allocation ID of the public IP associated with the NAT\n            service.\n          type: string\n      type: object\n    Quota:\n      additionalProperties: false\n      description: Information about the quota.\n      example:\n        QuotaCollection: QuotaCollection\n        AccountId: AccountId\n        Description: Description\n        UsedValue: 6\n        MaxValue: 0\n        Name: Name\n        ShortDescription: ShortDescription\n      properties:\n        AccountId:\n          description: The account ID of the owner of the quotas.\n          type: string\n        Description:\n          description: The description of the quota.\n          type: string\n        MaxValue:\n          description: The maximum value of the quota for the OUTSCALE user account\n            (if there is no limit, `0`).\n          type: integer\n        Name:\n          description: The unique name of the quota.\n          type: string\n        QuotaCollection:\n          description: The group name of the quota.\n          type: string\n        ShortDescription:\n          description: The description of the quota.\n          type: string\n        UsedValue:\n          description: The limit value currently used by the OUTSCALE user account.\n          type: integer\n      type: object\n    QuotaTypes:\n      additionalProperties: false\n      description: One or more quotas.\n      example:\n        Quotas:\n        - QuotaCollection: QuotaCollection\n          AccountId: AccountId\n          Description: Description\n          UsedValue: 6\n          MaxValue: 0\n          Name: Name\n          ShortDescription: ShortDescription\n        - QuotaCollection: QuotaCollection\n          AccountId: AccountId\n          Description: Description\n          UsedValue: 6\n          MaxValue: 0\n          Name: Name\n          ShortDescription: ShortDescription\n        QuotaType: QuotaType\n      properties:\n        QuotaType:\n          description: The resource ID if it is a resource-specific quota, `global`\n            if it is not.\n          type: string\n        Quotas:\n          description: One or more quotas associated with the user.\n          items:\n            $ref: '#/components/schemas/Quota'\n          type: array\n      type: object\n    ReadAccessKeysRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          AccessKeyIds:\n          - AccessKeyIds\n          - AccessKeyIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersAccessKeys'\n      type: object\n    ReadAccessKeysResponse:\n      additionalProperties: false\n      example:\n        AccessKeys:\n        - CreationDate: CreationDate\n          ExpirationDate: ExpirationDate\n          AccessKeyId: AccessKeyId\n          State: State\n          LastModificationDate: LastModificationDate\n        - CreationDate: CreationDate\n          ExpirationDate: ExpirationDate\n          AccessKeyId: AccessKeyId\n          State: State\n          LastModificationDate: LastModificationDate\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        AccessKeys:\n          description: A list of access keys.\n          items:\n            $ref: '#/components/schemas/AccessKey'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadAccountsRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadAccountsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Accounts:\n        - AccountId: AccountId\n          Email: Email\n          FirstName: FirstName\n          StateProvince: StateProvince\n          ZipCode: ZipCode\n          City: City\n          CustomerId: CustomerId\n          JobTitle: JobTitle\n          VatNumber: VatNumber\n          CompanyName: CompanyName\n          MobileNumber: MobileNumber\n          AdditionalEmails:\n          - AdditionalEmails\n          - AdditionalEmails\n          Country: Country\n          PhoneNumber: PhoneNumber\n          LastName: LastName\n        - AccountId: AccountId\n          Email: Email\n          FirstName: FirstName\n          StateProvince: StateProvince\n          ZipCode: ZipCode\n          City: City\n          CustomerId: CustomerId\n          JobTitle: JobTitle\n          VatNumber: VatNumber\n          CompanyName: CompanyName\n          MobileNumber: MobileNumber\n          AdditionalEmails:\n          - AdditionalEmails\n          - AdditionalEmails\n          Country: Country\n          PhoneNumber: PhoneNumber\n          LastName: LastName\n      properties:\n        Accounts:\n          description: The list of the accounts.\n          items:\n            $ref: '#/components/schemas/Account'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadAdminPasswordRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        VmId: VmId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VmId:\n          description: The ID of the VM.\n          type: string\n      required:\n      - VmId\n      type: object\n    ReadAdminPasswordResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        VmId: VmId\n        AdminPassword: AdminPassword\n      properties:\n        AdminPassword:\n          description: The password of the VM. After the first boot, returns an empty\n            string.\n          type: string\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VmId:\n          description: The ID of the VM.\n          type: string\n      type: object\n    ReadApiAccessPolicyRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadApiAccessPolicyResponse:\n      additionalProperties: false\n      example:\n        ApiAccessPolicy:\n          RequireTrustedEnv: true\n          MaxAccessKeyExpirationSeconds: 0\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ApiAccessPolicy:\n          $ref: '#/components/schemas/ApiAccessPolicy'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadApiAccessRulesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          Descriptions:\n          - Descriptions\n          - Descriptions\n          ApiAccessRuleIds:\n          - ApiAccessRuleIds\n          - ApiAccessRuleIds\n          CaIds:\n          - CaIds\n          - CaIds\n          Cns:\n          - Cns\n          - Cns\n          IpRanges:\n          - IpRanges\n          - IpRanges\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersApiAccessRule'\n      type: object\n    ReadApiAccessRulesResponse:\n      additionalProperties: false\n      example:\n        ApiAccessRules:\n        - Description: Description\n          ApiAccessRuleId: ApiAccessRuleId\n          CaIds:\n          - CaIds\n          - CaIds\n          Cns:\n          - Cns\n          - Cns\n          IpRanges:\n          - IpRanges\n          - IpRanges\n        - Description: Description\n          ApiAccessRuleId: ApiAccessRuleId\n          CaIds:\n          - CaIds\n          - CaIds\n          Cns:\n          - Cns\n          - Cns\n          IpRanges:\n          - IpRanges\n          - IpRanges\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ApiAccessRules:\n          description: A list of API access rules.\n          items:\n            $ref: '#/components/schemas/ApiAccessRule'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadApiLogsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          QueryCallNames:\n          - QueryCallNames\n          - QueryCallNames\n          QueryUserAgents:\n          - QueryUserAgents\n          - QueryUserAgents\n          ResponseStatusCodes:\n          - 0\n          - 0\n          QueryDateAfter: 2000-01-23\n          QueryDateBefore: 2000-01-23\n          QueryIpAddresses:\n          - QueryIpAddresses\n          - QueryIpAddresses\n          QueryAccessKeys:\n          - QueryAccessKeys\n          - QueryAccessKeys\n          RequestIds:\n          - RequestIds\n          - RequestIds\n          QueryApiNames:\n          - QueryApiNames\n          - QueryApiNames\n        NextPageToken: NextPageToken\n        DryRun: true\n        ResultsPerPage: 6\n        With:\n          QueryAccessKey: true\n          QueryApiName: true\n          QueryDate: true\n          AccountId: true\n          QueryPayloadSize: true\n          RequestId: true\n          QueryUserAgent: true\n          QueryApiVersion: true\n          QueryHeaderSize: true\n          QueryCallName: true\n          CallDuration: true\n          QueryPayloadRaw: true\n          QueryIpAddress: true\n          ResponseSize: true\n          ResponseStatusCode: true\n          QueryHeaderRaw: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersApiLog'\n        NextPageToken:\n          description: The token to request the next page of results.\n          type: string\n        ResultsPerPage:\n          default: 100\n          description: The maximum number of logs returned in a single response (between\n            `1`and `1000`, both included). By default, `100`.\n          type: integer\n        With:\n          $ref: '#/components/schemas/With'\n      type: object\n    ReadApiLogsResponse:\n      additionalProperties: false\n      example:\n        NextPageToken: NextPageToken\n        ResponseContext:\n          RequestId: RequestId\n        Logs:\n        - QueryAccessKey: QueryAccessKey\n          QueryApiName: QueryApiName\n          QueryDate: 2000-01-23\n          AccountId: AccountId\n          QueryPayloadSize: 1\n          RequestId: RequestId\n          QueryUserAgent: QueryUserAgent\n          QueryApiVersion: QueryApiVersion\n          QueryHeaderSize: 6\n          QueryCallName: QueryCallName\n          CallDuration: 0\n          QueryPayloadRaw: QueryPayloadRaw\n          QueryIpAddress: QueryIpAddress\n          ResponseSize: 5\n          ResponseStatusCode: 5\n          QueryHeaderRaw: QueryHeaderRaw\n        - QueryAccessKey: QueryAccessKey\n          QueryApiName: QueryApiName\n          QueryDate: 2000-01-23\n          AccountId: AccountId\n          QueryPayloadSize: 1\n          RequestId: RequestId\n          QueryUserAgent: QueryUserAgent\n          QueryApiVersion: QueryApiVersion\n          QueryHeaderSize: 6\n          QueryCallName: QueryCallName\n          CallDuration: 0\n          QueryPayloadRaw: QueryPayloadRaw\n          QueryIpAddress: QueryIpAddress\n          ResponseSize: 5\n          ResponseStatusCode: 5\n          QueryHeaderRaw: QueryHeaderRaw\n      properties:\n        Logs:\n          description: Information about one or more logs.\n          items:\n            $ref: '#/components/schemas/Log'\n          type: array\n        NextPageToken:\n          description: The token to request the next page of results.\n          type: string\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadCasRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          CaFingerprints:\n          - CaFingerprints\n          - CaFingerprints\n          Descriptions:\n          - Descriptions\n          - Descriptions\n          CaIds:\n          - CaIds\n          - CaIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersCa'\n      type: object\n    ReadCasResponse:\n      additionalProperties: false\n      example:\n        Cas:\n        - Description: Description\n          CaFingerprint: CaFingerprint\n          CaId: CaId\n        - Description: Description\n          CaFingerprint: CaFingerprint\n          CaId: CaId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        Cas:\n          description: Information about one or more CAs.\n          items:\n            $ref: '#/components/schemas/Ca'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadCatalogRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadCatalogResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Catalog:\n          Entries:\n          - Type: Type\n            UnitPrice: 0.8008282\n            Category: Category\n            Service: Service\n            Title: Title\n            Flags: Flags\n            Operation: Operation\n            SubregionName: SubregionName\n          - Type: Type\n            UnitPrice: 0.8008282\n            Category: Category\n            Service: Service\n            Title: Title\n            Flags: Flags\n            Operation: Operation\n            SubregionName: SubregionName\n      properties:\n        Catalog:\n          $ref: '#/components/schemas/Catalog'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadClientGatewaysRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          ConnectionTypes:\n          - ConnectionTypes\n          - ConnectionTypes\n          PublicIps:\n          - PublicIps\n          - PublicIps\n          ClientGatewayIds:\n          - ClientGatewayIds\n          - ClientGatewayIds\n          BgpAsns:\n          - 0\n          - 0\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersClientGateway'\n      type: object\n    ReadClientGatewaysResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        ClientGateways:\n        - ConnectionType: ConnectionType\n          ClientGatewayId: ClientGatewayId\n          PublicIp: PublicIp\n          State: State\n          BgpAsn: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - ConnectionType: ConnectionType\n          ClientGatewayId: ClientGatewayId\n          PublicIp: PublicIp\n          State: State\n          BgpAsn: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ClientGateways:\n          description: Information about one or more client gateways.\n          items:\n            $ref: '#/components/schemas/ClientGateway'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadConsoleOutputRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        VmId: VmId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VmId:\n          description: The ID of the VM.\n          type: string\n      required:\n      - VmId\n      type: object\n    ReadConsoleOutputResponse:\n      additionalProperties: false\n      example:\n        ConsoleOutput: ConsoleOutput\n        ResponseContext:\n          RequestId: RequestId\n        VmId: VmId\n      properties:\n        ConsoleOutput:\n          description: The Base64-encoded output of the console. If a command line\n            tool is used, the output is decoded by the tool.\n          type: string\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VmId:\n          description: The ID of the VM.\n          type: string\n      type: object\n    ReadConsumptionAccountRequest:\n      additionalProperties: false\n      example:\n        Overall: true\n        DryRun: true\n        FromDate: FromDate\n        ToDate: ToDate\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        FromDate:\n          description: The beginning of the time period, in ISO 8601 date-time format\n            (for example, `2017-06-14` or `2017-06-14T00:00:00Z`).\n          format: datetime\n          type: string\n        Overall:\n          default: true\n          description: By default or if true, returns either the overall consumption\n            of your paying account and all linked accounts (if the account that sends\n            this request is a paying account) or returns nothing (if the account that\n            sends this request is a linked account). If false, returns only the consumption\n            of the specific account that sends this request.\n          type: boolean\n        ToDate:\n          description: The end of the time period, in ISO 8601 date-time format (for\n            example, `2017-06-30` or `2017-06-30T00:00:00Z`).\n          format: datetime\n          type: string\n      required:\n      - FromDate\n      - ToDate\n      type: object\n    ReadConsumptionAccountResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        ConsumptionEntries:\n        - Type: Type\n          AccountId: AccountId\n          Category: Category\n          Value: 0.8008281904610115\n          Service: Service\n          Title: Title\n          FromDate: FromDate\n          ToDate: ToDate\n          Operation: Operation\n          PayingAccountId: PayingAccountId\n          SubregionName: SubregionName\n        - Type: Type\n          AccountId: AccountId\n          Category: Category\n          Value: 0.8008281904610115\n          Service: Service\n          Title: Title\n          FromDate: FromDate\n          ToDate: ToDate\n          Operation: Operation\n          PayingAccountId: PayingAccountId\n          SubregionName: SubregionName\n      properties:\n        ConsumptionEntries:\n          description: Information about the resources consumed during the specified\n            time period.\n          items:\n            $ref: '#/components/schemas/ConsumptionEntry'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadDhcpOptionsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          LogServers:\n          - LogServers\n          - LogServers\n          NtpServers:\n          - NtpServers\n          - NtpServers\n          Default: true\n          DomainNames:\n          - DomainNames\n          - DomainNames\n          DomainNameServers:\n          - DomainNameServers\n          - DomainNameServers\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n          DhcpOptionsSetIds:\n          - DhcpOptionsSetIds\n          - DhcpOptionsSetIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersDhcpOptions'\n      type: object\n    ReadDhcpOptionsResponse:\n      additionalProperties: false\n      example:\n        DhcpOptionsSets:\n        - DhcpOptionsSetId: DhcpOptionsSetId\n          LogServers:\n          - LogServers\n          - LogServers\n          NtpServers:\n          - NtpServers\n          - NtpServers\n          DomainName: DomainName\n          Default: true\n          DomainNameServers:\n          - DomainNameServers\n          - DomainNameServers\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - DhcpOptionsSetId: DhcpOptionsSetId\n          LogServers:\n          - LogServers\n          - LogServers\n          NtpServers:\n          - NtpServers\n          - NtpServers\n          DomainName: DomainName\n          Default: true\n          DomainNameServers:\n          - DomainNameServers\n          - DomainNameServers\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        DhcpOptionsSets:\n          description: Information about one or more DHCP options sets.\n          items:\n            $ref: '#/components/schemas/DhcpOptionsSet'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadDirectLinkInterfacesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          DirectLinkIds:\n          - DirectLinkIds\n          - DirectLinkIds\n          DirectLinkInterfaceIds:\n          - DirectLinkInterfaceIds\n          - DirectLinkInterfaceIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersDirectLinkInterface'\n      type: object\n    ReadDirectLinkInterfacesResponse:\n      additionalProperties: false\n      example:\n        DirectLinkInterfaces:\n        - ClientPrivateIp: ClientPrivateIp\n          AccountId: AccountId\n          BgpKey: BgpKey\n          DirectLinkInterfaceId: DirectLinkInterfaceId\n          Vlan: 1\n          BgpAsn: 0\n          Mtu: 6\n          InterfaceType: InterfaceType\n          State: State\n          DirectLinkInterfaceName: DirectLinkInterfaceName\n          DirectLinkId: DirectLinkId\n          OutscalePrivateIp: OutscalePrivateIp\n          VirtualGatewayId: VirtualGatewayId\n          Location: Location\n        - ClientPrivateIp: ClientPrivateIp\n          AccountId: AccountId\n          BgpKey: BgpKey\n          DirectLinkInterfaceId: DirectLinkInterfaceId\n          Vlan: 1\n          BgpAsn: 0\n          Mtu: 6\n          InterfaceType: InterfaceType\n          State: State\n          DirectLinkInterfaceName: DirectLinkInterfaceName\n          DirectLinkId: DirectLinkId\n          OutscalePrivateIp: OutscalePrivateIp\n          VirtualGatewayId: VirtualGatewayId\n          Location: Location\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        DirectLinkInterfaces:\n          description: Information about one or more DirectLink interfaces.\n          items:\n            $ref: '#/components/schemas/DirectLinkInterfaces'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadDirectLinksRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          DirectLinkIds:\n          - DirectLinkIds\n          - DirectLinkIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersDirectLink'\n      type: object\n    ReadDirectLinksResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        DirectLinks:\n        - AccountId: AccountId\n          DirectLinkName: DirectLinkName\n          RegionName: RegionName\n          State: State\n          Bandwidth: Bandwidth\n          DirectLinkId: DirectLinkId\n          Location: Location\n        - AccountId: AccountId\n          DirectLinkName: DirectLinkName\n          RegionName: RegionName\n          State: State\n          Bandwidth: Bandwidth\n          DirectLinkId: DirectLinkId\n          Location: Location\n      properties:\n        DirectLinks:\n          description: Information about one or more DirectLinks.\n          items:\n            $ref: '#/components/schemas/DirectLink'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadFlexibleGpuCatalogRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadFlexibleGpuCatalogResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        FlexibleGpuCatalog:\n        - VRam: 1\n          ModelName: ModelName\n          MaxCpu: 0\n          MaxRam: 6\n          Generations:\n          - Generations\n          - Generations\n        - VRam: 1\n          ModelName: ModelName\n          MaxCpu: 0\n          MaxRam: 6\n          Generations:\n          - Generations\n          - Generations\n      properties:\n        FlexibleGpuCatalog:\n          description: Information about one or more fGPUs available in the public\n            catalog.\n          items:\n            $ref: '#/components/schemas/FlexibleGpuCatalog'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadFlexibleGpusRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          DeleteOnVmDeletion: true\n          FlexibleGpuIds:\n          - FlexibleGpuIds\n          - FlexibleGpuIds\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          Generations:\n          - Generations\n          - Generations\n          ModelNames:\n          - ModelNames\n          - ModelNames\n          VmIds:\n          - VmIds\n          - VmIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersFlexibleGpu'\n      type: object\n    ReadFlexibleGpusResponse:\n      additionalProperties: false\n      example:\n        FlexibleGpus:\n        - Generation: Generation\n          DeleteOnVmDeletion: true\n          ModelName: ModelName\n          FlexibleGpuId: FlexibleGpuId\n          State: State\n          VmId: VmId\n          SubregionName: SubregionName\n        - Generation: Generation\n          DeleteOnVmDeletion: true\n          ModelName: ModelName\n          FlexibleGpuId: FlexibleGpuId\n          State: State\n          VmId: VmId\n          SubregionName: SubregionName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        FlexibleGpus:\n          description: Information about one or more fGPUs.\n          items:\n            $ref: '#/components/schemas/FlexibleGpu'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadImageExportTasksRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          TaskIds:\n          - TaskIds\n          - TaskIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersExportTask'\n      type: object\n    ReadImageExportTasksResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        ImageExportTasks:\n        - Comment: Comment\n          Progress: 0\n          TaskId: TaskId\n          State: State\n          ImageId: ImageId\n          OsuExport:\n            OsuManifestUrl: OsuManifestUrl\n            OsuBucket: OsuBucket\n            OsuPrefix: OsuPrefix\n            DiskImageFormat: DiskImageFormat\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - Comment: Comment\n          Progress: 0\n          TaskId: TaskId\n          State: State\n          ImageId: ImageId\n          OsuExport:\n            OsuManifestUrl: OsuManifestUrl\n            OsuBucket: OsuBucket\n            OsuPrefix: OsuPrefix\n            DiskImageFormat: DiskImageFormat\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ImageExportTasks:\n          description: Information about one or more image export tasks.\n          items:\n            $ref: '#/components/schemas/ImageExportTask'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadImagesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          ImageIds:\n          - ImageIds\n          - ImageIds\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          AccountIds:\n          - AccountIds\n          - AccountIds\n          PermissionsToLaunchGlobalPermission: true\n          RootDeviceNames:\n          - RootDeviceNames\n          - RootDeviceNames\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          States:\n          - States\n          - States\n          BlockDeviceMappingDeleteOnVmDeletion: true\n          Descriptions:\n          - Descriptions\n          - Descriptions\n          Hypervisors:\n          - Hypervisors\n          - Hypervisors\n          VirtualizationTypes:\n          - VirtualizationTypes\n          - VirtualizationTypes\n          BlockDeviceMappingSnapshotIds:\n          - BlockDeviceMappingSnapshotIds\n          - BlockDeviceMappingSnapshotIds\n          BlockDeviceMappingVolumeSizes:\n          - 0\n          - 0\n          ImageNames:\n          - ImageNames\n          - ImageNames\n          BlockDeviceMappingVolumeTypes:\n          - BlockDeviceMappingVolumeTypes\n          - BlockDeviceMappingVolumeTypes\n          PermissionsToLaunchAccountIds:\n          - PermissionsToLaunchAccountIds\n          - PermissionsToLaunchAccountIds\n          RootDeviceTypes:\n          - RootDeviceTypes\n          - RootDeviceTypes\n          BlockDeviceMappingDeviceNames:\n          - BlockDeviceMappingDeviceNames\n          - BlockDeviceMappingDeviceNames\n          FileLocations:\n          - FileLocations\n          - FileLocations\n          Tags:\n          - Tags\n          - Tags\n          AccountAliases:\n          - AccountAliases\n          - AccountAliases\n          Architectures:\n          - Architectures\n          - Architectures\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersImage'\n      type: object\n    ReadImagesResponse:\n      additionalProperties: false\n      example:\n        Images:\n        - ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          CreationDate: 2000-01-23\n          PermissionsToLaunch:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountId: AccountId\n          Description: Description\n          RootDeviceName: RootDeviceName\n          Architecture: Architecture\n          BlockDeviceMappings:\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          StateComment:\n            StateCode: StateCode\n            StateMessage: StateMessage\n          AccountAlias: AccountAlias\n          ImageType: ImageType\n          ImageName: ImageName\n          RootDeviceType: RootDeviceType\n          State: State\n          FileLocation: FileLocation\n          ImageId: ImageId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          CreationDate: 2000-01-23\n          PermissionsToLaunch:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountId: AccountId\n          Description: Description\n          RootDeviceName: RootDeviceName\n          Architecture: Architecture\n          BlockDeviceMappings:\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          StateComment:\n            StateCode: StateCode\n            StateMessage: StateMessage\n          AccountAlias: AccountAlias\n          ImageType: ImageType\n          ImageName: ImageName\n          RootDeviceType: RootDeviceType\n          State: State\n          FileLocation: FileLocation\n          ImageId: ImageId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        Images:\n          description: Information about one or more OMIs.\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadInternetServicesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          LinkStates:\n          - LinkStates\n          - LinkStates\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n          InternetServiceIds:\n          - InternetServiceIds\n          - InternetServiceIds\n          LinkNetIds:\n          - LinkNetIds\n          - LinkNetIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersInternetService'\n      type: object\n    ReadInternetServicesResponse:\n      additionalProperties: false\n      example:\n        InternetServices:\n        - NetId: NetId\n          InternetServiceId: InternetServiceId\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - NetId: NetId\n          InternetServiceId: InternetServiceId\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        InternetServices:\n          description: Information about one or more Internet services.\n          items:\n            $ref: '#/components/schemas/InternetService'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadKeypairsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          KeypairNames:\n          - KeypairNames\n          - KeypairNames\n          KeypairFingerprints:\n          - KeypairFingerprints\n          - KeypairFingerprints\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersKeypair'\n      type: object\n    ReadKeypairsResponse:\n      additionalProperties: false\n      example:\n        Keypairs:\n        - KeypairFingerprint: KeypairFingerprint\n          KeypairName: KeypairName\n        - KeypairFingerprint: KeypairFingerprint\n          KeypairName: KeypairName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        Keypairs:\n          description: Information about one or more keypairs.\n          items:\n            $ref: '#/components/schemas/Keypair'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadListenerRulesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          ListenerRuleNames:\n          - ListenerRuleNames\n          - ListenerRuleNames\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersListenerRule'\n      type: object\n    ReadListenerRulesResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        ListenerRules:\n        - Action: Action\n          PathPattern: PathPattern\n          HostNamePattern: HostNamePattern\n          Priority: 1\n          ListenerRuleId: 6\n          ListenerId: 0\n          ListenerRuleName: ListenerRuleName\n          VmIds:\n          - VmIds\n          - VmIds\n        - Action: Action\n          PathPattern: PathPattern\n          HostNamePattern: HostNamePattern\n          Priority: 1\n          ListenerRuleId: 6\n          ListenerId: 0\n          ListenerRuleName: ListenerRuleName\n          VmIds:\n          - VmIds\n          - VmIds\n      properties:\n        ListenerRules:\n          description: The list of the rules to describe.\n          items:\n            $ref: '#/components/schemas/ListenerRule'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadLoadBalancerTagsRequest:\n      additionalProperties: false\n      example:\n        LoadBalancerNames:\n        - LoadBalancerNames\n        - LoadBalancerNames\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerNames:\n          description: One or more load balancer names.\n          items:\n            type: string\n          type: array\n      required:\n      - LoadBalancerNames\n      type: object\n    ReadLoadBalancerTagsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Tags:\n        - LoadBalancerName: LoadBalancerName\n          Value: Value\n          Key: Key\n        - LoadBalancerName: LoadBalancerName\n          Value: Value\n          Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Tags:\n          description: Information about one or more load balancer tags.\n          items:\n            $ref: '#/components/schemas/LoadBalancerTag'\n          type: array\n      type: object\n    ReadLoadBalancersRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          LoadBalancerNames:\n          - LoadBalancerNames\n          - LoadBalancerNames\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersLoadBalancer'\n      type: object\n    ReadLoadBalancersResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LoadBalancers:\n        - AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        LoadBalancers:\n          description: Information about one or more load balancers.\n          items:\n            $ref: '#/components/schemas/LoadBalancer'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadLocationsRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadLocationsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Locations:\n        - Code: Code\n          Name: Name\n        - Code: Code\n          Name: Name\n      properties:\n        Locations:\n          description: Information about one or more locations.\n          items:\n            $ref: '#/components/schemas/Location'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadNatServicesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          NatServiceIds:\n          - NatServiceIds\n          - NatServiceIds\n          NetIds:\n          - NetIds\n          - NetIds\n          SubnetIds:\n          - SubnetIds\n          - SubnetIds\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersNatService'\n      type: object\n    ReadNatServicesResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        NatServices:\n        - NatServiceId: NatServiceId\n          NetId: NetId\n          PublicIps:\n          - PublicIp: PublicIp\n            PublicIpId: PublicIpId\n          - PublicIp: PublicIp\n            PublicIpId: PublicIpId\n          State: State\n          SubnetId: SubnetId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - NatServiceId: NatServiceId\n          NetId: NetId\n          PublicIps:\n          - PublicIp: PublicIp\n            PublicIpId: PublicIpId\n          - PublicIp: PublicIp\n            PublicIpId: PublicIpId\n          State: State\n          SubnetId: SubnetId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        NatServices:\n          description: Information about one or more NAT services.\n          items:\n            $ref: '#/components/schemas/NatService'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadNetAccessPointServicesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ServiceNames:\n          - ServiceNames\n          - ServiceNames\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersService'\n      type: object\n    ReadNetAccessPointServicesResponse:\n      additionalProperties: false\n      example:\n        Services:\n        - ServiceName: ServiceName\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          ServiceId: ServiceId\n        - ServiceName: ServiceName\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          ServiceId: ServiceId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Services:\n          description: The names of the services you can use for Net access points.\n          items:\n            $ref: '#/components/schemas/Service'\n          type: array\n      type: object\n    ReadNetAccessPointsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          NetIds:\n          - NetIds\n          - NetIds\n          NetAccessPointIds:\n          - NetAccessPointIds\n          - NetAccessPointIds\n          ServiceNames:\n          - ServiceNames\n          - ServiceNames\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersNetAccessPoint'\n      type: object\n    ReadNetAccessPointsResponse:\n      additionalProperties: false\n      example:\n        NetAccessPoints:\n        - NetId: NetId\n          RouteTableIds:\n          - RouteTableIds\n          - RouteTableIds\n          ServiceName: ServiceName\n          State: State\n          NetAccessPointId: NetAccessPointId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - NetId: NetId\n          RouteTableIds:\n          - RouteTableIds\n          - RouteTableIds\n          ServiceName: ServiceName\n          State: State\n          NetAccessPointId: NetAccessPointId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        NetAccessPoints:\n          description: One or more Net access points.\n          items:\n            $ref: '#/components/schemas/NetAccessPoint'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadNetPeeringsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          AccepterNetIpRanges:\n          - AccepterNetIpRanges\n          - AccepterNetIpRanges\n          AccepterNetNetIds:\n          - AccepterNetNetIds\n          - AccepterNetNetIds\n          SourceNetNetIds:\n          - SourceNetNetIds\n          - SourceNetNetIds\n          StateMessages:\n          - StateMessages\n          - StateMessages\n          NetPeeringIds:\n          - NetPeeringIds\n          - NetPeeringIds\n          AccepterNetAccountIds:\n          - AccepterNetAccountIds\n          - AccepterNetAccountIds\n          SourceNetAccountIds:\n          - SourceNetAccountIds\n          - SourceNetAccountIds\n          SourceNetIpRanges:\n          - SourceNetIpRanges\n          - SourceNetIpRanges\n          StateNames:\n          - StateNames\n          - StateNames\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersNetPeering'\n      type: object\n    ReadNetPeeringsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        NetPeerings:\n        - SourceNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          State:\n            Message: Message\n            Name: Name\n          NetPeeringId: NetPeeringId\n          AccepterNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - SourceNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          State:\n            Message: Message\n            Name: Name\n          NetPeeringId: NetPeeringId\n          AccepterNet:\n            IpRange: IpRange\n            NetId: NetId\n            AccountId: AccountId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        NetPeerings:\n          description: Information about one or more Net peering connections.\n          items:\n            $ref: '#/components/schemas/NetPeering'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadNetsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          IsDefault: true\n          States:\n          - States\n          - States\n          NetIds:\n          - NetIds\n          - NetIds\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n          DhcpOptionsSetIds:\n          - DhcpOptionsSetIds\n          - DhcpOptionsSetIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersNet'\n      type: object\n    ReadNetsResponse:\n      additionalProperties: false\n      example:\n        Nets:\n        - IpRange: IpRange\n          Tenancy: Tenancy\n          DhcpOptionsSetId: DhcpOptionsSetId\n          NetId: NetId\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - IpRange: IpRange\n          Tenancy: Tenancy\n          DhcpOptionsSetId: DhcpOptionsSetId\n          NetId: NetId\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        Nets:\n          description: Information about the described Nets.\n          items:\n            $ref: '#/components/schemas/Net'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadNicsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          PrivateIpsPrivateIps:\n          - PrivateIpsPrivateIps\n          - PrivateIpsPrivateIps\n          LinkNicVmIds:\n          - LinkNicVmIds\n          - LinkNicVmIds\n          LinkPublicIpPublicIpIds:\n          - LinkPublicIpPublicIpIds\n          - LinkPublicIpPublicIpIds\n          PrivateIpsPrimaryIp: true\n          LinkNicVmAccountIds:\n          - LinkNicVmAccountIds\n          - LinkNicVmAccountIds\n          SubnetIds:\n          - SubnetIds\n          - SubnetIds\n          LinkPublicIpAccountIds:\n          - LinkPublicIpAccountIds\n          - LinkPublicIpAccountIds\n          TagValues:\n          - TagValues\n          - TagValues\n          States:\n          - States\n          - States\n          Descriptions:\n          - Descriptions\n          - Descriptions\n          LinkPublicIpLinkPublicIpIds:\n          - LinkPublicIpLinkPublicIpIds\n          - LinkPublicIpLinkPublicIpIds\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LinkNicStates:\n          - LinkNicStates\n          - LinkNicStates\n          Tags:\n          - Tags\n          - Tags\n          NetIds:\n          - NetIds\n          - NetIds\n          LinkNicDeleteOnVmDeletion: true\n          PrivateIpsLinkPublicIpPublicIps:\n          - PrivateIpsLinkPublicIpPublicIps\n          - PrivateIpsLinkPublicIpPublicIps\n          SecurityGroupNames:\n          - SecurityGroupNames\n          - SecurityGroupNames\n          SecurityGroupIds:\n          - SecurityGroupIds\n          - SecurityGroupIds\n          LinkNicDeviceNumbers:\n          - 0\n          - 0\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          IsSourceDestCheck: true\n          PrivateDnsNames:\n          - PrivateDnsNames\n          - PrivateDnsNames\n          LinkPublicIpPublicIps:\n          - LinkPublicIpPublicIps\n          - LinkPublicIpPublicIps\n          LinkNicLinkNicIds:\n          - LinkNicLinkNicIds\n          - LinkNicLinkNicIds\n          PrivateIpsLinkPublicIpAccountIds:\n          - PrivateIpsLinkPublicIpAccountIds\n          - PrivateIpsLinkPublicIpAccountIds\n          MacAddresses:\n          - MacAddresses\n          - MacAddresses\n          NicIds:\n          - NicIds\n          - NicIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersNic'\n      type: object\n    ReadNicsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Nics:\n        - SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          LinkPublicIp:\n            PublicIp: PublicIp\n            LinkPublicIpId: LinkPublicIpId\n            PublicIpId: PublicIpId\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          PrivateDnsName: PrivateDnsName\n          LinkNic:\n            DeviceNumber: 0\n            DeleteOnVmDeletion: true\n            VmAccountId: VmAccountId\n            LinkNicId: LinkNicId\n            State: State\n            VmId: VmId\n          SubnetId: SubnetId\n          MacAddress: MacAddress\n          SubregionName: SubregionName\n          IsSourceDestChecked: true\n          PrivateIps:\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          NicId: NicId\n        - SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          LinkPublicIp:\n            PublicIp: PublicIp\n            LinkPublicIpId: LinkPublicIpId\n            PublicIpId: PublicIpId\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          PrivateDnsName: PrivateDnsName\n          LinkNic:\n            DeviceNumber: 0\n            DeleteOnVmDeletion: true\n            VmAccountId: VmAccountId\n            LinkNicId: LinkNicId\n            State: State\n            VmId: VmId\n          SubnetId: SubnetId\n          MacAddress: MacAddress\n          SubregionName: SubregionName\n          IsSourceDestChecked: true\n          PrivateIps:\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          NicId: NicId\n      properties:\n        Nics:\n          description: Information about one or more NICs.\n          items:\n            $ref: '#/components/schemas/Nic'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadProductTypesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          ProductTypeIds:\n          - ProductTypeIds\n          - ProductTypeIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersProductType'\n      type: object\n    ReadProductTypesResponse:\n      additionalProperties: false\n      example:\n        ProductTypes:\n        - Description: Description\n          Vendor: Vendor\n          ProductTypeId: ProductTypeId\n        - Description: Description\n          Vendor: Vendor\n          ProductTypeId: ProductTypeId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ProductTypes:\n          description: Information about one or more product types.\n          items:\n            $ref: '#/components/schemas/ProductType'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadPublicCatalogRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadPublicCatalogResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Catalog:\n          Entries:\n          - Type: Type\n            UnitPrice: 0.8008282\n            Category: Category\n            Service: Service\n            Title: Title\n            Flags: Flags\n            Operation: Operation\n            SubregionName: SubregionName\n          - Type: Type\n            UnitPrice: 0.8008282\n            Category: Category\n            Service: Service\n            Title: Title\n            Flags: Flags\n            Operation: Operation\n            SubregionName: SubregionName\n      properties:\n        Catalog:\n          $ref: '#/components/schemas/Catalog'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadPublicIpRangesRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadPublicIpRangesResponse:\n      additionalProperties: false\n      example:\n        PublicIps:\n        - PublicIps\n        - PublicIps\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        PublicIps:\n          description: The list of public IPv4 addresses used in the Region, in CIDR\n            notation.\n          items:\n            type: string\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadPublicIpsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          PublicIps:\n          - PublicIps\n          - PublicIps\n          LinkPublicIpIds:\n          - LinkPublicIpIds\n          - LinkPublicIpIds\n          PrivateIps:\n          - PrivateIps\n          - PrivateIps\n          Placements:\n          - Placements\n          - Placements\n          PublicIpIds:\n          - PublicIpIds\n          - PublicIpIds\n          NicAccountIds:\n          - NicAccountIds\n          - NicAccountIds\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n          NicIds:\n          - NicIds\n          - NicIds\n          VmIds:\n          - VmIds\n          - VmIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersPublicIp'\n      type: object\n    ReadPublicIpsResponse:\n      additionalProperties: false\n      example:\n        PublicIps:\n        - NicAccountId: NicAccountId\n          PrivateIp: PrivateIp\n          PublicIp: PublicIp\n          LinkPublicIpId: LinkPublicIpId\n          PublicIpId: PublicIpId\n          VmId: VmId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          NicId: NicId\n        - NicAccountId: NicAccountId\n          PrivateIp: PrivateIp\n          PublicIp: PublicIp\n          LinkPublicIpId: LinkPublicIpId\n          PublicIpId: PublicIpId\n          VmId: VmId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          NicId: NicId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        PublicIps:\n          description: Information about one or more public IPs.\n          items:\n            $ref: '#/components/schemas/PublicIp'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadQuotasRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          ShortDescriptions:\n          - ShortDescriptions\n          - ShortDescriptions\n          QuotaTypes:\n          - QuotaTypes\n          - QuotaTypes\n          QuotaNames:\n          - QuotaNames\n          - QuotaNames\n          Collections:\n          - Collections\n          - Collections\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersQuota'\n      type: object\n    ReadQuotasResponse:\n      additionalProperties: false\n      example:\n        QuotaTypes:\n        - Quotas:\n          - QuotaCollection: QuotaCollection\n            AccountId: AccountId\n            Description: Description\n            UsedValue: 6\n            MaxValue: 0\n            Name: Name\n            ShortDescription: ShortDescription\n          - QuotaCollection: QuotaCollection\n            AccountId: AccountId\n            Description: Description\n            UsedValue: 6\n            MaxValue: 0\n            Name: Name\n            ShortDescription: ShortDescription\n          QuotaType: QuotaType\n        - Quotas:\n          - QuotaCollection: QuotaCollection\n            AccountId: AccountId\n            Description: Description\n            UsedValue: 6\n            MaxValue: 0\n            Name: Name\n            ShortDescription: ShortDescription\n          - QuotaCollection: QuotaCollection\n            AccountId: AccountId\n            Description: Description\n            UsedValue: 6\n            MaxValue: 0\n            Name: Name\n            ShortDescription: ShortDescription\n          QuotaType: QuotaType\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        QuotaTypes:\n          description: Information about one or more quotas.\n          items:\n            $ref: '#/components/schemas/QuotaTypes'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadRegionsRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      type: object\n    ReadRegionsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Regions:\n        - Endpoint: Endpoint\n          RegionName: RegionName\n        - Endpoint: Endpoint\n          RegionName: RegionName\n      properties:\n        Regions:\n          description: Information about one or more Regions.\n          items:\n            $ref: '#/components/schemas/Region'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadRouteTablesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          RouteDestinationServiceIds:\n          - RouteDestinationServiceIds\n          - RouteDestinationServiceIds\n          RouteNatServiceIds:\n          - RouteNatServiceIds\n          - RouteNatServiceIds\n          NetIds:\n          - NetIds\n          - NetIds\n          RouteDestinationIpRanges:\n          - RouteDestinationIpRanges\n          - RouteDestinationIpRanges\n          RouteGatewayIds:\n          - RouteGatewayIds\n          - RouteGatewayIds\n          RouteVmIds:\n          - RouteVmIds\n          - RouteVmIds\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          LinkSubnetIds:\n          - LinkSubnetIds\n          - LinkSubnetIds\n          LinkRouteTableLinkRouteTableIds:\n          - LinkRouteTableLinkRouteTableIds\n          - LinkRouteTableLinkRouteTableIds\n          LinkRouteTableMain: true\n          RouteTableIds:\n          - RouteTableIds\n          - RouteTableIds\n          LinkRouteTableIds:\n          - LinkRouteTableIds\n          - LinkRouteTableIds\n          RouteNetPeeringIds:\n          - RouteNetPeeringIds\n          - RouteNetPeeringIds\n          RouteStates:\n          - RouteStates\n          - RouteStates\n          Tags:\n          - Tags\n          - Tags\n          RouteCreationMethods:\n          - RouteCreationMethods\n          - RouteCreationMethods\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersRouteTable'\n      type: object\n    ReadRouteTablesResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        RouteTables:\n        - NetId: NetId\n          RouteTableId: RouteTableId\n          RoutePropagatingVirtualGateways:\n          - VirtualGatewayId: VirtualGatewayId\n          - VirtualGatewayId: VirtualGatewayId\n          LinkRouteTables:\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          Routes:\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - NetId: NetId\n          RouteTableId: RouteTableId\n          RoutePropagatingVirtualGateways:\n          - VirtualGatewayId: VirtualGatewayId\n          - VirtualGatewayId: VirtualGatewayId\n          LinkRouteTables:\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          Routes:\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        RouteTables:\n          description: Information about one or more route tables.\n          items:\n            $ref: '#/components/schemas/RouteTable'\n          type: array\n      type: object\n    ReadSecretAccessKeyRequest:\n      additionalProperties: false\n      example:\n        AccessKeyId: AccessKeyId\n        DryRun: true\n      properties:\n        AccessKeyId:\n          description: The ID of the access key.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - AccessKeyId\n      type: object\n    ReadSecretAccessKeyResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        AccessKey:\n          CreationDate: CreationDate\n          SecretKey: SecretKey\n          ExpirationDate: ExpirationDate\n          AccessKeyId: AccessKeyId\n          State: State\n          LastModificationDate: LastModificationDate\n      properties:\n        AccessKey:\n          $ref: '#/components/schemas/AccessKeySecretKey'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadSecurityGroupsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          InboundRuleFromPortRanges:\n          - 0\n          - 0\n          InboundRuleProtocols:\n          - InboundRuleProtocols\n          - InboundRuleProtocols\n          InboundRuleSecurityGroupNames:\n          - InboundRuleSecurityGroupNames\n          - InboundRuleSecurityGroupNames\n          InboundRuleToPortRanges:\n          - 6\n          - 6\n          AccountIds:\n          - AccountIds\n          - AccountIds\n          NetIds:\n          - NetIds\n          - NetIds\n          OutboundRuleProtocols:\n          - OutboundRuleProtocols\n          - OutboundRuleProtocols\n          OutboundRuleSecurityGroupIds:\n          - OutboundRuleSecurityGroupIds\n          - OutboundRuleSecurityGroupIds\n          InboundRuleSecurityGroupIds:\n          - InboundRuleSecurityGroupIds\n          - InboundRuleSecurityGroupIds\n          OutboundRuleIpRanges:\n          - OutboundRuleIpRanges\n          - OutboundRuleIpRanges\n          SecurityGroupNames:\n          - SecurityGroupNames\n          - SecurityGroupNames\n          SecurityGroupIds:\n          - SecurityGroupIds\n          - SecurityGroupIds\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          InboundRuleIpRanges:\n          - InboundRuleIpRanges\n          - InboundRuleIpRanges\n          InboundRuleAccountIds:\n          - InboundRuleAccountIds\n          - InboundRuleAccountIds\n          Descriptions:\n          - Descriptions\n          - Descriptions\n          OutboundRuleSecurityGroupNames:\n          - OutboundRuleSecurityGroupNames\n          - OutboundRuleSecurityGroupNames\n          OutboundRuleFromPortRanges:\n          - 1\n          - 1\n          OutboundRuleToPortRanges:\n          - 5\n          - 5\n          OutboundRuleAccountIds:\n          - OutboundRuleAccountIds\n          - OutboundRuleAccountIds\n          Tags:\n          - Tags\n          - Tags\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersSecurityGroup'\n      type: object\n    ReadSecurityGroupsResponse:\n      additionalProperties: false\n      example:\n        SecurityGroups:\n        - InboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n          OutboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - InboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n          OutboundRules:\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          - ServiceIds:\n            - ServiceIds\n            - ServiceIds\n            ToPortRange: 6\n            SecurityGroupsMembers:\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - AccountId: AccountId\n              SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            IpProtocol: IpProtocol\n            IpRanges:\n            - IpRanges\n            - IpRanges\n            FromPortRange: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        SecurityGroups:\n          description: Information about one or more security groups.\n          items:\n            $ref: '#/components/schemas/SecurityGroup'\n          type: array\n      type: object\n    ReadServerCertificatesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          Paths:\n          - Paths\n          - Paths\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersServerCertificate'\n      type: object\n    ReadServerCertificatesResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        ServerCertificates:\n        - Path: Path\n          UploadDate: 2000-01-23\n          ExpirationDate: 2000-01-23\n          Orn: Orn\n          Id: Id\n          Name: Name\n        - Path: Path\n          UploadDate: 2000-01-23\n          ExpirationDate: 2000-01-23\n          Orn: Orn\n          Id: Id\n          Name: Name\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        ServerCertificates:\n          description: Information about one or more server certificates.\n          items:\n            $ref: '#/components/schemas/ServerCertificate'\n          type: array\n      type: object\n    ReadSnapshotExportTasksRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          TaskIds:\n          - TaskIds\n          - TaskIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersExportTask'\n      type: object\n    ReadSnapshotExportTasksResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        SnapshotExportTasks:\n        - Comment: Comment\n          SnapshotId: SnapshotId\n          Progress: 0\n          TaskId: TaskId\n          State: State\n          OsuExport:\n            OsuBucket: OsuBucket\n            OsuPrefix: OsuPrefix\n            DiskImageFormat: DiskImageFormat\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - Comment: Comment\n          SnapshotId: SnapshotId\n          Progress: 0\n          TaskId: TaskId\n          State: State\n          OsuExport:\n            OsuBucket: OsuBucket\n            OsuPrefix: OsuPrefix\n            DiskImageFormat: DiskImageFormat\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        SnapshotExportTasks:\n          description: Information about one or more snapshot export tasks.\n          items:\n            $ref: '#/components/schemas/SnapshotExportTask'\n          type: array\n      type: object\n    ReadSnapshotsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          VolumeSizes:\n          - 6\n          - 6\n          AccountIds:\n          - AccountIds\n          - AccountIds\n          Progresses:\n          - 0\n          - 0\n          SnapshotIds:\n          - SnapshotIds\n          - SnapshotIds\n          VolumeIds:\n          - VolumeIds\n          - VolumeIds\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          States:\n          - States\n          - States\n          Descriptions:\n          - Descriptions\n          - Descriptions\n          PermissionsToCreateVolumeAccountIds:\n          - PermissionsToCreateVolumeAccountIds\n          - PermissionsToCreateVolumeAccountIds\n          PermissionsToCreateVolumeGlobalPermission: true\n          Tags:\n          - Tags\n          - Tags\n          AccountAliases:\n          - AccountAliases\n          - AccountAliases\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersSnapshot'\n      type: object\n    ReadSnapshotsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Snapshots:\n        - CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          Progress: 0\n          VolumeId: VolumeId\n          AccountId: AccountId\n          Description: Description\n          State: State\n          PermissionsToCreateVolume:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountAlias: AccountAlias\n          VolumeSize: 6\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          Progress: 0\n          VolumeId: VolumeId\n          AccountId: AccountId\n          Description: Description\n          State: State\n          PermissionsToCreateVolume:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountAlias: AccountAlias\n          VolumeSize: 6\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Snapshots:\n          description: Information about one or more snapshots and their permissions.\n          items:\n            $ref: '#/components/schemas/Snapshot'\n          type: array\n      type: object\n    ReadSubnetsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          NetIds:\n          - NetIds\n          - NetIds\n          AvailableIpsCounts:\n          - 0\n          - 0\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          SubnetIds:\n          - SubnetIds\n          - SubnetIds\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersSubnet'\n      type: object\n    ReadSubnetsResponse:\n      additionalProperties: false\n      example:\n        Subnets:\n        - IpRange: IpRange\n          NetId: NetId\n          AvailableIpsCount: 0\n          MapPublicIpOnLaunch: true\n          State: State\n          SubnetId: SubnetId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n        - IpRange: IpRange\n          NetId: NetId\n          AvailableIpsCount: 0\n          MapPublicIpOnLaunch: true\n          State: State\n          SubnetId: SubnetId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Subnets:\n          description: Information about one or more Subnets.\n          items:\n            $ref: '#/components/schemas/Subnet'\n          type: array\n      type: object\n    ReadSubregionsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersSubregion'\n      type: object\n    ReadSubregionsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Subregions:\n        - RegionName: RegionName\n          State: State\n          LocationCode: LocationCode\n          SubregionName: SubregionName\n        - RegionName: RegionName\n          State: State\n          LocationCode: LocationCode\n          SubregionName: SubregionName\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Subregions:\n          description: Information about one or more Subregions.\n          items:\n            $ref: '#/components/schemas/Subregion'\n          type: array\n      type: object\n    ReadTagsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          ResourceTypes:\n          - ResourceTypes\n          - ResourceTypes\n          ResourceIds:\n          - ResourceIds\n          - ResourceIds\n          Keys:\n          - Keys\n          - Keys\n          Values:\n          - Values\n          - Values\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersTag'\n      type: object\n    ReadTagsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Tags:\n        - ResourceId: ResourceId\n          Value: Value\n          ResourceType: ResourceType\n          Key: Key\n        - ResourceId: ResourceId\n          Value: Value\n          ResourceType: ResourceType\n          Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Tags:\n          description: Information about one or more tags.\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n      type: object\n    ReadVirtualGatewaysRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          LinkStates:\n          - LinkStates\n          - LinkStates\n          ConnectionTypes:\n          - ConnectionTypes\n          - ConnectionTypes\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n          LinkNetIds:\n          - LinkNetIds\n          - LinkNetIds\n          VirtualGatewayIds:\n          - VirtualGatewayIds\n          - VirtualGatewayIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersVirtualGateway'\n      type: object\n    ReadVirtualGatewaysResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        VirtualGateways:\n        - ConnectionType: ConnectionType\n          NetToVirtualGatewayLinks:\n          - NetId: NetId\n            State: State\n          - NetId: NetId\n            State: State\n          State: State\n          VirtualGatewayId: VirtualGatewayId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        - ConnectionType: ConnectionType\n          NetToVirtualGatewayLinks:\n          - NetId: NetId\n            State: State\n          - NetId: NetId\n            State: State\n          State: State\n          VirtualGatewayId: VirtualGatewayId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VirtualGateways:\n          description: Information about one or more virtual gateways.\n          items:\n            $ref: '#/components/schemas/VirtualGateway'\n          type: array\n      type: object\n    ReadVmTypesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          VolumeSizes:\n          - 5\n          - 5\n          VcoreCounts:\n          - 6\n          - 6\n          VolumeCounts:\n          - 1\n          - 1\n          MemorySizes:\n          - 0.8008282\n          - 0.8008282\n          BsuOptimized: true\n          VmTypeNames:\n          - VmTypeNames\n          - VmTypeNames\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersVmType'\n      type: object\n    ReadVmTypesResponse:\n      additionalProperties: false\n      example:\n        VmTypes:\n        - MemorySize: 6.0274563\n          VcoreCount: 1\n          MaxPrivateIps: 0\n          VmTypeName: VmTypeName\n          VolumeCount: 5\n          VolumeSize: 5\n          BsuOptimized: true\n        - MemorySize: 6.0274563\n          VcoreCount: 1\n          MaxPrivateIps: 0\n          VmTypeName: VmTypeName\n          VolumeCount: 5\n          VolumeSize: 5\n          BsuOptimized: true\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VmTypes:\n          description: Information about one or more VM types.\n          items:\n            $ref: '#/components/schemas/VmType'\n          type: array\n      type: object\n    ReadVmsHealthRequest:\n      additionalProperties: false\n      example:\n        BackendVmIds:\n        - BackendVmIds\n        - BackendVmIds\n        LoadBalancerName: LoadBalancerName\n        DryRun: true\n      properties:\n        BackendVmIds:\n          description: One or more IDs of back-end VMs.\n          items:\n            type: string\n          type: array\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerName:\n          description: The name of the load balancer.\n          type: string\n      required:\n      - LoadBalancerName\n      type: object\n    ReadVmsHealthResponse:\n      additionalProperties: false\n      example:\n        BackendVmHealth:\n        - Description: Description\n          State: State\n          StateReason: StateReason\n          VmId: VmId\n        - Description: Description\n          State: State\n          StateReason: StateReason\n          VmId: VmId\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        BackendVmHealth:\n          description: Information about the health of one or more back-end VMs.\n          items:\n            $ref: '#/components/schemas/BackendVmHealth'\n          type: array\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ReadVmsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n          VmIds:\n          - VmIds\n          - VmIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersVm'\n      type: object\n    ReadVmsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Vms:\n        - CreationDate: CreationDate\n          SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          NetId: NetId\n          VmInitiatedShutdownBehavior: VmInitiatedShutdownBehavior\n          PrivateDnsName: PrivateDnsName\n          RootDeviceName: RootDeviceName\n          UserData: UserData\n          BlockDeviceMappings:\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          LaunchNumber: 0\n          SubnetId: SubnetId\n          BsuOptimized: true\n          IsSourceDestChecked: true\n          Placement:\n            Tenancy: Tenancy\n            SubregionName: SubregionName\n          PrivateIp: PrivateIp\n          ReservationId: ReservationId\n          ImageId: ImageId\n          VmType: VmType\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          Architecture: Architecture\n          Hypervisor: Hypervisor\n          PublicIp: PublicIp\n          DeletionProtection: true\n          PublicDnsName: PublicDnsName\n          KeypairName: KeypairName\n          Nics:\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          OsFamily: OsFamily\n          RootDeviceType: RootDeviceType\n          State: State\n          StateReason: StateReason\n          VmId: VmId\n          ClientToken: ClientToken\n          Performance: Performance\n        - CreationDate: CreationDate\n          SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          NetId: NetId\n          VmInitiatedShutdownBehavior: VmInitiatedShutdownBehavior\n          PrivateDnsName: PrivateDnsName\n          RootDeviceName: RootDeviceName\n          UserData: UserData\n          BlockDeviceMappings:\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          LaunchNumber: 0\n          SubnetId: SubnetId\n          BsuOptimized: true\n          IsSourceDestChecked: true\n          Placement:\n            Tenancy: Tenancy\n            SubregionName: SubregionName\n          PrivateIp: PrivateIp\n          ReservationId: ReservationId\n          ImageId: ImageId\n          VmType: VmType\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          Architecture: Architecture\n          Hypervisor: Hypervisor\n          PublicIp: PublicIp\n          DeletionProtection: true\n          PublicDnsName: PublicDnsName\n          KeypairName: KeypairName\n          Nics:\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          OsFamily: OsFamily\n          RootDeviceType: RootDeviceType\n          State: State\n          StateReason: StateReason\n          VmId: VmId\n          ClientToken: ClientToken\n          Performance: Performance\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Vms:\n          description: Information about one or more VMs.\n          items:\n            $ref: '#/components/schemas/Vm'\n          type: array\n      type: object\n    ReadVmsStateRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          VmStates:\n          - VmStates\n          - VmStates\n          MaintenanceEventCodes:\n          - MaintenanceEventCodes\n          - MaintenanceEventCodes\n          MaintenanceEventDescriptions:\n          - MaintenanceEventDescriptions\n          - MaintenanceEventDescriptions\n          MaintenanceEventsNotAfter:\n          - 2000-01-23\n          - 2000-01-23\n          MaintenanceEventsNotBefore:\n          - 2000-01-23\n          - 2000-01-23\n          VmIds:\n          - VmIds\n          - VmIds\n        AllVms: false\n        DryRun: true\n      properties:\n        AllVms:\n          default: false\n          description: If true, includes the status of all VMs. By default or if set\n            to false, only includes the status of running VMs.\n          type: boolean\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersVmsState'\n      type: object\n    ReadVmsStateResponse:\n      additionalProperties: false\n      example:\n        VmStates:\n        - VmState: VmState\n          MaintenanceEvents:\n          - Description: Description\n            NotAfter: 2000-01-23\n            NotBefore: 2000-01-23\n            Code: Code\n          - Description: Description\n            NotAfter: 2000-01-23\n            NotBefore: 2000-01-23\n            Code: Code\n          VmId: VmId\n          SubregionName: SubregionName\n        - VmState: VmState\n          MaintenanceEvents:\n          - Description: Description\n            NotAfter: 2000-01-23\n            NotBefore: 2000-01-23\n            Code: Code\n          - Description: Description\n            NotAfter: 2000-01-23\n            NotBefore: 2000-01-23\n            Code: Code\n          VmId: VmId\n          SubregionName: SubregionName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VmStates:\n          description: Information about one or more VM states.\n          items:\n            $ref: '#/components/schemas/VmStates'\n          type: array\n      type: object\n    ReadVolumesRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          VolumeSizes:\n          - 0\n          - 0\n          CreationDates:\n          - 2000-01-23\n          - 2000-01-23\n          LinkVolumeDeleteOnVmDeletion: true\n          LinkVolumeVmIds:\n          - LinkVolumeVmIds\n          - LinkVolumeVmIds\n          SnapshotIds:\n          - SnapshotIds\n          - SnapshotIds\n          VolumeIds:\n          - VolumeIds\n          - VolumeIds\n          LinkVolumeDeviceNames:\n          - LinkVolumeDeviceNames\n          - LinkVolumeDeviceNames\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          LinkVolumeLinkStates:\n          - LinkVolumeLinkStates\n          - LinkVolumeLinkStates\n          VolumeTypes:\n          - VolumeTypes\n          - VolumeTypes\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LinkVolumeLinkDates:\n          - 2000-01-23\n          - 2000-01-23\n          VolumeStates:\n          - VolumeStates\n          - VolumeStates\n          Tags:\n          - Tags\n          - Tags\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersVolume'\n      type: object\n    ReadVolumesResponse:\n      additionalProperties: false\n      example:\n        Volumes:\n        - CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          VolumeId: VolumeId\n          VolumeType: VolumeType\n          Size: 6\n          State: State\n          LinkedVolumes:\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          Iops: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n        - CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          VolumeId: VolumeId\n          VolumeType: VolumeType\n          Size: 6\n          State: State\n          LinkedVolumes:\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          Iops: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Volumes:\n          description: Information about one or more volumes.\n          items:\n            $ref: '#/components/schemas/Volume'\n          type: array\n      type: object\n    ReadVpnConnectionsRequest:\n      additionalProperties: false\n      example:\n        Filters:\n          States:\n          - States\n          - States\n          ConnectionTypes:\n          - ConnectionTypes\n          - ConnectionTypes\n          VpnConnectionIds:\n          - VpnConnectionIds\n          - VpnConnectionIds\n          RouteDestinationIpRanges:\n          - RouteDestinationIpRanges\n          - RouteDestinationIpRanges\n          ClientGatewayIds:\n          - ClientGatewayIds\n          - ClientGatewayIds\n          BgpAsns:\n          - 0\n          - 0\n          StaticRoutesOnly: true\n          TagKeys:\n          - TagKeys\n          - TagKeys\n          TagValues:\n          - TagValues\n          - TagValues\n          Tags:\n          - Tags\n          - Tags\n          VirtualGatewayIds:\n          - VirtualGatewayIds\n          - VirtualGatewayIds\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Filters:\n          $ref: '#/components/schemas/FiltersVpnConnection'\n      type: object\n    ReadVpnConnectionsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        VpnConnections:\n        - ConnectionType: ConnectionType\n          ClientGatewayId: ClientGatewayId\n          State: State\n          VpnOptions:\n            Phase1Options:\n              DpdTimeoutSeconds: 6\n              StartupAction: StartupAction\n              Phase1IntegrityAlgorithms:\n              - Phase1IntegrityAlgorithms\n              - Phase1IntegrityAlgorithms\n              Phase1LifetimeSeconds: 5\n              Phase1EncryptionAlgorithms:\n              - Phase1EncryptionAlgorithms\n              - Phase1EncryptionAlgorithms\n              DpdTimeoutAction: DpdTimeoutAction\n              ReplayWindowSize: 5\n              IkeVersions:\n              - IkeVersions\n              - IkeVersions\n              Phase1DhGroupNumbers:\n              - 1\n              - 1\n            TunnelInsideIpRange: TunnelInsideIpRange\n            Phase2Options:\n              Phase2EncryptionAlgorithms:\n              - Phase2EncryptionAlgorithms\n              - Phase2EncryptionAlgorithms\n              Phase2DhGroupNumbers:\n              - 2\n              - 2\n              Phase2LifetimeSeconds: 7\n              Phase2IntegrityAlgorithms:\n              - Phase2IntegrityAlgorithms\n              - Phase2IntegrityAlgorithms\n              PreSharedKey: PreSharedKey\n          ClientGatewayConfiguration: ClientGatewayConfiguration\n          Routes:\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          StaticRoutesOnly: true\n          VpnConnectionId: VpnConnectionId\n          VirtualGatewayId: VirtualGatewayId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          VgwTelemetries:\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n        - ConnectionType: ConnectionType\n          ClientGatewayId: ClientGatewayId\n          State: State\n          VpnOptions:\n            Phase1Options:\n              DpdTimeoutSeconds: 6\n              StartupAction: StartupAction\n              Phase1IntegrityAlgorithms:\n              - Phase1IntegrityAlgorithms\n              - Phase1IntegrityAlgorithms\n              Phase1LifetimeSeconds: 5\n              Phase1EncryptionAlgorithms:\n              - Phase1EncryptionAlgorithms\n              - Phase1EncryptionAlgorithms\n              DpdTimeoutAction: DpdTimeoutAction\n              ReplayWindowSize: 5\n              IkeVersions:\n              - IkeVersions\n              - IkeVersions\n              Phase1DhGroupNumbers:\n              - 1\n              - 1\n            TunnelInsideIpRange: TunnelInsideIpRange\n            Phase2Options:\n              Phase2EncryptionAlgorithms:\n              - Phase2EncryptionAlgorithms\n              - Phase2EncryptionAlgorithms\n              Phase2DhGroupNumbers:\n              - 2\n              - 2\n              Phase2LifetimeSeconds: 7\n              Phase2IntegrityAlgorithms:\n              - Phase2IntegrityAlgorithms\n              - Phase2IntegrityAlgorithms\n              PreSharedKey: PreSharedKey\n          ClientGatewayConfiguration: ClientGatewayConfiguration\n          Routes:\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          StaticRoutesOnly: true\n          VpnConnectionId: VpnConnectionId\n          VirtualGatewayId: VirtualGatewayId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          VgwTelemetries:\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VpnConnections:\n          description: Information about one or more VPN connections.\n          items:\n            $ref: '#/components/schemas/VpnConnection'\n          type: array\n      type: object\n    RebootVmsRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VmIds:\n          description: One or more IDs of the VMs you want to reboot.\n          items:\n            type: string\n          type: array\n      required:\n      - VmIds\n      type: object\n    RebootVmsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    Region:\n      additionalProperties: false\n      description: Information about the Region.\n      example:\n        Endpoint: Endpoint\n        RegionName: RegionName\n      properties:\n        Endpoint:\n          description: The hostname of the gateway to access the Region.\n          type: string\n        RegionName:\n          description: The administrative name of the Region.\n          type: string\n      type: object\n    RegisterVmsInLoadBalancerRequest:\n      additionalProperties: false\n      example:\n        BackendVmIds:\n        - BackendVmIds\n        - BackendVmIds\n        LoadBalancerName: LoadBalancerName\n        DryRun: true\n      properties:\n        BackendVmIds:\n          description: |-\n            One or more IDs of back-end VMs.\u003cbr /\u003e\n            Specifying the same ID several times has no effect as each back-end VM has equal weight.\n          items:\n            type: string\n          type: array\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LoadBalancerName:\n          description: The name of the load balancer.\n          type: string\n      required:\n      - BackendVmIds\n      - LoadBalancerName\n      type: object\n    RegisterVmsInLoadBalancerResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    RejectNetPeeringRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        NetPeeringId: NetPeeringId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetPeeringId:\n          description: The ID of the Net peering connection you want to reject.\n          type: string\n      required:\n      - NetPeeringId\n      type: object\n    RejectNetPeeringResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ResetAccountPasswordRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        Token: Token\n        Password: Password\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Password:\n          description: The new password for the account.\n          type: string\n        Token:\n          description: The token you received at the email address provided for the\n            account.\n          type: string\n      required:\n      - Password\n      - Token\n      type: object\n    ResetAccountPasswordResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ResourceLoadBalancerTag:\n      additionalProperties: false\n      description: Information about the tag.\n      example:\n        Key: Key\n      properties:\n        Key:\n          description: The key of the tag, with a minimum of 1 character.\n          type: string\n      type: object\n    ResourceTag:\n      additionalProperties: false\n      description: Information about the tag.\n      example:\n        Value: Value\n        Key: Key\n      properties:\n        Key:\n          description: The key of the tag, with a minimum of 1 character.\n          type: string\n        Value:\n          description: The value of the tag, between 0 and 255 characters.\n          type: string\n      required:\n      - Key\n      - Value\n      type: object\n    ResponseContext:\n      additionalProperties: false\n      description: Information about the context of the response.\n      example:\n        RequestId: RequestId\n      properties:\n        RequestId:\n          description: The ID of the request.\n          type: string\n      type: object\n    Route:\n      additionalProperties: false\n      description: Information about the route.\n      example:\n        NatServiceId: NatServiceId\n        VmAccountId: VmAccountId\n        CreationMethod: CreationMethod\n        State: State\n        DestinationIpRange: DestinationIpRange\n        NetPeeringId: NetPeeringId\n        VmId: VmId\n        NetAccessPointId: NetAccessPointId\n        DestinationServiceId: DestinationServiceId\n        GatewayId: GatewayId\n        NicId: NicId\n      properties:\n        CreationMethod:\n          description: The method used to create the route.\n          type: string\n        DestinationIpRange:\n          description: The IP range used for the destination match, in CIDR notation\n            (for example, `10.0.0.0/24`).\n          type: string\n        DestinationServiceId:\n          description: The ID of the OUTSCALE service.\n          type: string\n        GatewayId:\n          description: The ID of the Internet service or virtual gateway attached\n            to the Net.\n          type: string\n        NatServiceId:\n          description: The ID of a NAT service attached to the Net.\n          type: string\n        NetAccessPointId:\n          description: The ID of the Net access point.\n          type: string\n        NetPeeringId:\n          description: The ID of the Net peering connection.\n          type: string\n        NicId:\n          description: The ID of the NIC.\n          type: string\n        State:\n          description: The state of a route in the route table (`active` \\| `blackhole`).\n            The `blackhole` state indicates that the target of the route is not available.\n          type: string\n        VmAccountId:\n          description: The account ID of the owner of the VM.\n          type: string\n        VmId:\n          description: The ID of a VM specified in a route in the table.\n          type: string\n      type: object\n    RouteLight:\n      additionalProperties: false\n      description: Information about the route.\n      example:\n        RouteType: RouteType\n        State: State\n        DestinationIpRange: DestinationIpRange\n      properties:\n        DestinationIpRange:\n          description: The IP range used for the destination match, in CIDR notation\n            (for example, `10.0.0.0/24`).\n          type: string\n        RouteType:\n          description: The type of route (always `static`).\n          type: string\n        State:\n          description: The current state of the static route (`pending` \\| `available`\n            \\| `deleting` \\| `deleted`).\n          type: string\n      type: object\n    RoutePropagatingVirtualGateway:\n      additionalProperties: false\n      description: Information about the route propagating virtual gateway.\n      example:\n        VirtualGatewayId: VirtualGatewayId\n      properties:\n        VirtualGatewayId:\n          description: The ID of the virtual gateway.\n          type: string\n      type: object\n    RouteTable:\n      additionalProperties: false\n      description: Information about the route table.\n      example:\n        NetId: NetId\n        RouteTableId: RouteTableId\n        RoutePropagatingVirtualGateways:\n        - VirtualGatewayId: VirtualGatewayId\n        - VirtualGatewayId: VirtualGatewayId\n        LinkRouteTables:\n        - RouteTableId: RouteTableId\n          LinkRouteTableId: LinkRouteTableId\n          SubnetId: SubnetId\n          Main: true\n        - RouteTableId: RouteTableId\n          LinkRouteTableId: LinkRouteTableId\n          SubnetId: SubnetId\n          Main: true\n        Routes:\n        - NatServiceId: NatServiceId\n          VmAccountId: VmAccountId\n          CreationMethod: CreationMethod\n          State: State\n          DestinationIpRange: DestinationIpRange\n          NetPeeringId: NetPeeringId\n          VmId: VmId\n          NetAccessPointId: NetAccessPointId\n          DestinationServiceId: DestinationServiceId\n          GatewayId: GatewayId\n          NicId: NicId\n        - NatServiceId: NatServiceId\n          VmAccountId: VmAccountId\n          CreationMethod: CreationMethod\n          State: State\n          DestinationIpRange: DestinationIpRange\n          NetPeeringId: NetPeeringId\n          VmId: VmId\n          NetAccessPointId: NetAccessPointId\n          DestinationServiceId: DestinationServiceId\n          GatewayId: GatewayId\n          NicId: NicId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        LinkRouteTables:\n          description: One or more associations between the route table and Subnets.\n          items:\n            $ref: '#/components/schemas/LinkRouteTable'\n          type: array\n        NetId:\n          description: The ID of the Net for the route table.\n          type: string\n        RoutePropagatingVirtualGateways:\n          description: Information about virtual gateways propagating routes.\n          items:\n            $ref: '#/components/schemas/RoutePropagatingVirtualGateway'\n          type: array\n        RouteTableId:\n          description: The ID of the route table.\n          type: string\n        Routes:\n          description: One or more routes in the route table.\n          items:\n            $ref: '#/components/schemas/Route'\n          type: array\n        Tags:\n          description: One or more tags associated with the route table.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    SecurityGroup:\n      additionalProperties: false\n      description: Information about the security group.\n      example:\n        InboundRules:\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        NetId: NetId\n        AccountId: AccountId\n        Description: Description\n        SecurityGroupName: SecurityGroupName\n        SecurityGroupId: SecurityGroupId\n        OutboundRules:\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        - ServiceIds:\n          - ServiceIds\n          - ServiceIds\n          ToPortRange: 6\n          SecurityGroupsMembers:\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - AccountId: AccountId\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          IpProtocol: IpProtocol\n          IpRanges:\n          - IpRanges\n          - IpRanges\n          FromPortRange: 0\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        AccountId:\n          description: The account ID of a user that has been granted permission.\n          type: string\n        Description:\n          description: The description of the security group.\n          type: string\n        InboundRules:\n          description: The inbound rules associated with the security group.\n          items:\n            $ref: '#/components/schemas/SecurityGroupRule'\n          type: array\n        NetId:\n          description: The ID of the Net for the security group.\n          type: string\n        OutboundRules:\n          description: The outbound rules associated with the security group.\n          items:\n            $ref: '#/components/schemas/SecurityGroupRule'\n          type: array\n        SecurityGroupId:\n          description: The ID of the security group.\n          type: string\n        SecurityGroupName:\n          description: The name of the security group.\n          type: string\n        Tags:\n          description: One or more tags associated with the security group.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    SecurityGroupLight:\n      additionalProperties: false\n      description: Information about the security group.\n      example:\n        SecurityGroupName: SecurityGroupName\n        SecurityGroupId: SecurityGroupId\n      properties:\n        SecurityGroupId:\n          description: The ID of the security group.\n          type: string\n        SecurityGroupName:\n          description: The name of the security group.\n          type: string\n      type: object\n    SecurityGroupRule:\n      additionalProperties: false\n      description: Information about the security group rule.\n      example:\n        ServiceIds:\n        - ServiceIds\n        - ServiceIds\n        ToPortRange: 6\n        SecurityGroupsMembers:\n        - AccountId: AccountId\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        - AccountId: AccountId\n          SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        IpProtocol: IpProtocol\n        IpRanges:\n        - IpRanges\n        - IpRanges\n        FromPortRange: 0\n      properties:\n        FromPortRange:\n          description: The beginning of the port range for the TCP and UDP protocols,\n            or an ICMP type number.\n          type: integer\n        IpProtocol:\n          description: The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all\n            protocols). By default, `-1`. In a Net, this can also be an IP protocol\n            number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).\n          type: string\n        IpRanges:\n          description: One or more IP ranges for the security group rules, in CIDR\n            notation (for example, `10.0.0.0/16`).\n          items:\n            type: string\n          type: array\n        SecurityGroupsMembers:\n          description: Information about one or more members of a security group.\n          items:\n            $ref: '#/components/schemas/SecurityGroupsMember'\n          type: array\n        ServiceIds:\n          description: One or more service IDs to allow traffic from a Net to access\n            the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).\n          items:\n            type: string\n          type: array\n        ToPortRange:\n          description: The end of the port range for the TCP and UDP protocols, or\n            an ICMP code number.\n          type: integer\n      type: object\n    SecurityGroupsMember:\n      additionalProperties: false\n      description: Information about the member of a security group.\n      example:\n        AccountId: AccountId\n        SecurityGroupName: SecurityGroupName\n        SecurityGroupId: SecurityGroupId\n      properties:\n        AccountId:\n          description: The account ID of a user.\n          type: string\n        SecurityGroupId:\n          description: The ID of the security group.\n          type: string\n        SecurityGroupName:\n          description: The name of the security group.\n          type: string\n      type: object\n    SendResetPasswordEmailRequest:\n      additionalProperties: false\n      example:\n        Email: Email\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Email:\n          description: The email address provided for the account.\n          type: string\n      required:\n      - Email\n      type: object\n    SendResetPasswordEmailResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    ServerCertificate:\n      additionalProperties: false\n      description: Information about the server certificate.\n      example:\n        Path: Path\n        UploadDate: 2000-01-23\n        ExpirationDate: 2000-01-23\n        Orn: Orn\n        Id: Id\n        Name: Name\n      properties:\n        ExpirationDate:\n          description: The date at which the server certificate expires.\n          format: date\n          type: string\n        Id:\n          description: The ID of the server certificate.\n          type: string\n        Name:\n          description: The name of the server certificate.\n          type: string\n        Orn:\n          description: The Outscale Resource Name (ORN) of the server certificate.\n            For more information, see [Resource Identifiers \u003e Outscale Resource Names\n            (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).\n          type: string\n        Path:\n          description: The path to the server certificate.\n          type: string\n        UploadDate:\n          description: The date at which the server certificate has been uploaded.\n          format: date\n          type: string\n      type: object\n    Service:\n      additionalProperties: false\n      description: Information about the service.\n      example:\n        ServiceName: ServiceName\n        IpRanges:\n        - IpRanges\n        - IpRanges\n        ServiceId: ServiceId\n      properties:\n        IpRanges:\n          description: The list of network prefixes used by the service, in CIDR notation.\n          items:\n            type: string\n          type: array\n        ServiceId:\n          description: The ID of the service.\n          type: string\n        ServiceName:\n          description: The name of the service.\n          type: string\n      type: object\n    Snapshot:\n      additionalProperties: false\n      description: Information about the snapshot.\n      example:\n        CreationDate: CreationDate\n        SnapshotId: SnapshotId\n        Progress: 0\n        VolumeId: VolumeId\n        AccountId: AccountId\n        Description: Description\n        State: State\n        PermissionsToCreateVolume:\n          AccountIds:\n          - AccountIds\n          - AccountIds\n          GlobalPermission: true\n        AccountAlias: AccountAlias\n        VolumeSize: 6\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        AccountAlias:\n          description: The account alias of the owner of the snapshot.\n          type: string\n        AccountId:\n          description: The account ID of the owner of the snapshot.\n          type: string\n        CreationDate:\n          description: The date and time of creation of the snapshot.\n          format: datetime\n          type: string\n        Description:\n          description: The description of the snapshot.\n          type: string\n        PermissionsToCreateVolume:\n          $ref: '#/components/schemas/PermissionsOnResource'\n        Progress:\n          description: The progress of the snapshot, as a percentage.\n          type: integer\n        SnapshotId:\n          description: The ID of the snapshot.\n          type: string\n        State:\n          description: The state of the snapshot (`in-queue` \\| `completed` \\| `error`).\n          type: string\n        Tags:\n          description: One or more tags associated with the snapshot.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        VolumeId:\n          description: The ID of the volume used to create the snapshot.\n          type: string\n        VolumeSize:\n          description: The size of the volume used to create the snapshot, in gibibytes\n            (GiB).\n          type: integer\n      type: object\n    SnapshotExportTask:\n      additionalProperties: false\n      description: Information about the snapshot export task.\n      example:\n        Comment: Comment\n        SnapshotId: SnapshotId\n        Progress: 0\n        TaskId: TaskId\n        State: State\n        OsuExport:\n          OsuBucket: OsuBucket\n          OsuPrefix: OsuPrefix\n          DiskImageFormat: DiskImageFormat\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        Comment:\n          description: If the snapshot export task fails, an error message appears.\n          type: string\n        OsuExport:\n          $ref: '#/components/schemas/OsuExportSnapshotExportTask'\n        Progress:\n          description: The progress of the snapshot export task, as a percentage.\n          type: integer\n        SnapshotId:\n          description: The ID of the snapshot to be exported.\n          type: string\n        State:\n          description: The state of the snapshot export task (`pending` \\| `active`\n            \\| `completed` \\| `failed`).\n          type: string\n        Tags:\n          description: One or more tags associated with the snapshot export task.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        TaskId:\n          description: The ID of the snapshot export task.\n          type: string\n      type: object\n    SourceNet:\n      additionalProperties: false\n      description: Information about the source Net.\n      example:\n        IpRange: IpRange\n        NetId: NetId\n        AccountId: AccountId\n      properties:\n        AccountId:\n          description: The account ID of the owner of the source Net.\n          type: string\n        IpRange:\n          description: The IP range for the source Net, in CIDR notation (for example,\n            `10.0.0.0/16`).\n          type: string\n        NetId:\n          description: The ID of the source Net.\n          type: string\n      type: object\n    SourceSecurityGroup:\n      additionalProperties: false\n      description: |-\n        Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.\u003cbr /\u003e\n        To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.\n      example:\n        SecurityGroupName: SecurityGroupName\n        SecurityGroupAccountId: SecurityGroupAccountId\n      properties:\n        SecurityGroupAccountId:\n          description: The account ID of the owner of the security group.\n          type: string\n        SecurityGroupName:\n          description: The name of the security group.\n          type: string\n      type: object\n    StartVmsRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VmIds:\n          description: One or more IDs of VMs.\n          items:\n            type: string\n          type: array\n      required:\n      - VmIds\n      type: object\n    StartVmsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Vms:\n        - CurrentState: CurrentState\n          VmId: VmId\n          PreviousState: PreviousState\n        - CurrentState: CurrentState\n          VmId: VmId\n          PreviousState: PreviousState\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Vms:\n          description: Information about one or more started VMs.\n          items:\n            $ref: '#/components/schemas/VmState'\n          type: array\n      type: object\n    StateComment:\n      additionalProperties: false\n      description: Information about the change of state.\n      example:\n        StateCode: StateCode\n        StateMessage: StateMessage\n      properties:\n        StateCode:\n          description: The code of the change of state.\n          type: string\n        StateMessage:\n          description: A message explaining the change of state.\n          type: string\n      type: object\n    StopVmsRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        ForceStop: true\n        VmIds:\n        - VmIds\n        - VmIds\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ForceStop:\n          description: Forces the VM to stop.\n          type: boolean\n        VmIds:\n          description: One or more IDs of VMs.\n          items:\n            type: string\n          type: array\n      required:\n      - VmIds\n      type: object\n    StopVmsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Vms:\n        - CurrentState: CurrentState\n          VmId: VmId\n          PreviousState: PreviousState\n        - CurrentState: CurrentState\n          VmId: VmId\n          PreviousState: PreviousState\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Vms:\n          description: Information about one or more stopped VMs.\n          items:\n            $ref: '#/components/schemas/VmState'\n          type: array\n      type: object\n    Subnet:\n      additionalProperties: false\n      description: Information about the Subnet.\n      example:\n        IpRange: IpRange\n        NetId: NetId\n        AvailableIpsCount: 0\n        MapPublicIpOnLaunch: true\n        State: State\n        SubnetId: SubnetId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n        SubregionName: SubregionName\n      properties:\n        AvailableIpsCount:\n          description: The number of available IPs in the Subnets.\n          type: integer\n        IpRange:\n          description: The IP range in the Subnet, in CIDR notation (for example,\n            `10.0.0.0/16`).\n          type: string\n        MapPublicIpOnLaunch:\n          description: If true, a public IP is assigned to the network interface cards\n            (NICs) created in the specified Subnet.\n          type: boolean\n        NetId:\n          description: The ID of the Net in which the Subnet is.\n          type: string\n        State:\n          description: The state of the Subnet (`pending` \\| `available`).\n          type: string\n        SubnetId:\n          description: The ID of the Subnet.\n          type: string\n        SubregionName:\n          description: The name of the Subregion in which the Subnet is located.\n          type: string\n        Tags:\n          description: One or more tags associated with the Subnet.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n      type: object\n    Subregion:\n      additionalProperties: false\n      description: Information about the Subregion.\n      example:\n        RegionName: RegionName\n        State: State\n        LocationCode: LocationCode\n        SubregionName: SubregionName\n      properties:\n        LocationCode:\n          description: The location code of the Subregion.\n          type: string\n        RegionName:\n          description: The name of the Region containing the Subregion.\n          type: string\n        State:\n          description: The state of the Subregion (`available` \\| `information` \\|\n            `impaired` \\| `unavailable`).\n          type: string\n        SubregionName:\n          description: The name of the Subregion.\n          type: string\n      type: object\n    Tag:\n      additionalProperties: false\n      description: Information about the tag.\n      example:\n        ResourceId: ResourceId\n        Value: Value\n        ResourceType: ResourceType\n        Key: Key\n      properties:\n        Key:\n          description: The key of the tag, with a minimum of 1 character.\n          type: string\n        ResourceId:\n          description: The ID of the resource.\n          type: string\n        ResourceType:\n          description: The type of the resource.\n          type: string\n        Value:\n          description: The value of the tag, between 0 and 255 characters.\n          type: string\n      type: object\n    UnlinkFlexibleGpuRequest:\n      additionalProperties: false\n      example:\n        FlexibleGpuId: FlexibleGpuId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        FlexibleGpuId:\n          description: The ID of the fGPU you want to detach from your VM.\n          type: string\n      required:\n      - FlexibleGpuId\n      type: object\n    UnlinkFlexibleGpuResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkInternetServiceRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        InternetServiceId: InternetServiceId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        InternetServiceId:\n          description: The ID of the Internet service you want to detach.\n          type: string\n        NetId:\n          description: The ID of the Net from which you want to detach the Internet\n            service.\n          type: string\n      required:\n      - InternetServiceId\n      - NetId\n      type: object\n    UnlinkInternetServiceResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkLoadBalancerBackendMachinesRequest:\n      additionalProperties: false\n      example:\n        BackendVmIds:\n        - BackendVmIds\n        - BackendVmIds\n        LoadBalancerName: LoadBalancerName\n        DryRun: true\n        BackendIps:\n        - BackendIps\n        - BackendIps\n      properties:\n        BackendIps:\n          description: ' One or more public IPs of back-end VMs.'\n          items:\n            type: string\n          type: array\n        BackendVmIds:\n          description: ' One or more IDs of back-end VMs.'\n          items:\n            type: string\n          type: array\n        DryRun:\n          description: ' If true, checks whether you have the required permissions\n            to perform the action.'\n          type: boolean\n        LoadBalancerName:\n          description: ' The name of the load balancer.'\n          type: string\n      required:\n      - LoadBalancerName\n      type: object\n    UnlinkLoadBalancerBackendMachinesResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkNicRequest:\n      additionalProperties: false\n      example:\n        LinkNicId: LinkNicId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LinkNicId:\n          description: The ID of the attachment operation.\n          type: string\n      required:\n      - LinkNicId\n      type: object\n    UnlinkNicResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkPrivateIpsRequest:\n      additionalProperties: false\n      example:\n        PrivateIps:\n        - PrivateIps\n        - PrivateIps\n        DryRun: true\n        NicId: NicId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NicId:\n          description: The ID of the NIC.\n          type: string\n        PrivateIps:\n          description: One or more secondary private IPs you want to unassign from\n            the NIC.\n          items:\n            type: string\n          type: array\n      required:\n      - NicId\n      - PrivateIps\n      type: object\n    UnlinkPrivateIpsResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkPublicIpRequest:\n      additionalProperties: false\n      example:\n        PublicIp: PublicIp\n        LinkPublicIpId: LinkPublicIpId\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LinkPublicIpId:\n          description: The ID representing the association of the public IP with the\n            VM or the NIC. This parameter is required unless you use the `PublicIp`\n            parameter.\n          type: string\n        PublicIp:\n          description: The public IP. This parameter is required unless you use the\n            `LinkPublicIpId` parameter.\n          type: string\n      type: object\n    UnlinkPublicIpResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkRouteTableRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        LinkRouteTableId: LinkRouteTableId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LinkRouteTableId:\n          description: The ID of the association between the route table and the Subnet.\n          type: string\n      required:\n      - LinkRouteTableId\n      type: object\n    UnlinkRouteTableResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkVirtualGatewayRequest:\n      additionalProperties: false\n      example:\n        NetId: NetId\n        DryRun: true\n        VirtualGatewayId: VirtualGatewayId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetId:\n          description: The ID of the Net from which you want to detach the virtual\n            gateway.\n          type: string\n        VirtualGatewayId:\n          description: The ID of the virtual gateway.\n          type: string\n      required:\n      - NetId\n      - VirtualGatewayId\n      type: object\n    UnlinkVirtualGatewayResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UnlinkVolumeRequest:\n      additionalProperties: false\n      example:\n        VolumeId: VolumeId\n        DryRun: true\n        ForceUnlink: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ForceUnlink:\n          description: 'Forces the detachment of the volume in case of previous failure.\n            Important: This action may damage your data or file systems.'\n          type: boolean\n        VolumeId:\n          description: The ID of the volume you want to detach.\n          type: string\n      required:\n      - VolumeId\n      type: object\n    UnlinkVolumeResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateAccessKeyRequest:\n      additionalProperties: false\n      example:\n        ExpirationDate: ExpirationDate\n        AccessKeyId: AccessKeyId\n        State: State\n        DryRun: true\n      properties:\n        AccessKeyId:\n          description: The ID of the access key.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ExpirationDate:\n          description: The date and time at which you want the access key to expire,\n            in ISO 8601 format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`).\n            If not specified, the access key is set to not expire.\n          format: datetime\n          type: string\n        State:\n          description: The new state for the access key (`ACTIVE` \\| `INACTIVE`).\n            When set to `ACTIVE`, the access key is enabled and can be used to send\n            requests. When set to `INACTIVE`, the access key is disabled.\n          type: string\n      required:\n      - AccessKeyId\n      - State\n      type: object\n    UpdateAccessKeyResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        AccessKey:\n          CreationDate: CreationDate\n          ExpirationDate: ExpirationDate\n          AccessKeyId: AccessKeyId\n          State: State\n          LastModificationDate: LastModificationDate\n      properties:\n        AccessKey:\n          $ref: '#/components/schemas/AccessKey'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateAccountRequest:\n      additionalProperties: false\n      example:\n        Email: Email\n        FirstName: FirstName\n        StateProvince: StateProvince\n        ZipCode: ZipCode\n        DryRun: true\n        City: City\n        JobTitle: JobTitle\n        VatNumber: VatNumber\n        CompanyName: CompanyName\n        MobileNumber: MobileNumber\n        AdditionalEmails:\n        - AdditionalEmails\n        - AdditionalEmails\n        Country: Country\n        PhoneNumber: PhoneNumber\n        LastName: LastName\n      properties:\n        AdditionalEmails:\n          description: One or more additional email addresses for the account. These\n            addresses are used for notifications only. If you already have a list\n            of additional emails registered, you cannot add to it, only replace it.\n            To remove all registered additional emails, specify an empty list.\n          items:\n            pattern: ^.+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)+$\n            type: string\n          type: array\n        City:\n          description: The new city of the account owner.\n          type: string\n        CompanyName:\n          description: The new name of the company for the account.\n          type: string\n        Country:\n          description: The new country of the account owner.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Email:\n          description: The main email address for the account. This address is used\n            for your credentials and notifications.\n          type: string\n        FirstName:\n          description: The new first name of the account owner.\n          type: string\n        JobTitle:\n          description: The new job title of the account owner.\n          type: string\n        LastName:\n          description: The new last name of the account owner.\n          type: string\n        MobileNumber:\n          description: The new mobile phone number of the account owner.\n          type: string\n        PhoneNumber:\n          description: The new landline phone number of the account owner.\n          type: string\n        StateProvince:\n          description: The new state/province of the account owner.\n          type: string\n        VatNumber:\n          description: The new value added tax (VAT) number for the account.\n          type: string\n        ZipCode:\n          description: The new ZIP code of the city.\n          type: string\n      type: object\n    UpdateAccountResponse:\n      additionalProperties: false\n      example:\n        Account:\n          AccountId: AccountId\n          Email: Email\n          FirstName: FirstName\n          StateProvince: StateProvince\n          ZipCode: ZipCode\n          City: City\n          CustomerId: CustomerId\n          JobTitle: JobTitle\n          VatNumber: VatNumber\n          CompanyName: CompanyName\n          MobileNumber: MobileNumber\n          AdditionalEmails:\n          - AdditionalEmails\n          - AdditionalEmails\n          Country: Country\n          PhoneNumber: PhoneNumber\n          LastName: LastName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        Account:\n          $ref: '#/components/schemas/Account'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateApiAccessPolicyRequest:\n      additionalProperties: false\n      example:\n        RequireTrustedEnv: true\n        MaxAccessKeyExpirationSeconds: 0\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        MaxAccessKeyExpirationSeconds:\n          description: The maximum possible lifetime for your access keys, in seconds\n            (between `0` and `3153600000`, both included). If set to `O`, your access\n            keys can have unlimited lifetimes, but a trusted session cannot be activated.\n            Otherwise, all your access keys must have an expiration date. This value\n            must be greater than the remaining lifetime of each access key of your\n            account.\n          format: int64\n          type: integer\n        RequireTrustedEnv:\n          description: If true, a trusted session is activated, provided that you\n            specify the `MaxAccessKeyExpirationSeconds` parameter with a value greater\n            than `0`.\n          type: boolean\n      required:\n      - MaxAccessKeyExpirationSeconds\n      - RequireTrustedEnv\n      type: object\n    UpdateApiAccessPolicyResponse:\n      additionalProperties: false\n      example:\n        ApiAccessPolicy:\n          RequireTrustedEnv: true\n          MaxAccessKeyExpirationSeconds: 0\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ApiAccessPolicy:\n          $ref: '#/components/schemas/ApiAccessPolicy'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateApiAccessRuleRequest:\n      additionalProperties: false\n      example:\n        Description: Description\n        ApiAccessRuleId: ApiAccessRuleId\n        CaIds:\n        - CaIds\n        - CaIds\n        DryRun: true\n        Cns:\n        - Cns\n        - Cns\n        IpRanges:\n        - IpRanges\n        - IpRanges\n      properties:\n        ApiAccessRuleId:\n          description: The ID of the API access rule you want to update.\n          type: string\n        CaIds:\n          description: One or more IDs of Client Certificate Authorities (CAs).\n          items:\n            type: string\n          type: array\n        Cns:\n          description: One or more Client Certificate Common Names (CNs).\n          items:\n            type: string\n          type: array\n        Description:\n          description: A new description for the API access rule.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        IpRanges:\n          description: One or more IP ranges, in CIDR notation (for example, `192.0.2.0/16`).\n          items:\n            type: string\n          type: array\n      required:\n      - ApiAccessRuleId\n      type: object\n    UpdateApiAccessRuleResponse:\n      additionalProperties: false\n      example:\n        ApiAccessRule:\n          Description: Description\n          ApiAccessRuleId: ApiAccessRuleId\n          CaIds:\n          - CaIds\n          - CaIds\n          Cns:\n          - Cns\n          - Cns\n          IpRanges:\n          - IpRanges\n          - IpRanges\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ApiAccessRule:\n          $ref: '#/components/schemas/ApiAccessRule'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateCaRequest:\n      additionalProperties: false\n      example:\n        Description: Description\n        CaId: CaId\n        DryRun: true\n      properties:\n        CaId:\n          description: The ID of the CA.\n          type: string\n        Description:\n          description: The description of the CA.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n      required:\n      - CaId\n      type: object\n    UpdateCaResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Ca:\n          Description: Description\n          CaFingerprint: CaFingerprint\n          CaId: CaId\n      properties:\n        Ca:\n          $ref: '#/components/schemas/Ca'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateDirectLinkInterfaceRequest:\n      additionalProperties: false\n      example:\n        DryRun: true\n        DirectLinkInterfaceId: DirectLinkInterfaceId\n        Mtu: 2100\n      properties:\n        DirectLinkInterfaceId:\n          description: The ID of the DirectLink interface you want to update.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Mtu:\n          default: 1500\n          description: The maximum transmission unit (MTU) of the DirectLink interface,\n            in bytes (between `1500` and `9001`, both included).\n          maximum: 9001\n          minimum: 1500\n          type: integer\n      required:\n      - DirectLinkInterfaceId\n      - Mtu\n      type: object\n    UpdateDirectLinkInterfaceResponse:\n      additionalProperties: false\n      example:\n        DirectLinkInterface:\n          ClientPrivateIp: ClientPrivateIp\n          AccountId: AccountId\n          BgpKey: BgpKey\n          DirectLinkInterfaceId: DirectLinkInterfaceId\n          Vlan: 1\n          BgpAsn: 0\n          Mtu: 6\n          InterfaceType: InterfaceType\n          State: State\n          DirectLinkInterfaceName: DirectLinkInterfaceName\n          DirectLinkId: DirectLinkId\n          OutscalePrivateIp: OutscalePrivateIp\n          VirtualGatewayId: VirtualGatewayId\n          Location: Location\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        DirectLinkInterface:\n          $ref: '#/components/schemas/DirectLinkInterfaces'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateFlexibleGpuRequest:\n      additionalProperties: false\n      example:\n        DeleteOnVmDeletion: true\n        FlexibleGpuId: FlexibleGpuId\n        DryRun: true\n      properties:\n        DeleteOnVmDeletion:\n          description: If true, the fGPU is deleted when the VM is terminated.\n          type: boolean\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        FlexibleGpuId:\n          description: The ID of the fGPU you want to modify.\n          type: string\n      required:\n      - FlexibleGpuId\n      type: object\n    UpdateFlexibleGpuResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        FlexibleGpu:\n          Generation: Generation\n          DeleteOnVmDeletion: true\n          ModelName: ModelName\n          FlexibleGpuId: FlexibleGpuId\n          State: State\n          VmId: VmId\n          SubregionName: SubregionName\n      properties:\n        FlexibleGpu:\n          $ref: '#/components/schemas/FlexibleGpu'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateImageRequest:\n      additionalProperties: false\n      example:\n        PermissionsToLaunch:\n          Additions:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          Removals:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n        DryRun: true\n        ImageId: ImageId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        ImageId:\n          description: The ID of the OMI you want to modify.\n          type: string\n        PermissionsToLaunch:\n          $ref: '#/components/schemas/PermissionsOnResourceCreation'\n      required:\n      - ImageId\n      - PermissionsToLaunch\n      type: object\n    UpdateImageResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Image:\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          CreationDate: 2000-01-23\n          PermissionsToLaunch:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountId: AccountId\n          Description: Description\n          RootDeviceName: RootDeviceName\n          Architecture: Architecture\n          BlockDeviceMappings:\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          - Bsu:\n              SnapshotId: SnapshotId\n              DeleteOnVmDeletion: true\n              VolumeType: VolumeType\n              Iops: 0\n              VolumeSize: 6\n            VirtualDeviceName: VirtualDeviceName\n            DeviceName: DeviceName\n          StateComment:\n            StateCode: StateCode\n            StateMessage: StateMessage\n          AccountAlias: AccountAlias\n          ImageType: ImageType\n          ImageName: ImageName\n          RootDeviceType: RootDeviceType\n          State: State\n          FileLocation: FileLocation\n          ImageId: ImageId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        Image:\n          $ref: '#/components/schemas/Image'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateListenerRuleRequest:\n      additionalProperties: false\n      example:\n        PathPattern: PathPattern\n        DryRun: true\n        HostPattern: HostPattern\n        ListenerRuleName: ListenerRuleName\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        HostPattern:\n          description: A host-name pattern for the rule, with a maximum length of\n            128 characters. This host-name pattern supports maximum three wildcards,\n            and must not contain any special characters except [-.?].\n          nullable: true\n          type: string\n        ListenerRuleName:\n          description: The name of the listener rule.\n          type: string\n        PathPattern:\n          description: A path pattern for the rule, with a maximum length of 128 characters.\n            This path pattern supports maximum three wildcards, and must not contain\n            any special characters except [_-.$/~\u0026quot;'@:+?].\n          nullable: true\n          type: string\n      required:\n      - ListenerRuleName\n      type: object\n    UpdateListenerRuleResponse:\n      additionalProperties: false\n      example:\n        ListenerRule:\n          Action: Action\n          PathPattern: PathPattern\n          HostNamePattern: HostNamePattern\n          Priority: 1\n          ListenerRuleId: 6\n          ListenerId: 0\n          ListenerRuleName: ListenerRuleName\n          VmIds:\n          - VmIds\n          - VmIds\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ListenerRule:\n          $ref: '#/components/schemas/ListenerRule'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateLoadBalancerRequest:\n      additionalProperties: false\n      example:\n        AccessLog:\n          OsuBucketPrefix: OsuBucketPrefix\n          IsEnabled: true\n          PublicationInterval: 0\n          OsuBucketName: OsuBucketName\n        PolicyNames:\n        - PolicyNames\n        - PolicyNames\n        LoadBalancerName: LoadBalancerName\n        SecurityGroups:\n        - SecurityGroups\n        - SecurityGroups\n        PublicIp: PublicIp\n        DryRun: true\n        HealthCheck:\n          Path: Path\n          UnhealthyThreshold: 2\n          CheckInterval: 6\n          Timeout: 5\n          HealthyThreshold: 1\n          Port: 5\n          Protocol: Protocol\n        ServerCertificateId: ServerCertificateId\n        LoadBalancerPort: 0\n      properties:\n        AccessLog:\n          $ref: '#/components/schemas/AccessLog'\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        HealthCheck:\n          $ref: '#/components/schemas/HealthCheck'\n        LoadBalancerName:\n          description: The name of the load balancer.\n          type: string\n        LoadBalancerPort:\n          description: The port on which the load balancer is listening (between `1`\n            and `65535`, both included). This parameter is required if you want to\n            update the server certificate.\n          type: integer\n        PolicyNames:\n          description: The name of the policy you want to enable for the listener.\n          items:\n            type: string\n          type: array\n        PublicIp:\n          description: (internet-facing only) The public IP you want to associate\n            with the load balancer. The former public IP of the load balancer is then\n            disassociated. If you specify an empty string and the former public IP\n            belonged to you, it is disassociated and replaced by a public IP owned\n            by 3DS OUTSCALE.\n          type: string\n        SecurityGroups:\n          description: (Net only) One or more IDs of security groups you want to assign\n            to the load balancer. You need to specify the already assigned security\n            groups that you want to keep along with the new ones you are assigning.\n            If the list is empty, the default security group of the Net is assigned\n            to the load balancer.\n          items:\n            type: string\n          type: array\n        ServerCertificateId:\n          description: The Outscale Resource Name (ORN) of the server certificate.\n            For more information, see [Resource Identifiers \u003e Outscale Resource Names\n            (ORNs)](https://docs.outscale.com/en/userguide/Resource-Identifiers.html#_outscale_resource_names_orns).\n            If this parameter is specified, you must also specify the `LoadBalancerPort`\n            parameter.\n          type: string\n      required:\n      - LoadBalancerName\n      type: object\n    UpdateLoadBalancerResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        LoadBalancer:\n          AccessLog:\n            OsuBucketPrefix: OsuBucketPrefix\n            IsEnabled: true\n            PublicationInterval: 0\n            OsuBucketName: OsuBucketName\n          BackendVmIds:\n          - BackendVmIds\n          - BackendVmIds\n          SecurityGroups:\n          - SecurityGroups\n          - SecurityGroups\n          ApplicationStickyCookiePolicies:\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          - PolicyName: PolicyName\n            CookieName: CookieName\n          DnsName: DnsName\n          NetId: NetId\n          PublicIp: PublicIp\n          SourceSecurityGroup:\n            SecurityGroupName: SecurityGroupName\n            SecurityGroupAccountId: SecurityGroupAccountId\n          HealthCheck:\n            Path: Path\n            UnhealthyThreshold: 2\n            CheckInterval: 6\n            Timeout: 5\n            HealthyThreshold: 1\n            Port: 5\n            Protocol: Protocol\n          LoadBalancerType: LoadBalancerType\n          LoadBalancerName: LoadBalancerName\n          Listeners:\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          - PolicyNames:\n            - PolicyNames\n            - PolicyNames\n            BackendProtocol: BackendProtocol\n            LoadBalancerProtocol: LoadBalancerProtocol\n            BackendPort: 7\n            ServerCertificateId: ServerCertificateId\n            LoadBalancerPort: 9\n          Subnets:\n          - Subnets\n          - Subnets\n          SubregionNames:\n          - SubregionNames\n          - SubregionNames\n          LoadBalancerStickyCookiePolicies:\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          - CookieExpirationPeriod: 3\n            PolicyName: PolicyName\n          BackendIps:\n          - BackendIps\n          - BackendIps\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        LoadBalancer:\n          $ref: '#/components/schemas/LoadBalancer'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateNetAccessPointRequest:\n      additionalProperties: false\n      example:\n        RemoveRouteTableIds:\n        - RemoveRouteTableIds\n        - RemoveRouteTableIds\n        DryRun: true\n        AddRouteTableIds:\n        - AddRouteTableIds\n        - AddRouteTableIds\n        NetAccessPointId: NetAccessPointId\n      properties:\n        AddRouteTableIds:\n          description: One or more IDs of route tables to associate with the specified\n            Net access point.\n          items:\n            type: string\n          type: array\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetAccessPointId:\n          description: The ID of the Net access point.\n          type: string\n        RemoveRouteTableIds:\n          description: One or more IDs of route tables to disassociate from the specified\n            Net access point.\n          items:\n            type: string\n          type: array\n      required:\n      - NetAccessPointId\n      type: object\n    UpdateNetAccessPointResponse:\n      additionalProperties: false\n      example:\n        NetAccessPoint:\n          NetId: NetId\n          RouteTableIds:\n          - RouteTableIds\n          - RouteTableIds\n          ServiceName: ServiceName\n          State: State\n          NetAccessPointId: NetAccessPointId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        NetAccessPoint:\n          $ref: '#/components/schemas/NetAccessPoint'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateNetRequest:\n      additionalProperties: false\n      example:\n        DhcpOptionsSetId: DhcpOptionsSetId\n        NetId: NetId\n        DryRun: true\n      properties:\n        DhcpOptionsSetId:\n          description: The ID of the DHCP options set (or `default` if you want to\n            associate the default one).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        NetId:\n          description: The ID of the Net.\n          type: string\n      required:\n      - DhcpOptionsSetId\n      - NetId\n      type: object\n    UpdateNetResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Net:\n          IpRange: IpRange\n          Tenancy: Tenancy\n          DhcpOptionsSetId: DhcpOptionsSetId\n          NetId: NetId\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n      properties:\n        Net:\n          $ref: '#/components/schemas/Net'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateNicRequest:\n      additionalProperties: false\n      example:\n        Description: Description\n        DryRun: true\n        LinkNic:\n          DeleteOnVmDeletion: true\n          LinkNicId: LinkNicId\n        SecurityGroupIds:\n        - SecurityGroupIds\n        - SecurityGroupIds\n        NicId: NicId\n      properties:\n        Description:\n          description: A new description for the NIC.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        LinkNic:\n          $ref: '#/components/schemas/LinkNicToUpdate'\n        NicId:\n          description: The ID of the NIC you want to modify.\n          type: string\n        SecurityGroupIds:\n          description: |-\n            One or more IDs of security groups for the NIC.\u003cbr /\u003e\n            You must specify at least one group, even if you use the default security group in the Net.\n          items:\n            type: string\n          type: array\n      required:\n      - NicId\n      type: object\n    UpdateNicResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Nic:\n          SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          LinkPublicIp:\n            PublicIp: PublicIp\n            LinkPublicIpId: LinkPublicIpId\n            PublicIpId: PublicIpId\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          PrivateDnsName: PrivateDnsName\n          LinkNic:\n            DeviceNumber: 0\n            DeleteOnVmDeletion: true\n            VmAccountId: VmAccountId\n            LinkNicId: LinkNicId\n            State: State\n            VmId: VmId\n          SubnetId: SubnetId\n          MacAddress: MacAddress\n          SubregionName: SubregionName\n          IsSourceDestChecked: true\n          PrivateIps:\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              LinkPublicIpId: LinkPublicIpId\n              PublicIpId: PublicIpId\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          State: State\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          NicId: NicId\n      properties:\n        Nic:\n          $ref: '#/components/schemas/Nic'\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n      type: object\n    UpdateRoutePropagationRequest:\n      additionalProperties: false\n      example:\n        RouteTableId: RouteTableId\n        DryRun: true\n        Enable: true\n        VirtualGatewayId: VirtualGatewayId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Enable:\n          description: If true, a virtual gateway can propagate routes to a specified\n            route table of a Net. If false, the propagation is disabled.\n          type: boolean\n        RouteTableId:\n          description: The ID of the route table.\n          type: string\n        VirtualGatewayId:\n          description: The ID of the virtual gateway.\n          type: string\n      required:\n      - Enable\n      - RouteTableId\n      - VirtualGatewayId\n      type: object\n    UpdateRoutePropagationResponse:\n      additionalProperties: false\n      example:\n        RouteTable:\n          NetId: NetId\n          RouteTableId: RouteTableId\n          RoutePropagatingVirtualGateways:\n          - VirtualGatewayId: VirtualGatewayId\n          - VirtualGatewayId: VirtualGatewayId\n          LinkRouteTables:\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          Routes:\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        RouteTable:\n          $ref: '#/components/schemas/RouteTable'\n      type: object\n    UpdateRouteRequest:\n      additionalProperties: false\n      example:\n        NatServiceId: NatServiceId\n        RouteTableId: RouteTableId\n        DestinationIpRange: DestinationIpRange\n        DryRun: true\n        NetPeeringId: NetPeeringId\n        VmId: VmId\n        GatewayId: GatewayId\n        NicId: NicId\n      properties:\n        DestinationIpRange:\n          description: The IP range used for the destination match, in CIDR notation\n            (for example, `10.0.0.0/24`).\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        GatewayId:\n          description: The ID of an Internet service or virtual gateway attached to\n            your Net.\n          type: string\n        NatServiceId:\n          description: The ID of a NAT service.\n          type: string\n        NetPeeringId:\n          description: The ID of a Net peering connection.\n          type: string\n        NicId:\n          description: The ID of a network interface card (NIC).\n          type: string\n        RouteTableId:\n          description: The ID of the route table.\n          type: string\n        VmId:\n          description: The ID of a NAT VM in your Net.\n          type: string\n      required:\n      - DestinationIpRange\n      - RouteTableId\n      type: object\n    UpdateRouteResponse:\n      additionalProperties: false\n      example:\n        RouteTable:\n          NetId: NetId\n          RouteTableId: RouteTableId\n          RoutePropagatingVirtualGateways:\n          - VirtualGatewayId: VirtualGatewayId\n          - VirtualGatewayId: VirtualGatewayId\n          LinkRouteTables:\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          - RouteTableId: RouteTableId\n            LinkRouteTableId: LinkRouteTableId\n            SubnetId: SubnetId\n            Main: true\n          Routes:\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          - NatServiceId: NatServiceId\n            VmAccountId: VmAccountId\n            CreationMethod: CreationMethod\n            State: State\n            DestinationIpRange: DestinationIpRange\n            NetPeeringId: NetPeeringId\n            VmId: VmId\n            NetAccessPointId: NetAccessPointId\n            DestinationServiceId: DestinationServiceId\n            GatewayId: GatewayId\n            NicId: NicId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        RouteTable:\n          $ref: '#/components/schemas/RouteTable'\n      type: object\n    UpdateServerCertificateRequest:\n      additionalProperties: false\n      example:\n        NewPath: NewPath\n        DryRun: true\n        NewName: NewName\n        Name: Name\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Name:\n          description: The name of the server certificate you want to modify.\n          type: string\n        NewName:\n          description: A new name for the server certificate.\n          type: string\n        NewPath:\n          description: A new path for the server certificate.\n          type: string\n      required:\n      - Name\n      type: object\n    UpdateServerCertificateResponse:\n      additionalProperties: false\n      example:\n        ServerCertificate:\n          Path: Path\n          UploadDate: 2000-01-23\n          ExpirationDate: 2000-01-23\n          Orn: Orn\n          Id: Id\n          Name: Name\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        ServerCertificate:\n          $ref: '#/components/schemas/ServerCertificate'\n      type: object\n    UpdateSnapshotRequest:\n      additionalProperties: false\n      example:\n        SnapshotId: SnapshotId\n        PermissionsToCreateVolume:\n          Additions:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          Removals:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n        DryRun: true\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        PermissionsToCreateVolume:\n          $ref: '#/components/schemas/PermissionsOnResourceCreation'\n        SnapshotId:\n          description: The ID of the snapshot.\n          type: string\n      required:\n      - PermissionsToCreateVolume\n      - SnapshotId\n      type: object\n    UpdateSnapshotResponse:\n      additionalProperties: false\n      example:\n        Snapshot:\n          CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          Progress: 0\n          VolumeId: VolumeId\n          AccountId: AccountId\n          Description: Description\n          State: State\n          PermissionsToCreateVolume:\n            AccountIds:\n            - AccountIds\n            - AccountIds\n            GlobalPermission: true\n          AccountAlias: AccountAlias\n          VolumeSize: 6\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Snapshot:\n          $ref: '#/components/schemas/Snapshot'\n      type: object\n    UpdateSubnetRequest:\n      additionalProperties: false\n      example:\n        MapPublicIpOnLaunch: true\n        DryRun: true\n        SubnetId: SubnetId\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        MapPublicIpOnLaunch:\n          description: If true, a public IP is assigned to the network interface cards\n            (NICs) created in the specified Subnet.\n          type: boolean\n        SubnetId:\n          description: The ID of the Subnet.\n          type: string\n      required:\n      - MapPublicIpOnLaunch\n      - SubnetId\n      type: object\n    UpdateSubnetResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Subnet:\n          IpRange: IpRange\n          NetId: NetId\n          AvailableIpsCount: 0\n          MapPublicIpOnLaunch: true\n          State: State\n          SubnetId: SubnetId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Subnet:\n          $ref: '#/components/schemas/Subnet'\n      type: object\n    UpdateVmRequest:\n      additionalProperties: false\n      example:\n        VmInitiatedShutdownBehavior: VmInitiatedShutdownBehavior\n        IsSourceDestChecked: true\n        UserData: UserData\n        BlockDeviceMappings:\n        - Bsu:\n            VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n          NoDevice: NoDevice\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        - Bsu:\n            VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n          NoDevice: NoDevice\n          VirtualDeviceName: VirtualDeviceName\n          DeviceName: DeviceName\n        DryRun: true\n        VmType: VmType\n        VmId: VmId\n        DeletionProtection: true\n        Performance: medium\n        SecurityGroupIds:\n        - SecurityGroupIds\n        - SecurityGroupIds\n        KeypairName: KeypairName\n        BsuOptimized: true\n      properties:\n        BlockDeviceMappings:\n          description: One or more block device mappings of the VM.\n          items:\n            $ref: '#/components/schemas/BlockDeviceMappingVmUpdate'\n          type: array\n        BsuOptimized:\n          description: This parameter is not available. It is present in our API for\n            the sake of historical compatibility with AWS.\n          type: boolean\n        DeletionProtection:\n          description: If true, you cannot delete the VM unless you change this parameter\n            back to false.\n          type: boolean\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        IsSourceDestChecked:\n          description: (Net only) If true, the source/destination check is enabled.\n            If false, it is disabled. This value must be false for a NAT VM to perform\n            network address translation (NAT) in a Net.\n          type: boolean\n        KeypairName:\n          description: |-\n            The name of the keypair.\u003cbr /\u003e\n            To complete the replacement, manually replace the old public key with the new public key in the ~/.ssh/authorized_keys file located in the VM. Restart the VM to apply the change.\n          type: string\n        Performance:\n          description: The performance of the VM (`medium` \\| `high` \\|  `highest`).\n          enum:\n          - medium\n          - high\n          - highest\n          type: string\n        SecurityGroupIds:\n          description: One or more IDs of security groups for the VM.\n          items:\n            type: string\n          type: array\n        UserData:\n          description: The Base64-encoded MIME user data, limited to 500 kibibytes\n            (KiB).\n          type: string\n        VmId:\n          description: The ID of the VM.\n          type: string\n        VmInitiatedShutdownBehavior:\n          description: The VM behavior when you stop it. If set to `stop`, the VM\n            stops. If set to `restart`, the VM stops then automatically restarts.\n            If set to `terminate`, the VM stops and is terminated.\n          type: string\n        VmType:\n          description: The type of VM. For more information, see [Instance Types](https://docs.outscale.com/en/userguide/Instance-Types.html).\n          type: string\n      required:\n      - VmId\n      type: object\n    UpdateVmResponse:\n      additionalProperties: false\n      example:\n        ResponseContext:\n          RequestId: RequestId\n        Vm:\n          CreationDate: CreationDate\n          SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          NetId: NetId\n          VmInitiatedShutdownBehavior: VmInitiatedShutdownBehavior\n          PrivateDnsName: PrivateDnsName\n          RootDeviceName: RootDeviceName\n          UserData: UserData\n          BlockDeviceMappings:\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          - Bsu:\n              VolumeId: VolumeId\n              DeleteOnVmDeletion: true\n              State: State\n              LinkDate: 2000-01-23\n            DeviceName: DeviceName\n          LaunchNumber: 0\n          SubnetId: SubnetId\n          BsuOptimized: true\n          IsSourceDestChecked: true\n          Placement:\n            Tenancy: Tenancy\n            SubregionName: SubregionName\n          PrivateIp: PrivateIp\n          ReservationId: ReservationId\n          ImageId: ImageId\n          VmType: VmType\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          ProductCodes:\n          - ProductCodes\n          - ProductCodes\n          Architecture: Architecture\n          Hypervisor: Hypervisor\n          PublicIp: PublicIp\n          DeletionProtection: true\n          PublicDnsName: PublicDnsName\n          KeypairName: KeypairName\n          Nics:\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          - SecurityGroups:\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            - SecurityGroupName: SecurityGroupName\n              SecurityGroupId: SecurityGroupId\n            LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            NetId: NetId\n            AccountId: AccountId\n            Description: Description\n            PrivateDnsName: PrivateDnsName\n            LinkNic:\n              DeviceNumber: 6\n              DeleteOnVmDeletion: true\n              LinkNicId: LinkNicId\n              State: State\n            SubnetId: SubnetId\n            MacAddress: MacAddress\n            IsSourceDestChecked: true\n            PrivateIps:\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            - LinkPublicIp:\n                PublicIp: PublicIp\n                PublicIpAccountId: PublicIpAccountId\n                PublicDnsName: PublicDnsName\n              PrivateDnsName: PrivateDnsName\n              PrivateIp: PrivateIp\n              IsPrimary: true\n            State: State\n            NicId: NicId\n          OsFamily: OsFamily\n          RootDeviceType: RootDeviceType\n          State: State\n          StateReason: StateReason\n          VmId: VmId\n          ClientToken: ClientToken\n          Performance: Performance\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Vm:\n          $ref: '#/components/schemas/Vm'\n      type: object\n    UpdateVolumeRequest:\n      additionalProperties: false\n      example:\n        VolumeId: VolumeId\n        VolumeType: VolumeType\n        Size: 6\n        DryRun: true\n        Iops: 0\n      properties:\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        Iops:\n          description: The new number of I/O operations per second (IOPS). This parameter\n            can be specified only if you update an `io1` volume. The maximum number\n            of IOPS allowed for `io1` volumes is `13000`. This modification is instantaneous\n            on a cold volume, not on a hot one.\n          type: integer\n        Size:\n          description: (cold volume only) The new size of the volume, in gibibytes\n            (GiB). This value must be equal to or greater than the current size of\n            the volume. This modification is not instantaneous.\n          type: integer\n        VolumeId:\n          description: The ID of the volume you want to update.\n          type: string\n        VolumeType:\n          description: (cold volume only) The new type of the volume (`standard` \\|\n            `io1` \\| `gp2`). This modification is instantaneous. If you update to\n            an `io1` volume, you must also specify the `Iops` parameter.\n          type: string\n      required:\n      - VolumeId\n      type: object\n    UpdateVolumeResponse:\n      additionalProperties: false\n      example:\n        Volume:\n          CreationDate: CreationDate\n          SnapshotId: SnapshotId\n          VolumeId: VolumeId\n          VolumeType: VolumeType\n          Size: 6\n          State: State\n          LinkedVolumes:\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          - VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            VmId: VmId\n            DeviceName: DeviceName\n          Iops: 0\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          SubregionName: SubregionName\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        Volume:\n          $ref: '#/components/schemas/Volume'\n      type: object\n    UpdateVpnConnectionRequest:\n      additionalProperties: false\n      example:\n        ClientGatewayId: ClientGatewayId\n        VpnOptions:\n          Phase1Options:\n            DpdTimeoutSeconds: 6\n            StartupAction: StartupAction\n            Phase1IntegrityAlgorithms:\n            - Phase1IntegrityAlgorithms\n            - Phase1IntegrityAlgorithms\n            Phase1LifetimeSeconds: 5\n            Phase1EncryptionAlgorithms:\n            - Phase1EncryptionAlgorithms\n            - Phase1EncryptionAlgorithms\n            DpdTimeoutAction: DpdTimeoutAction\n            ReplayWindowSize: 5\n            IkeVersions:\n            - IkeVersions\n            - IkeVersions\n            Phase1DhGroupNumbers:\n            - 1\n            - 1\n          TunnelInsideIpRange: TunnelInsideIpRange\n          Phase2Options:\n            Phase2EncryptionAlgorithms:\n            - Phase2EncryptionAlgorithms\n            - Phase2EncryptionAlgorithms\n            Phase2DhGroupNumbers:\n            - 2\n            - 2\n            Phase2LifetimeSeconds: 7\n            Phase2IntegrityAlgorithms:\n            - Phase2IntegrityAlgorithms\n            - Phase2IntegrityAlgorithms\n            PreSharedKey: PreSharedKey\n        DryRun: true\n        VpnConnectionId: VpnConnectionId\n        VirtualGatewayId: VirtualGatewayId\n      properties:\n        ClientGatewayId:\n          description: The ID of the client gateway.\n          type: string\n        DryRun:\n          description: If true, checks whether you have the required permissions to\n            perform the action.\n          type: boolean\n        VirtualGatewayId:\n          description: The ID of the virtual gateway.\n          type: string\n        VpnConnectionId:\n          description: The ID of the VPN connection you want to modify.\n          type: string\n        VpnOptions:\n          $ref: '#/components/schemas/VpnOptions'\n      required:\n      - VpnConnectionId\n      type: object\n    UpdateVpnConnectionResponse:\n      additionalProperties: false\n      example:\n        VpnConnection:\n          ConnectionType: ConnectionType\n          ClientGatewayId: ClientGatewayId\n          State: State\n          VpnOptions:\n            Phase1Options:\n              DpdTimeoutSeconds: 6\n              StartupAction: StartupAction\n              Phase1IntegrityAlgorithms:\n              - Phase1IntegrityAlgorithms\n              - Phase1IntegrityAlgorithms\n              Phase1LifetimeSeconds: 5\n              Phase1EncryptionAlgorithms:\n              - Phase1EncryptionAlgorithms\n              - Phase1EncryptionAlgorithms\n              DpdTimeoutAction: DpdTimeoutAction\n              ReplayWindowSize: 5\n              IkeVersions:\n              - IkeVersions\n              - IkeVersions\n              Phase1DhGroupNumbers:\n              - 1\n              - 1\n            TunnelInsideIpRange: TunnelInsideIpRange\n            Phase2Options:\n              Phase2EncryptionAlgorithms:\n              - Phase2EncryptionAlgorithms\n              - Phase2EncryptionAlgorithms\n              Phase2DhGroupNumbers:\n              - 2\n              - 2\n              Phase2LifetimeSeconds: 7\n              Phase2IntegrityAlgorithms:\n              - Phase2IntegrityAlgorithms\n              - Phase2IntegrityAlgorithms\n              PreSharedKey: PreSharedKey\n          ClientGatewayConfiguration: ClientGatewayConfiguration\n          Routes:\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          - RouteType: RouteType\n            State: State\n            DestinationIpRange: DestinationIpRange\n          StaticRoutesOnly: true\n          VpnConnectionId: VpnConnectionId\n          VirtualGatewayId: VirtualGatewayId\n          Tags:\n          - Value: Value\n            Key: Key\n          - Value: Value\n            Key: Key\n          VgwTelemetries:\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n          - OutsideIpAddress: OutsideIpAddress\n            LastStateChangeDate: LastStateChangeDate\n            State: State\n            AcceptedRouteCount: 0\n            StateDescription: StateDescription\n        ResponseContext:\n          RequestId: RequestId\n      properties:\n        ResponseContext:\n          $ref: '#/components/schemas/ResponseContext'\n        VpnConnection:\n          $ref: '#/components/schemas/VpnConnection'\n      type: object\n    VgwTelemetry:\n      additionalProperties: false\n      description: Information about the current state of a VPN tunnel.\n      example:\n        OutsideIpAddress: OutsideIpAddress\n        LastStateChangeDate: LastStateChangeDate\n        State: State\n        AcceptedRouteCount: 0\n        StateDescription: StateDescription\n      properties:\n        AcceptedRouteCount:\n          description: The number of routes accepted through BGP (Border Gateway Protocol)\n            route exchanges.\n          type: integer\n        LastStateChangeDate:\n          description: The date and time (UTC) of the latest state update.\n          format: datetime\n          type: string\n        OutsideIpAddress:\n          description: The IP on the OUTSCALE side of the tunnel.\n          type: string\n        State:\n          description: The state of the IPSEC tunnel (`UP` \\| `DOWN`).\n          type: string\n        StateDescription:\n          description: A description of the current state of the tunnel.\n          type: string\n      type: object\n    VirtualGateway:\n      additionalProperties: false\n      description: Information about the virtual gateway.\n      example:\n        ConnectionType: ConnectionType\n        NetToVirtualGatewayLinks:\n        - NetId: NetId\n          State: State\n        - NetId: NetId\n          State: State\n        State: State\n        VirtualGatewayId: VirtualGatewayId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n      properties:\n        ConnectionType:\n          description: The type of VPN connection supported by the virtual gateway\n            (only `ipsec.1` is supported).\n          type: string\n        NetToVirtualGatewayLinks:\n          description: The Net to which the virtual gateway is attached.\n          items:\n            $ref: '#/components/schemas/NetToVirtualGatewayLink'\n          type: array\n        State:\n          description: The state of the virtual gateway (`pending` \\| `available`\n            \\| `deleting` \\| `deleted`).\n          type: string\n        Tags:\n          description: One or more tags associated with the virtual gateway.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        VirtualGatewayId:\n          description: The ID of the virtual gateway.\n          type: string\n      type: object\n    Vm:\n      additionalProperties: false\n      description: Information about the VM.\n      example:\n        CreationDate: CreationDate\n        SecurityGroups:\n        - SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        - SecurityGroupName: SecurityGroupName\n          SecurityGroupId: SecurityGroupId\n        NetId: NetId\n        VmInitiatedShutdownBehavior: VmInitiatedShutdownBehavior\n        PrivateDnsName: PrivateDnsName\n        RootDeviceName: RootDeviceName\n        UserData: UserData\n        BlockDeviceMappings:\n        - Bsu:\n            VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            LinkDate: 2000-01-23\n          DeviceName: DeviceName\n        - Bsu:\n            VolumeId: VolumeId\n            DeleteOnVmDeletion: true\n            State: State\n            LinkDate: 2000-01-23\n          DeviceName: DeviceName\n        LaunchNumber: 0\n        SubnetId: SubnetId\n        BsuOptimized: true\n        IsSourceDestChecked: true\n        Placement:\n          Tenancy: Tenancy\n          SubregionName: SubregionName\n        PrivateIp: PrivateIp\n        ReservationId: ReservationId\n        ImageId: ImageId\n        VmType: VmType\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n        ProductCodes:\n        - ProductCodes\n        - ProductCodes\n        Architecture: Architecture\n        Hypervisor: Hypervisor\n        PublicIp: PublicIp\n        DeletionProtection: true\n        PublicDnsName: PublicDnsName\n        KeypairName: KeypairName\n        Nics:\n        - SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          LinkPublicIp:\n            PublicIp: PublicIp\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          PrivateDnsName: PrivateDnsName\n          LinkNic:\n            DeviceNumber: 6\n            DeleteOnVmDeletion: true\n            LinkNicId: LinkNicId\n            State: State\n          SubnetId: SubnetId\n          MacAddress: MacAddress\n          IsSourceDestChecked: true\n          PrivateIps:\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          State: State\n          NicId: NicId\n        - SecurityGroups:\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          - SecurityGroupName: SecurityGroupName\n            SecurityGroupId: SecurityGroupId\n          LinkPublicIp:\n            PublicIp: PublicIp\n            PublicIpAccountId: PublicIpAccountId\n            PublicDnsName: PublicDnsName\n          NetId: NetId\n          AccountId: AccountId\n          Description: Description\n          PrivateDnsName: PrivateDnsName\n          LinkNic:\n            DeviceNumber: 6\n            DeleteOnVmDeletion: true\n            LinkNicId: LinkNicId\n            State: State\n          SubnetId: SubnetId\n          MacAddress: MacAddress\n          IsSourceDestChecked: true\n          PrivateIps:\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          - LinkPublicIp:\n              PublicIp: PublicIp\n              PublicIpAccountId: PublicIpAccountId\n              PublicDnsName: PublicDnsName\n            PrivateDnsName: PrivateDnsName\n            PrivateIp: PrivateIp\n            IsPrimary: true\n          State: State\n          NicId: NicId\n        OsFamily: OsFamily\n        RootDeviceType: RootDeviceType\n        State: State\n        StateReason: StateReason\n        VmId: VmId\n        ClientToken: ClientToken\n        Performance: Performance\n      properties:\n        Architecture:\n          description: The architecture of the VM (`i386` \\| `x86_64`).\n          type: string\n        BlockDeviceMappings:\n          description: The block device mapping of the VM.\n          items:\n            $ref: '#/components/schemas/BlockDeviceMappingCreated'\n          type: array\n        BsuOptimized:\n          description: This parameter is not available. It is present in our API for\n            the sake of historical compatibility with AWS.\n          type: boolean\n        ClientToken:\n          description: The idempotency token provided when launching the VM.\n          type: string\n        CreationDate:\n          description: The date and time at which the VM was created.\n          format: datetime\n          type: string\n        DeletionProtection:\n          description: If true, you cannot delete the VM unless you change this parameter\n            back to false.\n          type: boolean\n        Hypervisor:\n          description: The hypervisor type of the VMs (`ovm` \\| `xen`).\n          type: string\n        ImageId:\n          description: The ID of the OMI used to create the VM.\n          type: string\n        IsSourceDestChecked:\n          description: (Net only) If true, the source/destination check is enabled.\n            If false, it is disabled. This value must be false for a NAT VM to perform\n            network address translation (NAT) in a Net.\n          type: boolean\n        KeypairName:\n          description: The name of the keypair used when launching the VM.\n          type: string\n        LaunchNumber:\n          description: The number for the VM when launching a group of several VMs\n            (for example, `0`, `1`, `2`, and so on).\n          type: integer\n        NetId:\n          description: The ID of the Net in which the VM is running.\n          type: string\n        Nics:\n          description: (Net only) The network interface cards (NICs) the VMs are attached\n            to.\n          items:\n            $ref: '#/components/schemas/NicLight'\n          type: array\n        OsFamily:\n          description: Indicates the operating system (OS) of the VM.\n          type: string\n        Performance:\n          description: The performance of the VM (`medium` \\| `high` \\|  `highest`).\n          type: string\n        Placement:\n          $ref: '#/components/schemas/Placement'\n        PrivateDnsName:\n          description: The name of the private DNS.\n          type: string\n        PrivateIp:\n          description: The primary private IP of the VM.\n          type: string\n        ProductCodes:\n          description: The product code associated with the OMI used to create the\n            VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005`\n            Windows 10).\n          items:\n            type: string\n          type: array\n        PublicDnsName:\n          description: The name of the public DNS.\n          type: string\n        PublicIp:\n          description: The public IP of the VM.\n          type: string\n        ReservationId:\n          description: The reservation ID of the VM.\n          type: string\n        RootDeviceName:\n          description: The name of the root device for the VM (for example, `/dev/vda1`).\n          type: string\n        RootDeviceType:\n          description: The type of root device used by the VM (always `bsu`).\n          type: string\n        SecurityGroups:\n          description: One or more security groups associated with the VM.\n          items:\n            $ref: '#/components/schemas/SecurityGroupLight'\n          type: array\n        State:\n          description: The state of the VM (`pending` \\| `running` \\| `stopping` \\|\n            `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).\n          type: string\n        StateReason:\n          description: The reason explaining the current state of the VM.\n          type: string\n        SubnetId:\n          description: The ID of the Subnet for the VM.\n          type: string\n        Tags:\n          description: One or more tags associated with the VM.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        UserData:\n          description: The Base64-encoded MIME user data.\n          type: string\n        VmId:\n          description: The ID of the VM.\n          type: string\n        VmInitiatedShutdownBehavior:\n          description: The VM behavior when you stop it. If set to `stop`, the VM\n            stops. If set to `restart`, the VM stops then automatically restarts.\n            If set to `terminate`, the VM stops and is deleted.\n          type: string\n        VmType:\n          description: The type of VM. For more information, see [Instance Types](https://docs.outscale.com/en/userguide/Instance-Types.html).\n          type: string\n      type: object\n    VmState:\n      additionalProperties: false\n      description: Information about the state of the VM.\n      example:\n        CurrentState: CurrentState\n        VmId: VmId\n        PreviousState: PreviousState\n      properties:\n        CurrentState:\n          description: The current state of the VM (`InService` \\| `OutOfService`\n            \\| `Unknown`).\n          type: string\n        PreviousState:\n          description: The previous state of the VM (`InService` \\| `OutOfService`\n            \\| `Unknown`).\n          type: string\n        VmId:\n          description: The ID of the VM.\n          type: string\n      type: object\n    VmStates:\n      additionalProperties: false\n      description: Information about the states of the VMs.\n      example:\n        VmState: VmState\n        MaintenanceEvents:\n        - Description: Description\n          NotAfter: 2000-01-23\n          NotBefore: 2000-01-23\n          Code: Code\n        - Description: Description\n          NotAfter: 2000-01-23\n          NotBefore: 2000-01-23\n          Code: Code\n        VmId: VmId\n        SubregionName: SubregionName\n      properties:\n        MaintenanceEvents:\n          description: One or more scheduled events associated with the VM.\n          items:\n            $ref: '#/components/schemas/MaintenanceEvent'\n          type: array\n        SubregionName:\n          description: The name of the Subregion of the VM.\n          type: string\n        VmId:\n          description: The ID of the VM.\n          type: string\n        VmState:\n          description: The state of the VM (`pending` \\| `running` \\| `stopping` \\|\n            `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).\n          type: string\n      type: object\n    VmType:\n      additionalProperties: false\n      description: Information about the VM type.\n      example:\n        MemorySize: 6.0274563\n        VcoreCount: 1\n        MaxPrivateIps: 0\n        VmTypeName: VmTypeName\n        VolumeCount: 5\n        VolumeSize: 5\n        BsuOptimized: true\n      properties:\n        BsuOptimized:\n          description: This parameter is not available. It is present in our API for\n            the sake of historical compatibility with AWS.\n          type: boolean\n        MaxPrivateIps:\n          description: The maximum number of private IPs per network interface card\n            (NIC).\n          type: integer\n        MemorySize:\n          description: The amount of memory, in gibibytes.\n          format: float\n          type: number\n        VcoreCount:\n          description: The number of vCores.\n          type: integer\n        VmTypeName:\n          description: The name of the VM type.\n          type: string\n        VolumeCount:\n          description: The maximum number of ephemeral storage disks.\n          type: integer\n        VolumeSize:\n          description: The size of one ephemeral storage disk, in gibibytes (GiB).\n          type: integer\n      type: object\n    Volume:\n      additionalProperties: false\n      description: Information about the volume.\n      example:\n        CreationDate: CreationDate\n        SnapshotId: SnapshotId\n        VolumeId: VolumeId\n        VolumeType: VolumeType\n        Size: 6\n        State: State\n        LinkedVolumes:\n        - VolumeId: VolumeId\n          DeleteOnVmDeletion: true\n          State: State\n          VmId: VmId\n          DeviceName: DeviceName\n        - VolumeId: VolumeId\n          DeleteOnVmDeletion: true\n          State: State\n          VmId: VmId\n          DeviceName: DeviceName\n        Iops: 0\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n        SubregionName: SubregionName\n      properties:\n        CreationDate:\n          description: The date and time of creation of the volume.\n          format: datetime\n          type: string\n        Iops:\n          description: |-\n            The number of I/O operations per second (IOPS):\u003cbr /\u003e\n            - For `io1` volumes, the number of provisioned IOPS\u003cbr /\u003e\n            - For `gp2` volumes, the baseline performance of the volume\n          type: integer\n        LinkedVolumes:\n          description: Information about your volume attachment.\n          items:\n            $ref: '#/components/schemas/LinkedVolume'\n          type: array\n        Size:\n          description: The size of the volume, in gibibytes (GiB).\n          type: integer\n        SnapshotId:\n          description: The snapshot from which the volume was created.\n          type: string\n        State:\n          description: The state of the volume (`creating` \\| `available` \\| `in-use`\n            \\| `updating` \\| `deleting` \\| `error`).\n          type: string\n        SubregionName:\n          description: The Subregion in which the volume was created.\n          type: string\n        Tags:\n          description: One or more tags associated with the volume.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        VolumeId:\n          description: The ID of the volume.\n          type: string\n        VolumeType:\n          description: The type of the volume (`standard` \\| `gp2` \\| `io1`).\n          type: string\n      type: object\n    VpnConnection:\n      additionalProperties: false\n      description: Information about a VPN connection.\n      example:\n        ConnectionType: ConnectionType\n        ClientGatewayId: ClientGatewayId\n        State: State\n        VpnOptions:\n          Phase1Options:\n            DpdTimeoutSeconds: 6\n            StartupAction: StartupAction\n            Phase1IntegrityAlgorithms:\n            - Phase1IntegrityAlgorithms\n            - Phase1IntegrityAlgorithms\n            Phase1LifetimeSeconds: 5\n            Phase1EncryptionAlgorithms:\n            - Phase1EncryptionAlgorithms\n            - Phase1EncryptionAlgorithms\n            DpdTimeoutAction: DpdTimeoutAction\n            ReplayWindowSize: 5\n            IkeVersions:\n            - IkeVersions\n            - IkeVersions\n            Phase1DhGroupNumbers:\n            - 1\n            - 1\n          TunnelInsideIpRange: TunnelInsideIpRange\n          Phase2Options:\n            Phase2EncryptionAlgorithms:\n            - Phase2EncryptionAlgorithms\n            - Phase2EncryptionAlgorithms\n            Phase2DhGroupNumbers:\n            - 2\n            - 2\n            Phase2LifetimeSeconds: 7\n            Phase2IntegrityAlgorithms:\n            - Phase2IntegrityAlgorithms\n            - Phase2IntegrityAlgorithms\n            PreSharedKey: PreSharedKey\n        ClientGatewayConfiguration: ClientGatewayConfiguration\n        Routes:\n        - RouteType: RouteType\n          State: State\n          DestinationIpRange: DestinationIpRange\n        - RouteType: RouteType\n          State: State\n          DestinationIpRange: DestinationIpRange\n        StaticRoutesOnly: true\n        VpnConnectionId: VpnConnectionId\n        VirtualGatewayId: VirtualGatewayId\n        Tags:\n        - Value: Value\n          Key: Key\n        - Value: Value\n          Key: Key\n        VgwTelemetries:\n        - OutsideIpAddress: OutsideIpAddress\n          LastStateChangeDate: LastStateChangeDate\n          State: State\n          AcceptedRouteCount: 0\n          StateDescription: StateDescription\n        - OutsideIpAddress: OutsideIpAddress\n          LastStateChangeDate: LastStateChangeDate\n          State: State\n          AcceptedRouteCount: 0\n          StateDescription: StateDescription\n      properties:\n        ClientGatewayConfiguration:\n          description: Example configuration for the client gateway.\n          type: string\n        ClientGatewayId:\n          description: The ID of the client gateway used on the client end of the\n            connection.\n          type: string\n        ConnectionType:\n          description: The type of VPN connection (always `ipsec.1`).\n          type: string\n        Routes:\n          description: Information about one or more static routes associated with\n            the VPN connection, if any.\n          items:\n            $ref: '#/components/schemas/RouteLight'\n          type: array\n        State:\n          description: The state of the VPN connection (`pending` \\| `available` \\|\n            `deleting` \\| `deleted`).\n          type: string\n        StaticRoutesOnly:\n          description: If false, the VPN connection uses dynamic routing with Border\n            Gateway Protocol (BGP). If true, routing is controlled using static routes.\n            For more information about how to create and delete static routes, see\n            [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).\n          type: boolean\n        Tags:\n          description: One or more tags associated with the VPN connection.\n          items:\n            $ref: '#/components/schemas/ResourceTag'\n          type: array\n        VgwTelemetries:\n          description: Information about the current state of one or more of the VPN\n            tunnels.\n          items:\n            $ref: '#/components/schemas/VgwTelemetry'\n          type: array\n        VirtualGatewayId:\n          description: The ID of the virtual gateway used on the OUTSCALE end of the\n            connection.\n          type: string\n        VpnConnectionId:\n          description: The ID of the VPN connection.\n          type: string\n        VpnOptions:\n          $ref: '#/components/schemas/VpnOptions'\n      type: object\n    VpnOptions:\n      additionalProperties: false\n      description: Information about the VPN options.\n      example:\n        Phase1Options:\n          DpdTimeoutSeconds: 6\n          StartupAction: StartupAction\n          Phase1IntegrityAlgorithms:\n          - Phase1IntegrityAlgorithms\n          - Phase1IntegrityAlgorithms\n          Phase1LifetimeSeconds: 5\n          Phase1EncryptionAlgorithms:\n          - Phase1EncryptionAlgorithms\n          - Phase1EncryptionAlgorithms\n          DpdTimeoutAction: DpdTimeoutAction\n          ReplayWindowSize: 5\n          IkeVersions:\n          - IkeVersions\n          - IkeVersions\n          Phase1DhGroupNumbers:\n          - 1\n          - 1\n        TunnelInsideIpRange: TunnelInsideIpRange\n        Phase2Options:\n          Phase2EncryptionAlgorithms:\n          - Phase2EncryptionAlgorithms\n          - Phase2EncryptionAlgorithms\n          Phase2DhGroupNumbers:\n          - 2\n          - 2\n          Phase2LifetimeSeconds: 7\n          Phase2IntegrityAlgorithms:\n          - Phase2IntegrityAlgorithms\n          - Phase2IntegrityAlgorithms\n          PreSharedKey: PreSharedKey\n      properties:\n        Phase1Options:\n          $ref: '#/components/schemas/Phase1Options'\n        Phase2Options:\n          $ref: '#/components/schemas/Phase2Options'\n        TunnelInsideIpRange:\n          description: The range of inside IPs for the tunnel. This must be a /30\n            CIDR block from the 169.254.254.0/24 range.\n          type: string\n      type: object\n    With:\n      additionalProperties: false\n      description: The information to display in each returned log.\n      example:\n        QueryAccessKey: true\n        QueryApiName: true\n        QueryDate: true\n        AccountId: true\n        QueryPayloadSize: true\n        RequestId: true\n        QueryUserAgent: true\n        QueryApiVersion: true\n        QueryHeaderSize: true\n        QueryCallName: true\n        CallDuration: true\n        QueryPayloadRaw: true\n        QueryIpAddress: true\n        ResponseSize: true\n        ResponseStatusCode: true\n        QueryHeaderRaw: true\n      properties:\n        AccountId:\n          default: true\n          description: By default or if set to true, the account ID is displayed.\n          type: boolean\n        CallDuration:\n          default: true\n          description: By default or if set to true, the duration of the call is displayed.\n          type: boolean\n        QueryAccessKey:\n          default: true\n          description: By default or if set to true, the access key is displayed.\n          type: boolean\n        QueryApiName:\n          default: true\n          description: By default or if set to true, the name of the API is displayed.\n          type: boolean\n        QueryApiVersion:\n          default: true\n          description: By default or if set to true, the version of the API is displayed.\n          type: boolean\n        QueryCallName:\n          default: true\n          description: By default or if set to true, the name of the call is displayed.\n          type: boolean\n        QueryDate:\n          default: true\n          description: By default or if set to true, the date of the call is displayed.\n          type: boolean\n        QueryHeaderRaw:\n          default: true\n          description: By default or if set to true, the raw header of the HTTP request\n            is displayed.\n          type: boolean\n        QueryHeaderSize:\n          default: true\n          description: By default or if set to true, the size of the raw header of\n            the HTTP request is displayed.\n          type: boolean\n        QueryIpAddress:\n          default: true\n          description: By default or if set to true, the IP is displayed.\n          type: boolean\n        QueryPayloadRaw:\n          default: true\n          description: By default or if set to true, the raw payload of the HTTP request\n            is displayed.\n          type: boolean\n        QueryPayloadSize:\n          default: true\n          description: By default or if set to true, the size of the raw payload of\n            the HTTP request is displayed.\n          type: boolean\n        QueryUserAgent:\n          default: true\n          description: By default or if set to true, the user agent of the HTTP request\n            is displayed.\n          type: boolean\n        RequestId:\n          default: true\n          description: By default or if set to true, the request ID is displayed.\n          type: boolean\n        ResponseSize:\n          default: true\n          description: By default or if set to true, the size of the response is displayed.\n          type: boolean\n        ResponseStatusCode:\n          default: true\n          description: By default or if set to true, the HTTP status code of the response\n            is displayed.\n          type: boolean\n      type: object\n  securitySchemes:\n    ApiKeyAuth:\n      description: |-\n        With this authentication scheme, you must use an access key to sign your API requests. For more information, see [About Signatures of API Requests](https://docs.outscale.com/en/userguide/About-Signatures-of-API-Requests.html).\u003cbr /\u003e\n        In addition to your access key, you can configure API access rules with Certificate Authorities (CAs), requiring you to provide a certificate to perform actions. In that case, you can bypass systematically providing a certificate by activating a trusted session. For more information, see the [UpdateApiAccessPolicy](#updateapiaccesspolicy) method and [About Your API Access Policy](https://docs.outscale.com/en/userguide/About-Your-API-Access-Policy.html).\n      in: header\n      name: Authorization\n      type: apiKey\n    ApiKeyAuthSec:\n      description: |-\n        With this authentication scheme, you must use an access key to sign your API requests. For more information, see [About Signatures of API Requests](https://docs.outscale.com/en/userguide/About-Signatures-of-API-Requests.html).\u003cbr /\u003e\n        In addition to your access key, if you have configured API access rules with a Certificate Authority (CA), you cannot bypass systematically providing a certificate even if you activate a trusted session. For more information, see [About Your API Access Policy](https://docs.outscale.com/en/userguide/About-Your-API-Access-Policy.html).\n      in: header\n      name: Authorization\n      type: apiKey\n    BasicAuth:\n      description: |-\n        With this authentication scheme, you must specify an authentication field in the header of your API request, containing the following information: `Authorization: Basic XXXX`, where `XXXX` is your `email:password` encoded in Base64.\u003cbr /\u003e\n        In addition to your email and password combination, if you have configured API access rules with a Certificate Authority (CA), you cannot bypass systematically providing a certificate even if you activate a trusted session. For more information, see [About Your API Access Policy](https://docs.outscale.com/en/userguide/About-Your-API-Access-Policy.html).\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/outscale/osc-sdk-go@21054cb50c14bcacc9c259ace99f7d2ea6c635ab/-/blob/v2/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/outscale/osc-sdk-go/blob/21054cb50c14bcacc9c259ace99f7d2ea6c635ab/v2/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}