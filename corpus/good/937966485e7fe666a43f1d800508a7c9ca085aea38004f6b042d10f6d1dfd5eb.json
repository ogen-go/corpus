{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TempleEight/temple"
		},
		"file": {
			"name": "simple-temple-test.openapi.yaml",
			"size": 0,
			"path": "src/e2e/resources/simple-temple-expected/api/simple-temple-test.openapi.yaml",
			"byteSize": 23330,
			"content": "openapi: 3.0.0\ninfo:\n  title: SimpleTempleTest\n  version: 0.0.1\npaths:\n  /simple-temple-test-user/all:\n    get:\n      summary: Get a list of every simpletempletestuser\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestUser\n      responses:\n        '200':\n          description: SimpleTempleTestUser list successfully fetched\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      format: uuid\n                    simpleTempleTestLog:\n                      type: string\n                    email:\n                      type: string\n                      minLength: 5\n                      maxLength: 40\n                    firstName:\n                      type: string\n                    lastName:\n                      type: string\n                    createdAt:\n                      type: string\n                      format: date-time\n                    numberOfDogs:\n                      type: number\n                      format: int32\n                    currentBankBalance:\n                      type: number\n                      format: float\n                      minimum: 0.0\n                    birthDate:\n                      type: string\n                      format: date\n                    breakfastTime:\n                      type: string\n                      format: time\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /simple-temple-test-user:\n    post:\n      summary: Register a new simpletempletestuser\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                simpleTempleTestLog:\n                  type: string\n                email:\n                  type: string\n                  minLength: 5\n                  maxLength: 40\n                firstName:\n                  type: string\n                lastName:\n                  type: string\n                createdAt:\n                  type: string\n                  format: date-time\n                numberOfDogs:\n                  type: number\n                  format: int32\n                currentBankBalance:\n                  type: number\n                  format: float\n                  minimum: 0.0\n                birthDate:\n                  type: string\n                  format: date\n                breakfastTime:\n                  type: string\n                  format: time\n      responses:\n        '200':\n          description: SimpleTempleTestUser successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  simpleTempleTestLog:\n                    type: string\n                  email:\n                    type: string\n                    minLength: 5\n                    maxLength: 40\n                  firstName:\n                    type: string\n                  lastName:\n                    type: string\n                  createdAt:\n                    type: string\n                    format: date-time\n                  numberOfDogs:\n                    type: number\n                    format: int32\n                  currentBankBalance:\n                    type: number\n                    format: float\n                    minimum: 0.0\n                  birthDate:\n                    type: string\n                    format: date\n                  breakfastTime:\n                    type: string\n                    format: time\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n    get:\n      summary: Look up the single simpletempletestuser associated with the access\n        token\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestUser\n      responses:\n        '302':\n          description: The single simpletempletestuser is accessible from the provided\n            Location\n          headers:\n            Location:\n              description: The location where the single simpletempletestuser can\n                be found\n              schema:\n                type: string\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /simple-temple-test-user/{id}:\n    parameters:\n    - in: path\n      name: id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the simpletempletestuser to perform operations on\n    get:\n      summary: Look up a single simpletempletestuser\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestUser\n      responses:\n        '200':\n          description: SimpleTempleTestUser details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  simpleTempleTestLog:\n                    type: string\n                  email:\n                    type: string\n                    minLength: 5\n                    maxLength: 40\n                  firstName:\n                    type: string\n                  lastName:\n                    type: string\n                  createdAt:\n                    type: string\n                    format: date-time\n                  numberOfDogs:\n                    type: number\n                    format: int32\n                  currentBankBalance:\n                    type: number\n                    format: float\n                    minimum: 0.0\n                  birthDate:\n                    type: string\n                    format: date\n                  breakfastTime:\n                    type: string\n                    format: time\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    put:\n      summary: Update a single simpletempletestuser\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                simpleTempleTestLog:\n                  type: string\n                email:\n                  type: string\n                  minLength: 5\n                  maxLength: 40\n                firstName:\n                  type: string\n                lastName:\n                  type: string\n                createdAt:\n                  type: string\n                  format: date-time\n                numberOfDogs:\n                  type: number\n                  format: int32\n                currentBankBalance:\n                  type: number\n                  format: float\n                  minimum: 0.0\n                birthDate:\n                  type: string\n                  format: date\n                breakfastTime:\n                  type: string\n                  format: time\n      responses:\n        '200':\n          description: SimpleTempleTestUser successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  simpleTempleTestLog:\n                    type: string\n                  email:\n                    type: string\n                    minLength: 5\n                    maxLength: 40\n                  firstName:\n                    type: string\n                  lastName:\n                    type: string\n                  createdAt:\n                    type: string\n                    format: date-time\n                  numberOfDogs:\n                    type: number\n                    format: int32\n                  currentBankBalance:\n                    type: number\n                    format: float\n                    minimum: 0.0\n                  birthDate:\n                    type: string\n                    format: date\n                  breakfastTime:\n                    type: string\n                    format: time\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /simple-temple-test-user/{parent_id}/fred/all:\n    parameters:\n    - in: path\n      name: parent_id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the parent which owns this entity\n    get:\n      summary: Get a list of every fred\n      security:\n      - bearerAuth: []\n      tags:\n      - Fred\n      responses:\n        '200':\n          description: Fred list successfully fetched\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      format: uuid\n                    field:\n                      type: string\n                    friend:\n                      type: number\n                      format: int32\n                      description: Reference to SimpleTempleTestUser ID\n                    image:\n                      type: string\n                      maxLength: 10000000\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /simple-temple-test-user/{parent_id}/fred:\n    parameters:\n    - in: path\n      name: parent_id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the parent which owns this entity\n    post:\n      summary: Register a new fred\n      security:\n      - bearerAuth: []\n      tags:\n      - Fred\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                field:\n                  type: string\n                friend:\n                  type: number\n                  format: int32\n                  description: Reference to SimpleTempleTestUser ID\n                image:\n                  type: string\n                  maxLength: 10000000\n      responses:\n        '200':\n          description: Fred successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  field:\n                    type: string\n                  friend:\n                    type: number\n                    format: int32\n                    description: Reference to SimpleTempleTestUser ID\n                  image:\n                    type: string\n                    maxLength: 10000000\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /simple-temple-test-user/{parent_id}/fred/{id}:\n    parameters:\n    - in: path\n      name: id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the fred to perform operations on\n    - in: path\n      name: parent_id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the parent which owns this entity\n    get:\n      summary: Look up a single fred\n      security:\n      - bearerAuth: []\n      tags:\n      - Fred\n      responses:\n        '200':\n          description: Fred details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  field:\n                    type: string\n                  friend:\n                    type: number\n                    format: int32\n                    description: Reference to SimpleTempleTestUser ID\n                  image:\n                    type: string\n                    maxLength: 10000000\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    put:\n      summary: Update a single fred\n      security:\n      - bearerAuth: []\n      tags:\n      - Fred\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                field:\n                  type: string\n                friend:\n                  type: number\n                  format: int32\n                  description: Reference to SimpleTempleTestUser ID\n                image:\n                  type: string\n                  maxLength: 10000000\n      responses:\n        '200':\n          description: Fred successfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n                  field:\n                    type: string\n                  friend:\n                    type: number\n                    format: int32\n                    description: Reference to SimpleTempleTestUser ID\n                  image:\n                    type: string\n                    maxLength: 10000000\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    delete:\n      summary: Delete a single fred\n      security:\n      - bearerAuth: []\n      tags:\n      - Fred\n      responses:\n        '200':\n          description: Fred successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /booking:\n    post:\n      summary: Register a new booking\n      security:\n      - bearerAuth: []\n      tags:\n      - Booking\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        '200':\n          description: Booking successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /booking/{id}:\n    parameters:\n    - in: path\n      name: id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the booking to perform operations on\n    get:\n      summary: Look up a single booking\n      security:\n      - bearerAuth: []\n      tags:\n      - Booking\n      responses:\n        '200':\n          description: Booking details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    delete:\n      summary: Delete a single booking\n      security:\n      - bearerAuth: []\n      tags:\n      - Booking\n      responses:\n        '200':\n          description: Booking successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /simple-temple-test-group:\n    post:\n      summary: Register a new simpletempletestgroup\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        '200':\n          description: SimpleTempleTestGroup successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /simple-temple-test-group/{id}:\n    parameters:\n    - in: path\n      name: id\n      schema:\n        type: string\n        format: uuid\n      required: true\n      description: ID of the simpletempletestgroup to perform operations on\n    get:\n      summary: Look up a single simpletempletestgroup\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestGroup\n      responses:\n        '200':\n          description: SimpleTempleTestGroup details\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n    delete:\n      summary: Delete a single simpletempletestgroup\n      security:\n      - bearerAuth: []\n      tags:\n      - SimpleTempleTestGroup\n      responses:\n        '200':\n          description: SimpleTempleTestGroup successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '404':\n          $ref: '#/components/responses/Error404'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /auth/register:\n    post:\n      summary: Register and get an access token\n      tags:\n      - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Email:\n                  type: string\n                  format: email\n                Password:\n                  type: string\n                  format: password\n                  minLength: 8\n                  maxLength: 64\n      responses:\n        '200':\n          description: Successful registration\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  AccessToken:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '403':\n          $ref: '#/components/responses/Error403'\n        '500':\n          $ref: '#/components/responses/Error500'\n  /auth/login:\n    post:\n      summary: Login and get an access token\n      tags:\n      - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Email:\n                  type: string\n                  format: email\n                Password:\n                  type: string\n                  format: password\n                  minLength: 8\n                  maxLength: 64\n      responses:\n        '200':\n          description: Successful login\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  AccessToken:\n                    type: string\n        '400':\n          $ref: '#/components/responses/Error400'\n        '401':\n          $ref: '#/components/responses/Error401'\n        '500':\n          $ref: '#/components/responses/Error500'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  responses:\n    Error400:\n      description: Invalid request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: 'Invalid request parameters: name'\n    Error401:\n      description: Valid request but forbidden by server\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: Not authorised to create this object\n    Error403:\n      description: Valid request but server will not fulfill\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: User with this ID already exists\n    Error404:\n      description: ID not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: Object not found with ID 1\n    Error500:\n      description: The server encountered an error while serving this request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: 'Unable to reach user service: connection timeout'\n",
			"canonicalURL": "/github.com/TempleEight/temple@d30423eac2fd8f8ab276260575cd928547e059d9/-/blob/src/e2e/resources/simple-temple-expected/api/simple-temple-test.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/TempleEight/temple/blob/d30423eac2fd8f8ab276260575cd928547e059d9/src/e2e/resources/simple-temple-expected/api/simple-temple-test.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}