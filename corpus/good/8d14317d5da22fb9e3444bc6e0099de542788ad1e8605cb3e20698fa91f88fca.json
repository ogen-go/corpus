{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DefiLlama/defillama-app"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "src/docs/spec.yaml",
			"byteSize": 4954,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    Docs for defillama's open API\n  version: 1.0.0-oas3\n  title: DefiLlama API\ntags:\n  - name: TVL\n    description: Retrieve TVL data\n  - name: coins\n    description: General blockchain data used by defillama and open-sourced\nservers:\n  - url: https://api.llama.fi\npaths:\n  /protocols:\n    get:\n      tags:\n        - TVL\n      summary: List all protocols on defillama along with their tvl\n      responses:\n        '200':\n          description: successful operation\n  /protocol/{protocol}:\n    get:\n      tags:\n        - TVL\n      summary: Get historical TVL of a protocol and breakdowns by token and chain\n      parameters:\n        - name: protocol\n          in: path\n          description: protocol slug\n          required: true\n          schema:\n            type: string\n            example: aave\n      responses:\n        '200':\n          description: successful operation\n  /charts:\n    get:\n      tags:\n        - TVL\n      summary: Get historical TVL of DeFi on all chains\n      responses:\n        '200':\n          description: successful operation\n  /charts/{chain}:\n    get:\n      tags:\n        - TVL\n      summary: Get historical TVL of a chain\n      parameters:\n        - name: chain\n          in: path\n          required: true\n          description: chain slug, you can get these from /chains or the chains property on /protocols\n          schema:\n            type: string\n            example: Ethereum\n      responses:\n        '200':\n          description: successful operation\n  /tvl/{protocol}:\n    get:\n      tags:\n        - TVL\n      summary: Simplified endpoint to get current TVL of a protocol\n      description: Simplified endpoint that only returns a number, the current TVL of a protocol\n      parameters:\n        - name: protocol\n          in: path\n          required: true\n          description: protocol slug\n          schema:\n            type: string\n            example: uniswap\n      responses:\n        '200':\n          description: successful operation\n  /chains:\n    get:\n      tags:\n        - TVL\n      summary: Get current TVL of all chains\n      responses:\n        '200':\n          description: successful operation\n  /block/{chain}/{timestamp}:\n    get:\n      tags:\n        - coins\n      summary: Get the closest block to a timestamp\n      description: |\n        Runs binary search over a blockchain's blocks to get the closest one to a timestamp.\n        \n        Every time this is run we add new data to our database, so each query permanently speeds up future queries.\n      servers:\n        - url: https://coins.llama.fi\n      parameters:\n        - name: chain\n          in: path\n          description: Chain which you want to get the block from\n          required: true\n          schema:\n            type: string\n        - name: timestamp\n          in: path\n          description: UNIX timestamp of the block you are searching for\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  height:\n                    type: integer\n                    format: uint\n                    example: 11150916\n                  timestamp:\n                    type: integer\n                    format: uint\n                    example: 1603964988\n        '400':\n          description: Invalid chain or timestamp provided\n  /prices:\n    post:\n      tags:\n        - coins\n      summary: Get current or historical prices of tokens by contract address\n      description: TODO\n      servers:\n        - url: https://coins.llama.fi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - coins\n              properties:\n                coins:\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - \"ethereum:0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n                    - \"avax:0xd586e7f844cea2f87f50152665bcbc2c279d8d70\"\n                timestamp:\n                  type: integer\n                  format: uint\n                  example: 1603964988\n        description: If timestamp is not provided we just return the latest data\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  height:\n                    type: integer\n                    format: uint\n                    example: 11150916\n                  timestamp:\n                    type: integer\n                    format: uint\n                    example: 1603964988\n        '502':\n          description: Internal error",
			"canonicalURL": "/github.com/DefiLlama/defillama-app@e6f1b7961048fd72dbe4ed4ce89076a00a5d16c2/-/blob/src/docs/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DefiLlama/defillama-app/blob/e6f1b7961048fd72dbe4ed4ce89076a00a5d16c2/src/docs/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}