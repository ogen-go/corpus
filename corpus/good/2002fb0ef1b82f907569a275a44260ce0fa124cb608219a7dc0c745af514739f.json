{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/up.com.au/v1/openapi.yaml",
			"byteSize": 92795,
			"content": "openapi: 3.0.3\nservers:\n  - url: https://api.up.com.au/api/v1\ninfo:\n  contact:\n    name: API Specification and Support\n    url: https://github.com/up-banking/api\n  description: |\n    The Up API gives you programmatic access to your balances and\n    transaction data. You can request past transactions or set up\n    webhooks to receive real-time events when new transactions hit your\n    account. It’s new, it’s exciting and it’s just the beginning.\n  title: Up API\n  version: v1\n  x-apisguru-categories:\n    - financial\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/up-banking/api/master/v1/openapi.json\n      version: \"3.0\"\n  x-providerName: up.com.au\nsecurity:\n  - bearer_auth: []\ntags:\n  - description: |\n      Accounts represent the underlying store used to track balances\n      and the transactions that have occurred to modify those balances\n      over time. Up currently has two types of account: `SAVER`—used to\n      earn interest and to hit savings goals, and `TRANSACTIONAL`—used\n      for everyday spending.\n    name: Accounts\n  - description: |\n      Categories enable understanding where your money goes by driving\n      powerful insights in Up. All categories in Up are pre-defined\n      and are automatically assigned to new purchases in most cases. A\n      parent-child relationship is used to represent categories,\n      however parent categories cannot be directly assigned to\n      transactions.\n    name: Categories\n  - description: |\n      Tags are custom labels that can be associated with transactions\n      on Up. Within the Up application, tags provide additional insight\n      into spending. For example, you could have a \"Take Away\" tag that\n      you apply to purchases from food delivery services. The Up API\n      allows you to manage the tags associated with transactions. Each\n      transaction may have up to 6 tags.\n\n      Tags are identified by their labels, which are unique strings,\n      so the tag \"Holiday\" has also the `id` `\"Holiday\"`.\n    name: Tags\n  - description: |\n      Transactions represent the movement of money into and out of an\n      account. They have many characteristics that vary depending on\n      the kind of transaction. Transactions may be temporarily `HELD`\n      (pending) or `SETTLED`, typically depending on which payment\n      method was used at the point of sale.\n    name: Transactions\n  - description: |\n      Some endpoints exist not to expose data, but to test the API\n      itself. Currently there is only one endpoint in this group: ping!\n    name: Utility endpoints\n  - description: |\n      Webhooks provide a mechanism for a configured URL to receive\n      events when transaction activity occurs on Up. You can think of\n      webhooks as being like push notifications for your server-side\n      application.\n    name: Webhooks\npaths:\n  /accounts:\n    get:\n      description: |\n        Retrieve a paginated list of all accounts for the currently\n        authenticated user. The returned list is paginated and can be scrolled\n        by following the `prev` and `next` links where present.\n      parameters:\n        - description: |\n            The number of records to return in each page.\n          example: 30\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListAccountsResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:HIvThbob76kGCuol\n              pathParameters: {}\n              payload: null\n              queryParameters:\n                \"page[size]\": 1\n            response:\n              data:\n                - attributes:\n                    accountType: TRANSACTIONAL\n                    balance:\n                      currencyCode: AUD\n                      value: \"1.00\"\n                      valueInBaseUnits: 100\n                    createdAt: 2020-09-04T13:37:07+10:00\n                    displayName: Up Account\n                  id: e0746933-045d-4c1b-a0b2-938d3e587583\n                  links:\n                    self: https://api.up.com.au/api/v1/accounts/e0746933-045d-4c1b-a0b2-938d3e587583\n                  relationships:\n                    transactions:\n                      links:\n                        related: https://api.up.com.au/api/v1/accounts/e0746933-045d-4c1b-a0b2-938d3e587583/transactions\n                  type: accounts\n              links:\n                next: https://api.up.com.au/api/v1/accounts?page%5Bafter%5D=WyIyMDIwLTA5LTA0VDAzOjM3OjA3Ljg3MDU4MTAwMFoiLCJlMDc0NjkzMy0wNDVkLTRjMWItYTBiMi05MzhkM2U1ODc1ODMiXQ%3D%3D\u0026page%5Bsize%5D=1\n                prev: null\n            type: exampleRequestResponse\n      summary: List accounts\n      tags:\n        - Accounts\n  \"/accounts/{accountId}/transactions\":\n    get:\n      description: |\n        Retrieve a list of all transactions for a specific account. The returned\n        list is [paginated](#pagination) and can be scrolled by following the\n        `next` and `prev` links where present. To narrow the results to a\n        specific date range pass one or both of `filter[since]` and\n        `filter[until]` in the query string. These filter parameters\n        **should not** be used for pagination. Results are ordered newest first\n        to oldest last.\n      parameters:\n        - description: |\n            The unique identifier for the account.\n          example: 86150b64-feaa-4186-a7e4-e84eae764602\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: string\n        - description: |\n            The number of records to return in each page.\n          example: 30\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n        - description: |\n            The transaction status for which to return records. This\n            can be used to filter `HELD` transactions from those\n            that are `SETTLED`.\n          example: HELD\n          in: query\n          name: filter[status]\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TransactionStatusEnum\"\n        - description: |\n            The start date-time from which to return records,\n            formatted according to rfc-3339. Not to be used for\n            pagination purposes.\n          example: 2020-01-01T01:02:03+10:00\n          in: query\n          name: filter[since]\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: |\n            The end date-time up to which to return records,\n            formatted according to rfc-3339. Not to be used for\n            pagination purposes.\n          example: 2020-02-01T01:02:03+10:00\n          in: query\n          name: filter[until]\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: |\n            The category identifier for which to filter transactions.\n            Both parent and child categories can be filtered through\n            this parameter. Providing an invalid category identifier\n            results in a `404` response.\n          example: good-life\n          in: query\n          name: filter[category]\n          required: false\n          schema:\n            type: string\n        - description: |\n            A transaction tag to filter for which to return records.\n            If the tag does not exist, zero records are returned and\n            a success response is given.\n          example: Holiday\n          in: query\n          name: filter[tag]\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTransactionsResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:gOJGDHqZa3HSYFZD\n              pathParameters:\n                accountId: a84f4f2b-1281-4f8f-9fbd-3e00fc28af90\n              payload: null\n              queryParameters:\n                \"filter[category]\": good-life\n                \"filter[status]\": HELD\n                \"page[size]\": 1\n            response:\n              data:\n                - attributes:\n                    amount:\n                      currencyCode: AUD\n                      value: \"-11.95\"\n                      valueInBaseUnits: -1195\n                    cashback: null\n                    createdAt: 2020-09-01T09:28:36+10:00\n                    description: Spotify\n                    foreignAmount: null\n                    holdInfo:\n                      amount:\n                        currencyCode: AUD\n                        value: \"-11.95\"\n                        valueInBaseUnits: -1195\n                      foreignAmount: null\n                    message: null\n                    rawText: Spotify 0123456789\n                    roundUp: null\n                    settledAt: null\n                    status: HELD\n                  id: f86b92e8-abda-4f8d-9101-59897ff0ca1b\n                  links:\n                    self: https://api.up.com.au/api/v1/transactions/f86b92e8-abda-4f8d-9101-59897ff0ca1b\n                  relationships:\n                    account:\n                      data:\n                        id: a84f4f2b-1281-4f8f-9fbd-3e00fc28af90\n                        type: accounts\n                      links:\n                        related: https://api.up.com.au/api/v1/accounts/a84f4f2b-1281-4f8f-9fbd-3e00fc28af90\n                    category:\n                      data:\n                        id: tv-and-music\n                        type: categories\n                      links:\n                        related: https://api.up.com.au/api/v1/categories/tv-and-music\n                    parentCategory:\n                      data:\n                        id: good-life\n                        type: categories\n                      links:\n                        related: https://api.up.com.au/api/v1/categories/good-life\n                    tags:\n                      data: []\n                      links:\n                        self: https://api.up.com.au/api/v1/transactions/f86b92e8-abda-4f8d-9101-59897ff0ca1b/relationships/tags\n                  type: transactions\n              links:\n                next: null\n                prev: null\n            type: exampleRequestResponse\n      summary: List transactions by account\n      tags:\n        - Transactions\n  \"/accounts/{id}\":\n    get:\n      description: |\n        Retrieve a specific account by providing its unique identifier.\n      parameters:\n        - description: |\n            The unique identifier for the account.\n          example: 9842e43e-a1f9-4460-a252-364c86df2d3e\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:orwRnj3vlo9ZTw8c\n              pathParameters:\n                id: 66938e72-9d80-4b91-99bf-281ce20b161a\n              payload: null\n              queryParameters: {}\n            response:\n              data:\n                attributes:\n                  accountType: SAVER\n                  balance:\n                    currencyCode: AUD\n                    value: \"125.36\"\n                    valueInBaseUnits: 12536\n                  createdAt: 2020-09-04T13:37:09+10:00\n                  displayName: 🐷 Savings\n                id: 66938e72-9d80-4b91-99bf-281ce20b161a\n                links:\n                  self: https://api.up.com.au/api/v1/accounts/66938e72-9d80-4b91-99bf-281ce20b161a\n                relationships:\n                  transactions:\n                    links:\n                      related: https://api.up.com.au/api/v1/accounts/66938e72-9d80-4b91-99bf-281ce20b161a/transactions\n                type: accounts\n            type: exampleRequestResponse\n      summary: Retrieve account\n      tags:\n        - Accounts\n  /categories:\n    get:\n      description: |\n        Retrieve a list of all categories and their ancestry. The returned list\n        is not paginated.\n      parameters:\n        - description: |\n            The unique identifier of a parent category for which to\n            return only its children. Providing an invalid category\n            identifier results in a `404` response.\n          example: good-life\n          in: query\n          name: filter[parent]\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListCategoriesResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:NbylCaQt4uXPoAdn\n              pathParameters: {}\n              payload: null\n              queryParameters:\n                \"filter[parent]\": good-life\n            response:\n              data:\n                - attributes:\n                    name: Hobbies\n                  id: hobbies\n                  links:\n                    self: https://api.up.com.au/api/v1/categories/hobbies\n                  relationships:\n                    children:\n                      data: []\n                      links:\n                        related: https://api.up.com.au/api/v1/categories?filter%5Bparent%5D=hobbies\n                    parent:\n                      data:\n                        id: good-life\n                        type: categories\n                      links:\n                        related: https://api.up.com.au/api/v1/categories/good-life\n                  type: categories\n                - attributes:\n                    name: Restaurants \u0026 Cafes\n                  id: restaurants-and-cafes\n                  links:\n                    self: https://api.up.com.au/api/v1/categories/restaurants-and-cafes\n                  relationships:\n                    children:\n                      data: []\n                      links:\n                        related: https://api.up.com.au/api/v1/categories?filter%5Bparent%5D=restaurants-and-cafes\n                    parent:\n                      data:\n                        id: good-life\n                        type: categories\n                      links:\n                        related: https://api.up.com.au/api/v1/categories/good-life\n                  type: categories\n            type: exampleRequestResponse\n      summary: List categories\n      tags:\n        - Categories\n  \"/categories/{id}\":\n    get:\n      description: |\n        Retrieve a specific category by providing its unique identifier.\n      parameters:\n        - description: |\n            The unique identifier for the category.\n          example: restaurants-and-cafes\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCategoryResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:z1uQ6Ph1KhcWXcn1\n              pathParameters:\n                id: home\n              payload: null\n              queryParameters: {}\n            response:\n              data:\n                attributes:\n                  name: Home\n                id: home\n                links:\n                  self: https://api.up.com.au/api/v1/categories/home\n                relationships:\n                  children:\n                    data:\n                      - id: groceries\n                        type: categories\n                    links:\n                      related: https://api.up.com.au/api/v1/categories?filter%5Bparent%5D=home\n                  parent:\n                    data: null\n                type: categories\n            type: exampleRequestResponse\n      summary: Retrieve category\n      tags:\n        - Categories\n  /tags:\n    get:\n      description: |\n        Retrieve a list of all tags currently in use. The returned list is\n        [paginated](#pagination) and can be scrolled by following the `next`\n        and `prev` links where present. Results are ordered lexicographically.\n        The `transactions` relationship for each tag exposes a link\n        to get the transactions with the given tag.\n      parameters:\n        - description: |\n            The number of records to return in each page.\n          example: 50\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:mbGGi7jVeVj0qXec\n              pathParameters: {}\n              payload: null\n              queryParameters:\n                \"page[size]\": 2\n            response:\n              data:\n                - id: Holiday\n                  relationships:\n                    transactions:\n                      links:\n                        related: https://api.up.com.au/api/v1/transactions?filter%5Btag%5D=Holiday\n                  type: tags\n                - id: Pizza Night\n                  relationships:\n                    transactions:\n                      links:\n                        related: https://api.up.com.au/api/v1/transactions?filter%5Btag%5D=Pizza+Night\n                  type: tags\n              links:\n                next: https://api.up.com.au/api/v1/tags?page%5Bafter%5D=WyJQaXp6YSBOaWdodCJd\u0026page%5Bsize%5D=2\n                prev: null\n            type: exampleRequestResponse\n      summary: List tags\n      tags:\n        - Tags\n  /transactions:\n    get:\n      description: |\n        Retrieve a list of all transactions across all accounts for the currently\n        authenticated user. The returned list is [paginated](#pagination) and can\n        be scrolled by following the `next` and `prev` links where present. To\n        narrow the results to a specific date range pass one or both of\n        `filter[since]` and `filter[until]` in the query string. These filter\n        parameters **should not** be used for pagination. Results are ordered\n        newest first to oldest last.\n      parameters:\n        - description: |\n            The number of records to return in each page.\n          example: 30\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n        - description: |\n            The transaction status for which to return records. This\n            can be used to filter `HELD` transactions from those\n            that are `SETTLED`.\n          example: HELD\n          in: query\n          name: filter[status]\n          required: false\n          schema:\n            $ref: \"#/components/schemas/TransactionStatusEnum\"\n        - description: |\n            The start date-time from which to return records,\n            formatted according to rfc-3339. Not to be used for\n            pagination purposes.\n          example: 2020-01-01T01:02:03+10:00\n          in: query\n          name: filter[since]\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: |\n            The end date-time up to which to return records,\n            formatted according to rfc-3339. Not to be used for\n            pagination purposes.\n          example: 2020-02-01T01:02:03+10:00\n          in: query\n          name: filter[until]\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: |\n            The category identifier for which to filter transactions.\n            Both parent and child categories can be filtered through\n            this parameter. Providing an invalid category identifier\n            results in a `404` response.\n          example: good-life\n          in: query\n          name: filter[category]\n          required: false\n          schema:\n            type: string\n        - description: |\n            A transaction tag to filter for which to return records.\n            If the tag does not exist, zero records are returned and\n            a success response is given.\n          example: Holiday\n          in: query\n          name: filter[tag]\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTransactionsResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:GghWDaFwjaTZl5EE\n              pathParameters: {}\n              payload: null\n              queryParameters:\n                \"filter[status]\": SETTLED\n                \"filter[tag]\": Pizza Night\n                \"page[size]\": 1\n            response:\n              data:\n                - attributes:\n                    amount:\n                      currencyCode: AUD\n                      value: \"-59.98\"\n                      valueInBaseUnits: -5998\n                    cashback: null\n                    createdAt: 2020-09-03T06:35:27+10:00\n                    description: David Taylor\n                    foreignAmount: null\n                    holdInfo: null\n                    message: Money for the pizzas last night.\n                    rawText: null\n                    roundUp: null\n                    settledAt: 2020-09-03T06:35:27+10:00\n                    status: SETTLED\n                  id: faf43161-fb81-4e23-a900-c234ac099437\n                  links:\n                    self: https://api.up.com.au/api/v1/transactions/faf43161-fb81-4e23-a900-c234ac099437\n                  relationships:\n                    account:\n                      data:\n                        id: 091ef233-f7d5-4900-aafc-82f77555e5b2\n                        type: accounts\n                      links:\n                        related: https://api.up.com.au/api/v1/accounts/091ef233-f7d5-4900-aafc-82f77555e5b2\n                    category:\n                      data: null\n                    parentCategory:\n                      data: null\n                    tags:\n                      data:\n                        - id: Pizza Night\n                          type: tags\n                      links:\n                        self: https://api.up.com.au/api/v1/transactions/faf43161-fb81-4e23-a900-c234ac099437/relationships/tags\n                  type: transactions\n              links:\n                next: null\n                prev: null\n            type: exampleRequestResponse\n      summary: List transactions\n      tags:\n        - Transactions\n  \"/transactions/{id}\":\n    get:\n      description: |\n        Retrieve a specific transaction by providing its unique identifier.\n      parameters:\n        - description: |\n            The unique identifier for the transaction.\n          example: 8e1da97e-6490-42eb-9c18-d8fdd94cfddc\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTransactionResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:mYhaIvMQsZr4Jkio\n              pathParameters:\n                id: 75d3cffa-c517-4e64-8e41-acd63156c8b0\n              payload: null\n              queryParameters: {}\n            response:\n              data:\n                attributes:\n                  amount:\n                    currencyCode: AUD\n                    value: \"-107.92\"\n                    valueInBaseUnits: -10792\n                  cashback: null\n                  createdAt: 2020-09-01T04:00:00+10:00\n                  description: Warung Bebek Bengil\n                  foreignAmount:\n                    currencyCode: IDR\n                    value: \"-1053698.77\"\n                    valueInBaseUnits: -105369877\n                  holdInfo:\n                    amount:\n                      currencyCode: AUD\n                      value: \"-107.92\"\n                      valueInBaseUnits: -10792\n                    foreignAmount: null\n                  message: null\n                  rawText: WARUNG BEBEK, UBUD INDONES\n                  roundUp:\n                    amount:\n                      currencyCode: AUD\n                      value: \"-0.08\"\n                      valueInBaseUnits: -8\n                    boostPortion: null\n                  settledAt: 2020-08-30T11:34:29+10:00\n                  status: SETTLED\n                id: 75d3cffa-c517-4e64-8e41-acd63156c8b0\n                links:\n                  self: https://api.up.com.au/api/v1/transactions/75d3cffa-c517-4e64-8e41-acd63156c8b0\n                relationships:\n                  account:\n                    data:\n                      id: 139ed96d-9697-4c4a-b221-3d0f72d656cd\n                      type: accounts\n                    links:\n                      related: https://api.up.com.au/api/v1/accounts/139ed96d-9697-4c4a-b221-3d0f72d656cd\n                  category:\n                    data: null\n                  parentCategory:\n                    data: null\n                  tags:\n                    data: []\n                    links:\n                      self: https://api.up.com.au/api/v1/transactions/75d3cffa-c517-4e64-8e41-acd63156c8b0/relationships/tags\n                type: transactions\n            type: exampleRequestResponse\n      summary: Retrieve transaction\n      tags:\n        - Transactions\n  \"/transactions/{transactionId}/relationships/tags\":\n    delete:\n      description: |\n        Disassociates one or more tags from a specific transaction. Tags that are\n        not associated are silently ignored. An HTTP `204` is returned on\n        success. The associated tags, along with this request URL, are also\n        exposed via the `tags` relationship on the transaction resource returned\n        from `/transactions/{id}`.\n      parameters:\n        - description: |\n            The unique identifier for the transaction.\n          example: d8c190d6-be35-4d64-b2c4-e1aa0c09a0e0\n          in: path\n          name: transactionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTransactionTagsRequest\"\n      responses:\n        \"204\":\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:cktrwA7Wmm5eSlBA\n                Content-Type: application/json\n              pathParameters:\n                transactionId: 734affdd-fc33-4dec-b4d1-ce1b2a2fd883\n              payload:\n                data:\n                  - id: Holiday\n                    type: tags\n                  - id: Queensland\n                    type: tags\n              queryParameters: {}\n            response: null\n            type: exampleRequestResponse\n      summary: Remove tags from transaction\n      tags:\n        - Tags\n    post:\n      description: |\n        Associates one or more tags with a specific transaction. No more than 6\n        tags may be present on any single transaction. Duplicate tags are\n        silently ignored. An HTTP `204` is returned on success. The associated\n        tags, along with this request URL, are also exposed via the `tags`\n        relationship on the transaction resource returned from\n        `/transactions/{id}`.\n      parameters:\n        - description: |\n            The unique identifier for the transaction.\n          example: d024c1b8-bc6a-4785-afc6-cd332d2a2efb\n          in: path\n          name: transactionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTransactionTagsRequest\"\n      responses:\n        \"204\":\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:arTSpKPKqafUZOyn\n                Content-Type: application/json\n              pathParameters:\n                transactionId: dd21471e-771b-4367-997a-785e326dcde3\n              payload:\n                data:\n                  - id: Holiday\n                    type: tags\n                  - id: Queensland\n                    type: tags\n              queryParameters: {}\n            response: null\n            type: exampleRequestResponse\n      summary: Add tags to transaction\n      tags:\n        - Tags\n  /util/ping:\n    get:\n      description: |\n        Make a basic ping request to the API. This is useful to verify that\n        authentication is functioning correctly. On authentication success an\n        HTTP `200` status is returned. On failure an HTTP `401` error response\n        is returned.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PingResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:Ei7727gXam4j0JOy\n              pathParameters: {}\n              payload: null\n              queryParameters: {}\n            response:\n              meta:\n                id: 7c3c84c7-a02e-4218-96ba-2a6ebc64c594\n                statusEmoji: ⚡️\n            type: exampleRequestResponse\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Authorized\n          x-up:example:\n            request:\n              headers: {}\n              pathParameters: {}\n              payload: null\n              queryParameters: {}\n            response:\n              errors:\n                - detail: The request was not authenticated because no valid credential was found in the Authorization header, or the Authorization header was not present.\n                  status: \"401\"\n                  title: Not Authorized\n            type: exampleRequestResponse\n      summary: Ping\n      tags:\n        - Utility endpoints\n  /webhooks:\n    get:\n      description: |\n        Retrieve a list of configured webhooks. The returned list is\n        [paginated](#pagination) and can be scrolled by following the `next`\n        and `prev` links where present. Results are ordered oldest first to\n        newest last.\n      parameters:\n        - description: |\n            The number of records to return in each page.\n          example: 30\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListWebhooksResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:9E64pZGsOXbna3ZG\n              pathParameters: {}\n              payload: null\n              queryParameters:\n                \"page[size]\": 1\n            response:\n              data:\n                - attributes:\n                    createdAt: 2020-09-02T13:37:37+10:00\n                    description: Webhook number 1\n                    url: http://example.com/webhook-1\n                  id: c4c9bcb9-88aa-4a52-87c8-9eaa9fef735f\n                  links:\n                    self: https://api.up.com.au/api/v1/webhooks/c4c9bcb9-88aa-4a52-87c8-9eaa9fef735f\n                  relationships:\n                    logs:\n                      links:\n                        related: https://api.up.com.au/api/v1/webhooks/c4c9bcb9-88aa-4a52-87c8-9eaa9fef735f/logs\n                  type: webhooks\n              links:\n                next: https://api.up.com.au/api/v1/webhooks?page%5Bafter%5D=WyIyMDIwLTA5LTAyVDAzOjM3OjM3LjM2MjQxMjAwMFoiLCJjNGM5YmNiOS04OGFhLTRhNTItODdjOC05ZWFhOWZlZjczNWYiXQ%3D%3D\u0026page%5Bsize%5D=1\n                prev: null\n            type: exampleRequestResponse\n      summary: List webhooks\n      tags:\n        - Webhooks\n    post:\n      callbacks:\n        Event:\n          \"{webhookURL}\":\n            post:\n              description: |\n                Once you have created a webhook in the Up API, events are sent to the\n                webhook’s configured URL as JSON-encoded `POST` requests. The webhook\n                URL must respond with a HTTP `200` status on success.\n\n                It is important that the URL responds in a timely manner. If the URL\n                takes too long to respond (currently 30s), the request will be timed\n                out. For this reason it is strongly advised to avoid any heavy\n                processing before a response has been returned from the URL. A common\n                solution to this problem is to use a message broker such as RabbitMQ\n                to do the work asynchronously.\n\n                Event delivery is retried with exponential backoff in the case of any\n                non-`200` response status, if the URL is unreachable, or if the request\n                is timed out.\n\n                Refer to the `eventType` attribute in order to determine what course of\n                action to take when handling the event. The following event types are\n                currently sent:\n\n                **`PING`**\n\n                Manually triggered by calls to the webhook `ping` endpoint. Used for\n                testing and debugging purposes.\n\n                **`TRANSACTION_CREATED`**\n\n                Triggered whenever a new transaction is created in Up. This event\n                includes a `transaction` relationship that provides the unique\n                identifier for the transaction and a link to the transaction within the\n                Up API. This link should be used to retrieve the complete transaction\n                data.\n\n                **`TRANSACTION_SETTLED`**\n\n                Triggered whenever a transaction transitions from the `HELD` status to\n                the `SETTLED` status. This event includes a `transaction` relationship\n                that provides the unique identifier for the transaction and a link to\n                the transaction within the Up API. This link should be used to retrieve\n                the complete transaction data.\n\n                Due to external factors in banking processes, on rare occasions this\n                event may not be triggered. Separate `TRANSACTION_DELETED` and\n                `TRANSACTION_CREATED` events will be received in its place.\n\n                **`TRANSACTION_DELETED`**\n\n                Triggered whenever a `HELD` transaction is deleted from Up. This\n                generally occurs for example when a hotel deposit is returned. This\n                event includes a `transaction` relationship that provides the unique\n                identifier for the transaction, however no link is provided to the\n                transaction within the Up API as it no longer exists.\n\n                ## Securing Webhook Event Handlers\n\n                Incoming webhook event requests include a `X-Up-Authenticity-Signature`\n                header, which can be used to verify that the event was sent by Up.\n                Verification of the signature requires knowledge of the shared\n                `secretKey` that was returned upon creation of the webhook. This key is\n                known only to your application and to Up.\n\n                The verification process involves:\n\n                1. Taking the raw, unparsed webhook event request body.\n                2. Computing the SHA-256 HMAC signature of the request body, using the\n                   shared `secretKey`.\n                3. Comparing the computed HMAC signature with the value of the\n                   `X-Up-Authenticity-Signature` header.\n\n                If the computed SHA-256 HMAC signature matches the\n                `X-Up-Authenticity-Signature` header, the request is valid.\n\n                A few language-specific examples follow.\n\n                **Ruby**:\n\n                This example uses the Ruby on Rails framework.\n\n                ```ruby\n                require 'openssl'\n\n                def handle_webhook_event\n                  received_signature =\n                    request.headers['X-Up-Authenticity-Signature']\n\n                  signature = OpenSSL::HMAC.hexdigest(\n                    'SHA256',\n                    secret_key,\n                    request.raw_post,\n                  )\n\n                  if Rack::Utils.secure_compare(received_signature, signature)\n                    # Process webhook event\n                  end\n                end\n                ```\n\n                **PHP**:\n\n                This example uses the Laravel framework.\n\n                ```php\n                public function handleWebhookEvent(Request $request) {\n                    $received_signature = $request-\u003eheader(\n                        'X-Up-Authenticity-Signature',\n                        ''\n                    );\n                    $raw_body = $request-\u003egetContent();\n                    $signature = hash_hmac('sha256', $raw_body, $this-\u003esecretKey);\n\n                    if (hash_equals($signature, $received_signature)) {\n                        // Process webhook event\n                    }\n                }\n                ```\n\n                **Go**:\n\n                This example is in plain Go.\n\n                ```go\n                import (\n                    \"crypto/hmac\"\n                    \"crypto/sha256\"\n                    \"encoding/hex\"\n                    \"io\"\n                    \"net/http\"\n                )\n\n                func handleWebhookEvent(w http.ResponseWriter, r *http.Request) {\n                    receivedSignature, _ := hex.DecodeString(\n                        r.Header.Get(\"X-Up-Authenticity-Signature\"),\n                    )\n\n                    mac := hmac.New(sha256.New, secretKey)\n                    io.Copy(mac, r.Body)\n                    signature := mac.Sum(nil)\n\n                    if hmac.Equal(signature, receivedSignature)\n                        // Process webhook event\n                    }\n                }\n                ```\n\n                If the `secretKey` for a webhook is lost, simply create a new webhook\n                with the same URL, capture the returned `secretKey` and delete the\n                original webhook.\n              parameters:\n                - description: |\n                    The SHA-256 HMAC signature of the raw request body, signed using\n                    the `secretKey` of the webhook.\n                  example: 317c0a8ea81df3f53c1d2aef5dcbf60492d0df557197b2990e71daa4a0693364\n                  in: header\n                  name: X-Up-Authenticity-Signature\n                  required: false\n                  schema:\n                    type: string\n                - description: Automatically added\n                  in: path\n                  name: webhookURL\n                  required: true\n                  schema:\n                    type: string\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: \"#/components/schemas/WebhookEventCallback\"\n              responses:\n                \"200\":\n                  description: Successful Response\n              summary: Handling webhook events\n              x-up:example:\n                payload:\n                  data:\n                    attributes:\n                      createdAt: 2020-09-04T13:37:38+10:00\n                      eventType: TRANSACTION_CREATED\n                    id: 8671d400-d9e0-4d99-923c-95c031bc6739\n                    relationships:\n                      transaction:\n                        data:\n                          id: 468ec9d9-aac6-4c8a-ba85-141a39d09b91\n                          type: transactions\n                        links:\n                          related: https://api.up.com.au/api/v1/transactions/468ec9d9-aac6-4c8a-ba85-141a39d09b91\n                      webhook:\n                        data:\n                          id: 3c62e0a3-86e5-4dcd-a217-d7c1d096ba0e\n                          type: webhooks\n                        links:\n                          related: https://api.up.com.au/api/v1/webhooks/3c62e0a3-86e5-4dcd-a217-d7c1d096ba0e\n                    type: webhook-events\n                type: examplePayload\n      description: |\n        Create a new webhook with a given URL. The URL will receive webhook\n        events as JSON-encoded `POST` requests. The URL must respond with a HTTP\n        `200` status on success.\n\n        There is currently a limit of 10 webhooks at any given time. Once this\n        limit is reached, existing webhooks will need to be deleted before new\n        webhooks can be created.\n\n        Event delivery is retried with exponential backoff if the URL is\n        unreachable or it does not respond with a `200` status. The response\n        includes a `secretKey` attribute, which is used to sign requests sent to\n        the webhook URL. It will not be returned from any other endpoints within\n        the Up API. If the `secretKey` is lost, simply create a new webhook with\n        the same URL, capture its `secretKey` and then delete the original\n        webhook. See [Handling webhook events](#callback_post_webhookURL) for\n        details on how to process webhook events.\n\n        It is probably a good idea to test the webhook by\n        [sending it a `PING` event](#post_webhooks_webhookId_ping) after creating\n        it.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateWebhookRequest\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateWebhookResponse\"\n          description: Created\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:vJCDnqeW8lNkeBA1\n                Content-Type: application/json\n              pathParameters: {}\n              payload:\n                data:\n                  attributes:\n                    description: Example webhook\n                    url: http://example.com/webhook\n              queryParameters: {}\n            response:\n              data:\n                attributes:\n                  createdAt: 2020-09-04T13:37:38+10:00\n                  description: Example webhook\n                  secretKey: UcYEuMacPkZjui0XhUzKeS0z3ETXtYgFDNJ16Gcrk7o4iSh7ZHNS2u7fOEjqtlzR\n                  url: http://example.com/webhook\n                id: 39b070ae-8595-437f-a3f3-f5ee482ca206\n                links:\n                  self: https://api.up.com.au/api/v1/webhooks/39b070ae-8595-437f-a3f3-f5ee482ca206\n                relationships:\n                  logs:\n                    links:\n                      related: https://api.up.com.au/api/v1/webhooks/39b070ae-8595-437f-a3f3-f5ee482ca206/logs\n                type: webhooks\n            type: exampleRequestResponse\n      summary: Create webhook\n      tags:\n        - Webhooks\n  \"/webhooks/{id}\":\n    delete:\n      description: |\n        Delete a specific webhook by providing its unique identifier. Once\n        deleted, webhook events will no longer be sent to the configured URL.\n      parameters:\n        - description: |\n            The unique identifier for the webhook.\n          example: 81f485ae-0e10-493d-95f3-a9c1dd4b6b6a\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Deleted\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:wJTpdJqQniotjF64\n              pathParameters:\n                id: a64bdc5f-d245-4678-a1af-9894318ebcec\n              payload: null\n              queryParameters: {}\n            response: null\n            type: exampleRequestResponse\n      summary: Delete webhook\n      tags:\n        - Webhooks\n    get:\n      description: |\n        Retrieve a specific webhook by providing its unique identifier.\n      parameters:\n        - description: |\n            The unique identifier for the webhook.\n          example: bc11e3ed-362e-43ab-b141-ef4f6251faa5\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetWebhookResponse\"\n          description: Successful Response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:qqUmYsIcKyjjLBBM\n              pathParameters:\n                id: c6715e53-68d8-4315-b183-5993dea31603\n              payload: null\n              queryParameters: {}\n            response:\n              data:\n                attributes:\n                  createdAt: 2020-09-03T13:37:39+10:00\n                  description: Webhook number 2\n                  url: http://example.com/webhook-2\n                id: c6715e53-68d8-4315-b183-5993dea31603\n                links:\n                  self: https://api.up.com.au/api/v1/webhooks/c6715e53-68d8-4315-b183-5993dea31603\n                relationships:\n                  logs:\n                    links:\n                      related: https://api.up.com.au/api/v1/webhooks/c6715e53-68d8-4315-b183-5993dea31603/logs\n                type: webhooks\n            type: exampleRequestResponse\n      summary: Retrieve webhook\n      tags:\n        - Webhooks\n  \"/webhooks/{webhookId}/logs\":\n    get:\n      description: |\n        Retrieve a list of delivery logs for a webhook by providing its unique\n        identifier. This is useful for analysis and debugging purposes. The\n        returned list is [paginated](#pagination) and can be scrolled by\n        following the `next` and `prev` links where present. Results are ordered\n        newest first to oldest last. Logs may be automatically purged after a\n        period of time.\n      parameters:\n        - description: |\n            The unique identifier for the webhook.\n          example: 49733526-b90d-436a-8a75-9715a1d7cc5b\n          in: path\n          name: webhookId\n          required: true\n          schema:\n            type: string\n        - description: |\n            The number of records to return in each page.\n          example: 30\n          in: query\n          name: page[size]\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListWebhookDeliveryLogsResponse\"\n          description: Successful response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:cDMrkDxg8msPDmVC\n              pathParameters:\n                webhookId: 843f52cf-ceab-43cc-a7c6-449cf82c49e3\n              payload: null\n              queryParameters:\n                \"page[size]\": 1\n            response:\n              data:\n                - attributes:\n                    createdAt: 2020-09-03T13:38:43+10:00\n                    deliveryStatus: DELIVERED\n                    request:\n                      body: '{\"data\":{\"type\":\"webhook-events\",\"id\":\"9dee0635-accd-42a0-b2b5-af5914692a17\",\"attributes\":{\"eventType\":\"TRANSACTION_CREATED\",\"createdAt\":\"2020-09-03T13:38:43+10:00\"},\"relationships\":{\"webhook\":{\"data\":{\"type\":\"webhooks\",\"id\":\"843f52cf-ceab-43cc-a7c6-449cf82c49e3\"},\"links\":{\"related\":\"https://api.up.com.au/api/v1/webhooks/843f52cf-ceab-43cc-a7c6-449cf82c49e3\"}},\"transaction\":{\"data\":{\"type\":\"transactions\",\"id\":\"a131f7ec-681f-4bf4-9dc9-b25ba94c02dc\"},\"links\":{\"related\":\"https://api.up.com.au/api/v1/transactions/a131f7ec-681f-4bf4-9dc9-b25ba94c02dc\"}}}}}'\n                    response:\n                      body: '{\"ok\":true}'\n                      statusCode: 200\n                  id: 7dfbd731-5537-46ab-b658-7676f6024475\n                  relationships:\n                    webhookEvent:\n                      data:\n                        id: 9dee0635-accd-42a0-b2b5-af5914692a17\n                        type: webhook-events\n                  type: webhook-delivery-logs\n              links:\n                next: https://api.up.com.au/api/v1/webhooks/843f52cf-ceab-43cc-a7c6-449cf82c49e3/logs?page%5Bafter%5D=WyIyMDIwLTA5LTAzVDAzOjM4OjQzLjYxMzE3MTAwMFoiLCI3ZGZiZDczMS01NTM3LTQ2YWItYjY1OC03Njc2ZjYwMjQ0NzUiXQ%3D%3D\u0026page%5Bsize%5D=1\n                prev: null\n            type: exampleRequestResponse\n      summary: List webhook logs\n      tags:\n        - Webhooks\n  \"/webhooks/{webhookId}/ping\":\n    post:\n      description: |\n        Send a `PING` event to a webhook by providing its unique identifier.\n        This is useful for testing and debugging purposes. The event is delivered\n        asynchronously and its data is returned in the response to this request.\n      parameters:\n        - description: |\n            The unique identifier for the webhook.\n          example: 6ef4bb23-53f1-4a3d-aa5c-a6e9121c5da3\n          in: path\n          name: webhookId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookEventCallback\"\n          description: Successful response\n          x-up:example:\n            request:\n              headers:\n                Authorization: Bearer up:demo:TPZKsyrzLBxjuJjl\n                Content-Type: application/json\n              pathParameters:\n                webhookId: 7a72c637-9a0d-4dfd-8f1a-dc2a75b484b7\n              payload: \"\"\n              queryParameters: {}\n            response:\n              data:\n                attributes:\n                  createdAt: 2020-09-04T13:37:41+10:00\n                  eventType: PING\n                id: fb177d1d-003f-4e9a-831a-62194652937d\n                relationships:\n                  webhook:\n                    data:\n                      id: 7a72c637-9a0d-4dfd-8f1a-dc2a75b484b7\n                      type: webhooks\n                    links:\n                      related: https://api.up.com.au/api/v1/webhooks/7a72c637-9a0d-4dfd-8f1a-dc2a75b484b7\n                type: webhook-events\n            type: exampleRequestResponse\n      summary: Ping webhook\n      tags:\n        - Webhooks\ncomponents:\n  schemas:\n    AccountResource:\n      description: |\n        Provides information about an Up bank account.\n      properties:\n        attributes:\n          properties:\n            accountType:\n              allOf:\n                - $ref: \"#/components/schemas/AccountTypeEnum\"\n              description: |\n                The bank account type of this account.\n            balance:\n              allOf:\n                - $ref: \"#/components/schemas/MoneyObject\"\n              description: |\n                The available balance of the account, taking into account any amounts\n                that are currently on hold.\n            createdAt:\n              description: |\n                The date-time at which this account was first opened.\n              format: date-time\n              type: string\n            displayName:\n              description: |\n                The name associated with the account in the Up application.\n              type: string\n          required:\n            - displayName\n            - accountType\n            - balance\n            - createdAt\n          type: object\n        id:\n          description: |\n            The unique identifier for this account.\n          type: string\n        links:\n          properties:\n            self:\n              description: |\n                The canonical link to this resource within the API.\n              type: string\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            transactions:\n              properties:\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              type: object\n          required:\n            - transactions\n          type: object\n        type:\n          description: \"The type of this resource: `accounts`\"\n          type: string\n      required:\n        - type\n        - id\n        - attributes\n        - relationships\n      type: object\n    AccountTypeEnum:\n      description: |\n        Specifies the type of bank account. Currently returned values are `SAVER`\n        and `TRANSACTIONAL`.\n      enum:\n        - SAVER\n        - TRANSACTIONAL\n    CashbackObject:\n      description: |\n        Provides information about an instant reimbursement in the form of\n        cashback.\n      properties:\n        amount:\n          allOf:\n            - $ref: \"#/components/schemas/MoneyObject\"\n          description: |\n            The total amount of cashback paid, represented as a positive value.\n        description:\n          description: |\n            A brief description of why this cashback was paid.\n          type: string\n      required:\n        - description\n        - amount\n      type: object\n    CategoryResource:\n      description: |\n        Provides information about a category and its ancestry.\n      properties:\n        attributes:\n          properties:\n            name:\n              description: |\n                The name of this category as seen in the Up application.\n              type: string\n          required:\n            - name\n          type: object\n        id:\n          description: |\n            The unique identifier for this category. This is a human-readable but\n            URL-safe value.\n          type: string\n        links:\n          properties:\n            self:\n              description: |\n                The canonical link to this resource within the API.\n              type: string\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            children:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        description: |\n                          The unique identifier of the resource within its type.\n                        type: string\n                      type:\n                        description: \"The type of this resource: `categories`\"\n                        type: string\n                    required:\n                      - type\n                      - id\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              required:\n                - data\n              type: object\n            parent:\n              properties:\n                data:\n                  nullable: true\n                  properties:\n                    id:\n                      description: |\n                        The unique identifier of the resource within its type.\n                      type: string\n                    type:\n                      description: \"The type of this resource: `categories`\"\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              required:\n                - data\n              type: object\n          required:\n            - parent\n            - children\n          type: object\n        type:\n          description: \"The type of this resource: `categories`\"\n          type: string\n      required:\n        - type\n        - id\n        - attributes\n        - relationships\n      type: object\n    CreateWebhookRequest:\n      description: |\n        Request to create a new webhook. This currently only requires a `url`\n        attribute.\n      properties:\n        data:\n          allOf:\n            - $ref: \"#/components/schemas/WebhookInputResource\"\n          description: |\n            The webhook resource to create.\n      required:\n        - data\n      type: object\n    CreateWebhookResponse:\n      description: |\n        Successful response after creating a webhook.\n      properties:\n        data:\n          allOf:\n            - $ref: \"#/components/schemas/WebhookResource\"\n          description: |\n            The webhook that was created.\n      required:\n        - data\n      type: object\n    ErrorObject:\n      description: |\n        Provides information about an error processing a request.\n      properties:\n        detail:\n          description: |\n            A detailed description of this error. This should be considered unique\n            to individual occurrences of an error and subject to change. It is\n            useful for debugging purposes.\n          type: string\n        source:\n          description: |\n            If applicable, location in the request that this error relates to. This\n            may be a parameter in the query string, or a an attribute in the\n            request body.\n          properties:\n            parameter:\n              description: |\n                If this error relates to a query parameter, the name of the\n                parameter.\n              type: string\n            pointer:\n              description: |\n                If this error relates to an attribute in the request body, a\n                rfc-6901 JSON pointer to the attribute.\n              type: string\n          type: object\n        status:\n          description: |\n            The HTTP status code associated with this error. This can also be\n            obtained from the response headers. The status indicates the broad type\n            of error according to HTTP semantics.\n          type: string\n        title:\n          description: |\n            A short description of this error. This should be stable across\n            multiple occurrences of this type of error and typically expands on the\n            reason for the status code.\n          type: string\n      required:\n        - status\n        - title\n        - detail\n      type: object\n    ErrorResponse:\n      description: |\n        Generic error response that returns one or more errors.\n      properties:\n        errors:\n          description: |\n            The list of errors returned in this response.\n          items:\n            $ref: \"#/components/schemas/ErrorObject\"\n          type: array\n      required:\n        - errors\n      type: object\n    GetAccountResponse:\n      description: |\n        Successful response to get a single account.\n      properties:\n        data:\n          allOf:\n            - $ref: \"#/components/schemas/AccountResource\"\n          description: |\n            The account returned in this response.\n      required:\n        - data\n      type: object\n    GetCategoryResponse:\n      description: |\n        Successful response to get a single category and its ancestry.\n      properties:\n        data:\n          allOf:\n            - $ref: \"#/components/schemas/CategoryResource\"\n          description: |\n            The category returned in this response.\n      required:\n        - data\n      type: object\n    GetTransactionResponse:\n      description: |\n        Successful response to get a single transaction.\n      properties:\n        data:\n          allOf:\n            - $ref: \"#/components/schemas/TransactionResource\"\n          description: |\n            The transaction returned in this response.\n      required:\n        - data\n      type: object\n    GetWebhookResponse:\n      description: |\n        Successful response to get a single webhook.\n      properties:\n        data:\n          allOf:\n            - $ref: \"#/components/schemas/WebhookResource\"\n          description: |\n            The webhook returned in this response.\n      required:\n        - data\n      type: object\n    HoldInfoObject:\n      description: |\n        Provides information about the amount at which a transaction was in the\n        `HELD` status.\n      properties:\n        amount:\n          allOf:\n            - $ref: \"#/components/schemas/MoneyObject\"\n          description: |\n            The amount of this transaction while in the `HELD` status, in\n            Australian dollars.\n        foreignAmount:\n          allOf:\n            - $ref: \"#/components/schemas/MoneyObject\"\n          description: |\n            The foreign currency amount of this transaction while in the `HELD`\n            status. This field will be `null` for domestic transactions. The amount\n            was converted to the AUD amount reflected in the `amount` field.\n          nullable: true\n      required:\n        - amount\n        - foreignAmount\n      type: object\n    ListAccountsResponse:\n      description: |\n        Successful response to get all accounts. This returns a paginated list of\n        accounts, which can be scrolled by following the `prev` and `next` links\n        if present.\n      properties:\n        data:\n          description: |\n            The list of accounts returned in this response.\n          items:\n            $ref: \"#/components/schemas/AccountResource\"\n          type: array\n        links:\n          properties:\n            next:\n              description: |\n                The link to the next page in the results. If this value is `null`\n                there is no next page.\n              nullable: true\n              type: string\n            prev:\n              description: |\n                The link to the previous page in the results. If this value is `null`\n                there is no previous page.\n              nullable: true\n              type: string\n          required:\n            - prev\n            - next\n          type: object\n      required:\n        - data\n        - links\n      type: object\n    ListCategoriesResponse:\n      description: |\n        Successful response to get all categories and their ancestry. The\n        returned list is not paginated.\n      properties:\n        data:\n          description: |\n            The list of categories returned in this response.\n          items:\n            $ref: \"#/components/schemas/CategoryResource\"\n          type: array\n      required:\n        - data\n      type: object\n    ListTagsResponse:\n      description: |\n        Successful response to get all tags. This returns a paginated list of\n        tags, which can be scrolled by following the `prev` and `next` links if\n        present.\n      properties:\n        data:\n          description: |\n            The list of tags returned in this response.\n          items:\n            $ref: \"#/components/schemas/TagResource\"\n          type: array\n        links:\n          properties:\n            next:\n              description: |\n                The link to the next page in the results. If this value is `null`\n                there is no next page.\n              nullable: true\n              type: string\n            prev:\n              description: |\n                The link to the previous page in the results. If this value is `null`\n                there is no previous page.\n              nullable: true\n              type: string\n          required:\n            - prev\n            - next\n          type: object\n      required:\n        - data\n        - links\n      type: object\n    ListTransactionsResponse:\n      description: |\n        Successful response to get all transactions. This returns a paginated\n        list of transactions, which can be scrolled by following the `prev` and\n        `next` links if present.\n      properties:\n        data:\n          description: |\n            The list of transactions returned in this response.\n          items:\n            $ref: \"#/components/schemas/TransactionResource\"\n          type: array\n        links:\n          properties:\n            next:\n              description: |\n                The link to the next page in the results. If this value is `null`\n                there is no next page.\n              nullable: true\n              type: string\n            prev:\n              description: |\n                The link to the previous page in the results. If this value is `null`\n                there is no previous page.\n              nullable: true\n              type: string\n          required:\n            - prev\n            - next\n          type: object\n      required:\n        - data\n        - links\n      type: object\n    ListWebhookDeliveryLogsResponse:\n      description: |\n        Successful response to get all delivery logs for a webhook. This returns\n        a paginated list of delivery logs, which can be scrolled by following the\n        `next` and `prev` links if present.\n      properties:\n        data:\n          description: |\n            The list of delivery logs returned in this response.\n          items:\n            $ref: \"#/components/schemas/WebhookDeliveryLogResource\"\n          type: array\n        links:\n          properties:\n            next:\n              description: |\n                The link to the next page in the results. If this value is `null`\n                there is no next page.\n              nullable: true\n              type: string\n            prev:\n              description: |\n                The link to the previous page in the results. If this value is `null`\n                there is no previous page.\n              nullable: true\n              type: string\n          required:\n            - prev\n            - next\n          type: object\n      required:\n        - data\n        - links\n      type: object\n    ListWebhooksResponse:\n      description: |\n        Successful response to get all webhooks. This returns a paginated list of\n        webhooks, which can be scrolled by following the `prev` and `next` links\n        if present.\n      properties:\n        data:\n          description: |\n            The list of webhooks returned in this response.\n          items:\n            $ref: \"#/components/schemas/WebhookResource\"\n          type: array\n        links:\n          properties:\n            next:\n              description: |\n                The link to the next page in the results. If this value is `null`\n                there is no next page.\n              nullable: true\n              type: string\n            prev:\n              description: |\n                The link to the previous page in the results. If this value is `null`\n                there is no previous page.\n              nullable: true\n              type: string\n          required:\n            - prev\n            - next\n          type: object\n      required:\n        - data\n        - links\n      type: object\n    MoneyObject:\n      description: |\n        Provides information about a value of money.\n      properties:\n        currencyCode:\n          description: |\n            The ISO 4217 currency code.\n          type: string\n        value:\n          description: |\n            The amount of money, formatted as a string in the relevant currency.\n            For example, for an Australian dollar value of $10.56, this field will\n            be `\"10.56\"`. The currency symbol is not included in the string.\n          type: string\n        valueInBaseUnits:\n          description: |\n            The amount of money in the smallest denomination for the currency, as a\n            64-bit integer.  For example, for an Australian dollar value of $10.56,\n            this field will be `1056`.\n          type: integer\n      required:\n        - currencyCode\n        - value\n        - valueInBaseUnits\n      type: object\n    PingResponse:\n      description: |\n        Basic ping response to verify authentication.\n      properties:\n        meta:\n          properties:\n            id:\n              description: |\n                The unique identifier of the authenticated customer.\n              type: string\n            statusEmoji:\n              description: |\n                A cute emoji that represents the response status.\n              type: string\n          required:\n            - id\n            - statusEmoji\n          type: object\n      required:\n        - meta\n      type: object\n    RoundUpObject:\n      description: |\n        Provides information about how a Round Up was applied, such as whether or\n        not a boost was included in the Round Up.\n      properties:\n        amount:\n          allOf:\n            - $ref: \"#/components/schemas/MoneyObject\"\n          description: |\n            The total amount of this Round Up, including any boosts, represented as\n            a negative value.\n        boostPortion:\n          allOf:\n            - $ref: \"#/components/schemas/MoneyObject\"\n          description: |\n            The portion of the Round Up `amount` owing to boosted Round Ups,\n            represented as a negative value. If no boost was added to the Round Up\n            this field will be `null`.\n          nullable: true\n      required:\n        - amount\n        - boostPortion\n      type: object\n    TagInputResourceIdentifier:\n      description: |\n        Uniquely identifies a single tag in the API.\n      properties:\n        id:\n          description: |\n            The label of the tag, which also acts as the tag’s unique identifier.\n          type: string\n        type:\n          description: \"The type of this resource: `tags`\"\n          type: string\n      required:\n        - type\n        - id\n      type: object\n    TagResource:\n      description: |\n        Provides information about a tag.\n      properties:\n        id:\n          description: |\n            The label of the tag, which also acts as the tag’s unique identifier.\n          type: string\n        relationships:\n          properties:\n            transactions:\n              properties:\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              type: object\n          required:\n            - transactions\n          type: object\n        type:\n          description: \"The type of this resource: `tags`\"\n          type: string\n      required:\n        - type\n        - id\n        - relationships\n      type: object\n    TransactionResource:\n      properties:\n        attributes:\n          properties:\n            amount:\n              allOf:\n                - $ref: \"#/components/schemas/MoneyObject\"\n              description: |\n                The amount of this transaction in Australian dollars. For\n                transactions that were once `HELD` but are now `SETTLED`, refer to\n                the `holdInfo` field for the original `amount` the transaction was\n                `HELD` at.\n            cashback:\n              allOf:\n                - $ref: \"#/components/schemas/CashbackObject\"\n              description: |\n                If all or part of this transaction was instantly reimbursed in the\n                form of cashback, details of the reimbursement.\n              nullable: true\n            createdAt:\n              description: |\n                The date-time at which this transaction was first encountered.\n              format: date-time\n              type: string\n            description:\n              description: |\n                A short description for this transaction. Usually the merchant name\n                for purchases.\n              type: string\n            foreignAmount:\n              allOf:\n                - $ref: \"#/components/schemas/MoneyObject\"\n              description: |\n                The foreign currency amount of this transaction. This field will be\n                `null` for domestic transactions. The amount was converted to the AUD\n                amount reflected in the `amount` of this transaction. Refer to the\n                `holdInfo` field for the original `foreignAmount` the transaction was\n                `HELD` at.\n              nullable: true\n            holdInfo:\n              allOf:\n                - $ref: \"#/components/schemas/HoldInfoObject\"\n              description: |\n                If this transaction is currently in the `HELD` status, or was ever in\n                the `HELD` status, the `amount` and `foreignAmount` of the\n                transaction while `HELD`.\n              nullable: true\n            message:\n              description: |\n                Attached message for this transaction, such as a payment message, or a\n                transfer note.\n              nullable: true\n              type: string\n            rawText:\n              description: |\n                The original, unprocessed text of the transaction. This is often not\n                a perfect indicator of the actual merchant, but it is useful for\n                reconciliation purposes in some cases.\n              nullable: true\n              type: string\n            roundUp:\n              allOf:\n                - $ref: \"#/components/schemas/RoundUpObject\"\n              description: |\n                Details of how this transaction was rounded-up. If no Round Up was\n                applied this field will be `null`.\n              nullable: true\n            settledAt:\n              description: |\n                The date-time at which this transaction settled. This field will be\n                `null` for transactions that are currently in the `HELD` status.\n              format: date-time\n              nullable: true\n              type: string\n            status:\n              allOf:\n                - $ref: \"#/components/schemas/TransactionStatusEnum\"\n              description: |\n                The current processing status of this transaction, according to\n                whether or not this transaction has settled or is still held.\n          required:\n            - status\n            - rawText\n            - description\n            - message\n            - holdInfo\n            - roundUp\n            - cashback\n            - amount\n            - foreignAmount\n            - settledAt\n            - createdAt\n          type: object\n        id:\n          description: |\n            The unique identifier for this transaction.\n          type: string\n        links:\n          properties:\n            self:\n              description: |\n                The canonical link to this resource within the API.\n              type: string\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            account:\n              properties:\n                data:\n                  properties:\n                    id:\n                      description: |\n                        The unique identifier of the resource within its type.\n                      type: string\n                    type:\n                      description: \"The type of this resource: `accounts`\"\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              required:\n                - data\n              type: object\n            category:\n              properties:\n                data:\n                  nullable: true\n                  properties:\n                    id:\n                      description: |\n                        The unique identifier of the resource within its type.\n                      type: string\n                    type:\n                      description: \"The type of this resource: `categories`\"\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              required:\n                - data\n              type: object\n            parentCategory:\n              properties:\n                data:\n                  nullable: true\n                  properties:\n                    id:\n                      description: |\n                        The unique identifier of the resource within its type.\n                      type: string\n                    type:\n                      description: \"The type of this resource: `categories`\"\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              required:\n                - data\n              type: object\n            tags:\n              properties:\n                data:\n                  items:\n                    properties:\n                      id:\n                        description: |\n                          The label of the tag, which also acts as the tag’s unique identifier.\n                        type: string\n                      type:\n                        description: \"The type of this resource: `tags`\"\n                        type: string\n                    required:\n                      - type\n                      - id\n                    type: object\n                  type: array\n                links:\n                  properties:\n                    self:\n                      description: |\n                        The link to retrieve or modify linkage between this resources and the\n                        related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - self\n                  type: object\n              required:\n                - data\n              type: object\n          required:\n            - account\n            - category\n            - parentCategory\n            - tags\n          type: object\n        type:\n          description: \"The type of this resource: `transactions`\"\n          type: string\n      required:\n        - type\n        - id\n        - attributes\n        - relationships\n      type: object\n    TransactionStatusEnum:\n      description: |\n        Specifies which stage of processing a transaction is currently at.\n        Currently returned values are `HELD` and `SETTLED`. When a transaction is\n        held, its account’s `availableBalance` is affected. When a transaction is\n        settled, its account’s `currentBalance` is affected.\n      enum:\n        - HELD\n        - SETTLED\n    UpdateTransactionTagsRequest:\n      description: |\n        Request to add or remove tags associated with a transaction.\n      properties:\n        data:\n          description: |\n            The tags to add to or remove from the transaction.\n          items:\n            $ref: \"#/components/schemas/TagInputResourceIdentifier\"\n          type: array\n      required:\n        - data\n      type: object\n    WebhookDeliveryLogResource:\n      description: |\n        Provides historical webhook event delivery information for analysis and\n        debugging purposes.\n      properties:\n        attributes:\n          properties:\n            createdAt:\n              description: |\n                The date-time at which this log entry was created.\n              format: date-time\n              type: string\n            deliveryStatus:\n              allOf:\n                - $ref: \"#/components/schemas/WebhookDeliveryStatusEnum\"\n              description: |\n                The success or failure status of this delivery attempt.\n            request:\n              description: |\n                Information about the request that was sent to the webhook URL.\n              properties:\n                body:\n                  description: |\n                    The payload that was sent in the request body.\n                  type: string\n              required:\n                - body\n              type: object\n            response:\n              description: |\n                Information about the response that was received from the webhook URL.\n              nullable: true\n              properties:\n                body:\n                  description: |\n                    The payload that was received in the response body.\n                  type: string\n                statusCode:\n                  description: |\n                    The HTTP status code received in the response.\n                  type: integer\n              required:\n                - statusCode\n                - body\n              type: object\n          required:\n            - request\n            - response\n            - deliveryStatus\n            - createdAt\n          type: object\n        id:\n          description: |\n            The unique identifier for this log entry.\n          type: string\n        relationships:\n          properties:\n            webhookEvent:\n              properties:\n                data:\n                  properties:\n                    id:\n                      description: |\n                        The unique identifier of the resource within its type.\n                      type: string\n                    type:\n                      description: \"The type of this resource: `webhook-events`\"\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n              required:\n                - data\n              type: object\n          required:\n            - webhookEvent\n          type: object\n        type:\n          description: \"The type of this resource: `webhook-delivery-logs`\"\n          type: string\n      required:\n        - type\n        - id\n        - attributes\n        - relationships\n      type: object\n    WebhookDeliveryStatusEnum:\n      description: |\n        Specifies the nature of the success or failure of a webhook delivery\n        attempt to the subscribed webhook URL. The currently returned values are\n        described below:\n\n        - **`DELIVERED`**: The event was delivered to the webhook URL\n          successfully and a `200` response was received.\n        - **`UNDELIVERABLE`**: The webhook URL was not reachable, or timed out.\n        - **`BAD_RESPONSE_CODE`**: The event was delivered to the webhook URL\n          but a non-`200` response was received.\n      enum:\n        - DELIVERED\n        - UNDELIVERABLE\n        - BAD_RESPONSE_CODE\n    WebhookEventCallback:\n      description: |\n        Asynchronous callback request used for webhook event delivery.\n      properties:\n        data:\n          allOf:\n            - $ref: \"#/components/schemas/WebhookEventResource\"\n          description: |\n            The webhook event data sent to the subscribed webhook.\n      required:\n        - data\n      type: object\n    WebhookEventResource:\n      description: |\n        Provides the event data used in asynchronous webhook event callbacks to\n        subscribed endpoints. Webhooks events have defined `eventType`s and may\n        optionally relate to other resources within the Up API.\n      properties:\n        attributes:\n          properties:\n            createdAt:\n              description: |\n                The date-time at which this event was generated.\n              format: date-time\n              type: string\n            eventType:\n              allOf:\n                - $ref: \"#/components/schemas/WebhookEventTypeEnum\"\n              description: |\n                The type of this event. This can be used to determine what action to\n                take in response to the event.\n          required:\n            - eventType\n            - createdAt\n          type: object\n        id:\n          description: |\n            The unique identifier for this event. This will remain constant across\n            delivery retries.\n          type: string\n        relationships:\n          properties:\n            transaction:\n              properties:\n                data:\n                  properties:\n                    id:\n                      description: |\n                        The unique identifier of the resource within its type.\n                      type: string\n                    type:\n                      description: \"The type of this resource: `transactions`\"\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              required:\n                - data\n              type: object\n            webhook:\n              properties:\n                data:\n                  properties:\n                    id:\n                      description: |\n                        The unique identifier of the resource within its type.\n                      type: string\n                    type:\n                      description: \"The type of this resource: `webhooks`\"\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              required:\n                - data\n              type: object\n          required:\n            - webhook\n          type: object\n        type:\n          description: \"The type of this resource: `webhook-events`\"\n          type: string\n      required:\n        - type\n        - id\n        - attributes\n        - relationships\n      type: object\n    WebhookEventTypeEnum:\n      description: |\n        Specifies the type of a webhook event. This can be used to determine what\n        action to take in response to the event, such as which relationships to\n        expect.\n      enum:\n        - TRANSACTION_CREATED\n        - TRANSACTION_SETTLED\n        - TRANSACTION_DELETED\n        - PING\n    WebhookInputResource:\n      description: |\n        Represents a webhook specified as request input.\n      properties:\n        attributes:\n          properties:\n            description:\n              description: |\n                An optional description for this webhook, up to 64 characters in\n                length.\n              nullable: true\n              type: string\n            url:\n              description: |\n                The URL that this webhook should post events to. This must be a valid\n                HTTP or HTTPS URL that does not exceed 300 characters in length.\n              format: uri\n              type: string\n          required:\n            - url\n          type: object\n      required:\n        - attributes\n      type: object\n    WebhookResource:\n      description: |\n        Provides information about a webhook.\n      properties:\n        attributes:\n          properties:\n            createdAt:\n              description: |\n                The date-time at which this webhook was created.\n              format: date-time\n              type: string\n            description:\n              description: |\n                An optional description that was provided at the time the webhook was\n                created.\n              nullable: true\n              type: string\n            secretKey:\n              description: |\n                A shared secret key used to sign all webhook events sent to the\n                configured webhook URL. This field is returned only once, upon the\n                initial creation of the webhook. If lost, create a new webhook and\n                delete this webhook.\n\n                The webhook URL receives a request with a\n                `X-Up-Authenticity-Signature` header, which is the SHA-256 HMAC of\n                the entire raw request body signed using this `secretKey`. It is\n                advised to compute and check this signature to verify the\n                authenticity of requests sent to the webhook URL. See\n                [Handling webhook events](#callback_post_webhookURL) for full\n                details.\n              type: string\n            url:\n              description: |\n                The URL that this webhook is configured to `POST` events to.\n              type: string\n          required:\n            - url\n            - description\n            - createdAt\n          type: object\n        id:\n          description: |\n            The unique identifier for this webhook.\n          type: string\n        links:\n          properties:\n            self:\n              description: |\n                The canonical link to this resource within the API.\n              type: string\n          required:\n            - self\n          type: object\n        relationships:\n          properties:\n            logs:\n              properties:\n                links:\n                  properties:\n                    related:\n                      description: |\n                        The link to retrieve the related resource(s) in this relationship.\n                      type: string\n                  required:\n                    - related\n                  type: object\n              type: object\n          required:\n            - logs\n          type: object\n        type:\n          description: \"The type of this resource: `webhooks`\"\n          type: string\n      required:\n        - type\n        - id\n        - attributes\n        - relationships\n      type: object\n  securitySchemes:\n    bearer_auth:\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/up.com.au/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/up.com.au/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}