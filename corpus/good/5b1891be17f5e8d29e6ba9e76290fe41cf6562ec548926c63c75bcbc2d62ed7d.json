{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apache/skywalking"
		},
		"file": {
			"name": "customerAPI-a-1-v1.yaml",
			"size": 0,
			"path": "oap-server/server-core/src/test/resources/openapi-definitions/serviceA/serviceA-1/customerAPI-a-1-v1.yaml",
			"byteSize": 4573,
			"content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nopenapi: 3.0.0\nx-sw-service-name: serviceA\n\ninfo:\n  description: OpenAPI definition for SkyWalking test.\n  version: v1\n  title: Customer API\n\ntags:\n  - name: customer\n    description: customer\n\npaths:\n  /customers:\n    get:\n      tags:\n        - customer\n      summary: Get all customers list\n      description: Get all customers list.\n      operationId: getCustomers\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n  /customers/{id}:\n    get:\n      tags:\n        - customer\n      summary: Get customer details\n      description: Get customer details with the given id.\n      operationId: getCustomer\n      parameters:\n        - name: id\n          in: path\n          description: Customer id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerDetails\"\n        \"400\":\n          description: Invalid customer id\n    post:\n      tags:\n        - customer\n      summary: Update customer details\n      description: Update customer details with the given id.\n      operationId: updateCustomer\n      parameters:\n        - name: id\n          in: path\n          description: Customer id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: name\n          in: query\n          description: Customer name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n    delete:\n      tags:\n        - customer\n      summary: Delete customer details\n      description: Delete customer details with the given id.\n      operationId: deleteCustomer\n      parameters:\n        - name: id\n          in: path\n          description: Customer id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n\n  /customer/{region}/{country}:\n    get:\n      tags:\n        - customer\n      summary: Get customers regional\n      description: Get customers regional with the given id.\n      operationId: getCustomersRegional\n      parameters:\n        - name: region\n          in: path\n          description: Customers region\n          required: true\n          schema:\n            type: string\n        - name: country\n          in: path\n          description: Customers country\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"400\":\n          description: Invalid parameters supplied\ncomponents:\n  schemas:\n    Customer:\n      type: object\n      description: Customer id and name\n      properties:\n        id:\n          type: integer\n          format: int64\n          description: Customer id\n        name:\n          type: string\n          description: Customer name\n      required:\n        - id\n        - name\n    CustomerDetails:\n      type: object\n      description: Customer details\n      properties:\n        id:\n          type: integer\n          format: int64\n          description: Customer id\n        name:\n          type: string\n          description: Customer name\n        description:\n          type: string\n          description: Customer description\n      required:\n        - id\n        - name\n",
			"canonicalURL": "/github.com/apache/skywalking@9793f323d582dfb87bd57949911406469b439a9d/-/blob/oap-server/server-core/src/test/resources/openapi-definitions/serviceA/serviceA-1/customerAPI-a-1-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apache/skywalking/blob/9793f323d582dfb87bd57949911406469b439a9d/oap-server/server-core/src/test/resources/openapi-definitions/serviceA/serviceA-1/customerAPI-a-1-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}