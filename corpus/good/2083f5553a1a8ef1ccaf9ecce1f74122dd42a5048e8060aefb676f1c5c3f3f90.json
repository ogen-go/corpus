{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "naviplancentral.com-factfinder-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/naviplancentral.com-factfinder-v1-swagger.yaml",
			"byteSize": 278920,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: AdvicentFP\n  description: An API for accessing the NaviPlan Fact Finder.\n  title: Advicent.FactFinderService\n  version: v1\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://twitter.com/Advicent/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://demo.uat.naviplancentral.com/factfinder/swagger/docs/v1\n      version: \"2.0\"\n  x-providerName: naviplancentral.com\n  x-serviceName: factfinder\npaths:\n  /api/AccountTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Account Types for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Account Types\n        including id and type description.\"\n      operationId: AccountTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Account Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Account Type not found\n      tags:\n        - AccountTypes\n  \"/api/AccountTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Account Types for the\n        specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Account Types\n        including id and type description.\"\n      operationId: AccountTypes_GetById\n      parameters:\n        - description: The ID of Account Type used to retreive the Account Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Account Type not found\n      tags:\n        - AccountTypes\n  /api/Accounts:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Accounts for the specified\n        Fact Finder ID and/or external source ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Account\n        information including description and market value.\"\n      operationId: Accounts_GetAccountsByFactFinderIdByFactfinderidExternalsourceid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Accounts\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The external ID used to filter Accounts\n          in: query\n          name: externalSourceId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    post:\n      deprecated: false\n      description: \"Description: The operation creates an Account.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Accounts on a\n        Fact Finder.\"\n      operationId: Accounts_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AccountModel\"\n        description: The Account to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n  \"/api/Accounts/{accountId}/Holdings\":\n    get:\n      deprecated: false\n      description: Retrieves all holdings in the specified Account.\n      operationId: Accounts_GetAccountHoldingsByAccountid\n      parameters:\n        - description: The ID of the Account used to retrieve the Account Holding data\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    post:\n      deprecated: false\n      description: Creates a holding and adds it to an existing Account.\n      operationId: Accounts_PostAccountHoldingByAccountidModel\n      parameters:\n        - description: The existing Account ID used to identify which Account to add the\n            holding to\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHoldingModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHoldingModel\"\n        description: The holding data\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    put:\n      deprecated: false\n      description: Updates all holdings associated with an account\n      operationId: Accounts_PutHoldingsByAccountidHoldings\n      parameters:\n        - description: The account with the holding to be updated\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHoldingsWithoutIdModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHoldingsWithoutIdModel\"\n        description: The list of holdings for an account\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n  \"/api/Accounts/{accountId}/Holdings/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: This operation deletes a single Account Holding for the\n        specified Account Holding ID and Account ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides the ability to remove\n        individual holdings from a specified Account.\"\n      operationId: Accounts_DeleteAccountHoldingByAccountidId\n      parameters:\n        - description: The ID of the Account used to retrieve the Account data that the\n            specified holding belongs to.\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Account Holding used to delete the Account Holding\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Account Holding for the\n        specified Account Holding ID and Account ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Account Holding\n        information including description and market value.\"\n      operationId: Accounts_GetAccountHoldingByAccountidId\n      parameters:\n        - description: The ID of the Account used to retrieve the Account Holding data\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Account Holding used to retrieve the Account Holding\n            data\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    put:\n      deprecated: false\n      description: Updates a holding associated with an account\n      operationId: Accounts_PutByAccountidIdHolding\n      parameters:\n        - description: The account with the holding to be updated\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The id of the holding to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHoldingModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHoldingModel\"\n        description: The holding values used to update the current holding\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountHoldingModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n  \"/api/Accounts/{accountId}/SavingsStrategies\":\n    delete:\n      deprecated: false\n      description: Deletes all savings strategies tied to an account\n      operationId: Accounts_DeleteSavingsStrategiesByAccountid\n      parameters:\n        - description: Id of the account that holds the savings strategies\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    get:\n      deprecated: false\n      description: Get all of the savings strategies for a specific account\n      operationId: Accounts_GetSavingsStrategiesByAccountIdByAccountid\n      parameters:\n        - description: The id of the account to retrieve the savings strategies from\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategiesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategiesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    post:\n      deprecated: false\n      description: Creates a savings strategy on a specific account\n      operationId: Accounts_PostSavingsStrategyByAccountidSavingsstrategy\n      parameters:\n        - description: Id of the account to create a savings strategy for\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SavingsStrategyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SavingsStrategyModel\"\n        description: Values for the strategy to be created\n        required: true\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n  \"/api/Accounts/{accountId}/SavingsStrategies/{id}\":\n    delete:\n      deprecated: false\n      description: Deletes a specific savings strategy\n      operationId: Accounts_DeleteSavingsStrategyByAccountidId\n      parameters:\n        - description: Id of the account that holds the savings strategy\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Id of the savings strategy to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    get:\n      deprecated: false\n      description: Get a specific savings strategy for an account\n      operationId: Accounts_GetSavingsStrategiesByAccountIdAndSavingsStrategyIdByAccountidId\n      parameters:\n        - description: The id of the account to retrieve the savings strategies from\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The id of the savings strategy to get\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    put:\n      deprecated: false\n      description: Updates a specific savings strategy\n      operationId: Accounts_PutSavingsStrategyByAccountidIdSavingsstrategy\n      parameters:\n        - description: Id of the account that holds the savings strategy\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Id of the savings strategy to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SavingsStrategyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SavingsStrategyModel\"\n        description: The model with which to update the savings strategy with\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n  \"/api/Accounts/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes an Account tied to a Fact Finder.\u003cbr\n        /\u003e\\r\n\n        \\              Purpose: Allows for removal of an Account from a\n        Fact Finder.\"\n      operationId: Accounts_DeleteAccountById\n      parameters:\n        - description: The Account ID used to identify which Account to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Account for the\n        specified Account ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Account\n        information including description and market value.\"\n      operationId: Accounts_GetById\n      parameters:\n        - description: The ID of the Account used to retrieve the Account data\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n    put:\n      deprecated: false\n      description: \"Description: The operation updates an Account, deletes associated\n        saving strategies if the account type changes.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of an\n        Account on a Fact Finder.\"\n      operationId: Accounts_PutByIdModel\n      parameters:\n        - description: The existing Account ID used to identify which Account to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AccountModel\"\n        description: The Account to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Accounts\n  /api/Clients:\n    post:\n      deprecated: false\n      description: \"Description: This operation submits the Fact Finder data to an external\n        system.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows Fact Finder data to be persisted\n        in another system for that system's consumption and use.\"\n      operationId: Clients_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ClientsModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ClientsModel\"\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ClientModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Client data access.\n        \"403\":\n          description: Request is restricted for access to Client.\n      tags:\n        - Clients\n  /api/CriticalIllnessInsurancePolicies:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Critical Illness Insurance\n        Policies for the specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Critical Illness\n        Insurance Policies including description and policy type.\"\n      operationId: CriticalIllnessInsurancePolicies_GetCriticalIllnessInsurancePoliciesByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Critical Illness\n            Insurance Policies\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePoliciesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePoliciesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Critical Illness Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Critical Illness Insurance\n            Policy.\n        \"404\":\n          description: Critical Illness Insurance Policy not found.\n      tags:\n        - CriticalIllnessInsurancePolicies\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Critical Illness Insurance\n        Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Critical Illness\n        Insurance Policies on a Fact Finder.\"\n      operationId: CriticalIllnessInsurancePolicies_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyModel\"\n        description: The Critical Illness Insurance Policy to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyWithIdMod\\\n                  el\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyWithIdMod\\\n                  el\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Critical Illness Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Critical Illness Insurance\n            Policy.\n        \"404\":\n          description: Critical Illness Insurance Policy not found.\n      tags:\n        - CriticalIllnessInsurancePolicies\n  \"/api/CriticalIllnessInsurancePolicies/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Critical Illness Insurance Policy\n        tied to a Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Critical Illness\n        Insurance Policy from a Fact Finder.\"\n      operationId: CriticalIllnessInsurancePolicies_DeleteById\n      parameters:\n        - description: The Critical Illness Insurance Policy ID used to identify which\n            Critical Illness Insurance Policy to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Critical Illness Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Critical Illness Insurance\n            Policy.\n        \"404\":\n          description: Critical Illness Insurance Policy not found.\n      tags:\n        - CriticalIllnessInsurancePolicies\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Critical Illness\n        Insurance Policy for the specified Critical Illness Insurance Policy\n        ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Critical Illness\n        Insurance Policy including description and policy type.\"\n      operationId: CriticalIllnessInsurancePolicies_GetById\n      parameters:\n        - description: The ID of the Critical Illness Insurance Policy used to retreive the\n            Critical Illness Insurance Policy\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyWithIdMod\\\n                  el\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyWithIdMod\\\n                  el\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Critical Illness Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Critical Illness Insurance\n            Policy.\n        \"404\":\n          description: Critical Illness Insurance Policy not found.\n      tags:\n        - CriticalIllnessInsurancePolicies\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Critical Illness Insurance\n        Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Critical Illness Insurance Policy on a Fact Finder.\"\n      operationId: CriticalIllnessInsurancePolicies_PutByIdModel\n      parameters:\n        - description: The existing Critical Illness Insurance Policy ID used to identify\n            which Critical Illness Insurance Policy to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyModel\"\n        description: The Critical Illness Insurance Policy to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyWithIdMod\\\n                  el\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyWithIdMod\\\n                  el\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Critical Illness Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Critical Illness Insurance\n            Policy.\n        \"404\":\n          description: Critical Illness Insurance Policy not found.\n      tags:\n        - CriticalIllnessInsurancePolicies\n  /api/CriticalIllnessInsurancePolicyTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Critical Illness Insurance\n        Policy Types for the specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Critical Illness\n        Insurance Policy Types including id and type description.\"\n      operationId: CriticalIllnessInsurancePolicyTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Critical Illness Insurance Policy Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Critical Illness Insurance Policy Type not found.\n      tags:\n        - CriticalIllnessInsurancePolicyTypes\n  \"/api/CriticalIllnessInsurancePolicyTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the Critical Illness Insurance\n        Policy Type for the specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Critical Illness\n        Insurance Policy Types including id and type description.\"\n      operationId: CriticalIllnessInsurancePolicyTypes_GetById\n      parameters:\n        - description: The ID of Critical Illness Insurance Policy Type used to retreive\n            the Critical Illness Insurance Policy Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Critical Illness Insurance Policy Type not found.\n      tags:\n        - CriticalIllnessInsurancePolicyTypes\n  /api/DefinedBenefitPensions:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Defined Benefit Pensions for\n        the specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Defined Benefit\n        Pensions including description and start date.\"\n      operationId: DefinedBenefitPensions_GetDefinedBenefitPensionsByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Defined Benefit Pensions\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Defined Benefit Pension data access.\n        \"403\":\n          description: Request is restricted for access to Defined Benefit Pension.\n        \"404\":\n          description: Defined Benefit Pension not found.\n      tags:\n        - DefinedBenefitPensions\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Defined Benefit Pension.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Defined Benefit\n        Pensions on a Fact Finder.\"\n      operationId: DefinedBenefitPensions_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DefinedBenefitPensionModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DefinedBenefitPensionModel\"\n        description: The Defined Benefit Pension to be added to the Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Defined Benefit Pension data access.\n        \"403\":\n          description: Request is restricted for access to Defined Benefit Pension.\n        \"404\":\n          description: Defined Benefit Pension not found.\n      tags:\n        - DefinedBenefitPensions\n  \"/api/DefinedBenefitPensions/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Defined Benefit Pension tied to a\n        Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Defined Benefit\n        Pension from a Fact Finder.\"\n      operationId: DefinedBenefitPensions_DeleteDefinedBenefitPensionById\n      parameters:\n        - description: The Defined Benefit Pension ID used to identify which Defined\n            Benefit Pension to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Defined Benefit Pension data access.\n        \"403\":\n          description: Request is restricted for access to Defined Benefit Pension.\n        \"404\":\n          description: Defined Benefit Pension not found.\n      tags:\n        - DefinedBenefitPensions\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Defined Benefit Pension\n        for the specified Defined Benefit Pension ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Defined Benefit\n        Pension including description and start date.\"\n      operationId: DefinedBenefitPensions_GetById\n      parameters:\n        - description: The ID of the Defined Benefit Pension used to retreive the Defined\n            Benefit Pension\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Defined Benefit Pension data access.\n        \"403\":\n          description: Request is restricted for access to Defined Benefit Pension.\n        \"404\":\n          description: Defined Benefit Pension not found.\n      tags:\n        - DefinedBenefitPensions\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Defined Benefit Pension.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Defined Benefit Pension on a Fact Finder.\"\n      operationId: DefinedBenefitPensions_PutDefinedBenefitPensionByIdModel\n      parameters:\n        - description: The existing Defined Benefit Pension ID used to identify which\n            Defined Benefit Pension to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DefinedBenefitPensionModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DefinedBenefitPensionModel\"\n        description: The Defined Benefit Pension to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Defined Benefit Pension data access.\n        \"403\":\n          description: Request is restricted for access to Defined Benefit Pension.\n        \"404\":\n          description: Defined Benefit Pension not found.\n      tags:\n        - DefinedBenefitPensions\n  /api/Demographics:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Demographic information for\n        the specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Demographic\n        information including city and state.\"\n      operationId: Demographics_GetDemographicsByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Demographic information\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Demographic information data access.\n        \"403\":\n          description: Request is restricted for access to Demographic information.\n        \"404\":\n          description: Demographic information not found.\n      tags:\n        - Demographics\n    post:\n      deprecated: false\n      description: \"Description: The operation creates Demographic information.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Demographic\n        information on a Fact Finder.\"\n      operationId: Demographics_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsModel\"\n        description: The Demographic information to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Demographic information data access.\n        \"403\":\n          description: Request is restricted for access to Demographic information.\n        \"404\":\n          description: Demographic information not found.\n      tags:\n        - Demographics\n  \"/api/Demographics/{demographicId}/Dependents\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Dependents for the specified\n        Demographic information ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Dependents\n        including first and last name.\"\n      operationId: Demographics_GetDependentsByDemographicid\n      parameters:\n        - description: The ID of the Demographic information used to retrieve Dependents\n          in: path\n          name: demographicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Demographic information data access.\n        \"403\":\n          description: Request is restricted for access to Demographic information.\n        \"404\":\n          description: Demographic information not found.\n      tags:\n        - Demographics\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Dependent.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Dependents on a\n        Fact Finder.\"\n      operationId: Demographics_PostByDemographicidModel\n      parameters:\n        - description: The ID of the Demographic information to add the Dependent to\n          in: path\n          name: demographicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsDependentModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsDependentModel\"\n        description: The Dependent to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Dependent information data access.\n        \"403\":\n          description: Request is restricted for access to Dependent information.\n        \"404\":\n          description: Dependent information not found.\n        \"409\":\n          description: The request cannot be completed.\n      tags:\n        - Demographics\n  \"/api/Demographics/{demographicId}/Dependents/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Dependent tied to a Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Dependent from a\n        Fact Finder.\"\n      operationId: Demographics_DeleteDependentByDemographicidId\n      parameters:\n        - description: The ID of the Demographic information used to identify which\n            Dependent to remove\n          in: path\n          name: demographicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The Dependent ID used to identify which Dependent to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Dependent information data access.\n        \"403\":\n          description: Request is restricted for access to Dependent information.\n        \"404\":\n          description: Dependent information not found.\n      tags:\n        - Demographics\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Dependent for the\n        specified Dependent ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Dependent\n        including first and last name.\"\n      operationId: Demographics_GetDependentByDemographicidId\n      parameters:\n        - description: The ID of the Demographic information used to retrieve Dependents\n          in: path\n          name: demographicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Dependent used to retreive the Dependent\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Demographic information data access.\n        \"403\":\n          description: Request is restricted for access to Demographic information.\n        \"404\":\n          description: Demographic information not found.\n      tags:\n        - Demographics\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Dependent.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Dependent on a Fact Finder.\"\n      operationId: Demographics_PutByDemographicidIdModel\n      parameters:\n        - description: The ID of the Demographic information used to identify which\n            Dependent to update\n          in: path\n          name: demographicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The existing Dependent ID used to identify which Dependent to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsDependentModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsDependentModel\"\n        description: The Dependent to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsDependentWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Dependent information data access.\n        \"403\":\n          description: Request is restricted for access to Dependent information.\n        \"404\":\n          description: Dependent information not found.\n      tags:\n        - Demographics\n  \"/api/Demographics/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves Demographic information for the\n        specified Demographic information ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Demographic\n        information including city and state.\"\n      operationId: Demographics_GetById\n      parameters:\n        - description: The ID of the Demographic information used to retreive the\n            Demographic information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Demographic information data access.\n        \"403\":\n          description: Request is restricted for access to Demographic information.\n        \"404\":\n          description: Demographic information not found.\n      tags:\n        - Demographics\n    put:\n      deprecated: false\n      description: \"Description: The operation updates Demographic information.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of\n        Demographic information on a Fact Finder.\"\n      operationId: Demographics_PutByIdModel\n      parameters:\n        - description: The existing Demographic information ID used to identify which\n            Demographic information to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DemographicsModel\"\n        description: The Demographic information to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DemographicsWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Demographic information data access.\n        \"403\":\n          description: Request is restricted for access to Demographic information.\n        \"404\":\n          description: Demographic information not found.\n        \"409\":\n          description: The request cannot be completed.\n      tags:\n        - Demographics\n  /api/DisabilityInsurancePolicies:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Disability Insurance Policies\n        for the specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Disability\n        Insurance Policies including description and policy type.\"\n      operationId: DisabilityInsurancePolicies_GetDisabilityInsurancePoliciesByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Disability Insurance\n            Policies\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePoliciesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePoliciesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Disability Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Disability Insurance Policy.\n        \"404\":\n          description: Disability Insurance Policy not found.\n      tags:\n        - DisabilityInsurancePolicies\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Disability Insurance Policy.\u003cbr\n        /\u003e\\r\n\n        \\              Purpose: Allows for creation of Disability\n        Insurance Policies on a Fact Finder.\"\n      operationId: DisabilityInsurancePolicies_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisabilityInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DisabilityInsurancePolicyModel\"\n        description: The Disability Insurance Policy to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Disability Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Disability Insurance Policy.\n        \"404\":\n          description: Disability Insurance Policy not found.\n      tags:\n        - DisabilityInsurancePolicies\n  \"/api/DisabilityInsurancePolicies/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Disability Insurance Policy tied\n        to a Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Disability\n        Insurance Policy from a Fact Finder.\"\n      operationId: DisabilityInsurancePolicies_DeleteById\n      parameters:\n        - description: The Disability Insurance Policy ID used to identify which Disability\n            Insurance Policy to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Disability Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Disability Insurance Policy.\n        \"404\":\n          description: Disability Insurance Policy not found.\n      tags:\n        - DisabilityInsurancePolicies\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Disability Insurance\n        Policy for the specified Disability Insurance Policy ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Disability\n        Insurance Policy including description and policy type.\"\n      operationId: DisabilityInsurancePolicies_GetById\n      parameters:\n        - description: The ID of the Disability Insurance Policy used to retreive the\n            Disability Insurance Policy\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Disability Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Disability Insurance Policy.\n        \"404\":\n          description: Disability Insurance Policy not found.\n      tags:\n        - DisabilityInsurancePolicies\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Disability Insurance Policy.\u003cbr\n        /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Disability Insurance Policy on a Fact Finder.\"\n      operationId: DisabilityInsurancePolicies_PutByIdModel\n      parameters:\n        - description: The existing Disability Insurance Policy ID used to identify which\n            Disability Insurance Policy to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisabilityInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DisabilityInsurancePolicyModel\"\n        description: The Disability Insurance Policy to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Disability Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Disability Insurance Policy.\n        \"404\":\n          description: Disability Insurance Policy not found.\n      tags:\n        - DisabilityInsurancePolicies\n  /api/DisabilityInsurancePolicyTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Disability Insurance Policy\n        Types for the specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Disability\n        Insurance Policy Types including id and type description.\"\n      operationId: DisabilityInsurancePolicyTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Disability Insurance Policy Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Disability Insurance Policy Type not found.\n      tags:\n        - DisabilityInsurancePolicyTypes\n  \"/api/DisabilityInsurancePolicyTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Disability Insurance Policy\n        Types for the specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Disability\n        Insurance Policy Types including id and type description.\"\n      operationId: DisabilityInsurancePolicyTypes_GetById\n      parameters:\n        - description: The ID of Disability Insurance Policy Type used to retreive the\n            Disability Insurance Policy Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DisabilityInsurancePolicyTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Disability Insurance Policy Type not found.\n      tags:\n        - DisabilityInsurancePolicyTypes\n  /api/EducationGoals:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Education Goals for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Education Goals\n        including description and projected cost.\"\n      operationId: EducationGoals_GetEducationGoalsByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Education Goals\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal.\n        \"404\":\n          description: Education Goal not found.\n      tags:\n        - EducationGoals\n    post:\n      deprecated: false\n      description: \"Description: The operation creates an Education Goal.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Education Goals\n        on a Fact Finder.\"\n      operationId: EducationGoals_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EducationGoalModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/EducationGoalModel\"\n        description: The Education Goal to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal.\n        \"404\":\n          description: Education Goal not found.\n      tags:\n        - EducationGoals\n  \"/api/EducationGoals/{educationGoalId}/Expenses\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Education Goal Expenses for\n        the specified Education Goal ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Education Goal\n        Expenses including description and annual cost.\"\n      operationId: EducationGoals_GetEducationExpensesByEducationGoalIdByEducationgoalid\n      parameters:\n        - description: The ID of the Education Goal used to retrieve Education Goal Expenses\n          in: path\n          name: educationGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpensesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpensesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal Expense.\n        \"404\":\n          description: Education Goal Expense not found.\n      tags:\n        - EducationGoals\n    post:\n      deprecated: false\n      description: \"Description: The operation creates an Education Goal Expense.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Education Goal\n        Expenses on a Fact Finder.\"\n      operationId: EducationGoals_PostByEducationgoalidModel\n      parameters:\n        - description: The Education Goal ID used to locate the Goal to add the expense to\n          in: path\n          name: educationGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/EducationExpenseModel\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal Expense.\n        \"404\":\n          description: Education Goal Expense not found.\n      tags:\n        - EducationGoals\n  \"/api/EducationGoals/{educationGoalId}/Expenses/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes an Education Goal Expense tied to a\n        Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of an Education Goal\n        Expense from a Fact Finder.\"\n      operationId: EducationGoals_DeleteByEducationgoalidId\n      parameters:\n        - description: The Education Goal ID used to locate the Goal to delete the Expense\n            under\n          in: path\n          name: educationGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The Education Goal Expense ID used to identify which Education Goal\n            Expense to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal Expense.\n        \"404\":\n          description: Education Goal Expense not found.\n      tags:\n        - EducationGoals\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Education Goal Expense\n        for the specified Education Goal Expense ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Education Goal\n        Expense including description and annual cost.\"\n      operationId: EducationGoals_GetEducationExpenseByEducationgoalidId\n      parameters:\n        - description: The ID of the Education Goal used to retrieve Education Goal Expenses\n          in: path\n          name: educationGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Education Goal Expense used to retreive the Education\n            Goal Expense\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal Expense.\n        \"404\":\n          description: Education Goal Expense not found.\n      tags:\n        - EducationGoals\n    put:\n      deprecated: false\n      description: \"Description: The operation updates an Education Goal Expense.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of an\n        Education Goal Expense on a Fact Finder.\"\n      operationId: EducationGoals_PutByEducationgoalidIdModel\n      parameters:\n        - description: The Education Goal ID used to locate the Goal to update the Expense\n            under\n          in: path\n          name: educationGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The existing Education Goal Expense ID used to identify which\n            Education Goal Expense to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/EducationExpenseModel\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal Expense.\n        \"404\":\n          description: Education Goal Expense not found.\n      tags:\n        - EducationGoals\n  \"/api/EducationGoals/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes an Education Goal tied to a Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of an Education Goal\n        from a Fact Finder.\"\n      operationId: EducationGoals_DeleteById\n      parameters:\n        - description: The Education Goal ID used to identify which Education Goal to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal.\n        \"404\":\n          description: Education Goal not found.\n      tags:\n        - EducationGoals\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Education Goal for the\n        specified Education Goal ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Education Goal\n        including description and projected cost.\"\n      operationId: EducationGoals_GetById\n      parameters:\n        - description: The ID of the Education Goal used to retreive the Education Goal\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal.\n        \"404\":\n          description: Education Goal not found.\n      tags:\n        - EducationGoals\n    put:\n      deprecated: false\n      description: \"Description: The operation creates an Education Goal Expense.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Education Goal\n        Expenses on a Fact Finder.\"\n      operationId: EducationGoals_PutByIdModel\n      parameters:\n        - description: The Education Goal ID used to locate the Goal to add the Expense to\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EducationGoalModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/EducationGoalModel\"\n        description: The Education Goal Expense to be added to the Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EducationGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Education Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Education Goal Expense.\n        \"404\":\n          description: Education Goal Expense not found.\n      tags:\n        - EducationGoals\n  /api/ExpenseTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Expense Types for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Expense Types\n        including id and type description.\"\n      operationId: ExpenseTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Expense Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Expense Type not found.\n      tags:\n        - ExpenseTypes\n  \"/api/ExpenseTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Expense Types for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Expense Types\n        including id and type description.\"\n      operationId: ExpenseTypes_GetById\n      parameters:\n        - description: The ID of Expense Type used to retreive the Expense Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Expense Type not found.\n      tags:\n        - ExpenseTypes\n  /api/Expenses:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Expenses for the specified\n        Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Expenses\n        including description and Expense type.\"\n      operationId: Expenses_GetExpensesByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Expenses\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpensesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpensesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Expense data access.\n        \"403\":\n          description: Request is restricted for access to Expense.\n        \"404\":\n          description: Expense not found.\n      tags:\n        - Expenses\n    post:\n      deprecated: false\n      description: \"Description: The operation creates an Expense.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Expenses on a\n        Fact Finder.\"\n      operationId: Expenses_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExpenseModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ExpenseModel\"\n        description: The Expense to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Expense data access.\n        \"403\":\n          description: Request is restricted for access to Expense.\n        \"404\":\n          description: Expense not found.\n      tags:\n        - Expenses\n  \"/api/Expenses/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes an Expense tied to a Fact Finder.\u003cbr\n        /\u003e\\r\n\n        \\              Purpose: Allows for removal of an Expense from a\n        Fact Finder.\"\n      operationId: Expenses_DeleteById\n      parameters:\n        - description: The Expense ID used to identify which Expense to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Expense data access.\n        \"403\":\n          description: Request is restricted for access to Expense.\n        \"404\":\n          description: Expense not found.\n      tags:\n        - Expenses\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Expense for the\n        specified Expense ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Expense including\n        description and Expense type.\"\n      operationId: Expenses_GetById\n      parameters:\n        - description: The ID of the Expense used to retreive the Expense\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Expense data access.\n        \"403\":\n          description: Request is restricted for access to Expense.\n        \"404\":\n          description: Expense not found.\n      tags:\n        - Expenses\n    put:\n      deprecated: false\n      description: \"Description: The operation updates an Expense.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of an\n        Expense on a Fact Finder. \u003cbr /\u003e\u003cbr /\u003e\\r\n\n        \\              Note: Expense type cannot be changed for expenses\n        prepopulated from NaviPlan.\"\n      operationId: Expenses_PutByIdModel\n      parameters:\n        - description: The existing Expense ID used to identify which Expense to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExpenseModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ExpenseModel\"\n        description: The Expense to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Expense data access.\n        \"403\":\n          description: Request is restricted for access to Expense.\n        \"404\":\n          description: Expense not found.\n      tags:\n        - Expenses\n  /api/FactFinders:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Fact Finders for the\n        specified householdId, \\r\n\n        \\              or if null, all households associated with the\n        user.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Fact Finder\n        including status.\"\n      operationId: FactFinders_GetByHouseholdIdByHouseholdid\n      parameters:\n        - description: The ID of the household used to retrieve the fact finders. If not\n            set, uses all households associated with the user\n          in: query\n          name: householdId\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/FactFinderWithIdModel\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/FactFinderWithIdModel\"\n                type: array\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n      tags:\n        - FactFinders\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a completely empty draft Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Requirements: A householdId and list of modules\n        must be provided.\u003cbr /\u003e\\r\n\n        \\              Purpose: Stages a Fact Finder for population.\"\n      operationId: FactFinders_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderEntityModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderEntityModel\"\n        description: The Household the Fact Finder will belong to and the modules that are\n          available.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n        \"409\":\n          description: The request cannot be completed.\n      tags:\n        - FactFinders\n  /api/FactFinders/Populate:\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a new Populated Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Requirements: A householdId and list of modules\n        must be provided.\u003cbr /\u003e\\r\n\n        \\              Purpose: Creation of a Fact Finder.\"\n      operationId: FactFinders_PostPopulateByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderPopulatableEntityModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderPopulatableEntityModel\"\n        description: \"The Household the Fact Finder will belong to and the modules that are\n          available. \\r\n\n          \\            Optional PlanId to populate from\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n        \"409\":\n          description: The request cannot be completed.\n      tags:\n        - FactFinders\n  \"/api/FactFinders/{factFinderId}/Modules\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Fact Finder Modules for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Fact Finder\n        Modules including description and policy type.\"\n      operationId: FactFinderModules_GetByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Fact Finder Modules\n          in: path\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderModulesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderModulesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder Module data access.\n        \"404\":\n          description: Fact Finder Module not found.\n      tags:\n        - FactFinderModules\n  \"/api/FactFinders/{factFinderId}/Modules/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Fact Finder Module for\n        the specified Fact Finder Module ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Fact Finder\n        Module including description and policy type.\"\n      operationId: FactFinderModules_GetByFactfinderidId\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Fact Finder Module\n          in: path\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Fact Finder Module used to retreive the Fact Finder\n            Module\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderModuleWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderModuleWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder Module data access.\n        \"404\":\n          description: Fact Finder Module not found.\n      tags:\n        - FactFinderModules\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Fact Finder Module.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Fact Finder Module on a Fact Finder.\"\n      operationId: FactFinderModules_PutByModelFactfinderidId\n      parameters:\n        - description: The ID of the Fact Finder used to identify the Fact Finder Module to\n            update\n          in: path\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The existing Fact Finder Module ID used to identify which Fact\n            Finder Module to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderModuleModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderModuleModel\"\n        description: The Fact Finder Module to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderModuleWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderModuleWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder Module data access.\n        \"404\":\n          description: Fact Finder Module not found.\n      tags:\n        - FactFinderModules\n  \"/api/FactFinders/{factFinderId}/Snapshots\":\n    get:\n      deprecated: false\n      description: \"Description: The operation retrieves Snapshots of a Fact Finder.\u003cbr\n        /\u003e\\r\n\n        \\              Purpose: Allows for advisors to view all\n        Snapshots taken of a Fact Finder.\"\n      operationId: FactFinders_GetSnapshotsByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder to retrieve Snapshots for\n          in: path\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderSnapshotsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderSnapshotsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n      tags:\n        - FactFinders\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Snapshot of a Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for advisors to compare the\n        current fact finder to a snapshot prior to acceptance.\"\n      operationId: FactFinders_PostSnapshotsByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to create the Fact Finder Snapshot\n          in: path\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderSnapshotWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderSnapshotWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n      tags:\n        - FactFinders\n  \"/api/FactFinders/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: This operation deletes a single Fact Finder for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Deletes the fact finder.\"\n      operationId: FactFinders_DeleteById\n      parameters:\n        - description: The ID of the Fact Finder to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n      tags:\n        - FactFinders\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Fact Finder for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Fact Finder\n        including status.\"\n      operationId: FactFinders_GetById\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve the Fact Finder\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n      tags:\n        - FactFinders\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for the updating of a Fact\n        Finder.\"\n      operationId: FactFinders_PutByIdModel\n      parameters:\n        - description: The existing Fact Finder ID used to identify which Fact Finder to\n            update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderModel\"\n        description: The Fact Finder to be updated\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n      tags:\n        - FactFinders\n  \"/api/FactFinders/{id}/Populate\":\n    put:\n      deprecated: false\n      description: \"Description: The operation populates a fact finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for the population of a Fact\n        Finder based on a NaviPlan plan or client. This\\r\n\n        \\                       operation cannot be performed on a Fact\n        Finder more than once.\"\n      operationId: FactFinders_PutPopulateFactFinderByIdModel\n      parameters:\n        - description: The existing Fact Finder ID used to identify which Fact Finder to\n            populate.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderPopulationModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/FactFinderPopulationModel\"\n        description: The plan to populate a fact finder from. If not provided, the client\n          id will be inferred.\n        required: true\n      responses:\n        \"200\":\n          description: Fact Finder was successfully populated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FactFinderWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Fact Finder data access.\n        \"403\":\n          description: Request is restricted for access to Fact Finder.\n        \"404\":\n          description: Fact Finder not found.\n        \"409\":\n          description: Fact Finder already populated.\n      tags:\n        - FactFinders\n  /api/FilingStatusTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Filing Status Types for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Filing Status\n        Types including id and type description.\"\n      operationId: FilingStatusTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Filing Status Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FilingStatusTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FilingStatusTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Filing Status Type not found.\n      tags:\n        - FilingStatusTypes\n  \"/api/FilingStatusTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Filing Status Type for the\n        specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Filing Status\n        Types including id and type description.\"\n      operationId: FilingStatusTypes_GetById\n      parameters:\n        - description: The ID of Filing Status Type used to retreive the Filing Status Type\n            information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FilingStatusTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FilingStatusTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Filing Status Type not found.\n      tags:\n        - FilingStatusTypes\n  /api/FrequencyTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Frequency Types for the\n        specified country and entity.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Frequency Types\n        including id and type description.\"\n      operationId: FrequencyTypes_GetByEntityCountry\n      parameters:\n        - description: The entity used to filter Frequency Types\n          in: query\n          name: entity\n          required: true\n          schema:\n            type: string\n            enum:\n              - CriticalIllnessInsurancePolicies\n              - DisabilityInsurancePoliciesPremium\n              - DisabilityInsurancePoliciesBenefit\n              - Expenses\n              - Liabilities\n              - LifeInsurancePolicies\n              - LongTermCareInsurancePoliciesBenefit\n              - LongTermCareInsurancePoliciesPremium\n              - RealEstateAssets\n              - RetirementExpenses\n              - SavingsStrategies\n        - description: The country used to filter Frequency Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FrequencyTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FrequencyTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Frequency Type not found.\n      tags:\n        - FrequencyTypes\n  \"/api/FrequencyTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the Frequency Type for the\n        specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Frequency Types\n        including id and type description.\"\n      operationId: FrequencyTypes_GetById\n      parameters:\n        - description: The ID of Frequency Type used to retreive the Frequency Type\n            information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FrequencyTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FrequencyTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Frequency Type not found.\n      tags:\n        - FrequencyTypes\n  /api/IncomeTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Income Types for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Income Types\n        including id and type description.\"\n      operationId: IncomeTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Income Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Income Type not found.\n      tags:\n        - IncomeTypes\n  \"/api/IncomeTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the Income Type for the specified\n        id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Income Types\n        including id and type description.\"\n      operationId: IncomeTypes_GetById\n      parameters:\n        - description: The ID of Income Type used to retreive the Income Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Income Type not found.\n      tags:\n        - IncomeTypes\n  /api/Incomes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Incomes for the specified\n        Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Incomes including\n        annual amount and start date.\"\n      operationId: Incomes_GetIncomesByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Incomes\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/IncomesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Income data access.\n        \"403\":\n          description: Request is restricted for access to Income.\n        \"404\":\n          description: Income not found.\n      tags:\n        - Incomes\n    post:\n      deprecated: false\n      description: \"Description: The operation creates an Income.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Incomes on a Fact\n        Finder.\"\n      operationId: Incomes_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IncomeModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/IncomeModel\"\n        description: The Income to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Income data access.\n        \"403\":\n          description: Request is restricted for access to Income.\n        \"404\":\n          description: Income not found.\n      tags:\n        - Incomes\n  \"/api/Incomes/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes an Income tied to a Fact Finder.\u003cbr\n        /\u003e\\r\n\n        \\              Purpose: Allows for removal of an Income from a\n        Fact Finder.\"\n      operationId: Incomes_DeleteById\n      parameters:\n        - description: The Income ID used to identify which Income to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Income data access.\n        \"403\":\n          description: Request is restricted for access to Income.\n        \"404\":\n          description: Income not found.\n      tags:\n        - Incomes\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Income for the specified\n        Income ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Income including\n        annual amount and start date.\"\n      operationId: Incomes_GetById\n      parameters:\n        - description: The ID of the Income used to retreive the Income\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Income data access.\n        \"403\":\n          description: Request is restricted for access to Income.\n        \"404\":\n          description: Income not found.\n      tags:\n        - Incomes\n    put:\n      deprecated: false\n      description: \"Description: The operation updates an Income.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of an\n        Income on a Fact Finder.\"\n      operationId: Incomes_PutByIdModel\n      parameters:\n        - description: The existing Income ID used to identify which Income to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IncomeModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/IncomeModel\"\n        description: The Income to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/IncomeWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Income data access.\n        \"403\":\n          description: Request is restricted for access to Income.\n        \"404\":\n          description: Income not found.\n      tags:\n        - Incomes\n  /api/Liabilities:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Liabilities for the specified\n        Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Liabilities\n        including owner and type.\"\n      operationId: Liabilities_GetLiabilitiesByFactFinderIdByFactfinderidExternalsourceid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Liabilities\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The external source ID used to filter Liabilities\n          in: query\n          name: externalSourceId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilitiesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilitiesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Liability data access.\n        \"403\":\n          description: Request is restricted for access to Liability.\n        \"404\":\n          description: Liability not found.\n      tags:\n        - Liabilities\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Liability.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Liabilities on a\n        Fact Finder.\"\n      operationId: Liabilities_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LiabilityModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LiabilityModel\"\n        description: The Liability to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Liability data access.\n        \"403\":\n          description: Request is restricted for access to Liability.\n        \"404\":\n          description: Liability not found.\n      tags:\n        - Liabilities\n  \"/api/Liabilities/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Liability tied to a Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Liability from a\n        Fact Finder.\"\n      operationId: Liabilities_DeleteById\n      parameters:\n        - description: The Liability ID used to identify which Liability to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Liability data access.\n        \"403\":\n          description: Request is restricted for access to Liability.\n        \"404\":\n          description: Liability not found.\n      tags:\n        - Liabilities\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Liability for the\n        specified Liability ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Liability\n        including owner and type.\"\n      operationId: Liabilities_GetById\n      parameters:\n        - description: The ID of the Liability used to retreive the Liability\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Liability data access.\n        \"403\":\n          description: Request is restricted for access to Liability.\n        \"404\":\n          description: Liability not found.\n      tags:\n        - Liabilities\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Liability.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Liability on a Fact Finder.\"\n      operationId: Liabilities_PutByIdModel\n      parameters:\n        - description: The existing Liability ID used to identify which Liability to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LiabilityModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LiabilityModel\"\n        description: The Liability to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Liability data access.\n        \"403\":\n          description: Request is restricted for access to Liability.\n        \"404\":\n          description: Liability not found.\n      tags:\n        - Liabilities\n  /api/LiabilityTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Liability Types for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Liability Types\n        including id and type description.\"\n      operationId: LiabilityTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Liability Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Liability Type not found.\n      tags:\n        - LiabilityTypes\n  \"/api/LiabilityTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the Liability Type for the\n        specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Liability Types\n        including id and type description.\"\n      operationId: LiabilityTypes_GetById\n      parameters:\n        - description: The ID of Liability Type used to retreive the Liability Type\n            information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilityTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Liability Type not found.\n      tags:\n        - LiabilityTypes\n  /api/LifeInsurancePolicies:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Life Insurance Policies for\n        the specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Life Insurance\n        Policies including description and policy type.\"\n      operationId: LifeInsurancePolicies_GetLifeInsurancePoliciesByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Life Insurance Policies\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePoliciesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePoliciesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - LifeInsurancePolicies\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Life Insurance Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Life Insurance\n        Policies on a Fact Finder.\"\n      operationId: LifeInsurancePolicies_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LifeInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LifeInsurancePolicyModel\"\n        description: The Life Insurance Policy to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - LifeInsurancePolicies\n  \"/api/LifeInsurancePolicies/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Life Insurance Policy tied to a\n        Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Life Insurance\n        Policy and associated subaccounts from a Fact Finder.\"\n      operationId: LifeInsurancePolicies_DeleteById\n      parameters:\n        - description: The Life Insurance Policy ID used to identify which Life Insurance\n            Policy to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - LifeInsurancePolicies\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Life Insurance Policy\n        for the specified Life Insurance Policy ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Life Insurance\n        Policy including description and policy type.\"\n      operationId: LifeInsurancePolicies_GetById\n      parameters:\n        - description: The ID of the Life Insurance Policy used to retreive the Life\n            Insurance Policy\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - LifeInsurancePolicies\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Life Insurance Policy, deletes\n        associated sub-accounts if the policy type changes.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Life Insurance Policy on a Fact Finder.\"\n      operationId: LifeInsurancePolicies_PutByIdModel\n      parameters:\n        - description: The existing Life Insurance Policy ID used to identify which Life\n            Insurance Policy to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LifeInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LifeInsurancePolicyModel\"\n        description: The Life Insurance Policy to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - LifeInsurancePolicies\n  \"/api/LifeInsurancePolicies/{lifeInsurancePolicyId}/Subaccounts\":\n    get:\n      deprecated: false\n      description: \"Description: Get all the subaccounts for an existing Life Insurance\n        Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to all the Life\n        Insurance Policy subaccounts.\"\n      operationId: LifeInsurancePolicies_GetSubaccountsByLifeinsurancepolicyid\n      parameters:\n        - description: The ID of the Life Insurance Policy used to retrieve the Life\n            Insurance Policy Subaccounts.\n          in: path\n          name: lifeInsurancePolicyId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - LifeInsurancePolicies\n    post:\n      deprecated: false\n      description: \"Description: Creates a subaccount and adds it to an existing Life\n        Insurance Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of subaccount on a\n        Life Insurance Policy.\"\n      operationId: LifeInsurancePolicies_PostSubaccountByLifeinsurancepolicyidModel\n      parameters:\n        - description: The ID of the Life Insurance Policy used to create the Life\n            Insurance Policy Subaccount.\n          in: path\n          name: lifeInsurancePolicyId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/LifeInsurancePolicySubaccountModel\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - LifeInsurancePolicies\n  \"/api/LifeInsurancePolicies/{lifeInsurancePolicyId}/Subaccounts/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: Deletes an existing Life Insurance Policy Subaccount for\n        an existing Life Insurance Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a subaccount from\n        a Life Insurance Policy.\"\n      operationId: LifeInsurancePolicies_DeleteSubaccountByLifeinsurancepolicyidId\n      parameters:\n        - description: The ID of the Life Insurance Policy used to delete the Life\n            Insurance Policy Subaccount.\n          in: path\n          name: lifeInsurancePolicyId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Life Insurance Policy Subaccount.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy Subaccount not found.\n      tags:\n        - LifeInsurancePolicies\n    get:\n      deprecated: false\n      description: \"Description: Get a specific subaccount for an existing Life Insurance\n        Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Life Insurance\n        Policy subaccount.\"\n      operationId: LifeInsurancePolicies_GetSubaccountByLifeinsurancepolicyidId\n      parameters:\n        - description: The ID of the Life Insurance Policy used to retrieve the Life\n            Insurance Policy Subaccount.\n          in: path\n          name: lifeInsurancePolicyId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Life Insurance Policy Subaccount.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy Subaccount not found.\n      tags:\n        - LifeInsurancePolicies\n    put:\n      deprecated: false\n      description: \"Description: Updates an existing Life Insurance Policy Subaccount for\n        an existing Life Insurance Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        subaccount on a Life Insurance Policy.\"\n      operationId: LifeInsurancePolicies_PutSubaccountByLifeinsurancepolicyidIdModel\n      parameters:\n        - description: The ID of the Life Insurance Policy used to update the Life\n            Insurance Policy Subaccount.\n          in: path\n          name: lifeInsurancePolicyId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Life Insurance Policy Subaccount.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/LifeInsurancePolicySubaccountModel\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicySubaccountModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy Subaccount not found.\n      tags:\n        - LifeInsurancePolicies\n  /api/LifeInsurancePolicyTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Life Insurance Policy Types\n        for the specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Life Insurance\n        Policy Types including id and type description.\"\n      operationId: LifeInsurancePolicyTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Life Insurance Policy Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Life Insurance Policy Type not found.\n      tags:\n        - LifeInsurancePolicyTypes\n  \"/api/LifeInsurancePolicyTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the Life Insurance Policy Type\n        for the specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Life Insurance\n        Policy Types including id and type description.\"\n      operationId: LifeInsurancePolicyTypes_GetById\n      parameters:\n        - description: The ID of Life Insurance Policy Type used to retreive the Life\n            Insurance Policy Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePolicyTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Life Insurance Policy Type not found.\n      tags:\n        - LifeInsurancePolicyTypes\n  /api/LifestyleAssetTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Lifestyle Asset Types for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Lifestyle Asset\n        Types including id and type description.\"\n      operationId: LifestyleAssetTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Lifestyle Asset Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Lifestyle Asset Type not found.\n      tags:\n        - LifestyleAssetTypes\n  \"/api/LifestyleAssetTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the Lifestyle Asset Type for the\n        specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Lifestyle Asset\n        Types including id and type description.\"\n      operationId: LifestyleAssetTypes_GetById\n      parameters:\n        - description: The ID of Lifestyle Asset Type used to retreive the Lifestyle Asset\n            Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Lifestyle Asset Type not found.\n      tags:\n        - LifestyleAssetTypes\n  /api/LifestyleAssets:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Lifestyle Assets for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Lifestyle Assets\n        including description and market value.\"\n      operationId: LifestyleAssets_GetLifestyleAssetsByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Lifestyle Assets\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Lifestyle Asset data access.\n        \"403\":\n          description: Request is restricted for access to Lifestyle Asset.\n        \"404\":\n          description: Lifestyle Asset not found.\n      tags:\n        - LifestyleAssets\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Lifestyle Asset.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Lifestyle Assets\n        on a Fact Finder.\"\n      operationId: LifestyleAssets_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LifestyleAssetModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LifestyleAssetModel\"\n        description: The Lifestyle Asset to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Lifestyle Asset data access.\n        \"403\":\n          description: Request is restricted for access to Lifestyle Asset.\n        \"404\":\n          description: Lifestyle Asset not found.\n      tags:\n        - LifestyleAssets\n  \"/api/LifestyleAssets/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Lifestyle Asset tied to a Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Lifestyle Asset\n        from a Fact Finder.\"\n      operationId: LifestyleAssets_DeleteById\n      parameters:\n        - description: The Lifestyle Asset ID used to identify which Lifestyle Asset to\n            remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Lifestyle Asset data access.\n        \"403\":\n          description: Request is restricted for access to Lifestyle Asset.\n        \"404\":\n          description: Lifestyle Asset not found.\n      tags:\n        - LifestyleAssets\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Lifestyle Asset for the\n        specified Lifestyle Asset ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Lifestyle Asset\n        including description and market value.\"\n      operationId: LifestyleAssets_GetById\n      parameters:\n        - description: The ID of the Lifestyle Asset used to retreive the Lifestyle Asset\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Lifestyle Asset data access.\n        \"403\":\n          description: Request is restricted for access to Lifestyle Asset.\n        \"404\":\n          description: Lifestyle Asset not found.\n      tags:\n        - LifestyleAssets\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Lifestyle Asset.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Lifestyle Asset on a Fact Finder.\"\n      operationId: LifestyleAssets_PutByIdModel\n      parameters:\n        - description: The existing Lifestyle Asset ID used to identify which Lifestyle\n            Asset to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LifestyleAssetModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LifestyleAssetModel\"\n        description: The Lifestyle Asset to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifestyleAssetWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Lifestyle Asset data access.\n        \"403\":\n          description: Request is restricted for access to Lifestyle Asset.\n        \"404\":\n          description: Lifestyle Asset not found.\n      tags:\n        - LifestyleAssets\n  /api/LongTermCareInsurancePolicies:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Long Term Care Insurance\n        Policies for the specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Long Term Care\n        Insurance Policies including description and premium.\"\n      operationId: LongTermCareInsurancePolicies_GetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Long Term Care Insurance\n            Policies\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePoliciesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePoliciesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Long Term Care Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Long Term Care Insurance Policy.\n        \"404\":\n          description: Long Term Care Insurance Policy not found.\n      tags:\n        - LongTermCareInsurancePolicies\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Long Term Care Insurance\n        Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Long Term Care\n        Insurance Policies on a Fact Finder.\"\n      operationId: LongTermCareInsurancePolicies_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LongTermCareInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LongTermCareInsurancePolicyModel\"\n        description: The Long Term Care Insurance Policy to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Long Term Care Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Long Term Care Insurance Policy.\n        \"404\":\n          description: Long Term Care Insurance Policy not found.\n      tags:\n        - LongTermCareInsurancePolicies\n  \"/api/LongTermCareInsurancePolicies/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Long Term Care Insurance Policy\n        tied to a Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Long Term Care\n        Insurance Policy from a Fact Finder.\"\n      operationId: LongTermCareInsurancePolicies_DeleteById\n      parameters:\n        - description: The Long Term Care Insurance Policy ID used to identify which Long\n            Term Care Insurance Policy to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Long Term Care Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Long Term Care Insurance Policy.\n        \"404\":\n          description: Long Term Care Insurance Policy not found.\n      tags:\n        - LongTermCareInsurancePolicies\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Long Term Care Insurance\n        Policy for the specified Long Term Care Insurance Policy ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Long Term Care\n        Insurance Policy including description and premium.\"\n      operationId: LongTermCareInsurancePolicies_GetById\n      parameters:\n        - description: The ID of the Long Term Care Insurance Policy used to retreive the\n            Long Term Care Insurance Policy\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Long Term Care Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Long Term Care Insurance Policy.\n        \"404\":\n          description: Long Term Care Insurance Policy not found.\n      tags:\n        - LongTermCareInsurancePolicies\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Long Term Care Insurance\n        Policy.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Long Term Care Insurance Policy on a Fact Finder.\"\n      operationId: LongTermCareInsurancePolicies_PutByIdModel\n      parameters:\n        - description: The existing Long Term Care Insurance Policy ID used to identify\n            which Long Term Care Insurance Policy to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LongTermCareInsurancePolicyModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/LongTermCareInsurancePolicyModel\"\n        description: The Long Term Care Insurance Policy to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePolicyWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LongTermCareInsurancePolicyWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Long Term Care Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Long Term Care Insurance Policy.\n        \"404\":\n          description: Long Term Care Insurance Policy not found.\n      tags:\n        - LongTermCareInsurancePolicies\n  /api/MajorPurchaseGoalTypes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Major Purchase Goal Types for\n        the specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Major Purchase\n        Goal Types including id and type description.\"\n      operationId: MajorPurchaseGoalTypes_GetByCountry\n      parameters:\n        - description: The country used to filter Major Purchase Goal Types\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Major Purchase Goal Type not found.\n      tags:\n        - MajorPurchaseGoalTypes\n  \"/api/MajorPurchaseGoalTypes/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the Major Purchase Goal Type for\n        the specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Major Purchase\n        Goal Types including id and type description.\"\n      operationId: MajorPurchaseGoalTypes_GetById\n      parameters:\n        - description: The ID of Major Purchase Goal Type used to retreive the Major\n            Purchase Goal Type information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalTypeModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Major Purchase Goal Type not found.\n      tags:\n        - MajorPurchaseGoalTypes\n  /api/MajorPurchaseGoals:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Major Purchases for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Major Purchases\n        including description and amount.\"\n      operationId: MajorPurchaseGoals_GetMajorPurchaseGoalsByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Major Purchases\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Major Purchase data access.\n        \"403\":\n          description: Request is restricted for access to Major Purchase.\n        \"404\":\n          description: Major Purchase not found.\n      tags:\n        - MajorPurchaseGoals\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Major Purchase.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Major Purchases\n        on a Fact Finder.\"\n      operationId: MajorPurchaseGoals_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MajorPurchaseGoalModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/MajorPurchaseGoalModel\"\n        description: The Major Purchase to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Major Purchase data access.\n        \"403\":\n          description: Request is restricted for access to Major Purchase.\n        \"404\":\n          description: Major Purchase not found.\n      tags:\n        - MajorPurchaseGoals\n  \"/api/MajorPurchaseGoals/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Major Purchase tied to a Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Major Purchase\n        from a Fact Finder.\"\n      operationId: MajorPurchaseGoals_DeleteById\n      parameters:\n        - description: The Major Purchase ID used to identify which Major Purchase to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Major Purchase data access.\n        \"403\":\n          description: Request is restricted for access to Major Purchase.\n        \"404\":\n          description: Major Purchase not found.\n      tags:\n        - MajorPurchaseGoals\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Major Purchase for the\n        specified Major Purchase ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Major Purchase\n        including description and amount.\"\n      operationId: MajorPurchaseGoals_GetById\n      parameters:\n        - description: The ID of the Major Purchase used to retreive the Major Purchase\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Major Purchase data access.\n        \"403\":\n          description: Request is restricted for access to Major Purchase.\n        \"404\":\n          description: Major Purchase not found.\n      tags:\n        - MajorPurchaseGoals\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Major Purchase.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Major Purchase on a Fact Finder.\"\n      operationId: MajorPurchaseGoals_PutByIdModel\n      parameters:\n        - description: The existing Major Purchase ID used to identify which Major Purchase\n            to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MajorPurchaseGoalModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/MajorPurchaseGoalModel\"\n        description: The Major Purchase to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MajorPurchaseGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Major Purchase data access.\n        \"403\":\n          description: Request is restricted for access to Major Purchase.\n        \"404\":\n          description: Major Purchase not found.\n      tags:\n        - MajorPurchaseGoals\n  /api/Presentation/Accounts:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all current Accounts for the\n        specified Fact Finder ID, as well as\\r\n\n        \\                           all of the holdings and savings\n        strategies belonging to those accounts.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Accounts in a\n        Fact Finder as well as any sub-entities belonging to them.\"\n      operationId: Presentation_GetAccountsByFactfinderidExternalsourceid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Accounts\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The external ID used to filter Accounts\n          in: query\n          name: externalSourceId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountsWithSubEntitiesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountsWithSubEntitiesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Account data access.\n        \"403\":\n          description: Request is restricted for access to Account.\n        \"404\":\n          description: Account not found.\n      tags:\n        - Presentation\n  /api/Presentation/Demographics/Owners:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves owner values for the fact finder\n        based on demographics data\\r\n\n        \\              Purpose: Provides the list of valid options for\n        owner, student, beneficiary, etc.\"\n      operationId: Presentation_GetDemographicOwnersByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve owners.\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OwnersModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/OwnersModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Demographic information data access.\n        \"403\":\n          description: Request is restricted for access to Demographic information.\n        \"404\":\n          description: Fact Finder not found.\n      tags:\n        - Presentation\n  /api/Presentation/Demographics/Relationships:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all relationship types relevant\n        to demographics.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides a list of relationship types\n        organized by whether or not they can be defined as children.\"\n      operationId: Presentation_GetDemographicRelationships\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RelationshipTypesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RelationshipTypesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: Object not found.\n      tags:\n        - Presentation\n  /api/Presentation/Incomes:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all current Incomes for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Incomes in a Fact\n        Finder, filtered by Incomes that are current.\"\n      operationId: Presentation_GetIncomesByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Incomes\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IncomesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/IncomesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Income data access.\n        \"403\":\n          description: Request is restricted for access to Income.\n        \"404\":\n          description: Income not found.\n      tags:\n        - Presentation\n  /api/Presentation/Liabilities:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all current Liabilities for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Liabilities in a\n        Fact Finder, filtered by Liabilities that are current.\"\n      operationId: Presentation_GetLiabilitiesByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Liabilities\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilitiesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LiabilitiesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Liability data access.\n        \"403\":\n          description: Request is restricted for access to Liability.\n        \"404\":\n          description: Liability not found.\n      tags:\n        - Presentation\n  /api/Presentation/LifeInsurancePolicies:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all life insurance policies,\n        including subaccounts if available, for the specified Fact Finder ID.\u003cbr\n        /\u003e\\r\n\n        \\              Purpose: Provides access to the Life Insurance\n        Policies in a Fact Finder.\"\n      operationId: Presentation_GetLifeInsurancePoliciesByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Life Insurance Policies.\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePoliciesWithSubEntitiesMod\\\n                  el\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LifeInsurancePoliciesWithSubEntitiesMod\\\n                  el\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Life Insurance Policy data access.\n        \"403\":\n          description: Request is restricted for access to Life Insurance Policy.\n        \"404\":\n          description: Life Insurance Policy not found.\n      tags:\n        - Presentation\n  /api/Presentation/Pensions:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all future Defined Benefit\n        Pensions for the specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Pensions in a\n        Fact Finder, filtered by Pensions that are in the future.\"\n      operationId: Presentation_GetPensionsByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Pensions.\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DefinedBenefitPensionsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Defined Benefit Pension data access.\n        \"403\":\n          description: Request is restricted for access to Defined Benefit Pension.\n        \"404\":\n          description: Defined Benefit Pension not found.\n      tags:\n        - Presentation\n  /api/RealEstateAssets:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Real Estate Assets for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Real Estate\n        Assets including description and market value.\"\n      operationId: RealEstateAssets_GetRealEstateAssetsByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Real Estate Assets\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Real Estate Asset data access.\n        \"403\":\n          description: Request is restricted for access to Real Estate Asset.\n        \"404\":\n          description: Real Estate Asset not found.\n      tags:\n        - RealEstateAssets\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Real Estate Asset.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Real Estate\n        Assets on a Fact Finder.\"\n      operationId: RealEstateAssets_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RealEstateAssetModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RealEstateAssetModel\"\n        description: The Real Estate Asset to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Real Estate Asset data access.\n        \"403\":\n          description: Request is restricted for access to Real Estate Asset.\n        \"404\":\n          description: Real Estate Asset not found.\n      tags:\n        - RealEstateAssets\n  \"/api/RealEstateAssets/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Real Estate Asset tied to a Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Real Estate\n        Asset from a Fact Finder.\"\n      operationId: RealEstateAssets_DeleteById\n      parameters:\n        - description: The Real Estate Asset ID used to identify which Real Estate Asset to\n            remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Real Estate Asset data access.\n        \"403\":\n          description: Request is restricted for access to Real Estate Asset.\n        \"404\":\n          description: Real Estate Asset not found.\n      tags:\n        - RealEstateAssets\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Real Estate Asset for\n        the specified Real Estate Asset ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Real Estate Asset\n        including description and market value.\"\n      operationId: RealEstateAssets_GetById\n      parameters:\n        - description: The ID of the Real Estate Asset used to retreive the Real Estate\n            Asset\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Real Estate Asset data access.\n        \"403\":\n          description: Request is restricted for access to Real Estate Asset.\n        \"404\":\n          description: Real Estate Asset not found.\n      tags:\n        - RealEstateAssets\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Real Estate Asset.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Real Estate Asset on a Fact Finder.\"\n      operationId: RealEstateAssets_PutByIdModel\n      parameters:\n        - description: The existing Real Estate Asset ID used to identify which Real Estate\n            Asset to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RealEstateAssetModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RealEstateAssetModel\"\n        description: The Real Estate Asset to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RealEstateAssetWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Real Estate Asset data access.\n        \"403\":\n          description: Request is restricted for access to Real Estate Asset.\n        \"404\":\n          description: Real Estate Asset not found.\n      tags:\n        - RealEstateAssets\n  /api/RetirementGoals:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Retirement Goals for the\n        specified Fact Finder ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Retirement Goals\n        including retirement date.\"\n      operationId: RetirementGoals_GetRetirementGoalsByFactFinderIdByFactfinderid\n      parameters:\n        - description: The ID of the Fact Finder used to retrieve Retirement Goals\n          in: query\n          name: factFinderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalsModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalsModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal.\n        \"404\":\n          description: Retirement Goal not found.\n      tags:\n        - RetirementGoals\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Retirement Goal.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Retirement Goals\n        on a Fact Finder.\"\n      operationId: RetirementGoals_PostByModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementGoalModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementGoalModel\"\n        description: The Retirement Goal to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal.\n        \"404\":\n          description: Retirement Goal not found.\n      tags:\n        - RetirementGoals\n  \"/api/RetirementGoals/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Retirement Goal tied to a Fact\n        Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Retirement Goal\n        from a Fact Finder.\"\n      operationId: RetirementGoals_DeleteById\n      parameters:\n        - description: The Retirement Goal ID used to identify which Retirement Goal to\n            remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal.\n        \"404\":\n          description: Retirement Goal not found.\n      tags:\n        - RetirementGoals\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Retirement Goal for the\n        specified Retirement Goal ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Retirement Goal\n        including retirement date.\"\n      operationId: RetirementGoals_GetById\n      parameters:\n        - description: The ID of the Retirement Goal used to retreive the Retirement Goal\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal.\n        \"404\":\n          description: Retirement Goal not found.\n      tags:\n        - RetirementGoals\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Retirement Goal.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Retirement Goal on a Fact Finder.\"\n      operationId: RetirementGoals_PutByIdModel\n      parameters:\n        - description: The existing Retirement Goal ID used to identify which Retirement\n            Goal to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementGoalModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementGoalModel\"\n        description: The Retirement Goal to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementGoalWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal.\n        \"404\":\n          description: Retirement Goal not found.\n      tags:\n        - RetirementGoals\n  \"/api/RetirementGoals/{retirementGoalId}/Expenses\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all Retirement Goal Expenses for\n        the specified Retirement Goal ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Retirement Goal\n        Expenses including description and amount.\"\n      operationId: RetirementGoals_GetRetirementExpensesByRetirementGoalIdByRetirementgoalid\n      parameters:\n        - description: The ID of the Retirement Goal used to retrieve Retirement Goal\n            Expenses\n          in: path\n          name: retirementGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpensesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpensesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal Expense.\n        \"404\":\n          description: Retirement Goal Expense not found.\n      tags:\n        - RetirementGoals\n    post:\n      deprecated: false\n      description: \"Description: The operation creates a Retirement Goal Expense.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for creation of Retirement Goal\n        Expenses on a Fact Finder.\"\n      operationId: RetirementGoals_PostByRetirementgoalidModel\n      parameters:\n        - description: The ID of the Retirement Goal to add the Retirement Goal Expense to\n          in: path\n          name: retirementGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementExpenseModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementExpenseModel\"\n        description: The Retirement Goal Expense to be added to the Fact Finder\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal Expense.\n        \"404\":\n          description: Retirement Goal Expense not found.\n      tags:\n        - RetirementGoals\n  \"/api/RetirementGoals/{retirementGoalId}/Expenses/{id}\":\n    delete:\n      deprecated: false\n      description: \"Description: The operation removes a Retirement Goal Expense tied to a\n        Fact Finder.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for removal of a Retirement Goal\n        Expense from a Fact Finder.\"\n      operationId: RetirementGoals_DeleteByRetirementgoalidId\n      parameters:\n        - description: The Retirement Goal ID used to locate the Goal to delete the\n            Retirement Goal Expense under\n          in: path\n          name: retirementGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The Retirement Goal Expense ID used to identify which Retirement\n            Goal Expense to remove\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal Expense.\n        \"404\":\n          description: Retirement Goal Expense not found.\n      tags:\n        - RetirementGoals\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves a single Retirement Goal Expense\n        for the specified Retirement Goal Expense ID.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the Retirement Goal\n        Expense including description and amount.\"\n      operationId: RetirementGoals_GetRetirementExpenseByRetirementgoalidId\n      parameters:\n        - description: The ID of the Retirement Goal used to retrieve the Retirement Goal\n            Expense\n          in: path\n          name: retirementGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The ID of the Retirement Goal Expense used to retreive the\n            Retirement Goal Expense\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal Expense.\n        \"404\":\n          description: Retirement Goal Expense not found.\n      tags:\n        - RetirementGoals\n    put:\n      deprecated: false\n      description: \"Description: The operation updates a Retirement Goal Expense.\u003cbr /\u003e\\r\n\n        \\              Purpose: Allows for complete replacement of a\n        Retirement Goal Expense on a Fact Finder.\"\n      operationId: RetirementGoals_PutByRetirementgoalidIdModel\n      parameters:\n        - description: The Retirement Goal ID used to locate the Goal to update the\n            Retirement Goal Expense under\n          in: path\n          name: retirementGoalId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The existing Retirement Goal Expense ID used to identify which\n            Retirement Goal Expense to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementExpenseModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RetirementExpenseModel\"\n        description: The Retirement Goal Expense to be updated on a Fact Finder\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpenseWithIdModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RetirementExpenseWithIdModel\"\n        \"400\":\n          description: The request is invalid.\n        \"401\":\n          description: Unauthorized for Retirement Goal Expense data access.\n        \"403\":\n          description: Request is restricted for access to Retirement Goal Expense.\n        \"404\":\n          description: Retirement Goal Expense not found.\n      tags:\n        - RetirementGoals\n  /api/ServiceInformation:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves information statistics for the\n        current service.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to Service Information.\"\n      operationId: FactFinderServiceInformation_Get\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInformationModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInformationModel\"\n        \"404\":\n          description: Object not found.\n      tags:\n        - FactFinderServiceInformation\n  /api/StatesProvinces:\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves all States and Provinces for the\n        specified country.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the States and\n        Provinces.\"\n      operationId: StatesProvinces_GetByCountry\n      parameters:\n        - description: The country used to filter States and Provinces\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n            enum:\n              - UnitedStates\n              - Canada\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatesProvincesModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StatesProvincesModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: State or Province not found.\n      tags:\n        - StatesProvinces\n  \"/api/StatesProvinces/{id}\":\n    get:\n      deprecated: false\n      description: \"Description: This operation retrieves the States and Provinces for the\n        specified id.\u003cbr /\u003e\\r\n\n        \\              Purpose: Provides access to the States and\n        Provinces.\"\n      operationId: StatesProvinces_GetById\n      parameters:\n        - description: The ID of the State or Province used to retreive the State or\n            Province information\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StateProvinceModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StateProvinceModel\"\n        \"400\":\n          description: The request is invalid.\n        \"404\":\n          description: State or Province not found.\n      tags:\n        - StatesProvinces\nservers:\n  - url: https://demo.uat.naviplancentral.com/factfinder\n  - url: http://demo.uat.naviplancentral.com/factfinder\ncomponents:\n  requestBodies:\n    LifeInsurancePolicySubaccountModel:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/LifeInsurancePolicySubaccountModel\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/LifeInsurancePolicySubaccountModel\"\n      description: The Life Insurance Policy Subaccount model.\n      required: true\n    EducationExpenseModel:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EducationExpenseModel\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/EducationExpenseModel\"\n      description: The Education Goal Expense to be added to the Fact Finder\n      required: true\n  schemas:\n    AccountHoldingModel:\n      properties:\n        costBasis:\n          format: double\n          type: number\n        cusip:\n          maxLength: 31\n          minLength: 0\n          type: string\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        marketValue:\n          format: double\n          type: number\n        symbol:\n          maxLength: 31\n          minLength: 0\n          type: string\n        valuationDate:\n          format: date-time\n          type: string\n      required:\n        - description\n      type: object\n    AccountHoldingWithIdModel:\n      properties:\n        accountHoldingId:\n          format: int32\n          type: integer\n        accountId:\n          format: int32\n          type: integer\n        costBasis:\n          format: double\n          type: number\n        cusip:\n          type: string\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        marketValue:\n          format: double\n          type: number\n        symbol:\n          type: string\n        valuationDate:\n          format: date-time\n          type: string\n      type: object\n    AccountHoldingsModel:\n      properties:\n        holdings:\n          items:\n            $ref: \"#/components/schemas/AccountHoldingWithIdModel\"\n          type: array\n      type: object\n    AccountHoldingsWithoutIdModel:\n      properties:\n        holdings:\n          items:\n            $ref: \"#/components/schemas/AccountHoldingModel\"\n          type: array\n      type: object\n    AccountModel:\n      properties:\n        accountType:\n          format: int32\n          type: integer\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        externalSourceId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        externalSourceName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        lastUpdated:\n          format: date-time\n          type: string\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Dependent\n            - Other\n          type: string\n        ownerDependentId:\n          format: int32\n          type: integer\n      required:\n        - factFinderId\n        - description\n      type: object\n    AccountTypeModel:\n      properties:\n        allowedSavingsTypes:\n          items:\n            $ref: \"#/components/schemas/SavingsTypeDomainObject\"\n          type: array\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    AccountTypesModel:\n      properties:\n        accountTypes:\n          items:\n            $ref: \"#/components/schemas/AccountTypeModel\"\n          type: array\n      type: object\n    AccountWithIdModel:\n      properties:\n        accountId:\n          format: int32\n          type: integer\n        accountType:\n          format: int32\n          type: integer\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        externalSourceId:\n          type: string\n        externalSourceName:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        lastUpdated:\n          format: date-time\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Dependent\n            - Other\n          type: string\n        ownerDependentId:\n          format: int32\n          type: integer\n      type: object\n    AccountWithSubEntitiesModel:\n      properties:\n        accountId:\n          format: int32\n          type: integer\n        accountType:\n          format: int32\n          type: integer\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        externalSourceId:\n          type: string\n        externalSourceName:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        holdings:\n          items:\n            $ref: \"#/components/schemas/AccountHoldingWithIdModel\"\n          type: array\n        lastUpdated:\n          format: date-time\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Dependent\n            - Other\n          type: string\n        ownerDependentId:\n          format: int32\n          type: integer\n        savingsStrategies:\n          items:\n            $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n          type: array\n      type: object\n    AccountsModel:\n      properties:\n        accounts:\n          items:\n            $ref: \"#/components/schemas/AccountWithIdModel\"\n          type: array\n      type: object\n    AccountsWithSubEntitiesModel:\n      properties:\n        accounts:\n          items:\n            $ref: \"#/components/schemas/AccountWithSubEntitiesModel\"\n          type: array\n      type: object\n    ClientModel:\n      properties:\n        clientId:\n          format: int32\n          type: integer\n        message:\n          type: string\n        ownerUser:\n          type: string\n        planId:\n          format: int32\n          type: integer\n        success:\n          type: boolean\n      type: object\n    ClientsModel:\n      properties:\n        externalDestinationName:\n          maxLength: 49\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        planAction:\n          enum:\n            - New\n            - Duplicate\n            - Project\n            - Update\n          type: string\n      required:\n        - factFinderId\n        - planAction\n      type: object\n    CriticalIllnessInsurancePoliciesModel:\n      properties:\n        criticalIllnessInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyWithIdModel\"\n          type: array\n      type: object\n    CriticalIllnessInsurancePolicyModel:\n      properties:\n        benefit:\n          format: double\n          type: number\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n      required:\n        - factFinderId\n        - description\n      type: object\n    CriticalIllnessInsurancePolicyTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    CriticalIllnessInsurancePolicyTypesModel:\n      properties:\n        insurancePolicyTypes:\n          items:\n            $ref: \"#/components/schemas/CriticalIllnessInsurancePolicyTypeModel\"\n          type: array\n      type: object\n    CriticalIllnessInsurancePolicyWithIdModel:\n      properties:\n        benefit:\n          format: double\n          type: number\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        insurancePolicyId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n      type: object\n    DefinedBenefitPensionModel:\n      properties:\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        estimatedAmount:\n          format: double\n          type: number\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      required:\n        - factFinderId\n        - description\n      type: object\n    DefinedBenefitPensionWithIdModel:\n      properties:\n        definedBenefitPensionId:\n          format: int32\n          type: integer\n        description:\n          type: string\n        estimatedAmount:\n          format: double\n          type: number\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        member:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    DefinedBenefitPensionsModel:\n      properties:\n        definedBenefitPensions:\n          items:\n            $ref: \"#/components/schemas/DefinedBenefitPensionWithIdModel\"\n          type: array\n      type: object\n    DemographicsDependentModel:\n      properties:\n        birthDate:\n          format: date-time\n          type: string\n        dependentOf:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Other\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        firstName:\n          maxLength: 255\n          minLength: 0\n          type: string\n        lastName:\n          maxLength: 255\n          minLength: 0\n          type: string\n        relationship:\n          enum:\n            - Son\n            - Daughter\n            - FosterSon\n            - FosterDaughter\n            - Grandson\n            - Granddaughter\n            - Nephew\n            - Niece\n            - MaleCousin\n            - FemaleCousin\n            - Father\n            - Mother\n            - Grandfather\n            - Grandmother\n            - Uncle\n            - Aunt\n            - Brother\n            - Sister\n            - SonInLaw\n            - DaughterInLaw\n            - MaleOther\n            - FemaleOther\n          type: string\n      required:\n        - firstName\n        - lastName\n        - birthDate\n        - relationship\n        - dependentOf\n      type: object\n    DemographicsDependentWithIdModel:\n      properties:\n        birthDate:\n          format: date-time\n          type: string\n        demographicsId:\n          format: int32\n          type: integer\n        dependentId:\n          format: int32\n          type: integer\n        dependentOf:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Other\n          type: string\n        externalDestinationId:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        relationship:\n          enum:\n            - Son\n            - Daughter\n            - FosterSon\n            - FosterDaughter\n            - Grandson\n            - Granddaughter\n            - Nephew\n            - Niece\n            - MaleCousin\n            - FemaleCousin\n            - Father\n            - Mother\n            - Grandfather\n            - Grandmother\n            - Uncle\n            - Aunt\n            - Brother\n            - Sister\n            - SonInLaw\n            - DaughterInLaw\n            - MaleOther\n            - FemaleOther\n          type: string\n      type: object\n    DemographicsDependentsModel:\n      properties:\n        dependents:\n          items:\n            $ref: \"#/components/schemas/DemographicsDependentWithIdModel\"\n          type: array\n      type: object\n    DemographicsModel:\n      properties:\n        city:\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        externalSourceId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        head1:\n          $ref: \"#/components/schemas/FamilyHeadModel\"\n        head2:\n          $ref: \"#/components/schemas/FamilyHeadModel\"\n        jointAnalysis:\n          type: boolean\n        state:\n          format: int32\n          type: integer\n      required:\n        - jointAnalysis\n        - head1\n        - factFinderId\n        - city\n        - state\n      type: object\n    DemographicsWithIdModel:\n      properties:\n        city:\n          type: string\n        created:\n          format: date-time\n          type: string\n        demographicsId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        externalSourceId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        head1:\n          $ref: \"#/components/schemas/FamilyHeadModel\"\n        head2:\n          $ref: \"#/components/schemas/FamilyHeadModel\"\n        jointAnalysis:\n          type: boolean\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        lockRetirement:\n          type: boolean\n        state:\n          format: int32\n          type: integer\n      type: object\n    DisabilityInsurancePoliciesModel:\n      properties:\n        disabilityInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/DisabilityInsurancePolicyWithIdModel\"\n          type: array\n      type: object\n    DisabilityInsurancePolicyModel:\n      properties:\n        benefit:\n          format: double\n          type: number\n        benefitFrequency:\n          format: int32\n          type: integer\n        benefitType:\n          enum:\n            - Dollar\n            - Percent\n          type: string\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n        premiumFrequency:\n          format: int32\n          type: integer\n      required:\n        - factFinderId\n        - description\n      type: object\n    DisabilityInsurancePolicyTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    DisabilityInsurancePolicyTypesModel:\n      properties:\n        insurancePolicyTypes:\n          items:\n            $ref: \"#/components/schemas/DisabilityInsurancePolicyTypeModel\"\n          type: array\n      type: object\n    DisabilityInsurancePolicyWithIdModel:\n      properties:\n        benefit:\n          format: double\n          type: number\n        benefitFrequency:\n          format: int32\n          type: integer\n        benefitType:\n          enum:\n            - Dollar\n            - Percent\n          type: string\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        insurancePolicyId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n        premiumFrequency:\n          format: int32\n          type: integer\n      type: object\n    EducationExpenseModel:\n      properties:\n        annualCost:\n          format: double\n          type: number\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Dependent\n          type: string\n        memberDependentId:\n          format: int32\n          type: integer\n        startYear:\n          format: date-time\n          type: string\n        years:\n          format: int32\n          maximum: 99\n          minimum: 1\n          type: integer\n      type: object\n    EducationExpenseWithIdModel:\n      properties:\n        annualCost:\n          format: double\n          type: number\n        educationExpenseId:\n          format: int32\n          type: integer\n        educationGoalId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Dependent\n          type: string\n        memberDependentId:\n          format: int32\n          type: integer\n        startYear:\n          format: date-time\n          type: string\n        years:\n          format: int32\n          type: integer\n      type: object\n    EducationExpensesModel:\n      properties:\n        educationExpenses:\n          items:\n            $ref: \"#/components/schemas/EducationExpenseWithIdModel\"\n          type: array\n      type: object\n    EducationGoalModel:\n      properties:\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        projectedCost:\n          format: double\n          type: number\n      required:\n        - factFinderId\n        - description\n      type: object\n    EducationGoalWithIdModel:\n      properties:\n        description:\n          type: string\n        educationGoalId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        projectedCost:\n          format: double\n          type: number\n      type: object\n    EducationGoalsModel:\n      properties:\n        educationGoals:\n          items:\n            $ref: \"#/components/schemas/EducationGoalWithIdModel\"\n          type: array\n      type: object\n    ExpenseModel:\n      properties:\n        annualPeriod:\n          format: int32\n          maximum: 99\n          minimum: 1\n          type: integer\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        expenseAmount:\n          format: double\n          type: number\n        expenseTypeId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      required:\n        - factFinderId\n        - description\n      type: object\n    ExpenseTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    ExpenseTypesModel:\n      properties:\n        expenseTypes:\n          items:\n            $ref: \"#/components/schemas/ExpenseTypeModel\"\n          type: array\n      type: object\n    ExpenseWithIdModel:\n      properties:\n        annualPeriod:\n          format: int32\n          type: integer\n        description:\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        expenseAmount:\n          format: double\n          type: number\n        expenseId:\n          format: int32\n          type: integer\n        expenseTypeId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    ExpensesModel:\n      properties:\n        expenses:\n          items:\n            $ref: \"#/components/schemas/ExpenseWithIdModel\"\n          type: array\n      type: object\n    FactFinderEntityModel:\n      properties:\n        householdId:\n          format: int32\n          maximum: 2147483647\n          minimum: 0\n          type: integer\n        modules:\n          items:\n            enum:\n              - Demographics\n              - Assets\n              - Liabilities\n              - Incomes\n              - Expenses\n              - Insurance\n              - Retirement\n              - Education\n              - MajorPurchase\n            type: string\n          type: array\n        planLevel:\n          enum:\n            - Level2\n            - Level1\n          type: string\n      required:\n        - householdId\n      type: object\n    FactFinderModel:\n      properties:\n        status:\n          enum:\n            - New\n            - InProgress\n            - ClientSubmitted\n            - AdvisorAccepted\n            - Canceled\n            - Draft\n            - Deleted\n          type: string\n      type: object\n    FactFinderModuleModel:\n      properties:\n        available:\n          type: boolean\n        moduleName:\n          enum:\n            - Demographics\n            - Assets\n            - Liabilities\n            - Incomes\n            - Expenses\n            - Insurance\n            - Retirement\n            - Education\n            - MajorPurchase\n          type: string\n        visited:\n          type: boolean\n      required:\n        - moduleName\n      type: object\n    FactFinderModuleWithIdModel:\n      properties:\n        available:\n          type: boolean\n        factFinderId:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        moduleId:\n          format: int32\n          type: integer\n        moduleName:\n          enum:\n            - Demographics\n            - Assets\n            - Liabilities\n            - Incomes\n            - Expenses\n            - Insurance\n            - Retirement\n            - Education\n            - MajorPurchase\n          type: string\n        visited:\n          type: boolean\n      type: object\n    FactFinderModulesModel:\n      properties:\n        factFinderModules:\n          items:\n            $ref: \"#/components/schemas/FactFinderModuleWithIdModel\"\n          type: array\n      type: object\n    FactFinderPopulatableEntityModel:\n      properties:\n        householdId:\n          format: int32\n          maximum: 2147483647\n          minimum: 0\n          type: integer\n        modules:\n          items:\n            enum:\n              - Demographics\n              - Assets\n              - Liabilities\n              - Incomes\n              - Expenses\n              - Insurance\n              - Retirement\n              - Education\n              - MajorPurchase\n            type: string\n          type: array\n        planId:\n          format: int32\n          maximum: 2147483647\n          minimum: 0\n          type: integer\n        planLevel:\n          enum:\n            - Level2\n            - Level1\n          type: string\n      required:\n        - householdId\n      type: object\n    FactFinderPopulationModel:\n      properties:\n        planId:\n          format: int32\n          maximum: 2147483647\n          minimum: 0\n          type: integer\n      type: object\n    FactFinderSnapshotWithIdModel:\n      properties:\n        created:\n          format: date-time\n          type: string\n        factFinderData:\n          $ref: \"#/components/schemas/IFactFinderSnapshotDomainObject\"\n        factFinderId:\n          format: int32\n          type: integer\n        factFinderStatus:\n          enum:\n            - New\n            - InProgress\n            - ClientSubmitted\n            - AdvisorAccepted\n            - Canceled\n            - Draft\n            - Deleted\n          type: string\n        snapshotId:\n          format: int32\n          type: integer\n      type: object\n    FactFinderSnapshotsModel:\n      properties:\n        snapshots:\n          items:\n            $ref: \"#/components/schemas/FactFinderSnapshotWithIdModel\"\n          type: array\n      type: object\n    FactFinderWithIdModel:\n      properties:\n        countryCode:\n          enum:\n            - UnitedStates\n            - Canada\n          type: string\n        created:\n          format: date-time\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        householdId:\n          format: int32\n          type: integer\n        lastStatusUpdate:\n          format: date-time\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        modules:\n          $ref: \"#/components/schemas/FactFinderModulesModel\"\n        planId:\n          format: int32\n          type: integer\n        planLevel:\n          enum:\n            - Level2\n            - Level1\n          type: string\n        status:\n          enum:\n            - New\n            - InProgress\n            - ClientSubmitted\n            - AdvisorAccepted\n            - Canceled\n            - Draft\n            - Deleted\n          type: string\n      type: object\n    FamilyHeadModel:\n      properties:\n        alreadyRetired:\n          type: boolean\n        birthDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        firstName:\n          maxLength: 255\n          minLength: 0\n          type: string\n        gender:\n          enum:\n            - Male\n            - Female\n            - None\n          type: string\n        lastName:\n          maxLength: 255\n          minLength: 0\n          type: string\n        taxFilingStatus:\n          format: int32\n          type: integer\n      required:\n        - firstName\n        - lastName\n        - birthDate\n        - gender\n        - taxFilingStatus\n        - alreadyRetired\n      type: object\n    FilingStatusTypeModel:\n      properties:\n        filingStatusTypeId:\n          format: int32\n          type: integer\n        filingStatusTypeName:\n          type: string\n        hasJointDependent:\n          type: boolean\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        partnerStatuses:\n          items:\n            format: int32\n            type: integer\n          type: array\n        validForSingleAnalysis:\n          type: boolean\n      type: object\n    FilingStatusTypesModel:\n      properties:\n        filingStatusTypes:\n          items:\n            $ref: \"#/components/schemas/FilingStatusTypeModel\"\n          type: array\n      type: object\n    FrequencyTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    FrequencyTypesModel:\n      properties:\n        frequencyTypes:\n          items:\n            $ref: \"#/components/schemas/FrequencyTypeModel\"\n          type: array\n      type: object\n    IAccountHoldingDomainObject:\n      properties:\n        accountHoldingId:\n          format: int32\n          type: integer\n        accountId:\n          format: int32\n          type: integer\n        costBasis:\n          format: double\n          type: number\n        cusip:\n          type: string\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        heldAway:\n          type: boolean\n        marketValue:\n          format: double\n          type: number\n        symbol:\n          type: string\n        valuationDate:\n          format: date-time\n          type: string\n      type: object\n    IAccountSavingsStrategyDomainObject:\n      properties:\n        accountId:\n          format: int32\n          type: integer\n        employerSavingsAmount:\n          format: double\n          type: number\n        employerSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        frequencyId:\n          format: int32\n          type: integer\n        mandatoryAmount:\n          format: double\n          type: number\n        mandatoryAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        postTaxSavingsAmount:\n          format: double\n          type: number\n        postTaxSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        preTaxSavingsAmount:\n          format: double\n          type: number\n        preTaxSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        savingsStrategyId:\n          format: int32\n          type: integer\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    IAccountWithSubEntitiesDomainObject:\n      properties:\n        accountHoldings:\n          items:\n            $ref: \"#/components/schemas/IAccountHoldingDomainObject\"\n          type: array\n        accountId:\n          format: int32\n          type: integer\n        accountType:\n          format: int32\n          type: integer\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        externalSourceId:\n          type: string\n        externalSourceName:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        lastUpdated:\n          format: date-time\n          type: string\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Dependent\n            - Other\n          type: string\n        ownerDependentId:\n          format: int32\n          type: integer\n        savingsStrategies:\n          items:\n            $ref: \"#/components/schemas/IAccountSavingsStrategyDomainObject\"\n          type: array\n      type: object\n    ICriticalIllnessInsurancePolicyDomainObject:\n      properties:\n        benefit:\n          format: double\n          type: number\n        criticalIllnessInsurancePolicyId:\n          format: int32\n          type: integer\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n      type: object\n    IDemographicsDependentDomainObject:\n      properties:\n        birthDate:\n          format: date-time\n          type: string\n        demographicsId:\n          format: int32\n          type: integer\n        dependentId:\n          format: int32\n          type: integer\n        dependentOf:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Other\n          type: string\n        externalDestinationId:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        relationship:\n          enum:\n            - Son\n            - Daughter\n            - FosterSon\n            - FosterDaughter\n            - Grandson\n            - Granddaughter\n            - Nephew\n            - Niece\n            - MaleCousin\n            - FemaleCousin\n            - Father\n            - Mother\n            - Grandfather\n            - Grandmother\n            - Uncle\n            - Aunt\n            - Brother\n            - Sister\n            - SonInLaw\n            - DaughterInLaw\n            - MaleOther\n            - FemaleOther\n          type: string\n      type: object\n    IDemographicsWithDependentsDomainObject:\n      properties:\n        city:\n          type: string\n        created:\n          format: date-time\n          type: string\n        demographicsId:\n          format: int32\n          type: integer\n        dependents:\n          items:\n            $ref: \"#/components/schemas/IDemographicsDependentDomainObject\"\n          type: array\n        externalDestinationId:\n          type: string\n        externalSourceId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        head1:\n          $ref: \"#/components/schemas/IFamilyHeadDomainObject\"\n        head2:\n          $ref: \"#/components/schemas/IFamilyHeadDomainObject\"\n        jointAnalysis:\n          type: boolean\n        lockRetirement:\n          type: boolean\n        state:\n          format: int32\n          type: integer\n      type: object\n    IDisabilityInsurancePolicyDomainObject:\n      properties:\n        benefit:\n          format: double\n          type: number\n        benefitFrequency:\n          format: int32\n          type: integer\n        benefitType:\n          enum:\n            - Dollar\n            - Percent\n          type: string\n        description:\n          type: string\n        disabilityInsurancePolicyId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n        premiumFrequency:\n          format: int32\n          type: integer\n      type: object\n    IEducationExpenseDomainObject:\n      properties:\n        annualCost:\n          format: double\n          type: number\n        educationExpenseId:\n          format: int32\n          type: integer\n        educationGoalId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Dependent\n          type: string\n        memberDependentId:\n          format: int32\n          type: integer\n        startYear:\n          format: date-time\n          type: string\n        years:\n          format: int32\n          type: integer\n      type: object\n    IEducationGoalWithExpensesDomainObject:\n      properties:\n        description:\n          type: string\n        educationExpenses:\n          items:\n            $ref: \"#/components/schemas/IEducationExpenseDomainObject\"\n          type: array\n        educationGoalId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        projectedCost:\n          format: double\n          type: number\n      type: object\n    IExpenseDomainObject:\n      properties:\n        annualPeriod:\n          format: int32\n          type: integer\n        description:\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        expenseAmount:\n          format: double\n          type: number\n        expenseId:\n          format: int32\n          type: integer\n        expenseTypeId:\n          format: int32\n          type: integer\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    IFactFinderDefinedBenefitPensionDomainObject:\n      properties:\n        definedBenefitPensionId:\n          format: int32\n          readOnly: true\n          type: integer\n        description:\n          readOnly: true\n          type: string\n        estimatedAmount:\n          format: double\n          readOnly: true\n          type: number\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n          readOnly: true\n          type: string\n        startDate:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    IFactFinderLiabilityDomainObject:\n      properties:\n        balance:\n          format: double\n          type: number\n        balanceAsOfDate:\n          format: date-time\n          type: string\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        externalSourceId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        importSource:\n          type: string\n        interestRate:\n          format: double\n          type: number\n        lastUpdated:\n          format: date-time\n          type: string\n        liabilityId:\n          format: int32\n          type: integer\n        liabilityType:\n          format: int32\n          type: integer\n        loanDate:\n          format: date-time\n          type: string\n        originalPrincipal:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        payment:\n          format: double\n          type: number\n        paymentType:\n          enum:\n            - InterestOnly\n            - PrincipalAndInterest\n            - SetPrincipal\n            - LastPeriod\n          type: string\n      type: object\n    IFactFinderLifestyleAssetDomainObject:\n      properties:\n        description:\n          readOnly: true\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        lifestyleAssetId:\n          format: int32\n          readOnly: true\n          type: integer\n        marketValue:\n          format: double\n          readOnly: true\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          readOnly: true\n          type: string\n        purchaseAmount:\n          format: double\n          readOnly: true\n          type: number\n        purchaseDate:\n          format: date-time\n          readOnly: true\n          type: string\n        type:\n          format: int32\n          readOnly: true\n          type: integer\n      type: object\n    IFactFinderSnapshotDomainObject:\n      properties:\n        accounts:\n          items:\n            $ref: \"#/components/schemas/IAccountWithSubEntitiesDomainObject\"\n          type: array\n        criticalIllnessInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/ICriticalIllnessInsurancePolicyDomainObject\"\n          type: array\n        definedBenefitPensions:\n          items:\n            $ref: \"#/components/schemas/IFactFinderDefinedBenefitPensionDomainObject\"\n          type: array\n        demographics:\n          $ref: \"#/components/schemas/IDemographicsWithDependentsDomainObject\"\n        disabilityInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/IDisabilityInsurancePolicyDomainObject\"\n          type: array\n        educationGoals:\n          items:\n            $ref: \"#/components/schemas/IEducationGoalWithExpensesDomainObject\"\n          type: array\n        expenses:\n          items:\n            $ref: \"#/components/schemas/IExpenseDomainObject\"\n          type: array\n        incomes:\n          items:\n            $ref: \"#/components/schemas/IIncomeDomainObject\"\n          type: array\n        liabilities:\n          items:\n            $ref: \"#/components/schemas/IFactFinderLiabilityDomainObject\"\n          type: array\n        lifeInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/ILifeInsurancePolicyDomainObject\"\n          type: array\n        lifestyleAssets:\n          items:\n            $ref: \"#/components/schemas/IFactFinderLifestyleAssetDomainObject\"\n          type: array\n        longTermCareInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/ILongTermCareInsurancePolicyDomainObject\"\n          type: array\n        majorPurchaseGoals:\n          items:\n            $ref: \"#/components/schemas/IMajorPurchaseGoalDomainObject\"\n          type: array\n        planYear:\n          format: int32\n          type: integer\n        realEstateAssets:\n          items:\n            $ref: \"#/components/schemas/IRealEstateAssetDomainObject\"\n          type: array\n        retirementGoal:\n          $ref: \"#/components/schemas/IRetirementGoalWithExpensesDomainObject\"\n      type: object\n    IFamilyHeadDomainObject:\n      properties:\n        alreadyRetired:\n          type: boolean\n        birthDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        firstName:\n          type: string\n        gender:\n          enum:\n            - Male\n            - Female\n            - None\n          type: string\n        lastName:\n          type: string\n        taxFilingStatus:\n          format: int32\n          type: integer\n      type: object\n    IIncomeDomainObject:\n      properties:\n        annualAmount:\n          format: double\n          type: number\n        description:\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        incomeId:\n          format: int32\n          type: integer\n        incomeTypeId:\n          format: int32\n          type: integer\n        owner:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    ILifeInsurancePolicyDomainObject:\n      properties:\n        beneficiary:\n          enum:\n            - Client\n            - CoClient\n            - Dependent\n            - Other\n          type: string\n        beneficiaryDependentId:\n          format: int32\n          type: integer\n        benefit:\n          format: double\n          type: number\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        generalAccountMarketValue:\n          format: double\n          type: number\n        insured:\n          enum:\n            - Client\n            - CoClient\n            - FirstToDie\n            - SecondToDie\n            - Other\n          type: string\n        lifeInsurancePolicyId:\n          format: int32\n          type: integer\n        payer:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Other\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n        subaccounts:\n          items:\n            $ref: \"#/components/schemas/LifeInsurancePolicySubaccountDomainObject\"\n          type: array\n      type: object\n    ILongTermCareInsurancePolicyDomainObject:\n      properties:\n        benefit:\n          format: double\n          type: number\n        benefitFrequency:\n          format: int32\n          type: integer\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        longTermCareInsurancePolicyId:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n        premiumFrequency:\n          format: int32\n          type: integer\n      type: object\n    IMajorPurchaseGoalDomainObject:\n      properties:\n        amount:\n          format: double\n          readOnly: true\n          type: number\n        description:\n          readOnly: true\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        majorPurchaseGoalId:\n          format: int32\n          readOnly: true\n          type: integer\n        majorPurchaseGoalTypeId:\n          format: int32\n          readOnly: true\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          readOnly: true\n          type: string\n        targetDate:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    IRealEstateAssetDomainObject:\n      properties:\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        purchaseAmount:\n          format: double\n          type: number\n        purchaseDate:\n          format: date-time\n          type: string\n        realEstateAssetId:\n          format: int32\n          type: integer\n        rentalIncome:\n          format: double\n          type: number\n      type: object\n    IRetirementExpenseDomainObject:\n      properties:\n        amount:\n          format: double\n          type: number\n        annualPeriod:\n          format: int32\n          type: integer\n        description:\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        frequency:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        retirementExpenseId:\n          format: int32\n          type: integer\n        retirementGoalId:\n          format: int32\n          type: integer\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    IRetirementGoalWithExpensesDomainObject:\n      properties:\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        head1RetirementDate:\n          format: date-time\n          type: string\n        head2RetirementDate:\n          format: date-time\n          type: string\n        retirementExpenses:\n          items:\n            $ref: \"#/components/schemas/IRetirementExpenseDomainObject\"\n          type: array\n        retirementGoalId:\n          format: int32\n          type: integer\n      type: object\n    IncomeModel:\n      properties:\n        annualAmount:\n          format: double\n          type: number\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        incomeTypeId:\n          format: int32\n          type: integer\n        owner:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      required:\n        - factFinderId\n        - description\n      type: object\n    IncomeTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    IncomeTypesModel:\n      properties:\n        incomeTypes:\n          items:\n            $ref: \"#/components/schemas/IncomeTypeModel\"\n          type: array\n      type: object\n    IncomeWithIdModel:\n      properties:\n        annualAmount:\n          format: double\n          type: number\n        description:\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        incomeId:\n          format: int32\n          type: integer\n        incomeTypeId:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        owner:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    IncomesModel:\n      properties:\n        incomes:\n          items:\n            $ref: \"#/components/schemas/IncomeWithIdModel\"\n          type: array\n      type: object\n    LiabilitiesModel:\n      properties:\n        liabilities:\n          items:\n            $ref: \"#/components/schemas/LiabilityWithIdModel\"\n          type: array\n      type: object\n    LiabilityModel:\n      properties:\n        balance:\n          format: double\n          type: number\n        balanceAsOfDate:\n          format: date-time\n          type: string\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        externalSourceId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        externalSourceName:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        interestRate:\n          format: double\n          maximum: 50\n          minimum: 0\n          type: number\n        lastUpdated:\n          format: date-time\n          type: string\n        liabilityType:\n          format: int32\n          type: integer\n        loanDate:\n          format: date-time\n          type: string\n        originalPrincipal:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        payment:\n          format: double\n          type: number\n        paymentType:\n          enum:\n            - InterestOnly\n            - PrincipalAndInterest\n            - SetPrincipal\n            - LastPeriod\n          type: string\n      required:\n        - factFinderId\n        - description\n      type: object\n    LiabilityTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    LiabilityTypesModel:\n      properties:\n        liabilityTypes:\n          items:\n            $ref: \"#/components/schemas/LiabilityTypeModel\"\n          type: array\n      type: object\n    LiabilityWithIdModel:\n      properties:\n        balance:\n          format: double\n          type: number\n        balanceAsOfDate:\n          format: date-time\n          type: string\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        externalSourceId:\n          type: string\n        externalSourceName:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        interestRate:\n          format: double\n          type: number\n        lastUpdated:\n          format: date-time\n          type: string\n        liabilityId:\n          format: int32\n          type: integer\n        liabilityType:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        loanDate:\n          format: date-time\n          type: string\n        originalPrincipal:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        payment:\n          format: double\n          type: number\n        paymentType:\n          enum:\n            - InterestOnly\n            - PrincipalAndInterest\n            - SetPrincipal\n            - LastPeriod\n          type: string\n      type: object\n    LifeInsurancePoliciesModel:\n      properties:\n        lifeInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/LifeInsurancePolicyWithIdModel\"\n          type: array\n      type: object\n    LifeInsurancePoliciesWithSubEntitiesModel:\n      properties:\n        lifeInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/LifeInsurancePolicyWithSubEntitiesModel\"\n          type: array\n      type: object\n    LifeInsurancePolicyModel:\n      properties:\n        beneficiary:\n          enum:\n            - Client\n            - CoClient\n            - Dependent\n            - Other\n          type: string\n        beneficiaryDependentId:\n          format: int32\n          type: integer\n        benefit:\n          format: double\n          type: number\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        generalAccountMarketValue:\n          format: double\n          type: number\n        insured:\n          enum:\n            - Client\n            - CoClient\n            - FirstToDie\n            - SecondToDie\n            - Other\n          type: string\n        payer:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Other\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n      required:\n        - factFinderId\n        - description\n      type: object\n    LifeInsurancePolicySubaccountDomainObject:\n      properties:\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        lifeInsurancePolicyId:\n          format: int32\n          type: integer\n        lifeInsurancePolicySubaccountId:\n          format: int32\n          type: integer\n        marketValue:\n          format: double\n          type: number\n        symbol:\n          type: string\n      type: object\n    LifeInsurancePolicySubaccountModel:\n      properties:\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        marketValue:\n          format: double\n          type: number\n        symbol:\n          maxLength: 31\n          minLength: 0\n          type: string\n      required:\n        - description\n      type: object\n    LifeInsurancePolicySubaccountWithIdModel:\n      properties:\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        lifeInsurancePolicyId:\n          format: int32\n          type: integer\n        lifeInsurancePolicySubaccountId:\n          format: int32\n          type: integer\n        marketValue:\n          format: double\n          type: number\n        symbol:\n          maxLength: 31\n          minLength: 0\n          type: string\n      required:\n        - description\n      type: object\n    LifeInsurancePolicySubaccountsModel:\n      properties:\n        lifeInsurancePolicySubaccounts:\n          items:\n            $ref: \"#/components/schemas/LifeInsurancePolicySubaccountWithIdModel\"\n          type: array\n      type: object\n    LifeInsurancePolicyTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    LifeInsurancePolicyTypesModel:\n      properties:\n        insurancePolicyTypes:\n          items:\n            $ref: \"#/components/schemas/LifeInsurancePolicyTypeModel\"\n          type: array\n      type: object\n    LifeInsurancePolicyWithIdModel:\n      properties:\n        beneficiary:\n          enum:\n            - Client\n            - CoClient\n            - Dependent\n            - Other\n          type: string\n        beneficiaryDependentId:\n          format: int32\n          type: integer\n        benefit:\n          format: double\n          type: number\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        generalAccountMarketValue:\n          format: double\n          type: number\n        insurancePolicyId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n            - FirstToDie\n            - SecondToDie\n            - Other\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        payer:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Other\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n      type: object\n    LifeInsurancePolicyWithSubEntitiesModel:\n      properties:\n        beneficiary:\n          enum:\n            - Client\n            - CoClient\n            - Dependent\n            - Other\n          type: string\n        beneficiaryDependentId:\n          format: int32\n          type: integer\n        benefit:\n          format: double\n          type: number\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        generalAccountMarketValue:\n          format: double\n          type: number\n        insurancePolicyId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n            - FirstToDie\n            - SecondToDie\n            - Other\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        payer:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n            - Other\n          type: string\n        policyType:\n          format: int32\n          type: integer\n        premium:\n          format: double\n          type: number\n        subaccounts:\n          items:\n            $ref: \"#/components/schemas/LifeInsurancePolicySubaccountWithIdModel\"\n          type: array\n      type: object\n    LifestyleAssetModel:\n      properties:\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        purchaseAmount:\n          format: double\n          type: number\n        purchaseDate:\n          format: date-time\n          type: string\n        type:\n          format: int32\n          type: integer\n      required:\n        - factFinderId\n        - description\n      type: object\n    LifestyleAssetTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        name:\n          type: string\n      type: object\n    LifestyleAssetTypesModel:\n      properties:\n        lifestyleAssetTypes:\n          items:\n            $ref: \"#/components/schemas/LifestyleAssetTypeModel\"\n          type: array\n      type: object\n    LifestyleAssetWithIdModel:\n      properties:\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        lifestyleAssetId:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        purchaseAmount:\n          format: double\n          type: number\n        purchaseDate:\n          format: date-time\n          type: string\n        type:\n          format: int32\n          type: integer\n      type: object\n    LifestyleAssetsModel:\n      properties:\n        lifestyleAssets:\n          items:\n            $ref: \"#/components/schemas/LifestyleAssetWithIdModel\"\n          type: array\n      type: object\n    LongTermCareInsurancePoliciesModel:\n      properties:\n        longTermCareInsurancePolicies:\n          items:\n            $ref: \"#/components/schemas/LongTermCareInsurancePolicyWithIdModel\"\n          type: array\n      type: object\n    LongTermCareInsurancePolicyModel:\n      properties:\n        benefit:\n          format: double\n          type: number\n        benefitFrequency:\n          format: int32\n          type: integer\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        premium:\n          format: double\n          type: number\n        premiumFrequency:\n          format: int32\n          type: integer\n      required:\n        - factFinderId\n        - description\n      type: object\n    LongTermCareInsurancePolicyWithIdModel:\n      properties:\n        benefit:\n          format: double\n          type: number\n        benefitFrequency:\n          format: int32\n          type: integer\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        insurancePolicyId:\n          format: int32\n          type: integer\n        insured:\n          enum:\n            - Client\n            - CoClient\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        premium:\n          format: double\n          type: number\n        premiumFrequency:\n          format: int32\n          type: integer\n      type: object\n    MajorPurchaseGoalModel:\n      properties:\n        amount:\n          format: double\n          type: number\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        majorPurchaseGoalTypeId:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        targetDate:\n          format: date-time\n          type: string\n      required:\n        - factFinderId\n        - description\n      type: object\n    MajorPurchaseGoalTypeModel:\n      properties:\n        description:\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        majorPurchaseGoalTypeId:\n          format: int32\n          type: integer\n      type: object\n    MajorPurchaseGoalTypesModel:\n      properties:\n        majorPurchaseGoalTypes:\n          items:\n            $ref: \"#/components/schemas/MajorPurchaseGoalTypeModel\"\n          type: array\n      type: object\n    MajorPurchaseGoalWithIdModel:\n      properties:\n        amount:\n          format: double\n          type: number\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        majorPurchaseGoalId:\n          format: int32\n          type: integer\n        majorPurchaseGoalTypeId:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        targetDate:\n          format: date-time\n          type: string\n      type: object\n    MajorPurchaseGoalsModel:\n      properties:\n        majorPurchaseGoals:\n          items:\n            $ref: \"#/components/schemas/MajorPurchaseGoalWithIdModel\"\n          type: array\n      type: object\n    Object:\n      properties: {}\n      type: object\n    ObjectLink:\n      properties:\n        href:\n          type: string\n        rel:\n          type: string\n      type: object\n    OwnerModel:\n      properties:\n        displayName:\n          type: string\n        owner:\n          type: string\n        ownerDependentId:\n          format: int32\n          type: integer\n      type: object\n    OwnersModel:\n      properties:\n        owners:\n          items:\n            $ref: \"#/components/schemas/OwnerModel\"\n          type: array\n      type: object\n    RealEstateAssetModel:\n      properties:\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        purchaseAmount:\n          format: double\n          type: number\n        purchaseDate:\n          format: date-time\n          type: string\n        rentalIncome:\n          format: double\n          type: number\n      required:\n        - factFinderId\n        - description\n      type: object\n    RealEstateAssetWithIdModel:\n      properties:\n        description:\n          type: string\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        frequency:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        marketValue:\n          format: double\n          type: number\n        owner:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        purchaseAmount:\n          format: double\n          type: number\n        purchaseDate:\n          format: date-time\n          type: string\n        realEstateAssetId:\n          format: int32\n          type: integer\n        rentalIncome:\n          format: double\n          type: number\n      type: object\n    RealEstateAssetsModel:\n      properties:\n        realEstateAssets:\n          items:\n            $ref: \"#/components/schemas/RealEstateAssetWithIdModel\"\n          type: array\n      type: object\n    RelationshipTypeModel:\n      properties:\n        id:\n          format: int32\n          type: integer\n        isChildType:\n          type: boolean\n        relationshipType:\n          enum:\n            - Son\n            - Daughter\n            - FosterSon\n            - FosterDaughter\n            - Grandson\n            - Granddaughter\n            - Nephew\n            - Niece\n            - MaleCousin\n            - FemaleCousin\n            - Father\n            - Mother\n            - Grandfather\n            - Grandmother\n            - Uncle\n            - Aunt\n            - Brother\n            - Sister\n            - SonInLaw\n            - DaughterInLaw\n            - MaleOther\n            - FemaleOther\n          type: string\n      type: object\n    RelationshipTypesModel:\n      properties:\n        relationshipTypes:\n          items:\n            $ref: \"#/components/schemas/RelationshipTypeModel\"\n          type: array\n      type: object\n    RetirementExpenseModel:\n      properties:\n        amount:\n          format: double\n          type: number\n        annualPeriod:\n          format: int32\n          maximum: 99\n          minimum: 1\n          type: integer\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        frequency:\n          format: int32\n          type: integer\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      required:\n        - description\n      type: object\n    RetirementExpenseWithIdModel:\n      properties:\n        amount:\n          format: double\n          type: number\n        annualPeriod:\n          format: int32\n          type: integer\n        description:\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        frequency:\n          format: int32\n          type: integer\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        member:\n          enum:\n            - Client\n            - CoClient\n            - Joint\n          type: string\n        retirementExpenseId:\n          format: int32\n          type: integer\n        retirementGoalId:\n          format: int32\n          type: integer\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    RetirementExpensesModel:\n      properties:\n        retirementExpenses:\n          items:\n            $ref: \"#/components/schemas/RetirementExpenseWithIdModel\"\n          type: array\n      type: object\n    RetirementGoalModel:\n      properties:\n        externalDestinationId:\n          maxLength: 64\n          minLength: 0\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        head1RetirementDate:\n          format: date-time\n          type: string\n        head2RetirementDate:\n          format: date-time\n          type: string\n      required:\n        - factFinderId\n      type: object\n    RetirementGoalWithIdModel:\n      properties:\n        externalDestinationId:\n          type: string\n        factFinderId:\n          format: int32\n          type: integer\n        head1RetirementDate:\n          format: date-time\n          type: string\n        head2RetirementDate:\n          format: date-time\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        retirementGoalId:\n          format: int32\n          type: integer\n      type: object\n    RetirementGoalsModel:\n      properties:\n        retirementGoals:\n          items:\n            $ref: \"#/components/schemas/RetirementGoalWithIdModel\"\n          type: array\n      type: object\n    SavingsStrategiesModel:\n      properties:\n        savingsStrategies:\n          items:\n            $ref: \"#/components/schemas/SavingsStrategyWithIdModel\"\n          type: array\n      type: object\n    SavingsStrategyModel:\n      properties:\n        employerSavingsAmount:\n          format: double\n          type: number\n        employerSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        frequencyId:\n          format: int32\n          type: integer\n        mandatoryAmount:\n          format: double\n          type: number\n        mandatoryAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        postTaxSavingsAmount:\n          format: double\n          type: number\n        postTaxSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        preTaxSavingsAmount:\n          format: double\n          type: number\n        preTaxSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    SavingsStrategyWithIdModel:\n      properties:\n        accountId:\n          format: int32\n          type: integer\n        employerSavingsAmount:\n          format: double\n          type: number\n        employerSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        externalDestinationId:\n          type: string\n        frequencyId:\n          format: int32\n          type: integer\n        mandatoryAmount:\n          format: double\n          type: number\n        mandatoryAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        postTaxSavingsAmount:\n          format: double\n          type: number\n        postTaxSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        preTaxSavingsAmount:\n          format: double\n          type: number\n        preTaxSavingsAmountType:\n          enum:\n            - Dollar\n            - Percent\n            - Max\n          type: string\n        savingsStrategyId:\n          format: int32\n          type: integer\n        startDate:\n          format: date-time\n          type: string\n      type: object\n    SavingsTypeDomainObject:\n      properties:\n        typeName:\n          enum:\n            - PostTaxSavings\n            - PreTaxSavings\n            - EmployerSavings\n            - MandatorySavings\n          type: string\n        validAmountTypes:\n          items:\n            enum:\n              - Dollar\n              - Percent\n              - Max\n            type: string\n          type: array\n      type: object\n    ServiceInformationModel:\n      properties:\n        name:\n          type: string\n        schemaVersion:\n          format: int32\n          type: integer\n        serviceVersion:\n          type: string\n        status:\n          type: string\n      type: object\n    StateProvinceModel:\n      properties:\n        links:\n          items:\n            $ref: \"#/components/schemas/ObjectLink\"\n          type: array\n        stateProvinceId:\n          format: int32\n          type: integer\n        stateProvinceName:\n          type: string\n      type: object\n    StatesProvincesModel:\n      properties:\n        statesProvinces:\n          items:\n            $ref: \"#/components/schemas/StateProvinceModel\"\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/naviplancentral.com-factfinder-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/naviplancentral.com-factfinder-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}