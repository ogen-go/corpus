{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/suquant/wgrest"
		},
		"file": {
			"name": "openapi-spec.yaml",
			"size": 0,
			"path": "openapi-spec.yaml",
			"byteSize": 22265,
			"content": "openapi: \"3.0.3\"\ninfo:\n  title: WireGuard RESTful API\n  description: |\n    Manage WireGuard VPN tunnels by RESTful manner.\n\n    Supported features:\n\n      * Manage device: create, update, and delete wireguard interface\n      * Manage device's ip addresses: attache or detach ip addresses to the netowrk interface\n      * Manage device's peers: create, update, and delete peers\n      * Peer's QR code, for use in WireGuard \u0026 ForestVPN client\n\n    ForestVPN client may be used as alternative client with enabled P2P technology over WireGuard tunnelling.\n    Read more on https://forestvpn.com/\n  termsOfService: https://forestvpn.com/terms/\n  contact:\n    name: ForestVPN\n    url: https://forestvpn.com/\n    email: support@forestvpn.com\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: \"1.0\"\n\nexternalDocs:\n  description: Documentation of wgrest\n  url: https://forestvpn.com/docs/wgrest/\n\nservers:\n  - url: '{scheme}://{host}/v1'\n    variables:\n      host:\n        default: \"example.com\"\n      scheme:\n        enum:\n          - 'https'\n          - 'http'\n        default: 'https'\n\nsecurity:\n  - bearerAuth: [ ]\n\npaths:\n  /devices/:\n    get:\n      summary: Devices list\n      operationId: ListDevices\n      tags:\n        - device\n      parameters:\n        - in: query\n          name: per_page\n          description: Number of WireGuard devices per page. Default is 100\n          schema:\n            type: number\n        - in: query\n          name: page\n          description: Page number. Default is 0\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ok\n          headers:\n            Link:\n              schema:\n                type: string\n                description: https://docs.github.com/en/rest/guides/traversing-with-pagination\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create new device\n      operationId: CreateDevice\n      tags:\n        - device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceCreateOrUpdateRequest\"\n      responses:\n        201:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n        409:\n          description: Device exists\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /devices/{name}/:\n    get:\n      summary: Get device info\n      operationId: GetDevice\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n        404:\n          description: not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete Device\n      operationId: DeleteDevice\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: No content\n        404:\n          description: Not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    patch:\n      summary: Update device\n      operationId: UpdateDevice\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceCreateOrUpdateRequest\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n        404:\n          description: Not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /devices/{name}/options/:\n    get:\n      summary: Get device options\n      operationId: GetDeviceOptions\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceOptions\"\n        404:\n          description: not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    patch:\n      summary: Update device's options\n      operationId: UpdateDeviceOptions\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceOptionsUpdateRequest\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceOptions\"\n        404:\n          description: Not found\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /devices/{name}/peers/:\n    get:\n      summary: Peers list\n      operationId: ListDevicePeers\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          description: Device's name\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: per_page\n          description: Number of WireGuard device's peers per page. Default is 100\n          schema:\n            type: number\n        - in: query\n          name: page\n          description: Page number. Default is 0\n          schema:\n            type: number\n        - in: query\n          name: q\n          description: Search query\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort field\n          schema:\n            type: string\n            enum:\n              - pub_key\n              - receive_bytes\n              - -receive_bytes\n              - transmit_bytes\n              - -transmit_bytes\n              - total_bytes\n              - -total_bytes\n              - last_handshake_time\n              - -last_handshake_time\n      responses:\n        200:\n          description: Ok\n          headers:\n            Link:\n              schema:\n                type: string\n                description: https://docs.github.com/en/rest/guides/traversing-with-pagination\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Peer\"\n        404:\n          description: Device not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create new device peer\n      operationId: CreateDevicePeer\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          description: Device's name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PeerCreateOrUpdateRequest\"\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Peer\"\n        404:\n          description: Device not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /devices/{name}/peers/{urlSafePubKey}/:\n    get:\n      summary: Get device peer info\n      operationId: GetDevicePeer\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          description: Device's name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: urlSafePubKey\n          description: Peer's url safe public key\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Peer\"\n        404:\n          description: Peer or device not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    patch:\n      summary: Update device's peer\n      operationId: UpdateDevicePeer\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          description: Device's name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: urlSafePubKey\n          description: Peer's url safe public key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PeerCreateOrUpdateRequest\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Peer\"\n        404:\n          description: Peer or device not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete device's peer\n      operationId: DeleteDevicePeer\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          description: Device's name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: urlSafePubKey\n          description: Peer's url safe public key\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Peer\"\n        404:\n          description: Peer or device not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /devices/{name}/peers/{urlSafePubKey}/quick.conf:\n    get:\n      summary: Get device peer quick config\n      operationId: GetDevicePeerQuickConfig\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          description: Device's name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: urlSafePubKey\n          description: Peer's url safe public key\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Peer or device not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /devices/{name}/peers/{urlSafePubKey}/quick.conf.png:\n    get:\n      summary: Get device peer quick config QR code\n      operationId: GetDevicePeerQuickConfigQRCodePNG\n      tags:\n        - device\n      parameters:\n        - in: path\n          name: name\n          description: Device's name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: urlSafePubKey\n          description: Peer's url safe public key\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: width\n          description: QR code's width \u0026 height. Default is 256px.\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Peer or device not found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      description: Authorization token\n  schemas:\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          description: Error code\n          example: device_does_not_exist\n        message:\n          type: string\n          description: Error's short description\n          example: Device \"wg0\" does'n exist\n        detail:\n          type: string\n          description: Error's detail description\n    DeviceOptionsUpdateRequest:\n      type: object\n      description: Device options\n      properties:\n        allowed_ips:\n          type: array\n          items:\n            type: string\n          description: Device's allowed ips, it might be any of IPv4 or IPv6 addresses in CIDR notation.\n            It might be owervrite in peer and device config.\n          example:\n            - 0.0.0.0/0\n            - ::0/0\n          nullable: true\n        dns_servers:\n          type: array\n          items:\n            type: string\n          description: Interface's DNS servers.\n          example:\n            - 8.8.8.8\n            - 2001:4860:4860::8888\n          nullable: true\n        host:\n          type: string\n          description: Device host, it might be domain name or IPv4/IPv6 address.\n            It is used for external/internal connection\n          example: \"1.2.3.4\"\n          nullable: true\n    DeviceOptions:\n      type: object\n      description: Device options\n      required:\n        - allowed_ips\n        - dns_servers\n        - host\n      properties:\n        allowed_ips:\n          type: array\n          items:\n            type: string\n          description: Device's allowed ips, it might be any of IPv4 or IPv6 addresses in CIDR notation.\n            It might be owervrite in peer and device config.\n          example:\n            - 0.0.0.0/0\n            - ::0/0\n        dns_servers:\n          type: array\n          items:\n            type: string\n          description: Interface's DNS servers.\n          example:\n            - 8.8.8.8\n            - 2001:4860:4860::8888\n        host:\n          type: string\n          description: Device host, it might be domain name or IPv4/IPv6 address.\n            It is used for external/internal connection\n          example: \"1.2.3.4\"\n    DeviceCreateOrUpdateRequest:\n      type: object\n      description: Device params that might be used due to creation or updation process\n      properties:\n        name:\n          type: string\n          description: WireGuard device name. Usually it is network interface name\n          example: wg0\n          nullable: true\n        listen_port:\n          type: integer\n          format: int32\n          description: WireGuard device listen port.\n          example: 51820\n          nullable: true\n        private_key:\n          type: string\n          description: WireGuard device private key encoded by base64.\n          example: wBHGU3RiK/IFWXAF2jbHjGSDAKEO2ddcsZFEWcQ+qGc=\n          nullable: true\n        firewall_mark:\n          type: integer\n          format: int32\n          description: WireGuard device firewall mark.\n          example: 10\n          nullable: true\n        networks:\n          type: array\n          items:\n            type: string\n          description: IPv4 or IPv6 addresses in CIDR notation\n          example:\n            - 10.71.25.1/24\n            - fd42:21:21::1/64\n          nullable: true\n    Device:\n      type: object\n      description: Information about wireguard device.\n      required:\n        - name\n        - listen_port\n        - public_key\n        - private_key\n        - firewall_mark\n        - networks\n        - peers_count\n        - total_receive_bytes\n        - total_transmit_bytes\n      properties:\n        name:\n          type: string\n          description: WireGuard device name. Usually it is network interface name\n          example: wg0\n        listen_port:\n          type: integer\n          format: int32\n          description: WireGuard device listen port.\n          example: 51820\n        public_key:\n          type: string\n          description: WireGuard device public key encoded by base64.\n          example: QFjZjxa2sgwnmGT4NqyRoeNk31AlHjVxHNEH/qY/2no=\n        firewall_mark:\n          type: integer\n          format: int32\n          description: WireGuard device firewall mark.\n          example: 10\n        networks:\n          type: array\n          items:\n            type: string\n          description: IPv4 or IPv6 addresses in CIDR notation\n          example:\n            - 10.71.25.1/24\n            - fd42:21:21::1/64\n        peers_count:\n          type: integer\n          format: int32\n          description: WireGuard device's peers count\n          example: 10\n        total_receive_bytes:\n          type: integer\n          format: int64\n          description: WireGuard device's peers total receive bytes\n          example: 59984733\n        total_transmit_bytes:\n          type: integer\n          format: int64\n          description: WireGuard device's peers total transmit bytes\n          example: 45331987\n    PeerCreateOrUpdateRequest:\n      type: object\n      description: Peer params that might be used due to creation or updation process\n      properties:\n        private_key:\n          type: string\n          description: Base64 encoded private key. If present it will be stored in persistent storage.\n          example: gD89VQVXPAEpXuIyHOujw1wF4njIBtaSLvqAatBAuWY=\n          nullable: true\n        public_key:\n          type: string\n          description: Base64 encoded public key\n          example: qnPJFozrAnrTjap5VjO30bUeLvhkZEEZx48w2RqMpRA=\n          nullable: true\n        preshared_key:\n          type: string\n          description: Base64 encoded preshared key\n          example: c2m+JtxpcRP6pztdDFRHnOx75SI+QyBDba1+BEbQaiA=\n          nullable: true\n        allowed_ips:\n          type: array\n          items:\n            type: string\n          description: Peer's allowed ips, it might be any of IPv4 or IPv6 addresses in CIDR notation\n          example:\n            - 10.71.25.51/32\n            - fd42:21:21::51/128\n          nullable: true\n        persistent_keepalive_interval:\n          type: string\n          description: Peer's persistend keepalive interval. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n          example: \"25s\"\n        endpoint:\n          type: string\n          description: Peer's endpoint in host:port format\n          example: \"1.2.3.4:2345\"\n    Peer:\n      type: object\n      description: Information about wireguard peer.\n      required:\n        - public_key\n        - url_safe_public_key\n        - allowed_ips\n        - persistent_keepalive_interval\n        - last_handshake_time\n        - endpoint\n        - receive_bytes\n        - transmit_bytes\n      properties:\n        public_key:\n          type: string\n          description: Base64 encoded public key\n          example: 0DGpyohLU+T1qAemWVWsNd1nwy3ZBAG7U4JJ/ZA+fWA=\n        url_safe_public_key:\n          type: string\n          description: URL safe base64 encoded public key. It is usefull to use in peers api endpoint.\n          example: 0DGpyohLU-T1qAemWVWsNd1nwy3ZBAG7U4JJ_ZA-fWA\n        preshared_key:\n          type: string\n          description: Base64 encoded preshared key\n          example: c2m+JtxpcRP6pztdDFRHnOx75SI+QyBDba1+BEbQaiA=\n        allowed_ips:\n          type: array\n          items:\n            type: string\n          description: Peer's allowed ips, it might be any of IPv4 or IPv6 addresses in CIDR notation\n          example:\n            - 10.71.25.51/32\n            - fd42:21:21::51/128\n        last_handshake_time:\n          type: string\n          format: date-time\n          description: Peer's last handshake time formated in RFC3339\n          example: \"\"\n        persistent_keepalive_interval:\n          type: string\n          description: Peer's persistend keepalive interval in\n          example: \"25s\"\n        endpoint:\n          type: string\n          description: Peer's endpoint in host:port format\n          example: \"1.2.3.4:2345\"\n        receive_bytes:\n          type: integer\n          format: int64\n          description: Peer's receive bytes\n          example: 587732\n        transmit_bytes:\n          type: integer\n          format: int64\n          description: Peer's transmit bytes\n          example: 432445\n",
			"canonicalURL": "/github.com/suquant/wgrest@d126dc1d3e84caad0dd9268216748ac410c01e78/-/blob/openapi-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/suquant/wgrest/blob/d126dc1d3e84caad0dd9268216748ac410c01e78/openapi-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}