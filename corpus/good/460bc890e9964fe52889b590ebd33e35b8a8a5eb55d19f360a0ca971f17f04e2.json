{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/empoa"
		},
		"file": {
			"name": "todoapp.yaml",
			"size": 0,
			"path": "empoa-jackson-serializer/src/test/resources/jackson-serializer/yaml/todoapp.yaml",
			"byteSize": 4145,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: A TODO-Task list application\n  description: A simple application to handle tasks.\n  license:\n    name: Eclipse Public License 2.0\n    url: https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html\n  version: 1.0.0\nservers:\n- url: http://localhost:8080/todoapp\ntags:\n- name: task\n  description: Task management\npaths:\n  /task:\n    get:\n      tags:\n      - task\n      summary: Get the list of all tasks\n      operationId: tasksGetAll\n      responses:\n        \"200\":\n          description: List of all tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n        default:\n          description: Generic error response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n      - task\n      summary: Create a new task\n      operationId: tasksCreate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n      responses:\n        \"200\":\n          description: The created task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        default:\n          description: Generic error response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /task/{taskId}:\n    get:\n      tags:\n      - task\n      summary: Get a single task based on its id\n      operationId: tasksRead\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        default:\n          description: Generic error response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags:\n      - task\n      summary: Update an existing task\n      operationId: tasksUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n      responses:\n        \"200\":\n          description: The updated task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        default:\n          description: Generic error response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - task\n      summary: Delete an existing task\n      operationId: tasksDelete\n      responses:\n        \"204\":\n          description: Task deleted response\n        default:\n          description: Generic error response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    parameters:\n    - name: taskId\n      in: path\n      description: The id of the task\n      required: true\n      schema:\n        type: string\n      style: simple\n      explode: false\n      example: e1cb23d0-6cbe-4a29-b586-bfa424bc93fd\ncomponents:\n  schemas:\n    Task:\n      type: object\n      description: Object representing a Task\n      required:\n      - description\n      properties:\n        completed:\n          type: boolean\n          description: indicates if a taks is completed or not\n        description:\n          type: string\n          description: description of the task\n          example: My important task\n        id:\n          type: string\n          description: id of the taks\n          readOnly: true\n          example: e1cb23d0-6cbe-4a29-b586-bfa424bc93fd\n    Error:\n      type: object\n      description: Object representing an error\n      properties:\n        code:\n          type: integer\n          format: int32\n          description: Error code that identify of the error\n          example: 1000\n        message:\n          type: string\n          description: Short description of the error\n          example: Could not perform the task\n",
			"canonicalURL": "/github.com/OpenAPITools/empoa@03078bf7c49ad03a175e51a57ede8d730013782e/-/blob/empoa-jackson-serializer/src/test/resources/jackson-serializer/yaml/todoapp.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/empoa/blob/03078bf7c49ad03a175e51a57ede8d730013782e/empoa-jackson-serializer/src/test/resources/jackson-serializer/yaml/todoapp.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}