{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lim0n3/easy-collect-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 5557,
			"content": "openapi: 3.0.0\n# Added by API Auto Mocking Plugin\nservers:\n  - description: EasyCollect API\n    url: https://localhost:5000\ninfo:\n  description: This is a simple API to manage EasyCollect\n  version: \"1.0.0\"\n  title: EasyCollect API\n  contact:\n    email: you@your-company.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: shops\n    description: Shop descriptions such as name, location, telephone\n  - name: categories\n    description: Enums such as Fruttivendolo, Macelleria,...\npaths:\n  /shops:\n    get:\n      tags:\n        - shops\n      summary: retrieve all shops\n      operationId: getShops\n      description: Retrieve all available shops\n      parameters:\n        - in: query\n          name: filter\n          description: pass an optional search string for looking up name or description Shop \n          required: false\n          schema:\n            type: string\n        - in: query\n          name: categories_id\n          description: pass an optional search string for looking up Shop name or description\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Shop'\n        '400':\n          description: bad input parameter\n    post:\n      tags:\n        - shops\n      summary: adds a Shop\n      operationId: addShop\n      description: Adds a Shop to the system\n      responses:\n        '201':\n          description: item created\n        '400':\n          description: 'invalid input, object invalid'\n        '409':\n          description: an existing item already exists\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Shop'\n        description: Shop item to add\n  /shops/{id}:\n    get:\n      summary: retrieve information of a single Shop\n      tags:\n        - shops\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the Shop to get\n          example: 1000\n      responses:\n        '200':\n          description: 'Item retrieved successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shop'\n        '404':\n          description: 'Item not found'\n  /categories:\n    get:\n      tags:\n        - categories\n      summary: retrieve all categories\n      responses:\n        '200':\n          description: search results ordered ASC\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Category'\n#    put:\n#      tags:\n#      - shops\n#      summary: Update a Shop\n#      operationId: updateShop\n#      parameters:\n#        - in: path\n#          name: id\n#          schema:\n#            type: integer\n#          required: true\n#          description: Numeric ID of the Shop to get\n#          example: 1000\n#      requestBody:\n#        content:\n#          application/json:\n#            schema:\n#              $ref: '#/components/schemas/Shop'\n#      description:\n#        Update a Shop in db\n#      responses:\n#        '200':\n#          description: Shop updated correctly\n#        '404':\n#          description: Shop not found\n#    delete:\n#      tags:\n#        - shops\n#      summary: Delete shop from ID\n#      parameters:\n#        - in: path\n#          name: id\n#          schema:\n#            type: integer\n#          required: true\n#          description: Numeric ID of the user to get\n#          example: 1000\n#      responses:\n#        '200':\n#          description: 'Item deleted successfully'\n\ncomponents:\n  schemas:\n    Shop:\n      type: object\n      required:\n        - name\n        - address\n        - description\n      properties:\n        id:\n          type: number\n          example: 12334\n          readOnly: true\n        natural_key:\n          type: string\n          example: 'Macelleria del Corso_100_100'\n          readOnly: true\n        name:\n          type: string\n          example: 'Macelleria del Corso'\n        addess:\n          type: string\n          example: 'Via Roma 133'\n        lat:\n          type: number\n          example: 122\n          readOnly: true\n        lng:\n          type: number\n          example: 133\n          readOnly: true\n        phone:\n          type: string\n          example: '333-5607123'\n        telegram:\n          type: string\n        facebook:\n          type: string\n        description:\n          type: string\n          example: 'Piccola bottega dal 1920'\n        is_deleted:\n          type: boolean\n          example: false\n          readOnly: true\n        created_at:\n          type: string\n          format: date\n          readOnly: true\n        updated_at:\n          type: string \n          format: date\n          readOnly: true\n        categories:\n          type: array\n          maxItems: 3\n          items: \n            type: number\n    Category:\n      type: object\n      required:\n        - natural_key\n        - name\n      properties:\n        id:\n          type: number\n          example: 12334\n          readOnly: true\n        natural_key:\n          type: string\n          example: '1234_4345'\n          readOnly: true\n        name:\n          type: string\n          example: 'Macelleria'",
			"canonicalURL": "/github.com/lim0n3/easy-collect-api@65a2b6bfa8c1fe2a75b1965c48aa5d8db6c9a55d/-/blob/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/lim0n3/easy-collect-api/blob/65a2b6bfa8c1fe2a75b1965c48aa5d8db6c9a55d/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}