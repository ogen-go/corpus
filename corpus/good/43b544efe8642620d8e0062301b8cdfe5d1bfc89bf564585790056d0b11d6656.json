{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "robokop_messenger/openapi.yml",
			"byteSize": 19824,
			"content": "openapi: 3.0.2\ninfo:\n  contact:\n    email: patrick@covar.com\n  description: ROBOKOP reasoning services, compliant with NCATS Reasoner Standards\n  termsOfService: https://robokop.renci.org/termsofservice/\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  title: ROBOKOP Messenger\n  version: 1.0.0\n  x-reasoner_standard_version: 0.9.2\nservers:\n  - url: \"http://robokop.renci.org:4868/\"\ntags:\n- name: reasoner\n- name: translator\npaths:\n  /answer:\n    post:\n      description: ''\n      operationId: answer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  properties:\n                    max_connectivity:\n                      default: -1\n                      example: -1\n                      type: integer\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Fetch answers to question.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /minify:\n    post:\n      description: ''\n      operationId: minify\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Minify message.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /normalize:\n    post:\n      description: ''\n      operationId: normalize\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Normalize.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /score:\n    post:\n      description: ''\n      operationId: score\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Score answers.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /screen:\n    post:\n      description: ''\n      operationId: screen\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  properties:\n                    max_results:\n                      default: 3\n                      example: 3\n                      type: integer\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Prescreen subgraphs.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /support:\n    post:\n      description: ''\n      operationId: support\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Add support to message.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /weight_correctness:\n    post:\n      description: ''\n      operationId: weight_correctness\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Weight kgraph edges based on metadata.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /weight_novelty:\n    post:\n      description: ''\n      operationId: weight_novelty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Compute informativeness weights for edges.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\n  /yank:\n    post:\n      description: ''\n      operationId: yank\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  $ref: '#/components/schemas/Message'\n                options:\n                  type: object\n              required:\n              - message\n              type: object\n        description: Request\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              example:\n                knowledge_graph:\n                  edges: []\n                  nodes:\n                  - id: MONDO:0005737\n                query_graph:\n                  edges: []\n                  nodes:\n                  - curie: MONDO:0005737\n                    id: n00\n                results:\n                - n00:\n                  - MONDO:0005737\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: successful operation\n        '400':\n          description: Invalid input\n      summary: Copy relevant portions of remote knowledge graph into local knowledge\n        graph.\n      tags:\n      - reasoner\n      x-openapi-router-controller: controllers\ncomponents:\n  schemas:\n    BiolinkEntity:\n      description: A subclass of named_thing (snake_case)\n      example: disease\n      externalDocs:\n        description: Biolink model entities\n        url: https://biolink.github.io/biolink-model/docs/NamedThing.html\n      type: string\n    BiolinkRelation:\n      description: A relation, i.e. child of related_to (snake_case)\n      example: affects\n      externalDocs:\n        description: Biolink model relations\n        url: https://biolink.github.io/biolink-model/docs/related_to.html\n      type: string\n    Credentials:\n      description: Credentials needed for programmatic access to the remote knowledge\n        graph\n      properties:\n        password:\n          description: Password needed for programmatic access to the remote knowledge\n            graph\n          type: string\n        username:\n          description: Username needed for programmatic access to the remote knowledge\n            graph\n          type: string\n      required:\n      - username\n      - password\n      type: object\n    EdgeBinding:\n      properties:\n        kg_id:\n          oneOf:\n          - type: string\n          - items:\n              type: string\n            type: array\n        qg_id:\n          type: string\n      required:\n      - qg_id\n      - kg_id\n      type: object\n    KEdge:\n      description: An edge in the thought subgraph linking two nodes\n      properties:\n        id:\n          description: Local identifier for this node which is unique within this\n            KnowledgeGraph, and perhaps within the source reasoner's knowledge graph\n          example: '553903'\n          type: string\n        source_id:\n          description: Corresponds to the @id of source node of this edge\n          example: https://omim.org/entry/603903\n          type: string\n        target_id:\n          description: Corresponds to the @id of target node of this edge\n          example: https://www.uniprot.org/uniprot/P00738\n          type: string\n        type:\n          $ref: '#/components/schemas/BiolinkRelation'\n      required:\n      - id\n      - source_id\n      - target_id\n      type: object\n    KNode:\n      description: A node in the thought subgraph\n      properties:\n        id:\n          description: CURIE identifier for this node\n          example: OMIM:603903\n          type: string\n        name:\n          description: Formal name of the entity\n          example: Haptoglobin\n          type: string\n        type:\n          description: Entity type of this node (e.g., protein, disease, etc.)\n          example:\n          - protein\n          items:\n            type: string\n          type: array\n      required:\n      - id\n      type: object\n    KnowledgeGraph:\n      description: A thought graph associated with this result. This will commonly\n        be a linear path subgraph from one concept to another, but related items aside\n        of the path may be included.\n      properties:\n        edges:\n          description: List of edges in the KnowledgeGraph\n          items:\n            $ref: '#/components/schemas/KEdge'\n          type: array\n        nodes:\n          description: List of nodes in the KnowledgeGraph\n          items:\n            $ref: '#/components/schemas/KNode'\n          type: array\n      required:\n      - nodes\n      - edges\n      type: object\n    Message:\n      example:\n        query_graph:\n          edges: []\n          nodes:\n          - curie: MONDO:0005737\n            id: n00\n      properties:\n        knowledge_graph:\n          description: KnowledgeGraph object that contains all the nodes and edges\n            referenced in any of the possible answers to the query OR connection information\n            for a remote knowledge graph\n          oneOf:\n          - $ref: '#/components/schemas/KnowledgeGraph'\n          - $ref: '#/components/schemas/RemoteKnowledgeGraph'\n          type: object\n        query_graph:\n          $ref: '#/components/schemas/QueryGraph'\n          description: QueryGraph object that contains a serialization of a query\n            in the form of a graph\n          type: object\n        results:\n          description: List of all returned potential answers for the query posed\n          items:\n            $ref: '#/components/schemas/Result'\n          type: array\n      type: object\n    NodeBinding:\n      properties:\n        kg_id:\n          oneOf:\n          - type: string\n          - items:\n              type: string\n            type: array\n        qg_id:\n          type: string\n      required:\n      - qg_id\n      - kg_id\n      type: object\n    QEdge:\n      description: An edge in the QueryGraph\n      properties:\n        id:\n          description: 'QueryGraph internal identifier for this QEdge. Recommended\n            form: e00, e01, e02, etc.'\n          example: e00\n          type: string\n        source_id:\n          description: Corresponds to the @id of source node of this edge\n          example: https://omim.org/entry/603903\n          type: string\n        target_id:\n          description: Corresponds to the @id of target node of this edge\n          example: https://www.uniprot.org/uniprot/P00738\n          type: string\n        type:\n          oneOf:\n          - $ref: '#/components/schemas/BiolinkRelation'\n          - items:\n              $ref: '#/components/schemas/BiolinkRelation'\n            type: array\n      required:\n      - id\n      - source_id\n      - target_id\n      type: object\n    QNode:\n      description: A node in the QueryGraph\n      properties:\n        curie:\n          description: CURIE identifier for this node\n          example: OMIM:603903\n          oneOf:\n          - type: string\n          - items:\n              type: string\n            type: array\n        id:\n          description: 'QueryGraph internal identifier for this QNode. Recommended\n            form: n00, n01, n02, etc.'\n          example: n00\n          type: string\n        type:\n          oneOf:\n          - $ref: '#/components/schemas/BiolinkEntity'\n          - description: Entity types of this node (e.g., protein, disease, etc.)\n            example:\n            - disease\n            - genetic_condition\n            items:\n              $ref: '#/components/schemas/BiolinkEntity'\n            type: array\n      required:\n      - id\n      type: object\n    QueryGraph:\n      description: A graph intended to be the thought path to be followed by a reasoner\n        to answer the question. This graph is a representation of a question.\n      properties:\n        edges:\n          description: List of edges in the QueryGraph\n          items:\n            $ref: '#/components/schemas/QEdge'\n          type: array\n        nodes:\n          description: List of nodes in the QueryGraph\n          items:\n            $ref: '#/components/schemas/QNode'\n          type: array\n      required:\n      - nodes\n      - edges\n      type: object\n    RemoteKnowledgeGraph:\n      description: A thought graph associated with this result that is not repeated\n        here, but stored elsewhere in a way that can be remotely accessed by the reader\n        of this Message\n      properties:\n        credentials:\n          $ref: '#/components/schemas/Credentials'\n          description: Credentials needed for programmatic access to the remote knowledge\n            graph\n          type: object\n        url:\n          description: URL that provides programmatic access to the remote knowledge\n            graph\n          example: http://robokop.renci.org/api/kg\n          type: string\n      required:\n      - url\n      - credentials\n      type: object\n    Result:\n      description: One of potentially several results or answers for a query\n      properties:\n        edge_bindings:\n          description: List of QEdge-KEdge bindings.\n          items:\n            $ref: '#/components/schemas/EdgeBinding'\n          type: array\n        node_bindings:\n          description: List of QNode-KNode bindings.\n          items:\n            $ref: '#/components/schemas/NodeBinding'\n          type: array\n        score:\n          description: Any type of score associated with this result\n          example: 163.233\n          format: float\n          type: number\n      required:\n      - node_bindings\n      - edge_bindings\n      type: object\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/robokop_messenger/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/robokop_messenger/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}