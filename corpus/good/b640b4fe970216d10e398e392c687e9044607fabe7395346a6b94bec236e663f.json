{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gnosis/dex-services"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "price-estimator/openapi.yml",
			"byteSize": 8499,
			"content": "openapi: 3.0.3\ninfo:\n  version: 0.0.1\n  title: Price Estimator OpenAPI\nservers:\n- url: https://price-estimate-mainnet.dev.gnosisdev.com\n  description: Staging\n- url: https://dex-price-estimator.gnosis.io\n  description: Production\n- url: http://localhost:8080\n  description: Local\npaths:\n  /api/v1/markets/{market}/estimated-buy-amount/{sell amount in quote}:\n    get:\n      summary: Estimated Buy Amount\n      description: Estimate the buy amount (in buy tokens) a user can set as a limit order while still expecting to be completely matched when selling the given amount of quote token.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AmountResponse\"\n      parameters:\n        - $ref: \"#/components/parameters/Market\"\n        - name: sell amount in quote\n          required: true\n          in: path\n          schema:\n            $ref: \"#/components/schemas/NumberParameter\"\n          example: 1\n        - $ref: \"#/components/parameters/Unit\"\n        - $ref: \"#/components/parameters/BatchId\"\n        - $ref: \"#/components/parameters/IgnoreAddresses\"\n        - $ref: \"#/components/parameters/BlockNumber\"\n        - $ref: \"#/components/parameters/RoundingBuffer\"\n  /api/v1/markets/{market}/estimated-amounts-at-price/{price}:\n    get:\n      summary: Estimated Amounts At Price\n      description: Estimate largest buy and sell amounts for a limit at given price that would get matched. Note that it might be possible to use a higher buy amount for the same returned sell amount and still likely get completely matched by the solver. This buy amount can be computed with a subsequent estimate buy amount API call using the returned sell amount in quote value.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AmountResponse\"\n      parameters:\n        - $ref: \"#/components/parameters/Market\"\n        - name: price\n          required: true\n          in: path\n          schema:\n            $ref: \"#/components/schemas/NumberParameter\"\n          example: 400\n        - $ref: \"#/components/parameters/Unit\"\n        - $ref: \"#/components/parameters/BatchId\"\n        - $ref: \"#/components/parameters/IgnoreAddresses\"\n        - $ref: \"#/components/parameters/BlockNumber\"\n        - $ref: \"#/components/parameters/RoundingBuffer\"\n  /api/v1/markets/{market}/estimated-best-ask-price:\n    get:\n      summary: Estimated Best Ask Price\n      description: Estimates the exchange rate for the market. Note that the true exchange rate depends on the buy amount whereas this exchange rate is for a theoretical 0 amount. In the example we can exchange ~300 units of the sell token for 1 unit of the buy token.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: number\n                nullable: true\n                example: 297.8\n      parameters:\n        - $ref: \"#/components/parameters/Market\"\n        - $ref: \"#/components/parameters/Unit\"\n        - $ref: \"#/components/parameters/BatchId\"\n        - $ref: \"#/components/parameters/IgnoreAddresses\"\n        - $ref: \"#/components/parameters/BlockNumber\"\n        - $ref: \"#/components/parameters/RoundingBuffer\"\n  /api/v1/markets/{market}:\n    get:\n      summary: Market\n      description: The transitive orderbook (containing bids and asks) for the given base and quote token.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MarketsResponse\"\n      parameters:\n        - $ref: \"#/components/parameters/Market\"\n        - $ref: \"#/components/parameters/Unit\"\n        - $ref: \"#/components/parameters/BatchId\"\n        - $ref: \"#/components/parameters/IgnoreAddresses\"\n        - $ref: \"#/components/parameters/BlockNumber\"\n  /api/v1/minimum-order-size-owl:\n    get:\n      summary: Minimum Order Size Owl\n      description: The minimum size of an order in owl atoms for it to be considered by the solver according to current economic viability constraints.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MinimumOrderSizeOwlResponse\"\ncomponents:\n  schemas:\n    NumberParameter:\n      type: number\n    Unit:\n      type: string\n      enum: [baseunits, atoms]\n      default: baseunits\n      example: baseunits\n    RoundingBuffer:\n      type: string\n      enum: [enabled, disabled]\n      default: enabled\n      example: enabled\n    IgnoreAddressesParameter:\n      type: string\n      default: \"\"\n    AmountResponse:\n      type: object\n      properties:\n        baseTokenId:\n          type: integer\n        quoteTokenId:\n          type: integer\n        buyAmountInBase:\n          type: string\n        sellAmountInQuote:\n          type: string\n      example:\n        baseTokenId: 1\n        quoteTokenId: 7\n        buyAmountInBase: \"0.0025\"\n        sellAmountInQuote: \"1\"\n    TransitiveOrder:\n      type: object\n      properties:\n        price:\n          type: number\n        volume:\n          type: number\n    MarketsResponse:\n      type: object\n      properties:\n        asks:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransitiveOrder\"\n        bids:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransitiveOrder\"\n      example:\n        asks:\n          - price: 407.6755405630054\n            volume: 9.389082650375993\n        bids:\n          - price: 5508028446685.359\n            volume\": 3.2264600472733105\n    MinimumOrderSizeOwlResponse:\n      type: number\n  parameters:\n    Market:\n      name: market\n      in: path\n      description: token pair of the form `\u003cbuy token\u003e-\u003csell token\u003e`\n      required: true\n      schema:\n        type: string\n      examples:\n        token_ids:\n          summary: Token Ids\n          value: 1-7\n        symbols:\n          summary: Symbols\n          value: WETH-DAI\n        addresses:\n          value: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2-0x6b175474e89094c44da98b954eedeac495271d0f\n    Unit:\n      name: unit\n      in: query\n      description: If `baseunits` (the default) all amounts are denominated in the \"natural\" unit of the respective token given by the number of decimals specified through the ERC20 interface. If set to `atoms` all amounts are denominated in the smallest available unit (atom) of the token.\n      required: false\n      schema:\n        $ref: \"#/components/schemas/Unit\"\n    RoundingBuffer:\n      name: roundingBuffer\n      in: query\n      description: If `enabled` (the default) the orderbook is adjusted by a rounding buffer that is used by the solvers internally. This makes the results more accurately reflect how the solvers see the orderbook.  If set to `disabled` no adjustments take place which can lead to for example prices for orders that would not actually get matched by the solver.\n      required: false\n      schema:\n        $ref: \"#/components/schemas/RoundingBuffer\"\n    BatchId:\n      name: batchId\n      in: query\n      description: The batch ID to compute the estimate for, only accounting orders that are valid at the specified batch. If no batch ID is specified, the current batch that is collecting orders will be used.\n      required: false\n      schema:\n        type: integer\n    IgnoreAddresses:\n      name: ignoreAddresses\n      in: query\n      description: Comma separated list of addresses in hex notation whose orders should be ignored. Capitalization of letters does not matter. No space after the commas.\n      required: false\n      schema:\n        $ref: \"#/components/schemas/IgnoreAddressesParameter\"\n      examples:\n        empty:\n          summary: Empty\n          value: \"\"\n        list:\n          summary: Two Addresses\n          value: 0x00000000000000000000000000000000000000a0,0x00000000000000000000000000000000000000A1\n    BlockNumber:\n      name: blockNumber\n      in: query\n      description: The block number to compute the estimate for. This will use the open orderbook at that block (i.e. orders that will be considered for solving the current batch at the block number). This parameter cannot be specified together with the \"batchId\" query parameter.\n      required: false\n      schema:\n        type: integer\n",
			"canonicalURL": "/github.com/gnosis/dex-services@6c67eee81dc067f106ca447b40479770401e8a49/-/blob/price-estimator/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/gnosis/dex-services/blob/6c67eee81dc067f106ca447b40479770401e8a49/price-estimator/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}