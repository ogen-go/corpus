{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/isa-group/RESTest"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "src/test/resources/Traccar/openapi.yml",
			"byteSize": 57018,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: Traccar\n  version: '4.12'\n  description: Traccar GPS tracking server API documentation. To use the API you need\n    to have a server instance. For testing purposes you can use one of free [demo\n    servers](https://www.traccar.org/demo-server/). For production use you can install\n    your own server or get a [subscription service](https://www.traccar.org/product/tracking-server/).\n  contact:\n    name: Traccar Support\n    url: https://www.traccar.org/\n    email: support@traccar.org\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n- url: http://localhost:8082/api\n  description: Other Server\n  variables:\n    host:\n      default: localhost\n    port:\n      enum:\n      - '8082'\n      - '80'\n      default: '8082'\nsecurity:\n- basicAuth: []\ntags:\n- name: Server\n  description: Server information\n- name: Session\n  description: User session management\n- name: Devices\n  description: Device management\n- name: Groups\n  description: Group management\n- name: Users\n  description: User management\n- name: Permissions\n  description: User permissions and other object linking\n- name: Positions\n  description: Retrieving raw location information\n- name: Events\n  description: Retrieving event information\n- name: Reports\n  description: Reports generation\n- name: Notifications\n  description: User notifications management\n- name: Geofences\n  description: Geofence management\n- name: Commands\n  description: Sending commands to devices and stored command management\n- name: Attributes\n  description: Computed attributes management\n- name: Drivers\n  description: Drivers management\n- name: Maintenance\n  description: Maintenance management\n- name: Calendars\n  description: Calendar management\n- name: Statistics\n  description: Retrieving server statistics\npaths:\n  \"/commands\":\n    get:\n      operationId: getCommands\n      summary: Fetch a list of Saved Commands\n      tags:\n      - Commands\n      description: Without params, it returns a list of Saved Commands the user has\n        access to\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      - name: deviceId\n        in: query\n        description: Standard users can use this only with _deviceId_s, they have\n          access to\n        schema:\n          type: integer\n      - name: groupId\n        in: query\n        description: Standard users can use this only with _groupId_s, they have access\n          to\n        schema:\n          type: integer\n      - name: refresh\n        in: query\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Command\"\n    post:\n      operationId: postCommand\n      summary: Create a Saved Command\n      tags:\n      - Commands\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Command\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Command\"\n      x-codegen-request-body-name: body\n  \"/commands/{id}\":\n    put:\n      operationId: putCommand\n      summary: Update a Saved Command\n      tags:\n      - Commands\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Command\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Command\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Saved Command\n#      tags:\n#      - Commands\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/commands/send\":\n    get:\n      operationId: getSendCommands\n      summary: Fetch a list of Saved Commands supported by Device at the moment\n      description: Return a list of saved commands linked to Device and its groups,\n        filtered by current Device protocol support\n      tags:\n      - Commands\n      parameters:\n      - name: deviceId\n        in: query\n        description: Standard users can use this only with _deviceId_s, they have\n          access to\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Command\"\n        '400':\n          description: Could happen when the user doesn't have permission for the\n            device\n          content: {}\n    post:\n      operationId: sendCommands\n      summary: Dispatch commands to device\n      description: Dispatch a new command or Saved Command if _body.id_ set\n      tags:\n      - Commands\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Command\"\n        required: true\n      responses:\n        '200':\n          description: Command sent\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Command\"\n        '202':\n          description: Command queued\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Command\"\n        '400':\n          description: Could happen when the user doesn't have permission or an incorrect\n            command _type_ for the device\n          content: {}\n      x-codegen-request-body-name: body\n  \"/commands/types\":\n    get:\n      operationId: getCommandTypes\n      summary: Fetch a list of available Commands for the Device or all possible Commands\n        if Device ommited\n      tags:\n      - Commands\n      parameters:\n      - name: deviceId\n        in: query\n        description: Internal device identifier. Only works if device has already\n          reported some locations\n        schema:\n          type: integer\n      - name: protocol\n        in: query\n        description: Protocol name. Can be used instead of device id\n        schema:\n          type: string\n      - name: textChannel\n        in: query\n        description: When `true` return SMS commands. If not specified or `false`\n          return data commands\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/CommandType\"\n        '400':\n          description: Could happen when trying to fetch from a device the user does\n            not have permission\n          content: {}\n  \"/devices\":\n    get:\n      operationId: getDevices\n      summary: Fetch a list of Devices\n      description: Without any params, returns a list of the user's devices\n      tags:\n      - Devices\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      - name: id\n        in: query\n        description: To fetch one or more devices. Multiple params can be passed like\n          `id=31\u0026id=42`\n        schema:\n          type: integer\n      - name: uniqueId\n        in: query\n        description: To fetch one or more devices. Multiple params can be passed like\n          `uniqueId=333331\u0026uniqieId=44442`\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Device\"\n        '400':\n          description: No permission\n          content: {}\n    post:\n      operationId: postDevice\n      summary: Create a Device\n      tags:\n      - Devices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Device\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Device\"\n      x-codegen-request-body-name: body\n  \"/devices/{id}\":\n    put:\n      operationId: putDevice\n      summary: Update a Device\n      tags:\n      - Devices\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Device\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Device\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Device\n#      tags:\n#      - Devices\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/devices/{id}/accumulators\":\n    put:\n      operationId: putDeviceAccumulators\n      summary: Update total distance and hours of the Device\n      tags:\n      - Devices\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/DeviceAccumulators\"\n        required: true\n      responses:\n        '204':\n          description: No Content\n          content: {}\n      x-codegen-request-body-name: body\n  \"/groups\":\n    get:\n      operationId: getGroups\n      summary: Fetch a list of Groups\n      description: Without any params, returns a list of the Groups the user belongs\n        to\n      tags:\n      - Groups\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Group\"\n    post:\n      operationId: postGroup\n      summary: Create a Group\n      tags:\n      - Groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Group\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Group\"\n        '400':\n          description: No permission\n          content: {}\n      x-codegen-request-body-name: body\n  \"/groups/{id}\":\n    put:\n      operationId: putGroup\n      summary: Update a Group\n      tags:\n      - Groups\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Group\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Group\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Group\n#      tags:\n#      - Groups\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/permissions\":\n    post:\n      operationId: postPermissions\n      summary: Link an Object to another Object\n      tags:\n      - Permissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Permission\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Permission\"\n        '400':\n          description: No permission\n          content: {}\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Unlink an Object from another Object\n#      tags:\n#      - Permissions\n#      requestBody:\n#        content:\n#          application/json:\n#            schema:\n#              \"$ref\": \"#/components/schemas/Permission\"\n#        required: true\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n#      x-codegen-request-body-name: body\n  \"/positions\":\n    get:\n      operationId: getPositions\n      summary: Fetches a list of Positions\n      description: We strongly recommend using [Traccar WebSocket API](https://www.traccar.org/traccar-api/)\n        instead of periodically polling positions endpoint. Without any params, it\n        returns a list of last known positions for all the user's Devices. _from_\n        and _to_ fields are not required with _id_.\n      tags:\n      - Positions\n      parameters:\n      - name: deviceId\n        in: query\n        description: _deviceId_ is optional, but requires the _from_ and _to_ parameters\n          when used\n        schema:\n          type: integer\n      - name: from\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        schema:\n          type: string\n          format: date-time\n      - name: id\n        in: query\n        description: To fetch one or more positions. Multiple params can be passed\n          like `id=31\u0026id=42`\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Position\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Position\"\n            application/gpx+xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Position\"\n  \"/users\":\n    get:\n      operationId: getUsers\n      summary: Fetch a list of Users\n      tags:\n      - Users\n      parameters:\n      - name: userId\n        in: query\n        description: Can only be used by admin or manager users\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/User\"\n        '400':\n          description: No Permission\n          content: {}\n    post:\n      operationId: postUser\n      summary: Create a User\n      tags:\n      - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/User\"\n      x-codegen-request-body-name: body\n  \"/users/{id}\":\n    put:\n      operationId: putUser\n      summary: Update a User\n      tags:\n      - Users\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/User\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/User\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a User\n#      tags:\n#      - Users\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/notifications\":\n    get:\n      operationId: getNotifications\n      summary: Fetch a list of Notifications\n      description: Without params, it returns a list of Notifications the user has\n        access to\n      tags:\n      - Notifications\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      - name: deviceId\n        in: query\n        description: Standard users can use this only with _deviceId_s, they have\n          access to\n        schema:\n          type: integer\n      - name: groupId\n        in: query\n        description: Standard users can use this only with _groupId_s, they have access\n          to\n        schema:\n          type: integer\n      - name: refresh\n        in: query\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Notification\"\n    post:\n      operationId: postNotification\n      summary: Create a Notification\n      tags:\n      - Notifications\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Notification\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Notification\"\n      x-codegen-request-body-name: body\n  \"/notifications/{id}\":\n    put:\n      operationId: putNotification\n      summary: Update a Notification\n      tags:\n      - Notifications\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Notification\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Notification\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Notification\n#      tags:\n#      - Notifications\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/notifications/types\":\n    get:\n      operationId: getNotificationTypes\n      summary: Fetch a list of available Notification types\n      tags:\n      - Notifications\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/NotificationType\"\n  \"/notifications/test\":\n    post:\n      operationId: sendNotifications\n      summary: Send test notification to current user via Email and SMS\n      tags:\n      - Notifications\n      responses:\n        '204':\n          description: Successful sending\n          content: {}\n        '400':\n          description: Could happen if sending has failed\n          content: {}\n  \"/geofences\":\n    get:\n      operationId: getGeofences\n      summary: Fetch a list of Geofences\n      description: Without params, it returns a list of Geofences the user has access\n        to\n      tags:\n      - Geofences\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      - name: deviceId\n        in: query\n        description: Standard users can use this only with _deviceId_s, they have\n          access to\n        schema:\n          type: integer\n      - name: groupId\n        in: query\n        description: Standard users can use this only with _groupId_s, they have access\n          to\n        schema:\n          type: integer\n      - name: refresh\n        in: query\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Geofence\"\n    post:\n      operationId: postGeofence\n      summary: Create a Geofence\n      tags:\n      - Geofences\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Geofence\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Geofence\"\n      x-codegen-request-body-name: body\n  \"/geofences/{id}\":\n    put:\n      operationId: putGeofence\n      summary: Update a Geofence\n      tags:\n      - Geofences\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Geofence\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Geofence\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Geofence\n#      tags:\n#      - Geofences\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/events/{id}\":\n    get:\n      operationId: getEvent\n      tags:\n      - Events\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Event\"\n  \"/reports/route\":\n    get:\n      operationId: getReportsRoute\n      summary: Fetch a list of Positions within the time period for the Devices or\n        Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n      - Reports\n      parameters:\n      - name: deviceId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: groupId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: from\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Position\"\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Position\"\n  \"/reports/events\":\n    get:\n      operationId: getReportsEvents\n      summary: Fetch a list of Events within the time period for the Devices or Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n      - Reports\n      parameters:\n      - name: deviceId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: groupId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: type\n        in: query\n        description: \"% can be used to return events of all types\"\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n      - name: from\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Event\"\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Event\"\n  \"/reports/summary\":\n    get:\n      operationId: getReportsSummary\n      summary: Fetch a list of ReportSummary within the time period for the Devices\n        or Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n      - Reports\n      parameters:\n      - name: deviceId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: groupId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: from\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/ReportSummary\"\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/ReportSummary\"\n  \"/reports/trips\":\n    get:\n      operationId: getReportsTrips\n      summary: Fetch a list of ReportTrips within the time period for the Devices\n        or Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n      - Reports\n      parameters:\n      - name: deviceId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: groupId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: from\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/ReportTrips\"\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/ReportTrips\"\n  \"/reports/stops\":\n    get:\n      operationId: getReportsStops\n      summary: Fetch a list of ReportStops within the time period for the Devices\n        or Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n      - Reports\n      parameters:\n      - name: deviceId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: groupId\n        in: query\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n      - name: from\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/ReportStops\"\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/ReportStops\"\n  \"/statistics\":\n    get:\n      operationId: getStatistics\n      summary: Fetch server Statistics\n      tags:\n      - Statistics\n      parameters:\n      - name: from\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Statistics\"\n  \"/calendars\":\n    get:\n      operationId: getCalendars\n      summary: Fetch a list of Calendars\n      description: Without params, it returns a list of Calendars the user has access\n        to\n      tags:\n      - Calendars\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Calendar\"\n    post:\n      operationId: postCalendar\n      summary: Create a Calendar\n      tags:\n      - Calendars\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Calendar\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Calendar\"\n      x-codegen-request-body-name: body\n  \"/calendars/{id}\":\n    put:\n      operationId: putCalendar\n      summary: Update a Calendar\n      tags:\n      - Calendars\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Calendar\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Calendar\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Calendar\n#      tags:\n#      - Calendars\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/attributes/computed\":\n    get:\n      operationId: getListAttributes\n      summary: Fetch a list of Attributes\n      description: Without params, it returns a list of Attributes the user has access\n        to\n      tags:\n      - Attributes\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      - name: deviceId\n        in: query\n        description: Standard users can use this only with _deviceId_s, they have\n          access to\n        schema:\n          type: integer\n      - name: groupId\n        in: query\n        description: Standard users can use this only with _groupId_s, they have access\n          to\n        schema:\n          type: integer\n      - name: refresh\n        in: query\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Attribute\"\n    post:\n      operationId: postAttribute\n      summary: Create an Attribute\n      tags:\n      - Attributes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Attribute\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Attribute\"\n      x-codegen-request-body-name: body\n  \"/attributes/computed/{id}\":\n    put:\n      operationId: putAttribute\n      summary: Update an Attribute\n      tags:\n      - Attributes\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Attribute\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Attribute\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete an Attribute\n#      tags:\n#      - Attributes\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/drivers\":\n    get:\n      operationId: getDrivers\n      summary: Fetch a list of Drivers\n      description: Without params, it returns a list of Drivers the user has access\n        to\n      tags:\n      - Drivers\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      - name: deviceId\n        in: query\n        description: Standard users can use this only with _deviceId_s, they have\n          access to\n        schema:\n          type: integer\n      - name: groupId\n        in: query\n        description: Standard users can use this only with _groupId_s, they have access\n          to\n        schema:\n          type: integer\n      - name: refresh\n        in: query\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Driver\"\n    post:\n      operationId: postDriver\n      summary: Create a Driver\n      tags:\n      - Drivers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Driver\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Driver\"\n      x-codegen-request-body-name: body\n  \"/drivers/{id}\":\n    put:\n      operationId: putDriver\n      summary: Update a Driver\n      tags:\n      - Drivers\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Driver\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Driver\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Driver\n#      tags:\n#      - Drivers\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\n  \"/maintenance\":\n    get:\n      operationId: getMaintenances\n      summary: Fetch a list of Maintenance\n      description: Without params, it returns a list of Maintenance the user has access\n        to\n      tags:\n      - Maintenance\n      parameters:\n      - name: all\n        in: query\n        description: Can only be used by admins or managers to fetch all entities\n        schema:\n          type: boolean\n      - name: userId\n        in: query\n        description: Standard users can use this only with their own _userId_\n        schema:\n          type: integer\n      - name: deviceId\n        in: query\n        description: Standard users can use this only with _deviceId_s, they have\n          access to\n        schema:\n          type: integer\n      - name: groupId\n        in: query\n        description: Standard users can use this only with _groupId_s, they have access\n          to\n        schema:\n          type: integer\n      - name: refresh\n        in: query\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/Maintenance\"\n    post:\n      operationId: postMaintenance\n      summary: Create a Maintenance\n      tags:\n      - Maintenance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Maintenance\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Maintenance\"\n      x-codegen-request-body-name: body\n  \"/maintenance/{id}\":\n    put:\n      operationId: putMaintenance\n      summary: Update a Maintenance\n      tags:\n      - Maintenance\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Maintenance\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Maintenance\"\n      x-codegen-request-body-name: body\n#    delete:\n#      summary: Delete a Maintenance\n#      tags:\n#      - Maintenance\n#      parameters:\n#      - name: id\n#        in: path\n#        required: true\n#        schema:\n#          type: integer\n#      responses:\n#        '204':\n#          description: No Content\n#          content: {}\ncomponents:\n  schemas:\n    Position:\n      type: object\n      properties:\n        id:\n          type: integer\n        deviceId:\n          type: integer\n        protocol:\n          type: string\n        deviceTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        fixTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        serverTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        outdated:\n          type: boolean\n        valid:\n          type: boolean\n        latitude:\n          type: number\n        longitude:\n          type: number\n        altitude:\n          type: number\n        speed:\n          type: number\n          description: in knots\n        course:\n          type: number\n        address:\n          type: string\n        accuracy:\n          type: number\n        network:\n          type: object\n          properties: {}\n        attributes:\n          type: object\n          properties: {}\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        email:\n          type: string\n        phone:\n          type: string\n        readonly:\n          type: boolean\n        administrator:\n          type: boolean\n        map:\n          type: string\n        latitude:\n          type: number\n        longitude:\n          type: number\n        zoom:\n          type: integer\n        password:\n          type: string\n        twelveHourFormat:\n          type: boolean\n        coordinateFormat:\n          type: string\n        disabled:\n          type: boolean\n        expirationTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        deviceLimit:\n          type: integer\n        userLimit:\n          type: integer\n        deviceReadonly:\n          type: boolean\n        limitCommands:\n          type: boolean\n        poiLayer:\n          type: string\n        token:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Server:\n      type: object\n      properties:\n        id:\n          type: integer\n        registration:\n          type: boolean\n        readonly:\n          type: boolean\n        deviceReadonly:\n          type: boolean\n        limitCommands:\n          type: boolean\n        map:\n          type: string\n        bingKey:\n          type: string\n        mapUrl:\n          type: string\n        poiLayer:\n          type: string\n        latitude:\n          type: number\n        longitude:\n          type: number\n        zoom:\n          type: integer\n        twelveHourFormat:\n          type: boolean\n        version:\n          type: string\n        forceSettings:\n          type: boolean\n        coordinateFormat:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Command:\n      type: object\n      properties:\n        id:\n          type: integer\n        deviceId:\n          type: integer\n        description:\n          type: string\n        type:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Device:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        uniqueId:\n          type: string\n        status:\n          type: string\n        disabled:\n          type: boolean\n        lastUpdate:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        positionId:\n          type: integer\n        groupId:\n          type: integer\n        phone:\n          type: string\n        model:\n          type: string\n        contact:\n          type: string\n        category:\n          type: string\n        geofenceIds:\n          type: array\n          items:\n            type: integer\n        attributes:\n          type: object\n          properties: {}\n    Group:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        groupId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    Permission:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: User Id, can be only first parameter\n        deviceId:\n          type: integer\n          description: Device Id, can be first parameter or second only in combination\n            with userId\n        groupId:\n          type: integer\n          description: Group Id, can be first parameter or second only in combination\n            with userId\n        geofenceId:\n          type: integer\n          description: Geofence Id, can be second parameter only\n        calendarId:\n          type: integer\n          description: Calendar Id, can be second parameter only and only in combination\n            with userId\n        attributeId:\n          type: integer\n          description: Computed Attribute Id, can be second parameter only\n        driverId:\n          type: integer\n          description: Driver Id, can be second parameter only\n        managedUserId:\n          type: integer\n          description: User Id, can be second parameter only and only in combination\n            with userId\n      description: 'This is a permission map that contain two object indexes. It is\n        used to link/unlink objects. Order is important. Example: { deviceId:8, geofenceId:\n        16 }'\n    CommandType:\n      type: object\n      properties:\n        type:\n          type: string\n    Geofence:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        area:\n          type: string\n        calendarId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    Notification:\n      type: object\n      properties:\n        id:\n          type: integer\n        type:\n          type: string\n        always:\n          type: boolean\n        web:\n          type: boolean\n        mail:\n          type: boolean\n        sms:\n          type: boolean\n        calendarId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    NotificationType:\n      type: object\n      properties:\n        type:\n          type: string\n    Event:\n      type: object\n      properties:\n        id:\n          type: integer\n        type:\n          type: string\n        serverTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        deviceId:\n          type: integer\n        positionId:\n          type: integer\n        geofenceId:\n          type: integer\n        maintenanceId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    ReportSummary:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        maxSpeed:\n          type: number\n          description: in knots\n        averageSpeed:\n          type: number\n          description: in knots\n        distance:\n          type: number\n          description: in meters\n        spentFuel:\n          type: number\n          description: in liters\n        engineHours:\n          type: integer\n    ReportTrips:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        maxSpeed:\n          type: number\n          description: in knots\n        averageSpeed:\n          type: number\n          description: in knots\n        distance:\n          type: number\n          description: in meters\n        spentFuel:\n          type: number\n          description: in liters\n        duration:\n          type: integer\n        startTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        startAddress:\n          type: string\n        startLat:\n          type: number\n        startLon:\n          type: number\n        endTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        endAddress:\n          type: string\n        endLat:\n          type: number\n        endLon:\n          type: number\n        driverUniqueId:\n          type: integer\n        driverName:\n          type: string\n    ReportStops:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        duration:\n          type: integer\n        startTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        address:\n          type: string\n        lat:\n          type: number\n        lon:\n          type: number\n        endTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        spentFuel:\n          type: number\n          description: in liters\n        engineHours:\n          type: integer\n    Statistics:\n      type: object\n      properties:\n        captureTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        activeUsers:\n          type: integer\n        activeDevices:\n          type: integer\n        requests:\n          type: integer\n        messagesReceived:\n          type: integer\n        messagesStored:\n          type: integer\n    DeviceAccumulators:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        totalDistance:\n          type: number\n          description: in meters\n        hours:\n          type: number\n    Calendar:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        data:\n          type: string\n          description: base64 encoded in iCalendar format\n        attributes:\n          type: object\n          properties: {}\n    Attribute:\n      type: object\n      properties:\n        id:\n          type: integer\n        description:\n          type: string\n        attribute:\n          type: string\n        expression:\n          type: string\n        type:\n          type: string\n          description: String|Number|Boolean\n    Driver:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        uniqueId:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Maintenance:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        type:\n          type: string\n        start:\n          type: number\n        period:\n          type: number\n        attributes:\n          type: object\n          properties: {}\n  parameters:\n    entityId:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: integer\n    all:\n      name: all\n      in: query\n      description: Can only be used by admins or managers to fetch all entities\n      schema:\n        type: boolean\n    refresh:\n      name: refresh\n      in: query\n      schema:\n        type: boolean\n    userId:\n      name: userId\n      in: query\n      description: Standard users can use this only with their own _userId_\n      schema:\n        type: integer\n    deviceId:\n      name: deviceId\n      in: query\n      description: Standard users can use this only with _deviceId_s, they have access\n        to\n      schema:\n        type: integer\n    groupId:\n      name: groupId\n      in: query\n      description: Standard users can use this only with _groupId_s, they have access\n        to\n      schema:\n        type: integer\n    deviceIdArray:\n      name: deviceId\n      in: query\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: integer\n    groupIdArray:\n      name: groupId\n      in: query\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: integer\n    fromTime:\n      name: from\n      in: query\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      required: true\n      schema:\n        type: string\n        format: date-time\n    toTime:\n      name: to\n      in: query\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      required: true\n      schema:\n        type: string\n        format: date-time\n  requestBodies:\n    Device:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Device\"\n      required: true\n    Permission:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Permission\"\n      required: true\n    Group:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Group\"\n      required: true\n    User:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/User\"\n      required: true\n    Geofence:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Geofence\"\n      required: true\n    Calendar:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Calendar\"\n      required: true\n    Attribute:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Attribute\"\n      required: true\n    Driver:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Driver\"\n      required: true\n    Command:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Command\"\n      required: true\n    Notification:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Notification\"\n      required: true\n    Maintenance:\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/Maintenance\"\n      required: true\n  securitySchemes:\n    basicAuth:\n      type: http\n      description: Basic HTTP authorization with _email_ and _password_\n      scheme: basic\n",
			"canonicalURL": "/github.com/isa-group/RESTest@e54ed029ad579e722668a984c5fa64e20244ce08/-/blob/src/test/resources/Traccar/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/isa-group/RESTest/blob/e54ed029ad579e722668a984c5fa64e20244ce08/src/test/resources/Traccar/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}