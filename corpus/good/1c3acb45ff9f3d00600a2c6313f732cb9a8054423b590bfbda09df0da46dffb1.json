{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Bryan-Guner-Backup/WULF"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "dockerql/openapi.json",
			"byteSize": 9505,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"dockerql\",\n        \"description\": \"A read-only SQL-like interface for docker registries. See below both API list and database schema.\",\n        \"license\": {\n            \"name\": \"MIT\",\n            \"url\": \"https://github.com/simplyCoders/dockerquery/blob/main/LICENSE\"\n        },\n        \"version\": \"0.0.1\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://localhost:8080/v1\"\n        }\n    ],\n    \"components\": {\n        \"schemas\": {\n            \"registries\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"registry\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the registry as defined in the $DOCKER_REGISTRIES_FILE.\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"The registry type. Currently dockerhub or gcr.\"\n                    },\n                    \"host\": {\n                        \"type\": \"string\",\n                        \"description\": \"The default host to be used for queries against this registry. E.g 'hub.docker.com' or 'gcr.io'.\"\n                    },\n                    \"namespace\": {\n                        \"type\": \"string\",\n                        \"description\": \"The default namespace to be used for queries against this registry. Namespaces have different use for each registry type. Dockerhub: namespaces are organizations. ECR: namespaces are regions. GCR. namespaces are project-ids.\"\n                    }\n                }\n            },\n            \"namespaces\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"registry\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the registry.\"\n                    },\n                    \"host\": {\n                        \"type\": \"string\",\n                        \"description\": \"The host.\"\n                    },\n                    \"namespace\": {\n                        \"type\": \"string\",\n                        \"description\": \"The namespace.\"\n                    }\n                }\n            },\n            \"repos\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"registry\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the registry.\"\n                    },\n                    \"host\": {\n                        \"type\": \"string\",\n                        \"description\": \"The host.\"\n                    },\n                    \"namespace\": {\n                        \"type\": \"string\",\n                        \"description\": \"The namespace.\"\n                    },\n                    \"repo\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the repo.\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"The repo description. Dockerhub only.\"\n                    },\n                    \"isPrivate\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Is this repo private?. Dockerhub only.\"\n                    },\n                    \"updated\": {\n                        \"type\": \"string\",\n                        \"description\": \"Last time repo was updated (simplified extended ISO 8601). Dockerhub only.\"\n                    },\n                    \"pulls\": {\n                        \"type\": \"number\",\n                        \"description\": \"Dockerhub's pull_count. Dockerhub only.\"\n                    },\n                    \"stars\": {\n                        \"type\": \"number\",\n                        \"description\": \"Dockerhub's stars_count. Dockerhub only.\"\n                    },\n                    \"arn\": {\n                        \"type\": \"string\",\n                        \"description\": \"ECR's repositoryArn. ECR only.\"\n                    },\n                    \"uri\": {\n                        \"type\": \"string\",\n                        \"description\": \"ECR's repositoryUri. ECR only.\"\n                    },\n                    \"created\": {\n                        \"type\": \"number\",\n                        \"description\": \"ECR's createdAt. ECR only.\"\n                    },\n                    \"imageImmutability\": {\n                        \"type\": \"string\",\n                        \"description\": \"ECR's imageTagMutability. ECR only.\"\n                    },\n                    \"scanOnPush\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"True if ECR's scanOnPush is enabled. ECR only.\"\n                    }\n                }\n            },\n            \"images\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"registry\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the registry.\"\n                    },\n                    \"host\": {\n                        \"type\": \"string\",\n                        \"description\": \"The host.\"\n                    },\n                    \"namespace\": {\n                        \"type\": \"string\",\n                        \"description\": \"The namespace.\"\n                    },\n                    \"repo\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the repo.\"\n                    },\n                    \"digest\": {\n                        \"type\": \"string\",\n                        \"description\": \"sha256 representing uniquely the image.\"\n                    },\n                    \"tag\": {\n                        \"type\": \"string\",\n                        \"description\": \"Tag name if one was assigned to the image.\"\n                    },\n                    \"size\": {\n                        \"type\": \"number\",\n                        \"description\": \"Size in bytes of the image.\"\n                    },\n                    \"architecture\": {\n                        \"type\": \"string\",\n                        \"description\": \"Architecture, such as amd64. Dockerhub only.\"\n                    },\n                    \"os\": {\n                        \"type\": \"string\",\n                        \"description\": \"OS type, such as linux. Dockerhub only.\"\n                    },\n                    \"created\": {\n                        \"type\": \"string\",\n                        \"description\": \"Creation time of the image (simplified extended ISO 8601).\"\n                    },\n                    \"pushed\": {\n                        \"type\": \"string\",\n                        \"description\": \"Last time the image was pushed (simplified extended ISO 8601). Dockerhub only.\"\n                    },\n                    \"pulled\": {\n                        \"type\": \"string\",\n                        \"description\": \"Last time the image was pulled (simplified extended ISO 8601). Dockerhub only.\"\n                    }\n                }\n            }\n        }\n    },\n    \"paths\": {\n        \"/query\": {\n            \"get\": {\n                \"description\": \"Query endpoint, get SQL statemnent and returns array of records\",\n                \"operationId\": \"query\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"query\",\n                        \"description\": \"SQL like query string\",\n                        \"example\": \"SELECT * FROM repos WHERE registry = \\\"public-gcr\\\" and namespace = \\\"distroless\\\"\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                },\n                                \"example\": {\n                                    \"code\": 200,\n                                    \"message\": \"Query executed successfully.\",\n                                    \"count\": 2,\n                                    \"data\": [\n                                        {\n                                            \"registry\": \"public-gcr\",\n                                            \"host\": \"gcr.io\",\n                                            \"namespace\": \"distroless\",\n                                            \"repo\": \"base\"\n                                        },\n                                        {\n                                            \"registry\": \"public-gcr\",\n                                            \"host\": \"gcr.io\",\n                                            \"namespace\": \"distroless\",\n                                            \"repo\": \"base-debian10\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad request\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Forbidden\"\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/Bryan-Guner-Backup/WULF@59d70ce2d4fe148e78ed112746d6963eeccaa6e9/-/blob/dockerql/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/Bryan-Guner-Backup/WULF/blob/59d70ce2d4fe148e78ed112746d6963eeccaa6e9/dockerql/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}