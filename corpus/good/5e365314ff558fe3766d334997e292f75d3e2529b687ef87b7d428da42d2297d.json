{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/capsulecrm/openapi.yml",
			"byteSize": 64199,
			"content": "openapi: 3.0.0\ninfo:\n  title: Capsule CRM API\n  description: |\n    This is a generated connector for [Capsule CRM API v2](https://developer.capsulecrm.com/v2/overview/getting-started) OpenAPI specification.\n    Capsule CRM keeps track of the people and companies you do business with, opportunities in the pipeline and what needs to be done.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [Capsule CRM account](https://capsulecrm.com) and obtain tokens by following [this guide](https://developer.capsulecrm.com/v2/overview/authentication).\n  x-ballerina-display:\n    label: Capsule CRM\n    iconPath: \"icon.png\"\n  version: \"v2\"\nsecurity:\n- bearerAuth: []\nservers:\n  - url: 'https://api.capsulecrm.com'\ntags:\n  - name: case\n  - name: opportunity\n  - name: party\npaths:\n  /api/v2/kases:\n    post:\n      summary: \"Creates a new case.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Case#createCase\"\n      parameters: \n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value). \"\n          schema:\n            type: string\n          required: false\n      requestBody:\n        description: An object with a single property kase which must be a Case object. Note that one or more tracks can be applied to the case by including the relevant track ids in a tracks array. This is a convenient shortcut to apply tracks to new cases only, and tracks is not a field of Case objects. Tracks can be specified using a definition object or the ID shorthand, or a mixture of both.\n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateCaseRequest'\n      tags:\n        - \"case\"\n      responses:\n        201:\n          description: \"Created case stored in Capsule\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/CreatedCase'\n      operationId: \"create_case\"\n    get:\n      summary: \"Retrieves the collection of Cases on the Capsule account.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Case#listCases\"\n      parameters:\n        - in: \"query\"\n          name: \"since\"\n          description: \"If set then includes only entities that have been changed after this date. Must in be ISO8601 format.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"case\"\n      responses:\n        200:\n          description: \"An object with a single property kases which is an array of Case objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Cases'\n      operationId: \"list_cases\"\n  /api/v2/kases/search:\n    get:\n      summary: \"Search for cases on the Capsule account. This will return the same results as the global search inside Capsule.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Case#searchCases\"\n      parameters:\n        - in: \"query\"\n          name: \"q\"\n          description: \"The value to search for e.g. a name, a postcode or a phone number.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"case\"\n      responses:\n        200:\n          description: \"An object with a single property kases which is an array of Case objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Cases'\n      operationId: \"search_cases\"\n  /api/v2/kases/{caseId}:\n    get:\n      summary: \"Show a specific case.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Case#showCase\"\n      parameters:\n        - in: \"path\"\n          name: \"caseId\"\n          description: \"The case ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"case\"\n      responses:\n        200:\n          description: \"A Case object.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/CaseObject'\n      operationId: \"show_case\"\n  /api/v2/parties/{partyId}/kases:\n    get:\n      summary: \"Retrieves the collection of all cases associated with the given party.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Case#listCasesByParty\"\n      parameters:\n        - in: \"path\"\n          name: \"partyId\"\n          description: \"The party ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"case\"\n      responses:\n        200:\n          description: \"An object with a single property kases which is an array of Case objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Cases'\n      operationId: \"list_cases_by_party\"\n  /api/v2/opportunities:\n    post:\n      summary: \"Creates a new opportunity.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Opportunity#createOpportunity\"\n      parameters: \n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value). \"\n          schema:\n            type: string\n          required: false\n      requestBody:\n        description: An object with a single property opportunity which must be an Opportunity object. One or more tracks can be applied to the opportunity by including the relevant track ids in a tracks array. This is a convenient shortcut to apply tracks to new opportunities only, and tracks is not a field of Opportunity objects. Tracks can be specified using a definition object or the ID shorthand, or a mixture of both.\n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateOpportunityRequest'\n      tags:\n        - \"opportunity\"\n      responses:\n        201:\n          description: \"Created opportunity stored in Capsule\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/CreatedOpportunity'\n      operationId: \"create_opportunity\"\n    get:\n      summary: \"Retrieves the collection of Opportunities on the Capsule account.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Opportunity#listOpportunities\"\n      parameters:\n        - in: \"query\"\n          name: \"since\"\n          description: \"If set then includes only entities that have been changed after this date. Must in be ISO8601 format.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), party (assigned party), milestone (the opportunity milestone), and missingImportantFields (indicates if an opportunity has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"opportunity\"\n      responses:\n        200:\n          description: \"An object with a single property opportunity which is an array of Opportunity objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Opportunities'\n      operationId: \"list_opportunities\"\n  /api/v2/opportunities/search:\n    get:\n      summary: \"Search for opportunities on the Capsule account. This will return the same results as the global search inside Capsule. If you're looking for a more structured search endpoint you can use Filters to search by a specific field or tag.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Opportunity#searchOpportunities\"\n      parameters:\n        - in: \"query\"\n          name: \"q\"\n          description: \"The value to search for e.g. a name, a postcode or a phone number.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"opportunity\"\n      responses:\n        200:\n          description: \"An object with a single property opportunities which is an array of Opportunity objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Opportunities'\n      operationId: \"search_opportunities\"\n  /api/v2/opportunities/{opportunityId}:\n    get:\n      summary: \"Returns a specific opportunity.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Opportunity#showOpportunity\"\n      parameters:\n        - in: \"path\"\n          name: \"opportunityId\"\n          description: \"The opportunity ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), party (assigned party), milestone (the opportunity milestone), and missingImportantFields (indicates if an opportunity has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"opportunity\"\n      responses:\n        200:\n          description: \"An Opportunity object.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/OpportunityObject'\n      operationId: \"show_opportunity\"\n    put:\n      summary: \"Updates an existing opportunity.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Opportunity#updateOpportunity\"\n      parameters: \n        - in: \"path\"\n          name: \"opportunityId\"\n          description: \"The opportunity ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), party (assigned party), milestone (the opportunity milestone), and missingImportantFields (indicates if an opportunity has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      requestBody:\n        description: An object with a single property opportunity which must be an Opportunity object. Fields that are not included in the request will remain unchanged. An owner and/or team are required on an opportunity.\n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/UpdateOpportunityRequest'\n      tags:\n        - \"opportunity\"\n      responses:\n        200:\n          description: \"All good\"\n      operationId: \"update_opportunity\"\n    delete:\n      summary: \"Fully delete a specific opportunity from Capsule.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Opportunity#deleteOpportunity\"\n      parameters:\n        - in: \"path\"\n          name: \"opportunityId\"\n          description: \"The opportunity ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"opportunity\"\n      responses:\n        204:\n          description: \"An empty body if the opportunity was successfully deleted.\"\n      operationId: \"delete_opportunity\"\n  /api/v2/parties/{partyId}/opportunities:\n    get:\n      summary: \"Retrieves the collection of all opportunities associated with the given party.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Opportunity#listOpportunitiesByParty\"\n      parameters:\n        - in: \"path\"\n          name: \"partyId\"\n          description: \"The party ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags ( tags), fields (custom fields and fields in DataTags), party (assigned party), opportunity (the associated opportunity), and missingImportantFields (indicates if a case has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"opportunity\"\n      responses:\n        200:\n          description: \"An object with a single property opportunities which is an array of Opportunity objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Opportunities'\n      operationId: \"list_opportunities_by_party\"\n  /api/v2/parties:\n    post:\n      summary: \"Creates a new party.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Party#createParty\"\n      parameters: \n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), organisation (extended organisation details for people), and missingImportantFields (indicates if a party has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      requestBody:\n        description: An object with a single property party which must be a Party object.\n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreatePartyRequest'\n      tags:\n        - \"party\"\n      responses:\n        201:\n          description: \"Created party stored in Capsule\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/CreatedParty'\n      operationId: \"create_party\"\n    get:\n      summary: \"Retrieves the collection of Parties on the Capsule account.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Party#listParties\"\n      parameters:\n        - in: \"query\"\n          name: \"since\"\n          description: \"If set then includes only entities that have been changed after this date. Must in be ISO8601 format.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), organisation (extended organisation details for people), and missingImportantFields (indicates if a party has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"party\"\n      responses:\n        200:\n          description: \"An object with a single property parties which is an array of Party objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Parties'\n      operationId: \"list_parties\"\n  /api/v2/parties/search:\n    get:\n      summary: \"Search for parties on the Capsule account. This will return the same results as the global search inside Capsule.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Party#searchParties\"\n      parameters:\n        - in: \"query\"\n          name: \"q\"\n          description: \"The value to search for e.g. a name, a postcode or a phone number.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), organisation (extended organisation details for people), and missingImportantFields (indicates if a party has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"party\"\n      responses:\n        200:\n          description: \"An object with a single property parties which is an array of Party objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Parties'\n      operationId: \"search_parties\"\n  /api/v2/parties/{partyId}:\n    get:\n      summary: \"Show a specific person or organisation.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Party#showParty\"\n      parameters:\n        - in: \"path\"\n          name: \"partyId\"\n          description: \"The party ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), organisation (extended organisation details for people), and missingImportantFields (indicates if a party has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"party\"\n      responses:\n        200:\n          description: \"An object with a single property party which will contain a Party object.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/PartyObject'\n      operationId: \"show_party\"\n    put:\n      summary: \"Update an existing party.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Party#updateParty\"\n      parameters: \n        - in: \"path\"\n          name: \"partyId\"\n          description: \"The party ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are tags (tags), fields (custom fields and fields in DataTags), organisation (extended organisation details for people), and missingImportantFields (indicates if a party has any Important custom fields that are missing a value).\"\n          schema:\n            type: string\n          required: false\n      requestBody:\n        description:  object with a single property party which must be a Party object. Fields that are not included in the request will remain unchanged.\n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/UpdatePartyRequest'\n      tags:\n        - \"party\"\n      responses:\n        200:\n          description: \"All good\"\n      operationId: \"update_party\"\n    delete:\n      summary: \"Fully delete the specific party from Capsule.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Party#deleteParty\"\n      parameters:\n        - in: \"path\"\n          name: \"partyId\"\n          description: \"The party ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"party\"\n      responses:\n        204:\n          description: \"An empty body if the party was successfully deleted.\"\n      operationId: \"delete_party\"\n  /api/v2/tasks:\n    post:\n      summary: \"Creates a new task.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Task#createTask\"\n      parameters: \n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are party (the party this task is assigned to), opportunity (opportunity this task is on), kase (the case this task is on), owner (the owner of the task) and nextTask (the next task).\"\n          schema:\n            type: string\n          required: false\n      requestBody:\n        description: An object with a single property task which must be a Task object.\n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateTaskRequest'\n      tags:\n        - \"task\"\n      responses:\n        201:\n          description: \"Created task stored in Capsule\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/CreatedTask'\n      operationId: \"create_task\"\n    get:\n      summary: \"Retrieves the collection of Tasks on the Capsule account. By default the body will contain only the open tasks. If you want to retrieve pending and/or completed tasks use the status query parameter.\"\n      description: \"https://developer.capsulecrm.com/v2/operations/Task#listTasks\"\n      parameters:\n        - in: \"query\"\n          name: \"page\"\n          description: \"The page of results to return. Default: 1\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"perPage\"\n          description: \"The number of entities to return per page. Value must be between 1 and 100. Default: 50\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"embed\"\n          description: \"Can be used to request additional data that aren’t included in the response by default. If provided, should be a comma separated list of strings. Supported values for this endpoint are party (the party this task is assigned to), opportunity (opportunity this task is on), kase (the case this task is on), owner (the owner of the task) and nextTask (the next task).\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"status\"\n          description: \"Filter the response based on the status of the task. Must be a comma separated list of strings. Accepted values are open, completed and pending.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"task\"\n      responses:\n        200:\n          description: \"An object with a single property tasks which is an array of Task objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Tasks'\n      operationId: \"list_tasks\"\n\ncomponents:\n  schemas:\n    CreateCaseRequest:\n      type: object\n      properties:\n        kase:\n          $ref: '#/components/schemas/CaseRequest'\n      description: An object with a single property kase which must be a Case object. Note that one or more tracks can be applied to the case by including the relevant track ids in a tracks array. This is a convenient shortcut to apply tracks to new cases only, and tracks is not a field of Case objects. Tracks can be specified using a definition object or the ID shorthand, or a mixture of both.\n    CreatedCase:\n      type: object\n      properties:\n        kase:\n          $ref: '#/components/schemas/Case'\n      description: Created case stored in Capsule\n    CaseObject:\n      type: object\n      properties:\n        kase:\n          $ref: '#/components/schemas/Case'\n      description: A Case object.\n    Case:\n      type: object\n      required:\n        - \"party\"\n        - \"name\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this case.\n        party:\n          $ref: '#/components/schemas/NestedParty'\n        name:\n          type: string\n          description: The name of this case.\n        description:\n          type: string\n          description: The description of this case.\n        owner:\n          $ref: '#/components/schemas/NestedUser'\n        team:\n          $ref: '#/components/schemas/NestedTeam'\n        status:\n          type: string\n          description: The status of the case. Accepted values are OPEN, CLOSED.\n        opportunity:\n          $ref: '#/components/schemas/NestedOpportunity'\n        createdAt:\n          type: string\n          description: The ISO date/time when this case was created.\n        updatedAt:\n          type: string\n          description: The ISO date/time when this case was last updated.\n        closedOn:\n          type: string\n          description: The ISO date when this case was closed.\n        lastContactedAt:\n          type: string\n          description: The ISO date/time when this case was last contacted. This field is automatically set by Capsule based on the attached history entries.\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/NestedTag'\n          description: An array of tags that are added to this case. This field is included in responses only if the embed parameter contains tags.\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n          description: An array of custom fields that are defined for this case. This field is included in responses only if the embed parameter contains fields.\n        missingImportantFields:\n          type: boolean\n          description: Indicates if this case has any Important custom fields that are missing a value. This field is included in responses only if the embed parameter contains missingImportantFields.\n      description: Represents a case file that is stored in Capsule.\n    CaseRequest:\n      type: object\n      required:\n        - \"party\"\n        - \"name\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this case.\n        party:\n          $ref: '#/components/schemas/NestedParty'\n        name:\n          type: string\n          description: The name of this case.\n        description:\n          type: string\n          description: The description of this case.\n        owner:\n          $ref: '#/components/schemas/NestedUser'\n        team:\n          $ref: '#/components/schemas/NestedTeam'\n        status:\n          type: string\n          description: The status of the case. Accepted values are OPEN, CLOSED.\n        opportunity:\n          $ref: '#/components/schemas/NestedOpportunity'\n        createdAt:\n          type: string\n          description: The ISO date/time when this case was created.\n        updatedAt:\n          type: string\n          description: The ISO date/time when this case was last updated.\n        closedOn:\n          type: string\n          description: The ISO date when this case was closed.\n        lastContactedAt:\n          type: string\n          description: The ISO date/time when this case was last contacted. This field is automatically set by Capsule based on the attached history entries.\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/NestedTag'\n          description: An array of tags that are added to this case. This field is included in responses only if the embed parameter contains tags.\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n          description: An array of custom fields that are defined for this case. This field is included in responses only if the embed parameter contains fields.\n        missingImportantFields:\n          type: boolean\n          description: Indicates if this case has any Important custom fields that are missing a value. This field is included in responses only if the embed parameter contains missingImportantFields.\n        tracks:\n          type: array\n          items:\n            $ref: '#/components/schemas/TracksDefinitionObject'\n          description: One or more tracks can be applied to the case by including the relevant track ids in a tracks array. This is a convenient shortcut to apply tracks to new cases only, and tracks is not a field of Case objects. Tracks can be specified using a definition object or the ID shorthand, or a mixture of both.\n      description: An object with a single property kase which must be a Case object. Note that one or more tracks can be applied to the case by including the relevant track ids in a tracks array. This is a convenient shortcut to apply tracks to new cases only, and tracks is not a field of Case objects. Tracks can be specified using a definition object or the ID shorthand, or a mixture of both.\n    NestedParty:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of the party.\n        firstName:\n          type: string\n          description: The first name of the person. This field is present only when type is person.\n        lastName:\n          type: string\n          description: The last name of the person. This field is present only when type is person.\n        name:\n          type: string\n          description: The name of the organisation. This field is present only when type is organisation. This will contain Private when the user calling the API endpoint doesn't have access to the party record.\n        type:\n          type: string\n          description: Represents if this party is a person or organisation. Accepted values are person, organisation\n        pictureURL:\n          type: string\n          description: A URL that represents the location of the profile picture for this party.\n        isRestricted:\n          type: boolean\n          description: Indicates whether this party is restricted for the user calling the API endpoint.\n      description: Represents a reference to a party. By default, contains only the id, name and pictureURL. If the field is included in the embed parameter will instead be a full Party object. If the party is restricted for the user calling the API endpoint, the full Party object is not included.\n    NestedUser:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of this user.\n        username:\n          type: string\n          description: The username of the user.\n        name:\n          type: string\n          description: The name of the user.     \n      description: Represents a reference to a user. By default, contains only the id, name and username. If the field is included in the embed parameter will instead be a full User object.\n    NestedTeam:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of this team.\n        name:\n          type: string\n          description: The name of the team.    \n      description: Represents a reference to a team.\n    NestedOpportunity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of the opportunity.\n        name:\n          type: string\n          description: The name of the opportunity. This will contain Private when the user calling the API endpoint doesn't have access to the opportunity record. \n        isRestricted:\n          type: boolean\n          description: Defines whether this opportunity is restricted for the user calling the API endpoint. \n      description: Represents a reference to an opportunity. By default, contains only the id and name. If the field is included in the embed parameter will instead be a full Opportunity object. If the opportunity is restricted for the user calling the API endpoint the full Opportunity object is not included.\n    NestedTag:\n      type: object\n      required:\n        - \"name\"\n      properties:\n        id:\n          type: integer\n          description: The id of this tag. Note that tags assignable to different entities (parties, cases or opportunities) can have the same id.\n        name:\n          type: string\n          description: The name of this tag.\n        description:\n          type: string\n          description: A longer description of this tag.\n      description: Represents an attached tag. Depending on the tag type this can be assignable to parties, opportunities or cases.\n    FieldValue:\n      type: object\n      required:\n        - \"value\"\n        - \"definition\"\n      properties:\n        id:\n          type: integer\n          description: The id of this value. Note that field values assignable to different entities (parties, cases or opportunities) can have the same id.\n        value:\n          oneOf:\n            - type: string\n            - type: boolean\n            - type: number\n          description: The value of this field. For text custom fields value is a string. For date custom fields value is a string in the format YYYY-MM-DD. For list custom fields value is a string and must match one of the options specified in the custom field definition. For boolean custom fields value is a boolean. For number custom fields value can be passed as either a string or a number, but will always be returned as a string by the API. For link custom fields value is a string URL and can include one of {id} - id, {name} - name, {email} - first email address, {phone} - first phone number, {phone[Mobile]} first mobile number, {custom[name of custom field]} - value of a custom field.\n        definition:\n          $ref: '#/components/schemas/NestedFieldDefinition'\n      description: Represents a value of a custom field. Depending on the custom field definition this can be assignable to parties, opportunities or cases.\n    NestedFieldDefinition:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The id of this custom field definition. Note that field definitions assignable to different entities (parties, opportunities or cases) can have the same id.\n        name:\n          type: string\n          description: The name of this custom field.\n      description: Represents a reference to a definition of a custom field. \n    TracksDefinitionObject:\n      type: object\n      properties:\n        definition:\n          oneOf:\n            - type: integer\n            - $ref: '#/components/schemas/TrackDefinitionId'\n          description: Tracks can be specified using a definition object or the ID shorthand, or a mixture of both. \n      description: Track definition object\n    TrackDefinitionId:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Track ID\n      description: Track Definition ID\n    Cases:\n      type: object\n      properties:\n        kases:\n          type: array\n          items:\n            $ref: '#/components/schemas/Case'\n          description: An array of Case objects.\n      description: An object with a single property kases which is an array of Case objects.\n    CreateOpportunityRequest:\n      type: object\n      properties:\n        opportunity:\n          $ref: '#/components/schemas/OpportunityRequest'\n      description: An object with a single property opportunity which must be an Opportunity object. One or more tracks can be applied to the opportunity by including the relevant track ids in a tracks array. This is a convenient shortcut to apply tracks to new opportunities only, and tracks is not a field of Opportunity objects. Tracks can be specified using a definition object or the ID shorthand, or a mixture of both.\n    UpdateOpportunityRequest:\n      type: object\n      properties:\n        opportunity:\n          $ref: '#/components/schemas/Opportunity'\n      description: An object with a single property opportunity which must be an Opportunity object. Fields that are not included in the request will remain unchanged. An owner and/or team are required on an opportunity.\n    CreatedOpportunity:\n      type: object\n      properties:\n        opportunity:\n          $ref: '#/components/schemas/Opportunity'\n      description: Created opportunity stored in Capsule\n    OpportunityObject:\n      type: object\n      properties:\n        opportunity:\n          $ref: '#/components/schemas/Opportunity'\n      description: An Opportunity object.\n    Opportunity:\n      type: object\n      required:\n        - \"party\"\n        - \"name\"\n        - \"milestone\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this opportunity.\n        createdAt:\n          type: string\n          description: The ISO date/time this opportunity was created.\n        updatedAt:\n          type: string\n          description: The ISO DateTime when this opportunity was last updated.\n        party:\n          $ref: '#/components/schemas/NestedParty'\n        lostReason:\n          $ref: '#/components/schemas/NestedLostReason'\n        name:\n          type: string\n          description: The name of this opportunity.\n        description:\n          type: string\n          description: The description of this opportunity.\n        owner:\n          $ref: '#/components/schemas/NestedUser'\n        team:\n          $ref: '#/components/schemas/NestedTeam'\n        milestone:\n          $ref: '#/components/schemas/NestedMilestone'\n        value:\n          $ref: '#/components/schemas/OpportunityValue'\n        expectedCloseOn:\n          type: string\n          description: The expected close date of this opportunity.\n        probability:\n          type: integer\n          description: The probability of winning this opportunity.\n        durationBasis:\n          type: string\n          description: The time unit used by the duration field. Accepted values are FIXED, HOUR, DAY, WEEK, MONTH, QUARTER, YEAR.\n        duration:\n          type: integer\n          description: The duration of this opportunity. Must be null if durationBasis is set to FIXED.\n        closedOn:\n          type: string\n          description: The date this opportunity was closed.\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/NestedTag'\n          description: An array of tags that are added to this opportunity. This field is included in responses only if the embed parameter contains tags.\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n          description: An array of custom fields that are defined for this opportunity. This field is included in responses only if the embed parameter contains fields.\n        lastContactedAt:\n          type: string\n          description: The ISO DateTime when this opportunity was last contacted.\n        lastStageChangedAt:\n          type: string\n          description: The ISO DateTime when this opportunity last had its milestone changes.\n        lastOpenMilestone:\n          $ref: '#/components/schemas/NestedMilestone'\n        missingImportantFields:\n          type: boolean\n          description: Indicates if this opportunity has any Important custom fields that are missing a value. This field is included in responses only if the embed parameter contains missingImportantFields.\n      description: Represents an opportunity that is stored in Capsule.\n    OpportunityRequest:\n      type: object\n      required:\n        - \"party\"\n        - \"name\"\n        - \"milestone\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this opportunity.\n        createdAt:\n          type: string\n          description: The ISO date/time this opportunity was created.\n        updatedAt:\n          type: string\n          description: The ISO DateTime when this opportunity was last updated.\n        party:\n          $ref: '#/components/schemas/NestedParty'\n        lostReason:\n          $ref: '#/components/schemas/NestedLostReason'\n        name:\n          type: string\n          description: The name of this opportunity.\n        description:\n          type: string\n          description: The description of this opportunity.\n        owner:\n          $ref: '#/components/schemas/NestedUser'\n        team:\n          $ref: '#/components/schemas/NestedTeam'\n        milestone:\n          $ref: '#/components/schemas/NestedMilestone'\n        value:\n          $ref: '#/components/schemas/OpportunityValue'\n        expectedCloseOn:\n          type: string\n          description: The expected close date of this opportunity.\n        probability:\n          type: integer\n          description: The probability of winning this opportunity.\n        durationBasis:\n          type: string\n          description: The time unit used by the duration field. Accepted values are FIXED, HOUR, DAY, WEEK, MONTH, QUARTER, YEAR.\n        duration:\n          type: integer\n          description: The duration of this opportunity. Must be null if durationBasis is set to FIXED.\n        closedOn:\n          type: string\n          description: The date this opportunity was closed.\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/NestedTag'\n          description: An array of tags that are added to this opportunity. This field is included in responses only if the embed parameter contains tags.\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n          description: An array of custom fields that are defined for this opportunity. This field is included in responses only if the embed parameter contains fields.\n        lastContactedAt:\n          type: string\n          description: The ISO DateTime when this opportunity was last contacted.\n        lastStageChangedAt:\n          type: string\n          description: The ISO DateTime when this opportunity last had its milestone changes.\n        lastOpenMilestone:\n          $ref: '#/components/schemas/NestedMilestone'\n        missingImportantFields:\n          type: boolean\n          description: Indicates if this opportunity has any Important custom fields that are missing a value. This field is included in responses only if the embed parameter contains missingImportantFields.\n        tracks:\n          type: array\n          items:\n            $ref: '#/components/schemas/TracksDefinitionObject'\n          description: One or more tracks can be applied to the case by including the relevant track ids in a tracks array. This is a convenient shortcut to apply tracks to new cases only, and tracks is not a field of Case objects. Tracks can be specified using a definition object or the ID shorthand, or a mixture of both.\n      description: Represents an opportunity that is stored in Capsule.\n    NestedLostReason:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of the lost reason.\n        name:\n          type: string\n          description: The name of the lost reason.\n      description: Represents a reference to a lost reason.\n    NestedMilestone:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of the milestone.\n        name:\n          type: string\n          description: The name of the milestone.\n      description: Represents a reference to a milestone. By default, contains only the id and name. If the field is included in the embed parameter will instead be a full Milestone object.\n    OpportunityValue:\n      type: object\n      required:\n        - \"amount\"\n      properties:\n        amount:\n          type: number\n          description: The amount the opportunity is worth.\n        currency:\n          type: string\n          description: The currency type of the opportunity.\n      description: Represents the value of an opportunity.\n    Opportunities:\n      type: object\n      properties:\n        opportunities:\n          type: array\n          items:\n            $ref: '#/components/schemas/Opportunity'\n          description: An array of Opportunity objects. \n      description: An object with a single property opportunities which is an array of Opportunity objects.\n    CreatePartyRequest:\n      type: object\n      properties:\n        party:\n          $ref: '#/components/schemas/Party'\n      description: An object with a single property party which must be a Party object.\n    UpdatePartyRequest:\n      type: object\n      properties:\n        party:\n          $ref: '#/components/schemas/Party'\n      description: An object with a single property party which must be a Party object. Fields that are not included in the request will remain unchanged.\n    CreatedParty:\n      type: object\n      properties:\n        party:\n          $ref: '#/components/schemas/Party'\n      description: Created party stored in Capsule\n    PartyObject:\n      type: object\n      properties:\n        party:\n          $ref: '#/components/schemas/Party'\n      description: A Party object.\n    Party:\n      type: object\n      required:\n        - \"type\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this party.\n        type:\n          type: string\n          description: Represents if this party is a person or an organisation. Accepted values are person, organisation.\n        firstName:\n          type: string\n          description: The first name of the person. This field is present only when type is person.\n        lastName:\n          type: string\n          description: The last name of the person. This field is present only when type is person.\n        title:\n          type: string\n          description: The title of the person. This field is present only when type is person. Accepted values are existing custom titles.\n        jobTitle:\n          type: string\n          description: The job title of the person. This field is present only when type is person.\n        organisation:\n          $ref: '#/components/schemas/NestedParty'\n        name:\n          type: string\n          description: The name of the organisation. This field is present only when type is organisation.\n        about:\n          type: string\n          description: A short description of the party.\n        createdAt:\n          type: string\n          description: The ISO date/time when this party was created.\n        updatedAt:\n          type: string\n          description: The ISO date/time when this party was last updated.\n        lastContactedAt:\n          type: string\n          description: The ISO date/time when this party was last contacted.\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n          description: An array of all the addresses associated with this party. \n        phoneNumbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n          description: An array of all the phone numbers associated with this party.\n        websites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Website'\n          description: An array of the websites and social network accounts associated with this party. \n        emailAddresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailAddress'\n          description: An array of all the email addresses associated with this party.\n        pictureURL:\n          type: string\n          description: A URL that represents the location of the profile picture for this party. This field is automatically derived by Capsule.\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/NestedTag'\n          description: An array of tags that are added to this party. This field is included in responses only if the embed parameter contains tags.\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldValue'\n          description: An array of custom fields that are defined for this party. This field is included in responses only if the embed parameter contains fields.\n        owner:\n          $ref: '#/components/schemas/NestedUser'\n        team:\n          $ref: '#/components/schemas/NestedTeam'\n        missingImportantFields:\n          type: boolean\n          description: Indicates if this party has any Important custom fields that are missing a value. This field is included in responses only if the embed parameter contains missingImportantFields.\n      description: Represents a contact that is stored in Capsule. This can be either a person or an organisation. \n    Address:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of this address. \n        type:\n          type: string\n          description: The address type. Accepted values are Home, Postal, Office, Billing, Shipping\n        street:\n          type: string\n          description: The multi-line street address.\n        city:\n          type: string\n          description: The city of the address.\n        state:\n          type: string\n          description: The state or province of the address.\n        country:\n          type: string\n          description: The country of the address. This field should be a valid country name. You can obtain a list of valid countries using the api/v2/countries endpoint.\n        zip:\n          type: string\n          description: The zip/postal code.\n      description: Represents a physical address of a contact that is stored in Capsule.\n    PhoneNumber:\n      type: object\n      required:\n        - \"number\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this phone number.\n        type:\n          type: string\n          description: The type of the phone number. Accepted values are Home, Work, Mobile, Fax, Direct.\n        number:\n          type: string\n          description: The actual phone number.\n      description: Represents a phone number of a party. \n    Website:\n      type: object\n      required:\n        - \"service\"\n        - \"address\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this website.\n        service:\n          type: string\n          description: Defines what social network this website represents. Accepted values are URL, SKYPE, TWITTER, LINKED_IN, FACEBOOK, XING, FEED, GOOGLE_PLUS, FLICKR, GITHUB, YOUTUBE, INSTAGRAM, PINTEREST.\n        address:\n          type: string\n          description: For Twitter, Github, Youtube, Pinterest, Instagram this is the account username. For all other services this is the profile or web page URL.\n        type:\n          type: string\n          description: Accepted values are Home, Work\n        url:\n          type: string\n          description: Generated URL that links to the website or profile page.\n      description: Represents a website or a social network account.\n    EmailAddress:\n      type: object\n      required:\n        - \"address\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this email address.\n        type:\n          type: string\n          description: The type of the email address. Accepted values are Home, Work\n        address:\n          type: string\n          description: The actual email address.\n      description: Represents an email address of a party.\n    Parties:\n      type: object\n      properties:\n        parties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Party'\n          description: An array of Party objects.\n      description: An object with a single property parties which is an array of Party objects.\n    CreateTaskRequest:\n      type: object\n      properties:\n        task:\n          $ref: '#/components/schemas/Task'\n      description: An object with a single property task which must be a Task object.\n    CreatedTask:\n      type: object\n      properties:\n        task:\n          $ref: '#/components/schemas/Task'\n      description: Created task stored in Capsule\n    Task:\n      type: object\n      required:\n        - \"description\"\n        - \"dueOn\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this task.\n        createdAt:\n          type: string\n          description: The ISO date/time when this task was created. \n        updatedAt:\n          type: string\n          description: The ISO date/time when this task was last updated.\n        description:\n          type: string\n          description: A short description of the task.\n        detail:\n          type: string\n          description: More details about the task.\n        category:\n          $ref: '#/components/schemas/Category'\n        dueOn:\n          type: string\n          description: The date (without a time element) when this task is due.\n        dueTime:\n          type: string\n          description: The time (without a date element) when this task is due. Note that the time is in the user's timezone, and not UTC.\n        status:\n          type: string\n          description: Specify whether this task is open, completed or pending. A task is pending when it was not completed by the user, but is not relevant anymore (i.e. linked to a closed opportunity). Accepted values are OPEN, COMPLETED, PENDING.\n        party:\n          $ref: '#/components/schemas/NestedParty'\n        opportunity:\n          $ref: '#/components/schemas/NestedOpportunity'\n        kase:\n          $ref: '#/components/schemas/NestedCase'\n        owner:\n          $ref: '#/components/schemas/NestedUser'\n        completedBy:\n          type: string\n          description: The username of the user that completed this task.\n        completedAt:\n          type: string\n          description: The ISO DateTime when this task was completed. By default, this will be the time of the request that marked the task as completed. However, if you provide offline capability, you might want to override this field when completing the task.\n        hasTrack:\n          type: boolean\n          description: Determines if the task is part of a track associated with the parent kase or opportunity.\n        nextTask:\n          $ref: '#/components/schemas/NestedTask'\n        taskDelayRule:\n          type: string\n          description: For tasks that are part of a track, this indicates if the dueOn date is calculated based on the start date of the track (TRACK_START), an end date specified when adding the track (END_DATE), or relative to the date the previous task in the track is completed (LAST_TASK). Accepted values are TRACK_START, END_DATE, LAST_TASK.\n        daysAfter:\n          type: integer\n          description: If this task is part of a track with a taskDelayRule of LAST_TASK, indicates the number of days after the completion of the previous task that this task is due. If this task is part of a track with a taskDelayRule of START_DATE or END_DATE, indicates the number of days between the start or end date of the track and the due date of this task respectively.\n      description: Represents a task that is stored in Capsule. These are generally used as a simple way to create a reminder of something the user needs to do. Tasks can be categorized for such things as a meeting, phone call or submission deadline using task categories and can be linked to a party, opportunity or case.\n    Category:\n      type: object\n      required:\n        - \"name\"\n      properties:\n        id:\n          type: integer\n          description: The unique id of this category.\n        name:\n          type: string\n          description: The name of the category.\n        colour:\n          type: string\n          description: The hex colour code of the category. Must be a '#' followed by 6 hexadecimal digits.\n      description: Represents a task category.\n    NestedCase:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of this case.\n        name:\n          type: string\n          description: The name of this case. This will contain Private when the user calling the API endpoint doesn't have access to the the case record.\n        isRestricted:\n          type: boolean\n          description: Defines whether this case is restricted for the user calling the API endpoint.\n      description: Represents a reference to a case. By default, contains only the id and name. If the field is included in the embed parameter will instead be a full Case object. If the case is restricted for the user calling the API endpoint the full Case object is not included.\n    NestedTask:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique id of this task.\n        description:\n          type: string\n          description: A short description of the task.\n      description: Represents a reference to a task. By default, contains only the id and description. If the field name is included in the embed parameter will instead be a full Task object.\n    Tasks:\n      type: object\n      properties:\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n          description: An array of Task objects. \n      description: An object with a single property tasks which is an array of Task objects.\n\n\n  securitySchemes:\n    bearerAuth:\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/capsulecrm/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/capsulecrm/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}