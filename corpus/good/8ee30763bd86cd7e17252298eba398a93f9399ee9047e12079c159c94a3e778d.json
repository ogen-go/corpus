{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "ebi_proteins/openapi.yml",
			"byteSize": 152459,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e-\n    The Proteins REST API provides access to key biological data from UniProt and data from Large Scale Studies (LSS)\n    mapped to UniProt. The services provide sequence feature annotations from UniProtKB, variation data from UniProtKB\n    and mapped from LSS (1000 Genomes, ExAC, ClinVar, TCGA, COSMIC, TOPMed and gnomAD), proteomics data mapped from\n    MS-proteomics repositories (PeptideAtlas, MaxQB, EPD and ProteomicsDB), antigen sequences mapped from Human Protein\n    Atlas (HPA), proteomes and taxonomy search and retrieval, reference genome coordinate mappings and data from UniParc.\n    Go to https://www.ebi.ac.uk/proteins/api/doc/ to learn more.\n  version: '2021_03'\n  title: EBI Proteins API\n  termsOfService: https://www.ebi.ac.uk/about/terms-of-use/\n  contact:\n    name: UniProt (EBI)\n    url: https://www.ebi.ac.uk/proteins/api/doc/contact.html\n  x-translator:\n    infores: \"infores:ebi-proteins\"\n    component: KP\n    team:\n      - Service Provider\n    biolink-version: \"2.2.13\"\nservers:\n  - url: 'https://www.ebi.ac.uk/proteins/api'\n    x-maturity: production\ntags:\n  # - name: coordinates\n  # - name: antigen\n  # - name: uniparc\n  # - name: proteomics\n  # - name: features\n  # - name: proteomes\n  # - name: variation\n  # - name: genecentric\n  - name: proteins\n  - name: translator\n## notes:\n## 1) the schemas below that describe the endpoint responses are likely outdated. There are differences between them and the current models for the responses provided by https://www.ebi.ac.uk/proteins/api/doc/\n## 2) I'm not sure if the xml response schemas are correct\n## 3) this endpoint isn't included below and looks identical to one we already have: /coordinates/{taxonomy}/{locations}/feature\npaths:\n  # /antigen:\n  #   get:\n  #     tags:\n  #       - antigen\n  #     summary: Search antigens in UniProt\n  #     description: ''\n  #     operationId: searchAntigen\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off-set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: antigen_sequence\n  #         in: query\n  #         description: Antigen sequence\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 4\n  #           maxItems: 2147483647\n  #       - name: antigen_id\n  #         in: query\n  #         description: \u003e-\n  #           Human Protein Atlas (HPA) antigen ID. Comma separated values\n  #           accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 4\n  #           maxItems: 2147483647\n  #       - name: ensembl_ids\n  #         in: query\n  #         description: Ensembl IDs. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 4\n  #           maxItems: 2147483647\n  #       - name: match_score\n  #         in: query\n  #         description: \u003e-\n  #           Minimum alignment score for the antigen sequence and the target\n  #           protein sequence\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           maximum: 100\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/antigen/{accession}':\n  #   get:\n  #     tags:\n  #       - antigen\n  #     summary: Get antigen by UniProt accession\n  #     description: ''\n  #     operationId: getAntigenByAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /coordinates:\n  #   get:\n  #     tags:\n  #       - coordinates\n  #     summary: Search genomic coordinates for UniProt entries\n  #     description: ''\n  #     operationId: searchCoordinates\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: chromosome\n  #         in: query\n  #         description: \u003e-\n  #           Chromosome name, i.e. 1, 2, X, etc. Comma separated values accepted\n  #           up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 1\n  #           maxItems: 50\n  #       - name: ensembl\n  #         in: query\n  #         description: \u003e-\n  #           Ensembl gene ID, transcript ID or translation ID. Comma separated\n  #           values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 6\n  #           maxItems: 100\n  #       - name: gene\n  #         in: query\n  #         description: UniProt gene name. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: protein\n  #         in: query\n  #         description: UniProt protein name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: location\n  #         in: query\n  #         description: \u003e-\n  #           Genome location range such as 58205437-58219305 (genome start to\n  #           genome end)\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/GnEntry'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/GnEntry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/coordinates/location/{accession}:{pPosition}':\n  #   get:\n  #     tags:\n  #       - coordinates\n  #     summary: Get genome coordinate by protein sequence position\n  #     description: ''\n  #     operationId: getGenomePositionByAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: pPosition\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/PLocation2GLocationCollection'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/PLocation2GLocationCollection'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/coordinates/location/{accession}:{pStart}-{pEnd}':\n  #   get:\n  #     tags:\n  #       - coordinates\n  #     summary: Get genome coordinate by protein sequence position range\n  #     description: ''\n  #     operationId: getGenomeLocationByAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: pStart\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #       - name: pEnd\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/PLocation2GLocationCollection'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/PLocation2GLocationCollection'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/coordinates/{accession}':\n  #   get:\n  #     tags:\n  #       - coordinates\n  #     summary: Get genomic coordinates for a UniProt accession\n  #     description: ''\n  #     operationId: getCoordinatesByAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/GnEntry'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/GnEntry'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/coordinates/{dbtype}:{dbid}':\n  #   get:\n  #     tags:\n  #       - coordinates\n  #     summary: \u003e-\n  #       Search UniProt entries by genomic database cross reference IDs: Ensembl,\n  #       CCDS, HGNC or RefSeq\n  #     description: ''\n  #     operationId: getByDbXRef\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: dbtype\n  #         in: path\n  #         description: 'Cross-reference database type: Ensembl, CCDC, HGNC or RefSeq'\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: dbid\n  #         in: path\n  #         description: \u003e-\n  #           Cross reference ID, such as ENSP00000351276 for Ensembl, NP_083392\n  #           for RefSeq, CCDS52493 for CCDS, 26588 for HGNC, (case insensitive).\n  #         required: true\n  #         schema:\n  #           type: string\n  #           minItems: 4\n  #           maxItems: 50\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/GnEntry'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/GnEntry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/coordinates/{taxonomy}/{locations}':\n  #   get:\n  #     tags:\n  #       - coordinates\n  #     summary: Search UniProt entries by taxonomy and genomic coordinates\n  #     description: ''\n  #     operationId: getByLocation\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: taxonomy\n  #         in: path\n  #         description: Organism taxon ID\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: locations\n  #         in: path\n  #         description: \u003e-\n  #           genomic locations such as x:58205437-58219305,12452535-12452536,2:32452,\n  #           before colon is the chromosome such as x:58205437-58219305, or without\n  #           chromosome such as 12452535-12452536, means any chromosome\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: in_range\n  #         in: query\n  #         description: \u003e-\n  #           When it is set to true for location search, only those entries that\n  #           are in the range will be retrieved\n  #         required: false\n  #         schema:\n  #           type: boolean\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/GnEntry'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/GnEntry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /features:\n  #   get:\n  #     tags:\n  #       - features\n  #     summary: Search protein sequence features in UniProt\n  #     description: ''\n  #     operationId: searchFeatures\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: reviewed\n  #         in: query\n  #         description: The reviewed parameter can only be true or false\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: gene\n  #         in: query\n  #         description: UniProt gene name. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 100\n  #       - name: exact_gene\n  #         in: query\n  #         description: UniProt exact gene name. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 100\n  #       - name: protein\n  #         in: query\n  #         description: UniProt protein name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: organism\n  #         in: query\n  #         description: Organism name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: categories\n  #         in: query\n  #         description: \u003e-\n  #           Category type(s): MOLECULE_PROCESSING, TOPOLOGY,\n  #           SEQUENCE_INFORMATION, STRUCTURAL, DOMAINS_AND_SITES, PTM, VARIANTS,\n  #           MUTAGENESIS. Comma separated values accepted up to 20\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: types\n  #         in: query\n  #         description: \u003e-\n  #           Feature type(s): INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE,\n  #           TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND,\n  #           NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING,\n  #           SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK,\n  #           VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER,\n  #           HELIX, TURN, STRAND, INTRAMEM. Comma separated values accepted up to\n  #           20\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/features/type/{type}':\n  #   get:\n  #     tags:\n  #       - features\n  #     summary: Search protein sequence features of a given type in UniProt\n  #     description: ''\n  #     operationId: searchFeatureType\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: type\n  #         in: path\n  #         description: \u003e-\n  #           Feature type: INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE,\n  #           TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND,\n  #           NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING,\n  #           SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK,\n  #           VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER,\n  #           HELIX, TURN, STRAND, INTRAMEM\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: categories\n  #         in: query\n  #         description: \u003e-\n  #           Category type(s): MOLECULE_PROCESSING, TOPOLOGY,\n  #           SEQUENCE_INFORMATION, STRUCTURAL, DOMAINS_AND_SITES, PTM, VARIANTS,\n  #           MUTAGENESIS. Comma separated values accepted up to 20\n  #         required: false\n  #         explode: true\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #       - name: types\n  #         in: query\n  #         description: \u003e-\n  #           Feature type(s): INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE,\n  #           TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND,\n  #           NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING,\n  #           SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK,\n  #           VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER,\n  #           HELIX, TURN, STRAND, INTRAMEM. Comma separated values accepted up to\n  #           20\n  #         required: false\n  #         explode: true\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #       - name: terms\n  #         in: query\n  #         description: \u003e-\n  #           Search for term(s) that appear in feature description for your\n  #           specified feature type. For example, you can search by type=DOMAIN\n  #           and Term=Kinase.  Comma separated values accepted up to 20.\n  #         required: true\n  #         explode: true\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/features/{accession}':\n  #   get:\n  #     tags:\n  #       - features\n  #     summary: 'Get UniProt protein sequence features by accession '\n  #     description: ''\n  #     operationId: getFeaturesByAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: categories\n  #         in: query\n  #         description: \u003e-\n  #           Category type(s): MOLECULE_PROCESSING, TOPOLOGY,\n  #           SEQUENCE_INFORMATION, STRUCTURAL, DOMAINS_AND_SITES, PTM, VARIANTS,\n  #           MUTAGENESIS. Comma separated values accepted up to 20\n  #         required: false\n  #         explode: true\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #       - name: types\n  #         in: query\n  #         description: \u003e-\n  #           Feature type(s): INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE,\n  #           TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND,\n  #           NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING,\n  #           SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK,\n  #           VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER,\n  #           HELIX, TURN, STRAND, INTRAMEM. Comma separated values accepted up to\n  #           20\n  #         required: false\n  #         explode: true\n  #         schema:\n  #           type: array\n  #           items:\n  #             type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /genecentric:\n  #   get:\n  #     tags:\n  #       - genecentric\n  #     summary: Search gene centric proteins\n  #     description: ''\n  #     operationId: getGeneCentricByUpid\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: upid\n  #         in: query\n  #         description: UniProt proteome UPID(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: gene\n  #         in: query\n  #         description: \u003e-\n  #           It is a unique gene identifier found in MOD, Ensembl, Ensembl\n  #           Genomes, OLN ,ORF or UniProt Gene Name database. Comma separated\n  #           values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/CanonicalGene'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/CanonicalGene'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/genecentric/{accession}':\n  #   get:\n  #     tags:\n  #       - genecentric\n  #     summary: Get gene centric proteins by Uniprot accession\n  #     description: ''\n  #     operationId: getGeneCentricByAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/CanonicalGene'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/CanonicalGene'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /proteins:\n  #   get:\n  #     tags:\n  #       - proteins\n  #     summary: Search UniProt entries\n  #     description: ''\n  #     operationId: searchProteins\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: reviewed\n  #         in: query\n  #         description: Reviewed(true) or not Reviewed (false)\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: isoform\n  #         in: query\n  #         description: \u003e-\n  #           0 for excluding isoform, 1 for isoform only and 2 for both canonical\n  #           and isoform\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #       - name: goterms\n  #         in: query\n  #         description: GO ontology terms\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: keywords\n  #         in: query\n  #         description: UniProt keywords\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: ec\n  #         in: query\n  #         description: UniProt EC number. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: gene\n  #         in: query\n  #         description: UniProt gene name. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: exact_gene\n  #         in: query\n  #         description: UniProt exact gene name. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: protein\n  #         in: query\n  #         description: UniProt protein name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: organism\n  #         in: query\n  #         description: Organism name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: pubmed\n  #         in: query\n  #         description: \u003e-\n  #           UniProt reference PubMed ID. Comma separated values accepted up to\n  #           20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: seqLength\n  #         in: query\n  #         description: \u003e-\n  #           Sequence length. Sequence length can be a single length value such as\n  #           123 or range 123-234\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: md5\n  #         in: query\n  #         description: Sequence md5 value.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/proteins/covid-19/entries':\n  #   get:\n  #     tags:\n  #       - proteins\n  #     summary: Get UniProt entries by UniProt cross reference and its ID\n  #     description: ''\n  #     operationId: covidProteins\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage' \n  # '/proteins/interaction/{accession}':\n  #   get:\n  #     tags:\n  #       - proteins\n  #     summary: Get UniProt interactions by accession\n  #     description: ''\n  #     operationId: getAllInteractionEntries\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/UPInteraction'\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/UPInteraction'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  '/proteins/{accession}':\n    get:\n      tags:\n        - proteins\n      summary: Get UniProt entry by accession\n      description: ''\n      operationId: getProteinsByAccession\n      parameters:\n        - name: accession\n          in: path\n          description: UniProt accession\n          required: true\n          example: \"Q93099\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Entry'\n        '400':\n          description: \u003e-\n            Invalid accession parameter. The values's format should be a valid\n            UniProtKB accession.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '404':\n          description: Resources not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      x-bte-kgs-operations:\n        - \"$ref\": \"#/components/x-bte-kgs-operations/gene_to_rhea_reaction\"\n  # '/proteins/{accession}/isoforms':\n  #   get:\n  #     tags:\n  #       - proteins\n  #     summary: Get UniProt isoform entries from parent entry accession\n  #     description: ''\n  #     operationId: getEntriesForIsoforms\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/proteins/{dbtype}:{dbid}':\n  #   get:\n  #     tags:\n  #       - proteins\n  #     summary: Get UniProt entries by UniProt cross reference and its ID\n  #     description: ''\n  #     operationId: getByCrossReference\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: dbtype\n  #         in: path\n  #         description: 'Cross reference database type, e.g, Ensembl, PDBe, etc. '\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: dbid\n  #         in: path\n  #         description: 'Cross-reference ID, e.g. ENSP00000351276 for Ensembl'\n  #         required: true\n  #         schema:\n  #           type: string\n  #           minItems: 4\n  #           maxItems: 50\n  #       - name: reviewed\n  #         in: query\n  #         description: Reviewed(true) or not Reviewed (false)\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: isoform\n  #         in: query\n  #         description: 0 for exclude isoform only and 1 for isoform only\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /proteomes:\n  #   get:\n  #     tags:\n  #       - proteomes\n  #     summary: Search proteomes in UniProt\n  #     description: ''\n  #     operationId: searchProteomes\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: upid\n  #         in: query\n  #         description: UniProt proteome UPID(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: name\n  #         in: query\n  #         description: Search proteome name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: keyword\n  #         in: query\n  #         description: Terms the proteome contains\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: xref\n  #         in: query\n  #         description: \u003e-\n  #           Proteome cross references such as Genome assembly ID or Biosample\n  #           ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: genome_acc\n  #         in: query\n  #         description: Genome accession. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: is_ref_proteome\n  #         in: query\n  #         description: Reference Proteome(true) or not reference proteome (false)\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: is_redundant\n  #         in: query\n  #         description: Redundant Proteome(true) or non redundant proteome (false)\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/proteomes/genecentric/{upid}':\n  #   get:\n  #     tags:\n  #       - proteomes\n  #     summary: \u003e-\n  #       Get gene centric proteins by proteome UPID is deprecated, please use new\n  #       /genecentric?upid= endpoint\n  #     description: ''\n  #     operationId: getGeneCentricByUpidDeprecated\n  #     parameters:\n  #       - name: upid\n  #         in: path\n  #         description: UniProt Proteome UPID\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid upid parameter. The value format should match the regular\n  #           expression UP[0-9]{9}.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #     deprecated: true\n  # '/proteomes/proteins/{upid}':\n  #   get:\n  #     tags:\n  #       - proteomes\n  #     summary: Get proteins by proteome UPID\n  #     description: ''\n  #     operationId: getProteinsByUpid\n  #     parameters:\n  #       - name: upid\n  #         in: path\n  #         description: UniProt Proteome UPID\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: reviewed\n  #         in: query\n  #         description: Reviewed(true) or not Reviewed (false)\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid upid parameter. The value format should match the regular\n  #           expression UP[0-9]{9}.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/proteomes/{upid}':\n  #   get:\n  #     tags:\n  #       - proteomes\n  #     summary: Get proteome by proteome UPID\n  #     description: ''\n  #     operationId: getByUpid\n  #     parameters:\n  #       - name: upid\n  #         in: path\n  #         description: UniProt Proteome UPID\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Proteome'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid upid parameter. The value format should match the regular\n  #           expression UP[0-9]{9}.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /proteomics:\n  #   get:\n  #     tags:\n  #       - proteomics\n  #     summary: Search proteomics peptides in UniProt\n  #     description: ''\n  #     operationId: searchProteomics\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: upid\n  #         in: query\n  #         description: UniProt proteome UPID(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: datasource\n  #         in: query\n  #         description: \u003e-\n  #           Proteomics data source(s): Proteomics data source(s): MaxQB, PeptideAtlas, EPD\n  #           or ProteomicsDB. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 2147483647\n  #       - name: peptide\n  #         in: query\n  #         description: Peptide sequence. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 4\n  #           maxItems: 2147483647\n  #       - name: unique\n  #         in: query\n  #         description: \u003e-\n  #           Peptide uniqueness (unique peptides map to one gene group only).\n  #           Values can be true or false.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/proteomics/{accession}':\n  #   get:\n  #     tags:\n  #       - proteomics\n  #     summary: Get proteomics peptides mapped to UniProt by accession\n  #     description: ''\n  #     operationId: getProteomicsByAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /uniparc:\n  #   get:\n  #     tags:\n  #       - uniparc\n  #     summary: Search UniParc entries\n  #     description: ''\n  #     operationId: searchUniParc\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: upi\n  #         in: query\n  #         description: UniParc ID (UPI). Comma separated values accepted up to 100\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: dbtype\n  #         in: query\n  #         description: \u003e-\n  #           Search by Cross reference database type, e.g EMBL, RefSeq, Ensembl,\n  #           etc.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: dbid\n  #         in: query\n  #         description: \u003e-\n  #           All UniParc cross reference accessions, eg. AAC02967 (EMBL) or \n  #           XP_006524055 (RefSeq). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: gene\n  #         in: query\n  #         description: UniProt gene name. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: protein\n  #         in: query\n  #         description: UniProt protein name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: organism\n  #         in: query\n  #         description: Organism name\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 3\n  #           maxItems: 50\n  #       - name: sequencechecksum\n  #         in: query\n  #         description: Sequence CRC64 checksum. eg 4104A3A57D1B08E3\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: ipr\n  #         in: query\n  #         description: \u003e-\n  #           Search by InterPro identifier(s). Comma separated values accepted up\n  #           to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: signaturetype\n  #         in: query\n  #         description: \u003e-\n  #           Search by signature database type, e.g. SMART, SUPFAM, Pfam, PIRSF,\n  #           PROSITE, etc. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: signatureid\n  #         in: query\n  #         description: \u003e-\n  #           Search by signature database id, e.g. SM00044, SSF55073, PF00211,\n  #           PIRSF039050, PS00452, etc. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: upid\n  #         in: query\n  #         description: UniProt proteome UPID(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfDdtype\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Cross reference database type, e.g EMBL, RefSeq,\n  #           Ensembl, etc. Comma separated values accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfDbid\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by all UniParc cross reference accessions, eg.\n  #           AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfActive\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Active(true) or not Active(false) Cross\n  #           reference.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfTaxId\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by organism taxon ID. Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/uniparc/accession/{accession}':\n  #   get:\n  #     tags:\n  #       - uniparc\n  #     summary: Get UniParc entry only by UniProt accession\n  #     description: ''\n  #     operationId: getUniParcEntryByUniprotAccession\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: rfDdtype\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Cross reference database type, e.g EMBL, RefSeq,\n  #           Ensembl, etc. Comma separated values accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfDbid\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by all UniParc cross reference accessions, eg.\n  #           AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfActive\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Active(true) or not Active(false) Cross\n  #           reference.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfTaxId\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by organism taxon ID. Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /uniparc/bestguess:\n  #   get:\n  #     tags:\n  #       - uniparc\n  #     summary: Get UniParc longest sequence for entries.\n  #     description: \u003e-\n  #       For a given user input (request parameters), Best Guess returns the\n  #       UniParcEntry with a cross-reference to the longest active UniProtKB\n  #       sequence (preferably from Swiss-Prot and if not then TrEMBL). It also\n  #       returns the sequence and related information. If it finds more than one\n  #       longest active UniProtKB sequence it returns 400 (Bad Request) error\n  #       response with the list of cross references found.\n  #     operationId: getUniParcBestGuess\n  #     parameters:\n  #       - name: upi\n  #         in: query\n  #         description: UniParc ID (UPI). Comma separated values accepted up to 100\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: dbid\n  #         in: query\n  #         description: \u003e-\n  #           All UniParc cross reference accessions, eg. AAC02967 (EMBL) or \n  #           XP_006524055 (RefSeq). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: gene\n  #         in: query\n  #         description: UniProt gene name. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Could not find best guess for the requested filter\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/uniparc/dbreference/{dbid}':\n  #   get:\n  #     tags:\n  #       - uniparc\n  #     summary: Get UniParc entries by all UniParc cross reference accessions\n  #     description: ''\n  #     operationId: getUniParcByUniparcAccessions\n  #     parameters:\n  #       - name: dbid\n  #         in: path\n  #         description: \u003e-\n  #           All UniParc cross reference accessions, eg. AAC02967 (EMBL) or \n  #           XP_006524055 (RefSeq).\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: rfDdtype\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Cross reference database type, e.g EMBL, RefSeq,\n  #           Ensembl, etc. Comma separated values accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfDbid\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by all UniParc cross reference accessions, eg.\n  #           AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfActive\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Active(true) or not Active(false) Cross\n  #           reference.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfTaxId\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by organism taxon ID. Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/uniparc/proteome/{upid}':\n  #   get:\n  #     tags:\n  #       - uniparc\n  #     summary: Get UniParc entries by Proteome UPID\n  #     description: ''\n  #     operationId: getByProteomeId\n  #     parameters:\n  #       - name: upid\n  #         in: path\n  #         description: UniProt Proteome UPID\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: rfDdtype\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Cross reference database type, e.g EMBL, RefSeq,\n  #           Ensembl, etc. Comma separated values accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfDbid\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by all UniParc cross reference accessions, eg.\n  #           AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfActive\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Active(true) or not Active(false) Cross\n  #           reference.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfTaxId\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by organism taxon ID. Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /uniparc/sequence:\n  #   post:\n  #     tags:\n  #       - uniparc\n  #     summary: Get UniParc entries by sequence\n  #     description: ''\n  #     operationId: getBySequence\n  #     parameters:\n  #       - name: rfDdtype\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Cross reference database type, e.g EMBL, RefSeq,\n  #           Ensembl, etc. Comma separated values accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfDbid\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by all UniParc cross reference accessions, eg.\n  #           AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfActive\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Active(true) or not Active(false) Cross\n  #           reference.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfTaxId\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by organism taxon ID. Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #     requestBody:\n  #       content:\n  #         text/plain:\n  #           schema:\n  #             $ref: '#/components/schemas/UniparcSequenceParam'\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/UniparcSequenceParam'\n  #         application/xml:\n  #           schema:\n  #             $ref: '#/components/schemas/UniparcSequenceParam'\n  #       description: \u003e-\n  #         Post uniparc Sequence in text, json or xml content type. Look the\n  #         expected model in Data Type column\n  #       required: true\n  # '/uniparc/upi/{upi}':\n  #   get:\n  #     tags:\n  #       - uniparc\n  #     summary: Get UniParc entry by UniParc UPI\n  #     description: ''\n  #     operationId: getUniParcEntryByUpId\n  #     parameters:\n  #       - name: upi\n  #         in: path\n  #         description: UniParc ID (UPI)\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: rfDdtype\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Cross reference database type, e.g EMBL, RefSeq,\n  #           Ensembl, etc. Comma separated values accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfDbid\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by all UniParc cross reference accessions, eg.\n  #           AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfActive\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by Active(true) or not Active(false) Cross\n  #           reference.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: rfTaxId\n  #         in: query\n  #         description: \u003e-\n  #           Response filter by organism taxon ID. Comma separated values\n  #           accepted.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/Entry'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid upid parameter. The value format should match the regular\n  #           expression UPI[\\w]{10}.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-fasta:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # /variation:\n  #   get:\n  #     tags:\n  #       - variation\n  #     summary: Search natural variants in UniProt\n  #     description: \u003e-\n  #       Among the available response content types, PEFF format (PSI Extended\n  #       FASTA Format from the Human Proteome Organisation - Proteomics\n  #       Standards Initiative, HUPO-PSI) is provided with only variants\n  #       reported in the output.\n  #     operationId: searchVariation\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: sourcetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the sourceType for variants: uniprot, large scale study and mixed.\n  #           Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: consequencetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by consequenceType for variants: missense, stop gained or\n  #           stop lost. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: wildtype\n  #         in: query\n  #         description: \u003e-\n  #           Search by specific wildType amino acid. Options: Any single letter\n  #           amino acid and * for stop codon. Comma separated values accepted up\n  #           to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: alternativesequence\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the alternativeSequence amino acid. Any single letter\n  #           amino acid and * for stopcodon and - for deletions. Comma separated\n  #           values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: location\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the amino acid range position in the sequence(s). Any\n  #           valid amino acid range position within the length of the protein\n  #           sequence such as 10-60 (start position to end position)\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: accession\n  #         in: query\n  #         description: UniProt accession(s). Comma separated values accepted up to 100.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: disease\n  #         in: query\n  #         description: \u003e-\n  #           Search by disease name/ acronym for associated variants , e.g.\n  #           alzheimer disease 1 or AD1. Partial names allowed.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           minItems: 2\n  #           maxItems: 60\n  #       - name: omim\n  #         in: query\n  #         description: \u003e-\n  #           Search by MIM ID, e.g. 104300. Comma separated values accepted up to\n  #           20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: evidence\n  #         in: query\n  #         description: \u003e-\n  #           Search by PubMed ID, e.g. 22472873. Comma separated values accepted\n  #           up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: taxid\n  #         in: query\n  #         description: Organism taxon ID. Comma separated values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: dbtype\n  #         in: query\n  #         description: \u003e-\n  #           Cross reference database type, e.g, dbSNP, cosmic curate or ClinVar.\n  #           Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: dbid\n  #         in: query\n  #         description: \u003e-\n  #           Cross-reference database ID, e.g. rs121918508 for dbSNP, COSM29836\n  #           for cosmic curated, rcv61200 for ClinVar. Comma separated values\n  #           accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/variation/dbsnp/{dbid}':\n  #   get:\n  #     tags:\n  #       - variation\n  #     summary: Get natural variants in UniProt by NIH-NCBI SNP database identifier\n  #     description: ''\n  #     operationId: searchByDbSNP\n  #     parameters:\n  #       - name: dbid\n  #         in: path\n  #         description: 'Cross-reference NIH-NCBI SNP database identifier, e.g. rs121918508'\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: sourcetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the sourceType for variants: uniprot, large scale study\n  #           and mixed. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: consequencetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by consequenceType for variants: missense, stop gained or\n  #           stop lost. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: wildtype\n  #         in: query\n  #         description: \u003e-\n  #           Search by specific wildType amino acid. Options: Any single letter\n  #           amino acid and * for stop codon. Comma separated values accepted up\n  #           to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: alternativesequence\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the alternativeSequence amino acid. Any single letter\n  #           amino acid and * for stopcodon and - for deletions. Comma separated\n  #           values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: location\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the amino acid range position in the sequence(s). Any\n  #           valid amino acid range position within the length of the protein\n  #           sequence such as 10-60 (start position to end position)\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/variation/hgvs/{hgvs}':\n  #   get:\n  #     tags:\n  #       - variation\n  #     summary: Get natural variants in UniProt by HGVS expression\n  #     description: ''\n  #     operationId: searchByHGVS\n  #     parameters:\n  #       - name: hgvs\n  #         in: path\n  #         description: \u003e-\n  #           Human Genome Variation Society representation, e.g.\n  #           NC_000017.11:g.58219213C\u003eT\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         description: 'Off set, page starting point, with default value 0'\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           minimum: 0\n  #           default: 0\n  #       - name: size\n  #         in: query\n  #         description: \u003e-\n  #           Page size with default value 100. When page size is -1, it returns\n  #           all records and offset will be ignored\n  #         required: false\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #       - name: sourcetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the sourceType for variants: uniprot, large scale study\n  #           and mixed. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: consequencetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by consequenceType for variants: missense, stop gained or\n  #           stop lost. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: wildtype\n  #         in: query\n  #         description: \u003e-\n  #           Search by specific wildType amino acid. Options: Any single letter\n  #           amino acid and * for stop codon. Comma separated values accepted up\n  #           to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: alternativesequence\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the alternativeSequence amino acid. Any single letter\n  #           amino acid and * for stopcodon and - for deletions. Comma separated\n  #           values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: location\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the amino acid range position in the sequence(s). Any\n  #           valid amino acid range position within the length of the protein\n  #           sequence such as 10-60 (start position to end position)\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: Invalid request Parameter.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  # '/variation/{accession}':\n  #   get:\n  #     tags:\n  #       - variation\n  #     summary: Get natural variants by UniProt accession\n  #     description: ''\n  #     operationId: getVariation\n  #     parameters:\n  #       - name: accession\n  #         in: path\n  #         description: UniProt accession\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: sourcetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the sourceType for variants: uniprot, large scale study\n  #           and mixed. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: consequencetype\n  #         in: query\n  #         description: \u003e-\n  #           Filter by consequenceType for variants: missense, stop gained or\n  #           stop lost. Comma separated values accepted up to 2.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: wildtype\n  #         in: query\n  #         description: \u003e-\n  #           Search by specific wildType amino acid. Options: Any single letter\n  #           amino acid and * for stop codon. Comma separated values accepted up\n  #           to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: alternativesequence\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the alternativeSequence amino acid. Any single letter\n  #           amino acid and * for stopcodon and - for deletions. Comma separated\n  #           values accepted up to 20.\n  #         required: false\n  #         schema:\n  #           type: string\n  #       - name: location\n  #         in: query\n  #         description: \u003e-\n  #           Filter by the amino acid range position in the sequence(s). Any\n  #           valid amino acid range position within the length of the protein\n  #           sequence such as 10-60 (start position to end position)\n  #         required: false\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful operation\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ProteinFeatureInfo'\n  #       '400':\n  #         description: \u003e-\n  #           Invalid accession parameter. The values's format should be a valid\n  #           UniProtKB accession.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #       '404':\n  #         description: Resources not found\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\n  #           text/x-gff:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorMessage'\ncomponents:\n  x-bte-kgs-operations:\n  ## uniprot annotates enzymes that catalyze reactions (RHEA IDs): https://www.rhea-db.org/help/enzyme%2Dcatalyzing%2Dreaction\n    gene_to_rhea_reaction:\n    - supportBatch: false\n      useTemplating: true\n      inputs:\n      - id: UniProtKB\n        semantic: Gene\n      parameters:\n        accession: \"{{ queryInputs }}\"  ## no prefix\n      outputs:\n      - id: RHEA\n        semantic: MolecularActivity\n      ## using same predicate as gene -\u003e GO molecular function\n      predicate: enables\n      ## accessing UniProtKB through EBI Proteins API\n      source: \"infores:uniprot\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/rheaReaction\"\n      # testExamples:\n      #   - qInput: \"UniProtKB:Q93099\"   ## Homogentisate 1,2-dioxygenase (HGD, human)\n      #     oneOutput: \"RHEA:15449\"      ## Under the comment with type (CATALYTIC_ACTIVTY), homogentisate + O2 = 4-maleylacetoacetate + H(+)\n      ## another possible input: \"UniProtKB:Q9Y6P5\"   ## SESN1 / SESN1_HUMAN Sestrin-1 (sprot)\n  x-bte-response-mapping:\n    rheaReaction:\n    ## does dot-notation parse correctly?\n    ## see example https://www.ebi.ac.uk/proteins/api/proteins/Q93099\n    ## - comments is an array of objects. Some proteins have objects with a reaction key (which is what we want to access)\n    ## - dbReferences is an array of objects. Some of the objects have the type \"Rhea\" and their id is a curie with prefix RHEA. Others can be type \"ChEBI\" and their id is a curie with prefix CHEBI...\n      RHEA: comments.reaction.dbReferences.id\n      name: comments.reaction.name\n  schemas:\n    RedundantProteomeType:\n      type: object\n      properties:\n        upid:\n          type: string\n          xml:\n            attribute: true\n        similarity:\n          type: number\n          format: float\n          xml:\n            attribute: true\n    PolyphenPredictionType:\n      type: object\n      properties:\n        value:\n          type: string\n        score:\n          type: number\n          format: double\n          xml:\n            attribute: true\n        predication:\n          type: string\n          xml:\n            attribute: true\n    Disease:\n      type: object\n      required:\n        - acronym\n        - dbReference\n        - description\n        - name\n      properties:\n        name:\n          type: string\n        acronym:\n          type: string\n        description:\n          type: string\n        dbReference:\n          $ref: '#/components/schemas/DbReferenceType'\n        id:\n          type: string\n          xml:\n            attribute: true\n    EventType:\n      type: object\n      properties:\n        type:\n          type: string\n          xml:\n            attribute: true\n    ProteinFeatureInfo:\n      type: object\n      required:\n        - accession\n        - entryName\n        - features\n        - sequence\n        - version\n      properties:\n        version:\n          type: string\n        accession:\n          type: string\n          xml:\n            attribute: true\n          pattern: \u003e-\n            (^([OPQ][0-9][A-Z,0-9]{3}[0-9])(-(\\d+))?$)|(^([A-NR-Z]([0-9][A-Z][A-Z0-9]{2}){1,2}[0-9])(-(\\d+))?$)\n        entryName:\n          type: string\n          xml:\n            attribute: true\n          pattern: (^\\w+_\\w+$)\n        proteinName:\n          type: string\n          xml:\n            attribute: true\n        geneName:\n          type: string\n          xml:\n            attribute: true\n        organismName:\n          type: string\n          xml:\n            attribute: true\n        proteinExistence:\n          type: string\n          xml:\n            attribute: true\n        sequence:\n          type: string\n          xml:\n            attribute: true\n        sequenceChecksum:\n          type: string\n          xml:\n            attribute: true\n        sequenceVersion:\n          type: integer\n          format: int32\n          xml:\n            attribute: true\n        geteGeneId:\n          type: string\n          xml:\n            attribute: true\n          description: Ensembl Gene ID\n        geteProteinId:\n          type: string\n          xml:\n            attribute: true\n        taxid:\n          type: integer\n          format: int32\n          xml:\n            attribute: true\n          description: UniProt taxonomy ID\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/Feature'\n    SourceType:\n      type: object\n      properties:\n        dbReference:\n          $ref: '#/components/schemas/DbReferenceType'\n        ref:\n          type: integer\n          xml:\n            attribute: true\n    RedoxPotential:\n      type: object\n      required:\n        - text\n      properties:\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    PropertyType:\n      type: object\n      properties:\n        type:\n          type: string\n          xml:\n            attribute: true\n        value:\n          type: string\n          xml:\n            attribute: true\n    Feature:\n      type: object\n      required:\n        - begin\n        - category\n        - end\n        - evidences\n        - type\n      properties:\n        type:\n          type: string\n          xml:\n            attribute: true\n        category:\n          type: string\n          xml:\n            attribute: true\n          enum:\n            - MOLECULE_PROCESSING\n            - STRUCTURAL\n            - DOMAINS_AND_SITES\n            - MUTAGENESIS\n            - PTM\n            - SEQUENCE_INFORMATION\n            - TOPOLOGY\n            - VARIANTS\n        cvId:\n          type: string\n          xml:\n            attribute: true\n        ftId:\n          type: string\n          xml:\n            attribute: true\n        description:\n          type: string\n          xml:\n            attribute: true\n        alternativeSequence:\n          type: string\n          xml:\n            attribute: true\n        begin:\n          type: string\n          xml:\n            attribute: true\n          pattern: '^(\\?|\u003c?[1-9][0-9]*)$'\n        end:\n          type: string\n          xml:\n            attribute: true\n          pattern: '^(\\?|[1-9][0-9]*\u003e?)$'\n        molecule:\n          type: string\n          xml:\n            attribute: true\n        xrefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceObject'\n        evidences:\n          type: array\n          items:\n            $ref: '#/components/schemas/Evidence'\n    SubcellularLocationType:\n      type: object\n      required:\n        - location\n      properties:\n        location:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        topology:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        orientation:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    SiftPredictionType:\n      type: object\n      properties:\n        value:\n          type: string\n        score:\n          type: number\n          format: double\n          xml:\n            attribute: true\n        predication:\n          type: string\n          xml:\n            attribute: true\n    ReferenceType:\n      type: object\n      required:\n        - citation\n        - scope\n      properties:\n        citation:\n          $ref: '#/components/schemas/CitationType'\n        scope:\n          type: array\n          items:\n            type: string\n        source:\n          $ref: '#/components/schemas/SourceDataType'\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n        key:\n          type: string\n          xml:\n            attribute: true\n    Name:\n      type: object\n      properties:\n        value:\n          type: string\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n    CanonicalGene:\n      type: object\n      required:\n        - gene\n      properties:\n        gene:\n          $ref: '#/components/schemas/GeneType'\n        relatedGene:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeneType'\n      xml:\n        name: canonicalGene\n    DiseaseComment:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - FUNCTION\n            - CATALYTIC_ACTIVITY\n            - COFACTOR\n            - ENZYME_REGULATION\n            - BIOPHYSICOCHEMICAL_PROPERTIES\n            - PATHWAY\n            - SUBUNIT\n            - INTERACTION\n            - SUBCELLULAR_LOCATION\n            - ALTERNATIVE_PRODUCTS\n            - TISSUE_SPECIFICITY\n            - DEVELOPMENTAL_STAGE\n            - INDUCTION\n            - DOMAIN\n            - PTM\n            - RNA_EDITING\n            - MASS_SPECTROMETRY\n            - POLYMORPHISM\n            - DISEASE\n            - DISRUPTION_PHENOTYPE\n            - ALLERGEN\n            - TOXIC_DOSE\n            - BIOTECHNOLOGY\n            - PHARMACEUTICAL\n            - MISCELLANEOUS\n            - SIMILARITY\n            - CAUTION\n            - SEQUENCE_CAUTION\n            - WEBRESOURCE\n            - PAGE\n            - UNKNOWN\n        diseaseId:\n          type: string\n        acronym:\n          type: string\n        dbReference:\n          $ref: '#/components/schemas/DbReference'\n        description:\n          $ref: '#/components/schemas/EvidencedString'\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedString'\n    IntAct:\n      type: object\n      required:\n        - id\n        - interactionType\n      properties:\n        interactionType:\n          type: string\n        id:\n          type: string\n        gene:\n          type: string\n        interactor1:\n          type: string\n        interactor2:\n          type: string\n        experiments:\n          type: integer\n          format: int32\n    OrganismNameType:\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n          xml:\n            attribute: true\n    DbReferenceType:\n      type: object\n      properties:\n        molecule:\n          $ref: '#/components/schemas/MoleculeType'\n        property:\n          type: array\n          items:\n            $ref: '#/components/schemas/PropertyType'\n        type:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n    ProteinNameType:\n      type: object\n      required:\n        - fullName\n      properties:\n        fullName:\n          type: string\n        shortName:\n          type: array\n          items:\n            type: string\n    UniparcSequenceParam:\n      type: object\n      required:\n        - sequence\n      properties:\n        sequence:\n          type: string\n          pattern: '[A-Z]+'\n      xml:\n        name: body\n    IsoformType:\n      type: object\n      required:\n        - id\n        - name\n        - sequence\n      properties:\n        id:\n          type: array\n          items:\n            type: string\n        name:\n          type: array\n          items:\n            $ref: '#/components/schemas/Name'\n        sequence:\n          $ref: '#/components/schemas/Sequence'\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    KeywordType:\n      type: object\n      properties:\n        value:\n          type: string\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n        id:\n          type: string\n          xml:\n            attribute: true\n    GnEntry:\n      type: object\n      required:\n        - accession\n        - name\n        - protein\n        - sequence\n      properties:\n        accession:\n          type: string\n        name:\n          type: string\n        taxid:\n          type: integer\n          format: int32\n        sequence:\n          type: string\n        protein:\n          $ref: '#/components/schemas/ProteinType'\n        gene:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeneNameType'\n        gnCoordinate:\n          type: array\n          items:\n            $ref: '#/components/schemas/GnCoordinateType'\n      xml:\n        name: gnEntry\n    ProteinType:\n      type: object\n      properties:\n        recommendedName:\n          $ref: '#/components/schemas/RecommendedName'\n        alternativeName:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlternativeName'\n        submittedName:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubmittedName'\n        allergenName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        biotechName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        cdAntigenName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        innName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        domain:\n          type: array\n          items:\n            $ref: '#/components/schemas/Domain'\n        component:\n          type: array\n          items:\n            $ref: '#/components/schemas/Component'\n    GeneNameType:\n      type: object\n      properties:\n        value:\n          type: string\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n        type:\n          type: string\n          xml:\n            attribute: true\n    Lineage:\n      type: object\n      required:\n        - taxon\n      properties:\n        taxon:\n          type: array\n          items:\n            type: string\n    Proteome:\n      type: object\n      required:\n        - component\n        - name\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        isReferenceProteome:\n          type: boolean\n          default: false\n        isRepresentativeProteome:\n          type: boolean\n          default: false\n        redundantTo:\n          type: string\n        strain:\n          type: string\n        isolate:\n          type: string\n        dbReference:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceType'\n        component:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentType'\n        reference:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReferenceType'\n        redundantProteome:\n          type: array\n          items:\n            $ref: '#/components/schemas/RedundantProteomeType'\n        canonicalGene:\n          type: array\n          items:\n            $ref: '#/components/schemas/CanonicalGene'\n        upid:\n          type: string\n          xml:\n            attribute: true\n        modified:\n          type: string\n          format: date-time\n          xml:\n            attribute: true\n        taxonomy:\n          type: integer\n          format: int64\n          xml:\n            attribute: true\n        source:\n          type: string\n          xml:\n            attribute: true\n        sourceTaxonomy:\n          type: integer\n          format: int64\n          xml:\n            attribute: true\n        superregnum:\n          type: string\n          xml:\n            attribute: true\n          enum:\n            - EUKARYOTA\n            - BACTERIA\n            - VIRUSES\n            - ARCHAEA\n      xml:\n        name: proteome\n    RecommendedName:\n      type: object\n      required:\n        - fullName\n      properties:\n        fullName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        shortName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        ecNumber:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    Sequence:\n      type: object\n      properties:\n        type:\n          type: string\n          xml:\n            attribute: true\n        ref:\n          type: string\n          xml:\n            attribute: true\n    ProteinExistenceType:\n      type: object\n      properties:\n        type:\n          type: string\n          xml:\n            attribute: true\n    CofactorType:\n      type: object\n      required:\n        - dbReference\n        - name\n      properties:\n        name:\n          type: string\n        dbReference:\n          $ref: '#/components/schemas/DbReferenceType'\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n    UPInteraction:\n      type: object\n      required:\n        - accession\n        - interactions\n        - name\n        - proteinExistence\n        - taxonomy\n      properties:\n        accession:\n          type: string\n        name:\n          type: string\n        proteinExistence:\n          type: string\n        taxonomy:\n          type: integer\n          format: int64\n        interactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/IntAct'\n        diseases:\n          type: array\n          items:\n            $ref: '#/components/schemas/DiseaseComment'\n        subcellularLocations:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubcellLocationComment'\n    AlternativeName:\n      type: object\n      properties:\n        fullName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        shortName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        ecNumber:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    ImportedFromType:\n      type: object\n      required:\n        - dbReference\n      properties:\n        dbReference:\n          $ref: '#/components/schemas/DbReferenceType'\n    GeneLocationType:\n      type: object\n      properties:\n        name:\n          type: array\n          items:\n            $ref: '#/components/schemas/StatusType'\n        type:\n          type: string\n          xml:\n            attribute: true\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n    Conflict:\n      type: object\n      properties:\n        sequence:\n          $ref: '#/components/schemas/Sequence'\n        type:\n          type: string\n          xml:\n            attribute: true\n        ref:\n          type: string\n          xml:\n            attribute: true\n    PLocation2GLocationCollection:\n      type: object\n      properties:\n        locations:\n          type: array\n          items:\n            $ref: '#/components/schemas/PLocation2GLocation'\n      xml:\n        name: genomeLocation\n    GenomicLocationType:\n      type: object\n      required:\n        - exon\n      properties:\n        exon:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExonMapType'\n        chromosome:\n          type: string\n          xml:\n            attribute: true\n        start:\n          type: integer\n          format: int64\n          xml:\n            attribute: true\n        end:\n          type: integer\n          format: int64\n          xml:\n            attribute: true\n        reverseStrand:\n          type: boolean\n          xml:\n            name: reverse_strand\n            attribute: true\n          default: false\n    GeneType:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeneNameType'\n    SubcellLocationComment:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - FUNCTION\n            - CATALYTIC_ACTIVITY\n            - COFACTOR\n            - ENZYME_REGULATION\n            - BIOPHYSICOCHEMICAL_PROPERTIES\n            - PATHWAY\n            - SUBUNIT\n            - INTERACTION\n            - SUBCELLULAR_LOCATION\n            - ALTERNATIVE_PRODUCTS\n            - TISSUE_SPECIFICITY\n            - DEVELOPMENTAL_STAGE\n            - INDUCTION\n            - DOMAIN\n            - PTM\n            - RNA_EDITING\n            - MASS_SPECTROMETRY\n            - POLYMORPHISM\n            - DISEASE\n            - DISRUPTION_PHENOTYPE\n            - ALLERGEN\n            - TOXIC_DOSE\n            - BIOTECHNOLOGY\n            - PHARMACEUTICAL\n            - MISCELLANEOUS\n            - SIMILARITY\n            - CAUTION\n            - SEQUENCE_CAUTION\n            - WEBRESOURCE\n            - PAGE\n            - UNKNOWN\n        molecule:\n          type: string\n        locations:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubcellularLocation'\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedString'\n    SubcellularLocation:\n      type: object\n      properties:\n        location:\n          $ref: '#/components/schemas/EvidencedString'\n        topology:\n          $ref: '#/components/schemas/EvidencedString'\n        orientation:\n          $ref: '#/components/schemas/EvidencedString'\n    Kinetics:\n      type: object\n      properties:\n        km:\n          type: array\n          xml:\n            name: KM\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        vmax:\n          type: array\n          xml:\n            name: Vmax\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    Domain:\n      type: object\n      properties:\n        recommendedName:\n          $ref: '#/components/schemas/RecommendedName'\n        alternativeName:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlternativeName'\n        submittedName:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubmittedName'\n        allergenName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        biotechName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        cdAntigenName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        innName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    Link:\n      type: object\n      properties:\n        uri:\n          type: string\n          xml:\n            attribute: true\n    PeptideType:\n      type: object\n      required:\n        - peptideSequence\n      properties:\n        peptideSequence:\n          type: string\n        unique:\n          type: boolean\n          xml:\n            attribute: true\n          default: false\n    EvidenceType:\n      type: object\n      properties:\n        source:\n          $ref: '#/components/schemas/SourceType'\n        importedFrom:\n          $ref: '#/components/schemas/ImportedFromType'\n        type:\n          type: string\n          xml:\n            attribute: true\n        key:\n          type: integer\n          xml:\n            attribute: true\n    FeatureType:\n      type: object\n      required:\n        - location\n      properties:\n        original:\n          type: string\n        variation:\n          type: array\n          items:\n            type: string\n        location:\n          $ref: '#/components/schemas/LocationType'\n        type:\n          type: string\n          xml:\n            attribute: true\n        status:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        description:\n          type: string\n          xml:\n            attribute: true\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n        ref:\n          type: string\n          xml:\n            attribute: true\n    PhDependence:\n      type: object\n      required:\n        - text\n      properties:\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    VariantType:\n      type: object\n      required:\n        - clinicalSignificance\n        - consequenceType\n        - cytogeneticBand\n        - genomicLocation\n        - mutatedType\n        - polyphenPrediction\n        - siftPrediction\n        - wildType\n      properties:\n        cytogeneticBand:\n          type: string\n        genomicLocation:\n          type: string\n        consequenceType:\n          type: string\n        wildType:\n          type: string\n        mutatedType:\n          type: string\n        frequency:\n          type: number\n          format: double\n        polyphenPrediction:\n          $ref: '#/components/schemas/PolyphenPredictionType'\n        siftPrediction:\n          $ref: '#/components/schemas/SiftPredictionType'\n        somaticStatus:\n          type: boolean\n          default: false\n        clinicalSignificance:\n          type: string\n        association:\n          type: array\n          items:\n            $ref: '#/components/schemas/AssociationType'\n        sourceType:\n          type: string\n          xml:\n            attribute: true\n    PLocation2GLocation:\n      type: object\n      properties:\n        accession:\n          type: string\n        taxid:\n          type: integer\n          format: int32\n        chromosome:\n          type: string\n        ensemblTranslationId:\n          type: string\n        proteinStart:\n          type: integer\n          format: int32\n        geneStart:\n          type: integer\n          format: int64\n        proteinEnd:\n          type: integer\n          format: int32\n        geneEnd:\n          type: integer\n          format: int64\n      xml:\n        name: GenomeLocation\n    SequenceType:\n      type: object\n      properties:\n        value:\n          type: string\n        length:\n          type: integer\n          format: int32\n          xml:\n            attribute: true\n        mass:\n          type: integer\n          format: int32\n          xml:\n            attribute: true\n        checksum:\n          type: string\n          xml:\n            attribute: true\n        modified:\n          type: string\n          format: date-time\n          xml:\n            attribute: true\n        version:\n          type: integer\n          format: int32\n          xml:\n            attribute: true\n        precursor:\n          type: boolean\n          xml:\n            attribute: true\n          default: false\n        fragment:\n          type: string\n          xml:\n            attribute: true\n    EvidencedStringType:\n      type: object\n      properties:\n        value:\n          type: string\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n        status:\n          type: string\n          xml:\n            attribute: true\n    SeqFeatureGroupType:\n      type: object\n      properties:\n        name:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n    InteractantType:\n      type: object\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        intactId:\n          type: string\n          xml:\n            attribute: true\n    Entry:\n      type: object\n      required:\n        - accession\n        - name\n        - organism\n        - protein\n        - proteinExistence\n        - reference\n        - sequence\n      properties:\n        accession:\n          type: array\n          items:\n            type: string\n        name:\n          type: array\n          items:\n            type: string\n        protein:\n          $ref: '#/components/schemas/ProteinType'\n        gene:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeneType'\n        organism:\n          $ref: '#/components/schemas/OrganismType'\n        organismHost:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrganismType'\n        geneLocation:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeneLocationType'\n        reference:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReferenceType'\n        comment:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommentType'\n        dbReference:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceType'\n        proteinExistence:\n          $ref: '#/components/schemas/ProteinExistenceType'\n        keyword:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeywordType'\n        feature:\n          type: array\n          items:\n            $ref: '#/components/schemas/FeatureType'\n        evidence:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidenceType'\n        sequence:\n          $ref: '#/components/schemas/SequenceType'\n        dataset:\n          type: string\n          xml:\n            attribute: true\n        created:\n          type: string\n          format: date-time\n          xml:\n            attribute: true\n        modified:\n          type: string\n          format: date-time\n          xml:\n            attribute: true\n        version:\n          type: integer\n          format: int32\n          xml:\n            attribute: true\n      xml:\n        name: entry\n    CommentType:\n      type: object\n      properties:\n        molecule:\n          $ref: '#/components/schemas/MoleculeType'\n        absorption:\n          $ref: '#/components/schemas/Absorption'\n        kinetics:\n          $ref: '#/components/schemas/Kinetics'\n        phDependence:\n          $ref: '#/components/schemas/PhDependence'\n        redoxPotential:\n          $ref: '#/components/schemas/RedoxPotential'\n        temperatureDependence:\n          $ref: '#/components/schemas/TemperatureDependence'\n        cofactor:\n          type: array\n          items:\n            $ref: '#/components/schemas/CofactorType'\n        subcellularLocation:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubcellularLocationType'\n        conflict:\n          $ref: '#/components/schemas/Conflict'\n        link:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        event:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventType'\n        isoform:\n          type: array\n          items:\n            $ref: '#/components/schemas/IsoformType'\n        interactant:\n          type: array\n          items:\n            $ref: '#/components/schemas/InteractantType'\n        organismsDiffer:\n          type: boolean\n          default: false\n        experiments:\n          type: integer\n          format: int32\n        disease:\n          $ref: '#/components/schemas/Disease'\n        location:\n          type: array\n          items:\n            $ref: '#/components/schemas/LocationType'\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        type:\n          type: string\n          xml:\n            attribute: true\n        locationType:\n          type: string\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n        mass:\n          type: number\n          format: float\n          xml:\n            attribute: true\n        error:\n          type: string\n          xml:\n            attribute: true\n        method:\n          type: string\n          xml:\n            attribute: true\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n    Absorption:\n      type: object\n      properties:\n        max:\n          $ref: '#/components/schemas/EvidencedStringType'\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    GnFeatureType:\n      type: object\n      required:\n        - description\n        - genomeLocation\n        - location\n      properties:\n        original:\n          type: string\n        variation:\n          type: array\n          items:\n            type: string\n        location:\n          $ref: '#/components/schemas/LocationType'\n        description:\n          type: string\n        evidence:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidenceType'\n        xrefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceType'\n        variant:\n          $ref: '#/components/schemas/VariantType'\n        peptide:\n          $ref: '#/components/schemas/PeptideType'\n        type:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        genomeLocation:\n          $ref: '#/components/schemas/LocationType'\n    TemperatureDependence:\n      type: object\n      required:\n        - text\n      properties:\n        text:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    Evidence:\n      type: object\n      required:\n        - code\n        - source\n      properties:\n        code:\n          type: string\n          xml:\n            attribute: true\n          pattern: '^ECO:[0-9]{7}$'\n        label:\n          type: string\n          xml:\n            attribute: true\n        source:\n          $ref: '#/components/schemas/DbReferenceObject'\n    Component:\n      type: object\n      properties:\n        recommendedName:\n          $ref: '#/components/schemas/RecommendedName'\n        alternativeName:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlternativeName'\n        submittedName:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubmittedName'\n        allergenName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        biotechName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        cdAntigenName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n        innName:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    NameListType:\n      type: object\n      properties:\n        consortiumOrPerson:\n          type: array\n          items:\n            type: object\n    ComponentType:\n      type: object\n      required:\n        - genomeAccession\n      properties:\n        description:\n          type: string\n        biosampleId:\n          type: string\n        genomeAccession:\n          type: array\n          items:\n            type: string\n        protein:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProteinType'\n        name:\n          type: string\n          xml:\n            attribute: true\n    MoleculeType:\n      type: object\n      properties:\n        value:\n          type: string\n        id:\n          type: string\n          xml:\n            attribute: true\n    SeqFeatureType:\n      type: object\n      required:\n        - lcn\n      properties:\n        ipr:\n          $ref: '#/components/schemas/SeqFeatureGroupType'\n        lcn:\n          type: array\n          items:\n            $ref: '#/components/schemas/LocationType'\n        database:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n    GnCoordinateType:\n      type: object\n      required:\n        - genomicLocation\n      properties:\n        genomicLocation:\n          $ref: '#/components/schemas/GenomicLocationType'\n        feature:\n          type: array\n          items:\n            $ref: '#/components/schemas/GnFeatureType'\n        ensemblGeneId:\n          type: string\n          xml:\n            name: ensembl_gene_id\n            attribute: true\n        ensemblTranscriptId:\n          type: string\n          xml:\n            name: ensembl_transcript_id\n            attribute: true\n        ensemblTranslationId:\n          type: string\n          xml:\n            name: ensembl_translation_id\n            attribute: true\n    DbReference:\n      type: object\n      properties:\n        type:\n          type: string\n        id:\n          type: string\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n        isoform:\n          type: string\n        evidences:\n          type: array\n          items:\n            $ref: '#/components/schemas/Evidence'\n    SubmittedName:\n      type: object\n      required:\n        - fullName\n      properties:\n        fullName:\n          $ref: '#/components/schemas/EvidencedStringType'\n        ecNumber:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidencedStringType'\n    PositionType:\n      type: object\n      properties:\n        position:\n          type: integer\n          xml:\n            attribute: true\n        status:\n          type: string\n          xml:\n            attribute: true\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n    ExonMapType:\n      type: object\n      required:\n        - genomeLocation\n        - proteinLocation\n      properties:\n        proteinLocation:\n          $ref: '#/components/schemas/LocationType'\n        genomeLocation:\n          $ref: '#/components/schemas/LocationType'\n        id:\n          type: string\n          xml:\n            attribute: true\n    AssociationType:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        evidence:\n          type: array\n          items:\n            $ref: '#/components/schemas/EvidenceType'\n        xrefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceType'\n        isDisease:\n          type: boolean\n          xml:\n            attribute: true\n          default: false\n    OrganismType:\n      type: object\n      required:\n        - dbReference\n        - name\n      properties:\n        name:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrganismNameType'\n        dbReference:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceType'\n        lineage:\n          $ref: '#/components/schemas/Lineage'\n        evidence:\n          type: array\n          items:\n            type: integer\n            format: int32\n    CitationType:\n      type: object\n      properties:\n        title:\n          type: string\n        editorList:\n          $ref: '#/components/schemas/NameListType'\n        authorList:\n          $ref: '#/components/schemas/NameListType'\n        locator:\n          type: string\n        dbReference:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceType'\n        type:\n          type: string\n          xml:\n            attribute: true\n        date:\n          type: string\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n        volume:\n          type: string\n          xml:\n            attribute: true\n        first:\n          type: string\n          xml:\n            attribute: true\n        last:\n          type: string\n          xml:\n            attribute: true\n        publisher:\n          type: string\n          xml:\n            attribute: true\n        city:\n          type: string\n          xml:\n            attribute: true\n        db:\n          type: string\n          xml:\n            attribute: true\n        number:\n          type: string\n          xml:\n            attribute: true\n        institute:\n          type: string\n          xml:\n            attribute: true\n        country:\n          type: string\n          xml:\n            attribute: true\n    StatusType:\n      type: object\n      properties:\n        value:\n          type: string\n        status:\n          type: string\n          xml:\n            attribute: true\n    SubmissionType:\n      type: object\n      required:\n        - citation\n      properties:\n        citation:\n          type: string\n        db:\n          type: string\n          xml:\n            attribute: true\n    SourceDataType:\n      type: object\n      properties:\n        strainOrPlasmidOrTransposon:\n          type: array\n          items:\n            type: object\n    ErrorMessage:\n      type: object\n      properties:\n        requestedURL:\n          type: string\n        errorMessage:\n          type: array\n          xml:\n            name: errorMessages\n            wrapped: true\n          items:\n            type: string\n    JournalType:\n      type: object\n      properties:\n        title:\n          type: string\n        dbReference:\n          type: array\n          items:\n            $ref: '#/components/schemas/DbReferenceType'\n        name:\n          type: string\n          xml:\n            attribute: true\n        volume:\n          type: string\n          xml:\n            attribute: true\n        first:\n          type: string\n          xml:\n            attribute: true\n        last:\n          type: string\n          xml:\n            attribute: true\n    LocationType:\n      type: object\n      properties:\n        begin:\n          $ref: '#/components/schemas/PositionType'\n        end:\n          $ref: '#/components/schemas/PositionType'\n        position:\n          $ref: '#/components/schemas/PositionType'\n        sequence:\n          type: string\n          xml:\n            attribute: true\n    DbReferenceObject:\n      type: object\n      required:\n        - alternativeUrl\n        - id\n        - name\n        - reviewed\n        - url\n      properties:\n        name:\n          type: string\n          xml:\n            attribute: true\n        id:\n          type: string\n          xml:\n            attribute: true\n        url:\n          type: string\n          xml:\n            attribute: true\n        alternativeUrl:\n          type: string\n          xml:\n            attribute: true\n        reviewed:\n          type: boolean\n          xml:\n            attribute: true\n          default: false\n        properties:\n          type: object\n    EvidencedString:\n      type: object\n      properties:\n        value:\n          type: string\n        evidences:\n          type: array\n          items:\n            $ref: '#/components/schemas/Evidence'\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/ebi_proteins/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/ebi_proteins/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}