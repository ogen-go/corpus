{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/poetapp/frost-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 13395,
			"content": "openapi: 3.0.1\ninfo:\n  version: \"0.1.0\"\n  title: Po.et Frost API\n  description: Po.et Frost API OpenAPI definition\nservers:\n  - description: QA\n    url: https://frost-api.qa.poetnetwork.net\n  - description: Production\n    url: https://api.frost.po.et\npaths:\n  /health:\n    get:\n      operationId: healthCheck\n      summary: An API health check that returns an OK if all is well.\n      responses: \n        '200':\n          description: OK\n  /accounts:\n    post:\n      operationId: createAccount\n      summary: Create a new account in Frost.\n      description: \u003cb\u003eEmail\u003c/b\u003e required (must be a valid email address format)\u003cbr\u003e \u003cb\u003ePassword\u003c/b\u003e required (minimum 10 characters, maximum 30 characters, 1 lowercase, 1 uppercase, 1 numeric, 1 symbol)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n            example:\n              email: 'frost@po.et'\n              password: 'Letters123456!'\n      responses:\n        '200':\n          description: \"{ \\\"token\\\": \\\"12345abcde6789FGHI\\\" }\"\n        '409':\n          description: The specified account already exists.\n        '422':\n          description: One of the inputs is not valid.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /accounts/profile:\n    get:\n      operationId: getProfile\n      summary: Returns the user profile.\n      parameters:\n        - in: header\n          name: token\n          schema: \n            type: string\n          required: true\n      responses: \n        '200':\n          description: OK\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Profile'\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '409':\n          description: The specified account is not verified.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /accounts/verify:\n    post:\n      operationId: resendVerifyEmail\n      summary: Resend the verification email.\n      parameters:\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request.\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /accounts/verify/{token}:\n    get:\n      operationId: verifyAccount\n      summary: Verify email address by confirming receipt of a token.\n      parameters:\n        - name: token\n          in: path\n          required: true\n          schema:\n            type: string\n            minimum: 1\n      responses:\n        '200':\n          description: OK\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /login:\n    post:\n      operationId: loginAccount\n      summary: Login to receive an access token for the API.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n            example:\n              email: 'frost@po.et'\n              password: 'Letters123456!'\n      responses:\n        '200':\n          description: \"{ \\\"token\\\": \\\"12345abcde6789FGHI\\\" }\"\n        '400':\n          description: The specified resource does not exist.\n        '422':\n          description: One of the inputs is not valid.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /password/reset:\n    post:\n      operationId: passwordReset\n      summary: Reset account password if lost/forgotten.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - 'email'\n              properties:\n                email:\n                  type: string\n            example:\n              email: 'frost@po.et'\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: The specified resource does not exist.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /password/change:\n    post:\n      operationId: passwordChange\n      summary: Change account password.\n      parameters:\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - 'password'\n                - 'oldPassword'\n              properties:\n                password:\n                  type: string\n                oldPassword:\n                  type: string\n            example:\n              password: 'NeWpA$sw0rd'\n              oldPassword: 'OlDpa$sw0rd'\n      responses:\n        '200':\n          description: OK\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '409':\n          description: The specified account is not verified.\n        '422':\n          description: One of the inputs is not valid.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /password/change/token:\n    post:\n      operationId: passwordChangeToken\n      summary: Change account password with token sent by email.\n      parameters:\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - 'password'\n              properties:\n                password:\n                  type: string\n            example:\n              password: 'NeWpA$sw0rd'\n      responses:\n        '200':\n          description: OK\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '409':\n          description: The specified account is not verified.\n        '422':\n          description: One of the inputs is not valid.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /tokens:\n    post:\n      operationId: createToken\n      summary: Create a new API token.\n      parameters:\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenNew'\n            example:\n              network: 'live'\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Could not create the work.\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '409':\n          description: The specified account is not verified.\n        '413':\n          description: Request entity is too large.\n        '422':\n          description: One of the inputs is not valid.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n    get:\n      operationId: getTokens\n      summary: Returns an array of API tokens.\n      parameters:\n        - in: header\n          name: token\n          schema: \n            type: string\n          required: true\n      responses: \n        '200':\n          description: \"{ \\\"apiTokens\\\": [ \\\"12345abcde6789FGHI\\\", \\\"TEST_6789fegh35sk\\\" ] }\"\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /tokens/{tokenId}:\n    delete:\n      operationId: deleteToken\n      summary: Delete an API token by Id.\n      parameters:\n        - in: path\n          name: tokenId\n          schema:\n            type : string\n            minimum: 1\n          required: true\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n      responses: \n        '200':\n          description: OK\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Tokens'\n        '400':\n          description: The specified resource does not exist.\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '422':\n          description: Invalid token.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  \n  /works:\n    post:\n      operationId: createWork\n      summary: Add a new work to the Po.et Network.\n      parameters:\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Work'\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Could not create the work.\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '409':\n          description: The specified account is not verified.\n        '413':\n          description: Request entity is too large.\n        '422':\n          description: One of the inputs is not valid.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n    get:\n      operationId: getAllWorks\n      summary: Returns an array of all works created by the account.\n      parameters:\n          - in: header\n            name: token\n            schema:\n              type: string\n            required: true\n      responses: \n        '200':\n          description: OK\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Works'\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '409':\n          description: The specified account is not verified.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\n  /works/{workId}:\n    get:\n      operationId: getWork\n      summary: Returns a work by Id.\n      parameters:\n        - in: path\n          name: workId\n          schema:\n            type : string\n            minimum: 1\n          required: true\n        - in: header\n          name: token\n          schema:\n            type: string\n          required: true\n      responses: \n        '200':\n          description: OK\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Work'\n        '400':\n          description: Work not found.\n        '403':\n          description: Server failed to authenticate the request. Make sure the value of the Authorization header is formed correctly including the signature.\n        '409':\n          description: The specified account is not verified.\n        '500':\n          description: The server encountered an internal error. Please retry the request.\ncomponents:\n  schemas:\n    Account:\n      type: object\n      required:\n        - 'email'\n        - 'password'\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n    Profile:\n      type: object\n      required:\n        - 'email'\n        - 'createdAt'\n        - 'verified'\n      properties:\n        email:\n          type: string\n        createdAt:\n          type: string\n        verified:\n          type: boolean\n    Token:\n      type: string\n    TokenNew:\n      type: object\n      properties:\n        network:\n          type: string\n    Tokens:\n      type: object\n      required:\n        - 'apiTokens'\n      properties:\n        apiTokens:\n          type: array\n          items:\n            $ref: '#/components/schemas/Token'\n    Work:\n      type: 'object'\n      required:\n        - 'name'\n        - 'datePublished'\n        - 'dateCreated'\n        - 'author'\n        - 'content'\n      properties:\n        name:\n          type: string\n        datePublished:\n          type: string\n          format: date-time\n        dateCreated:\n          type: string\n          format: date-time\n        author:\n          type: string\n        tags:\n          type: string\n        content:\n          type: string\n    Works:\n      type: 'array'\n      items:\n        $ref: '#/components/schemas/Work'\n",
			"canonicalURL": "/github.com/poetapp/frost-api@192cf7c1c6a0d6082c50c7b6930db96e8db1831c/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/poetapp/frost-api/blob/192cf7c1c6a0d6082c50c7b6930db96e8db1831c/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}