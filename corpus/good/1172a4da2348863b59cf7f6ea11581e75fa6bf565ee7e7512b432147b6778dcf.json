{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hevans90/oa3-api-defender"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 4912,
			"content": "openapi: 3.0.0\n# Added by API Auto Mocking Plugin\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/tengroup/tenplatform-api/0.0.2\ninfo:\n  description: This is the V3 API specification\n  version: \"0.0.2\"\n  title: Ten Platform API\ntags:\n  - name: member\n    description: Functionality related to a member\n  - name: user\n    description: Functionality related to a user\npaths:\n  /user/authenticate:\n    post:\n      tags:\n        - user\n      summary: authenticate a user with username and password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - username\n                - password\n              properties:\n                username:\n                  type: string\n                  example: 'user@email.com'\n                password:\n                  type: string\n                  example: 'SuperSweetPassword123!'\n      responses:\n        '200':\n          description: whether user is authenticated or not\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - user\n                  - token\n                properties:\n                  user:\n                    $ref: '#/components/schemas/User'\n                  token:\n                    type: string\n                    example: 'JWT 12341324-234324-2342'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '422':\n          $ref: '#/components/responses/ErrorResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n  /user/logout:\n    delete:\n      security:\n      - jwtAuth: []\n      tags:\n        - user\n      summary: logout currently logged in user\n      responses:\n        '204':\n          description: successful logout\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '422':\n          $ref: '#/components/responses/ErrorResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n  /member/eligibility:\n    get:\n      tags:\n        - member\n      summary: eligibility check\n      operationId: eligibilityCheck\n      description: |\n        By passing in an eligibility type and value, you can check whether a user is eligible for registration\n      parameters:\n        - in: query\n          name: identifierType\n          description: type of eligibility check\n          required: true\n          schema:\n            type: string\n            enum: [cardNumber, phoneNumber]\n          example: 'cardNumber'\n\n        - in: query\n          name: identifierValue\n          description: value of eligibility check\n          required: true\n          schema:\n            type: string\n          example: '98723498792'\n\n      responses:\n        '200':\n          description: eligibility check passed\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - isEligible\n                  - extremelyRequiredProperty\n                properties:\n                  isEligible:\n                    type: string\n                  extremelyRequiredProperty:\n                    type: boolean\n                additionalProperties: false\n\n        '422':\n          $ref: '#/components/responses/ErrorResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n\ncomponents:\n  securitySchemes:\n    jwtAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  responses:\n    ErrorResponse:\n      description: Error response with arrays of ApiGenericErrors and ApiValidationErrors\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ApiGenericError'\n              validationErrors:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ApiValidationError'\n\n  schemas:\n    User:\n      required:\n        - username\n        - memberId\n      properties:\n        username:\n          type: string\n          example: 'user@email.com'\n        memberId:\n          type: string\n          example: '123123-123'\n\n    ApiGenericError:\n      required:\n        - code\n        - message\n        - displayMessage\n      properties:\n        code:\n          type: string\n          example: error code\n        message:\n          type: string\n          example: human readable message\n        displayMessage:\n          type: string\n          example: localized error that can be shown to users\n\n    ApiValidationError:\n      allOf:\n        - $ref: '#/components/schemas/ApiGenericError'\n      required:\n        - fieldName\n      properties:\n        fieldName:\n          type: string\n          example: the name of the input field affected\n",
			"canonicalURL": "/github.com/hevans90/oa3-api-defender@2d2d20a984832d29a26076a6c1b5d00c177e2cd6/-/blob/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hevans90/oa3-api-defender/blob/2d2d20a984832d29a26076a6c1b5d00c177e2cd6/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}