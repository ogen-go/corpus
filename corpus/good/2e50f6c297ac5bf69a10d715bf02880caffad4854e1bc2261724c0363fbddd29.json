{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vircadia/project-apollo"
		},
		"file": {
			"name": "API-Admin.yaml",
			"size": 0,
			"path": "api/API-Admin.yaml",
			"byteSize": 9861,
			"content": "openapi: \"3.0.1\"\ninfo:\n  version: 1.0.1\n  title: Vircadia MetaverseAPI - Administration of Acconts\n  description: Vircadia metaverse-server API for Account listing and management\n  contact:\n    name: Vircadia project\n    url: https://vircadia.com/\n    email: vircadia@vircadia.com\n  license:\n    name: Apache 2.0\n    url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n  parameters:\n    perPageParam:\n      name: per_page\n      description: number of accounts to return\n      in: query\n      schema:\n        type: integer\n        format: int32\n    pageParam:\n      name: page\n      description: group of \"per_page\" accounts to return. Page 3 of 10 per_page returns accounts 21-30.\n      in: query\n      schema:\n        type: integer\n        format: int32\n    filterParam:\n      name: filter\n      description: limit types of acccounts. Comma separated list of \"online\", \"friends\", \"connections\".\n      in: query\n      schema:\n        type: string\n    statusParam:\n      name: status\n      description: limit accounts based on status. One of \"online\"\n      in: query\n      schema:\n        type: string\n    searchParam:\n      name: search\n      description: limit accounts based on search. Unimplimented.\n      in: query\n      schema:\n        type: string\n    accountidParam:\n      name: accountid\n      description: specifying a particular account. Either the account ID (uuid) or username\n      in: path\n      required: true\n      schema:\n        type: string\n    tokenidParam:\n      name: tokenid\n      description: specifying a particular token\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uuid\npaths:\n  /api/v1/accounts:\n    description: |\n      Fetch account information.\n      In general,\n    get:\n      tags:\n        - admin\n        - accounts\n      security:\n        - BearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/perPageParam\"\n        - $ref: \"#/components/parameters/pageParam\"\n        - $ref: \"#/components/parameters/filterParam\"\n        - $ref: \"#/components/parameters/statusParam\"\n        - $ref: \"#/components/parameters/searchParam\"\n      responses:\n        200:\n          description: successful account information fetch.\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - success\n                      - fail\n                  data:\n                    type: object\n                    properties:\n                      accounts:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            accountid:\n                              type: string\n                            username:\n                              type: string\n                            email:\n                              type: string\n                            public_key:\n                              type: string\n                            images:\n                              type: object\n                              properties:\n                                hero:\n                                  type: string\n                                thumbnail:\n                                  type: string\n                                tiny:\n                                  type: string\n                            location:\n                              type: object\n                              properties:\n                                connected:\n                                  type: boolean\n                                path:\n                                  type: string\n                                placeid:\n                                  type: string\n                                  format: uuid\n                                domainid:\n                                  type: string\n                                  format: uuid\n                                availability:\n                                  type: string\n                                  enum:\n                                    - none\n                                    - friends\n                                    - connections\n                                    - all\n                            friends:\n                              type: array\n                              items:\n                                type: string\n                            connections:\n                              type: array\n                              items:\n                                type: string\n                            administrator:\n                              type: boolean\n                              default: false\n                            when_account_created:\n                              type: string\n                              format: date-time\n                            time_of_last_heartbeat:\n                              type: string\n                              format: date-time\n\n  /api/v1/account/{accountid}:\n    parameters:\n      - $ref: \"#/components/parameters/accountidParam\"\n    post:\n      description: |\n        Request to change account property values.\n        Only some properties can be changed.\n        The requestor's authorization must be either the account being\n        changed or an administrator account.\n      tags:\n        - accounts\n        - admin\n      security:\n        - BearerAuth: []\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              type: object\n              properties:\n                accounts:\n                  type: object\n                  properties:\n                    username:\n                      type: string\n                    email:\n                      type: string\n                    public_key:\n                      type: string\n                    images:\n                      type: object\n                      properties:\n                        hero:\n                          type: string\n                        thumbnail:\n                          type: string\n                        tiny:\n                          type: string\n      responses:\n        200:\n          description: successfully set\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - success\n                      - fail\n    delete:\n      description: |\n        Delete an account and its associated data.\n        The requestor must be an administrator account.\n      tags:\n        - admin\n        - accounts\n      security:\n        - BearerAuth: []\n      responses:\n        200:\n          description: account deleted\n          content:\n            \"application/json\":\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - success\n                      - fail\n\n  /api/v1/account/{accountid}/tokens:\n    parameters:\n      - $ref: \"#/components/parameters/accountidParam\"\n    get:\n      description: |\n        Get tokens for an account.\n        This returns all the tokens associated with this account.\n        The requesting account must be either the account or an administrator account.\n      tags:\n        - admin\n        - tokens\n      parameters:\n        - $ref: \"#/components/parameters/perPageParam\"\n        - $ref: \"#/components/parameters/pageParam\"\n      security:\n        - BearerAuth: []\n      responses:\n        200:\n          content:\n            \"application/json\":\n              schema:\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - success\n                      - fail\n                  data:\n                    type: object\n                    properties:\n                      tokens:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            tokenid:\n                              type: string\n                              format: uuid\n                            token:\n                              type: string\n                            refresh_token:\n                              type: string\n                            token_creation_time:\n                              type: string\n                              format: date-time\n                            token_expiration_time:\n                              type: string\n                              format: date-time\n                            scope:\n                              type: string\n                              enum:\n                                - owner\n                                - domain\n\n  /api/v1/account/{accountid}/token/{tokenid}:\n    parameters:\n      - $ref: \"#/components/parameters/accountidParam\"\n      - $ref: \"#/components/parameters/tokenidParam\"\n    get:\n      description: |\n        Delete the identified token.\n        The requesting account must be either the account or an administrator account.\n      tags:\n        - admin\n        - tokens\n      security:\n        - BearerAuth: []\n      responses:\n        200:\n          content:\n            \"application/json\":\n              schema:\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - success\n                      - fail\n\n# vim: tabstop=2 shiftwidth=2 autoindent expandtab\n",
			"canonicalURL": "/github.com/vircadia/project-apollo@c6b8bcac27a54cde2444d214d6081c558a26f23c/-/blob/api/API-Admin.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/vircadia/project-apollo/blob/c6b8bcac27a54cde2444d214d6081c558a26f23c/api/API-Admin.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}