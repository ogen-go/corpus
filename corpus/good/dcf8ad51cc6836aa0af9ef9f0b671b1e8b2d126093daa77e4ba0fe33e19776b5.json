{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Clevyio/nopass.me"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 5694,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: NoPass.me API Documentation\n  version: \"1.0\"\n  description: |\n    [NoPass.me](https://nopass.me) makes it easy to authenticate users without pre-verified accounts. Common use cases include: authenticating chatbot users, verifying access to email addresses, password changes or recovery...\n\n    This service is available as a self-hosted solution (see [Github](https://github.com/Clevyio/nopass.me)) or as a free SaaS software.\n\n    NoPass.me (both SaaS and self-hosted versions) lets you issue, then validate, unique one-time passwords for each account you are looking to authenticate.\n\n    The account validation flow is in 2 steps and goes as follows:\n\n    ![](https://github.com/Clevyio/nopass.me/raw/main/images/diagram.png)\n\n    On your end, you only need to:\n    - initiate an authentication flow when you need to verify a user's identity\n    - verify the user's code when the user enters their authentication code\n\n    If the code is valid (correct code, within the validity window), it means that the user is probably who they say they are. Otherwise (incorrect or expired code), you will receive an unsuccessful response from NoPass.me: you should not let the user in!\n\n    NoPass.me handles the full security workflow for you: generating and sending the code, verifying its validity, rejecting invalid or expired codes, and cleaning up all data afterwards. It is completely safe: **no user data is ever stored in clear text!**\n\n\nservers:\n  - url: https://api.nopass.me/v1\nsecurity:\n  - ApiKeyAuth: []\n\npaths:\n  /verify/init:\n    post:\n      summary: Generate and send an authentication code\n      description: Generate and send an authentication code\n      operationId: init\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InitRequest\"\n      responses:\n        \"201\":\n          description: Success Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InitResponse\"\n        default:\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /verify/validate:\n    post:\n      summary: Validate an authentication code\n      description: Validate an authentication code. Any unsuccessful response (either the response code is not 200 or an error is generated or `response.body.success` is not true) means that the code given by the user is not valid.\n      operationId: validate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ValidateRequest\"\n      responses:\n        \"200\":\n          description: Success Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidateResponse\"\n        default:\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-Api-Key\n\n  schemas:\n    InitRequest:\n      type: object\n      required:\n        - target\n      properties:\n        target:\n          type: string\n          description: Actual target to verify. If target_type is email, should be a valid email address\n          example: john.doe@company.com\n          format: email\n        target_type:\n          type: string\n          description: Type of target. Currently only email is supported\n          enum: [\"email\"]\n          example: email\n          default: email\n        subject:\n          type: string\n          description: Subject line of the notification email\n          maxLength: 256\n          example: Your NoPass.me Authorization Code\n          default: Your NoPass.me Authorization Code\n        content:\n          type: string\n          description: HTML content for the notification email\n          pattern: '\\%code\\%'\n          maxLength: 1000\n          example: \u003ch1\u003eHello ðŸ‘‹\u003c/h1\u003e\\n\\n\u003cp\u003eYour authentication code is \u003cb\u003e%code%\u003c/b\u003e.\u003c/p\u003e\\n\\n\u003cp\u003eStay safe on the internet!\u003c/p\u003e\u003cp\u003eThe \u003ca href=\"https://nopass.me\"\u003eNoPass.me\u003c/a\u003e team\u003c/p\u003e\n          default: \u003ch1\u003eHello ðŸ‘‹\u003c/h1\u003e\\n\\n\u003cp\u003eYour authentication code is \u003cb\u003e%code%\u003c/b\u003e.\u003c/p\u003e\\n\\n\u003cp\u003eStay safe on the internet!\u003c/p\u003e\u003cp\u003eThe \u003ca href=\"https://nopass.me\"\u003eNoPass.me\u003c/a\u003e team\u003c/p\u003e\n        expires_in:\n          type: integer\n          description: In seconds, the duration of the authentication code\n          example: 300\n          default: 300\n          minimum: 0\n          maximum: 604800\n\n    InitResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n\n    ValidateRequest:\n      type: object\n      required:\n        - target\n        - code\n      properties:\n        target:\n          type: string\n          description: Actual target to verify. If target_type is email, should be a valid email address\n          example: john.doe@company.com\n          format: email\n        target_type:\n          type: string\n          description: Type of target. Currently only email is supported\n          enum: [\"email\"]\n          example: email\n          default: email\n        code:\n          type: integer\n          example: 123456\n          description: The code received by the target\n\n    ValidateResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: Whether the code is valid or not\n\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/Clevyio/nopass.me@601944accf1331c9860231ebfcc9825b99b00054/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Clevyio/nopass.me/blob/601944accf1331c9860231ebfcc9825b99b00054/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}