{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rapi-doc/RapiDoc"
		},
		"file": {
			"name": "collapsable.yaml",
			"size": 0,
			"path": "docs/specs/collapsable.yaml",
			"byteSize": 3991,
			"content": "openapi: 3.0.0\ninfo:\n  title: Collapsible Tags\n  version: 1.0.0\n  description: | \n\n    Tags in openapi are used for grouping and ordering operations.\u003cbr/\u003e\n    In RapiDoc's `view` mode these tags acts like an accordions, which you can expand or collapse.\n\n    By default all the tags are expanded, but if you wish to collapse certain tags at the beginning when the spec is loaded,\u003cbr/\u003e\n    you may do so by using `x-tag-expanded` extension under `tags` section which can contain `true` or `false`\n\n    below is an example how to achieve it\n\n    ```yaml\n      openapi: 3.0.0\n      info:\n        version: 1.0.0\n        title: Collapsible Tags\n      paths:\n        ...\n        ...\n      tags:\n        - name: My Tag 1\n        - name: My Tag 2\n          x-tag-expanded: false # \u003c-- extension to control expand collapse tags in RapiDoc\n        - name: My Tag 3\n        - name: My Tag 4\n    ```\n    Even if a tag is closed, you can create links to operations inside them.\u003cbr/\u003e \n    Upon clicking the link, it will open the tag if it is closed and navigate to operation's location \n    \n    Example: **[Link](#get-/path1-in-closed-tag)** for `path1-in-closed-tag`\n\n\npaths:\n  /path1-in-open-tag:\n    get:\n      summary: Path 1 under open tag \n      tags: \n        - Open\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: age\n          in: query\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Happy response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n\n  /path2-in-open-tag:\n    get:\n      summary: Path 2 under open tag \n      tags: \n        - Open\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Happy response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/job'\n          \n  /path1-in-closed-tag:\n    get:\n      summary: Path 1 under closed tag \n      tags: \n        - Closed\n      parameters:\n        - name: city\n          in: query\n          schema:\n            type: string\n        - name: state\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Happy response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/job'\n  /path2-in-closed-tag:\n    get:\n      summary: Path 2 under closed tag \n      tags: \n        - Closed\n      parameters:\n        - name: grade\n          in: query\n          schema:\n            type: string\n        - name: salary\n          in: query\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Happy response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/job'\n\n  /No-Tags:\n    get:\n      summary: This path dont have any tag associated with it. (It gets created from the path) \n      responses:\n        '200':\n          description: Happy response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n\n\ntags:\n  - name: Open\n    description: This tag is **open** by default, and it contains 2 paths inside it. \n  - name: Closed\n    description: This tag is **closed** in the begining when the spec loads. It achieved by using `x-tag-expanded` extension \n    x-tag-expanded: false\n\ncomponents:\n  schemas:\n    user:\n      type: object\n      properties:\n        id:\n          description: User ID\n          type: integer\n        email:\n          description: User Email\n          type: string\n        name:\n          description: First Name\n          type: string\n    job:\n      type: object\n      properties:\n        job:\n          type: string\n        grade:\n          type: string\n",
			"canonicalURL": "/github.com/rapi-doc/RapiDoc@3cc2bcc742fa84f1207e9b460032750bdada228d/-/blob/docs/specs/collapsable.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rapi-doc/RapiDoc/blob/3cc2bcc742fa84f1207e9b460032750bdada228d/docs/specs/collapsable.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}