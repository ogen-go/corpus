{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/google/gnostic-grpc"
		},
		"file": {
			"name": "bookstore.yaml",
			"size": 0,
			"path": "examples/end-to-end-grpc-gateway/bookstore.yaml",
			"byteSize": 6605,
			"content": "---\nopenapi: 3.0.0\nservers:\n  - url: https://generated-bookstore.appspot.com/\ninfo:\n  description: A simple Bookstore API example.\n  title: Bookstore\n  version: 1.0.0\npaths:\n  \"/shelves\":\n    get:\n      description: Return all shelves in the bookstore.\n      operationId: listShelves\n      responses:\n        '200':\n          description: List of shelves in the bookstore.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/listShelvesResponse\"\n      security: []\n    post:\n      description: Create a new shelf in the bookstore.\n      operationId: createShelf\n      responses:\n        '200':\n          description: A newly created shelf resource.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/shelf\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/shelf\"\n        description: A shelf resource to create.\n        required: true\n    delete:\n      description: Delete all shelves.\n      operationId: deleteShelves\n      responses:\n        default:\n          description: An empty response body.\n  \"/shelves/{shelf}\":\n    get:\n      description: Get a single shelf resource with the given ID.\n      operationId: getShelf\n      parameters:\n        - description: ID of the shelf to get.\n          in: path\n          name: shelf\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: A shelf resource.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/shelf\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n    delete:\n      description: Delete a single shelf with the given ID.\n      operationId: deleteShelf\n      parameters:\n        - description: ID of the shelf to delete.\n          in: path\n          name: shelf\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        default:\n          description: An empty response body.\n  \"/shelves/{shelf}/books\":\n    get:\n      description: Return all books in a shelf with the given ID.\n      operationId: listBooks\n      parameters:\n        - description: ID of the shelf whose books should be returned.\n          in: path\n          name: shelf\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: List of books on the specified shelf.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/listBooksResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n    post:\n      description: Create a new book on the shelf.\n      operationId: createBook\n      parameters:\n        - description: ID of the shelf where the book should be created.\n          in: path\n          name: shelf\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: A newly created book resource.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/book\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/book\"\n        description: Book to create.\n        required: true\n  \"/shelves/{shelf}/books/{book}\":\n    get:\n      description: Get a single book with a given ID from a shelf.\n      operationId: getBook\n      parameters:\n        - description: ID of the shelf from which to get the book.\n          in: path\n          name: shelf\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: ID of the book to get from the shelf.\n          in: path\n          name: book\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: A book resource.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/book\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error\"\n    delete:\n      description: Delete a single book with a given ID from a shelf.\n      operationId: deleteBook\n      parameters:\n        - description: ID of the shelf from which to delete the book.\n          in: path\n          name: shelf\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: ID of the book to delete from the shelf.\n          in: path\n          name: book\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        default:\n          description: An empty response body.\nsecurity:\n  - api_key: []\ncomponents:\n  schemas:\n    book:\n      properties:\n        author:\n          type: string\n        name:\n          type: string\n        title:\n          type: string\n      required:\n        - name\n        - author\n        - title\n      type: object\n    listBooksResponse:\n      properties:\n        books:\n          items:\n            \"$ref\": \"#/components/schemas/book\"\n          type: array\n      required:\n        - books\n      type: object\n    listShelvesResponse:\n      properties:\n        shelves:\n          items:\n            \"$ref\": \"#/components/schemas/shelf\"\n          type: array\n      type: object\n    shelf:\n      properties:\n        name:\n          type: string\n        theme:\n          type: string\n      required:\n        - name\n        - theme\n      type: object\n    error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n      type: object\n  securitySchemes:\n    api_key:\n      in: query\n      name: key\n      type: apiKey\n",
			"canonicalURL": "/github.com/google/gnostic-grpc@f3d8e2b99545fb32829abd46455662266b92e3ba/-/blob/examples/end-to-end-grpc-gateway/bookstore.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/google/gnostic-grpc/blob/f3d8e2b99545fb32829abd46455662266b92e3ba/examples/end-to-end-grpc-gateway/bookstore.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}