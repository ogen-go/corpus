{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "ObservationUnitHierarchyLevel.yaml",
			"size": 0,
			"path": "Specification/Components/Schemas/ObservationUnitHierarchyLevel.yaml",
			"byteSize": 1219,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    ObservationUnitHierarchyLevel: \n      title: ObservationUnitHierarchyLevel\n      type: object\n      description: |-\n        Observation levels indicate the granularity level at which the measurements are taken. `levelName` defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field \u003e 0) and higher numbers are at the bottom of the hierarchy (ie plant \u003e 6). \n      properties:\n        levelName: \n          description: A name for this level\n          type: string\n          enum:\n          - study\n          - field\n          - entry\n          - rep\n          - block\n          - sub-block\n          - plot\n          - sub-plot\n          - plant\n          - pot\n          - sample\n          example: plot\n        levelOrder: \n          description: |-\n            `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`'s lower numbers are at the top of the hierarchy (ie field -\u003e 1) and higher numbers are at the bottom of the hierarchy (ie plant -\u003e 9).\n          type: integer\n          example: 2",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@5252d84f331840650fffbca6cb8cece10a65cea6/-/blob/Specification/Components/Schemas/ObservationUnitHierarchyLevel.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/5252d84f331840650fffbca6cb8cece10a65cea6/Specification/Components/Schemas/ObservationUnitHierarchyLevel.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}