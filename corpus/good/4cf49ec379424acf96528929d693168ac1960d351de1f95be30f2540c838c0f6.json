{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/deepmap/oapi-codegen"
		},
		"file": {
			"name": "test-schema.yaml",
			"size": 0,
			"path": "internal/test/test-schema.yaml",
			"byteSize": 9625,
			"content": "openapi: \"3.0.1\"\ninfo:\n  version: 1.0.0\n  title: Test Server\n  license:\n    name: MIT\nservers:\n  - url: http://openapitest.deepmap.ai\npaths:\n  /response-with-reference:\n    get:\n      summary: get response with reference\n      operationId: getResponseWithReference\n      responses:\n        '200':\n          $ref: \"#/components/responses/ResponseWithReference\"\n  /reserved-keyword:\n    get:\n      summary: get with reserved keyword\n      operationId: getReservedKeyword\n      responses:\n        '200':\n          description: example of a response with a reserved keyword\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReservedKeyword\"\n  /every-type-optional:\n    get:\n      summary: get every type optional\n      operationId: getEveryTypeOptional\n      responses:\n        '200':\n          description: a example of every type with an optional value\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EveryTypeOptional\"\n  /get-simple:\n    get:\n      summary: Get resource via simple path\n      operationId: getSimple\n      responses:\n        '200':\n          description: A simple response for a simple path\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/some_object\"\n  /get-with-type/{content_type}:\n    get:\n      summary: Get an object by ID\n      operationId: getWithContentType\n      parameters:\n        - name: content_type\n          in: path\n          required: true\n          description: Get with a parameter and multiple output types\n          schema:\n            type: string\n            enum:\n              - text\n              - json\n      responses:\n        '200':\n          description: A simple response for a simple path\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/some_object\"\n            text/plain:\n              schema:\n                type: string\n  /get-with-references/{global_argument}/{argument}:\n    summary: GetWithReferences\n    parameters:\n      - name: global_argument\n        in: path\n        required: true\n        description: A parameter in global path scope\n        schema:\n          type: integer\n          format: int64\n    get:\n      summary: Getter with referenced parameter and referenced response\n      operationId: getWithReferences\n      parameters:\n        - $ref: \"#/components/parameters/argument\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/SimpleResponse\"\n  /get-with-args:\n    summary: GetWithArgs\n    get:\n      summary: Getter with referenced parameter and referenced response\n      operationId: getWithArgs\n      parameters:\n        - name: optional_argument\n          in: query\n          required: false\n          description: An optional query argument\n          schema:\n            type: integer\n            format: int64\n        - name: required_argument\n          in: query\n          required: true\n          description: An optional query argument\n          schema:\n            type: integer\n            format: int64\n        - name: header_argument\n          in: header\n          required: false\n          description: An optional query argument\n          schema:\n            type: integer\n            format: int32\n        #- name: cookie_argument\n        #  in: cookie\n        #  required: false\n        #  description: An optional query argument\n        #  schema:\n        #    type: integer\n        #    format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/SimpleResponse\"\n  /resource/{argument}:\n    post:\n      summary: Create a resource\n      operationId: createResource\n      parameters:\n        - $ref: \"#/components/parameters/argument\"\n      requestBody:\n        description: Required body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EveryTypeRequired'\n      responses:\n        '200':\n          $ref: \"#/components/responses/SimpleResponse\"\n  /resource2/{inline_argument}:\n    post:\n      summary: Create a resource with inline parameter\n      operationId: createResource2\n      parameters:\n        - name: inline_argument\n          in: path\n          required: true\n          description: Some argument\n          schema:\n            type: integer\n        - name: inline_query_argument\n          in: query\n          description: Some query argument\n          schema:\n            type: integer\n      requestBody:\n        description: Optional body\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Resource'\n      responses:\n        '200':\n          $ref: \"#/components/responses/SimpleResponse\"\n  /resource3/{fallthrough}:\n    put:\n      summary: |\n        Update a resource with inline body. The parameter name is a reserved\n        keyword, so make sure that gets prefixed to avoid syntax errors\n      operationId: updateResource3\n      parameters:\n        - name: fallthrough\n          in: path\n          required: true\n          description: Some argument\n          schema:\n            type: integer\n      requestBody:\n        description: required inline body\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  type: integer\n                name:\n                  type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/SimpleResponse\"\ncomponents:\n  parameters:\n    argument:\n      name: argument\n      in: path\n      required: true\n      description: Some argument\n      schema:\n        type: string\n  schemas:\n    ThisShouldBePruned:\n      properties:\n        name:\n          type: string\n    # This is intentionally named in snake case\n    some_object:\n      properties:\n        name:\n          type: string\n      required:\n        - name\n    Resource:\n      properties:\n        name:\n          type: string\n        value:\n          type: number\n          format: float\n      required:\n        - name\n        - value\n    EveryTypeRequired:\n      properties:\n        int32_field:\n          type: integer\n          format: int32\n        int64_field:\n          type: integer\n          format: int64\n        int_field:\n          type: integer\n        double_field:\n          type: number\n          format: double\n        float_field:\n          type: number\n          format: float\n        number_field:\n          type: number\n        bool_field:\n          type: boolean\n        string_field:\n          type: string\n        email_field:\n          type: string\n          format: email\n        date_field:\n          type: string\n          format: date\n        byte_field:\n          type: string\n          format: byte\n        date_time_field:\n          type: string\n          format: date-time\n        inline_object_field:\n          properties:\n            name:\n              type: string\n            number:\n              type: integer\n          required:\n            - name\n            - number\n        referenced_field:\n          $ref: \"#/components/schemas/some_object\"\n        array_inline_field:\n          type: array\n          items:\n            type: integer\n        array_referenced_field:\n          type: array\n          items:\n            $ref: \"#/components/schemas/some_object\"\n      required:\n        - int32_field\n        - int64_field\n        - int_field\n        - double_field\n        - float_field\n        - number_field\n        - bool_field\n        - string_field\n        - date_field\n        - date_time_field\n        - inline_object_field\n        - referenced_field\n        - array_inline_field\n        - array_referenced_field\n        - byte_field\n    EveryTypeOptional:\n      properties:\n        int32_field:\n          type: integer\n          format: int32\n        int64_field:\n          type: integer\n          format: int64\n        int_field:\n          type: integer\n        double_field:\n          type: number\n          format: double\n        float_field:\n          type: number\n          format: float\n        number_field:\n          type: number\n        bool_field:\n          type: boolean\n        string_field:\n          type: string\n        date_field:\n          type: string\n          format: date\n        byte_field:\n          type: string\n          format: byte\n        date_time_field:\n          type: string\n          format: date-time\n        inline_object_field:\n          properties:\n            name:\n              type: string\n            number:\n              type: integer\n          required:\n            - name\n            - number\n        referenced_field:\n          $ref: \"#/components/schemas/some_object\"\n        array_inline_field:\n          type: array\n          items:\n            type: integer\n        array_referenced_field:\n          type: array\n          items:\n            $ref: \"#/components/schemas/some_object\"\n    ReservedKeyword:\n      properties:\n        channel:\n          type: string\n      required: [ type ]\n  responses:\n    SimpleResponse:\n      description: A simple response object\n      content:\n        application/json:\n          schema:\n            properties:\n              name:\n                type: string\n            required:\n              - name\n    ResponseWithReference:\n      description: A response object with a type reference\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/some_object\"\n",
			"canonicalURL": "/github.com/deepmap/oapi-codegen@7da811e1cf30c76606750b20b7998543d36a25cb/-/blob/internal/test/test-schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/deepmap/oapi-codegen/blob/7da811e1cf30c76606750b20b7998543d36a25cb/internal/test/test-schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}