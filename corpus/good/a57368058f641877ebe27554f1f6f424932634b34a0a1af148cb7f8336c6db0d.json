{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CloudNativeSDWAN/cnwan-reader"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 9408,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: cnwan@cisco.com\n  description: \"The CN-WAN Reader implements the [service discovery](https://en.wikipedia.org/wiki/Service_discovery)\\\n    \\ pattern by connecting to a service registry and observing changes in registered\\\n    \\ services/endpoints. Detected changes are then processed and sent as events\\\n    \\ to the API endpoints defined below.\\n\\nEvents are **sent** to the following\\\n    \\ endpoints, thus any program interested in receiving them must generate the\\\n    \\ *server* code from this OpenAPI specification and define their own logic in\\\n    \\ the generated code.\\n\\nBy default, the CN-WAN Reader expects the server that\\\n    \\ will receive events to operate on port `80` and receive events on `/cnwan/events`,\\\n    \\ but if your server uses a different port/endpoint you can override this value\\\n    \\ on the generated server code with the one your server is using. Once done,\\\n    \\ when launching the CN-WAN Reader specify the correct endpoint by providing it\\\n    \\ as a command line argument, e.g. with `--adaptor-api localhost:9909` events\\\n    \\ will be sent on `localhost:9909/events`, and with `--adaptor-api example.com/another/path`\\\n    \\ events will be sent to `example.com/another/path/events`.\\n\\nAs a final note,\\\n    \\ please take in mind that this specification can also serve as a reference/guide\\\n    \\ for the creation of an adaptor. As a matter of fact, your adaptor can even\\\n    \\ provided its own OpenAPI which includes the endpoints described here with different\\\n    \\ descriptions and different meanings for the response codes, or it can even\\\n    \\ include other endpoints as well. But as long as formats, returned response\\\n    \\ code and the endpoints of this specification match the ones on your adaptor's\\\n    \\ specification, compatibility with CN-WAN Reader is guaranteed.\"\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: github.com/CloudNativeSDWAN/cnwan-reader/blob/master/LICENSE\n  title: CN-WAN Reader API\n  version: 1.0.0 beta\nexternalDocs:\n  description: Find out more about the CN-WAN Reader\n  url: github.com/CloudNativeSDWAN/cnwan-reader\nservers:\n- url: http://localhost/cnwan\ntags:\n- description: Everything about service events\n  externalDocs:\n    description: Find out more\n    url: github.com/CloudNativeSDWAN/cnwan-reader\n  name: events\npaths:\n  /events:\n    post:\n      operationId: sendEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/Event'\n              type: array\n        description: List of observed events\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                With body:\n                  value:\n                    status: 200\n                    title: OK\n                    description: All resources processed successfully.\n                Empty body:\n                  value: {}\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: OK, all resources have been processed successfully. Body can\n            optionally include more information about the response or be empty.\n        \"204\":\n          description: No content, all resources have been processed successfully.\n        \"207\":\n          content:\n            application/json:\n              examples:\n                Some resources failed:\n                  value:\n                    status: 207\n                    title: INVALID RESOURCES\n                    description: Some resources have not been processed successfully.\n                      List of failed resources is included.\n                    errors:\n                    - status: 400\n                      resource: custom-endpoint\n                      title: MISSING METADATA KEY\n                      description: The required metadata key was not found in this\n                        resource\n                    - status: 404\n                      resource: example-endpoint\n                      title: NOT FOUND\n                      description: 'Cannot process DELETE event: resource does not\n                        exist.'\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: One or more resources have not been processed successfully.\n            A list of errors is provided.\n        \"404\":\n          description: Not found, most probably the `--adaptor-api` argument in CN-WAN\n            Reader is misconfigured.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Generic internal server error:\n                  value:\n                    status: 500\n                    title: INTERNAL SERVER ERROR\n                    description: An unexpected error occurred while handling the request.\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: Internal Server Error, something went wrong on the adaptor\n            side. A `Response` object *may* be returned, containing a description\n            of why the adaptor had this error and what went wrong.\n        \"503\":\n          content:\n            application/json:\n              examples:\n                Authentication error:\n                  value:\n                    status: 503\n                    title: AUTHENTICATION ERROR\n                    description: Request rejected because wrong or invalid credentials\n                      have been provided to the adaptor.\n                Service unavailalbe:\n                  value:\n                    status: 503\n                    title: SERVICE UNAVAILABLE\n                    description: Adaptor encountered an unexpected error while trying\n                      to update resources on Service X.\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: Service Unavailable. The returned `Response` object may contain\n            a description of why the service is not available.\n      summary: Last observed events\n      tags:\n      - events\ncomponents:\n  schemas:\n    Event:\n      example:\n        service:\n          metadata:\n          - value: uhd-video\n            key: profile\n          address: 131.37.88.10\n          port: 8080\n          name: customers-endpoint\n        event: create\n      properties:\n        event:\n          description: The event that occurred\n          enum:\n          - create\n          - update\n          - delete\n          type: string\n        service:\n          $ref: '#/components/schemas/Service'\n      required:\n      - service\n      - type\n      type: object\n    Service:\n      description: The subject of this event\n      example:\n        metadata:\n        - value: uhd-video\n          key: profile\n        address: 131.37.88.10\n        port: 8080\n        name: customers-endpoint\n      properties:\n        name:\n          description: The observed name of the endpoint.\n          example: customers-endpoint\n          type: string\n        address:\n          description: The observed IP address of the endpoint. Can be IPv4 or IPv6.\n          example: 131.37.88.10\n          type: string\n        port:\n          description: The observed port of the endpoint.\n          example: 8080\n          type: integer\n        metadata:\n          items:\n            $ref: '#/components/schemas/Metadata'\n          type: array\n      required:\n      - address\n      - name\n      - port\n      type: object\n    Metadata:\n      description: The metadata observed. The list only includes the ones that have\n        been included in the command line arguments of the CN-WAN Reader.\n      example:\n        value: uhd-video\n        key: profile\n      properties:\n        key:\n          description: The name of the key in the metadata, if present in the object.\n            Included only if required as argument in the CN-WAN Reader.\n          example: profile\n          type: string\n        value:\n          description: The observed value of this key in the metadata.\n          example: uhd-video\n          type: string\n      required:\n      - key\n      - value\n      type: object\n    Response:\n      allOf:\n      - $ref: '#/components/schemas/ResourceResponse'\n      - $ref: '#/components/schemas/Errors'\n      description: Response returned.\n      type: object\n    ResourceResponse:\n      description: Information about the error occurred with the resource.\n      properties:\n        status:\n          description: The HTTP status code.\n          example: 404\n          type: integer\n        resource:\n          description: The name of the resource that triggered this error.\n          example: customer-endpoint\n          type: string\n        title:\n          description: A short title describing the error.\n          example: NOT FOUND\n          type: string\n        description:\n          description: Additional information about the error.\n          example: The resource does not exist on the server\n          type: string\n      required:\n      - description\n      - title\n      type: object\n    Errors:\n      properties:\n        errors:\n          description: A list of errors occurred, if any.\n          items:\n            $ref: '#/components/schemas/ResourceResponse'\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/CloudNativeSDWAN/cnwan-reader@5cdba7f56c458fefa966ed4321b64e0fcc48948f/-/blob/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CloudNativeSDWAN/cnwan-reader/blob/5cdba7f56c458fefa966ed4321b64e0fcc48948f/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}