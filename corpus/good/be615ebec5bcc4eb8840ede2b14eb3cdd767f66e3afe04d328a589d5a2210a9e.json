{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bosagora/agora"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "source/agora/api/spec.yaml",
			"byteSize": 15155,
			"content": "openapi: 3.0.0\ninfo:\n  title: Agora API\n  description: BOA CoinNet node Rest API\n  version: 0.0.1\n\npaths:\n  /handshake:\n    post:\n      summary: establish a long connection to this node\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                peer:\n                  type: string\n      responses:\n        '200':\n          description: An Identity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  key:\n                    type: string\n                  utxo:\n                    type: string\n                  mac:\n                    type: string\n        default:\n          description: Unexpected error\n  /node_info:\n    get:\n      summary: The peer information on this node\n      responses:\n        '200':\n          description: The peer information on this node\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  state:\n                    type: integer\n                    format: uint8\n                  addresses:\n                    $ref: '#/components/schemas/Set'\n\n        default:\n          description: Unexpected error\n  /receive_preimage:\n    post:\n      summary: Reveals a pre-image\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                preimage:\n                  type: object\n                  properties:\n                    hash:\n                      type: string\n                    utxo:\n                      type: string\n                    height:\n                      type: string\n      responses:\n        '200':\n          description: Success\n        default:\n          description: Unexpected error\n  /block_height:\n    get:\n      summary: the highest block height\n      responses:\n        '200':\n          description: the highest block height\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: uint64\n        default:\n          description: Unexpected error\n  /preimages:\n    get:\n      summary: validators' pre-image information\n      parameters:\n        - in: query\n          name: start_height\n          required: true\n          schema:\n            type: integer\n            format: uint64\n        - in: query\n          name: end_height\n          required: true\n          schema:\n            type: integer\n            format: uint64\n      responses:\n        '200':\n          description: validators' pre-image information\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PreImage'\n        default:\n          description: Unexpected error\n  /blocks_from:\n    get:\n      summary: fetch blocks\n      parameters:\n        - in: query\n          name: height\n          required: true\n          schema:\n            type: integer\n            format: uint64\n        - in: query\n          name: max_blocks\n          required: true\n          schema:\n            type: integer\n            format: uint64\n      responses:\n        '200':\n          description: blocks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Block'\n        default:\n          description: Unexpected error\n  /transaction:\n    put:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tx:\n                  $ref: '#/components/schemas/Transaction'\n      responses:\n        '200':\n          description: Success\n        default:\n          description: Unexpected error\n  /local_time:\n    get:\n      summary: local clock time of this node\n      responses:\n        '200':\n          description: the highest block height\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: uint64\n        default:\n          description: Unexpected error\n  /enroll_validator:\n    post:\n      summary: Enroll as a validator\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                enroll:\n                  $ref: '#/components/schemas/Enrollment'\n      responses:\n        '200':\n          description: Success\n        default:\n          description: Unexpected error\n  /block_headers:\n    get:\n      summary: fetch headers\n      parameters:\n        - in: query\n          name: heights\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Set'\n      responses:\n        '200':\n          description: headers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BlockHeader'\n        default:\n          description: Unexpected error\n  /receive_block_signature:\n    post:\n      summary: Receives a block signature\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidatorBlockSig'\n      responses:\n        '200':\n          description: Success\n        default:\n          description: Unexpected error\n  /receive_envelope:\n    post:\n      summary: Receives an SCP envelope and processes it\n      requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Envelope'\n      responses:\n        '200':\n          description: Success\n        default:\n          description: Unexpected error\n  /transactions:\n    get:\n      summary: fetch txs\n      parameters:\n        - in: query\n          name: heights\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Set'\n      responses:\n        '200':\n          description: Txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n        default:\n          description: Unexpected error\n  /has_transaction_hash:\n    get:\n      summary: test if TX is in the pool\n      parameters:\n        - in: query\n          name: tx\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: boolean\n        default:\n          description: Unexpected error\n  /blocks/{height}:\n    get:\n      parameters:\n        - name: height\n          in: path\n          description: Height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: validators' pre-image information\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/Block'\n        default:\n          description: Unexpected error\n  /merkle_path:\n    get:\n      summary: merkle path\n      parameters:\n        - in: query\n          name: height\n          required: true\n          schema:\n            type: integer\n        - in: query\n          name: hash\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        default:\n          description: Unexpected error\n  /preimage:\n    get:\n      summary: Get validator's pre-image information\n      parameters:\n        - in: query\n          name: enroll_key\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreImage'\n        default:\n          description: Unexpected error\n  /validators:\n    get:\n      parameters:\n      - in: query\n        name: height\n        schema:\n          type: integer\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidatorInfo'\n        default:\n          description: Unexpected error\n\ncomponents:\n  schemas:\n\n    PreImage:\n      type: object\n      properties:\n        utxo:\n          type: string\n        hash:\n          type: string\n        height:\n          type: string\n\n    ValidatorInfo:\n      type: object\n      properties:\n        enrolled:\n          type: string\n        address:\n          type: string\n        stake:\n          type: string\n        preimage:\n          $ref: '#/components/schemas/PreImage'\n\n    Input:\n      type: object\n      properties:\n        utxo:\n          type: string\n        unlock:\n          type: object\n          properties:\n            bytes:\n              type: string\n        unlock_age:\n          type: integer\n          format: uint64\n\n    Output:\n      type: object\n      properties:\n        type:\n          type: integer\n          format: uint32\n        lock:\n          type: object\n          properties:\n            type:\n              type: integer\n              format: uint8\n            bytes:\n              type: string\n        value:\n          type: string\n\n    Transaction:\n      type: object\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Input'\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Output'\n        payload:\n          type: string\n        lock_height:\n          type: string\n\n    Enrollment:\n      type: object\n      properties:\n        commitment:\n          type: string\n        enroll_sig:\n          type: string\n        utxo_key:\n          type: string\n\n    BlockHeader:\n      type: object\n      properties:\n        prev_block:\n          type: string\n        merkle_root:\n          type: string\n        random_seed:\n          type: string\n        signature:\n          type: string\n        validators:\n          type: string\n        height:\n          type: string\n        enrollments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Enrollment'\n        missing_validators:\n          type: array\n          items:\n            type: integer\n            format: uint32\n\n    Block:\n      type: object\n      properties:\n        header:\n          $ref: '#/components/schemas/BlockHeader'\n        txs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transaction'\n        merkle_tree:\n          type: array\n          items:\n            type: string\n\n    Set:\n      type: object\n      properties:\n        _set:\n          type: object\n          additionalProperties:\n            type: boolean\n\n    ValidatorBlockSig:\n      type: object\n      properties:\n        public_key:\n          type: string\n        signature:\n          type: string\n        height:\n          type: string\n\n    Nominate:\n      type: object\n      properties:\n        accepted:\n          type: object\n          properties:\n            base:\n              type: string\n        quorumSetHash:\n          type: object\n          properties:\n            base:\n              type: string\n        votes:\n          type: object\n          properties:\n            base:\n              type: string\n\n    Prepare:\n      type: object\n      properties:\n        prepared:\n          type: object\n          properties:\n            counter:\n              type: integer\n            value:\n              type: object\n              properties:\n                base:\n                  type: string\n        preparedPrime:\n          type: object\n          properties:\n            counter:\n              type: integer\n            value:\n              type: object\n              properties:\n                base:\n                  type: string\n        nC:\n          type: integer\n        nH:\n          type: integer\n        quorumSetHash:\n          type: object\n          properties:\n            base:\n              type: string\n        ballot:\n          type: object\n          properties:\n            counter:\n              type: integer\n            value:\n              type: object\n              properties:\n                base:\n                  type: string\n\n    Confirm:\n      type: object\n      properties:\n        nPrepared:\n          type: integer\n        value_sig:\n          type: object\n          properties:\n            base:\n              type: string\n        nH:\n          type: integer\n        nCommit:\n          type: integer\n        quorumSetHash:\n          type: object\n          properties:\n            base:\n              type: string\n        ballot:\n          type: object\n          properties:\n            counter:\n              type: integer\n            value:\n              type: object\n              properties:\n                base:\n                  type: string\n\n    Externalize:\n      type: object\n      properties:\n        nH:\n          type: integer\n        commitQuorumSetHash:\n          type: object\n          properties:\n            base:\n              type: string\n        commit:\n          type: object\n          properties:\n            counter:\n              type: integer\n            value:\n              type: object\n              properties:\n                base:\n                  type: string\n\n    Envelope:\n      type: object\n      properties:\n        signature:\n          type: object\n          properties:\n            base:\n              type: string\n        statement:\n          type: object\n          properties:\n            nodeID:\n              type: object\n              properties:\n                base:\n                  type: string\n            pledges:\n              oneOf:\n                - type: object\n                  properties:\n                    prepare:\n                      $ref: '#/components/schemas/Prepare'\n                - type: object\n                  properties:\n                    confirm:\n                      $ref: '#/components/schemas/Confirm'\n                - type: object\n                  properties:\n                    externalize:\n                      $ref: '#/components/schemas/Externalize'\n                - type: object\n                  properties:\n                    nominate:\n                      $ref: '#/components/schemas/Nominate'\n            slotIndex:\n              type: integer\n",
			"canonicalURL": "/github.com/bosagora/agora@0a0be385f44d3d6f558bac74cc32a9b00e2bf76f/-/blob/source/agora/api/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bosagora/agora/blob/0a0be385f44d3d6f558bac74cc32a9b00e2bf76f/source/agora/api/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}