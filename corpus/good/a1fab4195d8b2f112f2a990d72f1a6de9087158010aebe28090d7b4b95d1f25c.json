{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mia-ajuda/Backend"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "docs/swagger.yaml",
			"byteSize": 29397,
			"content": "openapi: 3.0.0\ninfo:\n  version: v1\n  title: API MiaAjuda\n  description: API MiaAjuda\n  termsOfService: None\n  contact:\n    name: Mia Ajuda\n    url: https://github.com/mia-ajuda\nservers:\n  - url: http://localhost:8000/api\npaths:\n  /user:\n    post:\n      tags:\n        - User\n      operationId: postUser\n      description: Rota de criação de usuário\n      parameters:\n        - name: hasUser\n          in: query\n          required: false\n          description: Parâmetro que indica se o usuário possui ou não um usuário. Só deve ser usado quando a conta for criada usando o Facebook ou gmail, onde o hasUser deve ser true\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostUserRequest'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostUserResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - User\n      operationId: putUser\n      description: Rota de edição de usuário\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutUserRequest'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostUserResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n    delete:\n      security:\n        - bearerAuth: []\n      tags:\n        - User\n      operationId: deleteUser\n      description: Rota de deleção lógica de usuário\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostUserResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  '/user/adress':\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - User\n      operationId: putUserAdress\n      description: Rota de edição de endereço do usuário\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutUserAdressRequest'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostUserResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  '/user/location':\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - User\n      operationId: putUserLocation\n      description: Rota de edição de localização do usuário\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutUserLocationRequest'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostUserResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /user/getUser/{userId}:\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - User\n      operationId: GetUserByIdOrToken\n      description: Rota para obter detalhes de um usuário por id\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostUserResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /groupRisk:  \n    get:\n      tags:\n        - User\n      operationId: getGroupRisk\n      description: Rota de obtenção da lista de grupos de risco\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupRiskResponse'\n  /checkUserExistence/{value}:  \n    get:\n      tags:\n        - User\n      operationId: checkUserExistence\n      description: Rota de verificação de existência de um usuário\n      parameters:\n        - name: value\n          in: path\n          required: true\n          schema:\n            type: string\n            description: Um email ou cpf do usuário.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/checkUserExistenceResponse'\n  \n  /help:\n    post:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: postHelp\n      description: Rota de criação de pedidos de ajuda\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostHelpRequest'\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostHelpResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: getHelpByList\n      description: Rota de obtenção de ajudas próximas ou não\n      parameters:\n        - name: id.except\n          in: query\n          description: Caso queira obter as ajudas com exceção das que possuem o ajudante com o id especificado \n          schema:\n            type: string\n        - name: id.helper\n          in: query\n          description: Caso queira obter as ajudas de um ajudante específico \n          schema:\n            type: string\n        - name: status\n          in: query\n          description: Caso queira especificar o status das ajudas que serão retornadas \n          schema:\n            type: string\n        - name: categoryId\n          in: query\n          description: Array de id de categorias separados por vírgula. \n          schema:\n            type: string\n        - name: near\n          in: query\n          description: Booleano que indica se as ajudas devem estar próximas à determinada coordenada. Atributo obrigatório se coords for enviado.\n          schema:\n            type: boolean\n        - name: id.coords\n          in: query\n          description: Array de coordenadas separadas por vírgula.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHelpListResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Nenhum ajuda encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /help/{id}:\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: getHelpById\n      description: Rota para obter detalhes de um pedido de ajuda pelo id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHelpResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Ajuda não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n    delete:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: deleteHelpById\n      description: Rota para deletar uma pedido de ajuda pelo id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deleteHelpResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /help/possibleHelpers/{idHelp}/{idHelper}:\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: putPossibleHelpersById\n      description: Rota para inserção de possível ajudante (idHelper) em dada ajuda (idHelp)\n      parameters:\n        - name: idHelp\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: idHelper\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success\n        '400':\n          description: Ocorreu um erro no processamento da solicitação\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /help/chooseHelper/{idHelp}/{idHelper}:\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: putChooseHelperById\n      description: Rota para confirmação de escolha de um ajudante (idHelper) em uma dada ajuda (idHelp)\n      parameters:\n        - name: idHelp\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: idHelper\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success\n        '400':\n          description: Ocorreu um erro no processamento da solicitação\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /help/helperConfirmation/{helpId}/{helperId}:\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: putHelperConfirmationById\n      description: Rota para confirmação de ajuda efetivada (helpId) por dado ajudante (helperId)\n      parameters:\n        - name: helpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: helperId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHelpResponse'\n        '400':\n          description: Ocorreu um erro no processamento da solicitação\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /help/ownerConfirmation/{helpId}/{ownerId}:\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - Help\n      operationId: putOwnerConfirmationById\n      description: Rota para confirmação de ajuda efetivada (helpId) pelo dono do pedido de ajuda (ownerId)\n      parameters:\n        - name: helpId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ownerId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHelpResponse'\n        '400':\n          description: Ocorreu um erro no processamento da solicitação\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n\n  /category:\n    get:\n      tags:\n        - Category\n      operationId: GetAllCategory\n      description: Rota para obter as categorias dos pedidos de ajuda\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CategoryResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n  /category/{id}:\n    get:\n      tags:\n        - Category\n      operationId: GetCategoryById\n      description: Rota para obter detalhes de uma categoria de pedido de ajuda\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n\n  /notification/user/{id}:\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - Notification\n      operationId: getAllUserNotifications\n      description: Rota para obter o histórico de todas as notificações recebidas por um determinado usuário\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Sucess\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NotificationResponse'\n        '401':\n          description: Usuário não autorizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '403':\n          description: Usuário não está autenticado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n        '404':\n          description: Aplicação não encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetailsResponse'\n\ncomponents:\n  schemas:\n    \n    ############### User ################\n    \n    PostUserRequest:\n      type: object\n      properties:\n        groupRisc:\n          type: array\n          items: \n            type: string\n        name: \n          type: string\n        email: \n          type: string\n        birthday:\n          type: string\n          format: date\n        cpf: \n          type: string\n        photo: \n          type: string\n        address:\n          type: object\n          properties:\n            cep: \n              type: string\n            number: \n              type: number\n            city: \n              type: string\n            state: \n              type: string\n            complement: \n              type: string\n        password: \n          type: string\n          minLength: 8\n        latitude: \n          type: number\n        longitude: \n          type: number\n        phone: \n          type: string\n          minLength: 9\n      required: \n        - name\n        - email\n        - cpf\n        - password\n    \n    PutUserRequest:\n      type: object\n      properties:\n        photo: \n          type: string\n        name: \n          type: string\n        notificationToken: \n          type: string\n        deviceId:\n          type: string\n          \n    PutUserLocationRequest:\n      type: object\n      properties:\n        latutide: \n          type: number\n        longitude: \n          type: number\n    \n    PutUserAdressRequest:\n      type: object\n      properties:\n        cep: \n          type: string\n        number: \n          type: string\n        city: \n          type: string\n        state: \n          type: string\n        complement:\n          type: string\n          \n    PostUserResponse:\n      type: object\n      properties:\n        ismentalHealthProfessional: \n          type: boolean\n        active: \n          type: boolean\n        _id: \n          type: string\n        location: \n          type: object\n          properties:\n            coordinates: \n              type: array\n              items:\n                type: number\n            id:\n              type: string\n            type:\n              type: string\n              default: Point\n        groupRisc:\n          type: array\n          items: \n            type: string\n        name: \n          type: string\n        email: \n          type: string\n        birthday:\n          type: string\n          format: date\n        cpf: \n          type: string\n        photo: \n          type: string\n        address:\n          type: object\n          properties:\n            cep: \n              type: string\n            number: \n              type: number\n            city: \n              type: string\n            state: \n              type: string\n            complement: \n              type: string\n        password: \n          type: string\n        latitude: \n          type: number\n        longitude: \n          type: number\n        phone: \n          type: string\n    \n    GroupRiskResponse:\n      type: object\n      properties:\n        dc:\n          type: string\n          default: Doença respiratória\n          description: Doença respiratória\n        hiv: \n          type: string\n          default: HIV\n          description: HIV\n        diab: \n          type: string\n          default: Diabetes\n          description: Diabetes\n        hiperT: \n          type: string\n          default: Hipertensão\n          description: Hipertensão\n        doenCardio: \n          type: string\n          default: Doenças cardiovasculares\n          description: Doenças cardiovasculares\n          \n    checkUserExistenceResponse:\n      type: boolean\n        \n    \n    ############# End User ##############\n\n    ############ Start Help #############\n\n    PostHelpRequest:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        categoryId:\n          type: string\n        ownerId:\n          type: string\n      required: \n        - title\n        - description\n        - categoryId\n        - ownerId\n    \n    PostHelpResponse:\n      type: object\n      properties:\n        _id:\n          type: string\n        status:\n          type: string\n          default: waiting\n        possibleHelpers:\n          type: array\n          default: []\n          items:\n            type: string\n        active:\n          type: boolean\n          default: true\n        title:\n          type: string\n        description:\n          type: string\n        categoryId:\n          type: string\n        ownerId:\n          type: string\n        creationDate:\n          type: string\n          format: date\n        user:\n          $ref: '#/components/schemas/PostUserResponse'\n        category:\n          type: array\n          items:\n            $ref: '#/components/schemas/CategoryResponse'\n    \n    GetHelpListResponse:\n      type: array\n      items:\n        type: object\n        properties:\n          _id:\n            type: string\n          status:\n            type: string\n          possibleHelpers:\n            type: array\n            items:\n              $ref: '#/components/schemas/PostUserResponse'\n          active:\n            type: boolean\n          title: \n            type: string\n          description: \n            type: string\n          categoryId: \n            type: string\n          ownerId:\n            type: string\n          finishedDate:\n            type: string\n            format: date\n          creationDate:\n            type: string\n            format: date\n          user:\n            $ref: '#/components/schemas/PostUserResponse'\n          category:\n            type: array\n            items:\n              type: object\n              properties:\n                _id:\n                  type: string\n                active:\n                  type: string\n                name:\n                  type: string\n                description:\n                  type: string\n        \n    GetHelpResponse:\n      type: object\n      properties:\n        _id:\n          type: string\n        status:\n          type: string\n          enum:\n            - waiting\n            - on_going\n            - finished\n            - owner_finished\n            - helper_finished\n        possibleHelpers:\n          type: array\n          items:\n            type: string\n        active:\n          type: boolean\n          default: true\n        title:\n          type: string\n        description:\n          type: string\n        categoryId:\n          type: string\n        ownerId:\n          type: string\n        creationDate:\n          type: string\n          format: date\n        finishedDate:\n          type: string\n          format: date\n        helperId:\n          type: string\n          format: date\n    \n    deleteHelpResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Help 5eb33263b863da00274ce1be deleted!\n\n    ############# End Help ##############\n\n    ########## Start Category ###########\n\n    CategoryResponse:\n      type: object\n      properties:\n        _id:\n          type: string\n        active:\n          type: boolean\n        name:\n          type: string\n        description:\n          type: string\n   \n    ########### End Category ###########\n\n    ######## Start Notification ########\n\n    NotificationResponse:\n      type: object\n      properties:\n        _id:\n          type: string\n        userId:\n          type: string\n        helpId:\n          type: string\n        title:\n          type: string\n        body:\n          type: string\n        registerDate:\n          type: string\n          format: date\n        notificationType:\n          type: string\n          enum:\n            - ajudaRecebida\n            - ajudaAceita\n            - ajudaFinalizada\n            - ajudaExpirada\n            - outros\n\n    ######### End Notification #########\n    \n    ############## Misc ################\n\n    ProblemDetailsResponse:\n      type: object\n      properties:\n        error:\n          type: string\n          \n    ############## Misc ################\n    \n  securitySchemes:\n    bearerAuth:            \n      type: http\n      scheme: bearer\n      bearerFormat: JWT   ",
			"canonicalURL": "/github.com/mia-ajuda/Backend@9b9f64052db1d53c45e8e31eacc7d6a703345832/-/blob/docs/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mia-ajuda/Backend/blob/9b9f64052db1d53c45e8e31eacc7d6a703345832/docs/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}