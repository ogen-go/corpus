{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/schemacrawler/SchemaCrawler-Web-Application"
		},
		"file": {
			"name": "schemacrawler-web-application.yaml",
			"size": 0,
			"path": "src/main/resources/api/schemacrawler-web-application.yaml",
			"byteSize": 7413,
			"content": "openapi: 3.0.3\ninfo:\n  title: SchemaCrawler Web Application\n  description: Create a SchemaCrawler schema diagram from an uploaded SQLite database file\n  version: '16.16.17.1'\n  license:\n    name: Eclipse Public License (EPL-2.0)\n    url: https://www.eclipse.org/legal/epl-2.0/\n  contact:\n    name: SchemaCrawler\n    email: sualeh@schemacrawler.com\n    url: https://www.schemacrawler.com\ntags:\n  - name: diagram-requests\n    description: Create a SchemaCrawler schema diagram\n  - name: diagram-results\n    description: Retrieve a SchemaCrawler schema diagram\npaths:\n  /diagrams:\n    post:\n      summary: Create a SchemaCrawler schema diagram\n      description: Makes a request to create a SchemaCrawler schema diagram\n      operationId: diagram-request\n      tags:\n        - diagram-requests\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/DiagramRequest'\n                - $ref: '#/components/schemas/OnRequestParameters'\n            examples:\n              diagram-request-basic:\n                $ref: '#/components/examples/diagram-request-basic'\n              diagram-request-complete:\n                $ref: '#/components/examples/diagram-request-complete'\n      responses:\n        '201':\n          $ref: '#/components/responses/created-diagram'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '500':\n          $ref: '#/components/responses/server-error'\n  /diagrams/{key}:\n    description: Retrieve a SchemaCrawler schema diagram request\n    get:\n      tags:\n        - diagram-results\n      operationId: retrieve-results\n      parameters:\n        - $ref: '#/components/parameters/key'\n      responses:\n        '200':\n          $ref: '#/components/responses/retrieved-request'\n        '400':\n          description: Bad request\n        '404':\n          description: Results not found\n  /diagrams/{key}/diagram:\n    description: Retrieve a SchemaCrawler schema diagram\n    get:\n      tags:\n        - diagram-results\n      operationId: retrieve-diagram-image\n      parameters:\n        - $ref: '#/components/parameters/key'\n      responses:\n        '200':\n          description: OK\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\ncomponents:\n  schemas:\n    DiagramKey:\n      description: Unique key identifying each request\n      type: string\n      minLength: 12\n      maxLength: 12\n      pattern: '[a-z0-9]{12}'\n      readOnly: true # Returned by GET, not used in POST/PUT/PATCH\n    DiagramRequest:\n      type: object\n      properties:\n        key:\n          $ref: '#/components/schemas/DiagramKey'\n        name:\n          description: Name of the user\n          type: string\n          minLength: 2\n          maxLength: 255\n        email:\n          description: Email of the user\n          type: string\n          format: email\n          minLength: 5\n          maxLength: 255\n        title:\n          description: Diagram title\n          type: string\n          minLength: 0\n          maxLength: 255\n        file:\n          description: Uploaded SQLite database file\n          type: string\n          format: binary\n        error:\n          description: Error message\n          type: string\n          readOnly: true # Returned by GET, not used in POST/PUT/PATCH\n        timestamp:\n          description: Request timestamp in UTC\n          type: string\n          format: date-time\n          readOnly: true # Returned by GET, not used in POST/PUT/PATCH\n    OnRequestParameters:\n      type: object\n      required:\n        - name\n        - email\n        - file\n    OnResponseParameters:\n      type: object\n      required:\n        - key\n        - timestamp\n    OnErrorParameters:\n      type: object\n      required:\n        - error\n  parameters:\n    key:\n      name: key\n      description: Diagram key for lookups\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/DiagramKey'\n  responses:\n    retrieved-request:\n      description: Good diagram request information\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/DiagramRequest'\n              - $ref: '#/components/schemas/OnResponseParameters'\n          examples:\n            diagram-response-good:\n              $ref: '#/components/examples/diagram-response-good'\n      links:\n        retrieve-diagram-image-by-key:\n          $ref: '#/components/links/retrieve-results-by-key'\n    created-diagram:\n      description: Created diagram request information\n      headers:\n        Location:\n          description: Location of a newly created resource\n          schema:\n            type: string\n            format: uri\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/DiagramRequest'\n              - $ref: '#/components/schemas/OnResponseParameters'\n          examples:\n            diagram-response-good:\n              $ref: '#/components/examples/diagram-response-good'\n      links:\n        retrieve-results-by-key:\n          $ref: '#/components/links/retrieve-results-by-key'\n        retrieve-diagram-image-by-key:\n          $ref: '#/components/links/retrieve-results-by-key'\n    bad-request:\n      description: Diagram request information with error\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/DiagramRequest'\n              - $ref: '#/components/schemas/OnResponseParameters'\n              - $ref: '#/components/schemas/OnErrorParameters'\n          examples:\n            diagram-response-good:\n              $ref: '#/components/examples/diagram-response-error'\n    server-error:\n      description: Diagram request information with error\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/DiagramRequest'\n              - $ref: '#/components/schemas/OnResponseParameters'\n              - $ref: '#/components/schemas/OnErrorParameters'\n          examples:\n            diagram-response-good:\n              $ref: '#/components/examples/diagram-response-error'\n  links:\n    retrieve-results-by-key:\n      operationId: retrieve-results\n      parameters:\n        key: '$response.body#/key'\n      description: The 'key' from the response can be used as a path parameter\n    retrieve-diagram-image-by-key:\n      operationId: retrieve-diagram-image\n      parameters:\n        key: '$response.body#/key'\n      description: The 'key' from the response can be used as a path parameter\n  examples:\n    diagram-request-basic:\n      value:\n        name: Sualeh Fatehi\n        email: sualeh@hotmail.com\n        file: test.db\n    diagram-request-complete:\n      value:\n        name: Sualeh Fatehi\n        email: sualeh@hotmail.com\n        title: Test schema diagram\n        file: test.db\n    diagram-response-good:\n      value:\n        key: 38yyfzj0f5mk\n        name: Sualeh Fatehi\n        email: sualeh@hotmail.com\n        file: test.db\n        timestamp: '2021-12-11T04:28:59.237Z'\n    diagram-response-error:\n      value:\n        key: 38xxfzj0f5mk\n        name: Sualeh Fatehi\n        email: sualeh@hotmail.com\n        file: test.db\n        timestamp: '2021-12-11T04:28:59.237Z'\n        error: Expected SQLite database, but got content of text/plain\n",
			"canonicalURL": "/github.com/schemacrawler/SchemaCrawler-Web-Application@9ca87943d87b83a79460e18d60a25386a7bbe0bb/-/blob/src/main/resources/api/schemacrawler-web-application.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/schemacrawler/SchemaCrawler-Web-Application/blob/9ca87943d87b83a79460e18d60a25386a7bbe0bb/src/main/resources/api/schemacrawler-web-application.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}